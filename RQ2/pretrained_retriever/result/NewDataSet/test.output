0	assertEquals ( "property not set correctly", 0.25, bean. getDoubleProperty ( ), 0.00001 )
1	Assert. assertEquals ( wrappedBitSetBitmapBitSet. size ( ), bitSet. size ( ) )
2	assertEquals ( contentType, httpURLConnection. getRequestProperty ( "Accepts" ) )
3	assertTrue ( p1. equals ( null ) )
4	assertThat ( result. isValid ( ), is ( false ) )
5	assertTrue ( minMax. fill ( board ) )
6	assertEquals ( 0, connPerRoute. getMaxPerRoute ( route ) )
7	Assert. assertEquals ( ( new GeometricMean ( ) ). evaluate ( scores ), stats. getGeoMean ( ), 0 )
8	assertThat ( sortedPlugins, hasItems ( plugin1, plugin2, plugin3, plugin4 ) )
9	XmlAssert. assertEquals ( EXPECTED_XML_RESPONSE, xmlResponse )
10	assertEquals ( "", result )
11	Assert. assertEquals ( vector, new Vector ( 5, 10, 15 ) )
12	assertEquals ( "Triangle area is not correct", 0, a, epsilon )
13	assertLog ( Log. DEBUG, "test debug argument argument2" )
14	assertPaths ( asList ( component. group ( ), component. name ( ), component. version ( ) ), paths, true )
15	assertEquals ( "INSERT INTO CustomNamePropertyEntity(name) VALUES(?)", Utils. singleLine ( sql ) )
16	assertThat ( isValid, is ( false ) )
17	tester. assertRenderedPage ( HomePage. class )
18	assertEquals ( "A1", ctrl. getCell ( A1 ). getText ( ) )
19	assertFalse ( "isLoaded should return false if all required elements are displayed and " + "RequireAll annotation is used.", testView. isLoaded ( ) )
20	assertEquals ( "POINT (0 0 0)", ClobType. getString ( ( ClobType ) Evaluator. evaluate ( ex ) ) )
21	Assert. assertTrue ( this. manager. connect ( this. person1, this. family1 ) )
22	assertClients ( registryAdapterService, noProxyList, REGISTRY_PROXY_NULL_VALUE )
23	assertThat ( actualBrowser, IsEqualIgnoringCase. equalToIgnoringCase ( expectedBrowserCapabilityKey ) )
24	assertEquals ( Arrays. asList ( aa, ab, ac ), kittens )
25	assertEquals ( 1, db. getAllLinks ( ). size ( ) )
26	assertTrue ( result )
27	assertEquals ( "XMLHttpRequest", requestImpl. xhr ( ) )
28	assertEquals ( 5, result )
29	assertEquals ( List. of ( new Text ( "line1" ), new Text ( "line2" ) ), output )
30	assertEquals ( "Date parsing is wrong", expectedDate, mapper. readBitemporalDate ( columns, "vt_to" ). toDate ( ) )
31	assertThat ( target, is ( instanceOf ( Flow. class ) ) )
32	assertEquals ( "0x51", options. getPort ( ) )
33	Assert. assertNull ( cGroupsBlkioResourceHandlerImpl. reacquireContainer ( containerIdMock ) )
34	Assert. assertEquals ( 1, heigth, 0.001 )
35	assertTrue ( lineages. size ( ) == 2 )
36	Assert. assertFalse ( new LogAdapter ( "N/A", mockConfigThread ( ) ). isErrorEnabled ( ) )
37	assertTrue ( groupsManager. isGroupMember ( sess, group3, member ) )
38	Assert. assertEquals ( "0", result )
39	assertEquals ( set ( FlagsWithZero. V0, FlagsWithZero. V1, FlagsWithZero. V2, FlagsWithZero. V4, FlagsWithZero. V8 ), set ( positionValues ) )
40	assertTrue ( brutalAds. hasKarma ( 20 ) )
41	assertEquals ( true, m. matches ( ) )
42	assertThat ( updateSuccessful, equalTo ( false ) )
43	Assert. assertTrue ( "Stub exception was not forwarded.", stubFailed )
44	assertTrue ( Arrays. equals ( data, decompressed ) )
45	assertEquals ( result, "ASM: " )
46	paths. assertHasDigest ( INFO, actual, algorithm, expected )
47	assertEquals ( indexOfLastScoreCalc, indexOfLastMedRec )
48	Assert. assertFalse ( this. mocker. supports ( this. document ) )
49	assertEquals ( expected, real )
50	assertTrue ( "Following base items are missing: " + Arrays. toString ( missing. toArray ( ) ), missing. isEmpty ( ) )
51	Assert. assertTrue ( ModuleUtil. matchRequiredVersions ( openmrsVersion, requiredOpenmrsVersion ) )
52	assertEquals ( ordered, result )
53	assertEquals ( "The resource you are attempting to access cannot be found", error. getString ( "reason" ) )
54	assertEquals ( "probability", 0.01313, probability, 0.00001 )
55	assertEquals ( "foo", application. getNamespaces ( ). get ( foo ) )
56	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"yes\\"?><test/>", stringifiedTestObject )
57	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff40_" ) )
58	assertEquals ( expected, actual )
59	assertEquals ( "_cat/shards/testIndex", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
60	assertNull ( user )
61	assertEquals ( 404, response. getStatus ( ) )
62	assertTrue ( getTaint ( bc. imei )!= 0 )
63	assertEquals ( expResult, result )
64	assertEquals ( System. getenv ( "USER" ), changeLogParameters. getValue ( "USER", null ) )
65	assertEquals ( expected, result )
66	assertThat ( PlainDate. of ( 2000, 12, 1 ). with ( element. atMinimal ( ) ), is ( PlainDate. of ( 2000, 12, 2 ) ) )
67	assertThat ( job. getDuedate ( ), is ( addSeconds ( removalTime, START_DELAY ) ) )
68	assertEquals ( "X", CodeBuilder. fromCode ( code ). toString ( ) )
69	assertEquals ( expResult, result )
70	Assert. assertEquals ( PRIO_NODE, compoundWrite. apply ( EmptyNode. Empty ( ) ) )
71	assertEquals ( 0, serverStatus. getTotalTime ( ) )
72	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"answer\\":{\\"headers\\":{\\"P-Header\\":\\"value goes here\\",\\"Remote-Party-ID\\":\\"\\\\\\"John Doe\\\\\\"<sip:jdoe@foo.com>;party=calling;id-type=subscriber;privacy=full;screen=yes\\"}}},{\\"say\\":[{\\"value\\":\\"Hello, you were the first to answer.\\",\\"name\\":\\"say\\"}]}]}" )
73	assertEquals ( expected, actual )
74	assertEquals ( uri1, uri2 )
75	assertFalse ( "Did not request compression but request was compressed", testHttpServer. wasLastRequestBodyCompressed ( ) )
76	assertEquals ( ">a >b >c <c <b >d <d <a ", rec. buffer. toString ( ) )
77	assertEquals ( "x/y{@c}(@c:n = 1.0) and (@c:g = '987')", SelectorStepBuilder. toString ( steps ) )
78	assertEquals ( 1, target. getFilters ( ). size ( ) )
79	Assert. assertTrue ( true )
80	assertEquals ( "�尖�尖�尖�尖��\\n" + "��     ��\\n" + "��     ��\\n" + "��     ��\\n" + "��     ��\\n" + "��     ��\\n" + "��     ��\\n" + "��     ��\\n" + "��     ��\\n" + "��     ��\\n" + "��     ��\\n" + "��     ��\\n" + "��
81	assertEquals ( 2, ret )
82	assertEquals ( "Translation failed", AuthorizationException. class, pelopsException. getClass ( ) )
83	assertEquals ( expected, crs )
84	assertEquals ( expected, result )
85	Assert. assertEquals ( expectedResponse, proxy. sayHello ( message ) )
86	assertEquals ( val. getPeriods ( ), 3654 )
87	UnitTestUtils. assertEquals ( new double [ ] { 8, 4, 1 }, b. toArray ( ), 1.0e-12 )
88	assertEquals ( "test", property. getValue ( ) )
89	assertEquals ( BigInteger. ZERO, wallet. getBalance ( ) )
90	assertIdentical ( "/simple.owl", unmerged )
91	assertResultSet ( res )
92	assertEquals ( genotypeData1. toString ( ), genotypeData2. toString ( ) )
93	assertEquals ( masterRoot, rootDir )
94	assertEquals ( "user", userDataMap. get ( "user" ) )
95	assertEquals ( HttpStatusCode. NOT_MODIFIED. getStatusCode ( ), request. execute ( ). getStatusCode ( ) )
96	response. then ( ). log ( ). ifValidationFails ( ). assertThat ( )
97	assertEquals ( expected, actualQuery )
98	Assert. assertNotNull ( zoo )
99	assertEquals ( 3, interfaces. size ( ) )
100	context. assertIsSatisfied ( )
101	assertTrue ( matcher. doCredentialsMatch ( token, account ) )
102	assertNotNull ( state )
103	assertEquals ( expectedQuery, actualQuery )
104	Assert. assertArrayEquals ( expected, actualBoolean )
105	assertNotNull ( fixture )
106	assertThat ( getProcessingError ( ), containsString ( "Missing required parameter: externalRestEnabled" ) )
107	assertEquals ( future, underTest. doCollect ( futures, collector ) )
108	assertEquals ( expected, settings. getProperties ( ) )
109	PSLTest. assertRule ( dataStore, input [ i ], expected [ i ] )
110	UnitTestUtils. assertChiSquareAccept ( new String [ ] { "0", "1", "2" }, expected, observed, 0.01 )
111	assertThat ( runtimeInfo. getRuntimeClassName ( ), is ( "org.talend.components.simplefileio.runtime.SimpleFileIODatastoreRuntime" ) )
112	assertTrue ( sut. isEmpty ( ) )
113	assertEquals ( expected, actual )
114	assertTrue ( waitingPacketsQueue. isEmpty ( ) )
115	assertEquals ( "bound changed, event must be fired", 1, report. getEventCount ( EventType. UPPER_BOUND_CHANGED ) )
116	assertNotNull ( AuthorizedConnectApp. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
117	Assert. assertEquals ( truststorePath2, System. getProperty ( "javax.net.ssl.truststorePath" ) )
118	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFLoteEnvioRetornoRecebimentoInfo ( ). toString ( ) )
119	assertEquals ( 2, unionWithStruct. innerStructSize ( ) )
120	assertEquals ( "The records number is correct " + clusterName. getName ( ), 2, resultIterator. size ( ) )
121	assertTrue ( "Wrong text node title", output. contains ( "Title" ) )
122	assertEquals ( 2, ranges. size ( ) )
123	assertEquals ( i1, i2 )
124	assertSelect ( vars, binding ( vars, "\\"foo\\"", "\\"bar\\"" ), binding ( vars, "\\"1\\"", "\\"2\\"" ) )
125	assertEquals ( 0x7B, leis. readUnsignedInt ( ) )
126	assertTrue ( true )
127	assertEquals ( "192.168.0.0/8", configuration. getNetworkMask ( ) )
128	assertTrue ( uvp. getFirstData ( ) == 25.2 )
129	assertEquals ( "Failed to generate enum switch block", SWITCH_BLOCK_ENUM, s )
130	assertNotNull ( r )
131	assertEquals ( BPResultType. PASS, result. getResultType ( ) )
132	assertEquals ( - 0.123, empty. getLatitudeError ( ), 0.001 )
133	assertEquals ( 1, config. getCustomFilterDTOs ( ). size ( ) )
134	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + destPdf, sourceFolder + cmpPdf, destinationFolder ) )
135	assertTrue ( equals )
136	assertEquals ( expectedQuery, actualQuery )
137	assertEquals ( "Valid cid without dash test failed.", CID_INVALID, AdWordsSessionUtil. getClientCustomerId ( session ) )
138	assertEquals ( "[pm1.g1.e1 || pm1.g1.e2 || pm1.g1.e3 || pm1.g1.e4, pm1.g2.e1 || pm1.g2.e2 ]", query. getProjectedSymbols ( ). toString ( ) )
139	result. assertIsSatisfied ( 1000 )
140	Assert. assertEquals ( 1, ret )
141	assertTrue ( preValidationFailedEx. getMessage ( )!= null )
142	assertEquals ( m1, m2 )
143	assertNotNull ( afeTipoDescuento. getId ( ) )
144	context. assertEquals ( 4, ar. body ( ). size ( ) )
145	Assert. assertEquals ( 2, userService. getUsers ( null, roles, true, null, null ). size ( ) )
146	Assert. assertEquals ( "Values must be equal", 0, emitter. getTotalNumOfMessages ( ) )
147	assertTrue ( futureDigest. digest ( ). keyDigest ( ). isEmpty ( ) )
148	assertTrue ( evaluator. shouldProxyHost ( "127.0.0.1" ) )
149	assertThat ( path. isNormalized ( ), is ( false ) )
150	assertThat ( actual, is ( equalTo ( expected ) ) )
151	assertEquals ( childProject1. getCustomWorkspace ( ), parentWorkspace )
152	assertEquals ( 0., calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
153	assertNotNull ( result )
154	assertMultilinesEquals ( "Number of values:       6     5      4\\n" + "Minimum value:       3.00 -9.00 -12.00\\n" + "Maximum value:      22.00  7.00   2.00\\n" + "Mean value:         13.17 -1.40  -3.50\\n" + "Root Mean Square:   14.44  6.40   6.40\\n" + "Standard deviation:  6.49  6.99   6.19\\n", text )
155	assertEquals ( "tpc/bi-hourly/year=2014/month=februari/day=01/hour=2", path )
156	assertThat ( actualExceptionCode, is ( "throwable001" ) )
157	assertWktEquals ( "POLYGON ((0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0 0, 0
158	assertEquals ( result, new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( 1 ) ) ) ) ) ) ) ), new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( 1. Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new Diff ( new
159	assertAnnotatedIgnored ( tables. at ( 0, 2, 0 ) )
160	assertEquals ( 1, n )
161	Assert. assertTrue ( success )
162	assertEquals ( mvjs. size ( ), 1 )
163	assertEquals ( "https://test.com/tSalesforceInputProperties_701", properties. getEndpoint ( ) )
164	assertFalse ( it. hasNext ( ) )
165	assertEquals ( Sets. newHashSet ( ), workflowTypes )
166	assertNotNull ( loop. iterator ( ) )
167	assertNotNull ( sealInputStream )
168	assertEquals ( in. toString ( ), out. toString ( ) )
169	assertFalse ( b )
170	assertNotNull ( result )
171	assertNull ( prozessor. getHostName ( ) )
172	assertEquals ( ZippelGCD ( a, b ). monic ( ), EZGCD ( a, b ). monic ( ) )
173	assertEquals ( "success", result )
174	assertThat ( rook, is ( board. getChessBoard ( ) [ startRow + 2 ] [ startCol + 1 ]. getFigure ( ) ) )
175	assertEquals ( "Name_With-Various***Characters?", victim. readName ( ) )
176	assertEquals ( "", result )
177	assertThat ( eventListener. wasCalled, IsEqual. equalTo ( false ) )
178	assertEquals ( "test", exchange. getIn ( ). getBody ( ). getFirst ( ) )
179	assertEquals ( expectedCustomer, customer )
180	Assert. assertEquals ( 0, encryCredentialManager. encrypt ( null ). length ( ) )
181	assertEquals ( 200, response. getStatusLine ( ). getStatusCode ( ) )
182	Assert. assertEquals ( 0, analyser. getNumberOfPickupsAtBeginning ( route ), 0.01 )
183	dataLoader. assertDataToJsonEqualsExpectedFileContent ( "testUsingCollectionHamcestMatchers.json", result )
184	assertEquals ( "foo", instance )
185	assertThat ( stringWriter. toString ( ), containsString ( "theHtml" ) )
186	assertEquals ( "finally", getValue ( ) )
187	assertNotNull ( file )
188	assertTrue ( m. find ( ) )
189	Assert. assertFalse ( result )
190	assertEquals ( "CSS link tag should be absolutified", VisitStatus. ABSENT, getVisitStatus ( cssLink ) )
191	assertEquals ( "URI is not built correctly", new URI ( "http://foo/bookstore/updateBook/bar" ), newUri )
192	assertNotNull ( tested. getTaskManager ( ) )
193	assertEquals ( "bar", p. get ( ) )
194	assertEquals ( "{}", n )
195	assertThat ( opt, is ( Optional. of ( name ) ) )
196	Assert. assertEquals ( "password", result. trim ( ) )
197	assertEquals ( "T>Debug messages do not interpret emphasis", testLog. getMessage ( ) )
198	Assert. assertEquals ( "Lead 'Mr. Itai Agmon' was found", "Lead 'Mr. Itai Agmon' was found" )
199	assertTrue ( validator. isValid ( new Object ( ), null ) )
200	assertArrayEquals ( refar, d. getResult ( ) )
201	assertThat ( insert. getRoutingDocument ( ), is ( doc ) )
202	assertEquals ( "(int x) -> {" + CRLF + "    lambdaExpr(x * 2);" + CRLF + "}" + CRLF, CodeModelTestsHelper. toString ( aLambda ) )
203	assertEquals ( "indexvaluesasc:myIndex", t. toString ( ) )
204	assertEquals ( "SELECT field.dot(subField) FROM Class", q. toString ( ) )
205	assertSame ( fieldVar, result )
206	assertArrayEquals ( new long [ ] { 2, 2, 1, 11, 111, 2, 22, 222, - 1, - 1, - 1, 3, 33, 333, ReplicaState. RBW. getValue ( ), 4, 44, 444, ReplicaState. RWR. getValue ( ) }, blocks. getBlockListAsLongs ( ) )
207	assertTrue ( wrapper. isRunInTx ( ) )
208	assertEquals ( expected, ievent. getEventObj ( ). getPayload ( ) )
209	assertTrue ( constraint. fulfilled ( iContext ) )
210	assertEquals ( HttpStatusCode. NO_CONTENT_204, response. getStatus ( ) )
211	assertColumnHeaderOrder ( 0, 1, 2, 6, 7 )
212	sensei. assertWriteXml ( prop )
213	assertEquals ( Arrays. asList ( 4 ), update. getValues ( ) )
214	assertEquals ( null, result )
215	assertEquals ( 42, impl. getPercentile ( 50, now + 1 ) )
216	assertEquals ( 1, list. size ( ) )
217	assertTrue ( "Jdbc realm should be created", ops. exists ( TEST_JDBC_REALM_ADDRESS ) )
218	assertEquals ( expected, stats )
219	assertEquals ( 1, call. numCloses )
220	assertEquals ( "ClasspathResource{path='non-exisiting-classpath-resource'}", classPathResource. toString ( ) )
221	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
222	assertEquals ( "IRight.m()", new A ( ). m ( ) )
223	assertTrue ( httpResponseExceptionThrown )
224	assertEquals ( Arrays. asList ( new ImmutablePair < String, String > ( "bar", null ), new ImmutablePair < String, String > ( "foo", "foo" ), new ImmutablePair < String, String > ( "foo", "foo" ), new ImmutablePair < String, String > ( "foo", "foo" ), new ImmutablePair < String, String > ( "foo", "foo" ), new ImmutablePair < String, String > ( null, "quux" ) ), outputs )
225	assertEquals ( "", message )
226	assertEqualsAndHash ( one, two )
227	assertThat ( isPositive, accepts ( TestMatcher. Instance, theMismatch ) )
228	assertEquals ( "[0, 2, 4, 6, 8]", IteratorToGeneratorAdapter. adapt ( range ). toCollection ( ). toString ( ) )
229	assertTrue ( "Should throw NoSuchColumnFamilyException", caughtNSCFE )
230	assertObjectEquals ( "{'in':'header',name:'Accept-Charset',type:'string'}", pi )
231	assertEquals ( deserialized, obj )
232	assertTrue ( patient. equals ( patientproxyobject ) )
233	assertExpectedInitResult ( harness. intialize ( workspaceRoot ) )
234	assertArrayEquals ( new String [ ] { "-vws", "unix/viewTag.vws" }, instance. getCommandArguments ( true, "viewTag" ) )
235	assertions. isNotInstanceOfAny ( null, null )
236	Assert. assertTrue ( dHandler. isStopped ( ) )
237	assertEquals ( 4, Iterators. size ( iter ) )
238	Assert. fail ( gClients [ i ]. error )
239	assertNotNull ( result )
240	assertThat ( new DOMSource ( expected ), isEquivalentTo ( new DOMSource ( xrdsDocument ) ) )
241	assertEquals ( 1.0, result, 0.1 )
242	assertEquals ( Arrays. asList ( "115200000", "0", "115200000", "asdf", "line" ), getOutputStrings ( ) )
243	assertEquals ( "user1", response )
244	assertEquals ( new SchemaAndValue ( schema, struct ), avroData. toConnectData ( avroSchema, avroRecord ) )
245	assertEquals ( customer, responseImpl. getContent ( ) )
246	assertNotNull ( tg )
247	assertFalse ( "Should have failed to create a MapReduce command without a output ono-inline.", built )
248	assertNotEquals ( Movie. UNKNOWN, result )
249	assertTrue ( sink. getTableName ( )!= null )
250	assertSame ( chatLogger, testUser. getPrivateChatLogger ( ) )
251	assertEquals ( "34 abc\\n", found )
252	given ( ). get ( url ). then ( ). assertThat ( )
253	assertEquals ( 2, emitter. size ( ) )
254	Assert. assertEquals ( "sub", s )
255	assertEquals ( "2013-01-01T10:00:00.000Z", date. toString ( ) )
256	Assert. assertEquals ( 0, drugs. size ( ) )
257	assertTestEvent ( event )
258	assertFalse ( filter. shouldInclude ( source, "some.property" ) )
259	assertThat ( query, is ( notNullValue ( ) ) )
260	assertThat ( ByteUtil. toByte ( i ), is ( ( byte ) 1 ) )
261	Assert. assertFalse ( data. isToTest ( "foo.Bar", 2 ) )
262	assertNotNull ( "converter must not be null", s )
263	assertEquals ( "<a><b><c/></b></a>", result. toString ( ) )
264	assertTrue ( statement. getId ( ). isEmpty ( ) )
265	assertThat ( "No NullPointerException not thrown or unexpected Exception thrown when PushBuilder.method() was called.", npeThrown. get ( ), is ( true ) )
266	assertEquals ( expResult, result )
267	assertEquals ( HttpStatusCode. INTERNAL_SERVER_ERROR. code, response. getStatus ( ) )
268	assertThat ( future. get ( ), is ( "all is well, nothing to see here" ) )
269	assertThat ( connectorRegistry. getConnector ( "foo" ), is ( notNullValue ( ) ) )
270	Assert. assertNotNull ( funcionario )
271	assertEquals ( "TTGGGGGCCTCTAAACGGGGTCTT" + System. lineSeparator ( ) + "TTGGGGGC-TCTAA-CGGG-TCTT" + System. lineSeparator ( ), msa. toString ( ) )
272	assertEquals ( 0, objs. size ( ) )
273	assertEquals ( 100, cnt. getCount ( ) )
274	assertEquals ( "Mock", injectionNode. getParameter ( "method" ) )
275	assertMatchersEqual ( expectedMatcher. build ( ), actualMatcher )
276	assertTrue ( "permission was not granted.", readAnalysisSubmissionPermission. isAllowed ( auth, 1L ) )
277	assertFalse ( routeSpecification. isSatisfiedBy ( itinerary ) )
278	assertEquals ( second, first )
279	Assert. assertNotNull ( cu )
280	assertEquals ( value, result. get ( 0 ). hasHumanLabels ( ) )
281	assertThat ( args, contains ( "images", "--repo=foo", "--version=1.0" ) )
282	assertTypeParameterIs ( ReflectionUtilTest. class )
283	assertEquals ( p1, p2 )
284	assertTrue ( messageLatch. getCount ( ) > 0 )
285	assertEquals ( "bgp:c2f:22:333", certificate. getBgpExtension ( ) )
286	assertThat ( name + " has no description", description, is ( notNullValue ( ) ) )
287	assertNotNull ( Credential. reader ( ). read ( ) )
288	assertEquals ( 0, latch. getCount ( ) )
289	assertThat ( getCompiledResult ( ), is ( true ) )
290	assertThat ( u. toString ( ), containsString ( name ) )
291	assertEquals ( false, result )
292	assertEquals ( ch, buf. getChar ( ) )
293	assertEqualsIgnoreLineEnding ( xmlString, "<?xml version='1.1' encoding='UTF-8'?><int64>1</int64>" )
294	assertTrue ( status )
295	YamlJsonAssert. assertEquals ( expected, actual, DocumentType. JSON )
296	assertThat ( ConnectionStrategy. backwardsCompatible ( usePrivateDnsName, connectUsingPublicIp, associatePublicIp ), equalTo ( ConnectionStrategy. PUBLIC_IP ) )
297	assertFalse ( ( Boolean ) result )
298	assertEquals ( "hello", new String ( serverHandler. data ) )
299	assertTrue ( sink. getInvalidConfiguration ( ) )
300	Assert. assertTrue ( accept )
301	assertEquals ( node. getId ( ), "id" )
302	Assert. assertTrue ( response. getCommandOutput ( ). contains ( "WMI_BIOS_NOT_FOUND" ) )
303	assertEquals ( expected, actual )
304	Assert. assertNotNull ( lfs )
305	assertEquals ( "\\"catalogName\\".\\"schemaName\\".\\"tableName\\"", database. escapeTableName ( "catalogName", "schemaName", "tableName" ) )
306	assertEquals ( expected, actual )
307	assertFalse ( iterator. hasNext ( ) )
308	assertEquals ( SimpleBigDecimalScore. of ( new BigDecimal ( "-2.4" ) ), scoreDirector. calculateScore ( ) )
309	assertEquals ( 10, classUnderTest. getContentsNbrRowsToShow ( ) )
310	assertArrayEquals ( expectedTlv, decodedTlv )
311	assertTrue ( sink. getInvalidSwapCoordinates ( ) )
312	assertTrue ( "Expected the test to generate a grid", checkGrid ( "Social_Profiles_Controls_Search", true ) )
313	assertEquals ( XAdESForm. B, f )
314	assertThat ( output. toString ( ), is ( json ) )
315	assertEquals ( 0, res )
316	assertEquals ( expResult, result )
317	assertTrue ( "User's password updated successfully", success )
318	assertThat ( responseContent, containsString ( "identity was not found" ) )
319	assertContainsRegex ( WHERE + OPEN_CURLY + ":S" + SPACE + ":P" + SPACE + var ( "o" ) + OPT_SPACE + CLOSE_CURLY, query )
320	Assert. assertEquals ( "SELECT UUID();", text )
321	assertNotNull ( result )
322	assertThat ( constructorDescriptor. newInstance ( ), instanceOf ( Resource. class ) )
323	assertWhoAmI ( USERNAME_CLIENT )
324	assertNotNull ( result )
325	checker. assertEquals ( "[" + i + "]", exp, act )
326	assertEquals ( socketAddress, endpoint. toInetSocketAddress ( ) )
327	assertTrue ( BitsLong. test ( v, true, 31 ) )
328	assertEquals ( "UTF-8", XmlReader. getXmlProlog ( input, guessedEncoding ) )
329	assertExec ( "Gives the same value", Numbers. class, "stringToLong__ILjava_lang_String_2", res, "123" )
330	Assert. assertEquals ( 0., analyser. getTimeWindowViolationAtActivity ( route. getActivities ( ). get ( 2 ), route ), 0.01 )
331	assertThat ( interval. parse ( formatter ), is ( interval ) )
332	assertNotEquals ( logger1, logger2 )
333	assertEquals ( exp, accum )
334	assertThat ( "Checking 6 frame translation", protein. toString ( ), is ( expected ) )
335	assertThat ( value, equalTo ( "VALUE" ) )
336	assertEquals ( version. hashCode ( ), version. hashCode ( ) )
337	Assert. assertTrue ( result. getBean ( ) instanceof SimpleManagedBean )
338	assertEquals ( o, tm )
339	assertTodo ( expected, actual )
340	assertTrue ( Arrays. equals ( data, extracted ) )
341	assertTrue ( amqpsProperties. equals ( mockHashMap ) )
342	assertTrue ( entity. equals ( loadedEntity ) )
343	Assert. assertEquals ( getFullClassName ( fqdnName ), udf. getClassName ( ) )
344	Assert. assertTrue ( pss. toString ( ). contains ( "<http://example.org>" ) )
345	assertPermanentCount ( playerA, "Jace, Memory Adept", 0 )
346	assertEquals ( expected, document )
347	assertThat ( result, is ( false ) )
348	assertTrue ( true )
349	assertEquals ( logisticForward, sameDiffOuter. getFunction ( logisticForward ). getName ( ) )
350	assertTrue ( identifier. equals ( group. getIdentifier ( ) ) )
351	assertThat ( mentions, hasItem ( mentionedEntity ( 0, mention. length ( ), EntityType. CLASS, iri ) ) )
352	assertThat ( sourceUri, is ( "https://bitbucket.org/grubix/git/src/checkout" ) )
353	assertEquals ( m ( "_", "T", "method", 10L, "tstart", 1L, "tstop", 11L, "calls", 3L, "begin", m ( "_", "B", "clock", id ), "children", l ( m ( "_", "T", "method", 12L, "tstart", 11L, "tstop", 14L, "calls", 2L, "error", e ) ) ), decodeTrace ( o. getChunks ( ) ) )
354	assertThat ( resources, contains ( orgId, parentOrgId, parentParentOrgId ) )
355	Assert. assertEquals ( TRANSLATED_MENU_CATEGORY_DESC, translation )
356	assertMockEndpointsSatisfied ( )
357	assertEquals ( "Vertical tab not escaped correctly", orig, escaped )
358	assertNull ( presenter. getValue ( ) )
359	assertEquals ( 21, target. getHeight ( ) )
360	assertEquals ( "hello", request )
361	assertNotNull ( reader )
362	Assert. assertEquals ( "Microsoft.Devices", matcher. group ( 1 ) )
363	Assert. assertTrue ( exchange. getPhase ( ). equals ( Exchange. Phase. IN ) )
364	assertNotNull ( pcrManifest )
365	assertTrue ( page. asText ( ). contains ( "This is a test" ) )
366	assertThat ( extractMonitorables ( timerAdapter ). get ( STDDEV ). get ( ), Matchers. < Object > is ( newStdDev ) )
367	Assert. assertThat ( jsonString, IsEqual. equalTo ( StringEncoder. getString ( originalEntity ) ) )
368	assertEquals ( "test", echo. echo ( "test" ) )
369	assertEquals ( expected, actualQuery )
370	assertEquals ( "Expected 1 results!", 1, n )
371	assertEquals ( "[a,1,2,b]", buff. toString ( ) )
372	Assert. fail ( "Didn't get expected HPackException!" )
373	assertTrue ( factory instanceof ClasspathConfigFactory )
374	Assert. assertTrue ( Files. size ( tmfile. toPath ( ) ) > 0 )
375	assertEquals ( expectValue, actualValue )
376	assertNotNull ( PropertyUtils. getProperty ( result, "auditInfo" ) )
377	Assert. assertEquals ( dataHoraEvento, infoEventoCancelamento. getDataHoraEvento ( ) )
378	assertSame ( expected, actual )
379	Assert. fail ( "Caught unexpected ResourceHandlerException!" )
380	assertEquals ( "ubuntu", platform. getName ( ) )
381	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoItemImpostoPISQuantidade ( ). toString ( ) )
382	assertEquals ( expected, x )
383	Assert. assertEquals ( jaegerConfig. getParam ( ), 1 )
384	arraysWithCustomComparisonStrategy. assertIsSorted ( someInfo ( ), actual )
385	assertThat ( transferSuccessful, is ( false ) )
386	Assert. assertTrue ( "Incorrect file types returned", CollectionUtils. isEqualCollection ( types1, widget. getFileTypes ( ) ) )
387	Assert. assertEquals ( "(nt_change_insertion (nt_range (nt_point_location (nt_base_location (nt_number 123))) _ (nt_point_location (nt_base_location (nt_number 124)))) ins)", nt_change_insertion. toStringTree ( parser ) )
388	assertThat ( anyTS. isValid ( MICRO_OF_SECOND, 666 ), is ( true ) )
389	assertEquals ( "Mismatched message at line #" + i, message, line )
390	assertTrue ( Pattern. matches ( "(?s).*<html>\\\\s*<head>\\\\s*<title>\\\\s*component01.jsp\\\\s*</title>\\\\s*</head>\\\\s*<body>\\\\s*<input\\\\s*id=\\"username\\"\\\\s*type=\\"text\\"\\\\s*name=\\"username\\"\\\\s*maxlength=\\"32\\"\\\\s*onkeypress=\\"attrValue\\"\\\\s*size=\\"20\\"/>\\\\s*</body>\\\\s*</html>.*", page. asXml ( ) ) )
391	Assert. assertEquals ( fallbackOutput, got )
392	assertEquals ( expResult, result )
393	assertThat ( result, is ( 0 ) )
394	Assert. assertEquals ( objectType, generated )
395	assertTrue (! result )
396	assertEquals ( "Base value is not properly parsed", "0000.0000", parsed )
397	assertThat ( buffer. isReadOnly ( ), is ( true ) )
398	Assert. assertEquals ( 1, result. getEntities ( ). size ( ) )
399	assertEquals ( row. getQuote ( ), postprocessed [ i ] )
400	assertThat ( result, is ( "PONG" ) )
401	editor. assertHoverContains ( "debug" )
402	Assert. assertFalse ( errors. hasErrors ( ) )
403	Assert. assertEquals ( 2, p. get ( "hash" ). size ( ) )
404	assertEquals ( 2, filteredTodos. size ( ) )
405	Assert. assertTrue ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. EDIT, this. doc ) )
406	assertTrue ( Arrays. equals ( etalon, array ) )
407	assertEquals ( "Should be 2 criterions", 2, numberOfCriterionsOfTypeResource )
408	assertEquals ( "X: 1", s )
409	assertTrue ( statement. getReferences ( ). isEmpty ( ) )
410	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getPermissions ( set ( "admin" ), ActiveRoleSet. ALL ) ). toString ( ) )
411	assertThat ( windows. minus ( empty ), is ( windows ) )
412	assertEquals ( p1. element0 ( ). payload ( ). remaining ( ), size )
413	assertEquals ( "0.00001s from now (ticker=FAKE_TICKER)", d. toString ( ) )
414	assertThat ( rm. matches ( new Object ( ) ), is ( true ) )
415	assertThat ( date, is ( PlainDate. of ( 2012, 5, 21 ) ) )
416	assertTrue ( IsEqualInternally. areEqualInternally ( expectedResult, sut. extract ( content, 0 ) ) )
417	assertEquals ( 0, versionEntities. size ( ) )
418	assertTrue ( value. size ( ) > 0 )
419	assertNotNull ( solver )
420	assertThat ( provider. getSubject ( axiom ), is ( iriOptional ) )
421	assertEquals ( pos. getIndex ( ), 0 )
422	assertEquals ( "B", cu. getProperty ( "type" ) )
423	assertEquals ( "test", base. toString ( ) )
424	assertEquals ( - 300, scorer. scorePosition ( board, context ) )
425	Assert. assertNotNull ( file. toString ( ) )
426	Assert. assertTrue ( "CumulativeLoss is expected to be less than 800: " + udtf. getCumulativeLoss ( ), udtf. getCumulativeLoss ( ) < 800 )
427	assertEquals ( "Unsatisfied qualifier: 'unmatched' for type 'java.lang.ClassCastException'", e. getMessage ( ) )
428	Assert. assertNull ( "There can't be active transaction here", tm. getTransaction ( ) )
429	Assert. assertEquals ( versao. toString ( ), eventoCancelamento. getVersao ( ) )
430	assertTrue ( executor instanceof FatGammaTxnExecutor )
431	assertEquals ( 3, count. get ( ) )
432	assertEquals ( 0.500L, value. get ( ) )
433	assertEquals ( TEAM_CITY_URL + "/app/rest/buildTypes/id:bt296", buildTypeUrl )
434	Assert. fail ( "Should have failed" )
435	assertEquals ( getAllFunctionsResponse, result )
436	assertEquals ( "BAR", this. fooStateFSM. getCurrentState ( fooState ). getName ( ) )
437	assertTrue ( charsetPattern. matches ( "A" ) )
438	assertNull ( files )
439	assertEquals ( "Content is not correct", "Content is not correct", "Content is not correct", outputStream. toString ( ) )
440	assertEquals ( map, map2 )
441	assertEquals ( "((dependencyBuilder.input(\\"A\\").build() || dependencyBuilder.input(\\"B\\").build()) && " + "(dependencyBuilder.input(\\"C\\").build())", inputLogicParser. parse ( root ) )
442	assertEquals ( d, np. getCurrentDate ( ) )
443	assertEquals ( systemPropertyValue, System. getProperty ( "key1" ) )
444	assertEquals ( embedCode, detail. get ( "embed_code" ) )
445	Assert. assertFalse ( this. manager. remove ( this. family1 ) )
446	Assert. assertTrue ( getSubject ( ). isPermitted ( "read" ) )
447	Assert. assertEquals ( "Hub should be able to fulfill request", HttpServletResponse. SC_CREATED, response. getStatusCode ( ) )
448	assertEquals ( expected, read )
449	assertAlias ( sql, columnParam, "nor", param )
450	assertTrue ( errOutput. contains ( "Space quota is not 100" ) )
451	assertEquals ( Integer. valueOf ( 1 ), Integer. valueOf ( list. size ( ) ) )
452	assertions. isNotEqualTo ( expected )
453	assertOrder ( order, DATA_LENGTH, comparator )
454	assertArrayEquals ( new byte [ ] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
455	Assert. assertEquals ( expected, actual )
456	Assert. assertEquals ( 1.5, ed. getRealEigenvalue ( 0 ), 1.0e-15 )
457	assertEquals ( Location. LOCATION_LHS_FROM_ACCUMULATE_RESULT_INSIDE, getLastIntegerValue ( parser. getEditorInterface ( ). get ( 0 ). getContent ( ) ) )
458	assertEquals ( paramList, mockParamList )
459	assertEquals ( expectedLocalizedXLIFF, localizedAsset )
460	assertEquals ( Arrays. asList ( parser1, parser2, parser3 ), parsers )
461	assertTrue ( result )
462	assertThat ( analyzer, is ( org. apache. lucene. analysis. cjk. CjkAnalyzer. class ) )
463	assertThat ( target. getBodyValue ( ), is ( not ( nullValue ( ) ) ) )
464	Assert. assertNotNull ( endpoint. session )
465	objects. assertIsEqualToComparingOnlyGivenFields ( someInfo ( ), actual, other, noFieldComparators ( ), defaultTypeComparators ( ) )
466	assertEquals ( SC_OK, response. getStatus ( ) )
467	assertEquals ( b1, b2 )
468	assertNull ( "Expected an empty list", result )
469	assertEquals ( expectedName, name )
470	Assert. fail ( "Movie not found" )
471	assertEquals ( 'c', m. nextChar ( ) )
472	assertTrue ( getNoErrorMsg ( ), result )
473	assertEquals ( layerCnt + 1, world. getLayers ( ). size ( ) )
474	Assert. assertEquals ( 1002, sprintService. getTeam ( ). getId ( ) )
475	assertEquals ( 900, res )
476	assertEquals ( 0, sorter. convertRowIndexToModel ( rows - 1 ) )
477	Assert. assertEquals ( 0, this. sqlgGraph. traversal ( ). E ( ). has ( T. label, "friendXXX" ). count ( ). next ( ), 0 )
478	assertThat ( result, is ( newPartition ( ) ) )
479	assertTrue ( client. getRoles ( ). size ( ) > 0 )
480	assertTrue ( TClass. areEqual ( row, bindings. getRow ( 1 ) ) )
481	Assert. assertEquals ( "swallowMessage{a=1, b=b}", msg. toString ( ) )
482	context. assertTrue ( result. isEmpty ( ) )
483	assertTrue ( medias. size ( ) == 1 )
484	assertEquals ( exepcted_individual, returned_individual )
485	Assert. assertFalse ( "Requests with different order of accept options must not equal!", coapRequest1. equals ( coapRequest2 ) )
486	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( 5L ), mapper. readBitemporalDate ( columns, "vtTo" ) )
487	assertThat ( clock. currentTimeInMillis ( ), is ( SystemClock. INSTANCE. currentTime ( ). toMillis ( ) ) )
488	assertEquals ( "", result )
489	assertThat ( actual, is ( instanceOf ( ExpectException. class ) ) )
490	Assert. assertFalse ( "Get Profile  returned no results", json. isEmpty ( ) )
491	Assert. assertEquals ( configNew, configOld )
492	Assert. assertArrayEquals ( ENCODED_VALUE, byteOutputStream. toByteArray ( ) )
493	assertNull ( recvMessage )
494	assertEquals ( 200, connection. getResponseCode ( ) )
495	assertEquals ( "a/b", r )
496	assertions. isSorted ( )
497	assertTrue ( entity. isLifecycle ( ) )
498	assertEquals ( bean1. a, 1 )
499	Assert. assertEquals ( getElement ( "OBR.14", "CM_SPS.3" ), result )
500	assertEquals ( "Web", bean. getApplication ( ). asIs ( ) )
501	assertEquals ( tenUnitsOfMap, result. size ( ) )
502	assertFalse ( resultMessage ( result, PUT ), result. passedValidation ( ) )
503	assertKernel ( kernel, CIRCLE3, e )
504	assertEquals ( "3 啶�啶苦え啷� 啷�啶距う", t. format ( new Date ( 2629743830L * 3L ) ) )
505	assertEquals ( "Hello {John} {Doe}", ResponseBodyInterpolator. interpolate ( "Hello {firstName} {lastName}", req ) )
506	Assert. assertTrue ( stringToEncrypt. equals ( decrypted ) )
507	assertMockEndpointsSatisfied ( )
508	assertEquals ( expResult, serializer. serialize ( entity ) )
509	assertEquals ( 0, callRequestFrame. getHeaders ( ). size ( ) )
510	Assert. assertNotNull ( "null execResult", execResult )
511	assertArrayEquals ( getPixels ( expected, 0, 0, expected. getWidth ( ), expected. getHeight ( ), null ), getPixels ( actual, 0, 0, actual. getWidth ( ), actual. getHeight ( ), null ) )
512	assertEquals ( DataStatus. ACTIVE, empty. getStatus ( Side. STARBOARD ) )
513	assertThat ( databaseMapping. getDatabasePrefix ( ), is ( "primary" ) )
514	Assert. assertNull ( countryList )
515	assertNull ( channel. basicGet ( q, false ) )
516	assertTrue ( screenshotFile. exists ( ) )
517	Assert. assertEquals ( test, expected )
518	Assert. assertNotNull ( rb )
519	assertEquals ( fieldsBuilder. build ( ). toString ( ), result. build ( ). toString ( ) )
520	assertMockEndpointsSatisfied ( )
521	assertEquals ( actDate. getTime ( ), expDate. getTime ( ) )
522	assertEquals ( 0, customAnnotations. size ( ) )
523	assertThat ( result, equalTo ( expected ) )
524	assertEquals ( buffer, result. getString ( ) )
525	assertEquals ( "http://example.com?foo=foo&hoge=fuga&piyo=1", got. toString ( ) )
526	UnitTestUtils. assertEquals ( "Spearman's correlation matrix", createRealMatrix ( rData, 5, 5 ), correlationMatrix, 10E-15 )
527	Assert. assertEquals ( result. getResultSize ( ), 10 )
528	assertEquals ( result, "public class java.lang.String {\\n" + "  }\\n" )
529	Assert. assertNull ( t. thread ( messages ) )
530	Assert. assertEquals ( 5L, result. get ( "output1" ) )
531	assertEquals ( delim, csvFormat. getDelimiter ( ) )
532	assertNull ( APMSpan. findPrimaryReference ( Arrays. asList ( ref1, ref2, ref3, ref4 ) ) )
533	assertEquals ( uri, builder. build ( ) )
534	Assert. assertNotNull ( controllerResponse )
535	assertEquals ( expected, bos. toString ( ) )
536	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( date ), mapper. readBitemporalDate ( columns, "ttFrom" ) )
537	assertEquals ( valueIn, valueOut )
538	assertEquals ( bridgeIid, Whitebox. invokeMethod ( ovsdbPortsUpdateCommand, "getInstanceIdentifier", port, terminationPointIId ) )
539	assertThat ( arguments. getReadTimeoutMillis ( ), equalTo ( 0L ) )
540	assertThat ( result, containsString ( "<!DOCTYPE html>\\n" ) )
541	assertNotNull ( post )
542	Assert. assertEquals ( points. length * val, s, 0d )
543	assertNotNull ( u )
544	assertEquals ( 15, reasoned. getAxiomCount ( ) )
545	assertEquals ( "This does not exist. Reason: TestReason", translated )
546	Assert. assertEquals ( expectedText, lastAlert. getText ( ) )
547	assertEquals ( ifStr, "if (!(org.uberfire.security.client.authz.AuthorizationManagerHelper.authorize(\\"myfeature\\"))) {\\n" + "  return;\\n" + "}" )
548	assertEquals ( 2, receivedMessages. size ( ) )
549	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
550	assertEquals ( "EntitySetSample", resultQuery )
551	assertThat ( q, is ( TermQuery. class ) )
552	assertSame ( value, bound. valueFor ( 1, 'a' ) )
553	assertNull ( millis )
554	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 3, warnings. size ( ) )
555	assertFalse ( session. from ( $ ( noteVar ) ). where ( builder. getValue ( ) ). list ( $ ( noteVar ) ). isEmpty ( ) )
556	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
557	assertThat ( actual, is ( funcationMapper ) )
558	Assert. assertEquals ( Type. Managed, adapter. type ( ) )
559	assertEquals ( "/", path. toString ( ) )
560	assertEquals ( Integer. valueOf ( 3 ), Integer. valueOf ( list. size ( ) ) )
561	assertTrue ( expectedResult. isEmpty ( ) )
562	assertFalse ( metaChild. isAssignableFrom ( metaGrandparent ) )
563	assertNull ( nsObject )
564	Assert. assertEquals ( value, _context. getPropertyValue ( key ) )
565	assertEquals ( action. getOldValue ( ), CompressionMethod. TLS_DHE_DSS_WITH_AES_128_CBC_SHA )
566	assertNotNull ( patientRole )
567	assertTrue ( getNoErrorMsg ( ), result )
568	assertEquals ( expectedList, sut. fetchPage ( 3, 5 ) )
569	assertFalse ( map. isEmpty ( ) )
570	Assert. assertTrue ( cc >= 2 )
571	assertThat ( fieldError, is ( nullValue ( ) ) )
572	assertNotNull ( report )
573	Assert. assertTrue ( fc1!= fc )
574	Assert. assertTrue ( isEqual ( distance, 0.6 ) )
575	assertEquals ( CellComparatorHelper. getSanitizedStaticValue ( cell ), "needle" )
576	assertEquals ( environment. bootstrapDirectPort ( ), loader. port ( ) )
577	assertEquals ( "Value {\\\\", result )
578	assertSame ( input, output )
579	Assert. assertEquals ( tag. type ( ), TagType. FLOAT )
580	assertEquals ( expResult, result )
581	assertTrue ( victim. isEnabled ( ) )
582	Assert. assertEquals ( desiredOutput, output )
583	assertTrue ( teamExternalGroups. isEmpty ( ) )
584	assertNotNull ( "addon must load lf-specific icon", UIManager. getIcon ( ColumnControlButton. COLUMN_CONTROL_BUTTON_ICON_KEY ) )
585	assertEquals ( EX_43_EXPECTED, hexadecimalHash )
586	assertArrayEquals ( excepted, actual )
587	assertEquals ( collectorManager1, collectorManager2 )
588	Assert. assertEquals ( "http://yahoo.com", remoteWebDriver. getCurrentUrl ( ) )
589	Assert. assertEquals ( 2, a. getCbo ( ) )
590	assertEquals ( "visibility", bolt. getColumnVisibility ( ) )
591	assertEquals ( testAlgorithm, tlsCertificateAuthorityServiceCommandLine. createConfig ( ). getKeyKeyPairAlgorithm ( ) )
592	assertContextOk ( ctx, "O1:doc:doc", "Hello from Context!", "Source" )
593	assertTrue ( new File ( "target/export7" ). exists ( ) )
594	assertResultSet ( res )
595	assertTrue ( pl < pp. getMaxPrefixLen ( i ) )
596	Assert. assertNull ( RequestObjectHelper. getReturnKeys ( jsonWithNonArrayReturnKeyValue ) )
597	assertThat ( res. toString ( ), is ( equalTo ( "my last response statusText is: " + response. getStatusText ( ) ) ) )
598	Assert. assertEquals ( "test", testScopePath. getParentScopePath ( ). getName ( ) )
599	assertEquals ( new DestinationPatternsMessageCondition ( new String [ ] { }, new AntPathMatcher ( ) ), c1. combine ( c2 ) )
600	assertEquals ( new Long ( ( long ) 1234 ), longVal )
601	assertThat ( info. getClusterService ( CLUSTER ), sameInstance ( currentService ) )
602	Assert. assertNotNull ( new Bean2indMap ( ) )
603	assertEquals ( expectedSource, instrumentedSource )
604	assertEquals ( expectedQuery, actualQuery )
605	assertEquals ( 2, JclContext. get ( "jcl1" ). getLoadedClasses ( ). size ( ) )
606	Assert. assertNotNull ( entity )
607	assertTrue ( aclDao. hasEntry ( principal, secureObject ) )
608	Assert. assertEquals ( expected, actual )
609	assertEquals ( "http://foo/", x )
610	assertThat ( TestI18n. testMessage2. text ( "Test", "Message" ), is ( "Message Test Message" ) )
611	Assert. assertEquals ( "Wrong toString()", "msgVersion: 4 objectType: org.opendaylight.yang.gen.v1.urn" + ".opendaylight.openflow.oxm.rev150225.match.entries.grouping.MatchEntry" + " oxm_class: org.opendaylight.yang.gen.v1.urn.opendaylight.openflow.oxm.rev150225" + ".OpenflowBasicClass oxm_field: org.opendaylight.yang.gen.v1.urn.opendaylight.openflow" + ".oxm.rev150225.InPort experimenterID: null", key1. toString ( ) )
612	assertThat ( unhandledException. getCause ( ), is ( sameInstance ( cause ) ) )
613	assertTrue ( mMetaManager. getTierViewsBelow ( tierAlias ). isEmpty ( ) )
614	assertEquals ( "org.apache.Foo", ir. getBundle ( ) )
615	assertFalse ( survey. isAnswerSelected ( 1 ) )
616	assertTrue ( cs. isLast ( ) )
617	assertEquals ( field. getRunTimeClass ( ), DfpFieldRunTime. class )
618	assertEquals ( parseCalendar ( "20131104-00:00:00", TimeZone. getTimeZone ( "US/Eastern" ) ), dh. getCalendarAfter ( testingClock. getCurrentCalendar ( ) ) )
619	assertThat ( banco. getAgenciaECodigoBeneficiario ( beneficiario ), is ( "1234/1234567" ) )
620	assertArrayEquals ( new byte [ ] { - 124, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 124, - 124, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 12, - 96, - 65, - 71, 110, - 74, - 41, 15, 68, 51, - 11, 24 }, new Algorithm2B ( ). computeHash ( concatenate ( userBytes, userValidationSalt ), userBytes ) )
621	assertEquals ( originalFetchCount, timeline. getFetchCount ( ) )
622	assertThat ( indentCharacters, is ( equalTo ( ( Integer ) 6 ) ) )
623	assertTrue ( engine. exists ( testIndex. getName ( ) ) )
624	assertEquals ( expectedQuery, actualQuery )
625	assertThat ( specificResourceAllocation. getAssignments ( ), haveHours ( 36, 2, 36, 36, 36, 36, 36, 36, 4 ) )
626	assertEquals ( 25, articles. size ( ) )
627	assertEquals ( expResult, result )
628	assertFalse ( ex. isPrime ( 225 ) )
629	runner. assertNotValid ( )
630	assertTrue ( vrpBuilder. getLocationMap ( ). containsKey ( "start" ) )
631	assertEquals ( 0, walEdit. size ( ) )
632	assertEquals ( "db_0__init.cql", cqlMigrationResolver. extractScriptName ( new ClassPathResource ( "db/migration/db_0__init.cql", Thread. currentThread ( ). getContextClassLoader ( ) ) ) )
633	assertTrue ( convertor. isPresent ( ) )
634	assertFalse ( CheckDetector. isPlayerJustMovedInCheck ( bitBoard ) )
635	assertEquals ( "ergo sum", operation. get ( ). getResult ( ) )
636	assertOut ( "RoyaleTest_A.prototype.foo = function() {\\n\\tvar self = this;\\n\\tif (a)\\n\\t\\tRoyaleTest_A.base(this, 'foo');\\n}" )
637	assertThat ( m. matches ( ), hasItems ( Tuple. of ( 1, 2 ), Tuple. of ( 3, 4 ) ) )
638	assertEquals ( validSubfieldCodes, subfieldCodeValidator. getValidSubfieldcodes ( ) )
639	assertEquals ( result, "2007-12-03" )
640	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
641	assertNull ( foundClazz )
642	assertNull ( tr. findCertInfo ( createCert ( false, "BISCUITS" ) ) )
643	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
644	assertThat ( f2, sameInstance ( f1 ) )
645	assertTrue ( getLastRequestContent ( ). isEmpty ( ) )
646	assertThat ( request. getOauthParams ( ), hasSize ( 3 ) )
647	assertEquals ( expected, actual )
648	Assert. assertEquals ( boundary, BatchParserCommon. getBoundary ( contentType, 0 ) )
649	Assert. assertEquals ( "name", process. getAssignedTo ( ) )
650	assertFalse ( cv. supports ( Date. class ) )
651	assertNameAndQualifiedName ( tree, "fn", "mod.fn" )
652	Assert. assertEquals ( 20, countries. size ( ) )
653	assertEquals ( 123L, book. getId ( ) )
654	assertThat ( homepage, is ( instanceOf ( DefaultPage. class ) ) )
655	assertEquals ( "ab%bghi,ab%bcde 23,ab%igkl,ab%bghi 10,", target. toString ( ) )
656	assertEquals ( "YYY", html )
657	assertThat ( historicJobLogExceptionStacktrace, notNullValue ( ) )
658	assertEquals ( i, db. getLastValue ( "TestMetric" ) )
659	assertThat ( testUriStr, is ( expectedUriStr ) )
660	assertThat ( publicJobLink, containsString ( "us-east-1" ) )
661	Assert. assertArrayEquals ( expected, left. toByteArray ( ) )
662	assertEquals ( expResult, result )
663	Assert. assertThat ( allCategories, Matchers. contains ( "categoryA", "categoryB", "categoryC" ) )
664	assertEquals ( PARAMS. size ( ), underTest. getParameters ( ). size ( ) )
665	assertEquals ( 2, runTestsResults. getPassedTests ( ). size ( ) )
666	assertEquals ( "HandshakeMessage[keyExchangeAlgorithm=EC_DIFFIE_HELLMAN, certificateType=RAW_PUBLIC_KEY]", handshakeMsg. toString ( ) )
667	assertEquals ( exampleValue, resourceEditProperty. getExampleValue ( ) )
668	Assert. assertTrue ( children. size ( ) > 0 )
669	assertTrue ( reference instanceof SoftReference )
670	assertThat ( visibleText, is ( "foo" ) )
671	assertTrue ( "". equals ( c. getValue ( ) ) && "foo". equals ( c. getName ( ) ) )
672	assertEquals ( "Hello < There <&>", doc. select ( "div" ). first ( ). text ( ) )
673	assertEquals ( "Trimmed result should exclude ending mutate if!isFirst and!isLast", testPair. get ( 1 ), postProcessed )
674	assertThat ( response. getPersonInformationStructure ( ). getRegularCPRPerson ( ). getSimpleCPRPerson ( ). getPersonNameStructure ( ). getPersonGivenName ( ), is ( person. getFornavn ( ) ) )
675	assertTrue ( schemaRegistry. getHostnameVerifier ( ). verify ( "", null ) )
676	assertFalse ( isServiceReady )
677	this. tester. assertContains ( "<p class=\\"empty\\">blah</p>" )
678	assertEquals ( Arrays. asList ( getDummyPlayer ( ), getDummyPlayer ( ) ), getPlayers ( ) )
679	assertEquals ( LogSeverity. FINE. toString ( ), severity. toString ( ) )
680	assertEquals ( expectedCreator, newConceptSource. getCreator ( ) )
681	assertOut ( "var /** @type {number} */ a = 0xabc" )
682	Assert. hasText ( null, "has text" )
683	assertions. contains ( expected )
684	assertSameFormat ( vendor. getFormatFor ( customFormatID, Locale. ENGLISH, DateFormat. LONG ), dmy )
685	assertNotNull ( client )
686	assertEquals ( "a,b,c,d,e", Joiner. on ( ',' ). join ( foundOrder ) )
687	Assert. assertTrue ( select. execute ( ). size ( ) == Constant. SEVEN )
688	Assert. assertFalse ( newPointAvailable )
689	assertEquals ( "d", result. toString ( ) )
690	assertEquals ( 4, container. indexOfId ( id ) )
691	assertEquals ( prot. getName ( ), pr [ 0 ]. getName ( ) )
692	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
693	assertEquals ( address. getHostAddress ( ), "127.0.0.1" )
694	Assert. assertEquals ( xmlEsperado, lacre. toString ( ) )
695	assertEquals ( 100.0, s. getDeliveryServiceTime ( ), 0.01 )
696	assertEquals ( 2, categories. length )
697	Assert. assertNotNull ( "Web Resource Folder is null", facet. getWebResourceFolder ( ) )
698	assertEquals ( expectedIndex, artistIndex )
699	assertTrue ( "New password should match", errors. hasFieldErrors ( "newPassword" ) )
700	assertEquals ( 0, result. size ( ) )
701	assertEquals ( expectedSqlForMathOperations3 ( ), result )
702	assertEquals ( PERSON_COUNT, actual )
703	assertEquals ( "\\"a.j.\\"^^xsd:string", name )
704	assertThat ( matrix, IsEqual. equalTo ( new Matrix3f ( new float [ ] { - 0.468819, 0.468819, 0.883294, 0, 0 } ) ) )
705	assertEquals ( 0, indexEntries. size ( ) )
706	assertEquals ( 0.0, accessEgressCalc. getCosts ( iContex ), 0.01 )
707	assertThat ( capturedEvents, hasItem ( mdcFormat ( "testMDCInvokeOrdered", "foobar" ) ) )
708	assertEquals ( HttpStatusCode. NOT_FOUND_404, response. getStatus ( ) )
709	assertTrue ( authorizationManager. authorize ( perspective1, user1 ) )
710	assertEquals ( "<select id=\\"w1\\" name=\\"w1\\" size=\\"1\\" selected=\\"false\\" value=\\"choose one\\" selected=\\"true\\"/>", html )
711	assertEquals ( fromObj, fromStr )
712	assertThat ( deserialize ( output. toByteArray ( ) ), is ( data ) )
713	assertEquals ( methodVariableBindings. size ( ), 1 )
714	assertEquals ( NAME_NODE, action. getNameNode ( ) )
715	assertNull ( wrapper. getArtist ( ) )
716	Assert. assertTrue ( newSql. equals ( "SELECT t.name, sum(t.price) FROM cpcplan" + suffix + " t GROUP BY t.name,t.id" ) )
717	assertArrayEquals ( expectedBytes, actualBytes )
718	Assert. assertEquals ( "MNOPRSTUVWXYZ", text )
719	assertTrue ( converter. canConvert ( Index. class ) )
720	assertNotNull ( deltaClient. get ( dsRef ) )
721	assertThat ( axioms, hasItem ( axiom ) )
722	assertThat ( "No tags should have been returned.", actualTag, is ( equalTo ( expectedParseResult ) ) )
723	assertEquals ( "http://localhost:8080/api/nodes/1", config. getNodeNames ( ). iterator ( ). next ( ) )
724	Assert. assertEquals ( "Invalid csv line", "3,NURSE0,OID0,OBSERVATION0,20150203235809-0500,UNDEFINED,1,1,1,1,3,NURSE0,OID0,OBSERVATION0", line )
725	assertTrue ( hasspecialchar )
726	assertEquals ( "urn:oid:0.1.2.3", parsed. getEntry ( ). get ( 0 ). getResource ( ). getIdElement ( ). getValue ( ) )
727	assertThat ( itr. hasNext ( ), is ( false ) )
728	assertEquals ( 2, list. size ( ) )
729	assertEquals ( 2, css. getSeverity ( ) )
730	assertThat ( exitStatus. exitStatus ( ), is ( equalTo ( ( byte ) 0x0 ) ) )
731	assertThat ( xml, containsString ( "<recipients>" ) )
732	assertEquals ( Money. of ( BigDecimal. valueOf ( 0.01d ), "CHF" ), BasisPoint. of ( BigDecimal. valueOf ( 10 ) ). apply ( m ) )
733	assertEquals ( "Wrong conversion handler", PropertiesConfiguration. DEFAULT_CONVERTER_HANDLER, config. getConversionHandler ( ) )
734	assertThat ( notAnnotated. buildEmbedder ( ), instanceOf ( MyEmbedder. class ) )
735	assertThat ( matcher. matches ( theString ), is ( false ) )
736	assertThat ( url. toUri ( ), is ( equalTo ( "http://localhost:3000/products?q=doni" ) ) )
737	Assert. assertEquals ( buff. toString ( ), result. getContext ( ) )
738	assertEquals ( expResult, stringBuilder. toString ( ) )
739	assertTrue ( EqualsBuilder. reflectionEquals ( config, config2, "keyStore", "ourCertificate" ) )
740	assertThat ( response. getBody ( ), containsString ( "Hello World" ) )
741	assertEquals ( 0, rs. getInt ( 1 ) )
742	Assert. assertEquals ( "Default", name )
743	assertEquals ( expected. trim ( ), output. trim ( ) )
744	assertEquals ( expected, found )
745	assertSame ( toTest, toTest. setParamsSerializer ( Serializer. class ) )
746	assertEquals ( expectedAgents, devExtendedMachine. getAgents ( ) )
747	assertTrue ( latch. await ( 10, TimeUnit. SECONDS ) )
748	assertEquals ( expected, actual )
749	assertTrue ( "Expected null result", result == null )
750	assertFalse ( checker. isDetected ( ) )
751	assertEquals ( "Wrong size of grid", treeGrid. getSize ( ). getWidth ( ), treeGrid. getSize ( ). getHeight ( ) )
752	assertTrue ( j >= Integer. MIN_VALUE && j <= Integer. MAX_VALUE )
753	assertEquals ( expected, actual )
754	assertEquals ( "Expected 100 results!", 100, rows. size ( ) )
755	assertThat ( result, is ( nullValue ( ) ) )
756	Assert. assertNotNull ( "no topic found with a topic name after reload", topic )
757	assertEquals ( rootFunction. getId ( ), overwriteFunction. getId ( ) )
758	assertEquals ( 0, triggerSpec. length ( ) )
759	assertTrue ( wasCalled. get ( ) )
760	assertEquals ( expectedResult, cut. getAliadaEventTypeFrom ( anEventTypeThatIsInCache ) )
761	assertEquals ( InternationalFixedDate. of ( 2012, 7, 27 ), test )
762	assertThat ( findFeature ( featureList, "GetLocalListVersion" ), is ( instanceOf ( LocalListVersionFeature. class ) ) )
763	assertTrue ( news. checkVisibilityFor ( moderator ( author ) ) )
764	assertEquals ( assertion, getTest )
765	Assert. assertNull ( r. getRequest ( ). getSession ( ). getAttribute ( SEC_CONTEXT_ATTR ) )
766	Assert. assertArrayEquals ( new String [ ] { "bow=it", "bow=is", "bow=12.345", "bow=feet", "bow=long" }, generator. extractFeatures ( new String [ ] { "it", "is", "12.345", "feet", "long" }, Collections. emptyMap ( ) ). toArray ( ) )
767	assertEquals ( "SOAPAction", hmd. getOperationName ( ) )
768	assertThat ( log. addIfNeeded ( new Level ( Level. INFO ) ), is ( nullValue ( ) ) )
769	assertTrue ( errorsContainer. equals ( errors ) )
770	assertTrue ( stack2. isEmpty ( ) )
771	assertEquals ( "", result )
772	assertSame ( id, result )
773	assertEquals ( "my_silly_filename.pem", result )
774	assertTrue ( em instanceof WebApplicationExceptionMapper )
775	assertThat ( environmentVariables. getProperty ( "webdriver.driver" ), is ( "safari" ) )
776	assertThat ( reason, assumingFields ( "myTypeToField" ). areNotModifiedAndDoNotEscape ( ) )
777	assertThat ( d, is ( Duration. ofNegative ( ). years ( 1 ). months ( 1 ). days ( 10 ). hours ( 3 ). seconds ( 5 ). nanos ( 123456789 ). build ( ) ) )
778	assertEquals ( 2d, e. evaluate ( ), 0.0 )
779	assertEquals ( "caseTask", activityType )
780	assertEquals ( "Item 1 should be removed from the list", 0, grid. getRowCount ( ) )
781	assertEquals ( expectedCredential, credential )
782	assertThat ( "VAL4.values().length", obj, equalTo ( 4 ) )
783	assertEquals ( getLabel ( ), 0.0, eye. minus ( m3 ). getEuklideanValue ( ), TOLERANCE )
784	Assert. assertEquals ( 2, s. x )
785	Assert. assertNotNull ( obs )
786	assertEquals ( expected, built )
787	Truth. assertThat ( gson. toJson ( treeMessage ) )
788	assertEquals ( rp, point )
789	assertFalse ( pair. isPresent ( ) )
790	assertTrue ( doc. getGgrammaticalFeatures ( ). isEmpty ( ) )
791	assertTrue ( "type should be unique, but was: " + type, seen. contains ( type ) )
792	assertNotNull ( result )
793	assertEquals ( "Hello World", interpreter. sayHello ( ) )
794	Assert. assertEquals ( expectedOutput, output )
795	assertThat ( excludeSkippedAndIgnored ( outcomes ). size ( ), is ( 2 ) )
796	assertEquals ( expected, future. getValue ( ) )
797	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 2, warnings. size ( ) )
798	assertEquals ( request. getCriteriasByTable ( ). size ( ), 1 )
799	assertThat ( request. getEncodedParameter ( foobar ), equalTo ( foobar ) )
800	assertEquals ( testRecords, read )
801	assertThat ( domainIds, is ( ids ) )
802	assertTrue ( fs. deleteOnExit ( path ) )
803	arrays. assertEndsWith ( description, new short [ 1 ], new short [ 0 ] )
804	assertEquals ( "curl -X POST -X GET -X", curl )
805	assertEquals ( TEST_CONTENT, out. toString ( "UTF-8" ) )
806	assertTrue ( sqlString. contains ( "desc" ) )
807	assertFalse ( monitor. contains ( patch2 ) )
808	assertThat ( result. endsWith ( expectedString ), is ( true ) )
809	assertNotNull ( slf4jInfoWriter )
810	Assert. assertEquals ( new HashSet < > ( Arrays. asList ( new NotNullDefinition ( "NOTNULL", "VARCHAR(255)" ), new NotNullDefinition ( "NOTNULL", "FIRST_NAME", "VARCHAR(255)" ), new NotNullDefinition ( "NOTNULL", "PROFESSION", "VARCHAR(50)" ), new NotNullDefinition ( "NOTNULL", "RECOGNITION", "VARCHAR(255)" ), new NotNullDefinition ( "NOTNULL", "COMMENTS", "TEXT" ) ) ), new HashSet < > ( notNullDefinitions ) )
811	assertArrayEquals ( a, dbr. query ( "SELECT INTA FROM CA_TEST WHERE INTA = $1", List. of ( new Object [ ] { a } ) ). at ( 0 ). getArray ( "inta", short [ ]. class ) )
812	assertTrue ( r1 instanceof PublicCloneable )
813	assertRequest ( "DELETE", "Call/%s/Record/", callId )
814	assertLoadBalanced ( two. loadBalanced )
815	assertEquals ( expected, Sets. intersection ( expected, other ) )
816	Assert. assertEquals ( expected, actual )
817	assertTrue ( ex. isPrime ( - 2 ) )
818	assertFalse ( result. get ( ) )
819	Assert. assertNotNull ( product )
820	Assert. assertEquals ( "GET", s )
821	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5, 6 ) ) )
822	assertTrue ( Arrays. equals ( pktSerialized, actual ) )
823	assertThat ( webConfig. isGWTServiceServletDefined ( ), is ( true ) )
824	assertEquals ( md. pack ( ), validBytes [ i ] )
825	assertEquals ( 0, entities. size ( ) )
826	assertTrue ( entityVersion. toString ( ). contains ( version ) )
827	assertEquals ( thisMetaPage. getProperty ( RDF. type ), RDF. type )
828	assertTrue ( batteryInfos. size ( ) == 0 )
829	assertOutputSameTextFile ( gen, "DefineConstructor_ItemPresentationModel.java.txt" )
830	assertEquals ( formatedValue, "12345-678" )
831	assertEquals ( true, typeUsage. isInterface ( new InFileSymbolResolver ( JdkTypeResolver. getInstance ( ) ) ) )
832	Assert. assertFalse ( "No configs were found", configs. isEmpty ( ) )
833	assertEquals ( "value1", claims. get ( "claim1" ) )
834	Assert. assertEquals ( HttpServletResponse. SC_FORBIDDEN, response. getStatus ( ) )
835	assertEquals ( SENSOR_CREATE_VIEW, view )
836	Assert. assertNotNull ( result )
837	assertEquals ( Double. valueOf ( "12.3" ), converter. getAsObject ( facesContext, new UIPanel ( ), "12.3" ) )
838	assertThat ( ts. with ( PlainTime. COMPONENT. roundedToFullHour ( ) ), is ( PlainTimestamp. of ( 2014, 12, 31, 23, 0 ) ) )
839	Assert. assertNull ( new CompareTool ( ). compareByContent ( filename, cmpFilename, destinationFolder, "diff" ) )
840	assertTrue ( items. size ( ) > 0 )
841	assertEquals ( 24, this. policy. getMaxReservedTime ( ) )
842	assertEquals ( 0.48936170212765956, distance, DELTA )
843	assertInstanceOf ( "Expected y = f(-x)", ConcatenatedTransformDirect1D. class, transform )
844	Assert. assertTrue ( future. get ( ) )
845	assertNotNull ( prismNormalizer )
846	assertThat ( javaTypeFinder. isTypeOf ( primitiveSubType, primitiveType ), is ( false ) )
847	assertEquals ( expect, DateUtils. addTime ( start, Calendar. MONTH, 1 ) )
848	assertTrue ( response. contains ( "cats" ) )
849	assertEquals ( size, vertices. size ( ) )
850	assertTrue ( "Two reservation transitions should be removed", _transition. hasRemoved ( vo2BasePath ) )
851	assertThat ( this. url, is ( equalTo ( "/context/dispatcher/withPathVariables?one=1&two=2&three=3" ) ) )
852	assertEquals ( "test", config. getString ( "Test" ) )
853	Truth. assertThat ( counter. count ( batch ) )
854	assertEquals ( expectedTriggerTime, actualValue )
855	assertEquals ( new Dimension ( 50, 50 ), ac. getValue ( ). getSize ( ) )
856	assertKernel ( kernel, ANNULUS, e )
857	assertNotNull ( c )
858	assertParseTree ( rootNode ( "Ben", node ( "id", "Ben", node ( "?", null, "@" ), stringNode ( "tel", "Ben" ) ) ), tree )
859	assertEquals ( expected, actual )
860	assertEquals ( 0, cookies. size ( ) )
861	assertEquals ( asList ( "J", "John", "John", "." ), toText ( select ( jcas, Token. class ) ) )
862	assertEmptyHotspots ( samplingProfiler )
863	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
864	assertTrue ( voter. voteMatch ( affiliation, organization ) )
865	assertEquals ( result, "2007-12-03" )
866	assertMapping ( node, 0, 0, 0, 0, 0, 0, 8 )
867	assertThat ( result, is ( jsonString ( "" ) ) )
868	assertThat ( name. getSegments ( ), contains ( "hello" ) )
869	assertEquals ( "Hello", ( ( BizExceptionNoDefaultConstructor ) read ). getMessage ( ) )
870	assertTrue ( rpbh instanceof RewriteParameterizedBatchHandler )
871	Assert. assertEquals ( AbstractRemoveBean. RETURN_STRING, result )
872	assertOut ( "/**\\n * @constructor\\n */\\norg.apache.royale.A = function() {\\n};" )
873	Assert. assertEquals ( 7, ( ( VersionMessageWrapper ) list. get ( 0 ) ). getMessageBuffer ( ). readableBytes ( ) )
874	assertFalse ( ValidationUtils. hasValidationFailures ( vrs ) )
875	Assert. assertFalse ( "On ValidationException input should be invalid", isValid )
876	assertEquals ( 23, a )
877	Assert. assertEquals ( "comp's environment should be set", environment, comp. getEnvironment ( ) )
878	assertEquals ( "Response body is not correct.", USER_IN_REALM1_WITH_REALM_AND_SUFFIX, Utils. makeCallWithBasicAuthn ( principalServlet ( webAppURL ), USER_IN_REALM1_WITH_REALM_AND_SUFFIX, CORRECT_PASSWORD, SC_OK ) )
879	assertTrue ( logger. isWarnEnabled ( ) )
880	Assert. assertTrue ( t. hasOriginalTemplate ( ) )
881	assertEquals ( exp, res )
882	assertEquals ( 0, changeSets. size ( ) )
883	Assert. fail ( "NullPointerException should have been thrown" )
884	assertEquals ( builder. build ( aType ), builder. build ( aType ) )
885	assertEquals ( "", tag. getName ( ) )
886	assertThat ( graphManager. getGraph ( ). traversal ( ). V ( ). has ( "tim_id", createEntity. getId ( ). toString ( ) ). has ( "rev_to", createEntity. getId ( ). toString ( ) ). count ( ). next ( ), is ( 1L ) )
887	assertThat ( selected. entrySet ( ), is ( empty ( ) ) )
888	assertTrue ( response. contains ( "I" ) )
889	assertEquals ( this. q2Y1900, next )
890	assertEquals ( header, ContentSummary. getHeader ( false ) )
891	assertEquals ( 1, countFiles ( iter ) )
892	assertNotNull ( identity )
893	Assert. assertEquals ( "test", savedTask. getName ( ) )
894	assertThat ( result, Matchers. equalTo ( "%3Dtest1=%3Dblah1&te%3Dst2=bl%3Dah2&test3%3D=blah3%3D" ) )
895	assertEquals ( "Thank you very much for your email!", email. getVisibleText ( ) )
896	assertEquals ( 2, s. detect ( l2 ). val )
897	assertEquals ( IllegalArgumentException. class, e. getClass ( ) )
898	assertEquals ( EntityNameCharType. BOUNDARY, type )
899	assertThat ( database, is ( notNullValue ( ) ) )
900	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + filename, sourceFolder + "cmp_" + filename, destinationFolder, "diff_" ) )
901	shorts. assertNotGreaterThan ( description, actual, expected )
902	assertTrue ( interceptor. shouldTraverseCause ( new RuntimeException ( "Should have thrown exception" ) ) )
903	Assert. assertEquals ( "--xxxxxxxxxxxxxxxxxxxxxxxxxxxx\\r\\n" + "Content-Disposition: multipart/form-data; name=\\"test\\"; filename=\\"hello%20%CE%BA%CF%8C%CF%83%CE%BC%CE%B5!%25\\"\\r\\n" + "\\r\\n" + "hello world\\r\\n" + "--xxxxxxxxxxxxxxxxxxxxxxxxxxxx--\\r\\n", out. toString ( StandardCharsets. US_ASCII. name ( ) ) )
904	Assert. assertEquals ( expResult, result )
905	assertEquals ( "say:hello", hello )
906	assertThat ( reader, is ( instanceOf ( JiraSearchReader. class ) ) )
907	assertEquals ( mockResponse, testResponse )
908	assertEquals ( "someBean.someProperty", PrettyExpression. prettyPrint ( expr ) )
909	assertEquals ( "{\\"@context\\":{" + "\\"@vocab\\":\\"http://xmlns.com/foaf/0.1/\\"" + "}" + ",\\"@type\\":\\"Offer\\"," + "\\"name\\":\\"Dietrich Schulten\\"}", w. toString ( ) )
910	assertTrue ( ScriptTestUtil. scriptIsInstanceOfScript ( testScript, expectedScript ) )
911	assertTrue ( "Has childrens", root. hasChildNodes ( ) )
912	Assert. assertEquals ( "OPTIONS", methods. iterator ( ). next ( ). getName ( ) )
913	Assert. assertTrue ( this. component. setCollaborators ( this. entity, collaborators ) )
914	Assert. assertTrue ( true )
915	assertSame ( GBP_2_34, test )
916	assertEquals ( DecodeQualification. INTENDED, plugIn. getDecodeQualification ( path ) )
917	Assert. assertNotNull ( addressResultsDto )
918	assertThat ( model. getChildCount ( model. getRoot ( ) ), equalTo ( 0 ) )
919	assertEquals ( GRADOOP_ID_VAL_8, p. getGradoopId ( ) )
920	assertThat ( response. getStatus ( ), equalTo ( 503 ) )
921	assertEquals ( dt. intValue ( ), 5 )
922	assertThat ( target. getGoals ( ), contains ( "first", "second", "third" ) )
923	assertNotNull ( result )
924	Assert. assertEquals ( expectedExceptionMessage, thrownExceptionMessage )
925	assertEquals ( agent, clone )
926	assertEquals ( loader. getNumGenes ( ), 100 )
927	assertTrue ( newYearsEve. isBefore ( newYearsDay ) )
928	assertEquals ( "ok", driver. findElement ( By. cssSelector ( "h2" ) ). getText ( ) )
929	assertThat ( params. isMonochrome ( ), equalTo ( true ) )
930	assertEquals ( pdfboxValues, acrobatValues )
931	assertThat ( signedTransaction. toByteArray ( ), equalTo ( EXPECTED_BYTE_REPRESENTATION ) )
932	assertThat ( intOrString1, equalTo ( intOrString2 ) )
933	assertNotNull ( actual )
934	assertEquals ( expectedBalance, customer. getBalance ( ), 0.001f )
935	assertEquals ( "bar", rs. getString ( 1 ) )
936	assertArrayEquals ( new long [ ] { 0, 0, - 1, - 1, - 1 }, blocks. getBlockListAsLongs ( ) )
937	assertEquals ( 0, actual. size ( ) )
938	assertThat ( result, equalTo ( v ) )
939	assertEquals ( Status. OK, status )
940	assertThat ( result, is ( outbound ) )
941	assertEquals ( "1.0", events. get ( 0 ). getEventType ( ) )
942	assertEquals ( expected, query. createNewDocument ( ). toString ( ) )
943	assertEquals ( false, result )
944	assertEquals ( 400, res )
945	assertTrue ( BCrypt. checkpw ( plain, expected ) )
946	assertThat ( users. size ( ), is ( 3 ) )
947	assertTrue ( rulesThatHadErrors. remove ( "Incoherent restrictions 7" ) )
948	assertEquals ( expResult, result )
949	assertTrue ( target. isClosed ( ) )
950	assertEquals ( "a<V>\\n", found )
951	assertEquals ( object, index. get ( object ) )
952	assertEquals ( "Validation message text not correct", "App Error found for {0}", messageText )
953	assertEquals ( "/path2/path3?q1=v1&q2=v2", uri )
954	assertThat ( mapOutput. size ( ), is ( 0 ) )
955	assertTrue ( "an=hello.wav it=1". equals ( result ) )
956	assertNull ( ic. getProperty ( object1 ) )
957	assertEquals ( "OK", set1. get ( ). data ( ) )
958	assertNotEquals ( otherHashCode, foreignableFieldHashCode )
959	assertEquals ( expected, actual )
960	assertEquals ( "test", echo. echo ( "test" ) )
961	testRunner. assertAllFlowFilesTransferred ( EncodeContent. REL_FAILURE, 1 )
962	assertEquals ( "SimpleTouchable", depends. getTouchable ( ). getName ( ) )
963	assertEquals ( expectedHtml, html )
964	assertEquals ( expectedQuery, actualQuery )
965	assertEquals ( "{\\"statements\\":[{\\"logical\\":\\"AND\\",\\"attribute\\":\\"no\\",\\"operand\\":\\"EQUALS\\",\\"value\\":\\"value1\\"},{\\"logical\\":\\"AND\\",\\"attribute\\":\\"yes\\",\\"operand\\":\\"EQUALS\\",\\"value\\":\\"value2\\"},{\\"logical\\":\\"AND\\",\\"attribute\\":\\"yes\\",\\"operand\\":\\"EQUALS\\",\\"value\\":\\"value3\\"},{\\"logical\\":\\"AND\\",\\"attribute\\":\\"yes\\",\\"operand\\":\\"EQUALS\\",\\"value\\":\\"value2\\"},{\\"logical\\":\\"AND\\",\\"attribute\\":\\"yes\\",\\"operand\\":\\"EQUALS\\",\\"value\\":\\"value3\\"},{\\"logical\\":\\"AND\\",\\"attribute\\":\\"no\\",\\"operand\\":\\"EQUALS\\",\\"value\\":\\"value1\\"},{\\"logical\\":\\"AND\\",\\"attribute\\":\\"yes\\",\\"operand\\":\\"EQUALS\\",\\"value
966	assertThat ( javaDocComment, containsString ( "(Required)" ) )
967	Assert. assertEquals ( USER_NAME_WITH_DELIMITER, info. getUser ( ) )
968	assertEquals ( 0, filter. getFrom ( ) )
969	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE NAME(nodes) <= 'literal'" ) )
970	assertEquals ( sumLabel. getText ( ), String. valueOf ( number ) )
971	Assert. assertEquals ( 400, response. getStatus ( ) )
972	Assert. assertEquals ( SIMPLE_RETURN_CODE. TIMEOUT, check. getErrorType ( ) )
973	Assert. fail ( "Expected ConfigurationException" )
974	assertEquals ( "error", resp. getResponseBody ( ). trim ( ) )
975	assertEquals ( Arrays. slice ( a, 0, a. length ), a )
976	Assert. assertEquals ( expectedNode. toString ( ), pdoc. toString ( ) )
977	assertHealthCheck ( client. execute ( get ) )
978	Assert. assertFalse ( res. isEmpty ( ) )
979	assertResponseContainsModel ( "<a href=\\"/cq:Page\\" class=\\"consoleLink\\">" + "<img class=\\"componentIcon\\" src=\\"modelregistry/api/componenticon\\"/> cq:Page</a>", Model. class, 123L, "modelName" )
980	assertThat ( result. getAccessTime ( ), is ( equalTo ( 42L ) ) )
981	assertEquals ( "Message: /abc", ResponseBodyInterpolator. interpolate ( "Message: [request.path]", req ) )
982	Assert. assertTrue ( maxError < 0.0005 )
983	assertEquals ( "x.y", pp. toString ( ) )
984	AssertionUtils. multiAssertEquals ( createAsDocument10, response6. getResponseObject ( ) )
985	Assert. assertTrue (! counts. containsKey ( Jsprit. Strategy. RADIAL_BEST ) )
986	assertEquals ( "Shouldn't change the function", fun, result )
987	assertMockEndpointsSatisfied ( )
988	assertFalse ( connectFuture. isConnected ( ) )
989	assertEquals ( l, arrival )
990	assertEquals ( expResult, result )
991	Assert. assertTrue ( list. size ( ) > 0 )
992	assertEquals ( 0, set. size ( ) )
993	JSONAssert. assertEquals ( "Message", new JSONArray ( Arrays. asList ( 1, 4, 3 ) ), actual, false )
994	Assert. assertEquals ( b, a. insertColumn ( 1, column ) )
995	assertEquals ( "[start:a:nsa, end:a]", handler. history. toString ( ) )
996	assertTrue ( aclDao. hasEntry ( principal, secureObject ) )
997	Assert. assertNotNull ( mediaResult )
998	assertTrue ( UrlUtils. isMatch ( consumerUrl, providerUrl ) )
999	Assert. assertFalse ( policy. isResponseCacheable ( "GET", response ) )
1000	assertEquals ( 0, simple. size ( ) )
1001	assertEquals ( RESOURCES_DIR, cfg. path ( ) )
1002	assertEquals ( d1, d2 )
1003	assertEquals ( "Invalid query", "SELECT e1 FROM pm1 WHERE e1.e1!= 'x' ORDER BY e1", state. getQuery ( ) )
1004	assertEquals ( targetCS, actualCS )
1005	assertThat ( underTest. getDispatched ( ). toString ( ), containsString ( String. format ( "[%s, %s, %s]", REPOSITORY_1, REPOSITORY_2, REPOSITORY_3 ) ) )
1006	assertEquals ( "Should have been 1 test case", 1, cases. size ( ) )
1007	assertTrue ( "Ldap realm should be created", ops. exists ( TEST_LDAP_REALM_ADDRESS ) )
1008	assertEquals ( msgs, count )
1009	assertEquals ( "https://advertised.listener:2000/foo/bar", url )
1010	assertEquals ( "ReverseEngineering: \\n" + "  Catalog: s\\n" + "    Schema: s\\n" + "      IncludeTable: null\\n" + "        Column: 1\\n" + "      IncludeTable: null\\n" + "        Column: 2\\n" + "      IncludeTable: null\\n" + "        Column: 3\\n" + "      IncludeTable: null\\n" + "        Column: 1\\n" + "      IncludeTable: null\\n" + "        Column: 2\\n" + "      IncludeTable: null\\n" + "      IncludeTable: null\\n" + "        Column: 1\\n" + "      IncludeTable: null\\n" + "        Column: 3\\n" + "      IncludeTable: null\\n" + "        Column: 3\\n" + "      IncludeTable: null\\n" + "        Column: 2\\n" + "      IncludeTable: null\\n" + "        Column: 3\\n" + "      IncludeTable: null\\n" + "      IncludeTable: null\\n" + "        Column
1011	assertNotNull ( result )
1012	assertEquals ( TajoDataTypes. Type. INT8, d. type ( ) )
1013	assertFalse ( ( boolean ) testedMethod. invoke ( tasksManagerImpl, STARTING_BYTE_OF_3_BYTE_CHAR ) )
1014	assertContainerLaunchContext. getApplicationACLs ( ). isEmpty ( )
1015	Assert. assertNull ( created )
1016	assertEquals ( "Second", victim. infer ( ) )
1017	Assert. assertTrue ( jobCounts. get ( 2 ). jobCount == 1 )
1018	assertEquals ( expectedContinuationToken, actualContinuationToken )
1019	assertEquals ( "foo", proxy. method ( ) )
1020	assertSample ( sample, x, y )
1021	assertThat ( databaseHelper. queryForLongValue ( "mntner:        TEST-MNT\\n" + "descr:         Test maintainer\\n" + "admin-c:        TP1-TEST\\n" + "auth:          MD5-PW # 123\\n" + "mnt-nfy:        mnt-nfy@ripe.net\\n" + "auth:          MD5-PW # # 1234567890 # 1234567890 # 1234567890 # 1234567890 # 1234567890 # 1234567890\\n" ), is ( true ) )
1022	Assert. assertEquals ( 2, employees. size ( ) )
1023	FixtureAsserts. assertStringMatchesJsonFixture ( "UpdatePurchaseOrder by admin response render to HAL+JSON", actualResponse, "/fixtures/hal/order/expected-admin-update-purchase-order.json" )
1024	assertNotNull ( token )
1025	assertThat ( response. hasNotExpired ( ), is ( true ) )
1026	assertEquals ( 1, hits. totalHits )
1027	assertEquals ( expectedQuery, actualQuery )
1028	Assert. assertNotNull ( out. getD1 ( ) )
1029	assertEquals ( "clearCache timeout", latch. getCount ( ), 0 )
1030	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Start>" + "before" + "<Child>content</Child>" + "after" + "</Start>", builder. build ( ). toXml ( ) )
1031	assertTrue ( child. isValid ( ) )
1032	Assert. assertEquals ( cap - i, dbq. remainingCapacity ( ) )
1033	assertEquals ( "3 啶�啶苦え啷� 啷�啶距う", t. format ( new Date ( 0 ) ) )
1034	Assert. assertNull ( user )
1035	assertThat ( archive. list ( ). size ( ), is ( 0 ) )
1036	GAssert. assertEquals ( articles, result )
1037	assertTrue ( p. startsWith ( "tmp" ) )
1038	Assert. assertTrue ( policy. isResponseCacheable ( request, response ) )
1039	assertEquals ( "Bubble Chart Title", bubbleChart. getTitle ( ) )
1040	assertTrue ( "i=" + i + " d=" + d,! nnList. isEmpty ( ) )
1041	assertThat ( orderElement. getAdvancePercentage ( ), sameValueAs ( division. divide ( 20, 100 ) ) )
1042	assertNotEquals ( Movie. UNKNOWN, result )
1043	mockery. assertIsSatisfied ( )
1044	assertTrue ( content. replaceAll ( "\\\\s+", " " ). contains ( "text box 1 text box 2 text box 3" ) )
1045	assertEquals ( s, ps )
1046	assertMockEndpointsSatisfied ( )
1047	assertEquals ( expected, e. evaluate ( ), 0.0 )
1048	assertEquals ( distance, p1. distance ( p2 ), 0.00001 )
1049	Assert. assertEquals ( allMatchingQueryParamsFilter, allExisting )
1050	assertNull ( query )
1051	mock. assertIsSatisfied ( )
1052	Assert. assertEquals ( response. getStatus ( ), Response. Status. SUCCESS )
1053	Assert. fail ( validator. getErrors ( ). toString ( ) )
1054	assertSnake ( "       \\n" + "       \\n" + "   ��   \\n" + "  ��������������������������������������������������������������������������
1055	assertEquals ( 1, constraints. size ( ) )
1056	Assert. assertTrue ( body. contains ( "Bananabot/1.0" ) )
1057	assertEquals ( MultiTainter. taintedByte ( ( byte ) 1, "Bar" ), taint. getValue ( ) )
1058	assertEquals ( ImmutableMap. of ( "foo1", "bar1", "foo2", "bar2" ), response. getHeaders ( ) )
1059	assertParseOneDoc ( editor, "DOC(0): ", "  KEY(0): hello:", "    KEY(2): world:", "      RAW(4): message", "      RAW(-1): " )
1060	Assert. assertEquals ( sendCountBefore + 1, AlertSender. getSendCount ( ) )
1061	assertThat ( resultCommand, is ( expectedCommand ) )
1062	assertEquals ( "1", grid. getCell ( 0, 0 ). getText ( ) )
1063	assertEquals ( 0.5, calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
1064	assertEquals ( 2, IterableUtils. count ( IncludeRelationships. getInstance ( ). getAll ( database ) ) )
1065	assertWktEquals ( Convention. WKT2, "EngineeringCRS[��A spherical CRS��,\\n" + "  EngineeringDatum[��Centre��],\\n" + "  CS[spherical, 3],\\n" + "    Axis[��Geocentric radius (r)��, up, Unit[��metre��, 1]]]", crs )
1066	assertTrue ( "No validation was successful", failed )
1067	Assert. assertEquals ( 2, response. getMatchCount ( ) )
1068	assertEquals ( "Test Page", page. asString ( ) )
1069	assertEquals ( namedBean. getName ( ), "John" )
1070	assertNull ( candidate )
1071	assertThat ( addressResolver. get ( ), allOf ( notNullValue ( ), instanceOf ( ListAddressResolver. class ) ) )
1072	Assert. assertEquals ( 1, recorder. getLastInput ( ) )
1073	assertThat ( splits, is ( correctSplits ) )
1074	Assertion. assertEquals ( loadedDataSet, actualDataSet )
1075	assertEquals ( 0, crossWord. getSolutionListener ( ). solutionsNo ( ) )
1076	assertEquals ( testResult. size ( ), 0 )
1077	assertions. doesNotContain ( false )
1078	assertEquals ( pll, testedStore. getProperty ( "logX" ) )
1079	assertThat ( controller, is ( equalTo ( method ) ) )
1080	assertEquals ( expecting, result )
1081	assertEquals ( entity, one )
1082	assertTrue ( peterRank <= 2 )
1083	assertEquals ( 1, daysToWorkday )
1084	assertThat ( client. getMapping ( INDEX, TYPE ), is ( equalTo ( mapping ) ) )
1085	assertTrue ( "Should match feed URI with a context root - regex is: " + targetRegex. pattern ( ), targetRegex. matcher ( addContextRoot ( FEED ) ). matches ( ) )
1086	Assert. assertTrue ( fr. element0 ( ). isSuccess ( ) )
1087	Assert. assertFalse ( importer. isSame ( null ) )
1088	assertTrue ( zda. toString ( ). contains ( "ZDA,9,8,7.6" ) )
1089	Assert. assertEquals ( change, updatedChange )
1090	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
1091	Assert. assertNull ( "Wrong data", builtByFactory. getData ( ) )
1092	assertEquals ( mockBundle, classUnderTest. getBundle ( ) )
1093	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
1094	assertEquals ( "(34 c)\\n", found )
1095	assertEquals ( "Method toString is wrong", "BlobMapper{field=field, indexed=false, sorted=true, validated=true, column=field}", mapper. toString ( ) )
1096	assertNotNull ( text )
1097	assertTrue ( "Something wrong. Returned wadl length is not > 0", applicationWadl. length ( ) > 0 )
1098	assertEquals ( 4, ptos. bytesWritten )
1099	assertTrue ( lastSeenTokens. get ( ). isEmpty ( ) )
1100	assertTrue (! result )
1101	assertTrue ( convertedIteratorToList. size ( ) == 4 )
1102	assertThat ( found, is ( true ) )
1103	assertEquals ( "No errors", 0, error. get ( ) )
1104	assertEquals ( Lists. newArrayList ( "1", "2", "3", "4", "5" ), getStringsFromElements ( elements ) )
1105	assertThat ( defaultSettings, is ( new UUIDSuffixSettings ( ) ) )
1106	assertEquals ( 0, parser. getOptions ( ). size ( ) )
1107	assertEquals ( db. get ( "bar" ), "b" )
1108	assertEcssEquals ( ".footer{clear:none}", convertFragment ( xcss ) )
1109	assertEquals ( "Should get expected result", result, filter. toString ( ) )
1110	assertEquals ( expResult, result )
1111	assertThat ( spiLoader, hasItem ( isA ( FileIOComponentFamilyDefinition. class ) ) )
1112	assertTrue ( isSorted )
1113	assertFalse ( validator. isValid ( resource, MetadataSection. PARTICIES_SECTION ) )
1114	assertEquals ( "DBREF", ref. getPDBHeader ( ). getHead ( ). getSpaceGroup ( ). getShortSymbol ( ) )
1115	assertEquals ( "The records number is correct " + clusterName. getName ( ), 2, resultIterator. size ( ) )
1116	assertEquals ( handler. parseString ( testDate ), test )
1117	assertEquals ( 1L, id. getVersionIdPartAsLong ( ). longValue ( ) )
1118	assertEquals ( "AB", s )
1119	assertEquals ( "CFBundleShortVersion in file '" + infoPList + "' is not the expected version '" + dynamicVersion + "'.", dynamicVersion, new PListAccessor ( infoPList ). getStringValue ( PListAccessor. KEY_BUNDLE_SHORT_VERSION_STRING ) )
1120	assertEquals ( 2, hitCount )
1121	Assert. assertEquals ( "[[1, 2], [1, baz, 2.0], [2, bar, 2.0], [2, baz, 2.0], [3, bar, 2.0], [3, baz, 2.0], [4, bar, 2.0], [4, baz, 2.0], [4, bar, 2.0], [4, baz, 2.0]]", permutations. toString ( ) )
1122	assertThat ( lists. serial ( ), is ( list ( 1, 2, 3, 4 ) ) )
1123	assertEquals ( expected, actual )
1124	assertEquals ( "Address format not correct", linkedTreeMapValue1, linkedTreeMapValue2 )
1125	assertEquals ( "en_US", processor. getSpell ( ) )
1126	assertNotNull ( t )
1127	assertThat ( values, contains ( new SymbolicValue ( "one_path", "two_paths.js" ) ) )
1128	assertTrue ( result )
1129	assertEquals ( "Database", dsc. getPanel ( ) )
1130	assertThat ( condition. isSatisfied ( ), is ( true ) )
1131	assertEquals ( browsersAsXml, "<browsers>\\n" + "<browsers>\\n" + "<name>Chrome</name>\\n" + "<name>FireFox</name>\\n" + "<name>Internet Explorer</name>\\n" + "</browsers>" )
1132	assertEquals ( 0, tdefsRes. getBody ( ). length )
1133	assertArrayEquals ( expected, actual )
1134	assertNull ( session )
1135	assertEquals ( "Substitution was not correctly applied", "This is a lunch $1 test.", result. get ( ) )
1136	assertEquals ( expResult, result )
1137	assertDecimalEquals ( obv. getValue ( 9999 ), 9994.5 )
1138	Assert. assertEquals ( expected, result )
1139	assertEquals ( "WHERE id = 12345", statement. getQuery ( ) )
1140	assertTrue ( client. isJacksonFeatureRegistered ( ) )
1141	assertEquals ( count, store. size ( ) )
1142	assertEquals ( "select entity_0 from Entity entity_0 where ( ( entity_0.code = :code_1 ) and ( entity_0.code = :code_2 ) )", select. getQuery ( ) )
1143	assertEquals ( "not a map", v1 )
1144	assertNotNull ( pom )
1145	assertInstancesOf ( java. sql. Timestamp. class, rv )
1146	assertEquals ( presenter. isFilterOn ( ), true )
1147	assertEquals ( "getVersion() doesn't return the same value as the previous setVersion()", version, domainEntity. getVersion ( ) )
1148	assertEquals ( "ATGC", s. toString ( ) )
1149	assertEquals ( "file.ttl", fn2 )
1150	assertRequest ( "POST", "Verification/Address/" )
1151	assertTrue ( ( ( NgMinProcessor ) victim ). isSupported ( ) )
1152	assertThatPersonIsNotProtected ( mapper ( FOR_NON_AUTORITY_CLIENT ). map ( person, AlwaysCensorProtectedData, CPRProtectionLevel. DoNotCensorCPR ) )
1153	Assert. assertEquals ( expResult, result )
1154	assertEquals ( "three", lastElement )
1155	assertEquals ( "192.168.0.123/24", event. getIp ( ). getAddress ( ) )
1156	assertEquals ( 1, ( int ) field. getFieldId ( ) )
1157	assertEqualsJFigletSmushing ( asciiArt )
1158	assertResultSet ( res, "testTimezonedTable2.result" )
1159	assertEquals ( expected, actual )
1160	assertEquals ( "Hello Camel in action", reply )
1161	assertEquals ( 5, value. asInt ( ) )
1162	assertEquals ( "GBP 3.57", test. toString ( ) )
1163	assertThat ( fieldError, is ( nullValue ( ) ) )
1164	assertEquals ( expected, result )
1165	assertThat ( timeline, is ( notNullValue ( ) ) )
1166	Assert. assertNotNull ( drink )
1167	assertEquals ( "alpha bravo charlie delta echo foxtrot golf hotel india%n" + "juliet kilo lima", TextHelper. textWrap ( s ) )
1168	assertTrue ( p1. list ( blk ). size ( ) == 1 )
1169	assertEquals ( "entry-" + i, entry. getName ( ) )
1170	assertEquals ( "<b>Hello, world</b><!--evil</b>", filter. process ( markup ) )
1171	assertNotNull ( conceptService. getConceptClass ( conceptClass. getId ( ) ) )
1172	assertTrue ( _comp. isEquals ( json, expected ) )
1173	Assert. assertEquals ( 1, retVal. intValue ( ) )
1174	spliterators. assertHasOnlyCharacteristics ( INFO, actual, DISTINCT, SORTED )
1175	Assert. assertEquals ( 20, lambda. testAddInt ( 15, 5 ) )
1176	assertEquals ( DispatcherType. INCLUDE, dispatcherType )
1177	assertEquals ( "NoViableAltException('!'@[1:1: Tokens : ( T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 |" + " T__41 | LTE | EQ | GT | GTE | BOOLEAN | AND | OR | NOT | ASC | DESC | CONTAINS | WITHIN | OF | DIRECT |" + " UUID | ID | LONG | FLOAT | WS );])", error )
1178	assertOut ( "/**\\n * @interface\\n * @extends {foo.bar.IB}\\n * @extends {baz.goo.IC}\\n * @extends {foo.ID}\\n */\\nIA = function() {\\n};\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('IA', IA);" )
1179	assertEquals ( g1, g2 )
1180	assertEquals ( createdOnAsDate, patchSet. getCreatedOn ( ) )
1181	assertArrayEquals ( new long [ ] { 2, 3, 1 }, result )
1182	Assert. assertTrue ( permissions. toString ( ), permissions. isEmpty ( ) )
1183	Assert. assertNull ( bean )
1184	assertTrue ( "Class is abstract.", checker. isAbstract ( ) )
1185	assertEquals ( "tinc", parsed )
1186	assertEquals ( 0, dao. delete ( ( Foo ) null ) )
1187	assertThat ( strAction, is ( "action" ) )
1188	assertThat ( target. validate ( ), is ( false ) )
1189	Assert. assertNotNull ( out. getD2 ( ) )
1190	assertEquals ( 4, exceptions )
1191	assertEquals ( 1, event. getMetricSint64 ( ) )
1192	assertEquals ( "Expected 5 results!", 5, count )
1193	assertEquals ( expected, result )
1194	assertNull ( JSONHelper. getJsonObject ( obj ) )
1195	assertEquals ( "aValue", converter. convert ( record ) )
1196	assertEquals ( "Failed to filter query string", expectedResult, normalizedUrl )
1197	Assert. fail ( "Should not have been allowed to set registry after pool started" )
1198	assertEquals ( expected, actual )
1199	assertNotNull ( result )
1200	assertTrue ( account. isValid ( ) )
1201	assertEquals ( "parent tree should be the same", root, leaf. getParent ( ) )
1202	Assert. assertEquals ( "username", userName )
1203	assertEquals ( userList, wrapUserList. getUsers ( ) )
1204	assertEquals ( "Table name is not equal to actual value.", "testAddIndexWithDuplicaIndexNames", iHtd. getNameAsString ( ) )
1205	assertEquals ( 0, filesList. size ( ) )
1206	assertEquals ( "array_2", sql )
1207	assertThat ( allEvents. stream ( ). limit ( events. size ( ) ). collect ( toList ( ) ), containsInOrder ( events ) )
1208	assertNotNull ( result )
1209	assertEquals ( "mystream.flibble", sn. getSourceDestinationNode ( ). getDestinationName ( ) )
1210	assertEquals ( 0, conceptSets. size ( ) )
1211	assertEquals ( 1000L, plugin. getSlowTestWarning ( ) )
1212	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), not ( hasEnvVar ( "STARTUP_MODE", ADMIN_STATE ) ) )
1213	assertThat ( command. accept ( state ), is ( true ) )
1214	assertTrue ( ax. toString ( ), ax instanceof OWLObjectPropertyAxiom )
1215	assertTrue ( "Models not isomorphic", isomorphic ( model1, m ) )
1216	assertFalse ( testing. hasNext ( ) )
1217	assertEquals ( 1, unassigned. size ( ) )
1218	assertEquals ( "/topic", m_callback. getTopic ( ) )
1219	arrays. assertDoesNotContain ( description, null, newArray ( true ) )
1220	assertionHelper. assertTwoFilesAreEqualByRecursiveTreeComparison ( localFile, ( File ) targetFile )
1221	assertTrue ( serviceFacade. isAnyProcessGroupUnderVersionControl ( groupId ) )
1222	assertEquals ( "samedi, janvier 01", DateUtils. formatFriendlyDate ( DateUtils. nowUtc ( ), Locale. getDefault ( ) ) )
1223	assertEquals ( 1, branch_conditions. size ( ) )
1224	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED_BREAK, status )
1225	assertEquals ( mockHandler, m. getProperty ( "com.sun.xml.bind.characterEscapeHandler" ) )
1226	assertEquals ( expected, buffer. get ( ) )
1227	Assert. assertEquals ( "Failure for click=" + testCase [ 0 ] + ", mode=" + mode + ", button=" + testCase [ 1 ] + ", slot=" + testCase [ 2 ] + ", slot=" + testCase [ 3 ], expected, actual )
1228	assertOut ( "b = b + 1" )
1229	Assert. assertTrue ( isEqual ( d1, d2 ) )
1230	Assert. assertEquals ( "foo=bar&bar=foo", payload. getValue ( ) )
1231	assertAnnotationCompletions ( "@Value(value=\\"${data.prop2}\\"<*>)", "@Value(value=\\"${else.prop3}\\"<*>)", "@Value(value=\\"${spring.prop1}\\"<*>)" )
1232	assertEquals ( "(SOURCEFIELD =='sourceValue' AND TARGETFIELD == 'targetValue' AND $1_6 == 'numberedValue')", transformed )
1233	assertEquals ( "MER_RR__2P$1PRLRA20120408_022952_000026243113_00262_52862_0643.N1", output )
1234	assertColumnHidingOption ( 0, false )
1235	assertEquals ( response. getErrors ( ). size ( ), 1 )
1236	assertThat ( resolver. replace ( "${message-MISSING}", true ), is ( "MISSING" ) )
1237	assertEquals ( "void main(final String[] args) {}", actualContent )
1238	assertEquals ( expectedText, transText )
1239	assertTrue ( EqualsBuilder. reflectionEquals ( config, config2, "keyStore", "ourCertificate" ) )
1240	Assert. assertNotNull ( xstreamMap )
1241	Assert. assertTrue ( exceptionMatches )
1242	assertEquals ( "xaxbx", ex. getUnlabeledMessage ( ) )
1243	assertSame ( objects, result )
1244	assertFalse ( transactionHelper. isTransactionAvailable ( ) )
1245	assertEquals ( sb. toString ( ), whereSb. toString ( ) )
1246	assertThat ( ms. contains ( "aaa" ), is ( false ) )
1247	assertEquals ( id, element. getValueAsObject ( ) )
1248	assertTrue ( Ideal. create ( eliminate ( ideal, 0 ) ). isPrincipal ( ) )
1249	Assert. assertNull ( "school type should be null", result )
1250	assertEquals ( "/protected/res/documents/index.html?focus=thing&caller=BLUE&referrer=/protected/res/my_contracts/index.html&fragment=/contractDetails/1234567890", affordance. expand ( args ) )
1251	Assert. assertEquals ( 1, timeSliceElementDecls. size ( ) )
1252	assertTrue ( Pattern. matches ( "(?s).*/converter.jsp PASSED.*", page. asXml ( ) ) )
1253	Assert. assertTrue ( irodsFileForSecondaryUser. canWrite ( ) )
1254	assertTrue ( response )
1255	assertEquals ( mockResponse. getStatus ( ), response. getStatus ( ) )
1256	assertEquals ( "Unsupported parameter test for pwd.", result )
1257	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><file updateType=\\"file\\" fileId=\\"file1\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\" fileVersion=\\"0\\"
1258	Assert. assertTrue ( "Void method not supported", adapter. supports ( endpoint ) )
1259	assertThat ( generated. length ( ), is ( equalTo ( length ) ) )
1260	assertThat ( JdbcUtils. getColumnNames ( getConnectionProperties ( ), "SOMETABLE" ), containsInAnyOrder ( "PID", "TEXTCOL" ) )
1261	assertThat ( testOutcome. getResult ( ), is ( SUCCESS ) )
1262	Assert. assertEquals ( 1, ahelper. getFailedRecords ( ). size ( ) )
1263	assertTrue ( selected )
1264	assertFalse ( NodeUtils. isEqualTo ( otherNode, root ) )
1265	assertEquals ( target. field, send. send ( ) )
1266	Assert. assertEquals ( "d10047", obj. name ( ) )
1267	assertEquals ( expectedQuery, actualQuery )
1268	assertNotNull ( userInfo )
1269	assertEquals ( plain, dec )
1270	Assert. assertTrue ( rto. getRules ( ). isEmpty ( ) )
1271	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
1272	assertEquals ( 0, type. getCapacityDimensions ( ). get ( 0 ) )
1273	assertEquals ( Collections. < String, Object > emptyMap ( ), result )
1274	assertTrue (! branch_conditions. isEmpty ( ) )
1275	assertEquals ( "Expected 0 results!", 0, n )
1276	assertEquals ( "commons", sub. sub ( "name" ) )
1277	assertTrue ( "Error message should be valid", isValid )
1278	assertEquals ( jedisCluster. get ( "foo" ), "bar" )
1279	assertArrayEquals ( expected, ata, 1e-5 )
1280	assertEquals ( "select * from usergrid where email='test+value@usergrid.com'", query. toString ( ) )
1281	assertIntValues ( array, 1, 2, 3, 4, 5, 6 )
1282	Assert. assertNotNull ( authentication )
1283	assertThat ( request, is ( instanceOf ( HttpServletRequestWithAttribute. class ) ) )
1284	assertEquals ( "123涓���浜烘��卞����", deserialize. readUTF ( ) )
1285	assertEquals ( 10, entity. getField ( "priority" ) )
1286	assertHighlighting ( 2, 6, 8, STRING )
1287	assertEquals ( adminDocument, transformer. transform ( admin ) )
1288	assertEquals ( expected, actual )
1289	assertFalse ( result. toString ( ). contains ( "rdf:nodeID" ) )
1290	assertTrue ( subject. isExportDirCreated ( folder. getRoot ( ), LAST_SERIAL ) )
1291	assertFalse ( object. isWeak ( ) )
1292	assertEquals ( 2, ektorp. getSeatedPeople ( ). size ( ) )
1293	assertEquals ( sb. toString ( ), qb. prepareStatementString ( ) )
1294	assertEquals ( 1, repositoryService. createProcessDefinitionQuery ( ). count ( ) )
1295	assertEquals ( "34 abc\\n", found )
1296	Assert. assertTrue ( knowledgeId > 0 )
1297	assertEquals ( 1, count )
1298	assertEquals ( newValue, postComment. getAttributes ( ). get ( name ) )
1299	assertEquals ( "2:4:6", app. asStringNumbers ( a1 ) )
1300	assertEquals ( 0, i. getFlags ( ). size ( ) )
1301	assertEquals ( account. getAccountId ( ), customer. getAccountId ( ) )
1302	assertThat ( specificResourceAllocation. getParent ( ), is ( sameInstance ( specificResourceAllocation ) ) )
1303	assertEquals ( BPResultType. FAIL, testResult. getResultType ( ) )
1304	assertNull ( "Message was not deleted", checkMessage )
1305	assertPostCodegenRules ( mojo )
1306	assertEquals ( "Jan", personView. getName ( ) )
1307	assertThat ( tuple. getCollectionOrEmpty ( "field" ), equalTo ( value ) )
1308	assertEquals ( expected, actual )
1309	assertEquals ( "Not Calendar.equals: ", v1. getDateTime ( ), v2. getDateTime ( ) )
1310	assertEquals ( "PROXY ROUTE TCP://127.0.0.1:6379 PROXYTCP://127.0.0.1:6380\\r\\n", channel. read ( ) )
1311	assertEquals ( 2, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
1312	assertThat ( actual, is ( equalTo ( expected ) ) )
1313	Assert. assertEquals ( 0.0, score, 0.0 )
1314	assertEquals ( null, DocumentUtils. getDocumentUri ( cas ) )
1315	assertEquals ( "IDX1", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
1316	assertFileNotInHeadVersion ( OBJ_ID, FILE1_SUBPATH )
1317	assertThat ( formatter. print ( PlainDate. of ( 2015, 1, 1 ) ), is ( "December 1, 1" ) )
1318	Assert. assertTrue ( "'withtests' should contain tests.", result )
1319	Assert. assertTrue ( FastMath. abs ( error ) < 1.0e-10 )
1320	assertEquals ( "ereref", Bytes. toString ( res ) )
1321	assertThat ( target. getTime ( ), is ( time ) )
1322	assertThat ( userRoles. get ( "admin_test" ). getEmails ( ), contains ( "liangpengyv@fir.im" ) )
1323	assertEquals ( 1, o. importsDeclarations ( ). count ( ) )
1324	assertEquals ( allScanTokens. size ( ), 0 )
1325	assertThat ( result, is ( true ) )
1326	assertEquals ( expected, ColumnRanges. rangeAtNode ( either ) )
1327	assertFalse ( family1. equals ( family2 ) )
1328	assertAgentString ( optionsByType, "-agentpath:mylib=", "port=8849", "stack=1234" )
1329	Assert. assertEquals ( "ssd", tableName )
1330	assertEquals ( numObjects, response. getObjects ( ). size ( ) )
1331	assertEquals ( "Row count should match", rsMismatches. size ( ), result )
1332	assertFalse ( updatedTopic. userSubscribed ( user ), UNSUBSCRIBED )
1333	assertThat ( System. getProperty ( key ), is ( nullValue ( ) ) )
1334	assertTrue ( strategy. getAllPricesInitialized ( ) )
1335	assertEquals ( 1, td. getOrder ( ) )
1336	assertTrue ( this. getMimeMailSubject ( ). contains ( "Title contains the branch update" ) )
1337	Assert. assertEquals ( 0, count )
1338	assertEquals ( 12345, rtcpReceivedEvent. getRtt ( ), 0.00001 )
1339	assertEquals ( expected, t )
1340	assertNotNull ( xmlIn )
1341	assertEquals ( zone, actualZone )
1342	assertEquals ( "http://ci.visuwall.awired.net/job/struts/5/testReport/api/xml", testUrl )
1343	assertThat ( str, equalTo ( "insert into UserInfo (name,age) values(?,?,?)" ) )
1344	assertEquals ( p, fromDenseRecursiveForm ( recForm, p. nVariables, MonomialOrder. DEFAULT ) )
1345	assertEquals ( SC_OK, response. getStatus ( ) )
1346	assertEquals ( output1. getId ( ). getIdPart ( ), output2. getId ( ). getIdPart ( ) )
1347	assertTrue ( daemon. start ( "src/test/resources/test_configurations/basic-configuration.xml" ) )
1348	assertTrue ( Integer. valueOf ( lowestTitle. compareTo ( summary. getTitle ( ). getTitle ( ). getContent ( ) ) ) < 0 )
1349	assertEquals ( roundTripped, tree )
1350	assertThat ( uri, is ( "/path/expectedUrl" ) )
1351	Assert. assertNotNull ( result. getBookList ( ) )
1352	assertEquals ( 1, tags. size ( ) )
1353	assertEquals ( 3, packages. size ( ) )
1354	assertThat ( relationEditor. isMatchingRelationName ( relation, name ), is ( false ) )
1355	assertEquals ( savedComputeResource. getHostAliases ( ), updatedComputeResource. getHostAliases ( ) )
1356	assertNotNull ( o )
1357	assertThat ( taskLogsFilter. decide ( event ), equalTo ( DENY ) )
1358	assertThat ( thrown, instanceOf ( CursorNotFoundException. class ) )
1359	Assert. assertEquals ( 10, counter. getCount ( ) )
1360	Assert. assertEquals ( "", mailbox. getAddress ( ) )
1361	Assert. assertTrue ( consumer. wasCalled )
1362	assertEquals ( expected, e. setVariable ( "x", x ). evaluate ( ), 0.0 )
1363	assertEquals ( edmType, returnedType )
1364	assertVectorEquals ( scale ( alpha, yd, 0, zd ), x. scale ( alpha ) )
1365	assertTrue ( resource + " is not valid", result. isValid ( ) )
1366	Assert. assertTrue ( rep. containsKey ( "name" ) )
1367	assertEquals ( socketAddress, readAddress )
1368	Assert. assertEquals ( config, config2 )
1369	assertFalse ( result )
1370	assertTrue ( valid )
1371	assertThat ( cursor. proceedTo ( 'b' ), is ( false ) )
1372	assertArrayEquals ( expected, bos. toByteArray ( ) )
1373	assertEquals ( 6. * 3600., sec, 0.01 )
1374	assertThat ( repos, is ( empty ( ) ) )
1375	assertTrue ( sql, sql. endsWith ( "WHERE t0.ESTIMATED_PRICE BETWEEN #bind($id0 'INTEGER') AND #bind($id1 'INTEGER')" ) )
1376	assertThat ( "valid ports shall have issues", validation. pass ( Report. WITHOUT_WARNING ) )
1377	assertEquals ( vars, variablesTyped )
1378	assertions. doesNotContain ( actual )
1379	assertThat ( initialized, is ( false ) )
1380	Assert. assertEquals ( 2, analyser. getLoadJustBeforeActivity ( route. getActivities ( ). get ( 1 ), route ). get ( 0 ) )
1381	assertTrue ( authorizer. isAuthorized ( context, profiles ) )
1382	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
1383	assertNull ( conversationIdHeader )
1384	Assert. assertTrue ( received )
1385	assertEquals ( "SampleName", avro. getXML ( meta ) )
1386	assertEquals ( nnf, comp )
1387	assertThat ( result, is ( instanceOf ( Success. class ) ) )
1388	assertEquals ( HttpStatus. SC_UNAUTHORIZED, response. getStatus ( ) )
1389	Assert. assertThat ( dump, equalTo ( "TypeExpressionNode: user | cat[] (Start: 7, End: 13, On: [artificial node])\\n" + "    NamedTypeExpressionNode user -> {null} (Start: 7, End: 13, On: [artificial node])\\n" + "        LibraryRefNode cat -> {null} (Start: 7, End: 12, On: [artificial node])" ) )
1390	assertMappedFieldValueIsCollectionWithModelsWithPaths ( resourceTargetedByMapping. getPath ( ) )
1391	assertEquals ( 1, distinctAgePersons. size ( ) )
1392	assertEquals ( true, result [ 0 ] )
1393	assertPlanMatches ( access )
1394	assertEquals ( 2, deltas. size ( ) )
1395	assertTrue ( "ID attribute not found", ndInh. getId ( ). equals ( id ) )
1396	assertEquals ( 1, children. size ( ) )
1397	Assert. assertEquals ( "I counted up the digits' box", this. realiser. realise ( sent ). getRealisation ( ) )
1398	Assert. assertEquals ( expect, actual, EPSILON )
1399	assertEqualDoubleArrays ( pyscle, scale, epsilon )
1400	assertThat ( event. check ( newGitHubBranchDecisionContext ( ). withLocalBranch ( localBranch ). withBranchTrigger ( trigger ). withLocalRepo ( localRepo ). withListener ( listener ). build ( ) ), notNullValue ( ) )
1401	assertThat ( branches, is ( empty ( ) ) )
1402	assertLookup ( breaks, values, srcImg, ImageDataType. FLOAT )
1403	assertEquals ( a1, a2 )
1404	assertEquals ( NUM_TABLES * NUM_TOKENS, result. size ( ) )
1405	Assertion. assertEquals ( loadedDataSet, actualDataSet )
1406	assertNull ( payload )
1407	assertEquals ( "aAa", mat. group ( ) )
1408	assertEquals ( "V1 Track", wrapper. getTrack ( ) )
1409	assertEquals ( expected, actual, delta )
1410	assertEquals ( biggestWidget ( ). getY ( ), gridLienzoScrollBounds. minBoundY ( ), 0 )
1411	assertEquals ( witnessList, tokenList )
1412	assertEquals ( true, errors. hasFieldErrors ( "stopDatetime" ) )
1413	assertEquals ( 100, map. getInt ( "a" ) )
1414	assertEquals ( ValidationResult. OK. getStatus ( ), validationResult. getStatus ( ) )
1415	assertEquals ( expected, actual )
1416	assertEquals ( adminIdentity, adminUser. getIdentity ( ) )
1417	assertThat ( elementFacade. isEnabled ( ), is ( false ) )
1418	assertEquals ( from ( 0 ). toByteBuffer ( ), db. getFieldValue ( 0, FIELD_NAME ) )
1419	assertValidationConstraint ( validator, obj, "EndBeforeStartOther", "endOther" )
1420	assertThrows ( RelatoIncompativeis. class, ( ) -> new Observacao ( r1, r2, "relativos distintos" ) )
1421	Assert. assertEquals ( Object. class, t. getType ( ) )
1422	assertThat ( seqTerminals, containsInAnyOrder ( term1, term2 ) )
1423	assertNull ( this. consumer. get ( topic, partition, offset, maxSize ) )
1424	assertNotNull ( result )
1425	assertEquals ( 1, branch_conditions. size ( ) )
1426	Assert. assertEquals ( 2, targetRepository. getLatestRevision ( ) )
1427	assertEquals ( "FATAL", level. toString ( ) )
1428	assertions. isNotGreaterThan ( expected )
1429	assertEquals ( "[[1, a], [1, b], [1, c], [1, d], [1, e], [2, a], [2, b], [2, c], [2, d], [2, e], [3, a], [3, b], [3, c], [3, d], [3, c], [3, a], [3, b], [3, c], [3, b], [3, c], [3, a], [3, b], [3, c], [3, d], [3, e], [3, a], [3, b], [3, c], [3, d], [3, c], [3, b], [3, c], [3, a], [3, b], [3, c], [3, b], [3, c], [3, c], [3, d], [3, c], [3, a], [3, b], [3, c], [3, c], [3, d], [3, b], [3, c], [3, c], [3, d], [3, c],
1430	assertEquals ( 2, count )
1431	assertEquals ( DEFAULT. background ( RED ), style )
1432	assertThat ( ret. isSuccess ( ), is ( true ) )
1433	Assert. assertEquals ( this. term, result )
1434	assertPermanentCount ( playerA, "Mikaeus, the Lunarch", 1 )
1435	assertNotNull ( i. getEngineName ( ) )
1436	assertTrue ( now - timeStamp - timeSpan < 2 )
1437	Assert. assertEquals ( "443", connectionString )
1438	assertEquals ( "d6f18efa527f1bd22b4a67fc621cfbe7", hash )
1439	Assert. assertEquals ( buildUpExpected ( ). toString ( ), serializer. serialize ( testMessage ). toString ( ) )
1440	assertEquals ( "code", cancelledPreApproval. getTransactionCode ( ) )
1441	assertEquals ( propertyValue, value )
1442	context. assertIsSatisfied ( )
1443	assertNotNull ( m )
1444	errors. assertThat ( )
1445	assertEquals ( "x", s. value ( ) )
1446	assertThat ( description. toString ( ), is ( "number of sheets was missing" ) )
1447	assertEquals ( Lists. newArrayList ( 100, 2, 92, 1, 0, 1, 2, 3, 4 ), a )
1448	assertEquals ( reference, toTest )
1449	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFProtocolo ( ). toString ( ) )
1450	assertEquals ( "Hello gradle!", gradleMan. getMessage ( ) )
1451	assertThat ( config, hasEntry ( CubeDockerConfiguration. DOCKER_URI, "https://192.168.0.1:22222" ) )
1452	assertFalse ( "Something really wrong here!", result == null )
1453	assertNotNull ( fixture )
1454	assertEquals ( "hello", dereferenced. join ( ) )
1455	assertProjectOut ( compiledFileNames, testDirPath )
1456	assertEquals ( expect, result )
1457	assertNull ( classUnderTest. getPrintXmlBean ( ) )
1458	runner. assertNotValid ( ListenRELP. class )
1459	Assert. assertTrue ( result. next ( ) )
1460	assertEquals ( testName, testProfileData. getName ( ) )
1461	assertEquals ( "something.getAnother(x, y).equals(x, y);", result )
1462	assertEquals ( 0, attributes. getSize ( ) )
1463	assertEquals ( "Lock should be taken", LockType. FILE, lock. getType ( ) )
1464	assertThat ( subs, contains ( subProperty ) )
1465	assertTrue ( "failed to stat file", st!= null && st. isFile ( ) )
1466	assertEquals ( json, rc. getBodyAsJson ( ) )
1467	assertTrue ( "" + mse, mse <= desiredError )
1468	given ( ). spec ( specs. get ( 1 ) ). contentType ( ContentType. JSON ). body ( "value", equalTo ( "Hello world!" ) ). statusCode ( 200 )
1469	assertStatusIs ( workspaceErrors ( ) )
1470	assertEquals ( "Expected a refresh", 1, supplier. getAuthForSwarm ( ). size ( ) )
1471	assertEquals ( expected, actual )
1472	assertEquals ( expected, actualQuery )
1473	assertTrue ( "Expected only SECOND_STATE to be enabled", SentryStateBank. hasStatesEnabled ( TestState. COMPONENT, new HashSet < SentryState > ( Arrays. asList ( TestState. SECOND_STATE, TestState. FIRST_STATE ) ) ) )
1474	Assert. assertTrue ( result. equals ( "10 �拽�转" ) )
1475	assertEquals ( value, stat. toLong ( ), 0 )
1476	Assert. assertTrue ( desktopConnection. isOpen ( ) )
1477	Assert. assertEquals ( effective. getSpacing ( ). getAfter ( ). intValue ( ), 0 )
1478	assertTrue ( i instanceof EndOfFileException )
1479	Assert. assertEquals ( 1, o )
1480	Assert. assertEquals ( "Invalid HUs retrieved", Collections. emptyList ( ), huSelectModel. createHUQueryBuilder ( ). setErrorIfNoHUs ( false, null ). list ( ) )
1481	assertNotNull ( scriptStatement )
1482	assertNotNull ( result )
1483	assertTrue ( originalMap. isEmpty ( ) )
1484	TestHelpers. assertDeepEquals ( expected, result )
1485	assertEquals ( 2, ninety. solution ( clouds ) )
1486	assertEquals ( 2, foundMethods. size ( ) )
1487	assertThat ( updatedItem. getQuantity ( ), is ( 10 ) )
1488	assertEquals ( false, typeDefinition. isPresent ( ) )
1489	assertNull ( harvestedCollection )
1490	assertFalse ( vrp. getJobs ( ). containsKey ( "4" ) )
1491	assertEquals ( cls. getNNF ( ), nnf )
1492	assertThat ( cc. plus ( 7, ChineseCalendar. Unit. WEEKS ), is ( ChineseCalendar. of ( EastAsianYear. forGregorian ( 2017 ), EastAsianMonth. valueOf ( 6 ). withLeap ( ), 28 ) ) )
1493	assertTrue ( IntArrays. containsNearbyAlmostDuplicate ( as ) )
1494	assertEquals ( "������������������������������������������������������������������������������������
1495	Assert. assertEquals ( Long. class, clazz )
1496	assertThat ( decisionInstances. size ( ), is ( 2 ) )
1497	assertEquals ( 0, counts. size ( ) )
1498	assertTrue ( options. size ( ) == 2 )
1499	assertCanMultiTokenizeString ( randomUnicodeOfLength ( LENGTH ), rand. nextInt ( 998 ) + 2, rand. nextInt ( 100000 ), tokenizer )
1500	assertMapped ( ( Integer x ) -> x + 2, asList ( 1, 2, 3 ), asList ( 3, 4, 5 ) )
1501	assertNotNull ( con )
1502	assertEquals ( Integer. valueOf ( 200007 ), query. select ( employee. datefield. yearWeek ( ) ). fetchFirst ( ) )
1503	assertEquals ( 2, numberOfElephants )
1504	assertSame ( expected, actual )
1505	assertEquals ( DecodeException. class, err. getClass ( ) )
1506	assertEquals ( "BGP Error code 2 and subcode 170 not recognized.", e. getMessage ( ) )
1507	assertEquals ( mockCause, captor. getValue ( ). getCause ( ) )
1508	assertThat ( getCompiledResult ( ), is ( true ) )
1509	assertEquals ( expectedValue, result )
1510	Assert. assertTrue ( kernelServices. isSuccessfulBoot ( ) )
1511	assertEquals ( "Duplicate application timeout  " + options. getUUID ( ), application2. getId ( ), application. getId ( ) )
1512	Assert. assertEquals ( "MessageStore.class", method. getName ( ) )
1513	Assert. assertEquals ( "SELECT s1\\nFROM t1\\nWHERE s1 NOT IN (SELECT s1\\n\\tFROM t2);", text )
1514	assertNull ( ret2 )
1515	assertThat ( result. records ( ), equalTo ( expectedRecords ) )
1516	Assert. assertEquals ( map ( Jsr310NullKeySerializer. NULL_KEY, "test" ), value )
1517	assertEquals ( 204, resp. getStatus ( ) )
1518	assertEquals ( emailSubject, testEmail )
1519	assertThat ( actual, is ( equalTo ( expected ) ) )
1520	assertEquals ( "fromBytes", actualResult, this )
1521	assertPostFails ( "3", role, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
1522	context. assertIsSatisfied ( )
1523	Assert. assertNull ( value )
1524	Helpers. assertJson ( Deencapsulation. invoke ( twinState, "toJsonElement" ). toString ( ), json )
1525	Assert. assertEquals ( 2, font. getCmap ( ). size ( ) )
1526	assertHasMethod ( model, "com.artemis.E addGroups(java.lang.String[] groups)" )
1527	assertEquals ( "Unexpected primary style name", "v-grid", state. primaryStyleName )
1528	assertNotNull ( myTestFactory )
1529	editor. assertProblems ( "default|Unknown stemcell", "windoze|Unknown stemcell", "bad-server|Unknown stemcell", "bogus-stemcell|Unknown stemcell" )
1530	assertEquals ( topology, service. getTopologies ( ). get ( 0 ) )
1531	assertEquals ( "Symbol1:Symbol2:Symbol3", symbols. toString ( ) )
1532	assertEquals ( "333", model. getRelationship ( ) )
1533	assertTrue ( true )
1534	assertTrue ( "cos() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP )
1535	assertEquals ( "{\\"statusInfo\\":{\\"from\\":\\"Miguel Arlandy\\",\\"to\\":\\"Cristiano Ronaldo\\",\\"status\\":\\"Disconnected\\"}}", jsonMessage )
1536	assertEquals ( ( byte ) 0x5678, hash. getByte ( ) )
1537	Assert. assertTrue ( true )
1538	assertEquals ( newChain, newChain )
1539	assertThat ( ReflectionTestUtils. getFieldValue ( ConsoleLogger. class, null, "fileWriter" ), nullValue ( ) )
1540	assertEquals ( "Test message ab c\\\\", result )
1541	assertTrue ( res. isEmpty ( ) )
1542	assertThat ( context, is ( notNullValue ( ) ) )
1543	Assert. assertArrayEquals ( "Value", analyticalOptionValue, optionValue, 1E-2 )
1544	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5, 6 ) ) )
1545	assertEquals ( BranchUtils. getHeadCommit ( "source_branch", repo ), BranchUtils. getHeadCommit ( "test_branch", repo ) )
1546	assertOut ( "var /** @type {number} */ b = a.child('child').length()" )
1547	assertEquals ( "Hash should match", "5d9e8e8e9b9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9e8e9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f
1548	assertTrue ( graphEmpty ( gStore. getDefaultGraph ( ) ) )
1549	assertEquals ( "10", victim. readObjectNumber ( ) )
1550	assertEquals ( 1, store. getFilePointer ( ) )
1551	assertTrue ( spied. call ( ) )
1552	assertEquals ( "/..", xmldbURI. resolveContext ( uri ). toString ( ) )
1553	Assert. assertEquals ( expected, actual )
1554	assertEquals ( true, classUnderTest. getShowSessionStartupTimeHint ( ) )
1555	assertTrue ( GenericTypeReflector. equals ( expected, ClassUtils. getCommonSuperType ( Arrays. asList ( t1, t2 ) ) ) )
1556	assertThat ( api. getResponseTimeout ( ), is ( 0 ) )
1557	assertEquals ( expectedPemCertificate, certificate. getEncoded ( ) )
1558	Assert. assertTrue ( allowedCRUDL )
1559	assertThat ( cls, is ( owlThing ( ) ) )
1560	assertTrue ( ( ( PerunBl ) perun ). getServicesManagerBl ( ). isServiceBlockedOnFacility ( testService1, facility1 ) )
1561	assertTrue ( exceptions. toString ( ), exceptions. isEmpty ( ) )
1562	assertEquals ( response. asString ( ), CANCELLED, response. get ( OUTCOME ). asString ( ) )
1563	assertOut ( "var a:Number = 2147483648" )
1564	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
1565	assertThat ( "response contains a non-empty fullName", StringUtils. isNotBlank ( response. getFullName ( ) ) )
1566	assertTrue ( version. isBeforeCurrent ( ) )
1567	assertEquals ( expResult, result )
1568	assertEquals ( "12345", result )
1569	assertTrue ( envVars. size ( ) == 0 )
1570	assertEquals ( "Hello :name^^^", ResponseBodyInterpolator. interpolate ( "Hello :name^^^", req ) )
1571	assertUndeployed ( "undeployed" )
1572	assertEquals ( 400, response. getStatus ( ) )
1573	assertNotNull ( Workflow. fetcher ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "WFXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
1574	assertEquals ( "", result )
1575	assertEquals ( "CLIENT PARALLEL 1-WAY RANGE SCAN OVER EH ['111111111111111','foo            ','2012-11-01 00:00:00.000'] - ['111111111111111','fop            ','2012-11-30 00:00:00.000']\\n" + "    SERVER FILTER BY FIRST KEY ONLY AND (CREATED_DATE >= DATE '2012-0-1 00:00:00.000' AND CREATED_DATE < DATE '2012-11-31 00:00:00.000')\\n" + "    SERVER TOP 100 ROWS SORTED BY [ORGANIZATION_ID, PARENT_ID, CREATED_DATE DESC, ENTITY_HISTORY_ID]\\n" + "CLIENT MERGE SORT\\nCLIENT LIMIT 100", QueryUtil. getExplainPlan ( rs ) )
1576	assertEquals ( "Gaming website", doc. getContentField ( "out" ). toString ( ) )
1577	assertSame ( 1, searchHistory. getLength ( ) )
1578	assertTrue ( compressedLogFile. exists ( ) )
1579	Assert. assertTrue ( "duplicate association was not removed", topicmap. getAssociations ( ). size ( ) == 1 )
1580	checker. assertEquals ( "[" + r + "][" + c + "]", exp, act )
1581	assertEquals ( body. toString ( ), "test exception" )
1582	assertEquals ( "48656C6C6F20576F726C64", Hex. toHexString ( outputStream. toByteArray ( ) ). toUpperCase ( ) )
1583	assertThat ( taskService. createTaskQuery ( ). taskAssignee ( "bUser" ). count ( ), is ( 1L ) )
1584	assertKey ( new StringKey ( "50" ), index. searchIndex ( new EqualsCondition ( new StringKey ( "50" ) ), Index. NO_SEARCH_LIMIT ) )
1585	Assert. assertTrue ( "This is a odt file, ODTReport implementation should have been resolved....", report instanceof ODTReport )
1586	assertEquals ( Arrays. asList ( "A", "B", "C" ), listSorter. sort ( initialElements ) )
1587	assertPostCodegenRules ( mojo )
1588	assertEquals ( expected, actual )
1589	assertEquals ( "Substitution must have happened", "gs://such-client/logs/such-client/done-intermediate", cfg. get ( YarnConfiguration. NM_REMOTE_APP_LOG_DIR ) )
1590	assertEquals ( "3 啶�啶苦え 啷�啶距う", t. format ( new Date ( 2629743830L * 3L ) ) )
1591	assertTrue ( new File ( "/home/martin/tmp/dias-inst" ). exists ( ) )
1592	assertEquals ( "test", result. getName ( ) )
1593	assertEquals ( Status. NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
1594	assertEquals ( expected, uri. toString ( ) )
1595	assertEquals ( null, result )
1596	assertEquals ( expectedContent, bOut. toString ( ) )
1597	assertTrue ( closed. await ( 2, SECONDS ) )
1598	assertEquals ( asList ( foo1, foo2 ), results )
1599	assertTrue ( parseResults. isEmpty ( ) )
1600	Assert. assertEquals ( columnSubset. length, 0 )
1601	Assert. assertFalse ( isValid, "PollItems have incorrect names length, so they must be invalid" )
1602	assertNull ( item. getList ( ) )
1603	Assert. fail ( )
1604	assertTrue ( roles. contains ( "RESOURCESELFSERVICE" ) )
1605	assertFalse ( shouldVote )
1606	assertThat ( listSorter. toListView ( ), equalTo ( containers ( "A", "B", "C", "D" ) ) )
1607	assertEquals ( expected, actual )
1608	assertEquals ( AnalysisState. ERROR, analysisSubmission. getAnalysisState ( ) )
1609	assertNotNull ( result )
1610	assertEquals ( expected, result )
1611	assertCredits ( credits )
1612	assertEquals ( "value", "commented value", config. getString ( "section4.var1" ) )
1613	assertThat ( target. validatePort ( ), is ( false ) )
1614	assertTrue ( vw == ret )
1615	assertFalse ( checker. isDetected ( ) )
1616	assertThat ( c. toString ( ), is ( "myString < aaa" ) )
1617	Assert. assertTrue ( browser. findElement ( By. id ( "form" ) ). getText ( ). contains ( "URL%20ENCODED" ) )
1618	assertEquals ( expected, actual )
1619	assertThat ( logger. output ( ), containsInOrder ( "BUILD STEP DURATIONS", projectStatsLine ( "project-1", 0.1, 100 ), projectStatsLine ( "project-2", 0.3, 13 ), projectStatsLine ( "project-3", 0.02, 6 ), projectStatsLine ( "project-4", 0.3, 90 ), projectStatsLine ( "project-5", 0.01, 3 ) ) )
1620	assertFalse ( path. isEmpty ( ) )
1621	assertThat ( encryptedPassword, is ( nullValue ( ) ) )
1622	assertEquals ( 0, JedisURIHelper. getDBIndex ( uri ) )
1623	assertEquals ( sent, received )
1624	assertThat ( kvStore. getString ( "field" ), equalTo ( "value" ) )
1625	assertArrayEquals ( new Integer [ ] { 4, 15, 12, 8, 18 }, array )
1626	assertEquals ( test, "abcdefghijklmnopqrstuvwxyz0123456789" )
1627	assertEquals ( expectedSchema, schemaFromHDFS )
1628	Assert. assertEquals ( "Model should contain default RDF type", rdfTypes. size ( ), 0 )
1629	assertEquals ( null, id. getValue ( ) )
1630	Assert. assertEquals ( 0, sut. compare ( pmv1, pmv2 ) )
1631	assertEquals ( mockResponse. getStatus ( ), res )
1632	context. assertIsSatisfied ( )
1633	assertNull ( "Base value is not properly parsed", mapper. base ( "test", null ) )
1634	assertEquals ( Box. createHorizontalStrut ( - 1 ), c )
1635	assertTrue ( g. isEmpty ( ) )
1636	assertTrue ( adb == null )
1637	assertEquals ( ImmutableList. of ( "foo" ), evaluate ( "${iter}", Iterable. class ) )
1638	assertEquals ( HttpStatus. SC_OK, getStatus ( patchReq ) )
1639	assertArrayEquals ( new String [ ] { "command", "arg1", "arg2", "arg3", "arg4", "arg5" }, command )
1640	assertEquals ( new IndexDesc ( TestCatalog. desc1. getProto ( ) ), new IndexDesc ( store. getAllIndexes ( ) ) )
1641	assertTrue ( isValid )
1642	assertTrue ( verify )
1643	assertEquals ( "java/lang/String", classMetadata. getInterfaceName ( ) )
1644	assertThat ( file, notNullValue ( ) )
1645	assertEquals ( expectedChargeMode, getTestChargingStationFromRepository ( ). getChargeMode ( ) )
1646	assertTrue ( "Next pause should be within [9,11], but was " + nextPause, withinTenPercent ( 10L, nextPause ) )
1647	assertEquals ( 2, result. size ( ) )
1648	Assert. assertEquals ( Status. INTERNAL_SERVER_ERROR. getStatusCode ( ), response. getStatus ( ) )
1649	assertThat ( output, CoreMatchers. containsString ( "Importing dataset:" ) )
1650	assertThat ( rendered, is ( test [ 1 ] ) )
1651	assertTrue ( "elapsed (" + elapsed + " millis) was long enough", longEnough )
1652	Assert. assertEquals ( "Verify default protocol was registered", protocol, protocol )
1653	assertEquals ( song1, null )
1654	assertTrue ( messageLatch. await ( 3, TimeUnit. SECONDS ) )
1655	Assert. assertNull ( caixa )
1656	assertTrue ( "The response should not contain the expected data", responseContainsData ( originalString ) )
1657	assertEquals ( visibility, user. getSNetVisibility ( ) )
1658	Assert. assertEquals ( list. size ( ), 1 )
1659	assertNull ( subject. matchOperation ( ) )
1660	assertEquals ( "someReplyTo", argCaptor. getValue ( ). getReplyToAddress ( ) )
1661	Assert. assertEquals ( sum, 20 )
1662	assertEquals ( TestUtil. HTTP_TEST_PROXY, result. get ( 0 ) )
1663	assertFalse ( violated )
1664	assertThat ( toString ( people ), is ( equalTo ( "[Jon Doe]" ) ) )
1665	Assert. assertNull ( result )
1666	assertFalse ( this. tlvsBuilder. augmentation ( Tlvs3. class ). isPresent ( ) )
1667	assertProcessInstanceCompleted ( processInstance )
1668	assertEquals ( "points", op. spec )
1669	assertEquals ( TimeoutException. class, e. getCause ( ). getClass ( ) )
1670	assertEquals ( "2012-12-21", dt )
1671	assertions. isNotEqualTo ( null )
1672	assertTrue ( connected )
1673	assertEquals ( namedUserListingRequest. getResponseParser ( ). parse ( response ), responseParser. parse ( response ) )
1674	Assert. assertNotNull ( filter )
1675	assertEquals ( true, typeDefinition. isPresent ( ) )
1676	assertThat ( sub, is ( graph ) )
1677	assertEquals ( 0, runTool ( "-failover", "nn1", "nn2", "name" ) )
1678	assertEquals ( standardFormat. format ( number ), number )
1679	Assert. assertEquals ( expected, fixture. mapper ( OPTION_USE_CHILDREN, true ). valueToTree ( resource ) )
1680	assertEquals ( Lists. newArrayList ( e ( 1 ) ), tree. entries ( ). toList ( ). toBlocking ( ). single ( ) )
1681	Assert. assertEquals ( expected, actual )
1682	assertTrue ( stmt instanceof CreateSchemaNode )
1683	assertEquals ( 1, ( int ) diagnosis. getId ( ) )
1684	assertEquals ( "theoneandonly@schland.de", em. createNativeQuery ( "select email from address where id=1" ). getResultList ( ). get ( 0 ). toString ( ) )
1685	assertEquals ( expectedQuery, actualQuery )
1686	assertEquals ( 0, ti. size ( ) )
1687	assertThat ( results, is ( Collections. singletonMap ( ( Object ) "id", Arrays. asList ( "MD5 sums do not match. File document contains " + "'md5 : 'abcdef12'' and the filemd5 command produced'md5 : 'abcdef''.", "Root file contains 'fs' and the filemd5 command produced'md5 : 'abcdef''.", "File document contains " + "'md5 : 'abcdef''.", "Root file contains 'fs' and the filemd5 command produced'md5 : 'abcdef''.", "Root file contains 'root' and the file md5 is not found. File document contains " + "'md5 : 'abcdef''.", "Error code : 'ENOENT'.", "File contains'md5 : 'abcdef''.", "Error code : 'ENOENT'.", "File document contains " + "'md5 : 'abcdef''.", "Root file contains 'root' and the file md5 command produced'md5 : 'abcdef''.", "Error message contains 'Error':'Unknown error.", "Error message contains 'Error':'Unknown error.", "Error message contains 'Error code
1688	assertThat ( sheet. getRow ( 0 ). getLastCellNum ( ), is ( ( short ) 300 ) )
1689	assertEquals ( autoCommitMode, serverEntityContext. getAutocommit ( ) )
1690	assertTrue ( "namespace value in annoataion @XmlElement is not correct: " + str, str. indexOf ( "helloString/Name" ) > - 1 )
1691	assertEquals ( 2, catalog. getCommandCount ( ) )
1692	assertEquals ( "/profile=default/subsystem=web:read-resource", ModelNodeOperationToCliString. convert ( op ) )
1693	assertEquals ( "Foo Bar Resource", textLiteralResource. getResourceText ( ) )
1694	Assert. assertTrue ( success. get ( ) )
1695	assertEquals ( "test", mock. oneLongArg ( value ) )
1696	assertEquals ( expResult, result )
1697	assertEquals ( "this.myToString(obj)", CodeModelTestsHelper. toString ( aLambda ) )
1698	assertTrue ( "method must not be passed to next handler in chain", dummyHandler. invokeCalled )
1699	assertEquals ( 1, cs. getDimension ( 0 ) )
1700	assertEquals ( expected, poly )
1701	assertEquals ( 0, sut. computeSearchGoalBonus ( current ) )
1702	assertEquals ( "My comments and some more", eval ( "cmd.comment" ) )
1703	assertEquals ( "Debug", conf. getName ( ) )
1704	assertThat ( ChronoFormatter. ofPattern ( "yyyy-W", PatternType. CLDR, Locale. ROOT, CalendarWeek. chronology ( ) ). format ( cw ), is ( "2012-W3" ) )
1705	assertThat ( f. format ( m ), is ( "Amete Mihret, 2008-03-09 09:45 pm +03:00" ) )
1706	Assert. assertArrayEquals ( "Wrong data", data, builtByFactory. getData ( ) )
1707	assertEquals ( paramValue, result )
1708	Assert. assertTrue ( isVisible ( "$_formatNumberDialog" ) )
1709	assertThat ( taskService. createTaskQuery ( ). taskAssignee ( "demo" ). count ( ), is ( 1L ) )
1710	assertEquals ( expectedQuery, actualQuery )
1711	assertThat ( tuple. getDoubleOrDefault ( "field", 2.0 ), equalTo ( 2.0 ) )
1712	assertAllCodesOfIterator ( entitySelector. endingIterator ( ), "e1", "e2", "e3", "e4" )
1713	assertEquals ( 3.0, other. getMean ( ), 0.00001 )
1714	assertThat ( gizmoService. isAffectedBy ( "other" ), is ( false ) )
1715	assertEquals ( config. getSoLinger ( ), acceptedConfig. getSoLinger ( ) )
1716	assertCorrectlyStored ( permission )
1717	assertEquals ( "test", msg. getText ( ) )
1718	assertEquals ( "Test Comment", newProps. getProperty ( "test.comment" ) )
1719	assertXpathExists ( "/a:entry/m:properties", xmlString )
1720	Assert. assertTrue ( service. isExecuted ( ) )
1721	assertEquals ( 2, alternativeRoutes. size ( ) )
1722	assertEquals ( "Any String you want", fso. getContent ( ) )
1723	assertDegenerate ( scan )
1724	assertEquals ( expected, actual )
1725	assertCamundaInputOutputParameter ( task )
1726	assertTrue (! result )
1727	assertEquals ( "field.toUpperCase()", p. toString ( ) )
1728	assertEquals ( "Cancelled default service com.alibaba.dubbo.rpc.protocol.dubbo.support.DemoService.", result )
1729	assertTrue ( tippyTop. getItem ( ) < 3 )
1730	assertEquals ( dataStoreName, connection. getDataSourceName ( ) )
1731	assertFalse ( allUsers. isEmpty ( ) )
1732	Assert. assertEquals ( IOUtil. toString ( new FileInputStream ( new File ( "src/test/resources/versionInfoFileRewritten-beta-3.xml" ). getAbsoluteFile ( ) ), "UTF-8" ), IOUtil. toString ( os. toByteArray ( ), "UTF-8" ) )
1733	Assert. assertEquals ( "callback_value", o )
1734	assertCard ( expectedCard, "http://magiccards.info/nph/en/134.html", expectedCard. getRarity ( ). toDisplayName ( ), expectedCard. getName ( ) )
1735	assertEquals ( 5, node1. clusterCountKeysInSlot ( slot ). intValue ( ) )
1736	assertNotNull ( Alert. reader ( ). read ( ) )
1737	assertEquals ( "{\\"" + escaped + "\\":\\"\\"}", obj. toString ( ) )
1738	assertTrue ( Expr. CMP_LESS == x )
1739	assertThat ( encodingHandler. getEncoding ( ), is ( "ISO-8859-1" ) )
1740	assertTrue ( "Oh no! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped object! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No mapped! No
1741	assertEquals ( "testSynAck", composer. getLastPacket ( ) )
1742	assertThat ( evaluator. evaluate ( corc ), is ( TruthValue. YES ) )
1743	Assert. assertEquals ( 1, msgResponse. getTimeToLive ( ). getSeconds ( ) )
1744	assertEquals ( "IllegalStateException", exception. getMessage ( ) )
1745	assertTrue ( equals )
1746	Assert. assertEquals ( "Junit error", expectedString, actualString )
1747	Assert. assertEquals ( "who is eating the pie", this. realiser. realise ( p ). getRealisation ( ) )
1748	assertThat ( result, is ( packet ) )
1749	Assert. assertTrue ( icms. isSelecionado ( ) )
1750	assertNull ( victim. getValue ( KEY ) )
1751	Assert. assertNull ( ModuleUtil. getModuleForPath ( path ) )
1752	assertEquals ( "", result )
1753	Assert. assertEquals ( HttpStatus. SC_NOT_MODIFIED, result. getCode ( ) )
1754	assertEquals ( newy, result, 0.01 )
1755	CustomAsserts. assertEquals ( definition, expected, actual )
1756	assertTrue ( deleted )
1757	assertFalse ( CacheUtils. isExecutableFile ( "/test_file.txt", cache ) )
1758	assertScoreAndParse ( content, null, 1 )
1759	assertEquals ( workspace. getName ( ), workspace2. getName ( ) )
1760	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
1761	assertEquals ( "appName should  not be updated", configuredAppName, expandedAppName )
1762	assertNotNull ( service. injectedLogger. getName ( ) )
1763	assertEquals ( "Employees", innerRoom. getEntry ( ). getEntry ( ). getProperty ( "name" ). getValue ( ) )
1764	assertEquals ( 1, result. size ( ) )
1765	assertEquals ( new BigInteger ( 100 ), fromJson )
1766	Assert. assertEquals ( expected, actual )
1767	assertEquals ( "snowball analyzer serialization is wrong", expected, actual )
1768	assertEquals ( 10, result. getInt ( COSName. R ) )
1769	assertNull ( reader. overflowAtoms ( ) )
1770	assertServletWasInvokedWith ( entity )
1771	assertEquals ( "3 啶�啶�啷� 啷�啷�", t. format ( new Date ( 315569259747L * 3L ) ) )
1772	assertEquals ( 12345678, instance. hashCode ( ) )
1773	assertEquals ( 123, b. getId ( ) )
1774	assertEquals ( new DLocation ( 56.34, 15.05f ), new DLocation ( P0, P1, P2, P3, P4, 0.00001f ) )
1775	assertNotNull ( ids )
1776	arrays. assertContains ( description, actual, value, null )
1777	assertThat ( actual, is ( commonPropertyType ) )
1778	assertEquals ( 57., violation, 0.01 )
1779	assertEquals ( set. size ( ), unequalInstances. size ( ) )
1780	assertTrue ( System. currentTimeMillis ( ) - before > ms )
1781	assertTrue ( sink. getInvalidConfiguration ( ) )
1782	assertEquals ( "Base value is not properly parsed", "09998.9999", parsed )
1783	assertEquals ( dataObject, Futures. get ( completableFuture ) )
1784	assertEqualDoubleArrays ( pydiv, div, epsilon )
1785	assertEquals ( "{f1:\\"v1\\",f2:\\"v2\\"}", expression )
1786	assertEquals ( this. state, object )
1787	assertEquals ( "[1, 3, 4, 5, 8, 9, 3, 989]", res. toString ( ) )
1788	assertThat ( mockContext. getOptimizationLevel ( ), is ( - 1 ) )
1789	assertEquals ( datetime, actual )
1790	MatcherAssert. assertThat ( ( String ) FieldAccessUtil. getFieldVal ( listener, "profile" ), is ( "testProf" ) )
1791	assertThat ( result, is ( notNullValue ( ) ) )
1792	assertEquals ( 3, results. getTotalCount ( ) )
1793	assertTrue ( gotException )
1794	assertFlowState ( ACCEPTED_SENT )
1795	assertEquals ( value. toString ( ), new SizeTypeNode ( testBinaryReaderBuilder. putQWord ( value ). build ( ), chunkHeader, parent, 4 ). getValue ( ) )
1796	Assert. assertFalse ( match )
1797	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
1798	assertTrue ( medias. size ( ) == max )
1799	assertTrue ( result. size ( ) > 0 )
1800	Assert. assertFalse ( syncSensorsIsRunning )
1801	assertEquals ( "11.1.10", result )
1802	assertEquals ( "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", sb. toString ( ) )
1803	assertEquals ( 1, col. count ( ) )
1804	assertThat ( codes, containsInAnyOrder ( "43343-4", "47239-9" ) )
1805	assertArrayEquals ( new MenuEntry [ ] { menu ( "Cancel", "", MenuAction. CANCEL ), menu ( "Examine", "Kragen", MenuAction. EXAMINE_NPC ), menu ( "Examine", "Kragen", MenuAction. EXAMINE_NPC ), menu ( "Walk here", "", MenuAction. WALK ), menu ( "Pay (south)", "Kragen", MenuAction. NPC_FOURTH_OPTION ), menu ( "Pay (north)", "Kragen", MenuAction. NPC_THIRD_OPTION ) }, argumentCaptor. getValue ( ) )
1806	assertEquals ( "1, 2, 3", tree. toString ( ) )
1807	assertThat ( isValid, is ( true ) )
1808	Assert. assertTrue ( _constraint. isAssignmentValid ( _testNode, _testReplica, _clusterContext ) )
1809	assertEquals ( "Integration", this. metadataStore. get ( "HazelcastMetadataStoreTests-Spring" ) )
1810	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 06" ) )
1811	Assert. assertEquals ( createSchemaRegistry ( ), schemaRegistryMultiple )
1812	Assert. fail ( "Should have Assert.failed on the third parameter to'starts-with' not " + "being bound." )
1813	assertEquals ( unused, h. getUnused ( ) )
1814	assertEquals ( exp, toString ( wa ) )
1815	Assert. assertTrue ( SecurityUtil. isSecurityEnabled ( ) )
1816	Assert. assertFalse ( properties. isEmpty ( ) )
1817	assertThat ( converter. toWritableObject ( new TimestampWritable ( new Timestamp ( 0L ) ) ), is ( ( Object ) new TimestampWritable ( new Timestamp ( 0L ) ) ) )
1818	assertAuthenticationFailsPlusRequired ( )
1819	assertEquals ( "company_project", dbName )
1820	Assert. assertEquals ( WMultiDropdownTestingExample. LABEL_SOME_SELECTED, component. getText ( ) )
1821	assertThat ( comparator. compare ( projectChange1, projectChange2 ), is ( 1 ) )
1822	assertThat ( builder. getPatches ( ), hasItemInArray ( "ADD /status/replicas" ) )
1823	assertEquals ( "Camel rocks", reply )
1824	assertEquals ( "John[Paul], Ringo[Ringo]", joiner. toString ( ) )
1825	Assert. assertEquals ( "RAND", actual )
1826	Assert. assertNotEquals ( w. hashCode ( ), ww. hashCode ( ) )
1827	assertThat ( MoreMapUtils. getUri ( map, KEY, null ), is ( nullValue ( ) ) )
1828	assertEquals ( "validating the bean", obj, new TestBean ( "" ) )
1829	Assert. assertEquals ( testInput. expectedOutput, output. toString ( ) )
1830	assertEquals ( "<div><p>Hello</p></div><div><p>There</p></div>", TextUtil. stripNewlines ( divs. outerHtml ( ) ) )
1831	assertThat ( subclassOf, equalTo ( false ) )
1832	BeanAssert. assertBeanEquals ( new FlexiBean ( ), parsed )
1833	assertEquals ( 0, ranking. getNumberOfSubFronts ( ) )
1834	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
1835	assertEquals ( expected, actual )
1836	assertTrue ( true )
1837	Assert. assertEquals ( "app_id,app_name,app_version,app_status,app_status_code,app_status_message,app_status_code", appsTableColumnsMeta )
1838	Assert. fail ( )
1839	assertEquals ( 0, scores. getScore ( ) )
1840	assertEquals ( LogLevel. TRACE, sub. getLevel ( ) )
1841	assertEquals ( ApiStatus. SUCCESS, response. getMeta ( ). getStatus ( ) )
1842	assertNotNull ( result )
1843	Assert. assertNotNull ( conf. get ( "hbase.conf.dir.walog" ) )
1844	assertThat ( result, is ( expected ) )
1845	Assert. assertEquals ( "VGhpcyBpcyB0aGUgcGxhaW4gd" + "GV4dCBtZXNzYWdlIQ==", s )
1846	assertEquals ( V8Value. DOUBLE, doublesArray. getType ( ) )
1847	assertTrue ( "Result should be empty object", result. length ( ) == 0 )
1848	Assert. assertEquals ( ( Integer ) 1, sync ( queue1. poll ( 10, TimeUnit. SECONDS ) ) )
1849	assertEquals ( "my_topic:my awesome message", binaryMessage. toBinary ( ) )
1850	Assert. areEqual ( true, countA == 0 && countB == 10, "验证优先级的写" )
1851	assertThat ( spec, is ( greaterThan ( 0 ) ) )
1852	assertTrue ( p. apply ( tree ) )
1853	Assert. assertEquals ( "DateIndexTableConfigHelper.setup threw the expected exception, but the message was not the expected message.", "No DateIndex Tables Defined", msg )
1854	assertNotNull ( result )
1855	assertEquals ( "Eliminar el ordenPago", nRows, lista. size ( ) )
1856	assertEqualRevisionLists ( revisionsAll, tmrpAll. revisions, "buggy" )
1857	assertFalse ( "Files should be different", duplicateFinder. isSame ( a, b ) )
1858	assertEquals ( d_drug. toString ( ), pm1. getNameModel ( ). getValue ( ) )
1859	assertThat ( tsp. toString ( ) + " => " + Double. toString ( delta ), delta < 1.0, is ( true ) )
1860	Assert. fail ( "Expection expected" )
1861	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Response/>", elem. toXml ( ) )
1862	assertEquals ( 1, getMessageQueueSize ( ) )
1863	assertEquals ( tag, requestMessage. getTags ( ). get ( tag ) )
1864	assertEquals ( 3, first. shrinking ( random, 7 ) )
1865	assertFalse ( command. valid ( options, optionParser ) )
1866	Assert. assertEquals ( "qwerty", entries. get ( 0 ). getPassword ( ) )
1867	assertEquals ( 4, notes. size ( ) )
1868	runner. assertAllFlowFilesTransferred ( FetchHDFS. REL_FAILURE, 1 )
1869	Assert. assertNull ( oembedService. executeRequest ( request ) )
1870	assertEquals ( k, f. getClass ( ) )
1871	assertConsoleOutputContains ( "clear screen." )
1872	assertEquals ( "custom config source", actualMetricId. getMetricName ( ) )
1873	this. assertLoadBlob ( departments, true, false )
1874	assertEqualsIgnoreWhitespace ( original, result )
1875	assertEquals ( 3, v )
1876	assertEquals ( exepcted_individual, returned_individual )
1877	assertNull ( "Analyzer must be null", mapper. analyzer )
1878	assertFalse ( lfs. util ( ). exists ( p ) )
1879	assertEquals ( value, user. get ( key, name ) )
1880	assertEquals ( Lists. newArrayList ( "do", "not", "cry", "over", "spilt", "beer" ), filteredWords )
1881	assertThat ( actualBranchNames, contains ( "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "master", "
1882	Assert. assertTrue ( Arrays. equals ( expected, actual ) )
1883	assertTrue ( result instanceof JMXMonCollector )
1884	assertNotNull ( error )
1885	assertEquals ( r1, r2 )
1886	TestHelpers. assertDeepEquals ( expected, result )
1887	assertEquals ( "calling: fooMethod(2 arguments: first=v1, second=v2)", message )
1888	Assert. assertTrue ( cifStream. available ( ) > 0 )
1889	Assert. assertEquals ( expected, MustacheTemplatePrefixExpander. expand ( input ) )
1890	this. assertIndices ( im ( 0, - 1 ), im ( 1, - 2 ), im ( 2, 3 ), im ( 3, 4 ) )
1891	assertEquals ( "/", path. toString ( ) )
1892	assertEquals ( "numhits is wrong", 2160, res. getNumhits ( ). intValue ( ) )
1893	assertEquals ( expectedDouble, value )
1894	assertThat ( kvStore. getListOrDefault ( "field", value ), equalTo ( value ) )
1895	assertEquals ( inputId, emptyId )
1896	Assert. assertEquals ( template2Id, research. getTemplateDto ( ). getId ( ) )
1897	assertEquals ( "bar", ss. getDefaultJob ( ). get ( "foo" ) )
1898	assertTrue ( ipMatcher. match ( "172.15.255.255" ) )
1899	assertFalse ( sut. failed ( ) )
1900	assertTrue (! ( ( String ) proxy. getAttribute ( "firstName" ) ). equals ( dto. getFirstName ( ) ) )
1901	assertEquals ( result. getId ( ), testIp )
1902	Assert. assertEquals ( 1.0 > 2.0? null : new int [ ] { 123 }, o )
1903	assertEquals ( false, result )
1904	assertEquals ( 0, attribsSet. size ( ) )
1905	assertTrue ( Pattern. matches ( "(?s).*<object.*<param.* href=\\"http://domain.com/object.data\\".*</object>.*$", result ) )
1906	Assert. assertTrue ( Math. abs ( now. getTime ( ) - n. getTime ( ) ) < 500 * 1000 )
1907	Assert. assertEquals ( ref, f. taylor ( dx, dy, dz ), 2.0e-15 )
1908	Assert. assertTrue ( servlet. isDebugMode ( ) )
1909	assertNull ( providerRole )
1910	assertJson ( "{'value2': 'foo'}", serialize ( bean ) )
1911	assertEquals ( "throwException", interceptor. invoke ( context ) )
1912	assertEquals ( body, treated. getBody ( ) )
1913	assertEquals ( metadata. getClass ( ), memoryCopyResultSet. getMetaData ( ). getClass ( ) )
1914	assertEquals ( "public static final NumericProperty<Integer> TEST = PropertyFactory.createInt(\\"test\\", 0);", definition )
1915	assertEquals ( diameter, 0.0 )
1916	assertEquals ( 48, size )
1917	Assert. assertEquals ( 3.0, svd. getConditionNumber ( ), 1.5e-15 )
1918	assertThat ( tableCount, is ( 0 ) )
1919	assertEquals ( "abc\\n", found )
1920	assertTrue ( "Agent-based allocation should have failed", plan. getOrderReservations ( ). size ( ) == numJobsInScenario )
1921	Assert. assertEquals ( a2. getCity ( ), person3. getWorkAddress ( ). getCity ( ) )
1922	assertThat ( handler, is ( instanceOf ( FederatedHMSHandler. class ) ) )
1923	assertions. endsWith ( sequence )
1924	assertEquals ( expected, result )
1925	assertEquals ( 0, a. length )
1926	assertThatBuildSucceeded ( )
1927	assertEquals ( exitVal, fixture. getExitVal ( ) )
1928	assertEquals ( 3, numberOfFriends )
1929	assertEquals ( 3, fromBase64. size ( 0 ) )
1930	assertEquals ( in, out )
1931	Assert. fail ( "Deberia haber saltado un AOFormatFileException" )
1932	assertEquals ( "searchQuery must not be empty", e. getMessage ( ) )
1933	assertEquals ( "", result )
1934	assertTrue ( doTest ( dynamicQuery, query ) )
1935	Assert. assertEquals ( 2, counts. get ( Jsprit. Strategy. RADIAL_BEST ) )
1936	assertEquals ( expectedColumn1, actualUniqueColumnCombination. getColumnIdentifiers ( ) )
1937	assertFalse ( "Expected StringSchema boolean validation failure did not succeed", schema. validate ( booleanEntity ) )
1938	assertions. doesNotContain ( value, index )
1939	Assert. assertEquals ( icmsSetado, icms. getIcmssn102 ( ) )
1940	assertEquals ( "some input file \\n with another line", helper. output )
1941	assertThat ( track. getName ( ), is ( "The Saint" ) )
1942	assertEquals ( "{\\"writeOption\\":\\"MAJORITY\\",\\"multi\\":true,\\"upsert\\":true,\\"arrayFilters\\":[{\\"name\\":\\"5\\",\\"value\\":\\"5\\"}]}", options. toJson ( ) )
1943	assertEquals ( "This is a string expression.", expression. eval ( ) )
1944	assertThat ( get, isAllowed ( ) )
1945	assertTrue ( filter. isDetected ( ) )
1946	Assertions. assertFalse ( result )
1947	assertTrue ( calculatorPanel. getTextBox ( ). textEquals ( "6" ) )
1948	assertEquals ( "", testUrlDecode. getValue ( context ) )
1949	assertThat ( context, is ( nullValue ( ) ) )
1950	Assert. assertEquals ( Servlet. SUCCESS, res )
1951	assertNotNull ( AssignedAddOnExtension. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "PNXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XFXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
1952	assertEquals ( getContents ( root, "nested_inheritance.txt" ), sw. toString ( ) )
1953	assertCRSEquals ( expected, actual )
1954	assertTrue ( result )
1955	assertThat ( value. toBinary ( ), is ( uuid ) )
1956	assertSearchYields ( index, "foo:aaa OR NOT foo:bbb", "foobbb", "fooccc" )
1957	assertEquals ( batches. size ( ), batchPlanSteps. size ( ) )
1958	assertEquals ( 1, observation. getCode ( ). getCoding ( ). get ( 0 ). getExtension ( ). size ( ) )
1959	assertFalse ( condition. accept ( null, null, attribs ) )
1960	assertEquals ( 1, actionItems. size ( ) )
1961	assertThat ( confirmation. getCurrentTime ( ), equalTo ( now ) )
1962	assertThat ( type. toString ( ), is ( "INT" ) )
1963	assertEquals ( "SELECT pm1.g1.e1 FROM pm1.g1 ORDER BY e1 DESC", plan. toString ( ) )
1964	assertEquals ( expected, result )
1965	assertEquals ( expected, actual )
1966	Assert. assertNotNull ( metadataDescriptor. createMetadata ( ) )
1967	assertTrue ( AcceptanceTestUtil. isInterested ( component, dscTestStub. getDeploymentID ( ). getServiceID ( ), dsAcceptanceUtil. getDiscoveryServiceDeployment ( component ). getDeploymentID ( ) ) )
1968	assertThat ( "Method with no parameters is processed incorrectly", title, equalTo ( MessageFormat. format ( TITLE_STRING_WITH_NO_PARAMS, args ) ) )
1969	Assert. assertEquals ( infoEventoRetorno, retorno. getInfoEventoRetorno ( ) )
1970	assertNumEquals ( numOf ( 104d / 100 ). pow ( numOf ( 1d / 3 ) ), esCriterion. calculate ( series, tradingRecord ) )
1971	assertTrue ( "code should be valid", totp. isValid ( code ) )
1972	assertFalse ( result. passedValidation ( ) )
1973	Assert. assertNotNull ( addressResultsDto )
1974	assertThat ( ClassUtils. getPackage ( packageName ), is ( notNullValue ( ) ) )
1975	XMLAssert. assertXMLEqual ( loadXML ( ORDER_ACK_XML ), result. getOwnerDocument ( ) )
1976	assertFalse ( resultMessage ( result, HttpRequestType. POST ), result. passedValidation ( ) )
1977	assertEquals ( "two septillion", actual )
1978	Assert. assertEquals ( "[AND,field:selector][posFilter: filter(true, AND, field, selector)]", luceneParser. parse ( "field:selector AND #include(field, selector)" ). getContents ( ) )
1979	assertEquals ( expected, pointOfFailure. toString ( ) )
1980	Assert. assertArrayEquals ( expectedResults, results )
1981	assertTrue ( "Time should be at standard time: " + speed, speed < 100 )
1982	assertEquals ( expResult, result )
1983	TestUtil. assertFuzzyContains ( "<input name=\\"concept1\\" id=\\"concept1\\" type=\\"hidden\\" class=\\"autoCompleteHidden\\" />", html )
1984	Assert. assertTrue ( shardTbl == null )
1985	assertEquals ( degree, 2 )
1986	Assert. assertArrayEquals ( expected, actual )
1987	assertE ( "�尖�尖�尖�尖��" + "��   ��" + "�� �� ��" + "��###��" + "�尖�尖�尖�尖��" )
1988	Assert. assertEquals ( "Failure expected the name to be the same", "ChatroomNewMemberDTO", CMDTO. getDTOName ( ) )
1989	assertEquals ( "test", result )
1990	assertTrue ( result )
1991	assertGenerators ( result, AnInt. class, ZilchGenerator. class )
1992	assertNotNull ( output. list ( ) )
1993	assertThat ( locomotive. getExitCode ( ), is ( 0 ) )
1994	assertEquals ( "", result )
1995	assertEquals ( "POST /controllink HTTP/1.1\\r\\n" + "Host: fake\\r\\n" + "Content-Type: text/xml\\r\\n" + "SOAPAction: service:type#AddPinhole\\r\\n" + "Connection: Close\\r\\n" + "Cache-Control: no-cache\\r\\n" + "Pragma: no-cache\\r\\n" + "Content-Length: 441\\r\\n" + "\\r\\n" + "<?xml version=\\"1.0\\"?>" + "<soap:Envelope xmlns:soap=\\"http://schemas.xmlsoap.org/soap/envelope/\\" soap:encodingStyle=\\"http://schemas.xmlsoap.org/soap/encoding/\\">" + "<soap:Body>" + "<u:AddPinhole xmlns:u=\\"service:type\\">" + "<RemoteHost>::ffff:102:304</RemoteHost>" + "<RemotePort>15</RemotePort>" + "<RemoteHost>::ffff:102:304</RemoteHost>" + "<RemotePort>15</RemotePort>" + "<RemoteHost>::ffff
1996	assertEquals ( 4, Jsonb. size ( assigns ) )
1997	assertThat ( "no issues shall be detected on a valid internal component", validation. pass ( Report. WITHOUT_WARNING ) )
1998	assertEquals ( rawMeta, metaBack )
1999	assertEquals ( "pippo", string )
2000	assertEquals ( deleteMapping1, deleteMapping1Duplicate )
2001	assertTrue ( certificateImportCalled. get ( ) )
2002	Assert. assertEquals ( "Graph not of the exepected size", 12, graph. size ( ) )
2003	assertEquals ( expected, query. export ( ) )
2004	assertTrue ( Pattern. matches ( "(?s).*resourceNPE.*", page. asXml ( ) ) )
2005	Assert. assertFalse ( "GetMySavedView returned no results", jsonList. isEmpty ( ) )
2006	Assert. assertNotNull ( evt )
2007	assertEquals ( "NIFE-8", servlet. getUserAgent ( ) )
2008	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
2009	assertFalse ( accessor. declaresHashCode ( ) )
2010	assertEquals ( "<diagnosticReport><id>123</id></diagnosticReport>", xml )
2011	assertNotNull ( childBoss )
2012	assertFalse ( parent. isPrefixOf ( fixture ) )
2013	assertEquals ( true, getRemoveLayerDefinitionAction ( ). isEnabled ( ) )
2014	assertEquals ( "The stock symbol hasn't been updated.", acme. getSymbol ( ), stocks. get ( 0 ). getSymbol ( ) )
2015	assertEquals ( RdfTestHelpers. parseRdf ( RdfTestHelpers. getResourceFromFile ( "StatementRankTriple.rdf" ) ), model )
2016	assertThat ( result, is ( "A012345789012345789\\n|B012345789012345789\\n|C012345789012345789\\n" ) )
2017	assertEquals ( spec, substituter. getDefault ( ) )
2018	assertThat ( callback. toString ( ), callback. isContextEstablished ( ), is ( true ) )
2019	assertThat ( getterMethod. getReturnType ( ). getName ( ), is ( "long" ) )
2020	Assert. assertEquals ( "<div class=\\"htmlform\\"></div>", session. getHtmlToDisplay ( ) )
2021	Assert. assertTrue ( message, expected. equals ( actually ) )
2022	assertEquals ( "This test must runs without an error, because we can not guarantee that this test method run as first. ", 0, res )
2023	Assert. assertEquals ( 0, filteredPaths. length )
2024	Assert. assertFalse ( file. exists ( ) )
2025	assertNotNull ( TaskChannel. fetcher ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "TCXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
2026	assertThat ( sampleEntities. size ( ), is ( 2 ) )
2027	assertEquals ( 2, proxy. getPriority ( ) )
2028	mock. assertIsSatisfied ( )
2029	assertNotNull ( result. getOpenAPI ( ). getComponents ( ). getExamples ( ). get ( "ex1" ) )
2030	assertThat ( a, is ( equalTo ( A1. getInstance ( ) ) ) )
2031	assertThat ( resp, stringContainsInOrder ( "<code value=\\"11378-7\\"/>", "<display value=\\"Systolic blood pressure at First encounter\\"/>" ) )
2032	assertEquals ( ret, "todo" )
2033	assertThat ( actual, equalTo ( expected ) )
2034	assertEquals ( expectedResult, entityParser. parseThing ( json ) )
2035	assertEquals ( 4L, avg. toLong ( ) )
2036	assertEquals ( 5, devices. size ( ) )
2037	assertEquals ( expecting, found )
2038	Assert. assertEquals ( 3, EntityUtil. getInstanceSequence ( start, frequency, tz, instance ) )
2039	assertEquals ( expected, map )
2040	Assert. assertEquals ( str, baos. toString ( "UTF-8" ) )
2041	assertEquals ( "Test message ab c\\\\", result )
2042	assertTrue ( errors. contains ( "errorpage" ) )
2043	assertEquals ( "java.lang.NullPointerException", t. getFirstClassOrInterfaceTypeImage ( ) )
2044	assertEquals ( Color. blue. getRGB ( ), thumbnail. getRGB ( 49, 99 ) )
2045	assertEquals ( "abc\\n", found )
2046	assertEquals ( "myValue", job. getConfiguration ( ). get ( "my.context.property" ) )
2047	assertEquals ( expected, deserialized )
2048	Assert. assertEquals ( "sendMessageFromOwnerProcessor,sendFromOwnerChatSocketImpl", slip )
2049	Assert. assertArrayEquals ( new byte [ ] { ( byte ) 0xc2, 0x49, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
2050	assertThat ( target. matchExactly ( flow ), is ( false ) )
2051	assertTrue ( Modifier. isPrivate ( constructor. getModifiers ( ) ) )
2052	assertArrayEquals ( array ( 'a', 'b', 'c', 'd', 'e' ), letters )
2053	assertTrue ( isApplicable )
2054	assertThatTestAppHasBeenSuccessfullyRegistered ( driver )
2055	assertThat ( token. getType ( ), is ( PCRELexer. WhiteSpace ) )
2056	Assert. assertEquals ( "[3, 2, 6, 4, 7, 1, 5]", result. toString ( ) )
2057	JSONAssert. assertEquals ( "{a:[[9]]}", ARRAY_OF_JSONARRAYS, new CustomComparator ( JSONCompareMode. LENIENT, customization ) )
2058	assertEquals ( "{\\"id\\":\\"333\\"}", bos. toString ( ) )
2059	assertEquals ( this. emptyCom, result. getAttributes ( ) )
2060	assertEquals ( 555, asynchronousJobPool. getQueueSize ( ) )
2061	assertEquals ( DateUtil. parseRfc1123Date ( expires ), DateUtil. parseRfc1123Date ( expires ) )
2062	assertTrue ( empty1. equals ( empty2 ) )
2063	Assert. assertFalse ( policy. isResponseCacheable ( request, response ) )
2064	assertThat ( existingGridSet, hasProperty ( "name", equalTo ( GWCConfigIntegrationTestData. GRIDSET_EPSG4326 ) ) )
2065	assertEquals ( 0, p. size ( ) )
2066	assertNull ( placement )
2067	assertEquals ( Arrays. asList ( "com.a.A", "com.b.B", "age", "12" ), ValidationGroupHelper. getGroupsOnField ( input ) )
2068	assertNotNull ( valve. getExecutorService ( ) )
2069	assertTrue ( "Failed at " + i, called )
2070	Assert. assertEquals ( 0, events. size ( ) )
2071	assertEquals ( "test", resp. getHeader ( "X-XSRF-COOKIE" ) )
2072	assertThat ( Datastore. delegate, instanceOf ( MyDelegate. class ) )
2073	Assert. assertEquals ( "{\\"alice\\":{\\"edgar\\":{\\"bob\\":[]}}}", result. toString ( ) )
2074	assertFalse ( Compare. areIdentical ( imageToTest, referenceImage ) )
2075	Assert. assertNotNull ( trainer. train ( eventStream ) )
2076	assertTrue ( mbr instanceof CustomBooleanReader )
2077	assertNull ( domain )
2078	paths. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE_PATTERN )
2079	assertThat ( properties. size ( ), is ( 0 ) )
2080	assertThat ( action, is ( "action" ) )
2081	Assert. assertFalse ( item. matches ( divNode ) )
2082	assertEquals ( expectedCollectionPrefix, sink. collectionPrefix )
2083	Assert. assertEquals ( - 1, Array. binarySearch ( input, integerComparator, 0, input. length ) )
2084	assertEquals ( 7, this. crossword. getWidth ( ) )
2085	assertEquals ( "user", jhsCmd. getOptions ( ). get ( CliConsts. USER_OPTION_NAME ) )
2086	assertEquals ( storeMock, store )
2087	Assert. assertEquals ( "�����", t. format ( new Date ( 600 ) ) )
2088	Assert. assertEquals ( expected, actual )
2089	assertTrue ( population. size ( ) >= 90 )
2090	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
2091	assertNotNull ( currentUser )
2092	assertThat ( cursor. hasNext ( ), equalTo ( false ) )
2093	assertSeq ( new String [ ] { "<a/>", "<b/>", "<c/>", "<d/>" }, "insert-before(/top/x/*, 2, /top/y/*)" )
2094	assertEquals ( expecteds, actuals )
2095	assertEquals ( workflowInstId, pgeTask. getWorkflowInstanceId ( ) )
2096	assertFalse ( Tools. versionAfterPacemaker ( host ) )
2097	assertThat ( destination. getBodyText ( ), is ( "Navigation Destination from : from the implicit command link" ) )
2098	Assert. assertEquals ( 10, rowKeys. size ( ) )
2099	assertFalse ( "valid input but exceeds bounds " + field. getText ( ), cellEditor. stopCellEditing ( ) )
2100	Assert. assertNotNull ( tested. newRequest ( ) )
2101	assertEquals ( "Hello World!", result )
2102	assertEquals ( 1, branch_conditions. size ( ) )
2103	assertTrue ( previewElement. getColorFieldContainsErrors ( ) )
2104	assertTrue ( writeOnlyProp. isWriteOnly ( ) )
2105	Assert. assertTrue ( ctx. getResult ( ) )
2106	assertEquals ( mockList, testList )
2107	Assert. assertTrue ( charset. equals ( CharsetUtil. getCharset ( charsetIndex ) ) )
2108	assertThat ( "image id", sut. getImageId ( ), is ( equalTo ( imageId ) ) )
2109	Assert. assertEquals ( serverTask. getTaskId ( ), slaves [ 0 ]. _2 )
2110	assertTrue ( errors. isEmpty ( ) )
2111	assertEquals ( CONFLICT. getStatusCode ( ), getStatus ( request ) )
2112	assertEquals ( "WHERE a =? AND pending =? OR notNew =?", str )
2113	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE ((DEPTH(nodes) - DEPTH(nodes)) + DEPTH(nodes)) = 3" ) )
2114	assertThat ( cdtos. size ( ), is ( 2 ) )
2115	Assert. assertEquals ( 0, leakyBucket. getLeakyTokens ( ). size ( ) )
2116	assertEquals ( amount, all. size ( ) )
2117	assertNextRequestIsCreateWorkspace ( "something", CreateConflictBehavior. CREATE_WITH_ADJUSTED_NAME )
2118	assertEquals ( 2, format. getTokenizers ( ). size ( ) )
2119	assertTrue ( policy2. getApiIds ( ). isEmpty ( ) )
2120	assertEquals ( expectedFunction, new Function ( _Int ( ), "addTwo", asList ( _Arg ( _Int ( ), "x" ), _Arg ( _Int ( ), "y" ) ), asList ( _Return ( _Add ( _Variable ( "x" ), _Variable ( "y" ) ) ) ) )
2121	assertExtractedTextHasBeenIndexed ( "select [jcr:path] from [nt:resource] as res where contains(res.*,'modeshape')" )
2122	Assert. assertTrue ( infEx. isType ( DummyException. class ) )
2123	assertEquals ( "", result )
2124	assertEquals ( 0, result. getTotalHits ( ) )
2125	Assert. assertEquals ( 3635, nodeCount )
2126	assertEquals ( expectedSql, actualQuery )
2127	assertEquals ( "ClassName", CONVERTER. dotted ( dotClass ) )
2128	assertNotNull ( deviceFlowRegistry )
2129	Assert. assertEquals ( "did not get the default number of threads", 8000, jargonProperties. getMaxParallelThreads ( ) )
2130	Assert. assertNotNull ( userBean )
2131	assertEquals ( ImmutableVariantScore. of ( ReadType. ALT, 32 ), SamRecordScoring. getVariantScore ( shortAlt, DELETION ) )
2132	assertEquals ( testData. length - 2, cfis. available ( ) )
2133	assertEquals ( generateOutput ( "    3 [----->----------------------] [--->----------------------]" ), output. getBuffer ( ). toString ( ) )
2134	assertEquals ( "i(3,9)", s. getPickupLocation ( ). getId ( ) )
2135	assertTrue ( folder. getProgressState ( ) == ProgressState. FAILED )
2136	assertEquals ( 0, filter. filter ( aciContext, null, null ). size ( ) )
2137	context. assertIsSatisfied ( )
2138	Assert. assertEquals ( "dont l'a cisine", this. realiser. realise ( this. dansLaPiece ). getRealisation ( ) )
2139	assertEquals ( "The break sentences are not correct", results [ 0 ], results [ 1 ] )
2140	assertContainsRegex ( WHERE + OPEN_CURLY + var ( "s" ) + SPACE + ":P" + SPACE + ":O" + OPT_SPACE + CLOSE_CURLY, query )
2141	assertThat ( foundResources, contains ( p2id. getValue ( ) ) )
2142	assertSame ( dataSetProperty, cachedDataSetProperty )
2143	Assert. assertEquals ( cache, builder. offset ( 12, 10 ). build ( ) )
2144	Assert. assertEquals ( expected, pass. concretizeCell ( term ) )
2145	assertNull ( instance. nullableStringList ( ) )
2146	assertEquals ( new Statistics ( 1, 1, 1, 0 ), spec. stats ( ) )
2147	assertEquals ( URI. create ( expected ), uri )
2148	assertThat ( server. getProject ( "url" ), is ( not ( sameInstance ( server. getProject ( "url" ) ) ) )
2149	assertEquals ( inVivo. getEvidenceCode ( ), ecv )
2150	assertEquals ( "[[?��??��?��? > [RIGHT]]]", rules. toString ( ) )
2151	Assert. assertEquals ( expectedEventBo, actualEventBo )
2152	AsserterWithLazyInitialisationAlgorithm. ASSERTER. assertNotImmutable ( klasse )
2153	Assert. assertTrue ( "provideSubscriberLocation message (opCode 83, TCAP Begin) should be blocked by Cat2",! sigfw. unitTestingFlags_sendSccpMessage )
2154	assertEquals ( "", result )
2155	assertEquals ( "" + i + " " + codec. lineLength, b [ 1 ]. length, codec. getEncodedLength ( b [ 0 ] ) )
2156	assertThat ( processor, instanceOf ( TSetIpAddressProcessor. class ) )
2157	Assert. assertEquals ( "abc", stringAppender. toString ( ) )
2158	assertEquals ( "There should be 0 chart data results", 0, chartDataList. size ( ) )
2159	Assert. assertEquals ( "should retrieve correct fieldName", fieldName, node. getFieldName ( ) )
2160	Assert. assertEquals ( "Kermit,The Frog", result )
2161	assertEquals ( timeInstant. getTimeMode ( ), TimeInstant. TimeMode. BEGIN )
2162	assertEquals ( "2000-1-5", value. toString ( ) )
2163	Assert. assertEquals ( EMPTY_FINGERPRINT, managedRangerAuthorizer. getFingerprint ( ) )
2164	result. assertIsSatisfied ( )
2165	assertEquals ( 1, totalLines )
2166	Assert. assertEquals ( "this", obj )
2167	Assert. assertTrue ( result. getBigIntValue ( ). intValue ( ) == 7 )
2168	assertEquals ( 2, b. length )
2169	assertThat ( runtimeOptions. getGlue ( ), contains ( uri ( "classpath:/app/features/user/registration/hooks" ), uri ( "classpath:/app/features/user/registration/hooks" ) ) )
2170	assertThat ( roundtrippedRecord, equalTo ( record ) )
2171	assertThat ( mockMetrics. getMessageReceivedBytes ( ), is ( 43121L ) )
2172	assertEquals ( "select entity_0.name from Entity entity_0 group by entity_0.name having sum(entity_0.integerField) > :function_1 and ( entity_0.name = :name_2 or entity_0.name = :name_3 )", query )
2173	assertEquals ( "<html>\\n<head></head>\\n<body>\\n<div>\\n<p>Hello there</p>\\n</div>\\n</body>\\n</html>", doc. html ( ) )
2174	assertSame ( offered. get ( ), request )
2175	assertEquals ( "do some work", outputVal )
2176	assertScoreAndParse ( content, null, 1 )
2177	Assert. assertNotNull ( combinationGenerator )
2178	assertEquals ( expected, error. toString ( ) )
2179	assertThat ( serverHello. getClientCertificateType ( ), is ( CertificateType. RAW_PUBLIC_KEY ) )
2180	Assert. fail ( e. getMessage ( ) )
2181	assertNull ( presenter. getValue ( ) )
2182	Assert. assertTrue ( errors. hasFieldErrors ( "voidReason" ) )
2183	assertNotNull ( doc. getDescription ( ) )
2184	assertEquals ( c. get ( Calendar. DAY_OF_MONTH ), CalendarUtils. getActualMinimum ( c ) )
2185	Assert. assertTrue ( response. toString ( ), response. result ( ) )
2186	assertEquals ( "Should respond with 200", 200, responseContext. getStatus ( ) )
2187	assertSet ( queryReturns ( october15Entity, november1Entity ), whenFilteringBy ( IN, Arrays. asList ( october15, november1 ) ) )
2188	Assert. assertEquals ( jsonString, "[[{\\"name\\":\\"涓���\\",\\"id\\":1,\\"brithDate\\":null,\\"money\\":1.1},{\\"name\\":\\"涓���1\\",\\"id\\":2,\\"brithDate\\":null,\\"money\\":2.1}]" )
2189	Assert. assertEquals ( 10L, template. execute ( callable, retryState, recoveryCallback ). longValue ( ) )
2190	assertEquals ( expectedKey, bucketKeyWithFileName )
2191	assertEquals ( 0, graph. getStatements ( ). size ( ) )
2192	assertEquals ( " WHERE ((\\"NAME\\" LIKE? AND (\\"AGE\\" <? OR \\"AGE\\" >?)) OR \\"LASTNAME\\" =?)", QueryBuilder. getWhereStringForFilters ( filters, sh ) )
2193	assertEquals ( "3#4", expression )
2194	assertNotNull ( security )
2195	assertThat ( toUnqualifiedVersionlessIds ( found ), containsInAnyOrder ( id1, id2 ) )
2196	assertThat ( query. count ( ), is ( 0L ) )
2197	assertTrue ( 1.28 == deserialize. readDouble ( ) )
2198	assertTrue ( str. contains ( "\\0" ) )
2199	Assert. assertTrue ( retValue. intValue ( ) == 2 )
2200	assertEquals ( 2, v8Int32Array. length ( ) )
2201	assertEquals ( 20, configuration. getRunInterval ( ) )
2202	assertions. isNotEmpty ( )
2203	assertEquals ( jobBuilder. getConfiguration ( ), jobBuilderCopy. getConfiguration ( ) )
2204	Assert. assertSame ( bitmap, ic. getBitmap ( ) )
2205	assertThat ( anyTS. isValid ( SECOND_OF_DAY, 86400 ), is ( false ) )
2206	assertFalse ( isEqual )
2207	Assert. assertTrue ( "odd, user 7 didn't get user 8's name", found )
2208	assertFalse ( parser. gotAnyHeader ( ) )
2209	assertTrue ( root. show ( ) )
2210	assertEquals ( 81, x. value )
2211	assertArrayEquals ( value, to )
2212	assertOut ( "public class A implements IA {\\n}" )
2213	assertEquals ( TargetType. PILLAR, target. getType ( ) )
2214	assertEquals ( PRECONDITION_FAILED, response. getStatusInfo ( ) )
2215	assertNoProblems ( )
2216	Assert. assertEquals ( 2 * 2, result, 0 )
2217	assertEquals ( set ( "d", "e" ), redis. sinter ( "key1", "key2", "key3" ) )
2218	Assert. assertTrue ( match )
2219	assertEquals ( "CLM", cf. getSegment ( ) )
2220	assertEquals ( 1, islandPerimeter. islandPerimeter ( grid ) )
2221	assertEquals ( "Cardenality of cartesian product is wrong", 2, cartesianResult. size ( ) )
2222	assertTrue ( true )
2223	tester. assertRenderedPage ( HomePage. class )
2224	assertEquals ( pp. getValue ( ), new Payload < > ( "123" + "456" ). getValue ( ) )
2225	assertEquals ( 0xffffffffL, getUnsignedInt ( v1, 0 ) )
2226	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
2227	assertEquals ( s_expected_1, Hex. toHexString ( item1. getData ( ) ). toUpperCase ( ) )
2228	assertEquals ( 1, violations. size ( ) )
2229	assertExpectedProtectedPorts ( dai )
2230	assertEquals ( dst. toClass ( ). getParameterTypes ( ). length, src. getParameterTypes ( ). length )
2231	assertEquals ( Response. Status. NO_CONTENT. getStatusCode ( ), response. getStatus ( ) )
2232	assertResultSet ( res )
2233	assertEquals ( "Description", entity. getDescription ( ) )
2234	assertEquals ( "slow", value. asIs ( ) )
2235	assertTrue ( "Directory should be created", pdp. createDir ( subject_root, attr ) )
2236	assertThat ( CalendarPeriod. onWeeks ( ). parse ( "52/2017 �� 4/2020", f ), is ( expected ) )
2237	assertEquals ( "<word>The fox</word> jumps over", HtmlUtils. makeWellFormedAddOpenTag ( xmlContent ) )
2238	Assert. assertEquals ( 2, vertexes. size ( ) )
2239	Assert. assertEquals ( "result", testBean. getResult ( ) )
2240	Assert. assertEquals ( b1, b2 )
2241	assertEquals ( "The variable type was ignored.", myBean, retrievedBean )
2242	assertEquals ( expected, reference. get ( ) )
2243	Assert. assertEquals ( expectedResult, result )
2244	assertEquals ( sumLabel. getText ( ), String. valueOf ( number ) )
2245	assertThat ( result. toString ( ), is ( equalTo ( "HELLO" ) ) )
2246	assertEquals ( "Index Of Test1 is 1", 1, _fastTable. indexOf ( "Test1" ) )
2247	assertThat ( cause, instanceOf ( RuntimeException. class ) )
2248	assertNotNull ( sslContext )
2249	assertThat ( dest. aaa, is ( nullValue ( ) ) )
2250	assertTrue ( hasLock )
2251	assertEquals ( 5000, processInstance. getRequestTimeout ( ) )
2252	assertTrue ( book. getIsbn ( ). startsWith ( "132" ) )
2253	assertEquals ( 401, response. getStatus ( ) )
2254	assertEquals ( "CFBundleVErsion in file '" + infoPList + "' is not the expected version '" + dynamicVersion + "'.", dynamicVersion, new PListAccessor ( infoPList ). getStringValue ( PListAccessor. KEY_BUNDLE_VERSION ) )
2255	assertTrue ( success )
2256	assertTrue ( commentFromDb. isDeleted ( ) )
2257	Assert. assertFalse ( "ticket is not in use", inUse )
2258	assertThat ( eventListener. captured ( actor, type ) )
2259	Assert. assertTrue ( "Failed to login with pcClient", pcClient. login ( ) )
2260	assertNull ( "Base value must be null", mapper. base ( "test", null ) )
2261	assertEquals ( dataset, galaxyHistory. toFileToHistory ( createdHistory ) )
2262	assertEquals ( expResult, result )
2263	assertBulkInsert ( data, expected )
2264	Assert. assertEquals ( "<input type=\\"checkbox\\" id=\\"w1\\" name=\\"w1\\" value=\\"true\\" toggleDim=\\"hatColors\\"/><label for=\\"w1\\">Has a hat?</label><input type=\\"hidden\\" name=\\"_w1\\"/>", cw. generateHtml ( context ) )
2265	Assert. assertEquals ( "GRANT ALL ON TABLE db1.TABLE TO ROLE ROLE", grantDesc. getDatabasePrefix ( ) )
2266	assertThat ( type. matching ( Other. class ), equalTo ( true ) )
2267	assertEquals ( "addArgument() adds an argument", "foo", command. getArgument ( 0 ) )
2268	assertThat ( actual, is ( notNullValue ( ) ) )
2269	assertThat ( query. asSingleEntity ( ), is ( not ( nullValue ( ) ) ) )
2270	assertEquals ( numOfLedgers, counter )
2271	assertFeatureValues ( expected, testQuery, testText, new SimpleFeatureExtractor ( ) )
2272	assertTrue ( evaluator. evaluatePerm ( indices, null, InetAddress. getByName ( "8.8.8.8" ), null ) == PermLevel. ALL )
2273	assertEquals ( resolvedClassPaths, Arrays. asList ( wildcard ) )
2274	assertEquals ( NDC. pop ( ), "Foobar" )
2275	assertEquals ( "xpto", parsedObject. getLazyMapPojo ( ). get ( BasicObject. class, 1 ). getStringValue ( ) )
2276	Assert. assertNotNull ( victim. create ( ) )
2277	assertTrue ( false )
2278	assertTrue ( result )
2279	assertEquals ( TIMEOUT, actualResponse. getTimeout ( ) )
2280	this. context. assertIsSatisfied ( )
2281	assertEquals ( "to@domain.com", emailer. getProperties ( ). getProperty ( "to" ) )
2282	assertThat ( result, is ( response ) )
2283	assertThat ( internalMap. size ( ), equalTo ( 0 ) )
2284	assertEquals ( "8080", envVars. get ( "COVERITY_HTTPS_PORT" ) )
2285	assertTrue ( result. isResultOK ( ) )
2286	assertEquals ( transport, svc. getHttpTransport ( ) )
2287	assertThat ( result, is ( false ) )
2288	assertParseFileOk ( fileName )
2289	assertEquals ( it. next ( ). getName ( ), "h枚chstBetrag" )
2290	Assert. assertEquals ( contextX, test. context )
2291	assertEquals ( ComparatorStepResult. Status. PASSED, result. getStatus ( ) )
2292	Assert. assertEquals ( "freed bucket", Sets. newHashSet ( 1L, 2L ), testMeta. managedState. freedBuckets )
2293	result. assertIsSatisfied ( )
2294	assertEquals ( expected, actual )
2295	assertEquals ( second. getSqlType ( ), "int" )
2296	assertEquals ( expected, expression. toString ( ) )
2297	Assert. fail ( )
2298	assertTrue ( AutnumUtil. isValidAutnum ( validAutnum ) )
2299	assertEquals ( "should contain bob", "bob", users. get ( 0 ). getText ( ) )
2300	assertEquals ( expectedProfile. getSid ( ), resultantProfile. getSid ( ) )
2301	assertEquals ( "barfoo", form. getItem ( "foo.bar" ). getFoobar ( ) )
2302	Assert. fail ( "expected exception for null query string." )
2303	assertEquals ( expected, actual )
2304	assertEquals ( 37, actual )
2305	Assert. assertEquals ( eventCount, event. getTouchCount ( ) )
2306	assertEquals ( true, check. isRequired ( ) )
2307	assertEquals ( "The numeric value " + encodeValue + " should be encoded to '" + expected + "'", expected, alphaNumericCodec. encode ( encodeValue ++ ) )
2308	Assert. assertEquals ( t1, t2 )
2309	assertEquals ( "[{\\"value\\":\\"A test summary\\",\\"lang\\":\\"EN\\"}]", toJson ( summaries ) )
2310	Assert. fail ( "Test should fail, user shouldn't be allowed to invoke that method" )
2311	Assert. assertTrue ( cursor. atEnd ( ) )
2312	assertNotNull ( op )
2313	Assert. assertTrue ( irodsFile. exists ( ) )
2314	assertEquals ( 1, map. size ( ) )
2315	assertThat ( inds, containsInAnyOrder ( indB ) )
2316	Assert. assertEquals ( expected, actual )
2317	assertThat ( initiativeInfo. isVotingStarted ( anyLocalDate ( ) ), is ( false ) )
2318	assertThat ( ChronoHistory. from ( history. getVariant ( ) ), is ( history ) )
2319	arrays. assertEndsWith ( description, actual, null )
2320	assertTrue ( action )
2321	assertEquals ( "timeout", latch. getCount ( ), 0 )
2322	assertThat ( args, contains ( "network", "ls" ) )
2323	assertEquals ( JobStatus. ACCEPTED, jobResultArgumentCaptor. getValue ( ). getStatus ( ) )
2324	Assert. assertEquals ( expected, actual )
2325	Assert. assertEquals ( path, obs. getFormFieldPath ( ) )
2326	assertEquals ( expected, calls. toString ( ) )
2327	assertThat ( results, samePaths ( new File ( root, "a.txt" ) ) )
2328	Assert. assertEquals ( 2, list. size ( ) )
2329	assertEquals ( "An :(awesome :)string with a few :(emojis!", result )
2330	Assert. assertEquals ( Collections. emptySet ( ), ec. getValue ( ) )
2331	assertNotNull ( processInstanceId )
2332	assertTrue ( Arrays. equals ( expectedResult, encoded. array ( ) ) )
2333	assertEquals ( 2, found )
2334	assertEquals ( null, argumentCaptor. getValue ( ) )
2335	assertTrue ( r1 instanceof PublicCloneable )
2336	Assert. assertEquals ( xmlEsperado, referenciada. toString ( ) )
2337	assertEquals ( ids, session. from ( var ). list ( var. id ) )
2338	assertTrue ( ( ( BooleanType ) eval. get ( 0 ) ). getValue ( ) )
2339	assertEquals ( vr. getValidity ( ), Validity. INVALID )
2340	Assert. isTrue ( results. size ( ) == 1 )
2341	assertEquals ( expected, actual )
2342	Assert. assertNotNull ( facet )
2343	assertEquals ( - BASSED_PAWN_BOOST + DOUBLED_PAWN_HANDICAP, score )
2344	Assert. assertEquals ( expect_sql, sql )
2345	assertEquals ( BGPError. CEASE, e. getError ( ) )
2346	assertThat ( event. isCancelled ( ), is ( true ) )
2347	assertNotNull ( ds )
2348	assertNotNull ( result )
2349	assertResponse ( "method withoutParameters was invoked", response )
2350	assertTrue ( population. size ( ) >= 98 )
2351	assertTrue ( sut. isWhitespace ( ) )
2352	assertTrue ( stmt instanceof CreateTableNode )
2353	assertThat ( resolver. replace ( "${m1}, ${m2}, ${m3}!", true ), is ( "Hello1, Hello2, Hello3!" ) )
2354	assertFalse ( "Schemas", schemaHomology. schemasMatch ( schema1, schema2, exclusionRegex ) )
2355	Assert. assertTrue ( matchingArtifacts. isEmpty ( ) )
2356	Assert. assertNotNull ( rpcServiceMetaInfo )
2357	Assert. assertEquals ( sum, 13 )
2358	assertEquals ( "Lorem ipsum", transform. get ( 0 ). getString ( "foo" ) )
2359	assertEquals ( map. size ( ), n * nThreads )
2360	assertEquals ( expected, actual )
2361	assertTrue ( result )
2362	assertEquals ( d1, d2 )
2363	assertNull ( immediateValue. getValue ( ) )
2364	assertions. isEqualTo ( ( short ) 2 )
2365	assertTrue ( aRes. canRead ( ) )
2366	Assert. assertFalse ( errors. hasErrors ( ) )
2367	Assert. assertEquals ( jdkHand, acHand )
2368	assertEquals ( false, start )
2369	assertEquals ( 200, resp. getStatusLine ( ). getStatusCode ( ) )
2370	assertEquals ( "MyRepositoryName", RepoAndTableUtil. getOwningRepository ( tableDescriptor ) )
2371	assertThatThrownBy ( ( ) -> this. mocker. getComponentUnderTest ( ). processRequest ( request ) )
2372	assertThat ( actual, is ( notNullValue ( ) ) )
2373	assertThat ( bc. string ( ), is ( "c1ccccc1Cc1ccccc1" ) )
2374	assertEquals ( sb. toString ( ), stmtb. prepareStatementString ( ) )
2375	assertEquals ( 2, hits. totalHits )
2376	context. assertIsSatisfied ( )
2377	assertEquals ( "Protocol should be broken", Protocol. ERROR, handler. getProtocol ( ) )
2378	assertNotNull ( Message. fetcher ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "IMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
2379	assertEquals ( "Hello, World!", resp )
2380	assertEquals ( expected, actual )
2381	assertThat ( result, is ( true ) )
2382	assertSame ( "Wrong constructor arguments", new ArrayList < ConstructorArg > ( ), cd. getConstructorArgs ( ) )
2383	assertTrue ( "Row should be wider than tree", treeGrid. getTableWrapper ( ). getSize ( ). getWidth ( ) > tree. getRow ( 0 ). getSize ( ). getWidth ( ) )
2384	assertEquals ( "XAU_USD", currencyPair )
2385	assertEquals ( 0, reportStats. getTotalTotalRetries ( ) )
2386	assertThat ( offset. canonical ( ), is ( "UTC+02:00" ) )
2387	assertTrue ( i1. contains ( i1 ) )
2388	assertEquals ( expected, actual )
2389	Assert. assertEquals ( 2, ( ( Number ) o ). intValue ( ) )
2390	assertSame ( doc, myTestInstance. deleteAsync ( doc ). get ( ) )
2391	assertEquals ( SC_OK, response. getStatus ( ) )
2392	assertThat ( resolver. resolve ( obj1, obj2, obj3 ), is ( notNullValue ( ) ) )
2393	assertThat ( referencableDaoService. get ( ConfigRefEnum. ACHIEVEMENTS_REFRESH_RATE ). getValue ( ), is ( "1" ) )
2394	assertEquals ( 100_000_000_000L, money. getAmount ( ) )
2395	assertThat ( connection2, is ( connection ) )
2396	assertEquals ( 400, cr. getStatus ( ) )
2397	assertTrue ( builder instanceof NettyChannelBuilder )
2398	assertEquals ( "((?:\\\\Qabc\\\\E){3})", p. toString ( ) )
2399	assertNotNull ( mapping )
2400	assertNotNull ( clazz )
2401	assertEquals ( mockServerConfig, result )
2402	assertEquals ( p. toString ( ), "/package/org/apache/cxf/common/utils/Source/LocalClass.java" )
2403	assertEquals ( "Output order: " + outputOrder, exp, out )
2404	assertEquals ( ResultCodeEnum. INVALID_CREDENTIALS, resp. getLdapResult ( ). getResultCode ( ) )
2405	assertEquals ( "value1", container1. stringBuilder. toString ( ) )
2406	Assert. assertNotNull ( instance )
2407	assertEquals ( "test", rdr. readLine ( ) )
2408	assertEquals ( "Wrong number of URI references found", 0, result. size ( ) )
2409	assertEquals ( "êx", result )
2410	assertIsSemver ( semver, version, 1, null, new String [ ] { "beta", "11" }, "sha.0nsfgkjkjsdf" )
2411	assertThat ( driver. findElement ( By. id ( "message" ) ). getText ( ), is ( "user1" ) )
2412	assertEquals ( expectedQuery, actualQuery )
2413	assertEquals ( 0, comparison1 )
2414	assertTrue ( fixture. eof ( ) )
2415	assertNotNull ( doc )
2416	assertEquals ( source, actual )
2417	Assert. assertTrue ( out. contains ( "viewId=default" ) )
2418	assertFalse ( testResult )
2419	Assert. assertEquals ( 0., analyser. getTimeWindowViolationAtActivity ( route. getEnd ( ), route ), 0.01 )
2420	assertThat ( cargo. getCommandsRun ( ), contains ( "cargo test dirmod:: --jobs 1 --verbose -- --nocapture" ) )
2421	assertEquals ( "��   ��\\n" + "��   ��\\n" + "�尖�衡�� ��\\n" + "��   ��\\n" + "��   ��\\n" + "��   ��\\n" )
2422	assertTrue ( isThrown )
2423	Assert. assertEquals ( "(aa_change_deletion (aa_range (aa_point_location (aa_char Arg) 123) _ (aa_string Arg)) del (aa_string Arg))", aa_change_deletion. toStringTree ( parser ) )
2424	assertEquals ( ( byte ) 34, s. m0_0 ( ) )
2425	assertEquals ( expResult, result )
2426	Assert. fail ( "RuntimeException should be thrown!" )
2427	assertTrue ( "socket path pattern is " + ABSTRACT, a. path ( ). matches ( ABSTRACT ) )
2428	assertThat ( getClientConnectionPoolStats ( sut ). getLeased ( ), equalTo ( 0 ) )
2429	assertTrue ( html. contains ( "1" ) )
2430	Assert. assertTrue ( containerResolver. isContainer ( ) )
2431	assertEquals ( authors, test. getAuthors ( ) )
2432	assertTrue ( result )
2433	assertMockEndpointsSatisfied ( )
2434	assertProperty ( "explicitMethod", true, false, String. class, false, property )
2435	assertThat ( estimator. estimate ( renderingContext ), equalTo ( 1f ) )
2436	assertNotNull ( partitionManager. getPartition ( Realm. class, Realm. DEFAULT_REALM ) )
2437	assertFalse ( splitBrainProtectionFunction. apply ( members ) )
2438	assertEquals ( expected, actual )
2439	assertEquals ( "Expected response not seen.", "Hi There!", response )
2440	assertEquals ( 100, count. get ( ) )
2441	assertEquals ( "", value )
2442	assertEquals ( "redis://11.0.0.1:1234", config. getAddress ( ) )
2443	assertEquals ( required, field. isRequired ( ) )
2444	assertEquals ( TypeInfoFactory. getMapTypeInfo ( TypeInfoCreator. createString ( ), TypeInfoCreator. createDouble ( ) ), orcType )
2445	assertEquals ( context, cache. get ( "foo" ) )
2446	assertEquals ( "Trip Rounds", 1.0, tripRounds. getDoubleValue ( ), 0.01 )
2447	Assert. assertEquals ( 100, value )
2448	Assert. assertArrayEquals ( request. array ( ), response. array ( ) )
2449	assertHasModifier ( JMod. PUBLIC, constructor. getModifiers ( ), "public" )
2450	Assert. assertEquals ( "http://www.sourcedomain.com/key=val", filterResult )
2451	assertNotNull ( result )
2452	assertTrue ( MVEL. evalToBoolean ( "d.age == val", m ) )
2453	Assert. assertEquals ( mav. getViewName ( ), "submit_answer" )
2454	assertThat ( boundSql. getSql ( ), Matchers. equalTo ( "select  ok " ) )
2455	assertEquals ( asList ( debug ( mdcValues, marker, message ) ), testLogger. getLoggingEvents ( ) )
2456	assertTrue ( getTaint ( bc. imei )!= 0 )
2457	assertEquals ( "bufferSize=12, anotherKey02=coolValue02", manager. toString ( ) )
2458	Assert. assertEquals ( "unexpected url composed for fetching scheduler info", EXPECTED_SCHEDULER_INFO_URL, resolvedUrl )
2459	assertThat ( result, is ( not ( notNullValue ( ) ) ) )
2460	assertEquals ( "Platform count is wrong", pValues. size ( ), 1 )
2461	assertThat ( requestXml, is ( "<wps:Execute><identifier>L2Plus</identifier><parameters>" + "<userName>userName</userName></parameters></wps:Execute>" ) )
2462	Assert. assertNotNull ( url )
2463	Assert. assertTrue ( "Expected a positive value but it was: " + actualValue, actualValue > 0 )
2464	assertEquals ( "Betty Ford", u. getName ( ) )
2465	assertEquals ( expected, actual )
2466	Assert. assertEquals ( "Value is incorrect", map, value )
2467	assertTrue ( threw )
2468	assertTrue ( "Should not match", auths. isEmpty ( ) )
2469	assertEquals ( ( short ) 0x0009, s. m0_0 ( ) )
2470	assertThat ( errors, not ( hasFieldErrors ( "prefix" ) ) )
2471	assertThat ( TestI18n. testMessage. text ( "Test", "Message" ), is ( "Message Test" ) )
2472	assertInjectsCollectionsOfMocks ( exampleTest )
2473	assertThat ( attribute, is ( notNullValue ( ) ) )
2474	assertThat ( sb. toString ( ), is ( "alp://ppin/0" ) )
2475	assertEquals ( 1, manager. list ( metaStore ). size ( ) )
2476	assertEquals ( "bla", r. pattern ( "bla" ) )
2477	assertEquals ( expectedArg, parsedArg )
2478	assertThat ( RunningNode. getRunningTaskNodePath ( nodePath ), is ( "/state/running/" + nodePath ) )
2479	assertThat ( directInvoker, instanceOf ( DirectMessageHandlerInvoker. class ) )
2480	rule. assertScenarioEnded ( )
2481	assertEquals ( 403, httpResponse. getStatusLine ( ). getStatusCode ( ) )
2482	assertFalse ( result. hasErrors ( ) )
2483	Assert. assertEquals ( toArray ( "json", "aaa" ), merged )
2484	assertEquals ( "Data::datatype::Integer", results. get ( 0 ) )
2485	assertEquals ( "SessionImpl is not correct", sessionProxy, sessionImpl )
2486	Assert. assertNotNull ( setter )
2487	assertEquals ( pp. getValue ( ), new Payload < > ( "123" ). getValue ( ) )
2488	assertEquals ( "The schema should be parsed correctly", 1, messages. size ( ) )
2489	assertEquals ( localDate, normalizer. convert ( timestamp ) )
2490	NVAssert. assertEquals ( EXPECTED_NV_RESPONSE, nvResponse )
2491	Assert. assertNull ( cardLabelRepository. findUserLabelNameByProject ( noRead. getProjectId ( ) ) )
2492	assertEquals ( "Matched code set", UTF16_ID, CodeSet. getMatchingCodeSet ( local, remote, true ). getId ( ) )
2493	assertNull ( result )
2494	assertTrue ( millis == null )
2495	assertTrue ( converter. canConvert ( LikeAction. class ) )
2496	assertEquals ( 2, success. get ( ) )
2497	assertEquals ( "Buffer size is not correct", bufferSize, writeCounter. get ( ) )
2498	assertTrue ( Arrays. equals ( key. getPubKey ( ), keyOnion ) )
2499	assertEquals ( "subprocessTask", task. getName ( ) )
2500	assertTrue ( latch. getCount ( ) > 0 )
2501	assertThat ( target. get ( 66L ), is ( new GregorianCalendar ( 2013, Calendar. AUGUST, 16 ). getTime ( ) ) )
2502	assertEquals ( 10, answer )
2503	assertEquals ( "fra 1 secolo", t. format ( new Date ( 1000L * 60 * 60 * 24 * 365 * 101 ) ) )
2504	assertEquals ( "TRACE", trace. toString ( ) )
2505	assertToken ( info, creds )
2506	Assert. assertEquals ( filter. filter ( spanEventBo ), SpanEventFilter. ACCEPT )
2507	assertMockEndpointsSatisfied ( )
2508	assertArrayEquals ( expected, Proto. build_byte ( ( byte ) 0x00 ) )
2509	MatcherAssert. assertThat ( PodHelper. getPodDomainUid ( pod ), equalTo ( "domain1" ) )
2510	Assert. assertNotNull ( pool )
2511	assertThat ( new JSONObject ( actual ), sameJsonAs ( rawSchemaJson ) )
2512	Assert. assertEquals ( 0, ret )
2513	assertEquals ( filterResult, result )
2514	assertEquals ( 2, m1. backing. size ( ) )
2515	assertEquals ( message. serialize ( ), jsonFixture ( "fixtures/message-complete.json" ) )
2516	Assert. assertEquals ( 100, janus. getServer ( ). getServerInstance ( ). getRefreshIntervalInMillis ( ) )
2517	assertEquals ( "{\\"MyString\\":\\"Some text\\",\\"MyByteProperty\\":Byte.MAX_VALUE,\\"MyShortProperty\\":2,\\"MyIntegerProperty\\":3,\\"MyFloatProperty\\":4.0,\\"MyDoubleProperty\\":4.0,\\"MyBooleanProperty\\":true,\\"MyUUIDProperty\\":\\"23492a5b-c4f1-4a50-b7a5-d8ebd6067902\\",\\"DecimalValueProperty\\":21}", stream. toString ( ) )
2518	assertEquals ( expected, actualQuery )
2519	assertThat ( target. getRequest ( ), is ( nullValue ( ) ) )
2520	AssertionUtils. multiAssertEquals ( createAsDocument10, response5. getResponseObject ( ) )
2521	assertEquals ( "Button click should have been released", 0, countDownEvents ( ) )
2522	assertEquals ( expectedFileInputs, actualFileInputs )
2523	assertThat ( attack, notNullValue ( ) )
2524	assertNotEquals ( frameData1, frameData2 )
2525	assertEquals ( "[[John], [Jane], [Matt]]", results. toString ( ) )
2526	assertEquals ( "1", form. getValue ( "search" ) )
2527	Assert. assertNull ( st )
2528	Assert. assertNotNull ( interesado )
2529	assertEquals ( "PONG", cl. ping ( ) )
2530	Assert. assertNull ( "should not be present", actual )
2531	assertNotNull ( dispatch )
2532	assertThat ( StubWatchFactory. getRequestParameters ( ). get ( 0 ), both ( hasEntry ( "resourceVersion", Integer. toString ( INITIAL_RESOURCE_VERSION ) ) ). and ( hasEntry ( "labelSelector", asList ( DOMAINUID_LABEL, CREATEDBYOPERATOR_LABEL ) ) ) )
2533	assertTrue ( "Custom content model " + customContentModelQName. toString ( ) + " is not present", allContentModels. contains ( customContentModelQName ) )
2534	assertTrue ( "Expected Host", obj instanceof Host )
2535	assertThat ( buf. toString ( ), is ( equalTo ( "" ) ) )
2536	assertEquals ( fromJson, expected )
2537	assertTrue ( "The resource should be retrieved", Arrays. equals ( raw, properties ) )
2538	Assert. assertEquals ( sql, expected. replaceAll ( "#ALIAS#", RestrictionTestEntity. class. getName ( ). getAlias ( ) ) )
2539	assertEquals ( "ID = userId", dataSetLookup. getFirstFilterOp ( ). getColumnFilterList ( ). get ( 0 ). toString ( ) )
2540	assertThat ( result, is ( 2 ) )
2541	assertTrue ( filter. allow ( event, listener ) )
2542	assertEquals ( "custom myParam ", html )
2543	assertNotNull ( IndexWriter. getCommitter ( env ) )
2544	assertTrue ( appender. getEvents ( ). size ( ) == 0 )
2545	assertEquals ( actualJSON, expectedJSON )
2546	assertOut ( "/**\\n * @param {number} bar\\n * @param {string} baz\\n * @param {Array} goo\\n */\\n" + "foo.bar.RoyaleTest_A.prototype.method1 = function(bar, baz, goo) {\\n}" )
2547	assertThat ( client. isUsingDefaultInflector ( ), is ( true ) )
2548	assertEquals ( new BigDecimal ( "0.90" ), max )
2549	assertThat ( page. image. getSourcePath ( ), is ( expectedPath ) )
2550	assertThat ( a, equalTo ( a1 ) )
2551	assertEquals ( 0, zero. cause ( ) )
2552	Assert. assertEquals ( "EXECUTE ERROR:", sqltrue, sqlnew )
2553	assertEquals ( 1, holder. getCount ( ) )
2554	assertEquals ( "{0=22, 1=22, 2=22, 3=22, 4=10}", map. toString ( ) )
2555	assertEquals ( "He's a jerk.\\nA complete kneebiter.", wikiPrinter. print ( note ) )
2556	assertTrue ( xmas. before ( newYearsDay ) )
2557	Assert. assertEquals ( "http://services.com/services", url )
2558	assertNotNull ( factory )
2559	assertEquals ( expected, actual )
2560	assertEquals ( "bar", connection. getOutputBuffer ( ) )
2561	assertTrue ( entity. equals ( entity2 ) )
2562	visitor. assertSatisfied ( "checking state contains two branches", _rootComposite )
2563	assertFalse ( dao. isSecretAnswer ( userJoe, SECRET_ANSWER ) )
2564	assertFalse ( "xAttrs is not enabled", xAttrs. isEnabled ( ) )
2565	assertTrue ( result. isEmpty ( ) )
2566	assertEquals ( "1", grid. getCell ( 1, 0 ). getText ( ) )
2567	assertEquals ( "Unexpected state class", TreeTableState. class, state. getClass ( ) )
2568	assertThat ( query. hasOption ( QueryFlag. FILTER_TAG_INCLUDE ), is ( true ) )
2569	assertTrue ( t1. equals ( t2 ) )
2570	assertEquals ( "", html )
2571	assertEquals ( "two dollars", actual )
2572	assertEquals ( 3, ref. getMaxNumberOfPoorMansConflictScanEntries ( ) )
2573	assertNotNull ( samlAssertion. getAssertionText ( ) )
2574	assertEquals ( "http://localhost:8080/agoravahttp/login", settings. getAbsoluteUrl ( ) )
2575	assertNotNull ( result )
2576	assertThat ( instance1. hashCode ( ), not ( equalTo ( instance2. hashCode ( ) ) ) )
2577	JSONAssert. assertEquals ( expected, flowSnapshotsJson, false )
2578	assertEquals ( cs, dto2. toString ( ) )
2579	Assert. assertEquals ( 10, rowKeys. size ( ) )
2580	assertEquals ( "Did not receive anything for Subscription A", "Did not receive anything for Subscription B", error )
2581	assertThat ( domain. getReplicaCount ( "unconfigured" ), equalTo ( 3 ) )
2582	assertFactorization ( poly, UnivariateSquareFreeFactorization. SquareFreeFactorization ( poly ) )
2583	Assert. assertEquals ( expected, actual )
2584	Assert. fail ( )
2585	assertEquals ( expectedType, TalendType. convertFromAvro ( fieldSchema ) )
2586	Assert. assertEquals ( "type name", title )
2587	Assert. assertEquals ( "test", testScopePath. getRootScope ( ). getName ( ) )
2588	assertNoViolations ( constraintViolations )
2589	assertNotNull ( data. getString ( 0, data. length ( ) ) )
2590	assertTrue ( CollectionUtils. isEmpty ( collection ) )
2591	assertThat ( query. getAttributeTypes ( ), contains ( AttributeType. MNT_REF, AttributeType. MNT_LOWER ) )
2592	assertOut ( "var /** @type {ArgumentError} */ a = new ArgumentError()" )
2593	assertThat ( wrapper. retrieveModelVersion ( ), is ( equalTo ( "1.0" ) ) )
2594	assertEquals ( 50, stream. read ( ) )
2595	assertOperation ( ( ) -> roleClient. createProject ( createProjectRequest ) )
2596	assertEquals ( "select d from DeploymentEntity d where d.deploymentDate = (select max(t.deploymentDate) from DeploymentEntity t where d.context = t.context and d.resourceGroup = t.resourceGroup) " + "and d.id = 1 " + "and d.deploymentDate!= null and d.deploymentDate!= null and d.deploymentDate!= null)", query. toString ( ) )
2597	assertNull ( StringCompressionUtil. unpackAndDecompress ( testChars ) )
2598	assertEquals ( 2, classCapture. getValue ( ). size ( ) )
2599	assertTrue ( hasReset )
2600	assertEquals ( expected, actual )
2601	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
2602	assertThat ( result, is ( expectedResult ) )
2603	assertTrue ( true )
2604	assertEquals ( "text\\n", label )
2605	Assert. fail ( "MissingResourceException expected" )
2606	assertEquals ( 23583599999L, q. getLastMillisecond ( ) )
2607	assertEquals ( "100%" + "2GB" + "100MB/s", textTableFormatter. format ( ) )
2608	assertEquals ( ERROR_FACTORY_RESPONSE, handleResponse )
2609	Assert. assertNotNull ( dbRanger )
2610	assertNoDataValue ( targetPoduct. getBand ( FLOAT_BAND_NAME ), new PixelPos ( 23.5f, 13.5f ), 299.0, 299.0 )
2611	assertTrue ( contains )
2612	Assert. assertEquals ( "test case " + testCase. getKey ( ) + " failed.", testCase. getValue ( ). intValue ( ), magnitudeResult )
2613	assertNotNull ( RatePlan. reader ( ). read ( ) )
2614	Assert. assertEquals ( "Link: <http://example.com/events>; rel=\\"foo\\"", affordance. toString ( ) )
2615	assertEquals ( o1, o2 )
2616	Assert. assertTrue ( ks == ks2 )
2617	Assert. fail ( "Generic connector exception should have been thrown" )
2618	assertions. isNotLessThan ( expected )
2619	assertEquals ( "a+b", result )
2620	assertSame ( expected, result )
2621	assertEquals ( "(x INT)\\n", found )
2622	assertEquals ( 23, proxy. i1 )
2623	Assert. fail ( "Invalid input" )
2624	Assert. assertEquals ( Long. class, clazz )
2625	assertThat ( dbObject. get ( "comment" ), is ( "valeur" ) )
2626	assertTrue ( latch. await ( 15000, TimeUnit. SECONDS ) )
2627	assertEquals ( "incorrect size", SIZE, Struct. size ( new LongPadding ( ) ) )
2628	Assert. assertArrayEquals ( hammingWindow_EXPECTED, hammingWindow_ACTUAL, 1e-6 )
2629	Assertion. assertEquals ( loadedDataSet, actualDataSet )
2630	assertThat ( editor. getValue ( ), is ( ( Object ) Credential. builder ( ). userName ( "user" ). setPassword ( "password". toCharArray ( ) ). database ( "db" ). mongodbCR ( ). build ( ) ) )
2631	assertFalse ( game. isGameOver ( ) )
2632	assertNotNull ( m )
2633	assertEquals ( "TextBuilder String Is 1.0", _textBuilder. toString ( ), "1.0" )
2634	assertEquals ( "Count of customer", 2, res )
2635	assertEquals ( r3, mostRelevantResource )
2636	assertEquals ( expectedLines, seenLines )
2637	assertThat ( result. fullName ( ), is ( Long. class. getName ( ) ) )
2638	assertEquals ( sb. toString ( ), result )
2639	assertEquals ( "All fallback techniques are requested.", expectedResult, actualResult )
2640	assertEquals ( str, tuple. getValue1 ( ) )
2641	Assert. assertEquals ( IntNode. valueOf ( 0 ), result )
2642	assertEquals ( "2014-03-01T10:00:00.000Z", result )
2643	assertTrue ( "nodeExists returned true when there blatantly is a node there", store. nodeExists ( "node1" ) )
2644	assertTrue ( violation )
2645	assertEquals ( "env.value", value )
2646	assertEquals ( "failure: " + translated, ExpressionFactory. exp ( "db:paintingArray.artistExhibitArray.toExhibit.closingDate = $d" ), translated )
2647	assertEquals ( ret, company )
2648	assertTrue ( shardManager. isShardLeaderSyncStatus ( ) )
2649	assertEquals ( expected, actual )
2650	assertEquals ( "somejar.jar", lv. getArtifactId ( ) )
2651	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 2, warnings. size ( ) )
2652	assertEquals ( exist, true )
2653	assertArrayEquals ( coeffs, actual )
2654	assertEquals ( Sets. newHashSet ( "zeppelin-role" ), roles )
2655	assertTrue ( pm. getAlternativeEnabledModel ( d_sertrSet ). getValue ( ) )
2656	assertEquals ( parser, reg. get ( name ) )
2657	assertEquals ( 200, page. getWebResponse ( ). getStatusCode ( ) )
2658	assertEquals ( "try is error", "error", error. getValue ( ) )
2659	assertEquals ( "/vrap", refererResult. getReferer ( ) )
2660	assertEquals ( HttpStatus. SC_UNPROCESSABLE_ENTITY, response. getStatus ( ) )
2661	Assert. assertNotNull ( resource )
2662	assertEquals ( myMode, entry. getMode ( ) )
2663	assertResultSet ( res )
2664	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
2665	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff31_" ) )
2666	assertEquals ( "Hello World!", RecordPath. compile ( "toBytes(/s)" ). evaluate ( record ). getSelectedFields ( ). findFirst ( ). get ( ). getValue ( ) )
2667	assertTrue ( mergedPredicate. getHasBeenList ( ) )
2668	assertThat ( spy. getPropertyChangedCount ( ), is ( 1 ) )
2669	Assert. assertEquals ( expect_sql, sql )
2670	assertEquals ( String. format ( TextHelper. LOCALE_ROOT, "usage: argparse4j install [-h] [--foo FOO]%n" + "%n" + "named arguments:%n" + "  -h, --help             show this help message and exit%n" + "  --foo FOO%n" + "%n" + "  --bar FOO%n" + "%n" + "  default: alpha%n" + "%n" + "named arguments:%n" + "  -h, --help             show this help message and exit%n" + "  --foo FOO%n" + "%n" + "  --bar FOO%n" + "%n" + "  --foo FOO%n" + "%n" + "  --bar FOO%n" + "%n" + "  --bar FOO%n" + "%n" + "  default: alpha%n" + "%n" + "  --foo FOO%n" + "%n" + "  --bar FOO%n" + "  --foo FOO%n" + "%n" + "  --bar
2671	Assert. assertFalse ( errors. hasErrors ( ) )
2672	assertFalse ( lockAcquired )
2673	assertions. isNotEqualTo ( expected )
2674	assertTrue ( outAny. equal ( inAny ) )
2675	assertEquals ( "deallocate should have removed first allocation", Lists. newArrayList ( new Allocation ( control, 0, 10 ), new Allocation ( withLogin, 10, 15 ) ), allocations. getAllocations ( ) )
2676	Assert. assertTrue ( topic instanceof PatternTopic )
2677	assertEquals ( loremIpsum, result )
2678	assertEquals ( "Index created: oss", response )
2679	runner. assertAllFlowFilesTransferred ( AbstractBigQueryProcessor. REL_SUCCESS, 1 )
2680	assertEquals ( NodeConstants. Types. JOIN, originatingNode. getType ( ) )
2681	assertThat ( domain. isDomainHomeInImage ( ), is ( false ) )
2682	assertEquals ( "ErrorCode:IotHubUnauthorizedAccess;Unauthorized", bestMessage )
2683	Assert. assertEquals ( 9, woffFont. getTables ( ). size ( ) )
2684	Assert. fail ( e. getMessage ( ) )
2685	Assert. assertEquals ( query, interpretedQuery )
2686	assertEquals ( expected, transformed )
2687	assertTrue ( true )
2688	assertTrue ( latch. await ( 5, TimeUnit. SECONDS ) )
2689	Assert. assertFalse ( pss. getEligiblePositionalParameters ( ). hasNext ( ) )
2690	Assert. assertEquals ( "runtime_id", request. getParameters ( ). get ( 0 ) )
2691	assertNoMoreTokens ( )
2692	assertThat ( "Reversed Complemented sequence not as expected", s, is ( "GCAT" ) )
2693	assertEquals ( "Comma delimited glob", ",", pattern. toString ( ) )
2694	assertEquals ( 2, results. size ( ) )
2695	assertNotNull ( features )
2696	assertEquals ( "FRED", list. get ( 0 ) )
2697	Assert. assertEquals ( 1.0, getMetric ( ). calculate ( getSession ( ) ), getDelta ( ) )
2698	files. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE )
2699	assertTrue ( "Invalid Java version", FileUtil. findPatternInFile ( new File ( resultFilename ), "Using Java version: 3" ) )
2700	assertEquals ( "Incorrect number of lines", 4, lineCounter )
2701	assertEquals ( 0, count. get ( ) )
2702	assertEquals ( asList ( "after-date", "N", "past" ), actualOptions )
2703	Assert. assertEquals ( ByteArrayNodeLeafVoidValue. class, node. getClass ( ) )
2704	assertEquals ( "one dollar and sixty-five cents", actual )
2705	assertEquals ( "jim", retrievedEntity. getProperty ( "name" ) )
2706	assertEquals ( "A string with unicode characters: ", new ModelNode ( ). fromJSON ( new StringReader ( "A string with unicode characters: " ), unicodeNode ). asString ( ) )
2707	assertEquals ( expected, hit. findSuitableHit ( ) )
2708	assertFalse ( "List size mismatch across lists", words1. equals ( words2 ) )
2709	Assert. assertEquals ( "{" + "\\"@context\\":\\"../$metadata#ESAllPrim(32767)/PropertyString\\"," + "\\"@metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\"," + "\\"value\\":\\"First Resource - positive values\\"}", resultString )
2710	assertFalse ( getTestChargingStationFromRepository ( ). isReservable ( ) )
2711	assertOrder ( Complete. class, ConfirmCompleted. class, Close. class )
2712	assertEquals ( 37, tokens. size ( ) )
2713	Assert. assertTrue ( "Generated template does not match expected XML.", XmlHelper. compareXMLStrings ( expectedXML, message ) )
2714	assertEquals ( "{foo{bar}}", pattern. toString ( ) )
2715	assertEquals ( body. toString ( ), "operation _timeout" )
2716	assertEquals ( 1360204148123L, date. getTime ( ) )
2717	assertTrue ( regExCustomArrayValueComparator. compare ( regExArrayValueMatcher, regExCustomArrayValueComparator ) )
2718	assertTrue ( psa. getLegend ( ) instanceof ProportionalPoint )
2719	assertEquals ( Long. valueOf ( 0 ), account. getEntityId ( ) )
2720	mockEndpoint. assertIsSatisfied ( )
2721	Assert. assertEquals ( - 1, sFsShell. run ( "mount", ufsPath ) )
2722	assertEquals ( "2015-08-20T20:10:00Z", formatted )
2723	assertTrue ( sut. writeList ( new short [ ] { 1, 2 } ) )
2724	assertThat ( response. getBody ( ), containsString ( "Hello World" ) )
2725	assertEquals ( expected, actual )
2726	assertEquals ( expected, output )
2727	assertEquals ( "status", HttpStatus. SC_OK, response. getStatusLine ( ). getStatusCode ( ) )
2728	assertEquals ( ArtifactRepositoryService. GLOBAL_M2_REPO_URL, repoURL )
2729	assertEquals ( 50, allStateCapitals. length )
2730	assertEquals ( "", result )
2731	assertResultSet ( res )
2732	assertEquals ( expResult, result )
2733	assertEquals ( "Foo:5", pair1. toString ( ) )
2734	assertThat ( target. parse ( ), is ( false ) )
2735	GAssert. assertEquals ( ImmutableMultimap. of ( "a", "5.000" ), postWithDouble )
2736	assertThat ( offset. canonical ( ), is ( "UTC+03:00" ) )
2737	assertTrue ( validator. validate ( connectionLimits, PUT ). passedValidation ( ) )
2738	assertNotNull ( thr )
2739	assertEquals ( "Invalid range value", true, code. isRange ( ) )
2740	assertSqlCanBeParsedAndDeparsed ( stmt )
2741	assertEquals ( new SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ). parse ( toml. getString ( "d" ) ), new SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ). parse ( toml. getString ( "date" ) ) )
2742	assertEquals ( expected, actual )
2743	Assert. fail ( "ClassNotFoundException expected" )
2744	assertEquals ( pep, testpep )
2745	assertTrue ( r. getCandidateResults ( ). size ( ) == 1 )
2746	assertEquals ( "mypic.png", user. getProfilePicture ( ) )
2747	assertEquals ( "Wrong expression", source, select. getExpression ( ) )
2748	assertThat ( width, equalTo ( 3f ) )
2749	assertEquals ( currentTimeMillis, readTimeStamp )
2750	assertEquals ( SuppliedNameSuffixKit. getId ( ), settings. getKitId ( ) )
2751	assertThat ( developerEntity, equalTo ( positionEntityArgumentCaptor. getValue ( ) ) )
2752	assertEquals ( expectedQuery, actualQuery )
2753	assertThat ( authenticate. isPresent ( ), is ( true ) )
2754	assertFalse ( testObj. containsWord ( "a" ) )
2755	assertEquals ( token. serialise ( ), result. serialise ( ) )
2756	Assert. assertTrue ( union. size ( ) == 3 )
2757	assertEquals ( sampledResponseTimeList, responseTimeChartGroup )
2758	Assert. assertEquals ( 0, agents. size ( ) )
2759	assertEquals ( "testPdf1", mapDriver. map ( new Text ( "testPdf1" ) ) )
2760	assertEquals ( "formatBlock() escapes'' chars", "<info>some info</info>  </info>\\n" + "<error>                            </error>\\n" + "<error>                            </error>\\n", formatter. formatBlock ( "<info>some info</info>", "error", true ) )
2761	assertEquals ( 1, executor. run ( AdultUnit. class ) )
2762	assertTrue ( fileSizeAfter - fileSizeBefore < 100 )
2763	assertNotNull ( user )
2764	Assert. assertEquals ( "Invalid result", "text", result )
2765	assertEquals ( Collections. emptyList ( ), filter. getOperators ( ) )
2766	assertThat ( env. getDefaultVersionHostname ( ), is ( HOSTNAME ) )
2767	assertTrue (! valid )
2768	assertEquals ( "2013-07-01T01:00:00.000Z", cal. format ( Locale. ENGLISH ) )
2769	assertThat ( options. getMaxCopyAttempts ( ), is ( - 1 ) )
2770	assertNotNull ( DependentHostedNumberOrder. reader ( "PXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
2771	assertEquals ( g1, g2 )
2772	assertFalse ( victim. isIncrementalBuild ( ) )
2773	assertActive ( player1, player2, player3, player4 )
2774	assertEquals ( NO_CONTENT_204, deleteResponse. getStatus ( ) )
2775	Assert. assertEquals ( status, protocoloInfo. getStatus ( ) )
2776	assertEquals ( expResult, result )
2777	assertEquals ( 0, parts )
2778	assertEquals ( 0, dbHandler. getDataElementCount ( ) )
2779	Assert. assertEquals ( expected, actual )
2780	assertEquals ( "abc123", result )
2781	assertThat ( ioUtils. getDataIndex ( post. getBytes ( charset ), charset ), Matchers. equalTo ( 33 ) )
2782	Assert. assertTrue ( errors. hasFieldErrors ( "orderReasonNonCoded" ) )
2783	assertThat ( getCollection ( ). count ( ), is ( 1L ) )
2784	Assert. assertTrue ( new LogAdapter ( "logger.name.here", mockConfigThreadCompact ( ) ). isWarnEnabled ( ) )
2785	assertEquals ( expected, api. getAPIUrl ( "" ) )
2786	assertEqualsSet ( "ObjectOneOf.rdf", indA, indB )
2787	assertOut ( "s.toLowerCase() == 'foo'" )
2788	assertEquals ( expResult, result )
2789	assertEquals ( dateStr, DateUtils. formatDate ( date, "yyyy-MM-dd HH:mm", cal ) )
2790	assertEquals ( array. getBaseTypeName ( ), baseType )
2791	Helpers. assertJson ( Deencapsulation. invoke ( twinMetadata, "toJsonElement" ). toString ( ), expectedJson )
2792	assertEquals ( "FrameworkProfile", "myProfile", config. getFrameworkProfile ( ) )
2793	assertOut ( "a = a.filter(attribute('name').length());" )
2794	assertEquals ( 0.0, prod. minus ( aperm ). getRMS ( ), TOLERANCE )
2795	assertEquals ( "Invalid algorithm", TrainingParameters. ALGORITHM_PARAM, mlParams. get ( TrainingParameters. ALGORITHM_PARAM ) )
2796	assertEquals ( data, stream. toString ( ) )
2797	assertTrue ( result )
2798	assertEquals ( expectedArg, parsedArg )
2799	assertEquals ( "Expected " + i + " to be between " + val1 + " and " + val2, expected, i )
2800	assertEquals ( "AuthenticationType should be FORM", AuthenticationType. FORM, sut. getAuthenticationType ( ) )
2801	assertNull ( metricsFactory )
2802	Assert. assertEquals ( "Sender: JD <john.doe@acme.org>", decode ( field ) )
2803	assertThatPersonIsNotProtected ( mapper ( FOR_CLIENT_AUTHORITY_CLIENT ). map ( person, CensorProtectedDataForAuthorities, CPRProtectionLevel. DoNotCensorCPR ) )
2804	assertEquals ( 5, purged )
2805	Assert. assertEquals ( "Status code should be the same.", 200, conn. getResponseCode ( ) )
2806	Assert. assertEquals ( expected, actual )
2807	assertEquals ( TEST_LOCK_TIME, tx. estimateLockTime ( ) )
2808	assertTrue ( "Is not valid wsdl: " + getStdOut ( ), getStdOut ( ). indexOf ( "Passed Validation" ) > - 1 )
2809	assertNotNull ( entity. getId ( ) )
2810	Assert. assertEquals ( "Params:\\n" + "foo: bar", response )
2811	assertEquals ( metadata, repository. getModuleMetadata ( "TEST-SLAVE" ) )
2812	assertTrue ( check ( input, output ) )
2813	assertEquals ( expResult, result )
2814	assertThat ( xml ( stream. toString ( ) ), hasXPath ( "//soapwms:ExtendedCapabilities/soapwms:SOAP/wms:OnlineResource", nsBindings ( ), equalTo ( "http://post.url/soap" ) ) )
2815	assertEquals ( " 33 297\\n", found )
2816	assertEquals ( QUOTA_LIMIT, responseMessage. getCode ( ) )
2817	assertEquals ( STREAMING. ZK_EPHEMERAL_NODE_STATUS_STOPPED, status )
2818	assertEquals ( ExpressionFactory. exp ( "path not in (1, 2, 3)" ), exp )
2819	assertEquals ( 1, springBeansConfig. getTargets ( ). size ( ) )
2820	assertEquals ( "S.a\\n", found )
2821	assertArrayEquals ( new long [ ] { 1, 2 }, otherResult. getShape ( ) )
2822	TestUtils. assertNoPropertyChangeEvent ( report, "flaggedDates", monthView. getFlaggedDates ( ), true )
2823	assertNotNull ( "ID should not be null", book. getId ( ) )
2824	assertEquals ( expected, actual )
2825	assertTrue ( kieBuilder. getResults ( ). hasMessages ( Level. ERROR ) )
2826	assertEquals ( true, check. isRequired ( ) )
2827	assertFalse ( i1. equals ( null ) )
2828	assertEquals ( "Failed applied BufferTransformation WithInvertedPositiveDistances", desiredGeometry, transformedGeometry )
2829	assertThat ( _cut. getURIs ( ), is ( equalTo ( _decoratee ) ) )
2830	assertEquals ( offset, kv. getKeyOffset ( ) )
2831	assertEquals ( null, result. getId ( ) )
2832	assertEquals ( "Value \\\\", result )
2833	assertEquals ( "<p>Hello</p>\\n<p>There</p>", divs. html ( ) )
2834	assertThat ( terminologyService. isSubclassOf ( c1, c2 ), is ( true ) )
2835	assertEquals ( expResult, result )
2836	assertEquals ( s1, "0x" + ki3. toString ( 16 ) )
2837	assertThat ( exitStatus. exitStatus ( ), is ( equalTo ( ( byte ) 0x1 ) ) )
2838	assertTrue ( list. isEmpty ( ) )
2839	assertTrue ( res. contains ( "showCqlCompletionHint=false" ) )
2840	assertFalse ( matcher. find ( ) )
2841	assertEquals ( "public static final EntityProperty<TargetEntity> TO_ONE_REL = PropertyFactory.createOne(\\"to_one_rel\\", TargetEntity.class);", definition )
2842	assertThat ( DateInterval. parseISO ( "2012-01-01T14:00:00" ), is ( expected ) )
2843	rule. assertScenarioEnded ( )
2844	assertEquals ( 2, sources. size ( ) )
2845	assertArrayEquals ( expected, target )
2846	assertTrue ( cluster. getClient ( ) instanceof LocalJobRunner )
2847	assertEquals ( "V1 Comment", wrapper. getComment ( ) )
2848	assertEquals ( expected, successors )
2849	assertThat ( outcomes. get ( 0 ), havingTag ( TestTag. withName ( "a behavior" ). andType ( "behavior" ) ) )
2850	assertXMLEquals ( control, test )
2851	Assert. assertEquals ( 2, found )
2852	assertThat ( processor. getTables ( ), is ( Arrays. asList ( TABLE ) ) )
2853	assertThat ( System. getProperty ( SYSTEM_PROPERTY ), is ( "new-value-for-tests" ) )
2854	Assert. assertFalse ( this. manager. remove ( this. person1 ) )
2855	assertThat ( validator. validate ( parameters, "aaa" ), is ( "Aaa can not be less than 3 characters." ) )
2856	assertEquals ( buf. toString ( ), "[\\"a\\",\\"b\\"]" )
2857	assertEquals ( "{\\"a\\":0,\\"b\\":1,\\"c\\":2,\\"self\\":3}", writer. toString ( ) )
2858	assertNotNull ( subject. getDataPoints ( ) )
2859	assertFalse ( c. isValidForSqlQuery ( ) )
2860	assertTrue ( "Constant permission mapper should be created", ops. exists ( TEST_CONSTANT_PERMISSION_MAPPER_ADDRESS ) )
2861	assertThat ( tester. count ( Lock. KIND ), is ( 0 ) )
2862	assertTrue ( xmlResult. contains ( "ns:string2=\\"cord\\"" ) )
2863	assertThat ( target. createPath ( link1 ), is ( true ) )
2864	assertThat ( builder. getPatches ( ), hasItemInArray ( "ADD /status/message" ) )
2865	assertEquals ( "<!DOCTYPE html PUBLIC \\"-//W3C//DTD HTML 4.01 Transitional//EN\\" \\"http://www.w3.org/TR/html4/loose.dtd\\">\\n<html>\\n<head>\\n<meta http-equiv=\\"Content-Type\\" content=\\"text/html; charset=UTF-8\\"></head>\\n<body>\\n</body>\\n</html>\\n", result )
2866	Assert. assertEquals ( 0, patients. size ( ) )
2867	Assert. fail ( "CancellationException expected" )
2868	assertEquals ( 1, x. size ( ) )
2869	assertEquals ( resp. getStatus ( ), 0 )
2870	assertEquals ( increment, clock. add ( updateCount ) )
2871	assertTrue ( seen. add ( UUIDGenerator. nextString ( UUIDGenerator. TYPE4 ) ) )
2872	Assert. assertTrue ( dnode1. isAlive ( ) )
2873	assertEquals ( "1 啶�啶�啷�", t. format ( new Date ( 0 ) ) )
2874	assertEquals ( "(SOURCEFIELD =='sourceValue' AND TARGETFIELD == 'targetValue' AND TYPE == 'TEST10' AND RELATION == 'REL1-REL2')", transformed )
2875	ActionResultAssert. assertThat ( result )
2876	Assert. assertTrue ( "result had wrong width", result. getWidth ( ) == 1 )
2877	Assert. assertFalse ( policy. isResponseCacheable ( request, response ) )
2878	assertEquals ( "test", empty. getMessageType ( ) )
2879	assertEquals ( Collections. singleton ( TestEnum. TWO ), select. getSelectedItems ( ) )
2880	assertEquals ( 2, packetIn. getCount ( ) )
2881	assertThat ( CollectionNumbers. doubleArrayCopyOf ( array ), equalTo ( new double [ ] { 5, 1, 2, 3, 4, 0 } ) )
2882	assertTrue ( integerOnePresent )
2883	assertThat ( TestI18n. testMessage. text ( "Test", "Message" ), is ( "Message Test" ) )
2884	assertEquals ( expected, destination. toString ( ) )
2885	assertEquals ( msg1, ciob. getContent ( ) )
2886	Assert. assertNotNull ( "did not find collection", entry )
2887	Assert. assertEquals ( fastSqrt, computedSqrt, 0.000000001f )
2888	assertCompletionDismissed ( )
2889	assertEquals ( "Local repository", new URL ( "file:somewhere/localrepository" ), config. getLocalRepository ( ). getURL ( ) )
2890	Assert. assertEquals ( 0, solution. getValue ( ),.0000001 )
2891	assertEquals ( "no-cache", wrapper. getFirstHeader ( "Cache-Control" ). getValue ( ) )
2892	assertEquals ( "English", newSubtitles )
2893	assertEquals ( "patient", path )
2894	assertEquals ( json, gson. toJson ( value ) )
2895	assertEquals ( 1, result. length )
2896	assertEquals ( ROUTE, route )
2897	assertEquals ( "Not a named cluster", result. get ( "namedCluster" ) )
2898	Assert. assertEquals ( ambiente, eventoRetorno. getAmbiente ( ) )
2899	assertFalse ( hasNoProjects )
2900	assertEquals ( "BLOB", sb. toString ( ) )
2901	assertEquals ( "Expected 0 results!", 0, n )
2902	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
2903	assertProcessInstanceCompleted ( processInstance )
2904	Assert. assertEquals ( "did not set use parallel transfer", false, transferOptions. isUseParallelTransfer ( ) )
2905	assertEquals ( names. size ( ), 1 )
2906	assertEquals ( AuthStatus. SEND_FAILURE, module. validateRequest ( messageInfo, client, null ) )
2907	Assert. assertEquals ( "true", result )
2908	Assert. assertNotNull ( rb )
2909	assertEquals ( 15, routeState. get ( 0 ) )
2910	assertTrue ( "atan2() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP )
2911	assertEquals ( expected, a. getPrefixes ( ). get ( 0 ) )
2912	assertNull ( "Should return null if name does not match", ConfigurationUtils. createIfSupported ( options, "default" ) )
2913	assertE ( "�尖�尖�尖��" + "��  �烩��" + "��   ��" + "��   ��" + "�尖�尖�尖�尖��" )
2914	Assert. assertTrue ( "TrueType (AFM) expected", FontProgramFactory. createFont ( afm ) instanceof TrueTypeFont )
2915	assertEquals ( BuilderFactory. start ( ). add ( "a", new ObjectId ( 0x4e9d87a, 0x5825b60b637815a6L ) ). build ( ), doc )
2916	assertFalse ( c1. getSourceId ( ). equalsIgnoreCase ( c2. getSourceId ( ) ) )
2917	assertEquals ( "SELECT count(*) FROM lux:count", QueryParser. getQueryParser ( ). parse ( query ). toString ( ) )
2918	assertFalse ( ref. isPresent ( ) )
2919	assertOnResponseAttachment ( f2, MAX_SIZE1, "Client3mbAttachment.txt" )
2920	assertEquals ( "PI@example.com", HospitalModelUtils. extractPIEmail ( hospitalModel ) )
2921	assertEquals ( "property should be gotten", testViewerId, sut. getViewerId ( ) )
2922	assertTrue ( key. prefixOf ( itemKey ) )
2923	assertEquals ( dt. getYear ( ), lsys. getDesiredYear ( ) )
2924	assertFalse ( SetStatementValidator. validate ( setters ) )
2925	assertEquals ( testMap, readMap )
2926	assertEquals ( UNKNOWN, result )
2927	Assert. assertEquals ( 402.092d, result1. get ( ), 0.001d )
2928	assertEquals ( "Shutdown hook", Thread. currentThread ( ). getName ( ) )
2929	assertNull ( result )
2930	assertEquals ( "metadata", relativizeSubpath ( rootObjectId, resourceId ) )
2931	assertEquals ( asList ( START, OFFER, OFFER_2, END ), events. collect ( ) )
2932	assertThat ( testIsValidAppProperty, is ( expectedIsValidAppProperty ) )
2933	assertEquals ( Integer. valueOf ( 2 ), count )
2934	assertEquals ( "The list should contain the date", testDate, rendered )
2935	assertTrue ( weakRef. isAlive ( ) )
2936	assertFalse ( result )
2937	result. assertErrorFreeLog ( )
2938	assertPermanentCount ( playerA, "Azure Drake", 0 )
2939	assertEquals ( "SPADES", fd. getType ( ) )
2940	assertNotNull ( manager. getCriteria ( session ) )
2941	assertCapturedMessage ( publishMessage ( "sess1", "/topic", "publishMessage1" ), publishMessage ( "sess2", "/topic", "publishMessage1" ) )
2942	assertTrue ( xmlString. contains ( "abcd" ) )
2943	assertThat ( iconCaptor. getValue ( ), is ( "ghost:hello" ) )
2944	assertEquals ( 0, cap. get ( 0 ) )
2945	assertTrue ( res. equals ( expected ) )
2946	assertEquals ( testExtension, actual )
2947	Assert. assertEquals ( "Incorrect duration", duration, res. getDuration ( ) )
2948	Assert. assertTrue ( dsDao. getDSInfo ( remoteDSAddress ). isUp ( ) )
2949	assertRoundtrip ( input )
2950	assertError ( ( ) -> target. getServices ( ), ConnectionException. class, expectedMessages. getConnectionError ( ) )
2951	assertEquals ( pp. getValue ( ), "No handlers for address hello1" )
2952	assertFalse ( skillConstraint. fulfilled ( insertionContext ) )
2953	assertEquals ( "http://localhost:8080/test-res", baseUrl )
2954	arrays. assertContainsNull ( description, actual )
2955	assertTrue ( getNoErrorMsg ( ), result )
2956	assertEquals ( "/macro/edit", result )
2957	assertEquals ( "Service should be started twice", 1, svc. getServiceCount ( ) )
2958	assertEquals ( "ia64", process. arch ( ) )
2959	assertThat ( repository. get ( "custom" ), is ( notNullValue ( ) ) )
2960	assertEquals ( "<h1>Hello </h1><h2>There <hgroup><h1>Another</h1><h2>headline</h2></hgroup> <hgroup><h1>More</h1><p>stuff</p></hgroup></h2>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
2961	assertNotNull ( "Social Groups (JSON STRING)", groups )
2962	assertExpectedProtectedPorts ( dai )
2963	assertThat ( maps. oxen ( ), is ( map ( 17, 4711 ) ) )
2964	assertEquals ( "", ex. toString ( ) )
2965	assertThat ( term, is ( "���炽�裤����" ) )
2966	assertArrayEquals ( data, ( float [ ] ) deserialize. readObject ( float [ ]. class ), 0.0001F )
2967	assertEquals ( calendar, savedCalendar )
2968	assertTrue ( t. verify ( t. getEndorsers ( ). get ( 0 ), key. getPublic ( ) ) )
2969	assertKernel ( kernel, ANNULUS, e )
2970	assertEquals ( "test", echo. echo ( "test" ) )
2971	assertReceivedEvents ( 0, this )
2972	assertFalse ( a. isNormal ( null ) )
2973	assertionHelper. assertIrodsFileOrCollectionExists ( targetIrodsCollection, irodsFileSystem. getIRODSAccessObjectFactory ( ), irodsAccount )
2974	assertEquals ( o1. hashCode ( ), o2. hashCode ( ) )
2975	Assert. assertEquals ( 1, errors. size ( ) )
2976	assertEquals ( 1, views. size ( ) )
2977	assertEquals ( expected, actual, delta )
2978	Assert. assertEquals ( expected, resultString )
2979	assertEquals ( 1, ( ( ExampleClass ) gateway. getObject ( obj2. getName ( ) ) ). getField1 ( ) )
2980	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
2981	assertEquals ( "failed to post rating", 12, result. getCode ( ) )
2982	Assert. assertEquals ( THIRTEEN_FLOAT, pi. getThirteenFloat ( ), 0.001f )
2983	assertEquals ( v21Employments1, v21Employments2 )
2984	assertEquals ( msg, stackTrace )
2985	Assert. fail ( )
2986	assertEquals ( "value", cacheEntry )
2987	Assert. assertEquals ( new URI ( "http://some-stuff?param1=stuff&param2=stuff#fragment" ), uribuilder. build ( ) )
2988	result. assertIsSatisfied ( 2000 )
2989	assertNotEquals ( one, differentClass )
2990	assertEquals ( VALUE, jwt2. getJWTClaimsSet ( ). getSubject ( ) )
2991	assertThat ( underTest. isFrozen ( ), is ( false ) )
2992	Assert. assertEquals ( "The file is packaged as test-deps-c-1.0.0.jar", "test-deps-c-1.0.0.jar", file. getName ( ) )
2993	assertArrayEquals ( expected, list. toArray ( ) )
2994	Assert. assertEquals ( 1, q. getResultList ( ). size ( ) )
2995	Assert. assertTrue ( 2 + 2 == 4 )
2996	assertEquals ( 10, classUnderTest. getWidht ( ) )
2997	assertThat ( result, is ( nullValue ( ) ) )
2998	assertNotNull ( action )
2999	assertThat ( values, containsInAnyOrder ( "value", "other" ) )
3000	assertEquals ( 1, partitions. size ( ) )
3001	assertTrue ( expectedMaxPoolingWithPaddingActivation. compare ( poolingActivation, TOLERANCE ) )
3002	Assert. assertEquals ( "java.lang.Double", provider. getCanonicalDataTypeName ( Mockito. mock ( Column. class ) ) )
3003	assertTrue ( result. contains ( "Hello World" ) )
3004	assertPutAndGet ( map )
3005	assertTrue ( Arrays. equals ( readBytes, message1. getBytes ( ) ) )
3006	Assert. assertTrue ( isEqual ( distance, 1.0 ) )
3007	Assert. assertEquals ( output, outcome )
3008	Assert. assertEquals ( "(124_125inv3)", inv. toHGVSString ( ) )
3009	assertEquals ( getFailureMessage ( ), 0.0025851, distance, 1e-7 )
3010	Assert. assertEquals ( "abc", html )
3011	assertEquals ( expected, actual )
3012	assertThat ( backend. isEmpty ( ), is ( true ) )
3013	assertEquals ( "alpha", v2. getIdents ( ) [ v2. getIdents ( ) - 1 ] )
3014	Assert. assertTrue ( "Expected unmarshaled string to be equal", result. equals ( "Hello World!" ) )
3015	assertEquals ( null, DateUtil. parse ( dateString, formatString ) )
3016	Assert. assertEquals ( element. getText ( ), "click me" )
3017	Assert. assertTrue ( Files. isSameFile ( path, path ) )
3018	Assert. assertEquals ( state, retrievedState )
3019	assertTrue ( e. getMessage ( ). contains ( badCell ) )
3020	assertEquals ( "Calendar", mpp. getProjectProperties ( ). getProperty ( ProjectProperties. PROJECT_DATE_PROPERTY_NAME ) )
3021	assertEquals ( "a", TYPE_HANDLER. getResult ( rs, 1 ) )
3022	assertThat ( event. getPlatform ( ), is ( sameInstance ( mockPlatform ) ) )
3023	assertEquals ( expected, mappingFiles. get ( 0 ) )
3024	assertTrue ( xml. contains ( "IncorrectnessListener" ) )
3025	assertEquals ( ROUTE_KEY, instanceIdentifier. firstKeyOf ( LabeledUnicastRoute. class ) )
3026	assertObjectEquals ( "[{f:'a'},{f:'b'},{f:'c'},{f:'d'},{f:'e'}]", p. run ( bs, in, sa ) )
3027	Assert. assertEquals ( 1, compareResult )
3028	assertEquals ( 25, diff. getValue ( ). get ( ) )
3029	Assert. fail ( "Expected ConfigurationException" )
3030	assertEquals ( descriptor, descriptor2 )
3031	assertEquals ( "Count of customer", 2, res )
3032	assertThat ( form. isFieldEmpty ( ), is ( true ) )
3033	assertTrue ( _comp. isEquals ( json, expected ) )
3034	assertNotNull ( result )
3035	assertEquals ( "87030-020", String. format ( "%s", cep ) )
3036	Assert. assertArrayEquals ( expected, actual )
3037	assertTrue ( modelDTOs. size ( ) >= 1 )
3038	assertKernel ( kernel, ANNULUS, e )
3039	assertEquals ( "b", post. getParam ( "a" ) )
3040	assertEquals ( "The book title is not returned", "title", source. getTextContent ( ) )
3041	assertEquals ( key, provider. getStorageAccountKey ( account, conf ) )
3042	assertEquals ( tested, myDate. getTime ( ) )
3043	Assert. assertEquals ( "did not reconstitute path correctly", targetPath, actual )
3044	Assert. assertEquals ( 3, vertices. size ( ) )
3045	assertEquals ( "fileName-" + HASH + ".js", result )
3046	assertEquals ( "                      ", BatchParserCommon. removeEndingCRLF ( new Line ( line, 1 ) ). toString ( ) )
3047	assertEquals ( expected, result )
3048	assertEquals ( "host2 has been added to group1", result )
3049	assertTrue ( dao. selectAll ( ). size ( ) == 1 )
3050	assertEquals ( Result. PASS, pass. apply ( item ) )
3051	assertThat ( generatedGraph, is ( equalTo ( "<graphml:graph>\\n" + "    <name>I</name>\\n" + "    <name>You</name>\\n" + "    <weight>0.5</weight>\\n" + "    </relationship>\\n" + "</graphml:graph>\\n" ) )
3052	assertThat ( hBaseAdmin. tableExists ( "test" ), is ( false ) )
3053	assertTrue ( validator. validate ( EntityNames. ATTENDANCE, attendances ). size ( ) == attendance1. size ( ) )
3054	Assert. assertEquals ( expectedCrossProduct, crossProduct )
3055	assertThat ( exists, is ( true ) )
3056	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
3057	assertThat ( flashMap, is ( nullValue ( ) ) )
3058	assertEquals ( "jdbc:h2:mem:test", embeddedDatabaseRule. getConnectionJdbcUrl ( ) )
3059	assertEquals ( "GBP 1.11", test. toString ( ) )
3060	assertThat ( terminologyService. isSubclassOf ( c1, c2 ), is ( false ) )
3061	assertNotNull ( entryRelationship )
3062	assertThat ( count. getValue ( ), equalTo ( 1 ) )
3063	assertEquals ( "remote", sf1. getField ( ) )
3064	assertEquals ( 0, scores. getScore ( ) )
3065	assertEquals ( 1, query ( ). from ( employee ). where ( sq1. exists ( ) ). fetchCount ( ) )
3066	assertEquals ( BOOLEAN, v8Object. getType ( "key" ) )
3067	assertEquals ( "������������������������������������������������������������������������������������
3068	assertTrue ( rsp. toString ( ), rsp. get ( FAILURE_DESCRIPTION ). asString ( ). contains ( ControllerLogger. MGMT_OP_LOGGER. managementResourceNotFound ( CHILD_B_ADDRESS ). getMessage ( ) ) )
3069	assertTrue ( verifier. isValid ( interceptor, controllerMethod, controllerInstance, constraints ) )
3070	assertNotNull ( eventSourceTopology )
3071	PositionCollectorTestUtil. assertEmpty ( collector )
3072	assertEquals ( "Order should be correct", SynchronizationOrder. SAFE, synchronization. getOrder ( ) )
3073	assertEquals ( models, actual )
3074	assertEquals ( "Hello World", messages. getMessage ( MESSAGE_ID. DONE ) )
3075	assertThat ( response. getStatus ( ), CoreMatchers. < Object > equalTo ( 200 ) )
3076	out. assertIsSatisfied ( )
3077	Assert. assertArrayEquals ( Base64. encodeBase64 ( value ), f. func ( value ) )
3078	ctx. assertEquals ( 2, result. size ( ) )
3079	assertEquals ( transactionCompletion, senderSupplier. get ( ). sendFiles ( ) )
3080	assertTrue ( order. isDiscontinued ( DateUtils. parseDate ( "2014-11-01 11:11:13", DATE_FORMAT ) ) )
3081	assertEquals ( expected, elements )
3082	assertEquals ( "DataMasking data set", toMask, dummyXmlOutputStreamProvider. getValue ( ) )
3083	assertEquals ( 1, list. size ( ) )
3084	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
3085	assertEquals ( "!ys1\\n", sWriter. toString ( ) )
3086	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff21_" ) )
3087	assertEquals ( StringTools. trimToLength ( "Agent wydzia�u do walki z przemytem narkotyk贸w i oficer wywiadu marynarki s� w sytuacji bez wyj�cia. Kradn� pieni�dze gangster贸w i zamierzaj� je przekaza� na dobre cele. Okazuje si� jednak, 偶e w rzeczywisto�ci ukradli pieni�dze CIA, a zleceniodawcami s� mafiosi.", outlineLength ), movie. getOutline ( ) )
3088	assertEquals ( true, wizard. canComplete ( ) )
3089	assertEquals ( "middleN", person. getMiddleName ( ) )
3090	assertFalse ( "our host shouldn't have set our attribute", retAttr. contains ( attributes. get ( 0 ) ) )
3091	assertEquals ( EarlyHints. MESSAGE, ri. getDescription ( ) )
3092	assertThat ( isValidSudoku ( board ), is ( true ) )
3093	assertEquals ( 2, nodeUnits. size ( ) )
3094	assertEquals ( "2", sig. getSignatureSignature ( ). getBaseName ( ) )
3095	assertEquals ( groupId, kafkaStore. getKafkaStoreReaderThread ( ). getConsumerProperty ( org. apache. kafka. clients. consumer. ConsumerConfig. GROUP_ID_CONFIG ) )
3096	assertFalse ( handler. test ( null, null, Direction. In, null, null ) )
3097	Assert. assertEquals ( "Value is incorrect", map, value )
3098	Assert. assertEquals ( "OK", reference. get ( ). getStatus ( ) )
3099	assertTrue ( css. contains ( "book.css" ) )
3100	assertTrue ( "It should be true - HDFS host: " + config. getNamedCluster ( ). getHdfsHost ( ), ncPropertiesNotNullOrEmpty )
3101	assertTrue ( problem )
3102	assertThat ( getCreatedPod ( ). getSpec ( ). getNodeSelector ( ), is ( notNullValue ( ) ) )
3103	assertEquals ( "Message listener should be called", true, messageListener. wasCalled )
3104	Assert. assertEquals ( pullRequestActivity, parsedPullRequestActivity )
3105	assertEquals ( first, second )
3106	assertEquals ( dlsn, FutureUtils. result ( writer. write ( record ) ) )
3107	assertTrue ( converter. canConvert ( CommentAction. class ) )
3108	assertEquals ( "Mark is 37", result. getValue ( ) )
3109	assertTrue ( tchannel. peerManager. isListening ( ) )
3110	assertTrue ( exception )
3111	assertThat ( capturedCallOptions. getValue ( ). getDeadline ( ) )
3112	assertTrue ( ase instanceof AdaptiveScalarEncoder )
3113	assertTrue ( ps. hasAccess ( PermissionConstants. READ, ps. getRoot ( ) ) )
3114	assertEquals ( newLastname, customer. getLastName ( ) )
3115	assertDelete ( )
3116	assertThat ( operation. execute ( ), is ( equalTo ( DELETE_FROM_WORLD ) ) )
3117	assertThat ( mdcValueStr, is ( nullValue ( ) ) )
3118	assertOut ( "var /** @type {RegExp} */ a = /[^\\\\s+(\\\\w+)(?:\\\\s*=\\\\s*(\\".*?\\"|'.*?'|[\\\\w\\\\.]+))?/sg" )
3119	assertTrue ( "exact match on class name should run", exactFilter. shouldRun ( firstClassName + "." + testMethod ) )
3120	this. assertEdgesOkResponseJsonStructure ( 0, 0, response )
3121	assertTrue ( value instanceof Boolean )
3122	assertTrue ( listener. isStarted ( ) )
3123	assertTrue ( "Login succeed for alias not in headers", success )
3124	assertThat ( inputStream, nullValue ( ) )
3125	assertThat ( out, containsString ( "<birthDateElement value=\\"DateType\\"/>" ) )
3126	assertEquals ( "Expected 10 results!", 10, n )
3127	assertThat ( pattern, specificPart ( is ( ",\\"type\\":\\"error\\",\\"logger\\":\\"%replace{%logger}{\\"}{\\\\\\\\\\"}\\",\\"thread\\":\\"%replace{%thread}{\\"}{\\\\\\\\\\"}\\",\\"level\\":\\"%p\\",\\"categories\\":%categories,\\"msg\\":%jsonmsg{escape},%ctxp{excluded-field},\\"custom_fields\\":{%cf{custom-field}}%ex{0} " ) ) )
3128	assertNotNull ( channel )
3129	assertFieldIsJavaUtilOptionalWithValue ( this. resourceTargetedByMapping )
3130	assertTrue ( population. size ( ) == 100 )
3131	assertIterationsEqual ( expected, Views. iterable ( shuffled ) )
3132	assertTrue ( isArchived )
3133	assertEquals ( 2, i. get ( ) )
3134	Assert. areEqual ( 1, se. getInt ( 1 ), "数据验证" )
3135	Assert. assertFalse ( errors. hasErrors ( ) )
3136	assertEquals ( "The quick brown fox has many silly" + "red fox sox", result )
3137	assertNotEquals ( index1, index1Duplicate )
3138	JSONAssert. assertEquals ( "Message", "{id:1234}", actual, false )
3139	assertFalse ( query ( func. args ( ) ). isEmpty ( ) )
3140	assertEquals ( 6, dataMgr. getCommandHistory ( ). size ( ) )
3141	assertThat ( "Locations created with different paths and the same properties must not be equal", locationA1, is ( locationA2 ) )
3142	assertEquals ( 0, returned. size ( ) )
3143	assertEquals ( "one", actual )
3144	assertFocusedCell ( 4, 1 )
3145	assertNotNull ( result )
3146	assertEquals ( outArr, out )
3147	assertNotNull ( Participant. fetcher ( "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "MBXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
3148	assertThat ( baos. toString ( ), startsWith ( String. format ( "0 Scenarios%n" + "0 Steps%n" ) ) )
3149	assertEquals ( 8, v )
3150	assertTrue ( normalizedProbability > 0 && normalizedProbability <= 1 )
3151	assertEquals ( expResult, result )
3152	Assert. assertEquals ( "12 minutes from now", t. format ( new Date ( System. currentTimeMillis ( ) + 1000 * 60 * 12 ) ) )
3153	assertThat ( results. hasNext ( ), equalTo ( false ) )
3154	assertEquals ( 0, ksession. getMessages ( Message. Level. INFO ). size ( ) )
3155	assertThat ( scheduler. scheduleAt ( "mytask", clock. in ( 1, HOURS ) ), is ( nullValue ( ) ) )
3156	assertEquals ( "the url should be http://localhost/api/rest/v1/staff/resources", "http://localhost/" + PathConstants. API_SERVER_PATH + "/staff/resources", url. toString ( ) )
3157	assertNotEmptyAndClear ( writer )
3158	assertNotNull ( resolver )
3159	Assert. assertEquals ( actual, "yyyy-MM-dd" )
3160	assertTrue ( impl. mustRevalidate ( entry ) )
3161	assertEquals ( response. get ( 0 ), testResponse. get ( 0 ) )
3162	assertEquals ( 6, methods. size ( ) )
3163	assertEquals ( "{\\"statements\\":[{\\"statement\\":\\"MATCH (n) WHERE id(n) IN [1,2,3]}]}", json )
3164	assertEquals ( "xsd:float", prefixedName )
3165	assertEquals ( "1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n", writer. toString ( ) )
3166	assertThat ( xmlReturn, is ( xmlString ) )
3167	assertTrue ( IsoMatcher. isomorphic ( dataset, DatasetGraphFactory. createTxnMem ( ) ) )
3168	assertEquals ( expectedClass, actualClass )
3169	Assert. assertEquals ( setA. hashCode ( ), setB. hashCode ( ) )
3170	assertEquals ( 1L, count. longValue ( ) )
3171	assertEquals ( 1, expectedLinks. size ( ) )
3172	Assert. assertEquals ( ADParagraphStreamTest. NUM_SENTENCES, count )
3173	assertNull ( result )
3174	assertThat ( watchers. of ( question ), contains ( subscribedWatcher ) )
3175	test. assertOutput ( "data", input, "data2", output )
3176	runner. assertAllFlowFilesTransferred ( SelectHive_1_1QL. REL_FAILURE, 1 )
3177	assertEquals ( match, matcheCounts [ 1 ] - matcheCounts [ 2 ] )
3178	assertTrue ( topLevel == MongoTopLevel. ARRAY )
3179	Assert. assertEquals ( "width=340 height=200\\r\\n", readText ( decoder ) )
3180	Assert. assertTrue ( verifyTest ( crlBuilder ) )
3181	assertTokens ( Tokens. STRING, Tokens. PLUS, integer ( 1 ) )
3182	assertEquals ( 3600., Time. parseTimeToSeconds ( time ), 0.01 )
3183	Assert. assertNull ( "List is not null", list )
3184	assertEquals ( 6, instance. size ( ) )
3185	assertThat ( intervals, is ( expected ) )
3186	Assert. assertTrue ( factory. isDirty ( config ) )
3187	Assert. assertFalse ( result )
3188	assertEquals ( 10, template. getMetaData ( context. getEntityResolver ( ) ). getStatementFetchSize ( ) )
3189	assertThat ( target2. getEventSubscriptionString ( ), is ( "subscriber_id" ) )
3190	assertEquals ( "Select with not null clause", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
3191	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPath, cmpPath, destinationFolder, diff ) )
3192	assertEqualHQL ( "allen love dandan", sb. toString ( ) )
3193	assertEquals ( resp. getCode ( ), 204 )
3194	assertEquals ( "1.0", r1. toString ( ) )
3195	assertTrue ( planetsReflected. length == 1 )
3196	Assert. assertEquals ( "ITEM 001Product             0005000005\\n", result )
3197	assertTrue ( BooleanIndexing. or ( array, Conditions. lessThan ( 1e-6f ) ) )
3198	assertEquals ( "Columns size is wrong", 2, columns. size ( ) )
3199	assertEquals ( "/_repository/leeseohoo,kangsungjeon", getSnapshotRepository. getURI ( ElasticsearchVersion. UNKNOWN ) )
3200	assertTrue ( listChesse. getTotalAmount ( ) == 0 )
3201	assertEquals ( expectedResult, OSValidator. isWindows ( ) )
3202	Assert. assertEquals ( "string", doc2. getContentField ( "out" ) )
3203	assertEquals ( expectedClassPath, classPath. toString ( ) )
3204	assertEquals ( Status. FORBIDDEN, status )
3205	assertEquals ( 8, typedArray. length ( ) )
3206	assertNull ( result )
3207	assertEquals ( 30, ( int ) new AcceptsLambda < Integer > ( ). accept ( x :: addInts ) )
3208	assertNotNull ( result )
3209	Assert. assertEquals ( expect_sql, sql )
3210	assertTrue ( obj. containsKey ( "foo" ) )
3211	assertEquals ( response. getStatus ( ), STATUS200 )
3212	Assert. assertEquals ( 0, an. analyze ( new CandidateNode ( new CandidateRule ( "test", rule ), nnode ), results ). size ( ) )
3213	assertNotNull ( result )
3214	assertTrue ( "message should be authenticated", verifyMAC ( message, mac ) )
3215	assertThat ( getPodSpec ( jobSpec ). getRestartPolicy ( ), is ( RestartPolicy. Never ) )
3216	assertTrue ( provider instanceof HyperlinkPainterAware )
3217	Assert. assertTrue ( fs. exists ( target ) )
3218	Assert. assertEquals ( "Rule computation was called " + n + " times", 1, n )
3219	assertEquals ( 2, passages. size ( ) )
3220	Assert. assertTrue ( pss. toString ( ). contains ( "123" ) )
3221	assertTrue ( clientWrapper. add ( "test", 1000, "value", transcoder ) )
3222	assertEquals ( v1, v2 )
3223	Assert. assertEquals ( 0., analyser. getTimeWindowViolationAtActivity ( route. getStart ( ), route ), 0.01 )
3224	assertFalse ( encounter. equals ( null ) )
3225	assertNull ( result )
3226	assertNotEquals ( idA, idB )
3227	assertEquals ( "Commit one phase should be committed", Response. Status. committed. name ( ), stringResponse. getStatus ( ) )
3228	assertEquals ( ph, presenter. getPh ( ) )
3229	arrays. assertHasSize ( description, null, 8 )
3230	assertEquals ( 7, smsd1. getAllAtomMapping ( ). getCount ( ) )
3231	Assert. assertEquals ( 4, p. i ( 0, new C2 ( ) ) )
3232	assertEquals ( 0, collect. size ( ) )
3233	Assert. assertEquals ( childrenHtml, html )
3234	Assert. assertEquals ( count, chronicle. getNumEvents ( 0, count * period ) )
3235	Assert. assertNull ( part )
3236	assertNotNull ( Certificate. fetcher ( "FLXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
3237	assertEquals ( "GBP12.50", sub. replace ( "${code}${amount} charged" ) )
3238	assertTrue ( monthBoundsLToR. equals ( ui. getMonthHeaderBounds ( ) ) )
3239	Assert. assertEquals ( 1, updates. getOperations ( ). size ( ) )
3240	assertEquals ( latch. getCount ( ), 0 )
3241	assertThat ( actual, is ( "server1.mycompany.com" ) )
3242	assertTrue ( algorithm. shouldRetry ( attempt ) )
3243	assertEquals ( "John Doe", RecordPath. compile ( "/fullName[contains(substringAfter(., 'o'), 'h')]" ). evaluate ( record ). getSelectedFields ( ). findFirst ( ). get ( ). getValue ( ) )
3244	Assert. assertEquals ( value, tested. getTypes ( ) )
3245	assertEquals ( 1, listener. updatedInjectedFilters. size ( ) )
3246	assertThat ( "getValue", node. getValue ( ), is ( false ) )
3247	assertEquals ( "2 <= 3", expr. getParameterValue ( ) )
3248	Assert. fail ( "Missing required input" )
3249	assertTrue ( ContextDataFactory. createContextData ( ) instanceof FactoryTestStringMap )
3250	assertEquals ( 3, map. size ( ) )
3251	assertEquals ( expResult, result, 1 )
3252	assertEquals ( asSet ( "nonExistentId", "xForm:nonExistentId", "ySubview:nonExistentId" ), resolvedIds )
3253	assertEquals ( g1, g2 )
3254	Assert. assertNotNull ( node )
3255	assertTrue ( TeiidURL. isValidServerURL ( SERVER_URL ) )
3256	assertEquals ( true, CollectionUtils. isEmpty ( coll ) )
3257	assertEquals ( 4096, testInt )
3258	assertEquals ( "testuuid", sut. transform ( "/blah/whatever/someversionhere_uuid_testUUID.css" ) )
3259	assertEquals ( "Missing", caller. getResponseBody ( ) )
3260	assertSame ( System. getenv ( "PATH" ), value. getValue ( ) )
3261	assertNotNull ( Files. getFileAttributeView ( gfs. getPath ( "/file.txt" ), FileAttributeView. class ) )
3262	assertEquals ( "name=abc&age=1&in=2", QueryParser. getQueryString ( ) )
3263	assertTrue ( events. size ( ) == 5 )
3264	assertEquals ( i, readIter. getSample ( ) )
3265	Assert. assertEquals ( "first 0:a 1:b 2:c last", html )
3266	assertNotEquals ( instanceId1, instanceId2 )
3267	assertNotNull ( tree1 )
3268	assertTrue ( "IllegalArgumentException expected", ex. getCause ( ) instanceof IllegalArgumentException )
3269	assertOut ( "/**\\n * @constructor\\n */\\norg.apache.royale.A = 42;\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('org.apache.royale.A', org.apache.royale.A);\\n\\n\\n/**\\n * @export\\n * @type {number}\\n */\\norg.apache.royale.A.B = 42;\\n\\n\\n/**\\n * @private\\n * @return {number}\\n */\\norg.apache.royale.A.C;\\n\\n\\n/**\\n * @private\\n * @return {string}\\n */\\nfoo_bar static const C:String ='me' + 'you';\\n\\n" )
3270	assertThat ( secondPage. getTitle ( ), is ( "Page Title" ) )
3271	assertEquals ( testValueCanonical, rval )
3272	assertEquals ( new Failure ( exception ), fn. apply ( 1 ) )
3273	assertEquals ( PCEPErrors. LSP_NOT_PCE_INITIATED, this. errorsSession1. get ( 0 ) )
3274	assertEquals ( expectedSignature, mapResourceType. getSignature ( ) )
3275	Assert. fail ( "IOException expected" )
3276	assertEquals ( "input should be " + input, expected, decode ( input ) )
3277	assertEquals ( VALUE, profile. getAttribute ( "sub" ) )
3278	Assert. assertEquals ( getExpectedDelegationTokenCount ( ), delTokens. size ( ) )
3279	assertThat ( result, Matchers. equalTo ( "" ) )
3280	assertEquals ( "with (select survey1.all() from survey1) union (select survey2.all() from survey2) union (select survey3.all() from survey3) " + "from survey3", query. toString ( ) )
3281	assertThat ( getMatchingContainerEnv ( domainPresenceInfo, jobSpec ), allOf ( hasItem ( configMapKeyRefEnvVar ), hasItem ( secretKeyRefEnvVar ), hasItem ( fieldRefEnvVar ) ) )
3282	assertEquals ( h, TextUtil. stripNewlines ( out ) )
3283	assertNull ( "Event should not be null", event )
3284	Assert. assertEquals ( 1.0, correlation. correlation ( xArray, yArray ), Double. MIN_VALUE )
3285	assertEquals ( 2, ancestors. size ( ) )
3286	assertEquals ( cVector, normalizedCVector )
3287	assertEquals ( 0, Files. readAllBytes ( symLink2 ). length )
3288	assertNotNull ( "pre 1.8 storageInfo should return non null retention policy", retentionPolicy )
3289	assertTrue ( jsFile. exists ( ) )
3290	assertEquals ( "{" + newLine ( ) + "    with ($p) { setAge($p.getAge() + 1) };" + newLine ( ) + "}", printConstraint ( expression ) )
3291	assertEquals ( expectedJson, message. toJson ( ) )
3292	assertSerializable ( new ArtifactDescriptorException ( result, null ) )
3293	assertEquals ( "FIX40", dd. getFilename ( ) )
3294	assertEquals ( err, "File, 'EasyMock for class java.io.File' does not exist." )
3295	assertEquals ( StatusCode. NAMESPACE_NOT_FOUND, response. getCode ( ) )
3296	this. assertGet ( "servicetemplates/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fservicetemplates%252Ffruits/baobab_serviceTemplate/topologytemplate/", "servicetemplates/baobab_topologytemplate.json" )
3297	assertEquals ( insertNum, count )
3298	assertAnnotations ( 1, Quantity. class, new TestQuantity ( 0, "25ml", 25.0, "ml", 0.000025, "kg", WEIGHT ) )
3299	assertTrue ( entity. getId ( ) > 0 && entity. getDate ( ) == null )
3300	assertEquals ( "Johny", value )
3301	Assert. fail ( )
3302	assertFalse ( voter. voteMatch ( affiliation, organization ) )
3303	assertNoneEqual ( otherVoFqans )
3304	assertConstraintViolationToOneValidation ( constraintViolations )
3305	assertTrue ( false )
3306	assertEquals ( HttpServletResponse. SC_OK, resp. getStatus ( ) )
3307	assertEquals ( "checker should return 'enabledStatus' string", "enabledStatus", checker. run ( ) )
3308	assertNull ( dao. read ( association. getHandle ( ) ) )
3309	Assert. assertEquals ( sourceCardinality, subplanCtx. getOutputCardinality ( 0 ) )
3310	observer. assertObservations ( "22", PhaseId. APPLY_REQUEST_VALUES, PhaseId. INVOKE_APPLICATION, PhaseId. PROCESS_VALIDATIONS, PhaseId. RENDER_RESPONSE, PhaseId. RESTORE_VIEW, PhaseId. UPDATE_MODEL_VALUES, PhaseId. APPLY_REQUEST_VALUES, PhaseId. INVOKE_APPLICATION, PhaseId. PROCESS_VALIDATIONS, PhaseId. RENDER_RESPONSE, PhaseId. RESTORE_VIEW, PhaseId. UPDATE_MODEL_VALUES )
3311	Assert. assertTrue ( ( ( LocatorTargetSelector ) client. getConduitSelector ( ) ). getStrategy ( ) instanceof RandomSelectionStrategy )
3312	assertEquals ( 84, id3tag. getBPM ( ) )
3313	assertTrue ( theSize. getClassInformation ( ) instanceof SizeClassInformation )
3314	assertTrue ( handled )
3315	assertThat ( p. type, is ( Packet. CLOSE ) )
3316	assertEquals ( "0 days, 00:05:12", howLongFromNow )
3317	assertTrue ( valid )
3318	Assert. assertNull ( pattern )
3319	assertNull ( new Patterns ( ). getPattern ( entityId ) )
3320	assertEquals ( "The first state on first page is not correct", FIRST_STATE_FIRST_PAGE, actual )
3321	assertEquals ( "/genPath", path )
3322	assertThat ( stepListener. getCurrentTestOutcome ( ). getTestSteps ( ). get ( 0 ). getDescription ( ), is ( "final title" ) )
3323	CustomAsserts. assertEquals ( definition, expected, actual )
3324	assertEquals ( 5500, safe. get ( ) )
3325	assertFalse ( result. hasFailures ( ) )
3326	assertEquals ( LocalDate. of ( 2012, 6, 4 ), test )
3327	assertThat ( matcher. matches ( TestClasses. class. getName ( ) ), is ( true ) )
3328	assertEquals ( 0, records. size ( ) )
3329	assertEquals ( field. getLabel ( ), "label" )
3330	assertProcessInstanceCompleted ( processInstance )
3331	Assert. assertEquals ( message. name ( ), translated )
3332	assertThat ( description. toString ( ), is ( "<3> row(s) on sheet \\"Sheet1\\"" ) )
3333	assertTrue ( isFocusInsideElement ( radioButtonGroup2 ) )
3334	assertEquals ( taskService. createTaskQuery ( ). singleResult ( ). getTaskDefinitionKey ( ), "afterBpmnError" )
3335	assertEquals ( 123L, book. getId ( ) )
3336	assertEquals ( expecting, result )
3337	assertThat ( value. isPresent ( ), is ( equalTo ( false ) ) )
3338	assertThat ( result, is ( Collections. singletonList ( "setMyField" ) ) )
3339	assertThat ( testValues, is ( expectedValues ) )
3340	assertThat ( response, containsString ( "invalid range: Not within 1-1" ) )
3341	Assert. assertEquals ( 2, results. iterator ( ). count ( ) )
3342	assertEquals ( "", result )
3343	assertEquals ( null, result )
3344	assertThat ( target. getConvNetworkId ( nwId ), is ( "network01" ) )
3345	assertFalse ( connection. connect ( ) )
3346	assertEquals ( mappedEntityID, event. getEntityForNaming ( false, true, false ) )
3347	assertEquals ( 2, count )
3348	Assert. assertFalse ( bpInfo1. equals ( bpInfo2 ) )
3349	Assert. assertEquals ( Syntax. XWIKI_2_1. toIdString ( ), syntaxId )
3350	assertEquals ( "first", data )
3351	Assert. assertTrue ( ctx. getResult ( ) )
3352	assertEquals ( expectedMessage, result )
3353	assertEquals ( r1, r2 )
3354	assertTrue ( sink. getInvalidConfiguration ( ) )
3355	assertEquals ( expected, actual )
3356	assertEquals ( OffsetDate. of ( LocalDate. of ( 2007, 7, 15 ), OFFSET_PONE ), t )
3357	assertThat ( unlocked. getInteger ( ), equalTo ( - 2 ) )
3358	assertNotNull ( entity. getId ( ) )
3359	assertNull ( result )
3360	Assert. assertFalse ( result )
3361	assertCoordinates ( 0, HEIGHT - 1 )
3362	Assert. assertTrue ( authorizeInteraction )
3363	assertEquals ( Arrays. asList ( 42 ), list )
3364	assertTrue ( me. isNewMsg ( ) )
3365	assertEquals ( "", result )
3366	Assert. assertTrue ( "Stub exception was not forwarded.", stubFailed )
3367	assertEquals ( expectedBounds, actualBounds )
3368	Assert. assertEquals ( 150, terminatedAfter )
3369	Assertion. assertEquals ( loadedDataSet, actualDataSet )
3370	assertBoard ( "�尖�尖�尖��\\n" + "��x�� ��\\n" + "��x�� ��\\n" + "��   ��\\n" + "�尖�尖�尖��\\n" )
3371	assertEquals ( Double. valueOf ( "12.3" ), converter. getAsObject ( facesContext, new UIPanel ( ), "12.3" ) )
3372	assertEquals ( "Parser error: DeviceProvisioningServiceName mismatch!", expected, actual )
3373	assertEquals ( "", currentProjectPathProvider. getValue ( ) )
3374	AssertAnnotations. assertSentence ( sentences, select ( jcas, Sentence. class ) )
3375	Assert. assertEquals ( true, booleanConstant. evaluate ( null ) )
3376	Assert. assertEquals ( path, "dir" + File. separatorChar + "dir2" )
3377	Assert. assertEquals ( 0, m. size ( ) )
3378	AssertionUtils. multiAssertEquals ( createAsDocument11, response7. getResponseObject ( ) )
3379	assertAxisEquals ( timeInterval, new ArrayDouble ( 1.0 / 18.0, 6.0 / 18.0, 11.0 / 18.0, 16.0 / 18.0 ), Arrays. asList ( TimeScalesTest. create ( 2014, 12, 24, 22, 59, 59, 990 ), TimeScalesTest. create ( 2014, 12, 24, 22, 59, 59, 995 ), TimeScalesTest. create ( 2014, 12, 25, 0, 0, 0, 0 ), TimeScalesTest. create ( 2014, 12, 25, 0, 0, 0, 5 ) ), Arrays. asList ( "2014/12/24 22:59:59.990", ".995", "2014/12/25 00:00:00.000", ".005" ), timeAxis )
3380	Assert. assertEquals ( "A reference beginning with '/' should work", 6.0, calc. evaluate ( "* this is a test,ref2,*" ), 0.0 )
3381	assertThat ( path. getString ( NO_OP_ENCODER ), is ( "/{http://www.modeshape.org/1.0}a/{}b/{http://www.modeshape.org/1.0}c/../{}d/./{http://www.modeshape.org/1.0}e/../.." ) )
3382	Truth. assertThat ( outputStream. toString ( ) )
3383	assertEquals ( "foo.bar", pathConnector. getPropertyPath ( ) )
3384	assertTrue ( "Accepts a method that returns a PageSubclass", interceptor. accepts ( resourceMethodThatReturnsPageSubclass ) )
3385	Assert. assertTrue ( errors. hasFieldErrors ( "retireReason" ) )
3386	assertEquals ( 80, uniqueWords )
3387	Assert. assertFalse ( new ProcessorDecorator ( processor ). isMinimize ( ) )
3388	assertThat ( replaced, is ( newEditRelation ) )
3389	assertFalse ( HttpTestUtils. semanticallyTransparent ( resp1, result ) )
3390	assertEquals ( "world", record. get ( Annotation. RELATIONAL_PLANNER ) )
3391	Assert. assertEquals ( "{\\"alice\\":{\\"charlie\\":\\"david\\",\\"value\\":\\"bob\\"}}", result. toString ( ) )
3392	assertEquals ( "Expected 0 results!", 0, n )
3393	assertEquals ( "host", result )
3394	runner. assertAllFlowFilesTransferred ( "Invalid Assumption", true )
3395	assertEquals ( "Hello World". substring ( 2, 7 ), bytes. parseUtf8 ( CONTROL_STOP ) )
3396	assertArrayEquals ( CAFEBABE_SHA_1, sha1 )
3397	Assert. assertTrue ( "Expected tuples to be equal", Utils. equals ( t1, t2 ) )
3398	assertPermanentCount ( playerB, "Grapeshot", 1 )
3399	Assert. assertEquals ( 0, patients. size ( ) )
3400	assertTrue ( splitOnWhitespace. size ( ) == 4 )
3401	assertEquals ( "Did not get expected parameter count", 3, params. size ( ) )
3402	assertNull ( request. getSession ( ). getAttribute ( UsernamePasswordCheckcodeAuthenticationFilter. SPRING_SECURITY_FORM_USERNAME_KEY ) )
3403	assertTrue ( "Can't find statement", m. contains ( expectedStatement ( FILE ) ) )
3404	assertEquals ( "HARD", fileEntry. getLockType ( ) )
3405	assertEquals ( "<html><head></head><body></body></html>", rewritten )
3406	assertNull ( sut. execute ( new CreateActivityRequest ( smithersId, bogusId ) ) )
3407	assertThat ( environmentVariables. getProperty ( "properties" ), is ( nullValue ( ) ) )
3408	Assert. assertTrue ( configuration. isDubboEnabled ( ) )
3409	assertThat ( newActivity, is ( notNullValue ( ) ) )
3410	assertInvocations ( invocations, "prepare", "commit" )
3411	assertTrue ( "Coercing to VARBINARY failed for PDataType " + p, obj instanceof byte [ ] )
3412	assertEquals ( 1, missingNumber. missingNumber ( array ) )
3413	assertTrue ( source. isRoot ( ) )
3414	assertThat ( PrettyTime. of ( Locale. ENGLISH ). print ( dur, TextWidth. WIDE, true, 3 ), is ( "1 jour, 0 heure, 4 minutes, 0 seconde et 123 microsecondes" ) )
3415	assertTrue ( result )
3416	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, query1 ) )
3417	assertThat ( c. resolve ( server ), is ( nullValue ( ) ) )
3418	assertEquals ( "Expected 99 results!", 99, n )
3419	assertEquals ( result, expected, 0.0000001 )
3420	Assert. assertTrue ( _c. canConvertTo ( Integer. TYPE ) )
3421	assertThat ( Template. parse ( source ). render ( ). replaceAll ( "\\\\s", "" ), is ( "first-block-string" ) )
3422	assertEquals ( "Wrong # of objects found", 1, count )
3423	Assert. assertFalse ( inBlackList )
3424	assertEquals ( 0, fooDao. create ( ( Foo ) null ) )
3425	assertEquals ( "Expected 0 results!", 0, n )
3426	Assert. assertTrue ( "The expected values were not send. The missing values are " + expectedValueMap, expectedValueMap. isEmpty ( ) )
3427	assertFalse ( source. exists ( ) )
3428	assertTrue ( actionList. contains ( "fireActionActivated2" ) )
3429	Assert. assertTrue ( new LogAdapter ( "N/A", mockConfigDefault ( ) ). isTraceEnabled ( ) )
3430	assertThat ( element. isPresent ( ), is ( true ) )
3431	this. assertHeadersSet ( CONTEXT + "/topics/1" )
3432	assertThat ( house. getMouse ( ), is ( nullValue ( ) ) )
3433	assertTrue ( t. equals ( "MULTIPOLYGON" ) || t. equals ( "LINESTRING" ) )
3434	assertEquals ( outputExpect, output )
3435	Assert. assertNull ( u )
3436	assertFix ( "8=FIX.4.4|9=64|35=1|34=1|49=CLIENT|52=20140101-10:10:10.100|56=SERVER|7=1|16=1|10=199|" )
3437	assertThat ( encodedValue, equalTo ( GLOBAL_ENCODED_SHA_384_VALUE ) )
3438	editor. assertProblems ( "- blah|unknown 'VMExtension'. Valid values are: [vm1, vm2, vm3]" )
3439	assertEquals ( "{ a : [ { a : 1 } ] }", doc )
3440	assertEquals ( "Should return MissingNode", MissingNode. getInstance ( ), tup. getFirst ( ) )
3441	assertNotNull ( Participant. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CFXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
3442	assertThat ( pgpSignedMessage. verify ( ), is ( true ) )
3443	assertTrue ( options. isStrict ( ) )
3444	assertHierarchyIsEmpty ( )
3445	assertEquals ( 2, services. size ( ) )
3446	assertThat ( mySignalHandler. wasCalled, IsEqual. equalTo ( false ) )
3447	assertEquals ( Arrays. asList ( filter1, filter2 ), returned )
3448	assertEquals ( "", result )
3449	Assert. assertEquals ( msg, expected, actual, delta )
3450	assertThat ( category, is ( notNullValue ( ) ) )
3451	assertEquals ( "1", calculator. add ( "1" ) )
3452	Assert. assertNull ( mxBeanMapping2 )
3453	assertEquals ( "abcdef", buf. getTail ( ) )
3454	Assert. assertTrue ( fitResidualSum < noisyResidualSum )
3455	Assert. assertEquals ( "Text should be the same", text, toggle. getText ( ) )
3456	assertions. isNotEmpty ( )
3457	assertEquals ( 20, results. size ( ) )
3458	assertEquals ( "XXXX", tr. attr )
3459	Assert. assertEquals ( SearchAction. SEARCH_VIEW, streetSearchAction. search ( ) )
3460	assertEquals ( 100, ( int ) tree. entries ( ). count ( ). toBlocking ( ). single ( ) )
3461	assertEquals ( "Wrong visited nodes", expected, visitor. getVisitedNodes ( ) )
3462	assertResultSet ( res )
3463	assertThat ( form. getSchema ( ), is ( notNullValue ( ) ) )
3464	assertEquals ( expected, out )
3465	assertTrue ( newYearsDay. isAfter ( newYearsEve ) )
3466	assertThat ( result. size ( ), is ( 1 ) )
3467	assertEquals ( "Expected 100 results!", 100, n )
3468	assertNull ( result )
3469	Assert. assertEquals ( "Kevin,Cissy,24", new String ( byteData ) )
3470	Assert. assertTrue ( contentType, contentType. contains ( "text/plain" ) )
3471	assertRequest ( "DELETE", "Call/%s/Play/", callId )
3472	assertEquals ( "O10", output. getEntry ( ). get ( 0 ). getName ( ) )
3473	assertEquals ( "Step should be performed", expectedSteps, output )
3474	assertEquals ( msg, i, curVal )
3475	assertEquals ( 1, inverses. size ( ) )
3476	assertTrue ( "File audit log should be created", ops. exists ( TEST_FILE_AUDIT_LOG_ADDRESS ) )
3477	assertFalse ( matchResult )
3478	assertNull ( getWithTimeout ( commit ) )
3479	Assert. assertEquals ( "�����������������������������������������������������������������������������������
3480	assertTrue ( _comp. isEquals ( json, expected ) )
3481	assertEquals ( 0, initEmptyContainer )
3482	Assert. assertEquals ( "Should have received an event", event, monitor. getEvent ( ) )
3483	assertResultSet ( res )
3484	assertEquals ( "org.talend.components.kinesis.runtime.KinesisDatasetRuntime", runtimeInfo. getRuntimeClassName ( ) )
3485	assertThat ( query. getQuery ( ), is ( expectedToString ) )
3486	assertThat ( reply ( ), is ( anAppendReply ( ). withResult ( false ) ) )
3487	assertTrue ( message, message. contains ( "Invalid" ) )
3488	assertEquals ( ScenarioSimulationModel. Type. RULE, retrieved. getSettings ( ). getType ( ) )
3489	Assert. assertEquals ( expected, actuals )
3490	assertNotNull ( alumnoPaquete. getId ( ) )
3491	assertAxisEquals ( 234567, 678967, new double [ ] { 234567, 678967, 5 }, new String [ ] { "2", "678967", "5" }, axis )
3492	assertEquals ( 5, arr. reduceRight ( callbackfn ). intValue ( ) )
3493	assertEquals ( getMessage ( MessageKeys. ERROR_UNABLE_TO_READ_RESOURCE ), driver. findElement ( By. cssSelector ( "p" ) ). getText ( ) )
3494	assertThat ( dockerInfo, is ( notNullValue ( ) ) )
3495	assertEquals ( expResult, result )
3496	assertEquals ( options1, options2 )
3497	assertTypeCheckFileOk ( "abssamples/deltas/bug280.abs" )
3498	assertThatSliderValueIs ( value )
3499	assertSame ( envelope, cellRenderer. getIcon ( ) )
3500	assertTrue ( "Didn't shutdown correctly", terminated )
3501	Assert. fail ( "LoggingServlet messages should be presented only in files specified in profiles, but found: " + line )
3502	assertThat ( actual, is ( sameInstance ( given ) ) )
3503	assertThat ( request. getTimeLoaded ( ), is ( notNullValue ( ) ) )
3504	assertNull ( OpenShiftContext. get ( ). get ( "foo" ) )
3505	Assert. assertTrue ( System. currentTimeMillis ( ) - start > 2000 )
3506	Assert. assertEquals ( "El reais no esperado no esperado no esperado", reais. toString ( ) )
3507	assertTrue ( scandiumUtil. isStopped ( ) )
3508	assertContextOk ( ctx, "O3:doc:doc,O1:doc:ref,O3:doc:ref", "Hello 1!,Hello 2!,Hello 3!", "Source,Source,Source" )
3509	assertEquals ( "127.0.0.1:123", m. getHZAddress ( ) )
3510	assertFalse ( _wardenService. isWardenServiceEnabled ( ) )
3511	assertThat ( out. toString ( ), containsString ( "Using timeout for story a_short.story of 25,**/a_short.story:25" ) )
3512	assertTrue ( equalsResult )
3513	assertEquals ( 3, query. count ( ) )
3514	assertSingleIssue ( issues, 1, "For statement.", "10min" )
3515	assertEquals ( ts, t. exec ( newTuple ( input ) ) )
3516	assertEquals ( 30.0, Solutions. bestOf ( solutions ). getRoutes ( ). iterator ( ). next ( ). getEndTime ( ), 0.1 )
3517	Assert. assertEquals ( - 87., analyser. getFixedCosts ( route ), 0.01 )
3518	assertEquals ( sampleIn. findCon1 ( id, age ), sampleOut. findCon1 ( id, age ) )
3519	Assert. assertTrue ( executor. awaitTermination ( 120, TimeUnit. SECONDS ) )
3520	assertEquals ( expResult, result )
3521	assertThat ( history. getCommands ( ), contains ( ShellCommand. exit ( ) ) )
3522	Assert. assertNull ( actual )
3523	assertTrue ( exceptionThrown )
3524	assertEquals ( "<div> jsoup </div>", doc. body ( ). html ( ) )
3525	Assert. assertNull ( job )
3526	assertEquals ( 0, queryPaths. length )
3527	assertThat ( schema, hasEntry ( is ( TYPE_3 ), hasProperty ( "predicates", hasItem ( predicate ( ). withName ( PROP_I ). withDirection ( OUT ). withIsList ( true ) ) ) ) )
3528	assertEquals ( "valueA", pc. getString ( "keyA" ) )
3529	assertTrue ( deleteSubtasksHidden )
3530	assertEquals ( "3 啶�啶�啷� 啷�啷�", t. format ( new Date ( 3155692597470L * 10L * 3L ) ) )
3531	AssertAnnotations. assertSentence ( sentences, select ( jcas, Sentence. class ) )
3532	assertNotNull ( symmetricAnnotation )
3533	assertEquals ( ace, parsed )
3534	assertNotNullOrEmpty ( MultiTainter. getMergedTaint ( arr ) )
3535	Assert. assertTrue ( error!= null && info!= null )
3536	assertFalse ( iter. hasNext ( ) )
3537	assertTrue ( "geoPos [" + i + "] is not a valid GeoPos", geoPos. isValid ( ) )
3538	assertEquals ( 3l, session. from ( $ ( emp ) ). where ( $ ( emp ). in ( emp1, emp2, emp3 ) ). count ( ) )
3539	assertEquals ( "NULLOSM", OpenStreetMapUtil. generateLabel ( osm ) )
3540	assertEquals ( MockUserTableProvider. class, executor. getExecutor ( ). getUserInfo ( 123 ). getClass ( ) )
3541	assertThat ( tester. getMessages ( FeedbackMessage. ERROR ). size ( ), is ( 1 ) )
3542	assertThat ( range1. isFinite ( ), equalTo ( false ) )
3543	assertFalse ( valid )
3544	assertTrue ( detectWrap )
3545	assertEquals ( "some text", text )
3546	assertEquals ( "Index ordering test", expectedXML, actualXML )
3547	assertEquals ( 10.0f, scores. get ( "brownfox" ), 0.001f )
3548	Assert. assertEquals ( 0, labels. size ( ) )
3549	assertEquals ( timeInstant. getTimeMode ( ), TimeInstant. TimeMode. END )
3550	Assert. assertThat ( br. readLine ( ), is ( "a {}" ) )
3551	Assert. assertEquals ( Logger. EVENT_UNSPECIFIED. toString ( ), markerCapture. getValue ( ). getName ( ) )
3552	assertEquals ( "GBP 3.57", test. toString ( ) )
3553	assertNotNull ( module )
3554	assertEquals ( expectedResult, res )
3555	assertEquals ( false, result )
3556	assertTrue ( rule. isVersionValid ( "" ) )
3557	assertNotNull ( team1. getId ( ) )
3558	assertArrayEquals ( expected, Proto. build_int ( str ) )
3559	Assert. assertEquals ( "2016-01-01T11:00:00.000Z", timestamp. toString ( ) )
3560	assertEquals ( 0, argument. getValue ( ). getTranscript_consequences ( ). size ( ) )
3561	assertEquals ( expected, modified )
3562	assertNoOrders ( )
3563	assertEquals ( asUnorderedSet ( o. logicalAxioms ( ) ), asUnorderedSet ( o1. logicalAxioms ( ) ) )
3564	assertBeanValidation ( json, "query.metric[0].tags[0].host name must not be null or empty" )
3565	Assert. assertTrue ( MsgUtils. compareIgnoringWhiteSpaces ( serializedRequest, fu. readFile ( "TradingSessionStatusRequest.xml" ) ) )
3566	Assert. assertNotNull ( addressResultsDto )
3567	assertThat ( node, is ( notNullValue ( ) ) )
3568	assertEquals ( 0, result )
3569	assertEquals ( 2, result. size ( ) )
3570	assertEquals ( "1.0", subtraction ( "1.0", "1.0" ) )
3571	assertThat ( requestedShutdownCallable. call ( ), equalTo ( true ) )
3572	assertThat ( parents, contains ( propertyB ) )
3573	assertEquals ( asList ( "FOOFOO", "BARBAR", "BAZBAZ" ), result )
3574	assertNull ( servedImage )
3575	assertThat ( target. delLink ( link ), is ( false ) )
3576	assertThat ( msg, startsWith ( "Abort, file is not writable" ) )
3577	assertEquals ( false, result )
3578	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
3579	assertEquals ( Integer. valueOf ( 1 ), count )
3580	assertEquals ( "/onlyDefaultRealmName", picketLinkRequest. get ( ). getServletPath ( ) )
3581	assertEquals ( "Expects to retrieve 2 patients which reference the two different organizations", 2, actual. getEntry ( ). size ( ) )
3582	assertEquals ( expected. build ( ), builder. build ( ) )
3583	assertTrue ( actionServiceRegistered )
3584	assertEquals ( 0.0, cov, 0.01 )
3585	assertEquals ( TEST_2007_07_15_PONE, t )
3586	assertEquals ( 1, executor. getException ( ). getLineNumber ( ) )
3587	assertEquals ( 35, id )
3588	assertNull ( ivl )
3589	assertEquals ( "", c. getStyleName ( ) )
3590	assertEquals ( status. getCode ( ), Status. UNAVAILABLE. getCode ( ) )
3591	assertThat ( sw. toString ( ), is ( "{}" ) )
3592	assertEquals ( "<span>Ball</span><span>Car</span>", output )
3593	assertTrue ( translator. isMethodSupported ( "refreshUserToGroupsMappings" ) )
3594	assertEquals ( right, actual )
3595	assertIntValues ( array, 1, 2, 3 )
3596	assertEquals ( "bcc@domain.com", emailer. getProperties ( ). getProperty ( "bcc" ) )
3597	Assert. assertEquals ( createKeySpace. createQuery ( query ), "networkd" )
3598	assertTrue ( g1 instanceof PublicCloneable )
3599	Assert. fail ( "Missing required input" )
3600	assertEquals ( exp, res )
3601	assertTrue ( resolver. isValid ( "alphanum" ) )
3602	assertEquals ( "", testSet. getTestResult ( 1 ). getComments ( ). get ( 0 ). getText ( ) )
3603	assertEquals ( cache. size ( ), 0 )
3604	assertEquals ( AS_NUMBER, asNumberArgument. getValue ( ) )
3605	assertEquals ( 10, classUnderTest. getColumOrder ( ) )
3606	assertEquals ( "Method #toString is wrong", "TextMapper{field=field, indexed=false, sorted=true, validated=true, column=field, analyzer=English}", mapper. toString ( ) )
3607	assertEquals ( expResult, result )
3608	assertTrue ( defaultExecutor. await ( 10, TimeUnit. MILLISECONDS ) )
3609	assertEquals ( expResult, result )
3610	Assert. assertTrue ( "Failed to list resources: " + result, Operations. isSuccessfulOutcome ( result ) )
3611	assertThat ( conf, containsString ( "<interaction><code value=\\"" + TypeRestfulInteraction. HISTORYINSTANCE. toCode ( ) + "\\"/></interaction>" ) )
3612	assertFalse ( completed. get ( ) )
3613	assertNotNull ( _logger )
3614	assertTooltips ( )
3615	assertEquals ( "test", feather. provider ( Test. class ) )
3616	assertEquals ( count, query ( ). from ( cat ). where ( cat. name. notIn ( new ArrayList < String > ( ) ) ). fetch ( ). size ( ) )
3617	assertThat ( graph. run ( ). get ( ), equalTo ( 5 ) )
3618	assertEquals ( "Test Model Type", otherModelType. getName ( ) )
3619	assertEquals ( "RESOURCE", r. get ( String. class ) )
3620	assertThat ( appRegistryService. findAll ( ), containsInAnyOrder ( allOf ( hasProperty ( "name", is ( "foo" ) ), hasProperty ( "uri", is ( URI. create ( "classpath:/foo-source" ) ) ), hasProperty ( "metadataUri", is ( URI. create ( "classpath:/foo-source-metadata" ) ) ), hasProperty ( "type", is ( ApplicationType. source ) ) ), allOf ( hasProperty ( "name", is ( "bar" ) ), hasProperty ( "uri", is ( URI. create ( "classpath:/bar-source" ) ) ), hasProperty ( "metadataUri", is ( URI. create ( "classpath:/bar-source-metadata" ) ) ), hasProperty ( "type", is ( ApplicationType. sink ) ) ) ) )
3621	assertThat ( ValidatorUtil. formatMessages ( validate ), validate. size ( ), is ( 0 ) )
3622	assertEquals ( expectedSize, actualSize )
3623	assertParseTree ( relunctant. source ( ). parseTree ( "foo:bar" ), root ( "foo:bar" ) )
3624	assertTrue ( strings. isEmpty ( ) )
3625	assertNotNull ( IncomingPhoneNumber. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
3626	assertEquals ( "^/cntrl/actn/clients/([0-9]+)/([0-9]+)$", pattern )
3627	assertThat ( rdx. toString ( ), not ( Matchers. isEmptyOrNullString ( ) ) )
3628	assertEquals ( 3, result. getXdmValue ( ). getXdmValue ( ). getXdmValue ( ). getXdmValue ( ). getXdmValue ( ). getXdmValue ( ). getXdmValue ( ). getXdmValue ( ). getXdmValue ( ) )
3629	assertEquals ( vo. getPhoneNumbers ( ). get ( 0 ). getNumber ( ), "5432109876" )
3630	assertEquals ( value, result )
3631	assertThat ( container1. bytesField. toString ( ), is ( "" ) )
3632	Assert. assertEquals ( 2, ( int ) result )
3633	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
3634	assertThat ( writer. isEditing ( ), is ( false ) )
3635	assertThat ( command, is ( nullValue ( ) ) )
3636	assertThat ( c, not ( nullValue ( ) ) )
3637	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
3638	assertTrue ( scope. contains ( "dc:localhost" ) )
3639	assertEquals ( 1, count )
3640	assertEquals ( true, result [ 0 ] )
3641	assertEquals ( false, getMoveObjectDownAction ( ). isEnabled ( ) )
3642	assertEquals ( 1, processInstances. size ( ) )
3643	assertTrue ( msg. toString ( ), expectedFilteredRecommendedItems. containsAll ( actualFilteredRecommendedItems ) )
3644	assertTrue ( testeeCacheGenerator. isUserPeriodEnabled ( ) )
3645	assertContains ( e. getMessage ( ), "'name'" )
3646	assertNotNull ( reporter )
3647	assertEquals ( "Unexpected status code in HTTP response.", SC_UNAUTHORIZED, statusCode )
3648	assertions. endsWith ( sequence )
3649	context. assertIsSatisfied ( )
3650	assertTrue ( "Should get buffer", responseReader == null )
3651	assertEquals ( "Expecting well formed hql", "from CcAndInferredLocationRecord cc," + "ArchivedInferredLocationRecord in where cc.vehicleId= :vehicleId" + " and cc.vehicleAgencyId= :vehicleAgencyId and( cc.timeReported >= :startDate and " + "cc.timeReported < :endDate)" + " and cc.vehicleId = in.vehicleId " + "order by cc.vehicleId desc ", hql. toString ( ) )
3652	assertTrue ( dataSource instanceof SakaiArchiveDataSource )
3653	assertNotNull ( LastMonth. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
3654	assertEquals ( "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", key. getPublicKeyAsHex ( ) )
3655	assertEquals ( expected, sanitized )
3656	assertThat ( converter. convert ( formattedValue, BigDecimal. class, bundle ), is ( equalTo ( theValue ) ) )
3657	assertNotNull ( ids )
3658	assertEquals ( incorrectQuery, query )
3659	arrays. assertDoesNotContain ( description, null, newArray ( true ) )
3660	assertTrue ( xpath. isStragecharsRoundTrip ( ) )
3661	assertEnvelopeEquals ( aoi, matrix. getEnvelope2D ( ) )
3662	assertSeq ( new String [ ] { "<a/>", "<b/>", "<a/>", "<b/>" }, "reverse((/top/*, 'a', 'b', 'c'), 1)" )
3663	assertEquals ( clientDn, escapedClientDn )
3664	assertFalse ( hasPermission )
3665	assertTrue ( "", types!= null && types. size ( ) == 1 && types. contains ( ProfileType. INDUSTRY ) )
3666	assertEquals ( DATA, storage. loadPerson ( ID ) )
3667	Assert. assertEquals ( true, agent. detectGenericMobile ( ) )
3668	assertEquals ( 2, parsed. getContained ( ). size ( ) )
3669	assertEquals ( "Expected exception doesn't occurs", ReplyCode. KO_STREAM_OPERATION_NOT_ALLOWED. getCode ( ), ( Integer ) code )
3670	assertEquals ( "Mismatched data", expected, res )
3671	assertEquals ( "GEOFIELD", entityDef. getProperty ( "geoField" ) )
3672	assertEquals ( expected, elements )
3673	assertEquals ( 2, manager. getMessageCount ( ) )
3674	assertNull ( wrapperFilename )
3675	assertEquals ( 0, descriptors. size ( ) )
3676	Assert. assertEquals ( HttpStatus. SC_UNAUTHORIZED, response. getCode ( ) )
3677	assertTrue ( comparator. compare ( "/hotels/{hotel}", "/hotels/**" ) < 0 )
3678	assertEquals ( CHILD_RESOURCE_SET, childContext. getResources ( ) )
3679	assertEquals ( "Hello ^{id}", ResponseBodyInterpolator. interpolate ( "Hello ^{id}", req ) )
3680	assertNotNull ( avatar )
3681	result. assertErrorFreeLog ( )
3682	assertEquals ( 2, users. size ( ) )
3683	assertEquals ( result, true )
3684	assertEquals ( expectedURL, token. toURL ( ) )
3685	assertEquals ( "hello", ConfigUtils. getOrNull ( config, null ) )
3686	assertEquals ( 100, out. size ( ) )
3687	assertions. containsOnly ( values )
3688	assertTrue ( peerAcceptanceUtil. isPeerInterestedOnRemoteWorker ( workerADeploymentID. getServiceID ( ) ) )
3689	assertEquals ( "SLAVE", event. getOperationState ( ) )
3690	assertEquals ( gcd0. monic ( ), splitting. monic ( ) )
3691	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Start>" + "<genericTag key=\\"value\\">" + "someText" + "</genericTag>" + "</Start>", elem. toXml ( ) )
3692	assertTrue ( response. contains ( "SOAP-ENV:Envelope:Header[name='Proxy-Config', value='true']" ) )
3693	assertEquals ( asList ( "Hello", "Holla" ), list )
3694	assertEquals ( addresses, server. getAvailableServers ( ) )
3695	assertEquals ( config. getMetricsEnabledDimensions ( ), expectedMetricsEnabledDimensions )
3696	assertNotNull ( TaskQueue. fetcher ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "WQXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
3697	assertEquals ( expected, actual )
3698	Assert. assertEquals ( 50, query. getResultList ( ). size ( ) )
3699	assertThat ( "testReinstate 0", itemService. exists ( context, it ), is ( false ) )
3700	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 03" ) )
3701	assertDateEquals ( dateTime, result )
3702	Assert. assertEquals ( 100., time, 0.01 )
3703	assertEquals ( "select entity_0 from Entity entity_0 where entity_0.code = :function_1", select. getQuery ( ) )
3704	assertEquals ( "bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc
3705	assertEquals ( "invalid percent complete", AnalysisSubmissionServiceImpl. STATE_PERCENTAGE. get ( AnalysisState. PREPARED ), analysisSubmissionServiceImpl. getPercentCompleteForAnalysisSubmission ( ID ), DELTA )
3706	assertArrayEquals ( longng, m. getRecipients ( NEWSGROUPS ) )
3707	Assert. assertTrue ( sut. isWeekday ( cal. getTime ( ) ) )
3708	assertNotNull ( domain )
3709	assertEquals ( 37.5, calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
3710	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
3711	assertEquals ( 2, lt. getThreadPoolSize ( ) )
3712	assertEquals ( 1, counter. getBeforeFileTreeWalkCount ( ) )
3713	assertThat ( getTemplateLabel ( jobSpec, LabelConstants. JOBNAME_LABEL ), equalTo ( PROCESSING_DOMAIN_NAME ) )
3714	Assert. assertEquals ( "Hello, Facebook", testUserList. getFirst ( ). getName ( ) )
3715	assertEquals ( "MATCH (matchAllQuery) WHERE id =?", result. toString ( ) )
3716	assertEquals ( 16, id3tag. getWmpRating ( ) )
3717	assertFalse ( eq. test ( entity. build ( ) ) )
3718	Assert. isTrue ( "Updated Description". equals ( newOrganization. getDescription ( ) ) && departmentList. size ( ) == newDepartmentList. size ( ) && departmentList. size ( ) > 0 )
3719	AssertAnnotations. assertNamedEntity ( ne, select ( jcas, NamedEntity. class ) )
3720	assertEquals ( expected, actual )
3721	assertEquals ( expectedResult, verifyDrugref. invoke ( audit ) )
3722	assertNull ( result )
3723	Assert. fail ( "Cannot create ReplicateConfig with negative replicas" )
3724	assertEquals ( "/projects/iur-service-client/target/classes", actualObj )
3725	assertThat ( _response. getStatus ( ), is ( NOT_FOUND ) )
3726	assertTrue ( jsonld. contains ( s2 ) )
3727	assertEquals ( 0, entities. size ( ) )
3728	assertEquals ( expectedVector, marshalledReferenceNode ( node ) )
3729	assertTrue ( cut. getAttributes ( ). isEmpty ( ) )
3730	assertThat ( target. readValue ( value ), is ( false ) )
3731	assertEquals ( 1, statistics. size ( ) )
3732	assertThat ( logoutResponseXML, containsString ( "<samlp:LogoutResponse" ) )
3733	assertNotNull ( viewer )
3734	assertTrue ( comparator. compare ( currentRelease, laterRelease ) )
3735	assertEquals ( ( i / 3 ) + " : " + testData [ i ] + ", " + testData [ i + 1 ], expectedResult, actualResult )
3736	assertEquals ( hash1, hash2 )
3737	assertThat ( result, is ( new String [ ] [ ] { { "c" } } ) )
3738	assertTrue ( res. contains ( "test" ) )
3739	Assert. assertEquals ( json, writer. toString ( ) )
3740	assertEquals ( "2", account. getUid ( ) )
3741	assertThat ( augustHours, closeTo ( 184.0, 0.1 ) )
3742	Assert. assertTrue ( responseList. size ( ) < 2 )
3743	assertEquals ( 3, result. scoreDocs. length )
3744	assertNotNull ( page )
3745	assertEquals ( "http://localhost:8080/api/v1/key/123456/agency/1/command/predictions/" + "rs=16E|6010&rs=52|6010&rs=53|6010&rs=54|6010&rs=D4|6010&format=json", preEncodedPredictionsUrl )
3746	assertEquals ( expected, actual )
3747	assertIteratedKeys ( x, "1", "2", "5" )
3748	assertTrue ( errorsContainer. equals ( errors ) )
3749	assertThat ( parameters, is ( "?searchView=own&orderBy=createdNewest&show=all&minSupportCount=50" ) )
3750	assertEquals ( 1, foundPosts. size ( ) )
3751	Assert. assertEquals ( 0, analyser. getLoadAtBeginning ( route ). get ( 0 ) )
3752	assertArrayEquals ( new long [ ] { 1, 2, 3 }, result )
3753	assertThat ( response. body ( ), is ( "bar" ) )
3754	assertTrue ( hour1. equals ( hour2 ) )
3755	assertEquals ( "unexpected key", key, putAndGetTypes ( key ) )
3756	assertTrue ( result == 0 )
3757	assertNotNull ( result )
3758	assertThat ( sut. getMaxEntriesToKeepEntries ( ), is ( "5" ) )
3759	Assert. assertEquals ( "Hello Kermit", result )
3760	assertSeen ( results, s1 )
3761	assertThat ( array, is ( new double [ ] { 2, 3, 5, 7 } ) )
3762	assertNotNull ( assertion )
3763	assertThat ( facade. proxiedWebDriver, nullValue ( ) )
3764	assertNotNull ( coreMlFile )
3765	assertNotNull ( fixture )
3766	assertContains ( e. getMessage ( ), "'id'" )
3767	assertEquals ( BAD_REQUEST. getStatusCode ( ), response. getStatusCode ( ) )
3768	assertNotNull ( op )
3769	assertTrue ( matcher. match ( msg, rule ) )
3770	assertEquals ( expected, toJSON ( object ) )
3771	assertTrue ( "toDegrees() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP )
3772	assertEquals ( 1, count )
3773	assertEquals ( input, output )
3774	this. assertLoadBlobViaTuples ( tuples, false, true )
3775	Assert. assertThat ( ret3, Matchers. is ( ( Object ) CompositeData. class ) )
3776	Assert. assertTrue ( "Headers not set correctly", uic. getHeaders ( ). size ( ) > 0 )
3777	assertThat ( result, is ( object ) )
3778	assertTrue ( keyCodesSet. size ( ) == keyCodes. size ( ) )
3779	assertTrue ( l0. isBetween ( l1, l0 ) )
3780	assertNotNull ( target )
3781	assertThatSql ( query, is ( "SELECT table.col1,table.col2 FROM table" ) )
3782	Assert. assertFalse ( mockDevice. getDeviceExtension ( ArchiveDeviceExtension. class ). isVisibleSOPClass ( "1.2.3" ) )
3783	Assert. assertThat ( e. getMessage ( ), containsString ( expected ) )
3784	Assert. assertEquals ( expected, actual )
3785	assertFootersJoined ( )
3786	Assert. assertEquals ( "(new ExpectedCondition<Boolean>() {" + "\\n\\t\\t\\tpublic Boolean apply(WebDriver d) {" + "\\n\\t\\t\\t\\t\\treturn Pattern.compile(\\".*all\\").matcher(driver.getCurrentUrl()).find();" + "\\n\\t\\t\\t}" + "\\n\\t\\t});", result )
3787	assertEquals ( expectedUrl, authorizationUrl )
3788	assertTrue ( ctx. hasFailures ( ) )
3789	assertSame ( Sex. MALE, select. getValue ( ) )
3790	assertEquals ( 0, query ( func. args ( PATH1, NAME ) ). length ( ) )
3791	assertThat ( file, not ( exists ( ) ) )
3792	assertNotNull ( result )
3793	assertNull ( result )
3794	assertEquals ( StrictMath. asin ( asin ), 0.4 )
3795	assertEquals ( 1, locationManager. getAll ( ). size ( ) )
3796	assertThat ( Datastore. delegateClass ( MyDelegate. class ), is ( notNullValue ( ) ) )
3797	assertNull ( "The theme was not deleted", theme )
3798	assertEquals ( r1, r2 )
3799	assertEquals ( "1", _textBuilder. toString ( ) )
3800	assertEquals ( TargetType. PILLAR_EXACT, target. getType ( ) )
3801	assertEquals ( jid, component. jid )
3802	Assert. assertEquals ( Color. WHITE, meta. getColor ( ) )
3803	assertEquals ( expected, actual )
3804	Assert. assertTrue ( "We should have a incomplete header", bufPos!= - 1 )
3805	assertEquals ( "<p>This <a>is</a><span>foo</span> <a>jsoup</a><span>foo</span>.</p>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
3806	assertEquals ( expResult, result )
3807	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff08_" ) )
3808	assertNull ( policy2 )
3809	assertThat ( applicationSettings. getProjectCreationSetting ( ), is ( EMPTY_PROJECT_CREATION_ALLOWED ) )
3810	Assert. assertEquals ( thisYear - year, age )
3811	assertEquals ( "Invalid Pm should not be resolved", false, pm. getPmDefaults ( ). isResolvable ( ) )
3812	assertEquals ( "Max,Mustermann", new Renderable ( model ). render ( ) )
3813	assertTrue ( "The decrypted message was " + new String ( dec ) + "and must be " + "equal to " + TEST_XML_STRING, Arrays. equals ( original, dec ) )
3814	assertThat ( ChronoHistory. from ( history. getVariant ( ) ), is ( history ) )
3815	assertEquals ( "Wrong number of roof surfaces has been detected", 1, nDetect )
3816	assertId ( items, result )
3817	Truth. assertThat ( actual )
3818	assertEquals ( testStyle, classUnderTest. getFunctionStyle ( ) )
3819	assertTrue ( uit. isValid ( STR_VAL, STR_VAL ) )
3820	assertThat ( allResourcePermissions. isEmpty ( ), is ( true ) )
3821	assertEquals ( DummyDrawHandler. drawCircleToString ( 100, 200, ColorOwn. forString ( "pink", Transparency. FOREGROUND ), ColorOwn. forString ( "black", Transparency. BACKGROUND ), LineType. SOLID, 25.0 ), drawHandler. getLastDrawCall ( ) )
3822	assertFalse ( result. passedValidation ( ) )
3823	assertThat ( actual, sameJSONAs ( expected ) )
3824	assertTrue ( hiveDatabaseMeta. isDriverVersion ( 5, 5 ) )
3825	assertThat ( isValid, is ( true ) )
3826	assertEquals ( testResponse, response. get ( 0 ) )
3827	assertThat ( action. action, is ( RetryPolicy. RetryAction. RetryDecision. FAIL ) )
3828	assertEquals ( 0, RGW_ADMIN. listUsers ( ). size ( ) )
3829	assertEquals ( "Wrong parameters", createTestParameters ( ), params2 )
3830	assertEquals ( "Base for InetAddress is wrong", "192.168.0.13", parsed )
3831	Assert. assertEquals ( 2, result. length ( ) )
3832	assertEquals ( "OnThisDay", output. get ( id ) )
3833	assertTrue ( supportsPlacement )
3834	assertFalse ( CacheUtils. isSymbolicLink ( "/test_file.txt", cache ) )
3835	assertTrue ( ( ( BooleanType ) respParam. getParameter ( ). get ( 0 ). getValue ( ) ). booleanValue ( ) )
3836	assertEqualsWithoutWhiteSpaces ( "translate([0, 0, 0]) (empty)", testSubject )
3837	Assert. assertEquals ( 140 + 4 * winScore - loosePenalty, scores. getScore ( ) )
3838	Assert. assertEquals ( present, listener )
3839	assertEquals ( 80, count )
3840	assertEquals ( 1, dao. create ( foo ) )
3841	Assert. assertNotNull ( savedTenant2 )
3842	assertThat ( control. matches ( "/clients/dog/1" ), is ( equalTo ( true ) ) )
3843	Assert. fail ( "Expected to fail, but didn't" )
3844	assertEquals ( "http://tempuri.org", w. getFundingGroup ( ). get ( 0 ). getFundingSummary ( ). get ( 0 ). getUrl ( ). getValue ( ) )
3845	assertNotNull ( cred )
3846	assertEquals ( "{\\"text\\":null}", toJSON ( title ) )
3847	assertThat ( shortForm, is ( equalTo ( "root-ontology-iri" ) ) )
3848	assertEquals ( 0, services. size ( ) )
3849	assertTrue ( instance. hasNext ( ) )
3850	assertEquals ( respPayload, response. getPayload ( ) )
3851	assertThat ( provider. getSubject ( axiom ), is ( iriOptional ) )
3852	assertTrue ( svalues. equals ( svalues1 ) )
3853	Assert. assertNull ( actualValue )
3854	assertEquals ( patchVer, second )
3855	Assert. assertEquals ( 0x6b3b597e, hash )
3856	assertEquals ( 0, map. size ( ) )
3857	assertEquals ( query, result )
3858	Assert. assertEquals ( "", query. getBaseUri ( ) )
3859	assertTrue ( "Short Ref too short", constraintViolations. size ( ) == 1 )
3860	assertEquals ( Arrays. asList ( new JobID ( "34627985F47", 4 ) ), production. getJobIds ( ) )
3861	assertEquals ( vars ( "a", "b", "_b", "c" ), getNonPseudoVars ( csv, true ) )
3862	assertEquals ( 0, result )
3863	assertEquals ( 1, proc. getProjectedSymbols ( ). size ( ) )
3864	assertCount ( 1, "one > 10" )
3865	assertEquals ( "from BookVersion bookVersion\\n  join BookMark bookMark", from ( bookVersion ). join ( bookMark ). toString ( ) )
3866	assertEquals ( 7, array [ pivot ] )
3867	assertSameEnumeration ( "PostOrderModelConstructor", coreEnum, xEnum )
3868	assertThat ( underTest. isAccessAllowed ( httpServletRequest ), is ( false ) )
3869	assertTrue ( ( boolean ) testedMethod. invoke ( tasksManagerImpl, STARTING_BYTE_OF_3_BYTE_CHAR ) )
3870	assertNull ( principal )
3871	assertTrue ( helper. isUserAuthenticatedFileObject ( ) )
3872	assertEquals ( mvj. get ( "BlockRef" ), "1" )
3873	assertEquals ( 3, res )
3874	assertCard ( expectedCard, "http://magiccards.info/dgm/en/5.html", expectedCard. getRarity ( ). toDisplayName ( ), expectedCard. getName ( ) )
3875	assertEquals ( expected, result. getAttributes ( ) )
3876	assertNotNull ( propSchema )
3877	assertThat ( StubWatchFactory. getRequestParameters ( ). get ( 0 ), both ( hasEntry ( "resourceVersion", Integer. toString ( INITIAL_RESOURCE_VERSION ) ) ). and ( hasEntry ( "labelSelector", asList ( DOMAINUID_LABEL, CREATEDBYOPERATOR_LABEL ) ) ) )
3878	assertEquals ( LocalDate. of ( 2009, Month. JULY, 1 ), fourthQuarter )
3879	assertTrue ( file. exists ( ) )
3880	assertEquals ( "new_end", vRoute. getEnd ( ). getLocation ( ). getId ( ) )
3881	assertFalse ( testEntity. isNew ( ) )
3882	assertEquals ( 1, tables. size ( ) )
3883	assertEquals ( "Yagga Yagga", result )
3884	Assert. assertEquals ( "The returned digester for  '" + algorithm + "' algorithm is wrong.", expected, digester )
3885	assertThat ( check. isCompatible ( ), is ( true ) )
3886	assertThat ( builder, hasToString ( "<script type=\\"text/javascript\\">/* <![CDATA[ */\\n" + "(function() {var s = document.createElement('script')," + "t = document.getElementsByTagName('script')[0];" + "s.type = 'text/javascript';" + "s.async = true;" + "s.src = 'http://api.flattr.com/js/0.6/load.js';" + "t.parentNode.insertBefore(s, t);})();\\n" + "/* ]]> */</script>" ) )
3887	assertEquals ( expResult, result )
3888	assertions. containsOnly ( values )
3889	assertArrayEquals ( ArrayConverter. hexStringToByteArray ( "3a981db6cdd02a06c1763102c9e741365ac4e6f72b3176a6bd6a3523d3ec0f4c" ), result )
3890	assertEquals ( expResult, result )
3891	assertEquals ( 1, session. from ( $ ( noteVar ) ). where ( where ). list ( $ ( noteVar ) ). size ( ) )
3892	assertEquals ( "user@example.com", dss. parseEmail ( ) )
3893	Assert. assertEquals ( data [ i ] * i, m. getEntry ( i, i ), 0d )
3894	assertThat ( handler, is ( instanceOf ( PersonValidator. class ) ) )
3895	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC, ScopePathType. FUNDING_READ_LIMITED )
3896	assertEquals ( "g1.js", groupNames. get ( "g1.js" ) )
3897	assertEquals ( "hello, world!", result )
3898	assertThat ( conf, instanceOf ( ClearCacheConfirmation. class ) )
3899	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
3900	assertThat ( isDepartmentValid, is ( Boolean. FALSE ) )
3901	Assert. assertFalse ( HasTopLevelNegationVisitor. hasTopLevelNegation ( script ) )
3902	Assert. assertEquals ( CORSFilter. CORSRequestType. NOT_CORS, requestType )
3903	assertNotNull ( Revision. reader ( "FWXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
3904	Assert. assertEquals ( 3, list. size ( ) )
3905	assertFalse ( matchResult )
3906	assertRecurrencesCorrect ( "MINUTE", 3, process ( trigger ). getMinuteRecurrences ( ) )
3907	assertFalse ( validator. validate ( EntityNames. STUDENT, studentIds ). equals ( studentIds ) )
3908	assertEquals ( template, engine. compileMustache ( "minify_html_preserve_pattern", template ) )
3909	assertEquals ( expected, actual )
3910	Assert. assertEquals ( 0, analyser. getLoadAtBeginning ( route ). get ( 0 ) )
3911	assertEquals ( expectedScript, observedScript )
3912	assertionHelper. assertLocalFileExistsInScratch ( IRODS_TEST_SUBDIR_PATH + "/" + testFileName )
3913	assertThat ( result. contains ( expectedString ), is ( true ) )
3914	assertEquals ( "RC4-40-MD5 should be equal to original", expected, actual )
3915	assertTrue ( className. equalsIgnoreCase ( Double. class. getSimpleName ( ) ) )
3916	assertEquals ( "fake-token", kc. getAccessToken ( ) )
3917	assertEquals ( "application/json;odata.metadata=minimal", request. getResponseContentType ( ). toContentTypeString ( ) )
3918	Assert. assertEquals ( expected, resultString )
3919	Assert. assertEquals ( avroMessage, output )
3920	assertThat ( sequencerContext. getNamespaceRegistry ( ), is ( context. getValueFactories ( ). getNamespaceRegistry ( ) ) )
3921	assertEquals ( 10L, target. get ( ) )
3922	assertTrue ( Files. exists ( uploadsDirectory ) )
3923	assertEquals ( now, result )
3924	assertEquals ( random, decrypted )
3925	Assert. assertEquals ( 0, ( ( List < User > ) ret. getValue ( ) ). size ( ) )
3926	assertEquals ( object. doubles, result. doubles )
3927	assertEquals ( responsesRemaining, collector. getResponsesRemaining ( ) )
3928	assertTrue ( converter. canRead ( clazz, mediaType ) )
3929	assertSizes ( validator, char [ ]. class )
3930	Assert. assertTrue ( message, assertion )
3931	assertEquals ( singleValue, stats. getStatisticValue ( Statistic. VARIANCE ) )
3932	Assert. assertEquals ( state. IDLE, state )
3933	assertEquals ( "/home", mConfiguration. get ( PropertyKey. WORK_DIR ) )
3934	Assert. fail ( "Instantiation should fail" )
3935	Assert. assertTrue ( h. match ( cookie, origin ) )
3936	assertEquals ( "namedQuery-3", found. getName ( ) )
3937	assertTrue ( view. isMutable ( ) )
3938	Assert. assertFalse ( result )
3939	Assert. assertEquals ( 1, result. getEntities ( ). size ( ) )
3940	Assert. assertTrue ( _driver. isStopped ( queueName ) )
3941	assertEquals ( sqrt ( 2 ) * E * Math. cos ( Math. E ), e. evaluate ( ), 0d )
3942	Assert. assertFalse ( ModuleUtil. matchRequiredVersions ( openmrsVersion, requiredOpenmrsVersion ) )
3943	assertEquals ( "org.apache.hadoop.fs.shell.Ls", cmd. getClass ( ). getName ( ) )
3944	assertGenerators ( result, generator. getClass ( ) )
3945	Assert. assertEquals ( 86300000L, newDate. getTime ( ) - date. getTime ( ) )
3946	Assert. assertEquals ( simple. getName ( ), name )
3947	assertNull ( m )
3948	assertGridEquals ( grid, new GridGeometry ( low, high, new double [ ] { - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
3949	assertEquals ( 2, l. size ( ) )
3950	Assert. assertNull ( retireable. getRetireReason ( ) )
3951	assertThat ( module. getPackagesWithMappedClasses ( ), is ( equalTo ( Collections. EMPTY_LIST ) ) )
3952	assertSeen ( results )
3953	assertTrue ( repository. getFeatureState ( DummyFeature. TEST ). isEnabled ( ) )
3954	assertTrue ( response. contains ( "org.talend.cxf.plugin.Plugin" ) )
3955	Assert. assertEquals ( errMsg, expectedAppId, appId )
3956	assertExtendedEquals ( expected, dd, PRODUCT_TOLERANCE_FACTOR )
3957	assertFalse ( cmd. onCommand ( sender, new CommandParser ( plugin, args, 1 ) ) )
3958	assertEquals ( 1000.0, result, TOL )
3959	assertSplit ( result, stringToSplit )
3960	assertEquals ( Resolution. KEEP_KEEP, subject. getResolution ( ). get ( ) )
3961	assertSame ( url2, url1 )
3962	Assert. assertTrue ( file. exists ( ) )
3963	assertEquals ( "Response users should be equal to the mocked users", mockedUsers, responseUsers )
3964	assertEquals ( pll, testedStore. getProperty ( "logX" ) )
3965	assertEquals ( expectedData, filteredData )
3966	assertFalse ( impl. isLate ( ) )
3967	assertNotNull ( Country. reader ( ). read ( ) )
3968	assertEquals ( 401, response. getStatus ( ) )
3969	assertEquals ( original, transform ( original ) )
3970	assertSame ( e, result )
3971	assertEquals ( test, output. toString ( ) )
3972	assertEquals ( "Wrong result", DATE_PATTERN, conf. getDate ( DataConfiguration. DATE_FORMAT_KEY ) )
3973	assertEquals ( expectedValue, this. fsParser. extractFlowspec ( entry. build ( ) ) )
3974	assertEquals ( "<abc_def id=\\"1\\">Hello</abc_def> <abc-def>There</abc-def>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
3975	assertEquals ( "testCreatesFooClass", generatedName )
3976	assertTrue ( view. showPaging ( ) )
3977	assertEquals ( "bar", s )
3978	assertEquals ( expResult, result )
3979	assertEquals ( "path:true", o1. toString ( ) )
3980	Assert. assertEquals ( "(aa_range (aa_point_location (aa_char Cys) Ter 125) _ (aa_point_location (aa_char Ala) Ter 123))", loc. toStringTree ( parser ) )
3981	assertEquals ( "swarmcom.org", room. getName ( ) )
3982	assertThat ( ddlParsers. getParsers ( ), is ( myParsers ) )
3983	assertThat ( subject. getAbuseContact ( autnum ). isPresent ( ), is ( true ) )
3984	assertThat ( result. statusCode, is ( Response. OK ) )
3985	assertSetDirty ( )
3986	Assert. fail ( "Error retrieving customer list caused by: " + e. getMessage ( ) )
3987	assertThat ( result, equalTo ( true ) )
3988	assertEquals ( " Echo Message = vasu", response )
3989	assertNotNull ( result )
3990	assertTrue ( "Aggregate SASL server factory should be created", ops. exists ( TEST_SERVER_FACTORY_ADDRESS ) )
3991	assertEquals ( 1, capturedEvent. getValue ( ). getItemCount ( ) )
3992	assertEquals ( CONF_DIR, appConfig. getConfDirectory ( ) )
3993	assertArrayEquals ( new float [ ] { 0, 1, 2, 3, 4, 5, 6 }, ArrayUtils. shrink ( array, array. length ) )
3994	FactorDecompositionTest. assertFactorization ( polyMod, f )
3995	assertEquals ( PcscEid. AUTHN_KEY_ID, responseApdu. getData ( ) )
3996	assertThat ( MomentInterval. between ( m1, m2 ), is ( MomentInterval. of ( 2016, 3, 27, 2, 30, 23, 59, 59 ) ) )
3997	assertNotNull ( entityAsInserted )
3998	assertEquals ( "one", firstElement )
3999	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
4000	assertNull ( ic. getPropertyId ( ) )
4001	assertThat ( noOfSolutions, is ( 3 ) )
4002	runner. assertAllFlowFilesTransferred ( PublishKafkaRecord_0_11. REL_FAILURE, 3 )
4003	assertEquals ( results [ 0 ], lcsMatch. get ( results. length - 1 ). getValue ( ) )
4004	assertNotNull ( result )
4005	assertEquals ( 10, ref. atomicGet ( ) )
4006	Assert. assertTrue ( element instanceof ExclusiveElement )
4007	assertEquals ( expectedDocumentProjects, retDocumentProjects. collect ( ) )
4008	Assert. assertTrue ( "The list is not ordered ascending", sortedTestFields. equals ( testFields ) )
4009	assertEquals ( "{length=\\t'abc'},tolower=\\t'1234-12-25',toupper=\\t'12:13.456Z',trim=\\t'1234-12-25',date=\\t'1234-12-25',hour=\\t'PT1H'}", parseExpression ( "truncate( 1,\\t'1.2' )" ). toString ( ) )
4010	Assert. fail ( "Expected an exception" )
4011	assertEquals ( expected, actual )
4012	assertEquals ( expectedQuery, actualQuery )
4013	Assert. assertEquals ( 2, conceptSearchResultList. size ( ) )
4014	assertEquals ( "foo = 2010-03-01 12:34 +0000", ret )
4015	throwables. assertHasRootCauseMessage ( INFO, error, "expected message" )
4016	assertEquals ( expected, actual )
4017	assertEquals ( expectedResult, result )
4018	assertEquals ( "test-test-war", normalizeArchiveName )
4019	assertEquals ( FOUR_LINES_REMOVED_SCORE + GLASS_OVERFLOWN_PENALTY, playerScores. getScore ( ) )
4020	assertSame ( stringMessageBodyReader, applicationProviders. getMessageBodyReader ( String. class, null, null, TEXT_PLAIN_TYPE ) )
4021	assertObjectEquals ( "{type:'array',items:{type:'array',items:{type:'integer',format:'int32'}}}", s. getSchema ( SimpleList. class ) )
4022	assertTrue ( bugs. toString ( ), bugs. isEmpty ( ) )
4023	assertEquals ( o1, o2 )
4024	assertEquals ( testSeed, RandomGenerator. getRandomSeed ( ) )
4025	assertEquals ( expected, mapper. getMap ( new Integer ( 3 ) ) )
4026	assertEquals ( cfProvider. getConfiguredProperties ( ), ImmutableMap. of ( "brokerURL", SINGLE_TIBCO_BROKER ) )
4027	assertTrue ( instance. runCommand ( ) )
4028	assertEquals ( "Should be 2 sub resource locators", 2, resourceLocators. size ( ) )
4029	assertEqualHash ( byteBuffer, murmur3a )
4030	assertThat ( signature, hasItem ( individualsProperty ) )
4031	assertNotNull ( result )
4032	assertEquals ( "smoke", back. getAString ( ) )
4033	context. assertIsSatisfied ( )
4034	assertEquals ( "Wrong value", ( byte ) 0xef, u. s8. get ( ) )
4035	assertEquals ( 0xffffffffffffffffL, result )
4036	mojos. assertBuildOutputs ( new File ( basedir, "target/generated-sources/annotations" ), "proc/GeneratedSource.java", "proc/AnotherGeneratedSource.java" )
4037	assertEquals ( property, "false" )
4038	assertThat ( data. getOriginal ( ), is ( "{\\"str\\":\\"hoge\\",\\"nest\\":[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}" ) )
4039	assertEquals ( project1. getName ( ), newName )
4040	assertTrue ( exp instanceof ASTCurrentTimestamp )
4041	assertThat ( logRecords, containsInfo ( CREATING_CRD ) )
4042	Assert. assertEquals ( "SQL query does not match", expected, actualQuery )
4043	assertEquals ( 0, result. getVoxel ( 5, 15, 5 ),.01 )
4044	assertThat ( getterMethod. getReturnType ( ). getName ( ), is ( "java.lang.Integer" ) )
4045	TestsIOUtils. assertEqualSets ( documents, new AvroDataStoreReader < Document > ( path ) )
4046	assertEquals ( "Unexpected stack trace", entryCaptor. getValue ( ). getStackTrace ( ). toString ( ), "at some point" )
4047	assertPlanMatches ( access )
4048	assertEquals ( "1", fake. operation ( 1 ) )
4049	Assert. assertEquals ( configuration. getLong ( KafkaConfig. KAFKA_TEST_MESSAGE_COUNT_KEY ), KafkaConsumerUtils. INSTANCE. getNumRead ( ) )
4050	assertSingleElementCollection ( testCommandClientId, executeIds )
4051	assertThat ( userCount, is ( 1 ) )
4052	assertNull ( task )
4053	assertNull ( "aTestString", classUnderTest. getTableFrameXmlBean ( ) )
4054	assertEquals ( "1.0.0-alpha", v2. toString ( ) )
4055	Assert. assertTrue ( hasIndexHashKeyEqualCondition )
4056	Assert. assertTrue ( Math. abs ( hedgeErrorRMS - hedgeErrorRMS ) < 1E-3 )
4057	assertEquals ( list, Arrays. asList ( 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1 ) )
4058	context. assertIsSatisfied ( )
4059	assertNotEquals ( table1, table2 )
4060	assertEquals ( AnnotationDataDummy. CLASS_CACHE, data. getCacheName ( ) )
4061	assertThat ( msg. getValue ( ), is ( "ProcessExecutor.exitValue(0) failed" ) )
4062	assertEquals ( timestamp / 3600, timeBucket )
4063	assertEquals ( "Fusco", person. getLastName ( ) )
4064	assertEquals ( "r1c1,r1c2" + recordSeparator + "r2c1,r2c2" + recordSeparator, sw. toString ( ) )
4065	Assert. assertEquals ( "example (wiki:XWiki.user (127.0.0.1): null at null)", ex. toString ( ) )
4066	assertEquals ( DEFAULT_VALUE, value )
4067	assertThat ( age. getValue ( ), equalTo ( 5 ) )
4068	Assert. assertEquals ( new Complex ( - 2.0, 0.5 ), z. reciprocal ( ) )
4069	assertEquals ( expectedQuery, actualQuery )
4070	Assert. assertEquals ( 11, undefRes. size ( ) )
4071	assertEquals ( ValidationResult. Result. OK, validationResult. getStatus ( ) )
4072	assertEquals ( "Hello World", cfg. getProperty ( "salutation.text", "Hello World" ) )
4073	assertEquals ( expected, generated )
4074	assertMessages ( "write", 1, "write_bytes_offset" )
4075	assertTrue ( "value was " + Arrays. toString ( target ), Arrays. equals ( expected, target ) )
4076	assertEquals ( 0, snapshots. size ( ) )
4077	assertEquals ( 11210, strategy. hash ( infoMock ) )
4078	assertEquals ( now. getMillis ( ) / 1000.0d, gelfMessage. getTimestamp ( ) )
4079	assertEquals ( "mycmd a/b", s )
4080	assertThat ( result, is ( sameInstance ( cacheFileMetadataRequest ) ) )
4081	assertEquals ( list. get ( 0 ). getName ( ), "testUpdate" )
4082	assertNotNull ( result )
4083	assertEquals ( address, dest. getAddress ( ) )
4084	assertEquals ( 123, result )
4085	Assert. assertFalse ( errors. hasErrors ( ) )
4086	assertEquals ( "incorrect value", result, aNumber. toString ( ) )
4087	assertThat ( isValid, is ( true ) )
4088	assertEquals ( packet, p )
4089	assertTrue ( false )
4090	assertNotNull ( constraints )
4091	assertEquals ( b. build ( ), doc )
4092	assertThat ( output. get ( ), hasContent ( "first" ) )
4093	assertEquals ( "Failed to match 2 xrefs", 2, md. group ( 1 ). length ( ) )
4094	assertEquals ( e1, e2 )
4095	assertEquals ( Boolean. TRUE, methodOutcome. getCreated ( ) )
4096	Assert. assertEquals ( "", json, notification. toJSON ( ) )
4097	assertThat ( testValue. copy ( ), equalTo ( new TestValueType ( TestValueType. NAME. of ( "Hello" ), TestValueType. AGE. of ( 42 ) ) ) )
4098	assertThat ( jcrWorkspaces, is ( graphWorkspaces ) )
4099	assertFound ( Files. newDirectoryStream ( dir, "child*" ), child, child2, child3 )
4100	assertEquals ( "Hello ^^ John", ResponseBodyInterpolator. interpolate ( "Hello ^^ :name", req ) )
4101	assertEquals ( "Method #toString is wrong", "BooleanMapper{field=field, indexed=false, sorted=true, validated=true, column=field}", mapper. toString ( ) )
4102	assertEquals ( euclideanAssertion, result )
4103	Assert. assertEquals ( "EXECUTE ERROR:", sqltrue, sqlnew )
4104	assertThat ( instanceXml. get ( "namespace" ), is ( "http://www.w3.org/1999/xhtml" ) )
4105	assertEquals ( 0, start. getSize ( ). get ( 0 ) )
4106	assertNotNull ( dao )
4107	assertPermanentCount ( playerA, "Silvercoat Lion", 0 )
4108	assertOut ( "a.setAttribute('z', 'foo')" )
4109	assertEquals ( expected, new ResolverUtil ( ). extractPath ( url ) )
4110	assertTrue ( main. isVisible ( ) )
4111	assertNotNull ( manager. x )
4112	assertEquals ( countryName, "<http://www.semanticweb.org/ontologies/2013/7/untitled-ontology-150#Country-United%20Kingdom>" )
4113	assertEquals ( expected, bos. toString ( ) )
4114	assertEquals ( connMock, dbcManagerSpy. getPooledConnection ( DBType. MYSQL, DB_URL, DHARMA_USER, DHARMA_PASSWORD ) )
4115	Assert. assertEquals ( result. toStringWithoutTime ( ). trim ( ), expectedResult. trim ( ) )
4116	assertThat ( gtx. get ( Hoge. class, key, key ), is ( notNullValue ( ) ) )
4117	assertEquals ( expectedQuery, actualQuery )
4118	assertEquals ( - 626025600001L, m. getFirstMillisecond ( c ) )
4119	assertEquals ( 1, tasks. size ( ) )
4120	assertEquals ( converter. getClass ( ), converterDescription. getImplementationClass ( ) )
4121	assertThat ( output, CoreMatchers. containsString ( "Template deleted:" ) )
4122	assertEquals ( profile, new ProfileImpl ( "user123", "user@codenvy.com", "sn", "givenName", "telephoneNumber", "0123456789" ) )
4123	Assert. assertSame ( this. patient, this. mocker. getComponentUnderTest ( ). get ( this. patientReference ) )
4124	assertEquals ( true, code. toString ( ). contains ( "d<-3\\n" ) )
4125	assertNotNull ( result )
4126	assertEquals ( instance, deserialize ( serialized ) )
4127	assertThat ( rendered, is ( test [ 1 ] ) )
4128	assertThat ( target. matchExactly ( ( FlowAction ) action ), is ( true ) )
4129	Assert. assertEquals ( "value", ds. getStringProperty ( ) )
4130	assertBreadcrumbsAreEqual ( actualList, expectedList )
4131	assertEquals ( 10, l. size ( ) )
4132	assertThatSql ( query, is ( "SELECT t1.c1,t2.c2 FROM table1 AS t1 LEFT OUTER JOIN table2 AS t2 ON t1.c0 = t2.c0" ) )
4133	assertEquals ( "Wrong number of rows", 2, result. size ( ) )
4134	assertThat ( InvertListNumber. index ( actualCoords, sizes, invert ), equalTo ( index ) )
4135	assertEquals ( "http://foo/bar", got. toString ( ) )
4136	assertEquals ( reference. get ( ), nettyClient )
4137	assertMatrixEquals ( expectedTableau, tableau. getData ( ) )
4138	propertyChangeListenerTester. assertPropertyChanged ( )
4139	assertConfigErrorForMissingAttributeRequired ( data )
4140	assertEquals ( 10, blc. size ( ) )
4141	propertyChangeListenerTester. assertPropertyChanged ( 1 )
4142	Assert. assertEquals ( message, read ( streamId ) )
4143	assertFalse ( root. canBeScheduled ( ) )
4144	assertThat ( extractMonitorables ( histogramAdapter ). get ( MEDIAN ). get ( ), Matchers. < Object > is ( newMedian ) )
4145	assertEquals ( unit1, unit2 )
4146	Assert. assertEquals ( "LOAD DATA INFILE 'data.txt' INTO TABLE db2.my_table;", text )
4147	assertEquals ( "Not all nodes should be equal", 2, JexlNodeFactory. compareNodes ( or01, or02 ). size ( ) )
4148	Assert. assertEquals ( clickMe. getText ( ), buttonText )
4149	assertTrue ( areBonded ( atom1, atom2 ) )
4150	assertEquals ( "%1-%2 something %1-%3", BufferTools. substitute ( source, "%1", "" ) )
4151	Assert. assertEquals ( expected, new NestedCompletionCells ( cfgInfo, sortInfo, labelInfo ). complete ( term ) )
4152	assertEquals ( String. valueOf ( me. getCode ( ) ), me. getNick ( ) )
4153	assertEquals ( field. getValue ( ), entityField. get ( IndexingUtils. FIELD_BOOLEAN ) )
4154	assertEquals ( pool, house. getSwimmingPool ( ) )
4155	Assert. assertNull ( result )
4156	assertEquals ( sha1sum, instance. getSha1sum ( ) )
4157	assertContentChanges ( changes )
4158	assertEquals ( p1, p2 )
4159	assertEquals ( 2, objects. size ( ) )
4160	this. tester. assertContains ( "<p class=\\"normal\\">hello!</p>" )
4161	assertThat ( this. githubWebhook. authenticate ( request, null ), is ( true ) )
4162	Assert. assertEquals ( "", getLine ( PATH_LINE, canonicalRequest ) )
4163	assertThat ( result, is ( true ) )
4164	assertTrue ( model. contains ( parent, child ) )
4165	Assert. fail ( "should have failed on invalid filter expression " + rule )
4166	assertEquals ( 0, handlers. length )
4167	Assert. fail ( "This sequencer run should not exist, should not have lanes, and should show a 404 Not Found" )
4168	assertTrue ( mappedUrl. startsWith ( expectedPath ) )
4169	assertEquals ( 3, store. count ( ) )
4170	assertEquals ( "Port property not recognized", 8080, defaultAgiServer. getPort ( ) )
4171	assertThat ( body, not ( containsString ( "<p></p>" ) ) )
4172	assertTrue ( videos. contains ( video ) )
4173	assertTrue ( v. equals ( v ) )
4174	assertEquals ( "Unsupported parameter test for pwd.", result )
4175	assertEquals ( "Wrong number of entries", 2, entries. size ( ) )
4176	assertEquals ( Status. DOWN, impl. getStatus ( ) )
4177	assertEquals ( documento, documentoCreado )
4178	assertThat ( result, is ( "LinkLayerizer Component" ) )
4179	assertArrayEquals ( refar, d. getResult ( ) )
4180	assertEquals ( 10, getCache ( provider, "foo" ). capacity )
4181	assertEquals ( 2, result. getSize ( ) )
4182	assertEquals ( 2, e1. getObjectContext ( ). performQuery ( query ). size ( ) )
4183	assertThat ( "same relationship from index", lookedUpRelationship, is ( rel1 ) )
4184	assertFalse ( or. isDefined ( ) )
4185	assertThat ( iterable, is ( emptyIterable ( ) ) )
4186	assertThat ( dummyExpression. evalChild ( 0, returnNode, super. variables, super. functions, super. expressions ), is ( 4 ) )
4187	this. assertIndexOkResponseJsonStructure ( 0, 10, response )
4188	assertEquals ( s. toString ( ), expecting )
4189	assertEquals ( UnresolvedAddressException. class, thrown. getClass ( ) )
4190	assertTrue ( stopAtFirstIneligibleField ( field ). isEmpty ( ) )
4191	assertTrue ( HttpTestUtils. semanticallyTransparent ( resp1, result ) )
4192	assertEquals ( CSV_FILE, writer. toString ( ) )
4193	assertTrue ( spyAppConfigProperties. isHibernateManaged ( ) )
4194	assertEquals ( Status. OK. getStatusCode ( ), response. getStatus ( ) )
4195	assertTrue ( accountOperations. size ( ) == 0 )
4196	assertModelForInjectionIsOriginalModel ( )
4197	assertThat ( jobBackend. get ( "testKey" ), is ( "testValue" ) )
4198	assertNotNull ( domain )
4199	assertNull ( extensionMapping )
4200	assertTrue ( serviceNode. exists ( ) )
4201	assertMockEndpointsSatisfied ( )
4202	assertTrue ( file. canExecute ( ) )
4203	assertTrue ( listLocationEvent. size ( ) == 0 )
4204	assertThat ( result. httpRequestType, equalTo ( "GET" ) )
4205	Assert. assertNull ( m )
4206	Assert. assertEquals ( "Secure Hello World!", proxy. sayHello ( ) )
4207	assertEquals ( definition, om. getKeyspaceDefinition_ONLY_FOR_TESTING ( ) )
4208	assertThat ( conv, is ( "1511873062123" ) )
4209	Assert. assertEquals ( "and(in(Car.DOORS, 2, 4), existsIn(IndexedCollection<Garage>, \\"manufacturer\\", \\"brandsServiced\\", equal(\\"location\\", \\"Dublin\\"))", query. toString ( ) )
4210	assertTrue ( filter. shouldDeliverNotification ( eventContext ) )
4211	assertEquals ( expected, actual )
4212	assertEquals ( "q w", result )
4213	assertEquals ( viewportVector. getX ( ), screenResolution. getXAsInt ( ) )
4214	Assert. assertEquals ( "somethingmock", ret. getValue ( ) )
4215	Assert. assertEquals ( Integer. class, clazz )
4216	assertEquals ( Integer. valueOf ( "HTTP" ), i )
4217	assertThat ( result, is ( false ) )
4218	assertEquals ( "input", action. execute ( ) )
4219	assertTrue ( "timestamp changed", first!= second )
4220	assertFalse ( result )
4221	assertSame ( expected, actual )
4222	assertEquals ( new SimpleDateFormat ( "yyyy-MM-dd" ). format ( dt ), new SimpleDateFormat ( "yyyy-MM-dd" ). format ( dueDate ) )
4223	assertThat ( connectTimeout, is ( greaterThanOrEqualTo ( 0 ) ) )
4224	assertEquals ( "MethodKey.debugString() returns incorrect string", str, c. debugString ( ) )
4225	arrays. assertContainsOnly ( description, actual, null )
4226	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 10, warnings. size ( ) )
4227	assertEquals ( ValidationResult. Result. OK, validationResult. getStatus ( ) )
4228	Assert. assertEquals ( 2, capturedForward. size ( ) )
4229	context. assertIsSatisfied ( )
4230	assertTrue ( "Client-side parent session should have closed", wsnSession. isClosed ( ) )
4231	assertTrue ( observer. accept ( path ) )
4232	assertEquals ( result. build ( ). find ( ArrayElement. class, "values" ). get ( 0 ). getEntries ( ), myTestInstance. distinctAsync ( builder ). get ( ). toList ( ) )
4233	assertEquals ( "/sendError", view )
4234	assertTrue ( "Cache should be created", cache. exists ( ) )
4235	assertThat ( domain. isExportedNaps ( ), is ( true ) )
4236	assertEquals ( "b:alt 2 a:alt 1\\n", found )
4237	assertEquals ( "Organization/AAA", p. getManagingOrganization ( ). getReference ( ) )
4238	Truth. assertThat ( callable. call ( 1 ) )
4239	assertEquals ( slice, arr. slice ( 0 ). toffset ( ) )
4240	assertEquals ( "http://foo/Patient?_q=1", capt. getValue ( ). getURI ( ). toString ( ) )
4241	Assert. assertEquals ( "{\\"foo\\":\\"bar\\",\\"hello\\":\\"world\\",\\"baz\\":{\\"hello\\":\\"world\\"}}}", doc. jsonString ( ) )
4242	Assert. assertEquals ( "X.Y", argument1. getValue ( ). getURI ( ) )
4243	assertEquals ( "package org.kissmda.test.junit;\\n" + "public class ClazzName {\\n" + "  public void doSomething(  Name values) throws org.kissmda.AException {\\n" + "           throw new org.kissmda.BException();\\n" + "  }\\n" + "}", cu. toString ( ). trim ( ) )
4244	assertFalse ( v. isReturnToDepot ( ) )
4245	assertEquals ( expected, cls )
4246	assertEquals ( "3.5.13", verison )
4247	assertionHelper. assertTwoFilesAreEqualByRecursiveTreeComparison ( localFile, destFile )
4248	assertTrue ( tuple instanceof StaticBinding )
4249	assertEquals ( "TEXT", p2. getCode ( ). getText ( ) )
4250	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), hasEnvVar ( "STARTUP_MODE", ADMIN_STATE ) )
4251	Assert. assertEquals ( "Unknown destination queue", MicroPipelineValidationResult. MISSING_DESTINATION_QUEUE, new MicroPipelineValidator ( ). validateComponent ( cfg, queues, components ) )
4252	assertThat ( Asn1DerDecoder. readSubjectPublicKeyAlgorithm ( data ), is ( "DSA" ) )
4253	assertThat ( rows. getRowCount ( ), is ( equalTo ( 100 ) ) )
4254	assertLogEvent ( logEvent )
4255	assertEquals ( 0, layout. size ( ) )
4256	assertThat ( value, is ( equalTo ( 1024L ) ) )
4257	assertEquals ( extractedYAML, expectedYAML )
4258	Assert. assertTrue (! result. isSetDescription ( ) &&! result. isSetName ( ) &&! result. isSetEncodingType ( ) &&! result. isSetObservation ( ) )
4259	assertEquals ( 1, listener. updatedInjectedFilters. size ( ) )
4260	assertNull ( constraints. getExpiryTime ( ) )
4261	assertEquals ( "{\\"complexData\\":{\\"complexData\\":[{\\"complexData\\":[{\\"complexData\\":[{\\"complexData\\":[{\\"complexData\\":[{\\"complexData\\":[{\\"complexData\\":[{\\"complexData\\":[{\\"complexData\\":[{\\"complexData\\":[{\\"complexData\\":[{\\"complexData\\":[{\\"complexData\\"]}]}]}]}]}]}]}]}]}", toJson )
4262	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( query, query1 ) )
4263	Assert. assertEquals ( Explain. ExplainType. EXPLAIN, o. explainType )
4264	assertEquals ( ZippelGCD ( a, b ), gcd )
4265	assertTrue ( comboBox. getListDataProvider ( ). size ( ) > 0 )
4266	assertEquals ( origDatagrams [ testIdx + 1 ], d )
4267	assertThat ( attributeValues. getProperties ( ), is ( sameInstance ( desc. getProperties ( ) ) ) )
4268	assertArrayEquals ( new BigDecimal [ ] { 1, 2.23, 3 }, params. valuesAsBigDecimalArray ( "a" ) )
4269	assertEquals ( "result set was not reset", rs1, r2 )
4270	assertThat ( actual, is ( equalTo ( expected ) ) )
4271	assertEquals ( TestUtil. HTTPS_TEST_PROXY, result. get ( 0 ) )
4272	assertEquals ( "a.b$", expression. evaluate ( ) )
4273	assertThat ( extractor. extractDataModelCondition ( sheet ), is ( ( Object ) EnumSet. of ( DataModelCondition. IGNORE_UNEXPECTED ) ) )
4274	assertTrue ( rdbStore. getRdbFileError ( ). getMessage ( ). contains ( "RDB file not found" ) )
4275	assertOut ( "var a:* = function() {\\n}" )
4276	assertEquals ( "short field not aligned", MAGIC, testlib. struct_align_Signed16 ( s ) )
4277	assertSame ( test, base )
4278	assertEquals ( "foo", command. getName ( ) )
4279	assertEquals ( version. toString ( ), "1.0" )
4280	assertEquals ( result, sameResult )
4281	assertEquals ( "https", scheme )
4282	assertEquals ( 2, repository. getCommits ( ). size ( ) )
4283	assertThat ( result. isSuccess ( ), is ( true ) )
4284	Assert. assertEquals ( 2, accounts. size ( ) )
4285	assertArrayEquals ( UtilsForTesting. tableToArrayOfRows ( table ), UtilsForTesting. tableToArrayOfRows ( FRX_2012_DISCLOSURE_PDF ) )
4286	assertThat ( file. exists ( ), is ( true ) )
4287	Assert. assertEquals ( expectedKeys, actualKeys )
4288	Assert. assertEquals ( 1, rcs. size ( ) )
4289	assertEquals ( "value", getLastRequestQueryParameters ( ). get ( "my" ). getFirst ( ) )
4290	assertNotNull ( victim. getInputStream ( mockRequest, mockResponse, "http://www.google.com" ) )
4291	assertThat ( doc. getKey ( ), is ( notNullValue ( ) ) )
4292	assertNotEquals ( one, 1 )
4293	Assert. assertEquals ( "composites", type. getGlobalNamespace ( ) )
4294	Assert. assertEquals ( 0, analyser. getLoadRightAfterActivity ( route. getActivities ( ). get ( 2 ), route ). get ( 0 ) )
4295	assertEquals ( "Wrong number of current sections", 2, sectionService. getCurrentSections ( ids ). size ( ) )
4296	assertTrue ( "Event was not fired", true )
4297	assertEquals ( "SimpleSens ('" + direction. getValueSensDirect ( ) + "')", retour. toString ( ) )
4298	Assert. assertEquals ( matrixCplx_EXPECTED, matrixCplx_ACTUAL )
4299	assertEquals ( action. getShowWeekender ( ), true )
4300	assertResultSet ( res )
4301	Assert. assertFalse ( impl. canCachedResponseBeUsed ( host, request, entry, now ) )
4302	assertThat ( backToJson. toString ( ), sameJSONAs ( ( String ) asTinkerpop ) )
4303	assertEquals ( 1, violations. size ( ) )
4304	assertEquals ( expected, cassandraRowMapper. map ( resultSet ). next ( ) )
4305	assertTrue ( "Should run suites with exact method name", exactFilter. matches ( suite ) )
4306	assertTrue ( handler. supportsView ( ComplexObsHandler. RAW_VIEW ) )
4307	Assert. assertTrue ( updatedRows > 0 )
4308	assertFalse ( result. isResult ( ) )
4309	context. assertSentrySemanticException ( statement, "CREATE database " + DB1, semanticException )
4310	assertEquals ( saved. getPrefLabel ( ), updated. getPrefLabel ( ) )
4311	Assert. assertEquals ( "url should be TEST_URL", popup. getUrl ( ), TEST_URL )
4312	assertEquals ( 5, bilateralOut. getSampleData ( ). getWidth ( ) )
4313	assertEquals ( readConcernString, parsedReadConcern )
4314	assertThat ( match, is ( BestTypeMatch. T1 ) )
4315	assertEquals ( Collection. class, collectionParameterType )
4316	assertEquals ( id, dc. getClientID ( ) )
4317	assertThatAcceptorWasNotStarted ( )
4318	assertTrue ( downloader. getClass ( ). equals ( BasicDownloader. class ) )
4319	assertThat ( identifiedPrincipals, hasItems ( new UidPrincipal ( 1000 ), new GidPrincipal ( 1000, true ), new JwtSubPrincipal ( "EXAMPLE", sub ), new JwtJtiPrincipal ( "EXAMPLE", jti ) ) )
4320	assertThat ( minimizedChanges, is ( empty ( ) ) )
4321	assertTrue ( closed. await ( 2, SECONDS ) )
4322	assertNull ( config. getContainer ( ) )
4323	assertOut ( "var /** @type {XML} */ a = new XML(\\"<top attr1='cat'><child attr2='dog'><grandchild attr3='fish'>text</grandchild></child></top>\\")" )
4324	assertHistoricProcessInstances ( )
4325	assertEquals ( "failed to generate new object with parameterized type", "new ArrayList<java.util.String>()", s )
4326	Assert. assertEquals ( 4, permutations. size ( ) )
4327	Assert. assertEquals ( "The identifier must be as expected", "test", new SPQRNodeServer ( ). registerNode ( "http", "localhost", 8080, 8081, mockedNodeManager, request ) )
4328	assertThat ( error. getStackTrace ( ), is ( nullValue ( ) ) )
4329	assertEquals ( expResult, result )
4330	assertEquals ( "{\\"a\\":1}", n )
4331	assertTrue ( message. contains ( "No topic specified" ) )
4332	assertEquals ( "There should be two registrations/unregistrations of MavenResolver before final (ConfigAdmin based) registration", 5, count )
4333	assertEquals ( "Created incorrect LinkedHashMap", 0, hm2. size ( ) )
4334	assertIsAborted ( tx )
4335	assertThat ( actual, is ( equalTo ( expectedRequest ) ) )
4336	assertNotNull ( stream )
4337	Assert. assertEquals ( buckets5, buckets5After )
4338	AssertJUnit. assertTrue ( difference. isZero ( 1e-7 ) )
4339	assertEquals ( JSON. serialize ( result ), "[ \\"value1\\", 12]" )
4340	Assert. assertEquals ( 1, ( int ) reporter. getProblemCounters ( ). get ( Code. FIELD_NOW_STATIC. code ( ) ) )
4341	Assert. assertEquals ( new Path ( "obj1.nested.objArr.*.nestedArrObjString1" ), fullPath )
4342	assertEquals ( "code", groovyMacroScanner. getGroovyMacroCode ( GROOVY_MACRO ) )
4343	assertEquals ( "INSERT INTO user (user_id,user_name,pwd ) VALUES ( :userId,:userName,:pwd ) ", t. getInsertSql ( ) )
4344	assertArrayEquals ( new Object [ 0 ], params )
4345	assertEquals ( "DELETE", request. getMethod ( ) )
4346	runner. assertAllFlowFilesTransferred ( ListenRELP. REL_SUCCESS, 0 )
4347	assertFalse ( userCanSubmitChangeRequest )
4348	assertSideBarContainsClass ( "open" )
4349	Assert. assertEquals ( "This a <a href=\\"MyPage\\" title=\\"My Page\\" /></a>", printer. toString ( ) )
4350	Assert. assertFalse ( handler. deleteCgroup ( cgroupDir. getAbsolutePath ( ) ) )
4351	assertEquals ( "helloworld", result )
4352	assertTrue ( BatchUtil. evaluate ( batch ) )
4353	assertEquals ( foo, objectAccessor. getValue ( ) )
4354	assertThat ( result, hasSize ( 1 ) )
4355	assertEquals ( "Method #toString is wrong", exp, mapper. toString ( ) )
4356	context. assertIsSatisfied ( )
4357	assertEquals ( "Expected 10 results!", 10, n )
4358	assertThat ( destination. getBodyText ( ), is ( "Navigation Destination from : from the rule button" ) )
4359	assertStatementCanBeDeparsedAs ( select, statementTgt )
4360	assertEquals ( "House", listener. groupList ( ) )
4361	assertions. startsWith ( sequence )
4362	rule. assertScenarioEnded ( )
4363	assertThat ( result, containsString ( "auth:           PGPKEY-ASD" ) )
4364	assertTrue (! readMap. equals ( refMap ) )
4365	assertMockEndpointsSatisfied ( )
4366	assertEquals ( "12345", job. getConfiguration ( ). get ( "hbase.client.scanner.timeout.period" ) )
4367	assertEquals ( "Empty feed", getFeedMethod. invoke ( mockFeed ) )
4368	assertEquals ( asList ( "忙\\\\\\\\n     | \\\\o\\\\no\\\\  | 酶\\\\\\\\n酶\\\\\\\\|" ), texts )
4369	assertEquals ( FleetSize. INFINITE, vrp. getFleetSize ( ) )
4370	assertTrue ( max < connPerRoute. getMaxPerRoute ( route ) )
4371	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
4372	assertEquals ( "prop like \\"abc\\"", e. toString ( ) )
4373	Assert. assertEquals ( vector, new Vector ( 15, 15, 15 ) )
4374	assertEquals ( false, out. firstElement ( ). get ( ) )
4375	assertThat ( givenStories. getPaths ( ), equalTo ( Arrays. asList ( GIVEN_STORY_PATH1 ) ) )
4376	assertThat ( mode, is ( equalTo ( ShellMode. batch ( ) ) ) )
4377	assertThat ( testStatus, is ( expectedStatus ) )
4378	assertTodo ( expected, actual )
4379	assertTrue ( 0!= rmAdminCLI. run ( args ) )
4380	Assert. assertFalse ( lanes. isEmpty ( ) )
4381	assertThat ( connection, is ( instanceOf ( SerialConnection. class ) ) )
4382	Assert. assertArrayEquals ( new String [ ] { "w=what" }, cg. getContext ( 0, TOKENS_1, null, AC_1 [ 0 ] ) )
4383	assertEquals ( 1, list. size ( ) )
4384	assertThat ( JspUtils. isRemoteUser ( request ), equalTo ( false ) )
4385	assertTrue ( "Failed permission check was not logged", loggedFailedPermissionCheck ( AUDIT_LOG_FILE, USER ) )
4386	assertThat ( messages. getMessages ( ), hasSize ( 0 ) )
4387	assertFalse ( channelManager. isEphemeralNode ( user1 ) )
4388	assertEquals ( "Don\\47t Panic!\\n", getStdout ( ) )
4389	assertEquals ( bd, result )
4390	assertEquals ( 15634800000L, q. getFirstMillisecond ( ) )
4391	assertEquals ( "a = 1\\n", output. toString ( ) )
4392	assertEquals ( 9, providers. size ( ) )
4393	assertThat ( System. getProperty ( "user.home" ), is ( "Darwin" ) )
4394	assertThat ( stdoutObsWasRead. get ( ) )
4395	assertTrue ( WebSocketUpgradeValidator. validateUpgradeReply ( upgradeRequest, responseStr ) )
4396	assertThat ( owlOntologyChange, is ( ontologyChange ) )
4397	assertEquals ( t, list. size ( ) )
4398	Assert. assertNotNull ( addressResultsDto )
4399	Assert. assertTrue ( resource. contains ( DummyService. class. getName ( ) ) )
4400	assertEquals ( "unknown", column. getDefaultExpression ( ) )
4401	Assert. assertEquals ( LazyStream. create ( 1, 2, 3, 4, 5 ), dropResult )
4402	assertEquals ( pollTime, result )
4403	assertEquals ( 0, trailers. get ( ). size ( ) )
4404	assertThat ( userInfo, nullValue ( ) )
4405	assertCanUpload ( s3Properties )
4406	arrays. assertContainsOnlyOnce ( someInfo ( ), actual, IntArrays. emptyArray ( ) )
4407	assertEquals ( RenameSettings. MachStrategy. EMBEDDED, view. getMachStrategy ( ) )
4408	Assert. assertEquals ( "ref:g.43490", gPos. toString ( ) )
4409	assertFalse ( sf. getCache ( ). containsEntity ( "com.hazelcast.hibernate.entity.DummyEntity", 0L ) )
4410	assertThat ( instance. getMessage ( ), is ( "test IO" ) )
4411	assertThat ( Timezone. of ( fallback ), is ( expected ) )
4412	assertEquals ( "test", argumentCaptor1. getValue ( ) )
4413	assertThat ( change. isChangeFor ( axiomType ), is ( false ) )
4414	assertNotNull ( Recording. fetcher ( "RTXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
4415	assertNotSame ( instruction1, instruction2 )
4416	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, query2 ) )
4417	assertNotNull ( "Created run was not assigned an ID.", mr. getId ( ) )
4418	assertEquals ( "Expected header not seen.", e1, e2 )
4419	assertEquals ( Integer. MAX_VALUE, extractedId )
4420	assertNull ( daoService. get ( userWrapper, "PKEY", "Config", StatisticRefEnum. CREATED_ISSUE_COUNT ) )
4421	assertEquals ( 100, snapshot. getValue ( ) )
4422	assertActive ( player1, player2, player3, player4 )
4423	given ( ). when ( ). get ( "rest/session/1223344" ). statusLine ( ). assertThat ( )
4424	assertEquals ( "ICAg", res )
4425	assertNull ( account. getBalance ( ) )
4426	assertEquals ( expected, properties )
4427	assertEquals ( 3, countNeoFriends )
4428	assertEquals ( "fozzie", runtimeService. getVariable ( "assignee" ) )
4429	assertFalse ( valid )
4430	assertEquals ( expected, splitter. split ( str ) )
4431	assertNotNull ( Metric. reader ( "CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
4432	Assert. assertFalse ( deviceMastership. isDeviceMastered ( ) )
4433	assertThat ( actual, equalTo ( expected ) )
4434	assertNull ( resourceEntity. getExternalLink ( ) )
4435	assertThat ( FileUtils. readFileToString ( new File ( tempCopyFile ) ), CoreMatchers. is ( cp_file. asText ( ) ) )
4436	assertEquals ( "(10, 0)", grid. getCell ( 10, 0 ). getText ( ) )
4437	assertTrue ( r. getChildren ( ). isEmpty ( ) )
4438	assertEquals ( "one dollar", actual )
4439	editor. assertHoverContains ( "@ConditionalOnMissingBean", "@ConditionalOnMissingBean (types: example.Hello; SearchStrategy: all) did not find any beans'\\n" + "\\n" + "Process [PID=22022, name=`test-conditionals-live-hover`]" )
4440	assertTrue ( null == obj )
4441	Assert. assertEquals ( m, TestUtils. serializeAndRecover ( m ) )
4442	assertEcssEquals ( ".myDiv{" + "background-image:\\"url(#{resource['test?gradientHeight=100px&height=150px&gradientColor=Skin.myskin']})\\";" + "}", convertFragment ( xcss ) )
4443	assertEquals ( "1, 2, 3", tree. toString ( ) )
4444	assertThat ( "min cores", sut. getMinCores ( ), is ( equalTo ( minCores ) ) )
4445	assertEquals ( "name", entityNameExtractor. extract ( "name" ) )
4446	assertEquals ( stringConstructor. hashCode ( ), resolvedConstructor. hashCode ( ) )
4447	assertNotNull ( body )
4448	assertThat ( credentialsProvider, instanceOf ( AWSStaticCredentialsProvider. class ) )
4449	assertEquals ( "testDesc", trace. getDescription ( ) )
4450	Assert. assertTrue ( c1. isCompatible ( c2, mutations ) )
4451	assertEquals ( 1, orders. size ( ) )
4452	assertEquals ( "Close", close )
4453	assertThat ( foundResources, contains ( p2id. getValue ( ) ) )
4454	assertTrue ( isEqual ( d1, d2 ) )
4455	Assert. assertEquals ( "Value is incorrect", map, value )
4456	Assert. assertEquals ( 0, analyser. getNumberOfPickupsAtBeginning ( route ), 0.01 )
4457	assertFailure ( response )
4458	assertNotNull ( result )
4459	assertNotEquals ( otherHashCode, foreignableFieldHashCode )
4460	assertTrue ( localFileInstanceStorageManager. getBinlogInfo ( "test1" ) == null )
4461	assertEquals ( "test", JsonbProvider. provider ( ). create ( ). build ( ). fromJson ( new StringReader ( json ), SimpleProperty. class ). value )
4462	Assert. assertNotNull ( "null data object", dataObject )
4463	assertNotNull ( concreteCache. get ( "key" ) )
4464	Assert. assertNotNull ( resultEntity )
4465	assertEquals ( actualFlows, deserFlows )
4466	assertTrue ( output. contains ( "Mask password" ) )
4467	assertNotNull ( localAddressProvider. getLocalAddress ( ) )
4468	assertEquals ( 2000, testVehicleSetTests. getYear ( ) )
4469	assertEquals ( "http://example.com#frag", actual )
4470	assertEquals ( "#", link. getAttribute ( "href" ) )
4471	assertEquals ( "", result )
4472	assertTrue ( SOME_FLOAT == result )
4473	assertThat ( command. accept ( state ), is ( false ) )
4474	assertEquals ( "Select with simple join check", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
4475	assertEquals ( extensionConverterManager, sm. getExtensionConverterProvider ( ) )
4476	assertEquals ( "$metadata#ESCompMixPrimCollComp(PropertyMixedPrimCollComp(PropertyComp,PropertyInt16)))", ContextURLBuilder. create ( contextURL ). toASCIIString ( ) )
4477	Assert. assertEquals ( "88095550", endereco. getCep ( ) )
4478	assertThat ( url, is ( equalTo ( "http://example.com" ) ) )
4479	assertEquals ( ss, manager. getSubscriptionsStore ( ) )
4480	Assert. assertEquals ( 13, list. size ( ) )
4481	assertThat ( population. size ( ), is ( populationSize ) )
4482	Assert. fail ( "expected IllegalArgumentException" )
4483	Assert. assertFalse ( validator. validSequence ( 1, inputSequence, outcomesSequence, outcome ) )
4484	assertEquals ( 1, query. next ( ) )
4485	assertNotSame ( fsU1, fsU2 )
4486	assertNotNull ( newMember. getId ( ) )
4487	assertSame ( mockConnection, connection )
4488	assertTrue ( userCanUpdateProject )
4489	assertTrue ( d_domain. getIndications ( ). isEmpty ( ) )
4490	assertNull ( cs. getValue ( ) )
4491	assertThat ( callbackRan, is ( true ) )
4492	assertEquals ( newVariable, variable )
4493	e. put ( "/B?body=" + JsonSerializer. DEFAULT. build ( ). applyAnnotations ( DTOs2. Annotations. class ). build ( ). toString ( DTOs2. B. INSTANCE ), SimpleJsonSerializer. DEFAULT. builder ( ). applyAnnotations ( DTOs2. Annotations. class ). build ( ). toString ( DTOs2. B. INSTANCE ) ). json ( ). execute ( ). assertBody ( expected )
4494	assertThat ( time. with ( PlainTime. COMPONENT. roundedToFullMinute ( ) ), is ( PlainTime. midnightAtEndOfDay ( ) ) )
4495	assertEquals ( "https://github.com/burakdd", githubPage )
4496	assertEquals ( clone. getResultEntityName ( ), template. getResultEntityName ( ) )
4497	assertThat ( actualCapacity, is ( 5L ) )
4498	assertThat ( auth. getTotpKey ( ), nullValue ( ) )
4499	assertEquals ( "Count of customer", 0, res )
4500	assertThat ( isValid, is ( true ) )
4501	Assert. assertEquals ( "Fr3gSvoAeKbGpQD3r98KFeB50P3Gq14XBVsv5fpiaBvJ3HTOpREiwYGs20Xw", endereco. getDescricaoMunicipio ( ) )
4502	assertNotNull ( event. getPayload ( ) )
4503	assertThat ( Template. parse ( markup ). render ( assigns ), is ( expected ) )
4504	assertNull ( service. ping ( ) )
4505	assertTrue ( request. ok ( ) )
4506	assertEquals ( 0, suggestions. size ( ) )
4507	assertNotNull ( nre )
4508	assertEquals ( mode, permission. getMode ( ) )
4509	assertEquals ( obj, stringDeserializer. deserialize ( result ) )
4510	assertTrue ( logger. isOpen ( ) )
4511	assertThat ( secret, is ( "secret" ) )
4512	assertEquals ( CollectionStringProducer. class, typeProducer. getClass ( ) )
4513	assertEquals ( values. size ( ), 1 )
4514	assertEquals ( "select a AS b", result )
4515	Assert. assertFalse ( result )
4516	assertEquals ( actualDeviceClientList, Arrays. asList ( actualDeviceIO ) )
4517	assertOut ( "a(b.toString());" )
4518	assertThat ( minimizedChanges, hasSize ( 0 ) )
4519	assertEquals ( expected, actual )
4520	assertTrue ( connector instanceof NioSocketConnector )
4521	assertThat ( hijri. with ( CommonElements. weekOfYear ( HijriCalendar. family ( ), model ). ceiling ( ) ), is ( expected ) )
4522	assertionHelper. assertTwoFilesAreEqualByRecursiveTreeComparison ( irodsSourceFile. getAbsolutePath ( ), irodsTargetFile. getAbsolutePath ( ) )
4523	assertTrue ( entity. equals ( entity2 ) )
4524	assertEquals ( "POLYGON [id='']((0.0 0.0,10.0 0.0,10.0 10.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0.0,0.0 0
4525	assertEquals ( "Align should be equal to default value", GridColumn. ALIGN_LEFT, gridColumn. getAlign ( ) )
4526	assertTrue ( comp. getHtmlClassList ( ). isEmpty ( ) )
4527	assertThat ( jPath. elementFrom ( glossaryRoot ). getAsString ( ), equalTo ( "example glossary" ) )
4528	assertEquals ( 0, buyPercentageFee. compareTo ( new BigDecimal ( "0.001" ) ) )
4529	this. assertGet ( "servicetemplates/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fservicetemplates%252Fponyuniverse%252Fdriverinjection/DriverInjectionTest/injector/getInjectOptionsForDriverInjection.json", "servicetemplates/ServiceTemplateResource-getInjectOptionsForDriverInjection.json" )
4530	assertNull ( entityField. get ( IndexingUtils. FIELD_NULL_VALUE ) )
4531	assertEquals ( 123L, info. getId ( ) )
4532	assertThat ( md, is ( notNullValue ( ) ) )
4533	assertNotNull ( uploadResponse )
4534	assertTrue ( ctx. isAborted ( ) )
4535	assertThat ( stringFragment, is ( "FOOBAR with NO " ) )
4536	assertArrayEquals ( expected_output, dvxOut. toArray ( ), 1e-3 )
4537	assertEquals ( expResult, result )
4538	Assert. assertEquals ( list, objectTree. get ( "randomStrings" ) )
4539	Assert. assertTrue ( false )
4540	assertThat ( edges, containsInAnyOrder ( hasCollection ( "prefixpersons", "prefixdocuments" ) ) )
4541	assertThat ( session1, is ( not ( session2 ) ) )
4542	assertEquals ( new Float ( 123.4f ), result )
4543	assertTrue ( outAny. equal ( inAny ) )
4544	assertEquals ( "Wrong variable value", TEST_VALUE, interpolator. resolve ( ":" ) )
4545	assertNotNull ( provisioningServiceClient )
4546	Assert. assertEquals ( now, value )
4547	assertEquals ( "Rules have been imported", 3, ss. size ( ) )
4548	assertTrue ( r1 instanceof PublicCloneable )
4549	assertFalse ( TestRMILoadBalancerFactory. areServerBalancersClosed ( ) )
4550	assertThat ( context. statement ( ), is ( "\\"b'c\\"" ) )
4551	assertThat ( returnedMode, is ( AvroMode. GENERIC ) )
4552	assertEquals ( 10, entities. size ( ) )
4553	assertEquals ( 2, result. getRequiredPlugins ( ). size ( ) )
4554	assertEquals ( "file:org.talend.components/file-input/0.1.0.SNAPSHOT/jar", computePathToDepsFromMvnUrl )
4555	assertThat ( result, isFailedCommand ( ) )
4556	Assert. assertEquals ( msg, expected, actual, delta )
4557	assertTrue ( caughtException )
4558	assertThat ( priceSum, is ( 32L ) )
4559	assertEquals ( o, null )
4560	assertEquals ( ( short ) 0, result )
4561	assertEquals ( new Scanner ( getClass ( ). getResourceAsStream ( "/expected-2-sample.html" ), "UTF-8" ). useDelimiter ( "\\\\A" ). next ( ), sw. toString ( ) )
4562	assertTrue ( entity2. getId ( ) > 0 && entity2. getPrice ( ). compareTo ( BigDecimal. ZERO ) == 0 )
4563	assertEquals ( "1", client. portfolios. findById ( "1" ). execute ( ). gid )
4564	assertThat ( actual, sameJsonAs ( expected ) )
4565	assertNull ( criteriaReader. start ( ) )
4566	assertEquals ( future, underTest. streamCollect ( futures, consumer, supplier ) )
4567	assertEquals ( opponentHealth, 3 )
4568	assertEquals ( reference, lessSpecific )
4569	assertEquals ( "John:Taro", got )
4570	assertEquals ( expected, actual )
4571	Assert. notNull ( ( Department ) departmentDao. getDepartmentById ( departmentParent. getId ( ) ) )
4572	assertThat ( "Unexpected MDX query", getPivotModel ( ). getCurrentMdx ( ), is ( equalTo ( "SELECT {[Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS, " + "CrossJoin({[Gender].[All Gender], [Gender].[Store Sales]}, " + "{[Product].[All Products], [Product].[Drink], [Product].[Food], [Product].[Non-Consumable]}) ON ROWS FROM [Sales]" ) ) )
4573	assertNotNull ( empresa. getId ( ) )
4574	assertEquals ( "Test", column )
4575	assertEquals ( expResults, results )
4576	assertViolationsThat ( report. getValidationViolations ( ), equalTo ( "resource(/parameter) is not a valid RamlParameter" ), equalTo ( "resource(/parameter) is not a valid RamlParameter" ), equalTo ( "resource(/parameter) is not a valid RamlParameter" ), equalTo ( "resource(/parameter) is not a valid RamlParameter" ), equalTo ( "resource(/parameter) is not a valid RamlParameter" ), equalTo ( "resource(/parameter) is not a valid RamlParameter" ) )
4577	assertTrue ( constrainedReturnDescriptor. hasConstraints ( ) )
4578	assertThat ( request. getConnectorId ( ), is ( zeroValue ) )
4579	Assert. assertEquals ( "Document ID mismatch", expectedDocumentID, actualDocumentID )
4580	Assert. assertEquals ( getManager ( ). count ( ), 0 )
4581	assertEquals ( "{\\"d\\":{\\"MaximalAge\\":99}}", StringHelper. inputStreamToString ( ( InputStream ) result. getEntity ( ) ) )
4582	assertTrue ( fileContents. contains ( MULTI_LINE_VALUE ) )
4583	TerminalParserTest. assertResult ( parser, "order by foo", OrderBy. class, "foo" )
4584	Assert. assertEquals ( "40 minutes ago", prettyTime. format ( prettyTime. calculatePreciseDuration ( new Date ( new Date ( ). getTime ( ) - 40 * 60 * 1000 - 40 * 1000 ) ) ) )
4585	Assert. assertEquals ( objective, counter )
4586	assertEquals ( "{\\"aggregated.counterMetric@#$%^_123AaZz09\\":{\\"value\\":1.2222},\\"currentTime\\":{\\"value\\":currentTime}}", statsdMetricAggregated. getInfluxdbV1JsonFormatString ( ) )
4587	assertEquals ( expected, uri. toString ( ) )
4588	assertTrue ( "our user should be member in one VO", vos. size ( ) >= 1 )
4589	assertEquals ( "Hello World", banner )
4590	Assert. assertTrue ( lu. isSingular ( ) )
4591	assertEquals ( "(String,String)", mnd. getParameterDisplaySignature ( ) )
4592	assertEquals ( "Wrong class for isolatednode", net. ggtools. grand. tasks. IsolatedNodeFilterType. class, filter. getClass ( ) )
4593	Assert. assertNotNull ( addressResultsDto )
4594	assertTrue ( tester. testXmlSerialization ( ) )
4595	assertFalse ( underTest. collect ( ). isEmpty ( ) )
4596	assertEquals ( expResult, result )
4597	assertEquals ( expected, actual )
4598	assertFalse ( response. isPresent ( ) )
4599	Assert. assertArrayEquals ( coeff_EXPECTED, coeff_ACTUAL, DELTA )
4600	assertSame ( reply, myTestInstance. runCommand ( "command", commandDoc. build ( ) ) )
4601	assertEquals ( expected, output )
4602	assertEquals ( "Base for doubles is wrong", Double. valueOf ( 3.6d ), parsed )
4603	assertThat ( target. getOutput ( ), is ( notNullValue ( ) ) )
4604	assertNotNull ( jedis )
4605	Assert. assertTrue ( "File types should not be honored", CollectionUtils. isEqualCollection ( widget. getFileTypes ( ), Collections. emptySet ( ) ) )
4606	assertionHelper. assertLocalFileExistsInScratch ( IRODS_TEST_SUBDIR_PATH + '/' + testFileName )
4607	Assert. assertEquals ( theColPos, new CollisionPosition ( thePosition1, thePosition2 ) )
4608	assertEquals ( "The thread is not bound", true, agds. threadBound )
4609	assertEquals ( "Success", json. getString ( "status" ) )
4610	assertEquals ( expectedSource, instrumentedSource )
4611	Assert. assertEquals ( 5, arrays. size ( ) )
4612	assertTrue ( cell. isPopupVisible ( ) )
4613	assertEquals ( "a\\nbla\\nc", lineNumbered. toString ( ) )
4614	assertEquals ( 4, fixture. bytesRead ( ) )
4615	assertEquals ( "gonzo", result. getId ( ) )
4616	assertEquals ( sr, SpatialReference. create ( completeStr ) )
4617	assertTrue ( commandLineOutput. contains ( "Job ID: " + jobID. toString ( ) ) )
4618	assertFalse ( "Top250 is empty", result. isEmpty ( ) )
4619	assertTrue ( "Same arrays should be equal", equals )
4620	assertThat ( validationList1, is ( Arrays. asList ( INVALID_DB_TYPE, INVALID_DB_SERVER_NAME, INVALID_USERNAME, INVALID_PASSWORD, INVALID_TRUST_ALL_ROOTS, INVALID_RESULT_SET_TYPE, INVALID_RESULT_SET_CONCURRENCY, INVALID_COMMAND, INVALID_TIMEOUT ) ) )
4621	assertEquals ( new SimpleDateFormat ( "yyyy-MM-dd HH:mm" ). parse ( a. getSnapshotDate ( ) ), new SimpleDateFormat ( "yyyy-MM-dd HH:mm" ). parse ( b. getSnapshotDate ( ) ) )
4622	assertThat ( query. getQuery ( ), is ( "EmptyEntities" ) )
4623	assertEquals ( "An unexpected node membership was returned", expected, result )
4624	assertTrue ( validator. validate ( EntityNames. TEACHER, teachers ). isEmpty ( ) )
4625	assertThat ( testHostname, is ( expectedHostname ) )
4626	assertEquals ( 3, count )
4627	assertEquals ( 2, counter. get ( ) )
4628	assertEquals ( "47", sessionManager. getNewSessionId ( ) )
4629	assertThat ( Hex. toHexString ( wrapped ). toLowerCase ( ), is ( expected. toLowerCase ( ) ) )
4630	Assert. assertEquals ( expected, actual, delta )
4631	Assert. assertEquals ( "[1,2,3,4]", linkedList. toString ( ) )
4632	runner. assertAllFlowFilesTransferred ( FetchS3Object. REL_SUCCESS, 1 )
4633	Assert. assertTrue ( "Failed to verify signed challenge", SaslEcdsaNist256PChallenge. verify ( recreatedPrivateKey, CHALLENGE, signature ) )
4634	assertEquals ( expectedValue, actualValue )
4635	assertNull ( widget )
4636	assertEquals ( oldPos + size, buffer. position ( ) )
4637	assertEquals ( "GET", method. toString ( ) )
4638	assertContainsOnly ( testee. getFileFilters ( ), filter1, filter3 )
4639	assertEquals ( IotHubStatusCode. OK_EMPTY, result )
4640	assertEquals ( base. plusWeeks ( 3 ), absoluteTime )
4641	assertTrue ( entity. equals ( loadedEntity ) )
4642	assertEquals ( expected, actual )
4643	assertEquals ( 3, result. getViolations ( ). size ( ) )
4644	assertTrue ( kars. size ( ) > 0 )
4645	assertEquals ( setA, setB )
4646	assertLookup ( breaks, values, srcImg, DataBuffer. TYPE_DOUBLE )
4647	Assert. assertTrue ( contains )
4648	AssertJUnit. assertTrue ( difference. isZero ( 1e-7 ) )
4649	assertTrue ( "Result: " + session. getHtmlToDisplay ( ), session. getHtmlToDisplay ( ). contains ( "<option value=\\"\\" selected=\\"true\\">" ) )
4650	assertEquals ( expected, actual )
4651	MutableMessageFactoryTest. assertExpiryDateEquals ( expiryDateValue, message )
4652	Assert. assertEquals ( String. format ( "send to\\n%s now", html ( bb, "email", "address.domain" ) ), formatter. format ( "send to@address now", defaultOptions ( ) ) )
4653	assertEquals ( padded ( ARRAY_OVERHEAD + FIRST_DIM * ( OBJECT_REF + padded ( ARRAY_OVERHEAD + SECOND_DIM * OBJECT_REF ) ) ) + padded ( ARRAY_OVERHEAD + 2 * INT ), ThreadTrackingContext. getBytes ( ) )
4654	Assert. fail ( "server-group missing name" )
4655	assertEquals ( qf1, qf2 )
4656	assertCursor ( meta. pofClassAttribute, 1, 1, 10, 17 )
4657	assertEquals ( 5, dispatcher. getReceivedRates ( ). size ( ) )
4658	assertThat ( parsed, is ( answer ) )
4659	assertTrue ( connectionServiceImpl. updateConnection ( mockDBConnection ) )
4660	assertEquals ( "Unexpected state class", TwinColSelectState. class, state. getClass ( ) )
4661	assertServiceEvent ( ServiceEvent. REGISTERED, TestService. class, 5, TimeUnit. SECONDS )
4662	assertions. doesNotContain ( new short [ ] { 6, 8 } )
4663	Assert. assertEquals ( "Candidate size should be " + EXPECTED_CANDIDATE_SIZE, EXPECTED_CANDIDATE_SIZE, termList. size ( ) )
4664	assertParser ( twig )
4665	assertEquals ( CustomsDeclarationCollection. getData ( ). size ( ), 1 )
4666	Assert. assertTrue ( EqualsBuilder. reflectionEquals ( result, expected ) )
4667	Assert. assertEquals ( ps2. getUuid ( ), vol. getPrimaryStorageUuid ( ) )
4668	assertTrue ( vehicle. getClean ( ) )
4669	assertFlowState ( ACCEPTED_FAILED )
4670	assertEquals ( "Hello, World", rep. receiveMessage ( ). popString ( ) )
4671	assertEquals ( expected, actual )
4672	assertEquals ( 0, TextMetrics. calculateTextWidth ( fontMetics, "Hello World" ) )
4673	assertEquals ( "lexicalvalue", literal. getLexicalLanguageTag ( ) )
4674	Assert. assertEquals ( xmlEsperado, icms101. toString ( ) )
4675	Assert. assertEquals ( nowPlusOneMin, deadline. value ( ) )
4676	assertArrayEquals ( expectedOutput, output )
4677	assertServerReceived ( "<iq id=\\"*\\" type=\\"set\\" from=\\"userc@localhost/voxeo\\" to=\\"#callId@localhost\\"><say xmlns=\\"urn:xmpp:tropo:say:1\\"><audio xmlns=\\"\\" src=\\"http://ccmixter.org/content/DoKashiteru/DoKashiteru_-_you_(na-na-na-na).mp3\\"></audio></say></iq>" )
4678	assertEquals ( 1L, query ( ). from ( show ). where ( show. acts. containsKey ( "a" ) ). fetchCount ( ) )
4679	maps. assertContainsOnly ( description, actual, null )
4680	assertTrue ( timeInstant!= null )
4681	assertTrue ( success )
4682	assertTrue ( foundNews )
4683	assertEquals ( literal, newLit )
4684	assertEquals ( mockList, queryPlan. getChildQueryPlans ( ) )
4685	assertEquals ( "443", loopbackResourceAddress. getResource ( ). getAddress ( ). getHostAddress ( ) )
4686	assertEquals ( expectedGmtOffset, actual )
4687	assertNotNull ( server )
4688	assertEquals ( 1, victim. getPreProcessors ( ). size ( ) )
4689	assertTrue ( "Invalid response statusCode: " + statusCode, statusCode == HttpServletResponse. SC_OK )
4690	assertTrue ( "return too late", time < TIME )
4691	assertOut ( "a |= b" )
4692	assertEquals ( "2016-04-21T20:54:41.103Z", ts )
4693	Assert. assertNull ( wordAfter )
4694	assertNotNull ( connector )
4695	assertFalse ( flag )
4696	assertEquals ( "MyResource", result )
4697	Assert. assertEquals ( "General", result. getText ( ) )
4698	assertEquals ( "F", to. getMotion ( ) )
4699	Assert. assertEquals ( expected, superflatPreset )
4700	assertEquals ( "xxx", o )
4701	context. assertIsSatisfied ( )
4702	Assert. fail ( "Xfdf files are not equal" )
4703	assertEquals ( 1, result. size ( ) )
4704	assertTrue ( headerUserAchievements. getBronzeBadgesCount ( ) > 0 )
4705	Assert. assertTrue ( combiSet. getTotalNb ( ) == 3 )
4706	assertEquals ( result, ParseUtils. parseQuery ( "consumer.", "verion=1.0.0&cluster=china" ) )
4707	assertMockEndpointsSatisfied ( )
4708	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
4709	assertEquals ( "Base value is not properly parsed", date. getTime ( ), parsed )
4710	assertEquals ( Long. valueOf ( arg ), il. exec ( t ) )
4711	Assert. assertEquals ( previousGamma, gamma, tol )
4712	assertEquals ( 0, julDate. getJulianDate ( ), TOLERANCE )
4713	assertEquals ( Integer. valueOf ( 1 ), myTestInstance. insertAsync ( Durability. ACK, doc ). get ( ) )
4714	Assert. assertNotNull ( savedTenant )
4715	Assert. assertTrue ( can )
4716	assertEquals ( location. getPort ( ), 443 )
4717	assertThat ( result ( ), not ( containsString ( "<price>" ) ) )
4718	Assert. assertEquals ( ImmutableList. of ( ThresholdFilterHeaderExtender. FILTER_GT_MIN_COV_HET ), annotator. getFiltersFor ( gt ) )
4719	assertEquals ( "N", c. getValue ( ) )
4720	Assert. assertEquals ( "when the import is not in progress, the " + ResetImportAction. ASK + " view should be returned", ResetImportAction. ASK, view )
4721	Assert. fail ( )
4722	assertThat ( formatter. parse ( "(1) GGGG 1752 (1970) 1744" ), is ( PlainDate. of ( 1752, 9, 13 ) ) )
4723	assertTrue ( b )
4724	context. assertSentryException ( statement, "CREATE ROLE r2", SentryAccessDeniedException. class. getSimpleName ( ) )
4725	assertEquals ( expected, mergeAclEntries ( existing, aclSpec ) )
4726	assertEquals ( true, check. isRequired ( ) )
4727	assertTrue ( parser. isMyType ( document ) )
4728	assertValidQuery ( query )
4729	assertEquals ( 6. * 3600. + 6. * 60. + 6., sec, 0.01 )
4730	assertThat ( outcomes. get ( 0 ). getResult ( ), is ( TestResult. SUCCESS ) )
4731	assertEquals ( true, bm. isBitSet ( bitNumber ) )
4732	assertEquals ( Action. DISCONTINUE, discontinuationOrder. getAction ( ) )
4733	assertPermanentCount ( playerB, "Naturalize", 0 )
4734	assertEquals ( "OrganizationalUnit was not removed", true, eventCaptor. getValue ( ). isRemoved ( ) )
4735	assertEquals ( expResult, result )
4736	assertEquals ( Arrays. asList ( "three", "two" ), candidates )
4737	assertEquals ( result, em )
4738	assertVisitorSatisfied ( )
4739	assertTrue ( xml. contains ( "<fn>\\n    <text>John Doe</text>\\n    </fn>" ) )
4740	assertEquals ( "service", s1. getType ( ) )
4741	assertNotNull ( victim. get ( new COSObjectKey ( 1, 0 ) ) )
4742	Assert. assertEquals ( expected. getAttribute ( "id" ), actual. getAttribute ( "id" ) )
4743	assertNull ( array. getArray ( ) )
4744	assertThat ( s. isOffline ( ), is ( true ) )
4745	JSONAssert. assertEquals ( "{" + "status: 'in-progress', startTime: '" + now. toString ( ) + "', endTime: '" + now. toString ( ) + "', " + "description: 'Completed in 10 seconds', commit: {}" + "}", s, JSONCompareMode. LENIENT )
4746	assertEquals ( points. getClass ( ), actual )
4747	assertEquals ( actualException. getMessage ( ), "Unknown transport exception occurred" )
4748	assertEquals ( executions. size ( ), 1 )
4749	assertEquals ( "This is my cookie from the server", response )
4750	assertThat ( d. value ( ), is ( true ) )
4751	assertEquals ( new Double ( 20.0 ), request. getEcommerceRevenue ( ) )
4752	assertResponse ( response, 403, "[{\\"Forbidden\\": \\"INGEST API methods are disabled on this KairosDB instance.\\"}]\\n" )
4753	assertEquals ( baseVersion, AltcoinBlock. getBaseVersion ( auxpowVersion ) )
4754	Assert. assertEquals ( "Incorrect condition", "(WTextField=\\"1\\" and WTextArea=\\"2\\" and WDropdown=\\"3\\")", builder. build ( ). toString ( ) )
4755	assertEquals ( combineCounts ( ), result )
4756	assertEquals ( "King Brothers Holdings Inc...; (former big ticker symbol KKQ) ", words [ 0 ] )
4757	assertNotNull ( identity )
4758	Assert. assertEquals ( REPEATS, count )
4759	assertEquals ( SpringPropertyProxy. MaritalStatus. ENABLED, result. getClass ( ) )
4760	assertEquals ( "TextBuilder Is Test", "Test", _textBuilder. toString ( ) )
4761	assertEquals ( "http://example.com/some/obj", s. getPattern ( ) )
4762	assertEquals ( "ST", loop. getSegment ( 0 ). getElement ( 0 ) )
4763	assertEquals ( 2, counter. get ( ) )
4764	assertResultSet ( res )
4765	assertThat ( indexHits. size ( ), is ( 0 ) )
4766	Assert. assertNull ( user )
4767	assertEquals ( BaseAction. INPUT, action. doDefault ( ) )
4768	assertEquals ( "newChildMeta", getChild. getName ( ) )
4769	assertFalse ( isEditable )
4770	assertEquals ( "public static  main(final String[] args) {}", actualContent )
4771	assertEquals ( "Task completed", eventsReceived )
4772	assertEquals ( TEST_MSG, actual )
4773	Assert. fail ( "Error retrieving workflow list caused by: " + e. getMessage ( ) )
4774	assertEquals ( CUSTOM_NOTIFICATION_DOC_TYPE, document. getDocumentTypeName ( ) )
4775	assertEquals ( Boolean. TRUE, result )
4776	assertTrue ( mpis. getParts ( ). isEmpty ( ) )
4777	Assert. assertFalse ( errors. hasErrors ( ) )
4778	assertThat ( vraptor. getParameterValues ( "name" ), is ( equalTo ( values ) ) )
4779	assertEquals ( obj. getShareInfo ( ), null )
4780	AssertionUtils. multiAssertEquals ( createAsDocument11, response7. getResponseObject ( ) )
4781	assertEquals ( original_width, table. getSize ( ). getWidth ( ) )
4782	assertEquals ( 127, fixture. readVarInt ( ) )
4783	assertEquals ( "test_message", result. getCommit ( ). getFullMessage ( ) )
4784	assertThat ( parse ( contents ), contains ( map ( "value", "1" ) ) )
4785	assertEquals ( events. size ( ), size ( stream ) )
4786	assertEquals ( expecetedTableName, builtTableName )
4787	assertJsFunctionCallSequence ( asList ( "" + "formatter.scenario({\\n" + "  \\"description\\": \\"\\",\\n" + "  \\"keyword\\": \\"Scenario\\",\\n" + "  \\"name\\": \\"scenario name\\"\\n" + "});\\n", "" + "formatter.step({\\n" + "  \\"keyword\\": \\"Given \\",\\n" + "  \\"name\\": \\"first step\\"\\n" + "});\\n", "" + "formatter.match({\\n" + "  \\"location\\": \\"path/step_definitions.java:3\\"\\n" + "});\\n", "" + "formatter.result({\\n" + "  \\"status\\": \\"passed\\"\\n" + "});\\n", "" + "formatter.step({\\n" + "  \\"keyword\\": \\"Then \\",\\n" + "  \\"name\\": \\"second step\\"\\n" + "});\\n", "" + "formatter.afterstep({\\n" +
4788	assertEquals ( "something == $", result )
4789	Assert. assertEquals ( "(124delAinsCT)", del. toHGVSString ( ) )
4790	assertEquals ( out, JsonUtils. decodeBrackets ( in ) )
4791	assertThat ( result, is ( lines ( new String [ ] [ ] { { "\\\\\\\\t" } } ) ) )
4792	assertEquals ( ImmutableMap. of ( "foo", "true" ), everrestConfiguration. getAllProperties ( ) )
4793	assertNotNull ( Record. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
4794	assertSqlCanBeParsedAndDeparsed ( stmt )
4795	assertTrue ( threadReleasedLatch. await ( 1, TimeUnit. SECONDS ) )
4796	assertEquals ( Constants. DEFAULT_BISERVER_CONTEXT_PATH, biServerContextPath )
4797	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
4798	assertFalse ( "The text field of the calendar should not be empty after selecting a date", textField. getAttribute ( "value" ). isEmpty ( ) )
4799	assertEquals ( 15, atAct1. get ( 0 ) )
4800	assertArrayEquals ( Arrays. toString ( d. getResult ( ) ), refar, d. getResult ( ) )
4801	Assert. assertEquals ( "[]", reference. get ( ). getAttachment ( Http2Client. RESPONSE_BODY ) )
4802	assertTrue ( result )
4803	assertNull ( destination. getCredentials ( ) )
4804	assertTrue ( slice. isStreamDeleted ( ) )
4805	assertTrue ( doubleArray. length == 3 )
4806	assertThat ( select, hasSelectedOption ( hasValue ( SELECTED_OPTION_VALUE ) ) )
4807	assertEquals ( documentAccepted. getDocumentId ( ), getResponse. getDocumentId ( ) )
4808	assertEquals ( new Dimension ( 100, 100 ), res )
4809	assertEquals ( output. toString ( ), actual )
4810	assertTrue ( client. getModel ( ). hasPermissionsDefined ( ) )
4811	assertTrue ( actual. equals ( expected ) )
4812	assertFalse ( validator. isValidForRoutingTable ( replyToAddress ) )
4813	assertFalse ( lock. lock ( ) )
4814	Assert. assertArrayEquals ( expected, processed )
4815	assertEquals ( cache. get ( "a" ), "b" )
4816	Assert. assertFalse ( "Delete Profile  returned no results", json. isEmpty ( ) )
4817	assertNotNull ( photoContext )
4818	assertEquals ( name, BinlogHelper. toAddress ( other ) )
4819	assertBounds ( 10, 15, 10, 20 )
4820	assertTrue ( fs. exists ( newDir ) )
4821	assertEquals ( asList ( debug ( mdcValues, message, arg1 ) ), testLogger. getLoggingEvents ( ) )
4822	assertEquals ( exp, out )
4823	assertTrue ( map. isEmpty ( ) )
4824	Assert. assertEquals ( "{var:[1,2,3]}", e. toString ( ) )
4825	assertThat ( nextToken, is ( nullValue ( ) ) )
4826	assertTrue ( query. isEquivalent ( atomContainer ) )
4827	assertEquals ( Arrays. asList ( aa, ab, ac, ba, bb ), kittens )
4828	assertEquals ( sb. toString ( ), b. toString ( ) )
4829	assertTrue ( ntm. isConfigured ( ) )
4830	assertEquals ( packet, p )
4831	assertThat ( term, is ( " " ) )
4832	assertEquals ( 2, JCasUtil. select ( jcas, Language. class ). size ( ) )
4833	assertEquals ( "1", type. getValue ( rs, 1 ) )
4834	assertThat ( searchResponse. getHits ( ). getTotalHits ( ), is ( 16l ) )
4835	assertNotNull ( node )
4836	assertEquals ( "Test template", rt. getContents ( ) )
4837	assertEquals ( true, rss )
4838	assertEquals ( 1l, session. from ( $ ( dep ) ). where ( $ ( dep. getEmployees ( ) ). contains ( emp1 ) ). count ( ) )
4839	assertValidationFailures ( schema, config )
4840	assertNotNull ( config )
4841	assertThat ( testHeader, sameInstance ( tabHeader ) )
4842	assertThat ( queue. isEmpty ( ), is ( true ) )
4843	assertEqualDoubleArrays ( pytranspose, transpose, epsilon )
4844	Assert. assertEquals ( expected, testIndex. findConc ( " 'May' 'the' " ) )
4845	assertArrayEquals ( expected, target. getPixels ( ) )
4846	assertEquals ( "some source", factory. toString ( ) )
4847	assertEquals ( "65535 5556", StringUtils. join ( toText ( select ( jcas, Token. class ) ), " " ) )
4848	assertEquals ( parsed, source )
4849	assertEquals ( expectedResult, result )
4850	assertThat ( "Integer schema", combined, matches ( new SchemaMatcher ( expected ) ) )
4851	assertEquals ( MultipleChoices. MESSAGE, ri. getDescription ( ) )
4852	assertEquals ( "Outer class instance variable is 779", 779, ret )
4853	Assert. assertNotNull ( user )
4854	Assert. assertEquals ( "<customIcon><Icon><UUID>h9T0QaXsTOCMqYKlB50o7w==</UUID><Data>AAAAAAAAAAAAAA==</Data></Icon></customIcon>", xml )
4855	assertXpathEvaluatesTo ( "group", "//ui:label/@what", label )
4856	assertTrue ( peterRank <= 2 )
4857	assertNotNull ( logManager )
4858	assertSame ( "Wrong handler", handler, detector. getFileHandler ( ) )
4859	TestHelpers. assertDeepEquals ( expected, snapshot. getValue ( ) )
4860	assertAppearanceFontSize ( dest, 18.75f )
4861	assertions. containsSequence ( sequence )
4862	assertEquals ( expectedQuery, actualQuery )
4863	assertEquals ( expResult, result )
4864	assertEquals ( arc, arc2 )
4865	assertThat ( phase. getGoals ( ), contains ( goal ( "goal1", 0, 500 ) ) )
4866	assertThat ( options. getSnippetType ( ), is ( SnippetType. UNDERSCORE ) )
4867	context. assertIsSatisfied ( )
4868	assertEquals ( "de", properties. get ( PebbleProperty. DEFAULT_LOCALE. key ( ) ) )
4869	assertions. isNotGreaterThan ( new Short ( ( short ) 2 ) )
4870	assertEquals ( refPoint, testPoint )
4871	assertEquals ( queryCopy. getQueryGeometry ( ), query. getQueryGeometry ( ) )
4872	assertEquals ( new HashSet < String > ( Arrays. asList ( "staff1", "staff2", "staff3" ) ), underTest. filterConnectedViaEdOrg ( new HashSet < String > ( staffIds ), e ) )
4873	assertThat ( finalType. getIndex ( ), equalTo ( "1" ) )
4874	assertSame ( injector. getInstance ( ScopeTest. class ), injector. getInstance ( ScopeTest. class ) )
4875	Assert. assertEquals ( globalConfig. getIntField ( ), result. getIntField ( ) )
4876	assertReceivedModelJson ( )
4877	assertMap ( navigator. getStateParameterMap ( ), entry ( "bar", "baz" ) )
4878	assertThat ( value, is ( equalTo ( "DIARY" ) ) )
4879	assertTrue ( multiThreadedSingleKernelReportObserverTestHelper ( device, 16 ) )
4880	assertTrue ( "Document not inserted", docs. containsKey ( uri ) )
4881	assertEquals ( Piece. WHITE_PAWN, expectPawn )
4882	assertFalse ( satisfiesPrecondition ( cu ) )
4883	assertTrue (! TRIPLE_STORE. getStatements ( ). isEmpty ( ) )
4884	assertEquals ( expectedAllocationPolicy, actualAllocationPolicy )
4885	assertEquals ( "\\"How pretty she is!\\" said Ben to himself.", s. get ( 0 ) )
4886	assertEquals ( "Wrong external ID returned", test. getExternalID ( ), result )
4887	assertTrue ( v. handlesOwnValidationsPaths ( ) )
4888	assertEquals ( expResult, result )
4889	assertFalse ( generatedIds. contains ( id ) )
4890	Assert. assertFalse ( "Invalid request from interceptor", result )
4891	assertThat ( runtimeClass, typeCompatibleWith ( BundleClassResolverHelperDecorator. class ) )
4892	assertEquals ( expected, output )
4893	assertEquals ( componentByFieldInjection. getComponent ( ), component )
4894	assertTrue ( validator. validate ( EntityNames. STUDENT_SCHOOL_ASSOCIATION, associations ). isEmpty ( ) )
4895	Assert. assertTrue ( "warnings list should be empty", warnings. isEmpty ( ) )
4896	Assert. assertEquals ( "Invalid response", ApiResponse. OK, response )
4897	assertThat ( result, is ( false ) )
4898	assertEquals ( 1, allVisible. size ( ) )
4899	assertEquals ( expected, actual )
4900	assertEquals ( SearchType. DEFAULT, request. getSearchType ( ) )
4901	assertEquals ( "Required profiles", "tui", new ConciergePlatformBuilder ( m_bundleContext, "version" ). getRequiredProfile ( m_platformContext ) )
4902	assertEquals ( resizer, receivedResizer )
4903	assertThat ( "Unexpected MDX query after adding a new hierarchy", getPivotModel ( ). getCurrentMdx ( ), is ( equalTo ( "SELECT {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS" + ", CrossJoin({[Product].[All Products], [Product].[Drink], [Product].[Food], [Product].[Non-Consumable]}, " + "{[Gender].[All Gender]}) ON ROWS FROM [Sales]" ) ) )
4904	assertEquals ( map1, map2 )
4905	assertArrayEquals ( ONE_BYTE_CODE_LIST, ByteArray. readAllBytes ( nlriByteBuf ) )
4906	assertEquals ( Hex. toHexString ( outputStream. toByteArray ( ) ), "000000000041fa2f0270204bafe49cd42e5b4584000002002e002e000400020017000000000000001700000053006500440075006d006d007900440075006d006d007900440075006d006d007900440075006d006d007900440075006d007900440075006d006d007900440075006d006d0079007400" )
4907	Assert. assertEquals ( status. getBlockSizeBytes ( ), data. length )
4908	assertEquals ( dataflowInputPort, edit. getSubject ( ) )
4909	assertTrue ( customerKey. prefixOf ( key ) )
4910	assertThat ( result, is ( false ) )
4911	assertTrue ( Pattern. matches ( "(?s).*/phaseListener01.jsp PASSED.*", page. asXml ( ) ) )
4912	assertEquals ( expected, getStringWithContext ( TestUpdateImpl. example ( ) ) )
4913	assertTrue ( it. next ( ). asText ( ). contains ( "mvc" ) )
4914	assertTrue ( captor. getValue ( ). isCancelled ( ) )
4915	assertEquals ( FilterReply. ACCEPT, mockAppender. getFilterChainDecision ( loggingEvent ) )
4916	assertThat ( underTest. getChildMap ( ). size ( ), is ( 0 ) )
4917	assertTrue ( hasPermission )
4918	Assert. assertTrue ( schema instanceof DirectSchema )
4919	assertEquals ( 5, d, 0 )
4920	result. assertIsSatisfied ( 100 )
4921	assertThat ( parsed, is ( answer ) )
4922	assertEquals ( "7500", profile. getEnergy ( ) )
4923	assertFalse ( violation )
4924	assertTrue ( written. contains ( "order: \\"tag\\"" ) )
4925	assertEquals ( "GBP -5.83", test. toString ( ) )
4926	assertEquals ( 1, ksession. fireAllRules ( ) )
4927	Assert. assertEquals ( "�����������������������������������������������������������������������������������
4928	assertStoreContains ( out, 9, 8, 7, 6, 5, 4, 3 )
4929	assertNotNull ( a. getBrokerInfo ( ) )
4930	assertEquals ( newPost. param ( "a", "b" ), post. param ( "a", "b" ) )
4931	Assert. assertFalse ( "Failure expected false", r. getLeft ( ) )
4932	assertThat ( getInst ( ). findNode ( "nodeName" ), equalTo ( node ) )
4933	assertEquals ( "Object Type: RPKI\\n" + "Signing time: 2008-09-01T22:38:29.000Z\\n" + "Number: 68\\n" + "This update time: 2008-09-01T22:43:29.000Z\\n" + "Next update time: 2008-09-02T22:43:29.000Z\\n" + "Filenames and hashes:\\n" + "    filename1 ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad\\n" + "    filename2 cb8379ac2098aa165029e3938a51da0bcecfc008fd6795f401178647f96c5b34\\n", output. getBuffer ( ). toString ( ) )
4934	assertTrue ( unit. isValid ( Money. of ( 1, "EUR" ), null ) )
4935	assertEquals ( 1, matcher. groupCount ( ) )
4936	assertEquals ( "[c_0 = 22,c_1 = 11,c_2 = 42,c_3 = 32,c_4 = 27,c_5 = 37,r_0 = 30,r_1 = 86,r_2 = 55,x_0_0 = 4,x_0_1 = 1,x_0_2 = 10,x_0_3 = 5,x_0_4 = 3,x_0_5 = 7,x_1_0 = 12,x_1_1 = 18,x_1_3 = 16,x_1_4 = 15,x_1_5 = 17,x_2_0 = 6,x_2_1 = 2,x_2_2 = 14,x_2_3 = 11,x_2_4 = 9,x_2_5 = 13,xa_0_0 = 4,xa_0_1 = 1,xa_0_2 = 18,xa_0_3 = 16,xa_0_4 = 15,xa_0_5 = 17,xa_1_0 = 12,xa_1_
4937	assertThat ( authorization, is ( Optional. of ( vreAuthorization ) ) )
4938	assertEquals ( 1, size )
4939	assertEquals ( "Invalid number.", five )
4940	assertTrue ( latch. await ( 4, SECONDS ) )
4941	assertEquals ( true, resultA. compareTo ( resultB ) < 0 )
4942	Assert. assertEquals ( expected, input )
4943	Assert. assertEquals ( "SELECT INTERVAL '5-3' YEAR TO MONTH + INTERVAL'20' MONTH\\nFROM DUAL;\\n", text )
4944	Assert. assertTrue ( cmd. apply ( bkFlags, new String [ ] { "-l", "1", "-d", file. getAbsolutePath ( ) } ) )
4945	assertEquals ( "Wrong number of script sources", 2, sources. size ( ) )
4946	assertEquals ( this. userService. getHash ( ), this. user. getHash ( ) )
4947	assertEquals ( 281547991161788L, ceosReader. readB8 ( ) )
4948	assertEquals ( "test", tableList. get ( 0 ) )
4949	assertEquals ( remainder1, pathFoo123. remainder ( pathFooNullBar ) )
4950	assertNotNull ( sb. install ( ) )
4951	assertEquals ( "test", echo. echo ( "test" ) )
4952	assertOut ( "var a:Number = new Number(\\"1\\")" )
4953	assertEquals ( ShardConsumerState. SHUTDOWN_COMPLETE, state )
4954	assertEquals ( 2, result )
4955	assertEquals ( "UTF-8", boundary )
4956	assertTrue ( Arrays. equals ( data, wrapper. getData ( ) ) )
4957	Assert. assertEquals ( info. length, infoProxy. length )
4958	assertTrue ( conf. isAsrMRT ( ) )
4959	Assert. assertTrue ( "Substituted message should be lunch", logRecord. getFormattedMessage ( ). contains ( "lunch" ) )
4960	assertThat ( service. getSoftlinksForCpi ( cpiResource ). isEmpty ( ), is ( true ) )
4961	assertTrue ( 10 > IterableUtils. countNodes ( getDatabase ( ) ) )
4962	arrays. assertHasSize ( description, null, 8 )
4963	assertEquals ( ( Double ) 3.5d, getTarget ( results, "second_level" ) )
4964	assertEquals ( false, mockResult. included ( "isUserWatchingTopic" ) )
4965	assertThat ( time, equalTo ( 50000 ) )
4966	assertThat ( page. singleSelectWithSelection. getAllSelectedValues ( ), contains ( "1", "3" ) )
4967	assertNull ( "Date parsing is wrong", mapper. readBitemporalDate ( new Columns ( ), "tt_to" ) )
4968	assertNull ( convSessionId )
4969	Assert. assertEquals ( "{\\"at\\":\\"1930-09-04T00:03:48.750431006Z\\"}", os. toString ( ) )
4970	assertTrue ( avroSchema!= null )
4971	assertEquals ( 2, locales. size ( ) )
4972	Assert. assertSame ( edit, pa. getAccessLevel ( COLLABORATOR ) )
4973	assertEquals ( cv, cv2 )
4974	Assert. assertEquals ( xmlEsperado, nfNotaInfoICMSTotal. toString ( ) )
4975	assertTrue ( "Incorrect mapping of property with annotated field", actual. indexOf ( "property-1: value1\\r\\n" ) >= 0 )
4976	assertThat ( foundThread, is ( Optional. of ( thread ) ) )
4977	assertEquals ( 4, exceptions )
4978	Assert. assertEquals ( set ( e, f ), presenceDao. getSubdirectories ( a ) )
4979	assertEquals ( 0.0f, executeTestMethod ( test, Float. class, null, - 1f ). floatValue ( ), 0.0f )
4980	assertThat ( actualJson, is ( expectedJson ) )
4981	assertTrue ( "index threads didn't complete", failTime. get ( ) > now + threads )
4982	assertEquals ( HTTP_RESPONSE_MESSAGE, inMessage. get ( HTTPConduit. HTTP_RESPONSE_MESSAGE ) )
4983	Assert. assertTrue ( "Unable to fetch module update url: " + url, updateRdf. contains ( "<updates" ) )
4984	assertNotNull ( result )
4985	Assert. assertArrayEquals ( bytes, bytes2 )
4986	assertThat ( ( Enum ) criterion. convertValueForDatastore ( SortDirection. ASCENDING ), hasItem ( "ASCENDING" ) )
4987	assertEquals ( "((ENTITY_ID is_null  OR ENTITY_ID!= " + userId + ") AND ((ID = " + userId + " AND (ACTUALOWNER =  OR ACTUALOWNER is_null )) OR ACTUALOWNER = " + userId + "))", dataSetLookup. getFirstFilterOp ( ). getColumnFilterList ( ). get ( 0 ). toString ( ) )
4988	assertTrue ( "flux vide", output. size ( ) > 0 )
4989	assertEquals ( 0, healthMessages. size ( ) )
4990	assertEquals ( "b", toml. getString ( "target.'cfg(unix)\\".dependencies.b" ) )
4991	assertMockEndpointsSatisfied ( )
4992	assertResultSet ( res )
4993	assertEquals ( 0, victim. readNumber ( ) )
4994	assertEquals ( "serverName", settings. getServerName ( ) )
4995	assertThat ( feature. getType ( ), is ( CrsType. CH1903 ) )
4996	assertThat ( other, DateMatchers. sameSecond ( date ) )
4997	assertNotNull ( company )
4998	assertTrue ( result. get ( ) )
4999	assertEquals ( "'a'b'c',xyz", sw. toString ( ) )
5000	assertTrue ( check ( input, output ) )
5001	assertEquals ( 0, result. getMessageCount ( ) )
5002	assertEquals ( 2, s. getRequiredSkills ( ). values ( ). size ( ) )
5003	assertTrue ( set. contains ( tuple ) )
5004	assertEquals ( expected, actual )
5005	assertEquals ( "There should be one file", 1, files. length )
5006	assertEquals ( expected, rmc. getCorrectedCourse ( ), 0.01 )
5007	assertTrue ( "failed to stat file", st!= null && st. isFile ( ) )
5008	assertTrue ( cause instanceof RuntimeException )
5009	assertThat ( component. getWorkflowUrl ( ), is ( "http://myfolder/Workflow/jobName/" + expectedName ) )
5010	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "wmfImageTest01.pdf", sourceFolder + "cmp_wmfImageTest01.pdf", destinationFolder, "diff_" ) )
5011	assertThat ( targetSchema. getViewHashes ( ), is ( empty ( ) ) )
5012	assertEquals ( "CREATE TABLE \\"CATALOG_NAME\\".TABLE_NAME (COLUMN1_NAME BIGINT IDENTITY NULL)", generatedSql [ 0 ]. toSql ( ) )
5013	assertTrue ( getNoErrorMsg ( ), result )
5014	assertNumEquals ( DoubleNum. valueOf ( 2 ), cost )
5015	Assert. assertEquals ( ticketId, ticket. getTicketString ( ) )
5016	assertEquals ( 10, toTest. available ( ) )
5017	assertEquals ( v, v2 )
5018	assertEquals ( "GLOBE_EARTH", v. getPrecision ( ) )
5019	assertEquals ( 1, clusters. size ( ) )
5020	assertSame ( expected, proxy )
5021	assertThat ( monthsStartWith_M. values ( ), contains ( "June", "July" ) )
5022	Assert. assertEquals ( bitField. getStartElapsedEncodingStrategy ( ), StartElapsedTimeEncodingStrategy. PREV_DELTA )
5023	assertEquals ( id, db. getLongValue ( id, LONG_STORED_FILED_NAME ) )
5024	Assert. assertEquals ( 4, vertices. size ( ) )
5025	assertEquals ( graphIds. size ( ), elementMock. getGraphCount ( ) )
5026	assertTrue ( result. getSuccess ( ) )
5027	assertEquals ( 2, fired )
5028	assertContains ( "testRTFWithCurlyBraces.rtf", content )
5029	assertEquals ( testResource1, testResource2 )
5030	Assert. assertNull ( concept. getShortestName ( Locale. US ) )
5031	assertEquals ( mockResponse, testResponse )
5032	assertEquals ( "10078668", user. getId ( ) )
5033	assertThat ( displayableGoal, is ( new DisplayableGoal ( "project1", "phase1", "goal1", "dep1 dep2", 0, 16, 32 ) ) )
5034	Assert. fail ( "Should have Assert.failed on the third parameter to 'ends-with' not " + "being bound." )
5035	assertFalse ( problem )
5036	assertTrue ( handler. isBuffering ( ) )
5037	assertThat ( getterMethod. getReturnType ( ). getName ( ), is ( "java.lang.String" ) )
5038	assertEquals ( "aTestString", classUnderTest. getDatabaseSize ( ) )
5039	Assert. assertEquals ( r. asNode ( ), query. getParam ( "s" ) )
5040	assertEquals ( "Hello <b>there</b>!", TextUtil. stripNewlines ( cleanHtml ) )
5041	assertTrue ( endState )
5042	assertTrue ( checker. cleanupCalled )
5043	assertEquals ( "(| [= foo] [= bar] [= baz])", m. toString ( ) )
5044	assertActive ( player1, player2 )
5045	Assert. assertEquals ( 0, errors. size ( ) )
5046	assertThat ( hostConfig. restartPolicy ( ), is ( HostConfig. RestartPolicy. onFailure ( ) ) )
5047	assertTrue ( actual. isEmpty ( ) )
5048	assertEquals ( "Wrong number of members", MAX_ITEMS, groupMembers. size ( ) )
5049	assertEquals ( settingsA. hashCode ( ), settingsB. hashCode ( ) )
5050	assertTrue ( ContractRegistry. INSTANCE. isContractClass ( targetClass, contractClass ) )
5051	Assert. assertNull ( foundTenant )
5052	assertThat ( result, is ( false ) )
5053	Assert. assertFalse ( context. getResult ( ) )
5054	assertEquals ( 1d, t [ 0 ], 0.00001 )
5055	Assert. assertEquals ( "a", qy. get ( 0 ) )
5056	assertEquals ( "aTestString", classUnderTest. getProcedureSeparator ( ) )
5057	assertEquals ( strings [ 0 ], bundleString )
5058	assertThat ( formatterOutput, is ( "file:path/test.feature:4\\n" ) )
5059	assertThat ( status. code, is ( HttpURLConnection. HTTP_BAD_REQUEST ) )
5060	Assert. assertEquals ( "chrome", provider. getPropertyValue ( mockServletRequest ) )
5061	assertThat ( isTransactionRelated, is ( false ) )
5062	assertTrue ( ScriptTestUtil. scriptIsInstanceOfScript ( testScript, expectedScript ) )
5063	assertEquals ( "[foo] did not satisfy [" + StartsWith. startsWith ( "d" ) + ']', expected. getMessage ( ) )
5064	assertEquals ( shareLibService. getShareLibId ( ), shareLibService. getShareLibId ( ) )
5065	assertNotNull ( result )
5066	assertSingleReplacement ( tokenIterator, "{foo}", "bar", "baz" )
5067	assertEquals ( 11, p. getTotalPages ( ) )
5068	assertEquals ( "gt0100", code )
5069	Assert. assertNotNull ( entry1 )
5070	assertEquals ( 1, beans. size ( ) )
5071	assertNotNull ( result )
5072	assertEquals ( e. getAttribute ( "name" ), "5" )
5073	assertEquals ( "msg1, msg2", RuleMatchUtils. getTextFromMatches ( matches ) )
5074	assertEquals ( modifyAliases1, modifyAliases1Duplicate )
5075	assertEquals ( l. size ( ), 0 )
5076	Assert. assertEquals ( expected, actual )
5077	assertFalse ( constraint. fulfilled ( iContext ) )
5078	Assert. assertEquals ( null, vo )
5079	assertEquals ( "http://foo.bar.com/fu/bar?_a=b&c=d,e", eu. generateParentURL ( ). toString ( ) )
5080	assertThat ( messages, contains ( RustParseMessage. fromSourceFile ( modFile ) ) )
5081	assertAccessForbidden ( client )
5082	assertThat ( description. toString ( ), startsWith ( "a stage that completed exceptionally with java.io.IOException: error" ) )
5083	assertEquals ( 1, stat. getSize ( ) )
5084	assertEquals ( "test", res. get ( ) )
5085	Assert. assertTrue ( response. contains ( "<out>BmwTesting enhanced REST Feature relative mapping</out>" ) )
5086	assertEquals ( "AdWordsLibConfiguration.properties", config. getProperty ( ) )
5087	assertTrue ( p. isPresent ( ) )
5088	assertCorrectPropertyPathStringRepresentations ( constraintViolations, "addressesPerCity[Lyon]" )
5089	assertMockEndpointsSatisfied ( )
5090	assertThat ( driver. findElement ( By. id ( "message" ) ). getText ( ), is ( "User1 is not a valid user" ) )
5091	context. assertEquals ( context, sha512, aVoid2. result ( ) )
5092	assertTrue ( okstate. get ( ) )
5093	assertProcessInstanceCompleted ( processInstance )
5094	assertEquals ( "OK", status )
5095	assertTrue ( events. size ( ) == 5 )
5096	assertTrue ( "Wrong simplified filter: " + simplified, simplified instanceof NoneFilter )
5097	assertThat ( listener. awaitCompletion ( 0, TimeUnit. MINUTES ), is ( true ) )
5098	assertEquals ( "{\\"d\\":{\\"Age\\":42}}", StringHelper. inputStreamToString ( ( InputStream ) response. getEntity ( ) ) )
5099	assertEquals ( newName, namedClusterService. newNamedCluster ( variableSpace, iMetaStore, shell ) )
5100	assertLog ( Log. VERBOSE, "test trace argument argument2 argument3", exception )
5101	assertFocused ( c42 )
5102	arrays. assertContainsOnly ( description, actual, other )
5103	assertNotNull ( tutor )
5104	Assert. assertEquals ( "�����������������������������������������������������������������������������������
5105	assertEquals ( uuid, SouthboundMapper. extractNamedUuid ( uuid ) )
5106	assertThat ( subject. doAnyPeopleHaveCats ( predicate ), is ( true ) )
5107	Assert. assertEquals ( 40, bh. decodeXml ( multiValuedAttribute, null, null ) )
5108	assertSame ( expectedResult, result )
5109	assertNotNull ( entity. getId ( ) )
5110	arrays. assertContainsOnly ( description, actual, value, null )
5111	assertTrue ( registry. isEmpty ( ) )
5112	assertEquals ( "S�owacki", book. getTitle ( ) )
5113	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. EDIT, this. doc ) )
5114	Assert. assertEquals ( m, support. convert ( m ) )
5115	assertEquals ( "Unexpected primary style name", "v-option-group", state. primaryStyleName )
5116	Assert. assertEquals ( 4, root. left. right. data. intValue ( ) )
5117	Assert. assertThat ( properties. size ( ), IsEqual. equalTo ( 1 ) )
5118	assertValueModelFires ( model, interval, expected )
5119	assertResultSet ( res )
5120	assertNotNull ( SupportingDocumentType. reader ( ). read ( ) )
5121	assertTrue ( plan. contains ( "- Node Output Rows: 1" ) )
5122	assertEquals ( expected, actual )
5123	assertThat ( this. requestMap, hasKey ( "page" ) )
5124	assertEquals ( inputRA. get ( ). get ( ), cursor. get ( ). get ( ), 0 )
5125	assertEquals ( "The output should be the same", expectedOutput, chksumChannel. getOutput ( ) )
5126	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), hasEnvVar ( "STARTUP_MODE", ADMIN_STATE ) )
5127	assertEquals ( 3, count )
5128	Assert. assertTrue ( false )
5129	assertAnnotations ( 2, Agency. class, new TestAgency ( 0, "armoured vehicle", "UAV" ), new TestAgency ( 1, "can't see it", "UAV" ) )
5130	assertEquals ( "Usage: man [<options>]" + getLineSeparator ( ) + "[OPTION...]" + getLineSeparator ( ) + getLineSeparator ( ) + "Options:" + getLineSeparator ( ) + "  -d, --debug    emit debugging messages" + getLineSeparator ( ) + "  -D, --default  reset all options to their default values" + getLineSeparator ( ), clp. printHelp ( ) )
5131	Assert. fail ( "MessageConversionException should have been thrown" )
5132	assertEquals ( exceptions, repository. findByException ( "Exception1" ). getList ( ) )
5133	assertEquals ( 0, result )
5134	assertEquals ( new Character ( 'a' ), ctxt. getCompositeElementSeparator ( ) )
5135	assertEquals ( expected, actual )
5136	assertEquals ( repeats, counter. get ( ) )
5137	assertNull ( array )
5138	assertThat ( representation, is ( notNullValue ( ) ) )
5139	assertEquals ( historyTimeToLive, activity. getHistoryTimeToLive ( ) )
5140	assertEquals ( 50, bean. number. getValue ( ) )
5141	context. assertEquals ( "toast", ar. body ( ). string ( ) )
5142	assertThat ( data. getStreq ( ), is ( "test" ) )
5143	assertTrue ( aNumber. signum ( ) == 0 )
5144	assertEquals ( expected, dbMeta. getFieldDefinition ( valueMeta, null, null, false, false, false ) )
5145	assertEquals ( "Basic", basic. getName ( ) )
5146	assertNotNull ( User. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
5147	assertThat ( "testSetPlace 0", mv. getPlace ( ), equalTo ( place ) )
5148	assertEquals ( 2, evaluateStartConditions. size ( ) )
5149	Assert. assertEquals ( 3, path. getShapes ( ). size ( ) )
5150	Assert. assertEquals ( "the dog and the woman kicks the dog behind the curtain", this. realiser. realise ( aggregated ). getRealisation ( ) )
5151	assertPointArrayArrayEquals ( expected, actual )
5152	assertTrue ( step. configure ( stepConfig ) )
5153	assertEquals ( "V8ScriptExecutionException[null,4,null,4,6,null,4,6,null,4,6,null,4,6,null,4,6,null]", exceptionWithNulls. toString ( ) )
5154	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
5155	Assert. assertTrue ( "output contains exception",! listOutput. contains ( "Exception" ) )
5156	assertEquals ( "Bbb", aaa. getBb ( ) )
5157	assertEquals ( "CompoundInterest{\\n" + " RateAndPeriods{\\n" + "  rate=Rate[0.05]\\n" + "  periods=100}}", ci. toString ( ) )
5158	Assert. assertNull ( RpcUtils. getInvocationId ( inv ) )
5159	assertTrue ( mediator. changeNick ( " Amy " ) )
5160	assertArrayEquals ( test, getInputStream ( ). readLittleFloatArray ( test. length ), 0.00001f )
5161	assertFalse ( txNew. isPresent ( ) )
5162	assertEquals ( expected, actual )
5163	assertThat ( results, hasSize ( 2 ) )
5164	assertArrayEquals ( GPUVec. convert ( mxResult. toArray ( ) ), transpose. toArray ( ), 0.01 )
5165	Assert. assertEquals ( 11, patientCount )
5166	assertEquals ( expected, result )
5167	assertEquals ( 0, sessionID. size ( ) )
5168	assertEquals ( "2016-03-01T10:00:00Z", graph. get ( "http://example.com/test/lastModified" ). toString ( ) )
5169	assertThat ( taskLogOnlyTaskLogger. getLogLocation ( ), is ( equalTo ( TASK_LOG_LOCATION_PREFIX + TASK_NAME ) ) )
5170	assertEquals ( "dd-MMM-yyyy", format. format ( config. getValue ( StringDateTimeModel. DATETIME_FORMAT_CONFIG ) ) )
5171	assertEquals ( 1, users. size ( ) )
5172	assertEquals ( DEFAULT_COMMITTER_EMAIL, presenter. getDefaultCommitterEmail ( ) )
5173	assertEquals ( defaultTimeZone, defaultTimeZone2 )
5174	assertThat ( formatterOutput, sameJSONAs ( expected ) )
5175	assertEquals ( expResult, result )
5176	assertEquals ( diff, result. intValue ( ) )
5177	assertSuccess ( result )
5178	Assert. assertEquals ( "testuser1", username )
5179	assertEquals ( "Hello", retObj )
5180	assertEquals ( fakeResolver, factory. newNameResolver ( new URI ( "aaa://foo" ), Attributes. EMPTY ) )
5181	assertEquals ( 1, correlatedExecutions )
5182	assertTrue ( ex. isPrime ( 71 ) )
5183	assertFalse ( arr. some ( callbackfn ) )
5184	assertEquals ( "", result )
5185	assertThat ( serialisedBadgesDetailsOf ( job ), is ( nullValue ( ) ) )
5186	assertDropdownIsBelow ( )
5187	assertEquals ( "some value we don't care", target. anotherProperty )
5188	assertOut ( "for each (var i:int in obj)\\n\\tbreak;" )
5189	assertNull ( tuple. getMap ( "field" ) )
5190	assertThat ( m, arrayWithSize ( 2 ) )
5191	assertTrue ( ulonglongValue. longValue ( ) == - 1000000000L )
5192	assertThat ( children, containsInAnyOrder ( clsE ) )
5193	Assert. assertEquals ( String. format ( "a %s text", this. html ( bb, "red", "colored" ) ), formatter. format ( "a [color=\\"red\\"]colored[/color] text", defaultOptions ( ) ) )
5194	assertEquals ( "Response body is not correct.", USER_IN_DEFAULT_REALM, Utils. makeCallWithBasicAuthn ( principalServlet ( webAppURL ), USER_IN_DEFAULT_REALM, CORRECT_PASSWORD, SC_OK ) )
5195	assertTransformedText ( normalizedText, inputText, "de", segmenter, normalizer )
5196	assertTrue ( d1 instanceof PublicCloneable )
5197	assertEquals ( BigInteger. valueOf ( 2 ), gcd )
5198	assertEquals ( CodecSupport. toString ( Base64. decode ( EX_12_SUFFIX, true ) ), plaintext )
5199	assertEquivalent ( bufferB, new Buffer ( ) )
5200	assertFalse ( df. isAvailable ( ) )
5201	assertEquals ( "[1]", builder. toString ( ) )
5202	assertEquals ( PaxDate. of ( 2012, 13, 5 ), test )
5203	assertThat ( axioms. isEmpty ( ), is ( false ) )
5204	assertEquals ( 10, musicPlayer. getSongCount ( ) )
5205	Assert. assertEquals ( "[:d = document.type = :d]", p. q ( ) )
5206	assertTrue ( diff. toString ( ), diff. similar ( ) )
5207	assertEquals ( 0, SolutionListUtils. findIndexOfBestSolution ( list, comparator ) )
5208	Assert. assertEquals ( 6, total )
5209	assertThat ( xml, containsString ( "<div class=\\"edifact-document\\">" ) )
5210	assertEquals ( ( short ) 123, deserialize. readShort ( ) )
5211	Assert. assertEquals ( "(aa_change_ssr (aa_point_location (aa_char C) 123) ( aa_char A) 124) ( 3 _ 4 ))", aa_change_ssr. toStringTree ( parser ) )
5212	assertEquals ( expected, converted )
5213	assertEquals ( testUser, userListController. getUser ( 1235 ) )
5214	assertFalse ( ic. outgoingResponse ( reqDetails, new ResponseDetails ( resource ), req, resp ) )
5215	Assert. fail ( "an exception should have been thrown" )
5216	assertNotNull ( Daily. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
5217	listener. assertEventFired ( new SortOrder ( "foo", SortDirection. ASCENDING ) )
5218	assertEquals ( 2, res. getInt ( "nbHits" ) )
5219	Assert. assertNotNull ( manager )
5220	assertEquals ( savedAppModule, applicationModule )
5221	Assert. assertTrue ( isEqual ( d1, d2 ) )
5222	Assert. assertEquals ( Arrays. asList ( new BooleanValue ( true ), new BooleanValue ( true ), new FloatValue ( 4.3 ), new NullValue ( ) ), res. getValues ( ) )
5223	assertEntityCount ( 1, entity, TEST_CONNECTION_ID )
5224	assertEquals ( 0.0267, density,.001 )
5225	Assert. assertEquals ( 2, resultList. size ( ) )
5226	assertEquals ( "1.0.2", subject. getVersion ( ) )
5227	assertEquals ( t, new HttpURL ( s ). toString ( ) )
5228	Assert. assertEquals ( false, retval )
5229	Assert. assertEquals ( "Jumps", result )
5230	assertEquals ( "Boolean value does not match", bookmark. isRead ( ), loadedBookmark. isRead ( ) )
5231	assertThat ( records. size ( ), is ( 1 ) )
5232	Assert. assertEquals ( 210, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
5233	assertEquals ( mockResponse, testResult )
5234	assertions. containsSequence ( null )
5235	assertThat ( HibernateSettings. class, hasValidGettersAndSettersExcluding ( excludeProperties ) )
5236	assertEquals ( "123", servant. getResult ( ) )
5237	assertThat ( domainPermission. toString ( ), is ( systemPermissionName ) )
5238	assertEquals ( 7, s1. getClausesCount ( ) )
5239	assertNotNull ( template )
5240	assertEquals ( "http://127.0.0.1:9997", httpRequestBuilder. getProxy ( ) )
5241	assertTrue ( set. isEmpty ( ) )
5242	assertThat ( result, is ( authors ) )
5243	assertNull ( drug )
5244	assertEquals ( mvj. get ( "BlockNotSet" ), "false" )
5245	assertEquals ( newService, newRegister. get ( "test/dubbo.test.api.HelloService:1.0.0" ) )
5246	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 04" ) )
5247	assertEquals ( 0, duration. getSeconds ( ) )
5248	assertFalse ( deserialize ( toTest, "true" ) )
5249	assertSame ( target, root. getThis ( ) )
5250	Assert. assertEquals ( expected, actual )
5251	assertEquals ( testPlan1. getActualOutput ( ), testPlan2. getActualOutput ( ) )
5252	assertEquals ( expectedScriptNode, actualScriptNode )
5253	Assert. assertEquals ( getUrl ( "" ), finalURL )
5254	assertEquals ( "http://www.google.com/search?q=http%3A%2F%2Fwww.google.com%2Fsearch&q=http%3A%2Fwww.google.com%2Fsearch&q=http%3A%2Fwww.google.com%2Fsearch&q=http%3A%2Fwww.google.com%2Fsearch&q=http%3A%2Fwww.google.com%2Fsearch&q=http%3A%2Fwww.google.com%2Fwww.google.com%2Fsearch&q=http%3A%2Fwww.google.com%2Fsearch&q=http%3A%2Fwww.google.com%2Fsearch&q=http%3A%2Fwww.google.com%2Fsearch&q=http%3A%2Fwww.google.com%2Fsearch&q=http%3A%2Fwww.google.com%2Fwww.google.com%2Fsearch&q=http%3A%2Fwww.google
5255	assertThat ( resources, contains ( orgId, parentOrgId ) )
5256	assertGraphTail ( expected, received )
5257	assertThat ( encoded, stringContainsInOrder ( "<MedicationRequest xmlns=\\"http://hl7.org/fhir\\">", "<contained>", "<Medication xmlns=\\"http://hl7.org/fhir\\">", "<id value=\\"123\\"/>", "<code>", "<coding>", "<system value=\\"urn:sys\\"/>", "<code value=\\"code1\\"/>", "</coding>", "</code>", "</Medication>", "</contained>", "<medicationReference>", "<reference value=\\"#123\\"/>", "<display value=\\"MedRef\\"/>", "</medicationReference>", "</MedicationRequest>" ) )
5258	assertEquals ( JsonPathParser. DEFAULT_CAPACITY, path. capacity ( ) )
5259	Assert. assertThat ( classList. size ( ), is ( 1 ) )
5260	assertEquals ( "1", XPathAfterVisitor. saxVisitedAfterElement. getTextContent ( ) )
5261	assertEquals ( "", found )
5262	assertEquals ( expected, existing )
5263	assertTrue ( result )
5264	assertEquals ( millisecond, millisecond )
5265	assertEquals ( out, frame2 )
5266	context. assertIsSatisfied ( )
5267	assertThat ( result, is ( nullValue ( ) ) )
5268	assertNull ( "current workflow null", presenter. currentWorkflow )
5269	runner. assertNotValid ( )
5270	assertTrue ( result. isSuccess ( ) )
5271	assertEquals ( new org. apache. http. client. utils. URIBuilder ( SERVICE_ROOT + "/Categories(1)/Products/Model.AllOrders()" ). build ( ), uriBuilder. build ( ) )
5272	assertThat ( result, hasItems ( testTeam. emil, testTeam. david ) )
5273	assertThat ( duration. dividedBy ( 1 ), equalTo ( TimeDuration. ofSeconds ( 0.5 ) ) )
5274	assertTrue ( "isPresent should return true if no specific requirement limit is specified for" + " for a list that has at least a single element present.", view. isPresent ( ) )
5275	assertEquals ( TEST_XML, prettyPrintedXml )
5276	assertEquals ( 1, list. size ( ) )
5277	UnitTestUtils. assertEquals ( "MatrixUtils.inverse() returns wrong result", MatrixUtils. createRealIdentityMatrix ( data. length ), result, Math. ulp ( 1d ) )
5278	assertTrue ( "Driver info can't be empty",! driverInfo. isEmpty ( ) )
5279	assertFalse ( isHurricaneSeason )
5280	assertEquals ( count, metric. getCount ( ) )
5281	assertEquals ( "category", request. getEventCategory ( ) )
5282	assertEquals ( spec. getModuleId ( ), substituter. getModuleId ( ) )
5283	assertFalse ( resultMessage ( result, HttpRequestType. POST ), result. passedValidation ( ) )
5284	assertEquals ( "x,y", cs. execute ( ssc ) )
5285	Assert. assertEquals ( doppler_EXPECTED, doppler_ACTUAL, eps_01 )
5286	assertThatSql ( query, is ( "SELECT * FROM table AS nodes WHERE CONTAINS(nodes.property,'expression')" ) )
5287	assertEquals ( "skipAllPlan", skip. getName ( ) )
5288	assertEquals ( inputString, outputString )
5289	Assert. assertEquals ( "涓��戒汉姘��惰�", words )
5290	assertThat ( options. toJSON ( ), is ( ( JsonElement ) json ) )
5291	assertEquals ( Object. class. getSimpleName ( ), result )
5292	assertEquals ( expected, actual )
5293	assertEquals ( "(boo 34)\\n", found )
5294	assertEquals ( jedisCluster. get ( "foo" ), "bar" )
5295	assertEquals ( Port. Range. LIST, net. getOutputRanges ( ) )
5296	resultListener. assertTestCasePassed ( )
5297	Assert. assertEquals ( "preliminary end of stream", bytes. length / 4, i )
5298	assertEquals ( prevDate, DateUtils. getPrevDay ( theDate ) )
5299	assertRows ( filePath, 1, TEST_COLUMNS )
5300	Assert. assertEquals ( - 1, comparator. compare ( id1, id2 ) )
5301	assertThat ( e. getClass ( ). getName ( ), is ( AuthAccessDeniedException. class. getName ( ) ) )
5302	assertThat ( actual, is ( equalTo ( expected ) ) )
5303	assertThat ( errors. toString ( ), containsString ( "No issues" ) )
5304	assertEquals ( "S:12", x. toString ( ) )
5305	Assert. assertEquals ( range. getQualifyingPageNums ( 10 ), Arrays. asList ( 5 ) )
5306	assertEquals ( HttpServletResponse. SC_INTERNAL_SERVER_ERROR, responseWrapper. getStatusCode ( ) )
5307	assertEquals ( OrderBy. FWD_ROW_KEY_ORDER_BY, plan. getOrderBy ( ) )
5308	assertThat ( getter. invoke ( instance ), is ( true ) )
5309	assertThat ( fakeValues. get ( PATH ), is ( notNullValue ( ) ) )
5310	assertFalse ( appender. isStarted ( ) )
5311	assertEquals ( "A.1.0-export", test )
5312	assertTrue ( solution. getAttributes ( ). isEmpty ( ) )
5313	assertOut ( "a.removeChild('child')" )
5314	assertEquals ( view, viewName )
5315	assertEquals ( expectedArray, actualArray )
5316	assertThat ( managementService. createJobDefinitionQuery ( ). jobDefinitionId ( jobDefinition. getId ( ) ). singleResult ( ). getOverridingJobPriority ( ), is ( 1701L ) )
5317	assertEquals ( "", result )
5318	Assert. assertEquals ( "<div class=\\"htmlform\\">This shows a logic test for a man</div>", session. getHtmlToDisplay ( ) )
5319	assertTrue ( response. getNumberOfFeatures ( ). intValue ( ) == 2 )
5320	assertEquals ( "echo xpto1", retrievedParent. getName ( ) )
5321	assertThat ( ritaBirthdate. getText ( ), is ( "Birthdate" ) )
5322	assertThat ( options. getGlue ( ), is ( equalTo ( new GluePath ( "com.example.steps" ) ) ) )
5323	assertArrayEquals ( expectedOffsetValues, actualOffsetValues, 1e-10 )
5324	assertTrue ( "No 'administrator' in " + home, home. contains ( "administrator" ) )
5325	assertThat ( specificResourceAllocation. getAssignments ( ), haveHours ( 4, 8, 4, 4, 3 ) )
5326	Assert. assertEquals ( 1, forumToChange. getDisplayOrder ( ) )
5327	Assert. assertTrue ( ( scopePath. findScopeByName ( ClassScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( CodeDefaultScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( ClassScopeDescriptor. NAME ). containsAllProperties ( properties ) ) )
5328	assertEquals ( 2, processInstances. size ( ) )
5329	assertEquals ( 12, dt. intValue ( ) )
5330	assertThat ( key. getVersion ( ), is ( "1.1.0" ) )
5331	assertEquals ( Status. WARN, jxm. getStatus ( ) )
5332	assertThat ( converter. convert ( formattedToday, Date. class, bundle ), is ( equalTo ( date ) ) )
5333	assertions. isNotEqualTo ( actual )
5334	assertThat ( stream ( extract ). filter ( v -> v == SPECIFIC_VALUE ). count ( ), is ( Long. valueOf ( extract. length ) ) )
5335	assertTrue ( appender. isStarted ( ) )
5336	assertTrue ( status == 0 )
5337	Assert. fail ( "Not valid" )
5338	assertEquals ( "LINESTRING (0 0, 1 3)", ClobType. getString ( ( ClobType ) Evaluator. evaluate ( ex ) ) )
5339	assertTrue ( instance. verify ( signature ) )
5340	assertEquals ( expected, uri. toString ( ) )
5341	assertEquals ( 1, recordWriter. getCount ( ) )
5342	assertEquals ( YarnApplicationAttemptState. NEW, applicationAttempt. createApplicationAttemptState ( ) )
5343	objects. assertIsEqualToIgnoringNullFields ( someInfo ( ), actual, other, noFieldComparators ( ), defaultTypeComparators ( ) )
5344	assertEquals ( timeInstant. getTimeMode ( ), TimeInstant. TimeMode. END )
5345	assertEquals ( text, SQSMessagingClientUtil. deserializePropertyName ( serialize ) )
5346	assertEquals ( expecteds, actuals )
5347	assertRequest ( "GET", "Powerpack/", params )
5348	assertThat ( actual. stream ( ). map ( ValidationResult :: getExplanation ). collect ( Collectors. toList ( ) ), hasItem ( containsString ( "the current service cannot be registered as a " + SERVICE_TYPE. getSimpleName ( ) + " to lookup" ) ) )
5349	Assert. assertEquals ( 501, response. getStatus ( ) )
5350	assertEquals ( shortForm, sfp. getShortForm ( root ) )
5351	assertTrue ( new Matcher ( ). matchExecuteInstance ( output, ei ) )
5352	assertEquals ( get ( "propIsTrue" ), actual )
5353	assertEquals ( "Wrong number of fields", 4, fields. size ( ) )
5354	assertEquals ( asList ( warn ( mdcValues, marker, throwable, message, args ) ), testLogger. getLoggingEvents ( ) )
5355	assertServiceEvent ( ServiceEvent. REGISTERED, TestService. class, 5, TimeUnit. SECONDS )
5356	assertNode ( "/sequenced/teiid/vdbs/YahooUdfTest", "vdb:virtualDatabase", "mix:referenceable", "mode:derived" )
5357	assertTrue ( checkPoint )
5358	assertFalse ( history. isStepBackwardAllowed ( ) )
5359	assertThat ( ServiceHelper. getDomainUid ( service ), equalTo ( "domain1" ) )
5360	Assert. assertTrue ( "Expect null expression: " + expr, expr. isNullExpression ( ) )
5361	assertEquals ( Arrays. < Long > asList ( 3L ), root. getChildren ( ) )
5362	Assert. assertEquals ( config, config2 )
5363	assertEquals ( "doi-10.000", work. getDoi ( ) )
5364	assertFalse ( timeTransition. isStarted ( ) || timeTransition. isFinished ( ) )
5365	assertEquals ( "RemoteAddr", entity. getRemoteAddr ( ) )
5366	assertEquals ( 2, integer. get ( ) )
5367	assertNotNull ( result )
5368	Assert. assertEquals ( 3.141592653589793, toml. getDouble ( "foo" ), 0.00001 )
5369	assertEquals ( - 1, first. compareTo ( second ) )
5370	assertThat ( request. getChargePointVendor ( ), equalTo ( stringLength20 ) )
5371	Assert. assertTrue ( EdtfPattern. YEAR_MONTH_DAY_Q. matches ( edtf ) )
5372	assertEquals ( Arrays. asList ( "foo:1234", "bar:1234" ), config. getServers ( ) )
5373	assertNotNull ( cp )
5374	assertEquals ( expResult, result )
5375	assertEquals ( 0, sibs. size ( ) )
5376	assertEquals ( "Hi ${name}!", StrSubstitutor. replacePrefixSuffix ( "Hi ${name}!", map ) )
5377	assertEquals ( "Browsertitle: Hello World!\\nButton: Action!", stringBuilder. toString ( ) )
5378	Assert. assertFalse ( "Failure expected true", r. getLeft ( ) )
5379	context. assertIsSatisfied ( )
5380	assertPhantomJSExecutablePropertyPointsToExecutableInClasspath ( resolvedPath )
5381	assertEquals ( "<lint><report><resourceLintError>null</resourceLintError></lint></report>", writer. toString ( ) )
5382	assertEquals ( "maxTime", result )
5383	assertEquals ( 1, where ( var. listProperty. get ( 1 ). directProperty. eq ( "nsprefix" ) ). list ( var ). size ( ) )
5384	assertEquals ( numBlocks, numBlocksRead )
5385	Assert. assertEquals ( 0, list. length )
5386	assertTrue ( callbackArgument. getValue ( ) )
5387	assertEquals ( registryKey. getName ( ), "test" )
5388	assertEquals ( ModificationOperation. ADD_ATTRIBUTE, modSer. getOperation ( ) )
5389	assertEquals ( rde, bd )
5390	arrays. assertDoesNotContain ( description, actual, values )
5391	assertEquals ( obj. toString ( ), "LSAPR_POLICY_PRIMARY_DOM_INFO{DomainName:null, DomainSid:null}" )
5392	assertEquals ( field. getXrefEntity ( ), xrefEntity )
5393	assertThat ( isValid, is ( false ) )
5394	assertEquals ( i, test. getValue ( ) )
5395	assertEquals ( 100, storage. size ( ) )
5396	assertTagsetMapping ( files )
5397	assertEquals ( expectedResult, actualResult )
5398	assertEquals ( false, ExclusionTriggers. ShouldTriggerOnListOfFiles ( "dir_1", "dir_2", changedfilespath ) )
5399	assertPattern ( info, "endpoint-api/getList" )
5400	assertEquals ( "2.12345 41.123456,2.12345 41.123457,2.12346 41.123461", location. toString ( ) )
5401	assertEquals ( obj. toString ( ), "SAMPR_USER_ALL_INFORMATION{UserId:50,PrimaryGroupId:100,UserName:\\"UserName1\\",FullName:\\"FullName1\\"}" )
5402	assertArrayEquals ( result, CompactEncoder. binToNibbles ( test ) )
5403	assertThat ( formatter. format ( PlainDate. of ( 1752, 9, 13 ) ), is ( "(2) September 1752 n. Chr." ) )
5404	Assert. assertEquals ( expResult, result )
5405	assertThat ( client. getMongoUri ( ), is ( "mongodb://localhost:27017/test" ) )
5406	assertThat ( retrievedPost, is ( equalTo ( post ) ) )
5407	assertValues ( presentFieldList, actual )
5408	assertTrue ( resultString. contains ( "Sonar-Auth: Basic " ) )
5409	assertNotNull ( image )
5410	assertThat ( replaced, is ( sameInstance ( change ) ) )
5411	assertFalse ( testPropertyLoader. properties. isEmpty ( ) )
5412	assertThat ( result, is ( instanceOf ( Success. class ) ) )
5413	assertThat ( target. getEdgeActions ( "node1" ), is ( actions ) )
5414	Assert. assertEquals ( now. toString ( ), string )
5415	assertFalse ( resolver. supportsParameter ( param ) )
5416	assertEquals ( "should get right result", jsonResult, json )
5417	runner. assertAllFlowFilesTransferred ( DeleteS3Object. REL_SUCCESS, 1 )
5418	assertNotNull ( job )
5419	assertTrue ( matcher. match ( msg, rule ) )
5420	assertThat ( parser. parse ( builder. build ( ) ), equalTo ( parser. parse ( json ) ) )
5421	assertNull ( credentialManager. getKeyPair ( alias ) )
5422	assertFalse ( userWrapperDaoService. isUserActive ( user ) )
5423	assertEquals ( data, new String ( result. array ( ), "UTF-8" ) )
5424	assertPermanentCount ( playerB, "Damping Sphere", 1 )
5425	assertTrue ( comparePomFiles ( reactorProjects ) )
5426	assertEquals ( expectedQuery, actualQuery )
5427	rule. assertScenarioEnded ( )
5428	assertEquals ( second, sut )
5429	Assert. assertThat ( methodMatcher. matches ( methodInvocationTree ), is ( false ) )
5430	Assert. fail ( "Shouldn't be able to update dataset with wrong name!" )
5431	assertThat ( ListNumbers. toListNumber ( array ), equalTo ( ( ListNumber ) new ArrayDouble ( array ) ) )
5432	assertEquals ( decoded. publicKey, publicKey )
5433	assertEquals ( "!Proxy!" + servletName + "JSESSIONID=1234;path=" + servletPath, rsp. getHeaderField ( "Set-Cookie" ) )
5434	Assert. assertTrue (! file. exists ( ) )
5435	assertEquals ( "Expected 0 results!", 0, n )
5436	assertEquals ( "Wrong property value (path=" + path + ")", USER_JACK_POLYNAME_ORIG, found )
5437	Assert. assertTrue ( unitMoveIntents. isVectorClaimableBy ( VEC_23_23, entityTwo ) )
5438	assertThat ( noOfSolutions, is ( 17 ) )
5439	assertTrue ( output. contains ( TEST_ZK_NODE + Zkrw. DEFAULT_LIST_DELIMITER ) && output. contains ( TEST_ZK_CHILD1_NODE + Zkrw. DEFAULT_LIST_DELIMITER ) && output. contains ( TEST_ZK_CHILD2_NODE + Zkrw. DEFAULT_LIST_DELIMITER ) && output. contains ( TEST_ZK_GRANDCHILD_NODE + Zkrw. DEFAULT_LIST_DELIMITER ) )
5440	assertThat ( request. getIdTag ( ), equalTo ( idTag ) )
5441	assertEquals ( "table[col1=value1, col2=value2]", builder. toString ( ) )
5442	assertNotNull ( tag )
5443	assertEquals ( "c1cccc2-c3ccccccc3-c12", SmiUtils. biphenylene ( smi ) )
5444	assertTrue ( true )
5445	assertThat ( modelInstance, notNullValue ( ) )
5446	assertEquals ( expResult, result )
5447	assertNotNull ( nodeMap )
5448	runner. assertValid ( cfProvider )
5449	assertSame ( e, CRestException. handle ( e ) )
5450	assertEquals ( expected, actual )
5451	assertEquals ( "decimal", shortForm )
5452	assertEquals ( ImmutableList. of ( query ( ). select ( employee. id. min ( ) ). from ( employee ). fetchFirst ( ), query ( ). union ( query ( ). from ( employee ). select ( employee. id. max ( ) ). from ( employee ). fetchFirst ( ) ). orderBy ( employee. id. asc ( ) ). fetch ( ) )
5453	assertOut ( "RoyaleTest_A.prototype.foo = function() {\\n  return React.createElement('div', null, 'Foo');\\n}" )
5454	assertEquals ( 1000, node. getEndTime ( ) )
5455	assertThat ( captures, hasSize ( 5 ) )
5456	assertEquals ( EventType. RS_ZK_REGION_FAILED_OPEN, data. getEventType ( ) )
5457	assertNotNull ( result )
5458	XMLAssert. assertXMLEqual ( "<stringParameterFilter>\\n" + "  <key>TEST</key>\\n" + "  <defaultValue>Default</defaultValue>\\n" + "  <normalize>\\n" + "    <case>UPPER</case>\\n" + "  </normalize>\\n" + "  <values>\\n" + "    <string>foo</string>\\n" + "    <string>Bar</string>\\n" + "    <string>BAZ</string>\\n" + "  </values>\\n" + "</stringParameterFilter>", xs. toXML ( filter ) )
5459	assertThat ( result, is ( false ) )
5460	assertEquals ( Permission. ASK, masterAce. getConsumerPermission ( ) )
5461	Assert. assertEquals ( - 1, compareResult )
5462	assertEquals ( BACK_LOGOUT, action. getCode ( ) )
5463	assertOut ( "/**\\n * @export\\n */\\nB.prototype.b = function() {\\n  var self = this;\\n  function c(f) {\\n  };\\n  var /** @type {Function} */ f = org.apache.royale.utils.Language.closure(this.b, this, 'b');\\n  c(f);\\n}" )
5464	assertThat ( token. getType ( ), is ( PCRELexer. NewLineSequence ) )
5465	assertEquals ( "Czesc", client. hello ( ) )
5466	assertSame ( loader, bf. getAppserverClassLoader ( ) )
5467	assertNotNull ( PropertyUtils. getProperty ( result, "auditInfo" ) )
5468	assertTrue ( resultMessage ( res, PUT ), res. passedValidation ( ) )
5469	assertThat ( "response contains a non-empty fullName", StringUtils. isNotBlank ( response. getFullName ( ) ) )
5470	assertResponse ( response, 400 )
5471	assertThat ( target. exists ( ), is ( true ) )
5472	assertThat ( longProperty, is ( equalTo ( 42L ) ) )
5473	assertEquals ( "org.talend.components.${componentNameLowerCase}.runtime.${componentNameClass}IncomingAndOutboundRuntime", runtimeInfo. getRuntimeClassName ( ) )
5474	assertNotNull ( schema )
5475	Assert. assertEquals ( 0, context. error ( ). size ( ) )
5476	assertArrayEquals ( new String [ ] { "a", "ccc", "bb" }, strings )
5477	assertNull ( KeyUtils. getKey ( key ) )
5478	assertTrue ( cleanExit )
5479	assertEquals ( 0.0, p1. distanceTo ( p2 ), 0.001 )
5480	assertEquals ( "10.1234", d. getPrefix ( ) )
5481	assertErrorResponse ( response, ErrorResponse. ErrorType. INVALID_INPUT, "INVALID_ITEM_PUBLIC_TOKEN_EXCHANGE" )
5482	assertEquals ( 4, results. size ( ) )
5483	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
5484	EvictorTestUtils. assertEvictionPlanValid ( minCapacity, plan, mMetaManager )
5485	assertMockEndpointsSatisfied ( )
5486	assertEquals ( explicitList. size ( ), defaultedList. size ( ) )
5487	Assert. assertEquals ( "<table border=\\"1\\" cellspacing=\\"0\\">\\n" + "<tr>\\n" + "<th class=\\"pass\\">Col 1</th>\\n" + "</tr>\\n" + "<tr>\\n" + "<td class=\\"pass\\">A1</td>\\n" + "</tr>\\n" + "</table>", TableTestUtils. getHtml ( this. tableVerifier, "table" ) )
5488	assertTrue ( md instanceof MyDatum )
5489	assertEquals ( version, semver. toString ( ) )
5490	assertEquals ( 500, getCap. get ( 0 ) )
5491	assertEquals ( "Invalid csv", "47.5678", csvValues. get ( "lat" ) )
5492	assertEquals ( result, topicDraft )
5493	Assert. assertEquals ( "<p:foo></p:foo>", writer. toString ( ) )
5494	assertFalse ( usl. getPenStroke ( ). getDashArray ( ). equals ( "1 -5 3" ) )
5495	Assert. fail ( "Expect adding partition to fail" )
5496	assertSame ( people, result )
5497	assertFeatureValues ( expected, testQuery, testText, EXTRACTOR )
5498	Assert. assertEquals ( "Value is incorrect", map, value )
5499	assertFalse ( result )
5500	context. assertAuthzException ( statement, "USE default" )
5501	assertTrue ( lines. contains ( "longest-mention: Bill C.*" ) )
5502	assertArrayEquals ( new int [ ] { 1, 2 }, actual )
5503	assertEquals ( 0, result. size ( ) )
5504	assertEquals ( "default", processEngine. getName ( ) )
5505	assertThat ( value, is ( nullValue ( ) ) )
5506	assertArrayEquals ( new int [ ] { 0, 0, 1 }, closed )
5507	assertEquals ( 3, css. getSeverity ( ) )
5508	assertEquals ( "", Bytes. toString ( res ) )
5509	Assert. fail ( "Did not throw expected exception for " + s )
5510	assertEquals ( 4, BufferTools. indexOfTerminator ( buffer, 0, 1 ) )
5511	assertEquals ( xtreemfsValue, javaValue )
5512	assertEquals ( 2, business. findGreatest ( ) )
5513	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, query2 ) )
5514	assertEquals ( "Expected StreamEventBuilder", streamEventBuilder, eventBuilder )
5515	assertEquals ( Arrays. asList ( "aaa", "bbb", "ccc" ), topics )
5516	assertEquals ( "\\"a\\":\\"a\\",\\"b\\":\\"a\\",\\"c\\":\\"c\\"", writer. toString ( ) )
5517	assertTrue ( writer. toString ( ). contains ( "SolrException: Bad request" ) )
5518	assertCancelMessage ( actionId, controllerId )
5519	assertFalse ( cnf. evaluate ( vertex ) )
5520	assertEquals ( "alt 1\\n", found )
5521	assertNotNull ( tpmAttestation )
5522	assertEquals ( expected, result )
5523	assertNumEquals ( 0, getCriterion ( ). calculate ( series, new BaseTradingRecord ( ) ) )
5524	assertEquals ( expected, result )
5525	assertThat ( relId, is ( nullValue ( ) ) )
5526	assertEquals ( 3, lines. size ( ) )
5527	assertTrue ( axis. isTickMarksVisible ( ) )
5528	assertTrue ( presenter. viewShown )
5529	assertNotNull ( woodcuttingPlugin. getSession ( ) )
5530	assertEquals ( expectedSyncData, syncData )
5531	assertThat ( target, notNullValue ( ) )
5532	assertEquals ( s, UrlUtils. urlDecode ( encoded ) )
5533	assertEquals ( "hints", callback. getHints ( ) )
5534	assertThat ( "missing owner not detected", validation. hasErrorAbout ( "no", "owner" ) )
5535	assertEquals ( mockResponse, testResponse )
5536	assertEquals ( 3, keyspaces. size ( ) )
5537	Assert. fail ( "Missing required input" )
5538	assertSame ( new SecurityContext ( s ). getSubject ( ), s )
5539	assertEquals ( html, sanitized )
5540	assertTrue ( "Should trigger update", mockTriggeredUpdates. isEmpty ( ) )
5541	assertEquals ( 1, entityLog. size ( ) )
5542	assertHasError ( result, PlanningExecutionResult. ErrorCode. TASK_MODIFIED_RESERVED_USER_ID_CHANGED, errorMessage, CONTAINER_ID )
5543	Assert. assertEquals ( 0, ( ( CountingReceiver ) receivers [ i ] ). msgCount )
5544	Assert. assertEquals ( "value1", oAuthMachine. readAttributeFromBodyMap ( input, "claims" ) )
5545	assertThat ( manager. registerVoter ( "foo", - 1 ), is ( false ) )
5546	assertFalse ( topic. isPlugable ( ) )
5547	assertEquals ( "wrong length", 0, NodeUtils. limitNodeNameLength ( nodeName ) )
5548	assertTrue ( RelaxNgSchemaValidator. validateAgainstRelaxNg ( actualXml ) )
5549	assertEquals ( 25 - 3, execute ( Artist. class, parsed1 ). size ( ) )
5550	assertEquals ( expected, Weekmodel. getValue ( i ) )
5551	assertEquals ( 1, rs. getRules ( ). size ( ) )
5552	assertEquals ( expectedSource, instrumentedSource )
5553	assertThat ( result, is ( sameInstance ( provider. getFileSystem ( uri ) ) ) )
5554	org. junit. Assert. assertEquals ( "Patterns not detected", expectedPatterns, count. get ( ) )
5555	assertEquals ( sz, z, FastInteger. parseUint ( sz ) )
5556	assertNotNull ( informe. getId ( ) )
5557	assertTrue ( cut. isPositive ( 50 ) )
5558	assertThat ( "Body is incorrect!", body, matchesPattern ( "^Processed \\\\[message] with \\\\[Camel \\\\(test\\\\) thread #\\\\d+ - Profile Threads]$" ) )
5559	assertNull ( record. get ( c. name ( ) ) )
5560	assertThat ( result, is ( nullValue ( ) ) )
5561	assertTrue ( p. hasTag ( "tag" ) )
5562	Assert. assertEquals ( FastMath. toDegrees ( x ), value. toDegrees ( ). getReal ( ), epsilon )
5563	assertEquals ( inputJson, objectMapper. readValue ( deserializedJson, Object. class ) )
5564	assertOut ( "public class A extends B implements IA, IB, IC {\\n}" )
5565	assertEquals ( persons. get ( key ), result. get ( key ). get ( 0 ). asInt ( ) )
5566	service. callCounter. assertCalls ( "{findIds=2, getItems=6}" )
5567	assertTrue ( "Expected:" + NEWLINE + expected + NEWLINE + NEWLINE + "Actual:" + NEWLINE + vcard. toString ( ), vcard. toString ( ). contains ( expected ) )
5568	assertEquals ( 0.0, score, 0.001 )
5569	assertArrayEquals ( this. ipv6MsgWithDistinguishergBytes, ByteArray. getAllBytes ( aggregator ) )
5570	assertEqualsIgnoreWhitespace ( expected, drl )
5571	tester. assertRenderedPage ( HomePage. class )
5572	assertEquals ( pl. get ( "filename" ), "\\\\a\\\\b\\\\c.txt" )
5573	assertEquals ( selectedInterval. getName ( ), "Engineering" )
5574	assertEquals ( CREATED. getStatusCode ( ), response. getStatus ( ) )
5575	assertArrayEquals ( data, stream. toByteArray ( ) )
5576	Assert. assertEquals ( "(nt_point_location (nt_base_location (nt_number 123)) (nt_offset + (nt_number 4)))", loc. toStringTree ( parser ) )
5577	Assert. assertTrue ( found110Warning )
5578	assertNull ( channel21. readOutbound ( ) )
5579	assertEquals ( "wrapping renderer must use list's default on null", defaultRenderer. getClass ( ), renderer. getDelegateRenderer ( ). getClass ( ) )
5580	assertEquals ( correctJson, producedJson )
5581	assertTrue ( result. isSuccess ( ) )
5582	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, initialQuery ) )
5583	descriptor. assertValid ( )
5584	assertEquals ( "Version!", manager. getTransportVersionString ( ) )
5585	assertEquals ( 1, handler. recover ( new Object [ ] { "Randell" }, new RuntimeException ( "Planned" ) ) )
5586	assertEquals ( expecting, t. toStringTree ( ) )
5587	assertThat ( result, is ( "" ) )
5588	assertEquals ( topic. getUserPostCount ( ), 0 )
5589	assertNotNull ( toolSpec )
5590	arrays. assertContainsSequence ( description, actual, null )
5591	ReflectionAssert. assertReflectionEquals ( except, result )
5592	assertEquals ( lbl. size ( ), lbl2. size ( ) )
5593	Assert. assertEquals ( "method", e. evaluate ( jc ) )
5594	assertEquals ( "Hello World", invoke. invoke ( null ) )
5595	assertEquals ( "2015-10-05", mo. getDateWrittenElement ( ). getValueAsString ( ) )
5596	assertEquals ( "The view paths arent correct", Arrays. asList ( "viewpath" ), scm. getViewPaths ( ) )
5597	assertPutFails ( occurrence, OntopiaRestErrors. MANDATORY_FIELD_IS_NULL )
5598	assertNull ( m. get ( "foo" ) )
5599	assertEquals ( COSBoolean. FALSE, victim. nextBoolean ( ) )
5600	assertEquals ( "Wrong callback url", CALLBACK_URL, casClient. getCallbackUrl ( ) )
5601	assertEquals ( "One", doc. head ( ). text ( ) )
5602	assertEquals ( "http://example.com/test/resources/rest/itemFull.json", hm. get ( "path" ) )
5603	Assert. assertEquals ( expectedSpec, actualSpec )
5604	assertEquals ( ids, knownItems2. keySet ( ) )
5605	assertArrayEquals ( getPixels ( expected, 0, 0, expected. getWidth ( ), expected. getHeight ( ), null ), getPixels ( actual, 0, 0, actual. getWidth ( ), actual. getHeight ( ), null ) )
5606	assertThat ( ClockInterval. parseISO ( "PT1H55M30S/14:15:30" ), is ( interval ) )
5607	assertEquals ( "test message", message )
5608	Assert. assertEquals ( originalFont. getOs2 ( ). getVersion ( ), parsedFont. getOs2 ( ). getVersion ( ) )
5609	Assert. assertEquals ( "user_id", ctx. getSqlStatement ( ) )
5610	assertNotNull ( emailAlerter )
5611	assertEquals ( asList ( "O", "�", "�" ), stringsToSort )
5612	assertEquals ( aseVariant2. getA2Counts ( ), expResult )
5613	assertThat ( NF. numberNode ( BigDecimal. ONE ), is ( sut ) )
5614	assertTrue ( "Dialect should be returned false", xPathSet. indicatesFailure ( dialect ) )
5615	assertEquals ( 2, constraints. size ( ) )
5616	Assert. assertEquals ( Constants. FRAMEWORK_BEGINNING_STARTLEVEL, startLevel. getStartLevel ( ) )
5617	assertEquals ( SampleLocations. STOCKHOLM, cargo. getDelivery ( ). getLastKnownLocation ( ) )
5618	assertTrue ( connection. isAuthenticated ( ) )
5619	compiler. assertErrorsOnLines ( "example/Test.java", diagnostics, 7 )
5620	Assert. assertEquals ( s, new String ( expanded ) )
5621	assertEquals ( i, startOffset. getValue ( ) )
5622	assertEquals ( 2, rsp. getRetweetCount ( ) )
5623	assertThat ( sel, is ( dataProperty ) )
5624	AssertionUtils. multiAssertEquals ( createAsDocument9, response5. getResponseObject ( ) )
5625	assertEquals ( "|Monday|Tuesday|Wednesday|Thursday|Friday", days )
5626	assertThat ( actual, is ( nullValue ( ) ) )
5627	assertNoViolations ( constraintViolations )
5628	assertEquals ( buildExceptionMessage ( "Expected SUCCESS but twin status was " + deviceUnderTest. deviceTwinStatus, internalClient ), DeviceTwinCommon. STATUS. SUCCESS, deviceUnderTest. deviceTwinStatus )
5629	Assert. assertEquals ( expectedGeoJson, geoJson )
5630	assertEquals ( "Hello World", storyText )
5631	assertTrue ( closed. await ( 2, SECONDS ) )
5632	assertTrue ( result )
5633	Assert. assertEquals ( 2, result. length ( ) )
5634	PatternAssert. assertThat ( H2DB_CONNECTION_STRING_PATTERN )
5635	Assert. assertEquals ( "yyyy", FastqTools. convertQualities ( fastq, FastqVariant. FASTQ_SLEEP ) )
5636	assertEquals ( "\\n# Level1\\n# Level2\\n", writer. toString ( ) )
5637	assertTrue ( validator. validate ( EntityNames. TEACHER_SCHOL_ASSOCIATION, teacherSchoolAssociations ). isEmpty ( ) )
5638	assertThat ( validPeriods, definedBy ( StartOfTime. create ( ), point ( contemporaryExample ), EndOfTime. create ( ) ) )
5639	assertSqlCanBeParsedAndDeparsed ( stmt )
5640	assertEquals ( "Locations", p. getLocationMenu ( ). getEntry ( ). getText ( ) )
5641	assertEquals ( "Should be no runs in the list", 0, listPage. getNumberOfRunsInProject ( ) )
5642	assertEquals ( UserCreatedEvent. EVENT_TYPE, userCreatedEvent. getEventType ( ) )
5643	assertEquals ( "1", tg. getVariable ( "1" ). getVariableType ( ) )
5644	assertNotNull ( result )
5645	assertThat ( query, is ( expected ) )
5646	Assert. assertEquals ( element. getText ( ), "click me" )
5647	Assert. assertNull ( testsuites )
5648	assertThat ( serializer, is ( instanceOf ( IgnoringSerializer. class ) ) )
5649	assertThat ( rs. size ( ), equalTo ( 3 ) )
5650	assertEquals ( year, formatted )
5651	assertFalse ( monitor. isSendQueueWarning ( ) )
5652	assertThat ( exported, is ( equalTo ( expected ) ) )
5653	assertEquals ( aListApartXML, xml. getDocumentPath ( ) )
5654	assertNotNull ( token )
5655	assertThat ( add, is ( 4.5 ) )
5656	assertEquals ( 3, bs. getPlayerNumber ( p ) )
5657	assertEquals ( "  EAP Test" + j, trueEAP_LSAT7 [ j ], eap, 1e-4 )
5658	assertNullOrEmpty ( before )
5659	assertTail ( input, 100, expectedOutput )
5660	assertEquals ( true, xmlHelpers. validateSignature ( document ) )
5661	assertNotNull ( Credential. reader ( ). read ( ) )
5662	assertEquals ( "4 Nov 2010 16:06:04 GMT", block. getTime ( ). toGMTString ( ) )
5663	assertions. isNotEqualTo ( actual )
5664	assertEquals ( FORMAT, formatterMember )
5665	Assert. assertEquals ( SizeUnit. GIGABYTE. toByte ( 100 ), vo. getTotalCapacity ( ) )
5666	assertThat ( resultedQuery, is ( expectedQuery ) )
5667	Assert. assertNotNull ( limitOrder )
5668	assertNotNull ( mav )
5669	assertPrefetchResult ( result )
5670	Assert. assertTrue ( check. missingHeaders. length > 0 )
5671	assertNotNull ( user )
5672	UnitTestUtils. assertEquals ( "scalar add", new Array2DRowRealMatrix ( testDataPlus2 ), m. scalarAdd ( 2d ), entryTolerance )
5673	assertEquals ( numBlocks, totalBlockLoads )
5674	Assert. assertNull ( citySearchResponse. getCity ( ) )
5675	Assert. assertEquals ( "G9JYBOMPUXHYHKSNRNMMSSZCSHOFYOYNZRSZMAAYWDYEIMVVOGKPJBVBM9TDPULSFUNMTVXRKFIDOHUXXVYDLFSZYZTWQYTE9SPYYWYTXJYQ9IFGYOLZXWZBKWZN9QOOTBQMWMUBLEWUEEASRHRTNIQWJQNDWRYLCA", hash )
5676	assertEquals ( "http://www.w3.org/2005/Atom", slEndpoint. getAddress ( ) )
5677	assertEquals ( - 4L, result )
5678	assertEquals ( HttpStatusCode. OK. code, response. getStatus ( ) )
5679	assertEquals ( Rational. ONE, result )
5680	assertTrue ( testFailed. isEmpty ( ) )
5681	assertThat ( axioms. isEmpty ( ), is ( true ) )
5682	Assert. assertEquals ( expectedResult, resultString )
5683	assertEquals ( expResult, result )
5684	assertFailureValue ( "missing (1)", "y" )
5685	Assert. assertTrue ( list. isEmpty ( ) )
5686	assertEquals ( tourInstance, deliveryDay )
5687	assertEquals ( "Incorrect status code", new Integer ( 400 ), new Integer ( resp. getStatusCode ( ) ) )
5688	assertEquals ( expected, actual )
5689	assertTrue ( BatchUtil. evaluate ( batch ) )
5690	assertNotNull ( doc )
5691	assertEquals ( CUSTOM_PRIORITY, seedJob. getPriority ( ) )
5692	Assert. assertEquals ( "custom-value", mf. getMainAttributes ( ). getValue ( "Custom-Entry" ) )
5693	assertNotNull ( "No appender found", new FileAppender ( dir ). getAppender ( ) )
5694	assertEquals ( "[]", Iterables. toString ( tree. getKeysContainedIn ( document ) ) )
5695	assertNotNull ( scriptStatement )
5696	assertEquals ( "GraphHead were not equal", graphHeadIn, GradoopFlinkTestUtils. writeAndRead ( graphHeadIn, getExecutionEnvironment ( ) ) )
5697	assertEquals ( 0, ProfileLogger. dump ( ). size ( ) )
5698	assertTrue ( clockTime2. getTime ( ) - clockTime. getTime ( ) < 1 )
5699	assertEquals ( result, expResult )
5700	assertDate ( p1, p21, p22, actual )
5701	assertEquals ( 1.5d, prediction, 0.01 )
5702	assertThat ( execute ( script ), is ( equalTo ( "built 1" ) ) )
5703	assertEquals ( "Wrong property", values, config. getArray ( String [ ]. class, KEY_PREFIX ) )
5704	assertEquals ( fixture, response )
5705	assertEquals ( dcClusterShards. get ( 0 ). getClusterInfo ( ). getClusterName ( ), clusterMeta. getClusterName ( ) )
5706	Assert. assertTrue ( msg, Arrays. deepEquals ( esperado, resultado ) )
5707	assertEquals ( LogicalDatastoreType. OPERATIONAL, result. getType ( ) )
5708	assertE ( "�尖�尖�尖�尖��" + "��    ��" + "��    ��" + "��    ��" + "�尖��    ��" + "�尖��    ��" + "�尖�尖�尖�尖�尖��" )
5709	assertEquals ( "123", m. get ( "id" ) )
5710	assertFalse ( evaluator. shouldProxyHost ( "1.232.14.3" ) )
5711	assertTrue ( b )
5712	assertFutureCancelMetaCancel ( future )
5713	assertEquals ( 54321, settings. getSystemColor ( ) )
5714	Assert. assertTrue ( expected. equals ( actual ) )
5715	Assert. assertNull ( migrationPlan )
5716	assertEquals ( "JPEG", TestUtils. getFormatName ( new ByteArrayInputStream ( baos. toByteArray ( ) ) ) )
5717	assertEquals ( 12345 * 1000 * 1000, result )
5718	Assert. assertEquals ( 1, stateContext. getData ( ) )
5719	assertEquals ( 0, records. size ( ) )
5720	Assert. assertEquals ( "Huawei_Gsm", vertexTraversal ( this. sqlgGraph, softwareVersion ). in ( "vendorTechnology_softwareVersion" ). next ( ). value ( "name" ) )
5721	assertEquals ( expectedFirstname, actualFirstname )
5722	assertEquals ( 10, execCount. get ( ) )
5723	Assert. assertEquals ( "div", div. getTagName ( ) )
5724	Assert. assertEquals ( "The fox jumps over", hl. makeWellFormed ( xmlContent ) )
5725	assertEquals ( TEST_INITIAL_DFS_REPLICATION, testConfiguration. get ( "dfs.replication.initial" ) )
5726	assertThat ( span. to ( MILLISECONDS ), is ( 17_500L ) )
5727	Assert. assertEquals ( xmlEsperado, referenciada. toString ( ) )
5728	assertEquals ( 0, consumerPrefetch. retriesAttempted )
5729	assertEquals ( "Mismatched data", expected, res )
5730	Assert. assertEquals ( 0, queue. size ( ) )
5731	assertFalse ( "Initiator should not have an Ack request from disapproval because they were the disapprover user", document. isAcknowledgeRequested ( ) )
5732	assertEquals ( 0, ( ( Object [ ] ) emptyArray. getArray ( ) ). length )
5733	assertTrue (! result )
5734	assertThat ( uriContent. has ( "content" ), is ( true ) )
5735	assertFalse ( abstractRule. test ( patent ) )
5736	assertNull ( converter. getAsObject ( facesContext, new UIPanel
5737	Assert. assertTrue ( "collection should have inherit turned on", isInherit )
5738	assertThat ( sampleEntities. getTotalElements ( ), equalTo ( 0L ) )
5739	assertEquals ( r, es. getCentroid ( ), 0.01 )
5740	assertEquals ( "Hello World", feel. execute ( "Hello World" ) )
5741	assertThat ( result, is ( instanceOf ( Success. class ) ) )
5742	assertFalse ( dnsMessage. getHeader ( ). isQuery ( ) )
5743	assertSame ( GBP_2_34, test )
5744	assertEquals ( expecting, result )
5745	assertEquals ( 3, result1. size ( ) )
5746	assertEquals ( expectedFileName, message )
5747	assertThat ( idAndVersion1. compareTo ( idAndVersion2 ), is ( - 1 ) )
5748	assertEquals ( "Expected 2 results!", 2, count )
5749	assertEquals ( numObjects, numCollections. get ( ) )
5750	assertThat ( proxy. getClass ( ). getMethod ( "finalize" ). wasCalled ( ), is ( false ) )
5751	assertThat ( response, is ( "GRS1:GRS2\\n" + "GRS2:GRS1\\n" + "GRS2:GRS2\\n" + "TP1-TEST\\n" ) )
5752	assertEquals ( "A_", buffer. removeCString ( Data. ENC_GSM7BIT ) )
5753	assertThat ( Files. getPermissions ( tempFile. toPath ( ) ), is ( nullValue ( ) ) )
5754	assertEquals ( 1, bs. capacity ( ) )
5755	assertTrue ( Pattern. matches ( "(?s).*text%20before%20query%20string.*?text%20after=query%20string.*", page. asXml ( ) ) )
5756	assertEquals ( combinationsExpected, result )
5757	Assert. assertTrue ( referredGraphs. toArray ( ) [ 0 ]. equals ( NAMED_GRAPH ) )
5758	assertEquals ( requestString, StaxUtils. toString ( response ) )
5759	assertEquals ( s. fromReal ( 2 * - 4 + 3 * 6 + 5 * 7 ), t1. getDotProduct ( t2 ), 1e-13 )
5760	assertThat ( Template. parse ( markup ). render ( assigns ), is ( expected ) )
5761	assertFalse ( HttpTestUtils. semanticallyTransparent ( resp1, result ) )
5762	assertTrue ( "Returned object should be a TransformedQueue.", queue instanceof TransformedQueue )
5763	Assert. assertEquals ( "path mismatch, should have 0 cookies", 0, result. size ( ) )
5764	assertTrue ( "Wrongly reduced InOid filter: " + query. getFilter ( ), query. getFilter ( ) instanceof NoneFilter )
5765	assertTrue ( props. size ( ) > 0 )
5766	assertEquals ( 0, topic. getUserPostCount ( ) )
5767	assertThat ( result, is ( expectedAxiom ) )
5768	assertTrue ( userService. exists ( user. getId ( ) ) )
5769	assertThat ( Integer. parseInt ( codepoints ), is ( 0x0061 ) )
5770	assertNull ( remainingBuffer )
5771	assertEquals ( PlanningExecutionResult. ERROR, result )
5772	assertThat ( copyObjectRequest. getNewObjectMetadata ( ). getSSEAlgorithm ( ), is ( ObjectMetadata. AES_256_SERVER_SIDE_ENCRYPTION ) )
5773	assertTrue ( tweets. length == 6 )
5774	assertEquals ( "select * from SURVEY\\n" + "from SURVEY2\\n" + "where SURVEY.NAME IS NULL", query. toString ( ) )
5775	assertEquals ( 3, lineCount )
5776	assertEquals ( "<order><id>123/id><customerId>4444/customerId><date>20100110</date>" + "<item><id>222</id><amount>1</amount></itemn></order>", xml )
5777	assertTrue ( runtimeService. createProcessInstanceQuery ( ). singleResult ( ). isSuspended ( ) )
5778	Assert. assertTrue ( true )
5779	Assert. assertEquals ( instantiatedMethod. getGeneratedClass ( ). getParameterTypes ( ). get ( 0 ), Integer. class )
5780	assertEquals ( value, ( Double ) 20 )
5781	assertEquals ( String. valueOf ( ReturnCode. NO_SPEECH. code ( ) ), firstEvent. getParameter ( "rc" ) )
5782	assertThat ( extractMonitorables ( adapter ). get ( MIN ). get ( ), Matchers. < Object > is ( newMin ) )
5783	assertEquals ( "", result )
5784	Assert. assertEquals ( expect, text )
5785	assertEquals ( in, out )
5786	assertEquals ( BAD_REQUEST. getStatusCode ( ), resp. getStatus ( ) )
5787	assertTrue ( fromJson instanceof BigInteger )
5788	assertEquals ( destination, OutlineUtils. toPageDestination ( victim, catalog ). get ( ) )
5789	assertThat ( date. with ( YEAR, 2000 ), is ( PlainDate. of ( 2000, 2, 28 ) ) )
5790	assertNotSame ( asyncReconnectBeforeReset, asyncReconnectAfterReset )
5791	Assert. assertEquals ( BatchStatus. FAILED, jobExecution. getBatchStatus ( ) )
5792	Assert. assertEquals ( "All is well", message )
5793	assertEquals ( "Cookies: Parsing b[]: remember-me=MTAI4MjHY0MjcXxMTpjM2U0Zjk3OWQwMjk0; Auth-Type=http; Auth-Token=C8wSA1AXvpFVjXCRGKryWtIIZS2TRqf69aZb; HYDRA-XSRF-TOKEN=1a0f551f-2178-4ad7-a0b5-3af8f77675e2", anonymized )
5794	assertEquals ( "Generic<T> {thing=\\"T\\"}", Util. asString ( new Generic < > ( ) ) )
5795	assertTrue ( observer. await ( tc ) )
5796	Assert. assertEquals ( "skip", value )
5797	assertEquals ( "double: 7 654 321,099", b. primitiveDouble ( 7654321.0987d ) )
5798	assertThat ( options. getCredentialsProvider ( ), is ( URI. create ( "https://github.com/apache/s3-client/releases/releases/releases/releases/releases/releases/releases/master/credentials" ) ) )
5799	Assert. assertEquals ( "564a3d4e4f84039ce2b2b886e58f88dcee26fa3e3", fp )
5800	assertTrue ( "the artifact must be downloaded", new File ( localRepo, "ant/ant/1.5.1/ant-1.5.1.jar" ). exists ( ) )
5801	Assert. assertSame ( dElem, mergeElem )
5802	assertThat ( testOutcome. getIgnoredCount ( ), is ( 6 ) )
5803	assertNull ( a. value )
5804	assertTrue ( runtimeService. createProcessInstanceQuery ( ). singleResult ( ). isSuspended ( ) )
5805	Verify. assertSetsEqual ( Sets. mutable. with ( "Dolly", "Spike", "Tabby", "Spot" ), pets. asEcList ( ). collect ( TO_PET_NAME, Sets. mutable. empty ( ) ) )
5806	Assert. assertEquals ( WritableUtils. val ( "s0s1s2s1s2" ), udf. evaluate ( args ) )
5807	Assert. assertEquals ( true, a. contains ( b ) )
5808	assertThat ( responderOptions. hashCodeBindingKey ( ), is ( MATCH_ALL_BINDING_KEY ) )
5809	assertEquals ( ROUTE_KEY, instanceIdentifier. firstKeyOf ( VpnRoute. class ) )
5810	assertEquals ( AssetPathToFilterConfigMapper. XLIFF_FILTER_CONFIG_ID, filterConfigId )
5811	assertTrue ( u. isAuthenticated ( ) )
5812	assertions. containsSequence ( sequence )
5813	assertTrue ( ok )
5814	assertEquals ( e, a )
5815	assertFalse ( "List size mismatch across lists", words1. equals ( words2 ) )
5816	assertEquals ( BasicSentence. class, ebl. sentenceType )
5817	assertEquals ( 2, list. size ( ) )
5818	assertNull ( conceptService. getConceptProposal ( conceptProposalId ) )
5819	assertEquals ( Nd4j. ones ( rows * cols ), w )
5820	Assert. assertEquals ( reply, receivedReply )
5821	assertEquals ( 2, Solutions. bestOf ( solutions ). getRoutes ( ). size ( ) )
5822	assertEquals ( qtys_4300, qtys_10 )
5823	assertTrue ( or. isDefined ( ) )
5824	assertParsedMessages ( "8=FIX.4.4|9=67|35=1|3", "4=1|49=CLI", "ENT|52=2014", "0101-10:10:10", ".100|56=SERVE", "R|112=TEST123|10=245|" )
5825	assertThat ( found, is ( false ) )
5826	assertArrayEquals ( "{ 'hello' : 'world' } not the expected bytes.", helloWorld, out. toByteArray ( ) )
5827	assertEquals ( "date", type. getDataType ( 0, 0, 0, false ) )
5828	assertScriptEquality ( expectedScript, actualScript )
5829	assertThat ( d. deserialize ( objectStrategy ), is ( ( Object ) 2 ) )
5830	assertTrue ( cache. remove ( key, new String ( value ) ) )
5831	assertThat ( restored. isNull ( ), is ( true ) )
5832	assertTrue (! alertService. hasAlerts ( ) )
5833	assertEquals ( "From is not properly parsed", new Date ( 5 ), mapper. readFrom ( columns ) )
5834	Assert. assertEquals ( "Free nodes should be correct since the run has not started", 0, freeThreads )
5835	assertEquals ( out, expectedResults [ i ], 0.0 )
5836	assertEquals ( "The variable value was ignored.", "info@effektif.com", value )
5837	assertEquals ( persistenceModel, persistenceModel2 )
5838	Assert. assertNotNull ( "Reply message was null on reply queue: " + replyQueue, reply )
5839	assertEquals ( 1, repository. getCommits ( ). size ( ) )
5840	assertThat ( impl. isPermitted ( Sets. newHashSet ( "repoName", "repoName2" ), "repoFormat", BreadActions. READ, variableSource ), is ( true ) )
5841	assertThat ( result, containsString ( "<type>basic</type>" ) )
5842	assertEquals ( "valueA", pc. getString ( "keyA" ) )
5843	this. assertLoadBlobViaTuples ( tuples, true, false )
5844	assertEquals ( res, String. class )
5845	assertEquals ( CREATED. getStatusCode ( ), actual. getStatus ( ) )
5846	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
5847	assertTrue ( templateFile. exists ( ) )
5848	assertEquals ( "Duke Oracle", person. get ( 0 ). getName ( ) )
5849	assertEquals ( result, new Pair < > ( 0, 4 ) )
5850	assertEquals ( "Used the DemoService as default.\\r\\nYou can cancel default service by command: cd /", result )
5851	assertThat ( testSupport. getResources ( crd ), containsInAnyOrder ( oldCrd ) )
5852	assertEquals ( 3, count )
5853	assertThat ( attributeValueNs, is ( nullValue ( ) ) )
5854	Assert. assertEquals ( "ZZZZ", FastqTools. convertQualities ( fastq, FastqVariant. FASTQ_SOLEXA ) )
5855	Assert. assertEquals ( 1, entityDao. create ( id ). size ( ) )
5856	assertEquals ( expecteds, actuals )
5857	assertTrue ( ca. getFallbackParameters ( ). equals ( ap2 ) )
5858	assertEquals ( outputExpected, certificate. getHash ( ) )
5859	Assert. assertEquals ( "/css/ui.css", ModuleUtil. getPathForResource ( module, path ) )
5860	assertEquals ( expected, exported )
5861	assertEquals ( ret. size ( ), 0 )
5862	assertNotNull ( reporter )
5863	assertEquals ( expOut, out )
5864	assertEquals ( boundingBoxOf, new Rectangle ( 0f, 0, 10f, 10f ) )
5865	assertEquals ( false, result )
5866	assertEquals ( 2, messages. size ( ) )
5867	Assert. assertEquals ( IdentityConstants. BAD_REQUEST, IdentityResponseWrapper. buildFaultMessage ( responseMock ). getCode ( ) )
5868	assertThat ( command. accept ( state ), is ( false ) )
5869	assertEquals ( normalUser, user. get ( ) )
5870	assertEquals ( String. valueOf ( me. getCode ( ) ), me. getNick ( ) )
5871	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPdf, cmpPdf, destinationFolder, "diff" + testName + "_" ) )
5872	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED, status )
5873	assertEquals ( RESULT_COUNT, actual )
5874	Assert. assertEquals ( "did not get expected packing instruction", sb. toString ( ), dataObjInp. getParsedTags ( ) )
5875	assertions. containsOnly ( )
5876	assertEquals ( expected, stats1 )
5877	assertEquals ( 187, result )
5878	assertNotNull ( adviceController )
5879	assertEquals ( z1, z2 )
5880	assertEquals ( "Resolved", "scan-jar:" + file. toURL ( ). toExternalForm ( ), m_underTest. resolve ( file. getAbsolutePath ( ) ) )
5881	assertThat ( b. getConsole ( ), Matchers. containsString ( "Testing -d.svn" ) )
5882	assertEquals ( "Mon May 13 14:18:52 UTC 1917", field. getDate ( ). toString ( ) )
5883	assertEquals ( "1.0", instance. getParentVersion ( ) )
5884	assertEquals ( 0, tuple. len ( ) )
5885	assertEquals ( qm1, qm2 )
5886	assertEquals ( buffer, deserialize ( ) )
5887	assertEquals ( ByteBuffer. wrap ( stopRow ), ByteBuffer. wrap ( new byte [ ] { 0, 0, 0 } ) )
5888	assertRequest ( "POST", "Message/" )
5889	assertTrue ( acualValues. isEmpty ( ) )
5890	assertThat ( ordinalVOs, hasSize ( 2 ) )
5891	assertArrayEquals ( yhat1, yhat2, 1e-8 )
5892	Assert. assertEquals ( 3, registrationsRepository. getAllRegistrations ( ). size ( ) )
5893	assertEquals ( "value1", serverRequest. query ( ) )
5894	assertEquals ( "some_kind (1)", prettifiedKey )
5895	assertThat ( exitStatus. exitStatus ( ), is ( equalTo ( ( byte ) 0x1 ) ) )
5896	assertThat ( transformed, is ( "transform_string_to_type=" ) )
5897	this. assertLoadBlobViaTuples ( tuples, false, true )
5898	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. ACTIVITIES_READ_LIMITED, ScopePathType. AFFILIATIONS_READ_LIMITED, ScopePathType. FUNDING_READ_LIMITED, ScopePathType. ORCID_PATENTS_READ_LIMITED, ScopePathType. PEER_REVIEW_READ_LIMITED, ScopePathType. ORCID_WORKS_READ_LIMITED )
5899	assertThat ( PlainDate. axis ( ). withYearMonthDay ( date ), is ( PlainDate. of ( 2014, Month. APRIL, 24 ) ) )
5900	assertDefaultConfig ( config, false )
5901	assertEquals ( "5", pages. get ( 0 ). asText ( ) )
5902	assertEquals ( 0, h. nestLevel )
5903	assertThat ( consoleStepListener. toString ( ), is ( "Step finished" ) )
5904	assertThatStepsInstancesAre ( builderUnloadableResource. buildCandidateSteps ( ) )
5905	assertTrue ( result )
5906	assertTrue ( worker. isFailed ( ) )
5907	assertStack ( new Object [ ] { - 1, null, null, null, null, null }, stack )
5908	assertTrue ( "Unexpected compressed size: " + compressed. size ( ), compressed. size ( ) > SAMPLE_SIZE * 4 )
5909	assertTrue ( ( Boolean ) result )
5910	assertEquals ( "Base for string is wrong", Long. valueOf ( 3 ), parsed )
5911	assertEquals ( 0, JNIBusyWaiting. INSTANCE. whileLessThan ( null, buffer. address ( ), runs, - 1 ) )
5912	Assert. fail ( "Expected an exception" )
5913	assertEquals ( 1, vrp. getJobs ( ). values ( ). size ( ) )
5914	assertThat ( timeLine. getValidIntervals ( ), empty ( ) )
5915	runner. assertNotValid ( )
5916	assertNull ( principal )
5917	assertNull ( profile. validateToken ( idTokenString ) )
5918	Assert. assertEquals ( expected, mFileSystemMaster. checkConsistency ( FILE, CheckConsistencyContext. defaults ( ) ) )
5919	assertEquals ( "select entity_0 from Entity entity_0 where ( entity_0.code = :code_1 and entity_0.primitiveInt > :primitiveInt_2 and entity_0.name is not null )", select. getQuery ( ) )
5920	assertEquals ( pp. getValue ( ), new Payload < > ( "123" + "456" ). getValue ( ) )
5921	assertThat ( view. status ( ), containsString ( "disabled" ) )
5922	assertThat ( candidate, nullValue ( ) )
5923	assertEquals ( breakpointCount, 0 )
5924	assertNotNull ( InstalledAddOnExtension. reader ( "XEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
5925	assertFalse ( mojo. isSkip ( ) )
5926	assertNotNull ( model )
5927	assertEquals ( expected, actual )
5928	assertE ( "�尖�尖�尖��" + "��   ��" + "�� ��#��" + "��###��" + "�尖�尖�尖�尖��" )
5929	assertEquals ( 0, document. select ( ".vcard" ). size ( ) )
5930	assertEquals ( "redis://10.0.0.1", config. getAddress ( ) )
5931	assertEquals ( results, clientWrapper. get ( keys ) )
5932	TestUtil. assertSuccess ( result )
5933	assertEquals ( 1, posts. size ( ) )
5934	assertTrue ( connectFuture. isConnected ( ) )
5935	assertThat ( tuple. getList ( "field" ), equalTo ( value ) )
5936	assertEquals ( 3, map. size ( ) )
5937	assertThat ( foundBanners. isEmpty ( ), is ( true ) )
5938	assertThat ( buf. toString ( ), is ( equalTo ( "" ) ) )
5939	assertFalse ( count. isShowQuotas ( ) )
5940	assertEquals ( new Point ( 1, 2 ), field. get ( accessor ) )
5941	assertEquals ( text, adapter. getStringAt ( 2, 0 ) )
5942	assertTrue ( entity. getName ( ) == null )
5943	this. tester. assertRenderedPage ( this. tester. getApplication ( ). getLoginPage ( ) )
5944	Assert. assertEquals ( Response. Status. OK. getStatusCode ( ), modifyingResponse. getStatus ( ) )
5945	assertEquals ( "{}", gson. toJson ( p ) )
5946	Assert. assertEquals ( "{\\"@odata.context\\":\\"../$metadata#Collection($ref)\\"," + "\\"value\\":[{\\"@odata.id\\":\\"ESAllPrim(32767)\\"}," + "{\\"@odata.id\\":\\"ESAllPrim(-32768)\\"}," + "{\\"@odata.id\\":\\"ESAllPrim(0)\\"}," + "{\\"@odata.id\\":\\"ESAllPrim(10)\\"}]}", resultString )
5947	assertEquals ( NAME_NODE, action. getNameNode ( ) )
5948	assertEquals ( "ase", ase )
5949	assertEquals ( 5., start. getTheoreticalEarliestOperationStartTime ( ), 0.01 )
5950	assertTrue ( "Task result is suspect: " + task. getResult ( ), ( task. getResult ( ) >= 1000L ) && ( task. getResult ( ) <= 20000L ) )
5951	assertTrue ( AuthzResolver. isAuthorized ( new PerunSessionImpl ( perun, new PerunPrincipal ( "admin", ExtSourcesManager. EXTSOURCE_NAME_INTERNAL, ExtSourcesManager. EXTSOURCE_INTERNAL ), new PerunClient ( ) ), Role. PERUNADMIN ) )
5952	assertions. containsSequence ( sequence )
5953	assertEquals ( exp, area, 1e-6 )
5954	assertEquals ( value, propertiesConfigurationProperties. get ( null ) )
5955	Assert. assertEquals ( "56138725000103", infoConsultaCadastro. getCnpj ( ) )
5956	Assert. assertEquals ( Schema. Type. STRING, subSchema. getType ( ) )
5957	assertEquals ( today. parse ( name ), today. parse ( name ) )
5958	assertEquals ( Result. FAIL, result )
5959	assertEquals ( "REQUEST", response )
5960	assertEquals ( " ", pluginParameters. indentCharacters )
5961	assertThat ( target. equals ( flow ), is ( true ) )
5962	assertTrue ( GitFileUtils. exists ( file, commit, repo ) )
5963	assertXMLEqual ( "Invalid source", "<child/>", result. toString ( ) )
5964	assertEquals ( d, object. getRandomInt ( ), 0 )
5965	assertEquals ( "Git tool description should be null", "", nullGitTool. describe ( ) )
5966	assertTrue ( sn. equals ( other ) )
5967	assertEquals ( fixture, this. libshout. getDumpfile ( ) )
5968	Assert. assertEquals ( build. getBestStrategy ( ), StringEncodingStrategy. ALWAYS_SAME_VALUE )
5969	assertHelpLines ( "Option                                Descriptionplates ", "------                                -----------plates ", "-t, --cutoff, --threshold <Double: a  a threshold value beyond which a  ", "  positive decimal number that will     certain level of the application", "  represent the threshold that has      should cease to write logs      ", "  been outlined>                                                        ", EMPTY )
5970	assertEquals ( 1, ( int ) ff. andThen ( ff ) )
5971	assertThat ( DockerHost. certificatePathFromEnv ( ), equalTo ( "foobar/cert" ) )
5972	assertThat ( this. spanBuilder. buildInfo ( ), is ( 1L ) )
5973	Assert. assertTrue ( Integer. MIN_VALUE == _c. convert ( "-9223372036854775807" ) )
5974	assertEquals ( expected, toString ( tx ) )
5975	assertNotNull ( result )
5976	files. assertIsDirectoryContaining ( INFO, actual, JAVA_SOURCE )
5977	assertEquals ( actualPage, expectedPage )
5978	assertThat ( map. size ( ), is ( 2 ) )
5979	assertEquals ( "select * from (  " + "select a.*, rownum rn from (   " + "select survey1.ID from SURVEY survey1  ) " + "a) " + "where rn > 3 and rownum <= 5", query. toString ( ) )
5980	assertEquals ( FleetSize. FINITE, vrp. getFleetSize ( ) )
5981	assertEquals ( URL + "?param+1=value1&param+2=value2", uri. toString ( ) )
5982	assertTrue ( iohelper. toString ( ). contains ( "hasDbXref" ) )
5983	assertThat ( Version. findHighestMatchingBuildNumber ( version, versionSet ), equalTo ( 2 ) )
5984	assertResultSet ( res )
5985	assertScoreAndParse ( content, "oracle_test_statements_4", 50 )
5986	assertEquals ( example, decoded )
5987	assertThat ( taskService. createTaskQuery ( ). taskAssignee ( "aUser" ). count ( ), is ( 1L ) )
5988	assertEquals ( "Mr T", value )
5989	assertThat ( breakers. size ( ), is ( 3 ) )
5990	Assert. assertEquals ( ste. toString ( ), frame. toString ( ) )
5991	assertXmlVersionInProlog ( bytesWithBom, "1.1", "<?xml version='1.1'>" )
5992	assertFalse ( srcGeoCoding. isCrossingMeridianAt180 ( ) )
5993	assertTrue ( videos. contains ( video ) )
5994	assertCorrectBinaryString ( data, expected )
5995	assertEquals ( qn, qnExpected )
5996	assertThat ( outcome. size ( ), is ( 1 ) )
5997	assertEquals ( g1, g2 )
5998	assertEquals ( expected, actual )
5999	assertEquals ( "java", response. getFirstHeader ( "query" ). getValue ( ) )
6000	Helpers. assertNull ( twinMetadata. getLastUpdatedVersion ( ) )
6001	assertTrue ( mappedNames. isEmpty ( ) )
6002	assertTrue ( JobUtils. isJobExecutionStoppable ( jobExecution ) )
6003	assertScoreCompareToOrder ( comparator, buildNode ( 1, "-110", 5, 41 ), buildNode ( 1, "-110", 7, 40 ), buildNode ( 1, "-90", 5, 40 ), buildNode ( 1, "-90", 7, 40 ), buildNode ( 1, "-90", 5, 40 ), buildNode ( 1, "-90", 7, 40 ), buildNode ( 1, "-90", 7, 40 ), buildNode ( 1, "-1init/-80", 7, 40 ), buildNode ( 1, "-90", 5, 40 ), buildNode ( 1, "-90", 7, 40 ), buildNode ( 1, "-90", 5, 40 ), buildNode ( 1, "-90", 7, 40 ), buildNode ( 1, "-90", 7, 40 ), buildNode ( 1, "-90", 5, 40 ), buildNode ( 1, "-90", 7, 40 ), buildNode ( 1, "-90", 7, 40 ), buildNode ( 2, "-90", 5, 40 ), buildNode ( 2
6004	assertEquals ( body. toString ( ), "error test error" )
6005	assertEquals ( "test-value", clientWrapper. get ( "key1", transcoder ) )
6006	assertEquals ( resource, actualResource )
6007	assertEquals ( UriComponentsBuilder. fromHttpUrl ( "http://www.indexer.com/api?t=search&extended=1&q=title author" ). build ( ), testee. buildSearchUrl ( searchRequest, null, null ). build ( ) )
6008	assertEquals ( "0x" + i, val )
6009	assertEquals ( 2 + 3 * 256 + 4 * 256 * 256, fromLittleEndian ( b, 0, 1 ) )
6010	assertEquals ( expResult, result )
6011	assertTrue ( "Models not isomorphic", isomorphic ( m0, m ) )
6012	Assert. notNull ( canalInstance )
6013	Assert. assertNotNull ( request. getHeaders ( ) )
6014	Assert. assertNotNull ( str )
6015	assertProposalDoesNotExist ( proposals, "Pick out selected part of String" )
6016	assertEquals ( test, loadedEntity. getSomeBytes ( ) )
6017	assertThat ( underTest. equals ( edgeMock ), is ( false ) )
6018	assertThat ( "system-input-def.xml", systemInputDef, is ( expected ) )
6019	assertThat ( tokens, equalTo ( Arrays. < Object > asList ( "a", 1.0, 2.3, "\\"b\\"" ) ) )
6020	assertEquals ( expected, output. toString ( ) )
6021	assertEquals ( expectedLogMessage, actualLogMessage )
6022	Assert. assertTrue ( list. size ( ) == 1 )
6023	assertTrue ( Arrays. equals ( expected_output, actual_output ) )
6024	assertEquals ( svalues, svalues1 )
6025	Assert. assertEquals ( expected, computed, 0.00001 )
6026	assertEquals ( new BigDecimal ( "0.00" ), min )
6027	Assert. assertEquals ( 50, getRowCount ( ) )
6028	assertTrue ( true )
6029	assertNull ( getTestChargingStationFromRepository ( ) )
6030	assertNotNull ( schema )
6031	assertUrlProtected ( servletUrl )
6032	assertInvocations ( client. getTwoPhaseCommitInvocations ( ) )
6033	assertEquals ( constVal, access. getPosition ( ) )
6034	Assert. assertEquals ( 0, ( ( Long ) l. get ( 0 ) ). longValue ( ) )
6035	Assert. assertNull ( option )
6036	assertEquals ( usage. getMax ( ), result. available ( ) )
6037	assertEquals ( expected, actual )
6038	Assert. assertArrayEquals ( centroidExpected, location. getCentroid ( ) )
6039	assertThat ( uris, is ( asList ( new URI ( "http://baseurl/static/rapture/baseapp-prod.css" ), new URI ( "http://baseurl/static/rapture/extdirect-prod.css" ), new URI ( "http://baseurl/static/rapture/bootstrap.css" ), new URI ( "http://baseurl/static/rapture/d3.v4.min.css" ), new URI ( "http://baseurl/react-script-1-test-1.css" ), new URI ( "http://baseurl/react-script-2-test-2.css" ), new URI ( "http://baseurl/react-script-2-test-2.css" ), new URI ( "http://baseurl/react-script-2-test-2.css" ), new URI ( "http://baseurl/react-script-2-test-2.css" ), new URI ( "http://baseurl/react-script-2-test-2.css" ), new URI ( "http://baseurl/react-
6040	JsonAssert. assertJsonObjectEquals ( EXPECTED_JSON_RESPONSE, jsonResponse )
6041	assertTrue ( engine instanceof SimpleExecutionEngine )
6042	Assert. assertEquals ( expectedCrossProduct, crossProduct )
6043	Assert. assertTrue ( removedEventFired )
6044	Assert. assertTrue ( links. isEmpty ( ) )
6045	assertEquals ( "testStr", bean. getTestStr ( ) )
6046	assertTrue ( "Run called", flag )
6047	Assert. assertTrue ( "the'stopMaintenanceMode' method was not invoked as expected.", invoked )
6048	assertEquals ( "{\\"duration\\":{\\"value\\":1,\\"unit\\":2,\\"unit\\":16,\\"unit\\":43}}", mapper. writeValueAsString ( res ) )
6049	assertEquals ( "Bridge node should be returned", Optional. absent ( ), optNodes )
6050	assertThat ( message. getKeyword ( ), is ( Keyword. NONE ) )
6051	assertTrue ( "Expected successful outcome", response. getUnderlying ( ) )
6052	assertNumEquals ( "2.0", highestValue. getValue ( 11 ) )
6053	assertEquals ( set, sameSet )
6054	context. assertTrue ( res. failed ( ) )
6055	assertEquals ( Language. FRANCE. name ( ), child. getAttribute ( mediaTypeAttributeType. getName ( ) ). getValue ( ) )
6056	assertTrue ( result )
6057	assertTrue ( "Configurable http server mechanism factory should be created", ops. exists ( TEST_SERVER_MECHANISM_FACTORY_ADDRESS ) )
6058	assertThat ( item. getName ( ), is ( "vtoraja zajavka" ) )
6059	assertEquals ( 0, app. executeApplication ( args ) )
6060	assertThat ( list. get ( 0 ). getName ( ), is ( "Hoge" ) )
6061	assertSame ( "OutoutStream is not set correctly.", outputStream, entrancePi. getOutputStream ( ) )
6062	assertEquals ( bd1, bd2 )
6063	assertTrue ( "t value should be null", null == cr. getTag ( "t" ) )
6064	assertTrue ( searchResults. hasResults ( ) )
6065	assertMockEndpointsSatisfied ( )
6066	assertThat ( families, arrayContaining ( ProcessingFamilyDefinition. NAME ) )
6067	given ( ). param ( "expand", 1 ). when ( ). get ( "resources/" ). then ( ). assertThat ( )
6068	assertThat ( header. getName ( ), is ( "name" ) )
6069	assertEquals ( 2, setWithUpperBound. size ( ) )
6070	assertEquals ( expected, buchberger )
6071	assertEquals ( "!yro1\\n", sWriter. toString ( ) )
6072	assertEquals ( expecteds, actuals )
6073	assertNotNull ( jobs )
6074	assertThat ( gson. fromJson ( gson. toJson ( i ), Interval. class ), is ( i ) )
6075	assertAnnotations ( 1, Temporal. class, new TestEntity < > ( 0, "Today 25th February 2013" ) )
6076	assertNotNull ( resp )
6077	assertThat ( new JSONObject ( actual ), sameJsonAs ( rawSchemaJson ) )
6078	Assert. assertEquals ( FastMath. toRadians ( x ), value. toRadians ( ). getReal ( ), epsilon )
6079	assertEquals ( "foo", testClass4StringFieldAccessor. getValue ( testClass4 ) )
6080	assertThat ( "File was not saved", testSavePropertiesFile. exists ( ), is ( true ) )
6081	assertEquals ( "replName testNoteId, testParagraphTitle, testParagraphId, " + "testParagraphText, testParagraphTitle, " + "replName, testNoteId, testParagraphId, testParagraphText, " + "#{replName}, testNoteId, testParagraphId, testParagraphText, " + "#{replName}, testNoteId, testParagraphId, testParagraphText, " + "#{replName}, testNoteId, testParagraphId, testParagraphText, " + "#{replName}, testNoteId, testParagraphId, testParagraphText, " + "#{authenticationInfo}", actual )
6082	Assert. assertTrue ( "Adler32 mismatch between written and read", processListener. checkAdlers ( ) )
6083	assertEquals ( 10, classUnderTest. getUpdateAction ( ) )
6084	assertEquals ( 0, model. size ( ) )
6085	assertNotNull ( lp )
6086	assertThat ( result, equalTo ( "withIsmyField" ) )
6087	assertEquals ( OracleMode. ECB, guess )
6088	assertTrue ( cli. destroyProcess ( ), output. contains ( "Legacy command help" ) )
6089	assertSuggestions ( suggestions, "foo", "foob" )
6090	assertEquals ( "John", response. get ( 0 ). getName ( ) )
6091	assertEquals ( "noVehicle", v. getId ( ) )
6092	assertEquals ( "DELETE FROM noShardTableName WHERE [template] AND [template] AND [template] AND [template] AND [template]", test. build ( ) )
6093	assertThat ( factory. buildConfiguration ( ), is ( notNullValue ( ) ) )
6094	assertThat ( output, stringContainsInOrder ( "   <text>", "      <div", "         <pre>line1\\nline2\\nline3  <b>BOLD</b></pre>" ) )
6095	assertEquals ( "342\\n", found )
6096	assertEquals ( m, new HashMap < String, String > ( m. entrySet ( ) ) )
6097	assertEquals ( "Number of upgrades steps", 2, path. size ( ) )
6098	assertThat ( actual, is ( "localhost" ) )
6099	assertEquals ( HttpStatusCode. BAD_REQUEST_400, response. getStatus ( ) )
6100	testRunner. assertAllFlowFilesTransferred ( PutParquet. REL_FAILURE, 1 )
6101	assertions. doesNotContain ( value, index )
6102	assertEquals ( "99\\n", found )
6103	assertTrue ( Arrays. equals ( recreated, secret ) )
6104	assertEquals ( buf. toString ( ), "{\\n \\"a\\": \\"aa\\"\\n}" )
6105	assertThat ( element. getText ( ), is ( "still 0123456789" ) )
6106	assertEquals ( vNum, stringsNum )
6107	assertEquals ( BPResultType. PASS, result. getResultType ( ) )
6108	assertEquals ( 3, algo. getSearchStrategyManager ( ). getStrategies ( ). size ( ) )
6109	assertThat ( result, is ( "Slicer" ) )
6110	assertNotNull ( query. getSingleResult ( ) )
6111	assertEquals ( expected, uri. toString ( ) )
6112	assertTrue ( properties. contains ( EntityIntrospector. introspect ( StringField. class ). getProperties ( ) ) )
6113	assertSame ( dg1, dg2 )
6114	assertEquals ( input. limit ( ), input. position ( ) )
6115	assertFalse ( found )
6116	Assert. assertEquals ( "OK", dMsg )
6117	assertProcessEnded ( pi. getId ( ) )
6118	assertFalse ( validate )
6119	assertNotNull ( "Condition builder is not built", builder )
6120	assertEquals ( FeatureState. ENABLED, state )
6121	assertValidationFailures ( deriver, config )
6122	assertTrue (! failed. get ( ) )
6123	assertErrorResponse ( response, ErrorResponse. ErrorType. INVALID_INPUT, "INVALID_ACCOUNT_ID" )
6124	assertArrayEquals ( serialised, helloMessage. getBytes ( ) )
6125	assertEquals ( NUMADD, table. size ( ) )
6126	assertTrue ( entity. getId ( ) > 0L && entity. getSex ( ) == 'M' )
6127	assertEquals ( "xmlEntity() content-type-header=[application/custom] accepts-header=[*/*]", actual )
6128	assertArrayEquals ( expectedSorted, data )
6129	assertNotNull ( logger )
6130	assertThat ( defn. equals ( defn2 ), is ( false ) )
6131	assertEquals ( "Domain role for UID1 should be equal to expectedUserDomainRoleEntry", expectedUserDomainRoleEntry, store. getDomainRoles ( UID1 ). get ( 0 ) )
6132	assertValid ( result )
6133	assertNotNull ( result )
6134	assertEquals ( expected, actual )
6135	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm", result ) )
6136	assertEquals ( "Quota was not updated", 3, fout. size ( ) )
6137	assertTrue ( expectedDesc. containsAll ( list ) )
6138	assertThat ( subjectOf ( axiom ), is ( notNullValue ( ) ) )
6139	assertTrue ( token. equals ( providedToken ) )
6140	assertEquals ( "val3", value )
6141	assertEquals ( "x" + record. toString ( ), record. toString ( ) )
6142	assertionHelper. assertIrodsFileOrCollectionExists ( targetIrodsFile + "/" + testFileName, accessObjectFactory, irodsAccount )
6143	assertNotNull ( Media. fetcher ( "FXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "MEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
6144	Assert. assertEquals ( 1, reservations. size ( ) )
6145	assertEquals ( "No errors should be registered", 0, errors. getErrorCount ( ) )
6146	assertTrue ( pageXml. contains ( "Welcome to Page2" ) )
6147	assertThat ( value, is ( "value1" + separator ) )
6148	assertEquals ( StatusCode. NAMESPACE_NOT_FOUND, response. getCode ( ) )
6149	assertFailureLogPresent ( pi, "failingTask" )
6150	assertEquals ( Collections. singletonList ( 3L ), context. performQuery ( query ) )
6151	assertEquals ( null, min )
6152	assertTrue ( Objects. equals ( city, getDocumentDataAsCity ( docRef ) ) )
6153	Assert. assertEquals ( "(hgvs_variant (aa_single_allele_var (aa_single_allele_multi_change_var (reference NM_000109.3 :) c. (aa_multi_change_allele [ (aa_multi_change_allele_inner (aa_change (aa_change_inner (aa_change_substitution (aa_point_location (aa_char A) (aa_char Cys)))) (aa_var_sep /) (aa_change (aa_change_inner (aa_change_substitution (aa_point_location (aa_char C124) (aa_char C >))))) ]))))", hgvs_variant. toStringTree ( parser ) )
6154	assertNull ( polygonSymbolizer. getFill ( ) )
6155	assertThat ( getPodSpec ( jobSpec ). getReadinessGates ( ), nullValue ( ) )
6156	assertThat ( result. getPayload ( ), is ( not ( instanceOf ( ExceptionPayload. class ) ) ) )
6157	assertEquals ( "test", c. getFunction ( "test" ) )
6158	Assert. assertEquals ( 0, proposals. size ( ) )
6159	assertEquals ( "Mismatched data", expected, res )
6160	files. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE_PATTERN )
6161	assertArrayEquals ( shapeAssertion, get. shape ( ) )
6162	Assert. assertEquals ( - 400, index )
6163	assertEquals ( 1, message. getMessageId ( ) )
6164	assertEquals ( "docx", da. getDocType ( ) )
6165	assertMatches ( expr. matcher ( "/a/b/c/d/e/@something" ), "/a/b/c", "/x/y" )
6166	assertEquals ( r1, r2 )
6167	assertEquals ( ( byte ) 8, ( byte ) result. getByteWrapperValue ( ) )
6168	assertEquals ( result, targetPermission )
6169	assertTrue ( allAlarms. size ( ) > 0 )
6170	assertEquals ( 18, xreader. findIPStart ( packet ) )
6171	assertEquals ( reference, andPredicate. asCNF ( ) )
6172	assertEquals ( Integer. valueOf ( 67 ), resultMap. get ( "Age" ) )
6173	Assert. assertEquals ( msg, result )
6174	assertEquals ( MODEL_ID, savedModel. getId ( ) )
6175	Assert. assertEquals ( 1, registerSingletonService. getRegistrationCount ( ) )
6176	assertSame ( hello. getIterationStrategyStack ( ), uriTools. resolveUri ( HELLO_URI. resolve ( "iterationstrategy/" ), wfBundle ) )
6177	assertEquals ( 2, result. size ( ) )
6178	assertEquals ( BytesHelper. pinGet ( setPin, checkPin ), BytesHelper. pinGet ( setPin, checkPin ) )
6179	assertEquals ( Sets. newHashSet ( "server=server1->db=jranalyst1", "server=server1->functions" ), backend. getPrivileges ( Sets. newHashSet ( "manager" ), new ActiveRoleSet ( Sets. newHashSet ( "functions" ) ) ) )
6180	assertEquals ( cp. size ( ), 2 )
6181	assertNotNull ( obj )
6182	Assert. assertTrue ( errMsgList. isEmpty ( ) )
6183	assertThat ( editor. getValue ( ), is ( ( Object ) null ) )
6184	assertThat ( result, Matchers. equalTo ( "test1=blah1&test2=blah2" ) )
6185	assertEquals ( 3.14159, result, 0.000001 )
6186	assertEquals ( 2L, impl. getNanoTime ( ). size ( ) )
6187	assertIdentityNotExist ( securityRealm, evidence )
6188	assertTrue ( "jar should exist", destinationJar. exists ( ) )
6189	assertTrue ( serviceManager. getAllServiceTypes ( subject, pc ). isEmpty ( ) )
6190	assertThat ( rendering, is ( "4th September 2011" ) )
6191	assertEquals ( 2, users. size ( ) )
6192	assertEquals ( "a < b", out. toString ( ) )
6193	assertEquals ( "Expected 0 results!", 0, n )
6194	assertEquals ( "with recursive sub as ((select EMPLOYEE.ID, EMPLOYEE.FIRSTNAME, EMPLOYEE.SUPERIOR_ID\\n" + "from EMPLOYEE EMPLOYEE\\n" + "where EMPLOYEE.FIRSTNAME =?)\\n" + "union all\\n" + "(select EMPLOYEE.ID, EMPLOYEE.FIRSTNAME, EMPLOYEE.SUPERIOR_ID\\n" + "from EMPLOYEE EMPLOYEE\\n" + "where EMPLOYEE.SUPERIOR_ID = sub.ID))\\n" + "select *\\n" + "from sub", serializer. toString ( ) )
6195	assertEquals ( expected, stripped )
6196	this. context. assertIsSatisfied ( )
6197	Assert. fail ( "API broken here" )
6198	assertTrue ( runtimeFolder. exists ( ) )
6199	assertThat ( date. getMonth ( ), is ( PlainDate. MONTH_AS_NUMBER ) )
6200	assertTrue ( exception )
6201	assertEquals ( 0, ( int ) tree. entries ( ). count ( ). toBlocking ( ). single ( ) )
6202	assertTrue ( dsl. size ( ) > 0 )
6203	assertEquals ( "Should be OK", 200, result. getStatus ( ) )
6204	assertFalse ( strategy. shouldRetry ( request, env ) )
6205	assertFalse ( info. isValid ( ) )
6206	assertThat ( target. OFPFlowMatch ( ), is ( match ) )
6207	assertEquals ( "Count of customer", 0, res )
6208	assertNull ( store. getSession ( address ) )
6209	assertFalse ( capabilities. isOperationSupported ( PutMap ) )
6210	assertTrue ( containsSymbol ( symbols, "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW", "BMW",
6211	assertEquals ( "SelectionBox should be selected", 1, getGridElement ( ). getCell ( 4, 0 ). getSize ( ) )
6212	assertEquals ( "-23", sb. toString ( ) )
6213	assertThat ( configurer. getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ). getConfiguration ( ), is ( notNullValue ( ) )
6214	assertTrue ( validationIssues. isEmpty ( ) )
6215	assertThat ( pb. getProperties ( ). size ( ), is ( 0 ) )
6216	Assert. assertTrue ( errors. hasFieldErrors ( "frequency" ) )
6217	assertTrue ( client. hasMobile ( ) )
6218	assertPaths ( paths, "s,t" )
6219	assertTrue ( content. contains ( "resource.xml" ) )
6220	assertEquals ( "not anymore", concrete. finalMethod ( ) )
6221	assertThat ( driver. findElement ( By. cssSelector ( ".date-and-time" ) ). isDisplayed ( ), is ( true ) )
6222	assertThat ( target. matchExactly ( match ), is ( false ) )
6223	assertEquals ( s, s2 )
6224	assertTrue ( result. getMessage ( ) + " should contain text'reason' but not 'nonExistingField'", result. getMessage ( ). contains ( "reason" ) )
6225	Assert. assertEquals ( TestEnum. A, settings. getEnumValue ( "key" ) )
6226	assertTrue ( cut. getLinks ( ). isEmpty ( ) )
6227	assertEquals ( "branch", result. get ( ) )
6228	assertEquals ( 0L, analyser. getCommands ( ). values ( ). size ( ) )
6229	assertEquals ( expected, actual )
6230	assertNotNull ( childCert )
6231	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoItemImpostoImportacao ( ). toString ( ) )
6232	assertTrue ( operation. isRestart ( ) )
6233	Assert. assertEquals ( "Result is not null", 1, o )
6234	assertThat ( currentSessionManager. getMeasurementStreams ( ). size ( ), equalTo ( 0 ) )
6235	Assert. assertEquals ( "bar", resolved )
6236	assertFalse ( lockAcquired )
6237	Assert. fail ( "Test should fail, user shouldn't be allowed to invoke that method" )
6238	assertTrue ( tctf. isReady ( mock ( CyCell. class ) ) )
6239	assertFalse ( timeLine. isValid ( intervalEnd ) )
6240	assertEquals ( 1, access. get ( ) )
6241	assertEquals ( expected, actual )
6242	Assert. assertEquals ( "Hello, Kermit", result )
6243	assertThat ( action, is ( "action" ) )
6244	assertEquals ( "a.retainAll(arr.entrySet)", CodeModelTestsHelper. toString ( aLambda ) )
6245	assertEquals ( HttpStatus. SC_UNPROCESSABLE_ENTITY, response. getStatus ( ) )
6246	assertEquals ( 2, resultWarningsCount )
6247	assertThat ( manager. getApplicationPreferences ( ), is ( applicationPreferences ) )
6248	assertTrue ( accept )
6249	Assert. assertEquals ( 404, action. getStatusCode ( ) )
6250	assertFlatResult ( result )
6251	assertNotNull ( entity. getId ( ) )
6252	utils. assertStatus ( "/stacks/" + id, HttpStatus. OK )
6253	assertNotNull ( createdPost )
6254	runner. assertValid ( )
6255	Assert. assertEquals ( "11mzXHR8rZTgfE35EqfGhiShiIwQfLCAziFDXVgs3EjLSPkZkCvfGNLMEf5y", endereco. getNumero ( ) )
6256	assertThat ( buf. toString ( ), is ( equalTo ( "// Given\\r\\n" ) ) )
6257	Assert. fail ( "Failed to catch unsupported comparator names" )
6258	assertTrue ( rootNode. isAuthenticationEnabled ( ) )
6259	assertEquals ( 1.0, WeightedLevenshtein. distance ( "totanic 1", "titanic 2", e ) )
6260	Assert. assertEquals ( "Hello ", new String ( err. toByteArray ( ) ) )
6261	assertEquals ( "12.3", converter. getAsString ( facesContext, new UIPanel ( ), null ) )
6262	Assert. assertEquals ( expected, actual )
6263	assertTrue ( cont1 == 10 )
6264	assertEquals ( asList ( foo4, foo5 ), results )
6265	assertEquals ( initialVersion, ref. getVersion ( ) )
6266	assertNotNull ( result )
6267	assertFalse ( v. isCompatible ( new MetadataVersion ( "alpha", "123" ) ) )
6268	assertTrue ( content. contains ( "foo=bar" ) )
6269	assertSameEnumeration ( "BreadthFirstModel", coreEnum, xEnum )
6270	assertTrue ( caughtNullMutation || caughtNullEntry )
6271	assertSqlCanBeParsedAndDeparsed ( stmt )
6272	Assert. assertEquals ( PaginationHelper. DEFAULT_PAGE_LIMIT, limit )
6273	assertEquals ( attributeName, wadlAttributeName )
6274	assertEquals ( row, null )
6275	assertTrue ( gfs. getStatusProvider ( ). isDirty ( ) )
6276	Assert. assertEquals ( "Target blank link", text. getText ( ) )
6277	Assert. assertNotNull ( json. getJsonObject ( "entry" ). getString ( "id" ) )
6278	assertEquals ( TERM_FACTORY. getConstantLiteral ( "2016-12-02 15:57:02.03", XSD. TIMESTAMP ), translation )
6279	assertEquals ( "Item Q42", withLabel. findLabel ( "fr" ) )
6280	assertThat ( result. fullName ( ), is ( Boolean. class. getName ( ) ) )
6281	assertThat ( appl, is ( JavaSignatureComparator. MATCH_BOXING2 ) )
6282	Assert. assertEquals ( 500L, tuplesPerWindow )
6283	assertTrue ( throttler. requestsThrottled ( request ) )
6284	assertNotNull ( result )
6285	assertThat ( run ( ), is ( true ) )
6286	assertThat ( next. join ( ), is ( VALUE ) )
6287	assertMockEndpointsSatisfied ( )
6288	assertEquals ( "/abc", servletURI )
6289	assertEquals ( String. format ( "Create table new_table from select column column_one" + "%n    - A non-null column called column_one [STRING(10)]" ), HumanReadableStatementHelper. generateAddTableString ( newTable ) )
6290	assertResultsMatch ( select ( windowFunction ( count ( ). orderBy ( field ( "partitionValue1" ) ). build ( ). as ( "theCount" ) ). from ( tableRef ( "WindowFunctionTable" ) ), "7", "7", "7", "7", "7", "7" )
6291	assertNotNull ( svg )
6292	assertEquals ( externalLink, delegatedExternalLink )
6293	assertEquals ( score, smsd1. getEnergyScore ( 0 ), 0.001 )
6294	Assert. isTrue ( 13388L == time )
6295	assertEquals ( val. awaitAndGet ( ), "from instance" )
6296	assertEquals ( "the status of message replied must be 'ok'. ", "ok", reply. body ( ). getString ( "status" ) )
6297	assertEquals ( 3, inMemoryResultAccumulator. getAggregationResultCount ( ) )
6298	assertThat ( properties, containsInAnyOrder ( allOf ( hasProperty ( "name", equalTo ( "name" ) ), hasProperty ( "value", equalTo ( "Hans" ) ), hasProperty ( "name", equalTo ( "age" ) ) ), allOf ( hasProperty ( "name", equalTo ( "age" ) ) ) )
6299	assertTrue ( baseTestFailed )
6300	assertThat ( returnValue, equalTo ( "private" ) )
6301	Assert. assertEquals ( 2, providerList. size ( ) )
6302	assertTrue ( checkContains ( reasoned, "SubClassOf(<http://x.org/XB>)" ) )
6303	assertEquals ( new HashSet < String > ( ), all )
6304	assertThat ( sut. getGMPath ( ), is ( expectedPath ) )
6305	assertThat ( coll. withComplement ( window ), is ( expected ) )
6306	assertQuery ( em, 1, query )
6307	assertEquals ( 3, ac. size ( ) )
6308	assertEquals ( BigInteger. valueOf ( 0 ), BigInteger. valueOf ( ti [ 0 ] ) )
6309	assertNotNull ( result )
6310	assertEquals ( 0x0000, acia. read ( 0x0000, true ) )
6311	Assert. assertEquals ( - 1, timeZoneDefinition. compare ( second, null ) )
6312	assertNotNull ( Service. reader ( ). read ( ) )
6313	Assert. assertTrue ( ( ( BasicDecider ) instance ). compareWorkflowRunFiles ( metadata. getWorkflowRun ( workflowRunAcc ). getInputFileAccessions ( ), filesToRun ) == BasicDecider. FILE_STATUS. PAST_SUBSET_OR_INTERSECTION )
6314	assertEquals ( false, mockResult. included ( "canEdit" ) )
6315	assertEquals ( m1, m2 )
6316	assertTrue ( ctx1. getScore ( ) > ctx2. getScore ( ) )
6317	assertEquals ( valueIn, valueOut, 0.0001 )
6318	assertEquals ( testChangeNameSvrAddr, opsService. getNameSvrAddrList ( ). get ( 0 ) )
6319	Assert. assertEquals ( localDate. toString ( ddMMMyyyy, Locale. ENGLISH ), "23-Aug-2013" )
6320	assertEquals ( "1235", studyAccession )
6321	assertEquals ( expecting, found )
6322	Assert. assertEquals ( "GnomadRecord [chrom=1, pos=10066, id=., ref=T, alt=[TAACCCTAACCCTAACCCTAACCCTAACCC], " + "filter=[RF, LCR], popmax=[FIN], alleleCounts={AFR=[0], AMR=[0], ASJ=[0], EAS=[0], " + "FIN=[1], NFE=[0], OTH=[0], OTH=[0], POPMAX=[1], ALL=[1]}, alleleHetCounts={AFR=[0], AMR=[0], ASJ=[0], EAS=[0], " + "FIN=[1], NFE=[0], OTH=[0], POPMAX=[1], ALL=[1]}, alleleHemiCounts={AFR=[7310], " + "AMR=[670], ASJ=[0], EAS=[0], FIN=[0], NFE=[0], OTH=[0], OTH=[0], " + "EAS=[0], FIN=[0], NFE=[0], OTH=[0], OTH=[0], ALL=[0]}, alleleHemiCounts
6323	assertEquals ( expectedValue. trim ( ), entityExecutor. getEntities ( ). get ( 1 ). getContent ( ). trim ( ) )
6324	assertEquals ( 1, allPatients. size ( ). intValue ( ) )
6325	assertEquals ( 4, count )
6326	assertEquals ( 1, interfaceInfos. size ( ) )
6327	Assert. assertEquals ( ValidationType. DATE_OF_BIRTH, ctxUser. execute ( input ) )
6328	assertTotal ( list )
6329	assertTrue ( verifier. verify ( signature ) )
6330	assertEquals ( 1, count )
6331	assertEquals ( expResult, stringBuilder. toString ( ) )
6332	assertEquals ( grok. getPattern ( ), PropUtil. getStringProperty ( props, "pattern", "*" ) )
6333	assertEquals ( query, result )
6334	assertTrue ( "Date entity validation failed", schema. validate ( dateString ) )
6335	assertTrue ( obtainedLock )
6336	assertNotNull ( immunosuppressionTreatment. getId ( ) )
6337	assertEquals ( expected. toString ( ), PercentDecoder. decodeAll ( encoded. toString ( ) ) )
6338	assertEquals ( expected, actual )
6339	assertEquals ( "Wrong response", 201, responseExpectations. get ( RESPONSE ) )
6340	assertNotNull ( testObj. getVendorOptionInfo ( ) )
6341	Assert. assertEquals ( "Processing of the HL7 message did not result in the new proposal being added to the model", initialOccurrences + 1, Context. getConceptService ( ). getConceptProposals ( "PELVIC MASS" ). size ( ) )
6342	assertTrue ( stmt instanceof CreateTableNode )
6343	assertNotNull ( val )
6344	Assert. assertEquals ( quantidadeItemEfetivamenteExportado, exportacaoIndireta. getQuantidadeItemEfetivamenteExportado ( ) )
6345	assertEquals ( "Hello World", result. getHeader ( "X-Camel-Route" ) )
6346	assertArrayEquals ( "Byte arrays are not the same.", bOut. toByteArray ( ), finalOut. toByteArray ( ) )
6347	assertEquals ( 0, parser. getNumberOfClasses ( ) )
6348	assertNotNull ( itemId )
6349	assertEquals ( 6. * 3600. + 6. * 60. + 12. * 3600. + 12., sec, 0.01 )
6350	Assert. assertEquals ( Integer. class, clazz )
6351	Assert. assertTrue ( "Unexpected returned set", ret. containsAll ( referenceList ) && ret. size ( ) == referenceList. size ( ) )
6352	assertNotNull ( session. from ( $ ( var ) ). where ( $ ( var. getText ( ) ). containsIgnoreCase ( "a bcd e" ) ). uniqueResult ( $ ( var ) ) )
6353	assertNotNull ( fixture )
6354	assertUnsuccessfulConversion ( res )
6355	assertFalse ( controller. isConnected ( ) )
6356	assertEquals ( object, result )
6357	Assert. assertEquals ( "3 ��� ��", t. format ( new Date ( 0 ) ) )
6358	assertEquals ( global. getString ( "a.a1.a11" ), "v1" )
6359	assertThat ( attributeReference, is ( RpslObjectInfo. parse ( "organisation: org-TEST" ) ) )
6360	assertThat ( output. readKeyValuesToList ( ), equalTo ( expectedValues ) )
6361	assertMockEndpointsSatisfied ( )
6362	assertEquals ( expect, sql )
6363	assertTrue ( kbuilder. hasErrors ( ) )
6364	assertTrue ( "processor does not support supported parameter", processor. supportsParameter ( supportedParameter ) )
6365	Assert. assertEquals ( 4, count. get ( ) )
6366	assertEquals ( injectedProperties, properties )
6367	assertArrayEquals ( expected, jsonified )
6368	assertEquals ( jsonValue, result )
6369	assertEquals ( URL, response. getRequestURI ( ) )
6370	Assert. assertEquals ( "staticNonvoidNoParams should have returned a value", DummyObject. class, returned. getClass ( ) )
6371	Assert. assertEquals ( DEFAULT_USERNAME, callIntermediateWhoAmI ( ) )
6372	assertThat ( getDomain ( ). getStatus ( ), is ( "Error during testing: " + new IllegalStateException ( "Test this failure" ). getMessage ( ) ) )
6373	tester. assertRenderedPage ( UserListPage. class )
6374	context. assertAuthzException ( statement, "CREATE DATABASE " + dbName )
6375	assertEquals ( "secretClubName", secretClubName )
6376	assertEquals ( "<p>Test</p>", cleanHtml )
6377	assertEquals ( rc. request ( ). host ( ), host + "," + "www.google.com" )
6378	assertEquals ( HttpStatus. OK, restResponse. getStatus ( ) )
6379	assertEquals ( flipConditionEvaluator, conditionEvaluator )
6380	assertFalse ( impl. hasElapsed ( ) )
6381	assertSame ( TEST_ROUTE, extractedValue )
6382	Assert. assertEquals ( testString, decodedUTF8 )
6383	assertTrue ( messageLatch. await ( 3, TimeUnit. SECONDS ) )
6384	assertEquals ( "JAXRSClientFactoryBean", ctx. getName ( ) )
6385	assertThat ( dialect. addOptimizerHints ( sql, hints ). toString ( ), is ( "SELECT /* SQL_ID */ /*+ INDEX (PUBLIC.TEST_1 test_ix) USE_NL */" + System. lineSeparator ( ) + " * FROM PUBLIC.TEST_1" ) )
6386	assertEquals ( "x", pt. getX ( ) )
6387	assertArrayEquals ( array. data ( ). asInt ( ), compressed. data ( ). asInt ( ), 0.1 )
6388	assertTrue ( Arrays. equals ( getPacketData
6389	assertThat ( generatedHtmlReports. size ( ), is ( 3 ) )
6390	assertTrue ( Arrays. equals ( pktSerialized, pktSerialized1 ) )
6391	Assert. assertTrue ( dl. doAction ( req, resp ) )
6392	assertTrue ( soapBody. getPayloadResult ( ). getPayload ( ). getPayload ( ). getPayload ( ). getPayload ( ). getPayload ( ). isEmpty ( ) )
6393	assertEvent ( "org/osgi/framework/ServiceEvent/REGISTERED", FilterUtils. eq ( "service.objectClass", "org.knowhowlab.osgi.testing.it.testbundle.service.Echo" ), 2, TimeUnit. SECONDS )
6394	assertEquals ( "URI is not built correctly", expectedUri, newUri )
6395	assertThat ( options. getRegions ( ), is ( Arrays. asList ( region ) ) )
6396	assertNotNull ( kieBase )
6397	Assert. assertEquals ( conn. getResponseCode ( ), HttpURLConnection. HTTP_BAD_REQUEST )
6398	assertNull ( ids )
6399	assertFalse ( validator. isValid ( info ) )
6400	assertEquals ( "Hunter(2)", screenshotPlugin. parseHunterWidget ( DIALOG_SPRITE_TEXT ) )
6401	assertEquals ( 0, IOUtils. read ( input, 1 ) )
6402	assertUrl ( url, scheme, host, port, path )
6403	assertEquals ( array, forwarder. array ( ) )
6404	assertEquals ( 3, syncService. syncProjects ( Collections. singletonList ( expired ) ). size ( ) )
6405	assertFalse ( result )
6406	assertEquals ( x, button. getStatusProperty ( "data" ). get ( ). getValue ( ) )
6407	assertTrue ( matcher. matches ( mockElement ) )
6408	assertOut ( "/**\\n * @export\\n * @return {number}\\n */\\nfoo.bar.B.prototype.b = function() {\\n  var /** @type {string} */ s = null;\\n  return s.length;\\n}" )
6409	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
6410	assertEquals ( configurator. getIntProperty ( propertyName ), expectedValue )
6411	assertEquals ( "user1,user2", result )
6412	assertEquals ( 1, performImportScript ( csv, false ) )
6413	assertEquals ( "com.querydsl.codegen.QPointQuery", factory. create ( type ). getFullName ( ) )
6414	assertEquals ( " Some String", leftTrimmedString )
6415	assertFalse ( result )
6416	assertEquals ( USER_PRINCIPAL, op. getUserPrincipal ( ) )
6417	assertSqlCanBeParsedAndDeparsed ( stmt )
6418	assertTrue ( exp instanceof ASTCurrentTime )
6419	assertThat ( info. isTeiidSupport ( ), is ( Boolean. FALSE. booleanValue ( ) ) )
6420	assertEquals ( expected, actual )
6421	assertMedianIs ( 7D )
6422	Assert. assertEquals ( "number of records", 1, app. collector. count )
6423	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Parameter a=\\"b\\" foo=\\"bar\\"/>", elem. toXml ( ) )
6424	assertFalse ( gc. moveToTrash ( path ) )
6425	Assert. assertNull ( "No se ha borrado el documento", getServicioDocumentos ( ). getInfoDocumento ( ID_EXISTENTE ) )
6426	Assert. assertTrue ( recoveryDir. getAbsolutePath ( ). endsWith ( "target/" + time ) )
6427	assertEquals ( DummyDrawHandler. drawTextToString ( "Das ist \\" dfs ", 10, 20, AlignHorizontal. LEFT, null ) + " fg=pink fg=blue", drawHandler. getLastDrawCall ( ) )
6428	assertEquals ( 0, result. size ( ) )
6429	assertAnnotationCompletions ( )
6430	assertEquals ( postChannelRequest. getRequestHeaders ( ), headers )
6431	assertEquals ( expected, query )
6432	assertEquals ( "test", echo. echo ( "test" ) )
6433	assertEquals ( expecting, found )
6434	assertMatch ( e, s )
6435	assertEquals ( 15, result )
6436	Assert. assertEquals ( "Kermit", result )
6437	assertTrue ( true )
6438	Assert. assertEquals ( "12 ����������������������������������������������������������������������������������
6439	assertEquals ( Deencapsulation. getField ( deviceRegistrationState, "errorMessage" ), VALID_ERROR_MESSAGE )
6440	assertEquals ( target. field, check. send ( ) )
6441	assertSame ( t. toLocalTime ( ), LocalTime. MIDNIGHT )
6442	Assert. assertEquals ( "[1,123]", str )
6443	assertTrue ( "Expected a non-empty set of values.", expected. length!= 0 )
6444	Assert. assertTrue ( this. component. setVisibility ( this. entity1, VISIBILITY ) )
6445	Assert. assertEquals ( "name1", person. getAttribute ( 0 ). getName ( ) )
6446	Assert. assertEquals ( 1, creditService. getMessages ( ). size ( ) )
6447	assertEquals ( "UPDATE DATABASECHANGELOG " + "SET MD5SUM = '7:e27bf9c0c2313160ef960a15d44ced47' WHERE ID =? " + "AND AUTHOR =? " + "AND FILENAME =? " + "WHERE SYPA: AUTO_START t眉眉p INT -> TEXT, vaartus 0 00 17 * *?", sqls [ 0 ]. toSql ( ) )
6448	assertEquals ( algos. length, 2 )
6449	assertEquals ( Math. sqrt ( v ), Math. sqrt ( v ), 0.001 )
6450	assertEquals ( response. getStatus ( ), HttpServletResponse. SC_NOT_FOUND )
6451	assertEquals ( "HmacMD5 size", 16, result. length )
6452	assertEquals ( EXPECTED_TOKEN_STRING, token )
6453	Assert. assertEquals ( 33, vm. getGraphicsState ( ). loopVar. longValue ( ) )
6454	assertFalse ( nullFieldProblems. isEmpty ( ) )
6455	assertEquals ( vo. getBagsInPNR ( ), bagsInPNRExample )
6456	runner. assertNotValid ( )
6457	assertNotNull ( getFixture ( ). review ( null, master, slave ) )
6458	assertNull ( proxy. executeStatement ( "select * from sys.tables" ) )
6459	assertEquals ( clientDn, escapedClientDn )
6460	assertEquals ( result, "ok" )
6461	assertNotNull ( argumentType )
6462	assertEquals ( "info:My message with 3 parameters : 1, 2, 3", output )
6463	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<break/>", elem. toXml ( ) )
6464	assertEquals ( "https://localhost:6443", host. getAddress ( ) )
6465	Assert. assertTrue ( "Expected a non-zero value but it was: " + actualValue, actualValue!= 0 )
6466	assertThat ( stepListener. getCurrentTestOutcome ( ). getTestSteps ( ). get ( 0 ). getScreenshotCount ( ), is ( 1 ) )
6467	assertEquals ( 0, this. distributedMap. size ( ) )
6468	assertEquals ( "| script | selenium driver fixture |\\n" + "| start browser | firefox | on url | http://example.com |\\n" + "| check | is | getText | on | field | exact:Out |\\n" + "| stop browser |\\n", result )
6469	assertKernel ( kernel, CIRCLE2, e )
6470	assertEquals ( 14, xreader. findIPStart ( packet ) )
6471	assertXMLEqual ( expected, actual )
6472	assertEquals ( expResult, result )
6473	assertEquals ( "f3dc7765a8857e0f59129f971f81e29dfee4d2b1", actual. get ( "/content/test-page/jcr:content" ) )
6474	assertIterationsEqual ( out2, out1 )
6475	assertTrue ( containsMutatedSeededMethod )
6476	assertArrayEquals ( expectedBuffer, buffer )
6477	assertEquals ( new BigDecimal ( "0.0" ), singleResult )
6478	assertEquals ( "item1", irs. itemName ( ) )
6479	Assert. assertEquals ( total, JFishList. wrap ( all ). sum ( "age" ). intValue ( ) )
6480	assertEquals ( ( ( SoapMessage ) messageContext. getRequest ( ) ). getSoapMessage ( ), result )
6481	FunctionTestUtil. assertResult ( numberFunction. invoke ( contextMap ), "{ key1 : value1, key2 : { childKey1 : childValue1 } }" )
6482	assertNotNull ( countTime )
6483	assertThat ( config. getContainerProvider ( ), is ( SpringContainerProvider. class ) )
6484	assertNotNull ( fixture )
6485	assertEquals ( exp, rev )
6486	assertCanMultiTokenizeString ( randomUnicodeOfLength ( LENGTH ), rand. nextInt ( 998 ) + 2, rand. nextInt ( 100000 ), tokenizer )
6487	assertNotNull ( rec )
6488	Assert. assertTrue ( this. component. setVisibility ( this. entity1, VISIBILITY ) )
6489	assertNotNull ( Fax. fetcher ( "FXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
6490	assertTrue ( "IOR parsed correctly", result. contains ( ior. toString ( ) ) )
6491	assertEquals ( AuthStatus. SUCCESS, module. validateRequest ( messageInfo, client, null ) )
6492	assertEquals ( expResult, result )
6493	Assert. assertNotNull ( editor. getValue ( ) )
6494	Assert. assertEquals ( "Hello World!", result. get ( 1, TimeUnit. SECONDS ) )
6495	assertEquals ( expectedHmacSHA256Signature, actualHmacSHA256Signature )
6496	Assert. assertTrue ( result. success ( ) )
6497	assertNotNull ( result )
6498	assertSame ( channel, new GrpcCleanupRule ( ). register ( channel ) )
6499	assertNotNull ( maintenance )
6500	Assert. assertEquals ( expected, testIndex. findConc ( "May 'brown' [word = 'the']+ 'be'" ) )
6501	assertEquals ( nnf, comp )
6502	assertEquals ( expResult, result )
6503	assertEquals ( gmtDateOneHour. getTime ( ), gmtDate. getTime ( ) )
6504	assertEquals ( theScene, theObject. getGameScene ( ) )
6505	assertNotNull ( paquete. getId ( ) )
6506	assertTrue ( runner. hasFailures ( ) )
6507	assertEquals ( 1, ta. getViewCount ( ) )
6508	assertTrue ( actual )
6509	Assert. assertEquals ( nIterations, genericObjectPool. getDestroyedCount ( ) )
6510	Assert. assertNotNull ( result. getQueryExplanations ( ) )
6511	assertThat ( model2. getMyStringText ( ), is ( "aaa" ) )
6512	assertSame ( d, e. getDomain ( ) )
6513	assertEquals ( before, after )
6514	assertCanMultiTokenizeString ( randomUnicodeOfLength ( LENGTH ), rand. nextInt ( 998 ) + 2, rand. nextInt ( 100000 ), tokenizer )
6515	assertEquals ( expectedPlan, actualPlan )
6516	assertEquals ( "", usernameForAuthorEmail )
6517	Assert. assertThat ( result. size ( ), is ( 2 ) )
6518	assertEquals ( expectedTypes, targetTypeDAO. getTypes ( TENANT_ID ) )
6519	Assert. assertEquals ( "SELECT " + fixedColumns + ",`foo.bar` FROM v WHERE _user_ ='me' GROUP BY `foo.bar`", sql )
6520	assertThat ( movie. toUri ( ), equalTo ( rootUri. resolve ( "/movies/name" ) ) )
6521	assertThat ( dispatched, is ( SYNC_OR_ASYNC_PRIVATE_FLOW_MSG + ".main1@" + ASYNC_MAIN_FLOW_THREAD_NAME + "." + SYNC_OR_ASYNC_PRIVATE_FLOW_NAME + "@" + ASYNC_MAIN_FLOW_THREAD_NAME ) )
6522	assertNotNull ( result )
6523	assertTrue ( aNumber == result )
6524	Assert. assertEquals ( 2, lqs. size ( ) )
6525	assertEquals ( new Long ( 0 ), mojoTimer. getDuration ( ) )
6526	Assert. assertEquals ( 1, a. getNumberOfNestedBlocks ( ) )
6527	assertSizeViolations ( validator. validate ( foo ) )
6528	Assert. assertTrue ( this. manager. connectFromAll ( this. family1, Arrays. asList ( null, this. person1, null, this. person2 ) ) )
6529	Assert. assertEquals ( "{title=fivesmallq}", result )
6530	assertFalse ( violated )
6531	assertThat ( processors, nullValue ( ) )
6532	assertThat ( def. isMultiple ( ), is ( true ) )
6533	assertErrorEventDefinition ( "subProcessStart", "myErrorCode", null )
6534	assertEquals ( expected, product, TOL )
6535	assertEquals ( expecteds, actuals )
6536	assertThat ( doHandle ( request, errorResponse ), is ( sameInstance ( errorResponse ) ) )
6537	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 2, warnings. size ( ) )
6538	assertFalse ( status == 0 )
6539	assertEquals ( savedEntity. getField ( "age" ), 18 )
6540	assertEquals ( joinDataSourceListBo, JoinDataSourceListBo. EMPTY_JOIN_DATA_SOURCE_LIST_BO )
6541	assertEquals ( 1, externalTaskService. fetchAndLock ( 5, WORKER_ID ). topic ( TOPIC_NAME, LOCK_TIME ). execute ( ). get ( 0 ). getPriority ( ) )
6542	assertEquals ( TypeInfoFactory. getListTypeInfo ( TypeInfoCreator. createLong ( ) ), orcType )
6543	assertEquals ( aces, _fs. getACL ( dirInode ) )
6544	assertThat ( doc. getKey ( ), is ( notNullValue ( ) ) )
6545	assertThat ( representation. getString ( "check-number" ), is ( nullValue ( ) ) )
6546	assertEquals ( testPublicId, resultPublicId )
6547	Assert. assertNotNull ( personStructure )
6548	assertEquals ( expr, printConstraint ( expression ) )
6549	Assert. assertEquals ( expectedXML, actualXML )
6550	assertTrue ( "Editor must not work when it is disabled!", isElementPresent ( TextFieldElement. class ) )
6551	assertTrue ( "Error in test: " + i + " " + d + " ms", Math. abs ( diff - expected1. subtract ( wA1 ) ) < 1E-2 )
6552	assertEquals ( expectedIsNullFunction ( ), result )
6553	assertEquals ( "myconfig", configObservable. toBlocking ( ). single ( ) )
6554	assertEquals ( forwardBlz, manager. getRulePositions ( ) )
6555	assertTrue ( ARQ. isTrueOrUndef ( ARQ. optDistinctToReduced ) )
6556	assertEquals ( "cmd", parsedCmd. translateGetValue ( ) )
6557	Assert. assertEquals ( actual, expected )
6558	assertEquals ( openIds, user. getOpenIds ( ) )
6559	assertTrue ( "Incorrect number of statements in the Block", stmts. size ( ) == 1 )
6560	assertEquals ( 15, value )
6561	assertTrue ( "incorrect value", aNumber. toString ( ). equals ( result ) )
6562	assertEquals ( 0, rule. getTaskService ( ). createTaskQuery ( ). processDefinitionKey ( "userTaskCompleted" ). count ( ) )
6563	assertNull ( accessToken )
6564	assertEquals ( "Bar", result. getName ( ) )
6565	assertFalse ( transform instanceof LinearTransform )
6566	assertFalse ( isDisabled )
6567	Assert. assertEquals ( expectedDate, HtmlFormEntryUtil. defaultFormat ( dateString ) )
6568	assertEquals ( "um maxuto", actual )
6569	Assert. assertEquals ( 0, latch. getCount ( ) )
6570	assertEquals ( "Birthdate", value )
6571	assertEquals ( Status. FAILED, result. getStatus ( ) )
6572	assertThat ( readUserId, is ( userId ) )
6573	assertThat ( page. getInputText ( ), is ( "123" ) )
6574	assertEquals ( " AND fieldName = \\"fieldValue\\" AND (lucene = 'true' OR lucene = 'false' )", filterClause )
6575	assertEquals ( clusterVerifier. verifyCluster ( "localhost_12918", "TestDB", true ), clusterVerifier. verifyCluster ( "localhost_12918", true ) )
6576	assertThat ( "candidates should contain [name=] but not [id=]", candidates, allOf ( hasItems ( "name=" ), not ( hasItems ( "id=" ) ) ) )
6577	assertNull ( action )
6578	assertOut ( "for (var i:int = 0, /** @type {number} */ len = 10; i < len; i++)\\n  break;" )
6579	Assert. assertNotNull ( addressResultsDto )
6580	Assert. assertNotNull ( instance. getAllAtomMapping ( ) )
6581	assertionHelper. assertTwoFilesAreEqualByRecursiveTreeComparison ( localFile, destFile )
6582	assertEquals ( mockBorder, classUnderTest. getStart ( ) )
6583	assertEquals ( reader, readerResult )
6584	Truth. assertThat ( currentSessionManager. getMeasurements ( ) )
6585	assertTrue ( "Failed to instantiate action: " + aa. getCanonicalName ( ), actions. contains ( aa ) )
6586	assertThat ( result. size ( ), is ( 0 ) )
6587	assertEquals ( label, 0, diff. getRMS ( ). length ( ) )
6588	assertExec ( "Should be the same", Numbers. class, "deserDouble__D", f )
6589	assertThat ( log. getLogEntries ( 1, 5, quorumId ), resultsIn ( emptyList ( ) ) )
6590	assertNotNull ( "Gadget manager should not be null", manager )
6591	Assert. assertEquals ( "SELECT pet.id, pet.num, pet.name, pet.age, pet.cate, pet.master_id, pet.user_id FROM t_pet pet  ORDER BY id" + fieldAdd + " ASC LIMIT 0, 5 ;", sql )
6592	assertEquals ( expecteds, actuals )
6593	assertEquals ( 2, session. from ( var ). distinct ( ). list ( var ). size ( ) )
6594	assertEquals ( ROUTE_KEY, instanceIdentifier. firstKeyOf ( FlowspecL3vpnRoute. class ) )
6595	assertEquals ( HttpStatus. SC_OK, response. getStatusLine ( ). getStatusCode ( ) )
6596	assertTrue ( "Wrong output: " + output, output. contains ( "subscriber to the 'errorChannel' channel" ) )
6597	assertFalse ( server. isComplete ( ) )
6598	assertTrue ( elapsed < numberLongEvents * 1000 )
6599	assertEquals ( "4c6c6d6e6f5c6e6f5c6e6f5c6e6f5c6e6f5c6e6f5c6e6f5c6e6f5c6e6f5c6e6f5c6e6f5c6e6f5c6e6f5c6e6f5c6e6f", md5 )
6600	assertEquals ( "cat.kittens.any().name =?1", serialize ( predicate ) )
6601	assertThat ( commands. get ( asList ( "test" ) ). getResult ( ), is ( "result" ) )
6602	assertNotNull ( method )
6603	assertEquals ( "Wrong URL", file. getAbsolutePath ( ), FileLocatorUtils. fileFromURL ( url ). getAbsolutePath ( ) )
6604	assertEquals ( testConnectionDetails1. getConnectionId ( ), getId ( ) )
6605	assertEquals ( host, other )
6606	assertTrue ( control. matches ( "/any/ICanPutAnythingInHere/what" ) )
6607	assertEquals ( Double. valueOf ( testBytes. length ), Double. parseDouble ( testBytes [ 0 ] ), 0.00001 )
6608	assertEquals ( "linktitle", node. getHref ( ) )
6609	assertEquals ( expected, victim. process ( prefix, nameRequest ( ). originalName ( originalName ) ) )
6610	Assert. assertTrue ( Math. abs ( maxAbsDeviation ) < 1E-3 )
6611	assertThat ( "view", view, equalTo ( "redirect:/cart" ) )
6612	assertTrue ( "Intersection between plane and half line is incorrect", pi. equals ( piExp ) )
6613	assertNull ( eRetrieved )
6614	assertNull ( variableValue )
6615	assertEquals ( messageList. size ( ), partitionMessageQueue. getMessageList ( ). size ( ) )
6616	assertThat ( found, equalTo ( expected ) )
6617	assertEquals ( exp, res )
6618	assertTrue ( matcher. match ( msg, rule ) )
6619	Assert. assertEquals ( _runCounts. size ( ), 5 )
6620	assertEquals ( 4, breakpoint. getBreakpoint ( ) )
6621	assertThat ( any. contains ( AM_PM ), is ( true ) )
6622	Assert. assertEquals ( 2, tables. size ( ) )
6623	assertSequence ( visitor. getNodes ( ), "c", "b", "e", "d", "a" )
6624	Assert. assertEquals ( ServerParse. INSERT, sqlType )
6625	assertSame ( p3, result )
6626	assertEquals ( 1.0101L, element. getLongValue ( ), 0.0001 )
6627	Assert. assertEquals ( idSet. size ( ), 16 )
6628	assertEquals ( 2, response. getBody ( ). getEntities ( ). size ( ) )
6629	assertEquals ( cancelStatus, sublistenerCaptor1. getValue ( ). getStatus ( ) )
6630	assertProcessInstanceFinished ( processInstance, ksession )
6631	Assert. fail ( ex. getMessage ( ) )
6632	assertEquals ( 4, sum, 0 )
6633	assertTrue ( "get column control in table", control instanceof ColumnControlButton )
6634	assertEquals ( 4, MigrationTaskSkipper. skipOne ( myTasks ) )
6635	throwables. assertIsNotInstanceOf ( info, actual, Person. class )
6636	assertEquals ( "car", type. getProfile ( ) )
6637	assertEquals ( cache. get ( "a" ), null )
6638	assertEquals ( profilePage. getUsername ( ), "test-admin" )
6639	assertEquals ( expectedResult, result )
6640	assertEquals ( "_id", res. getSearchParam ( ). get ( 1 ). getName ( ). getValue ( ) )
6641	assertEquals ( 20, wrapper. getGenre ( ) )
6642	Assert. assertFalse ( new LogAdapter ( "N/A", mockConfigDefault ( ) ). isWarnEnabled ( ) )
6643	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
6644	assertEquals ( 200, status )
6645	assertArrayEquals ( original, ArrayUtils. nullToEmpty ( original ) )
6646	assertThat ( record. getDash ( ), is ( nullValue ( ) ) )
6647	Assert. assertEquals ( createArrayNode ( createObjectNode ( "fieldName", 3 ), createObjectNode ( "fieldName", 4 ), createObjectNode ( "fieldName", 5 ) ), result )
6648	assertEquals ( "MESSAGE_TEXT", msg )
6649	assertNotNull ( thesaurus )
6650	assertEquals ( "error", ex. getMessage ( ) )
6651	assertEquals ( ImmutableList. of ( "B" ), storeConfig. getRealmNames ( ) )
6652	assertEquals ( 1, cnt. get ( ) )
6653	Assert. assertEquals ( testTemplate1. getTemplateName ( ), templateName )
6654	Assert. assertEquals ( "Hello World", ejbInstance. sayHello ( ) )
6655	assertEquals ( asList ( "4:1", "1:0", "1:2", "2:3", "2:4", "5:6", "6:7", "6:8" ), messageResults )
6656	Assert. assertEquals ( 1, countingNotifier. getNotificationCount ( ) )
6657	assertEquals ( "(| [= foo] [= bar] [= baz])", m. toString ( ) )
6658	assertSame ( ctrlA, accelerator )
6659	assertEquals ( 0.0, distance. compute ( point1, point2 ), EPSILON )
6660	assertThat ( ifCounterDataIndexable. matchesPojo ( this. counterData ), is ( false ) )
6661	assertEquals ( 1, added )
6662	org. junit. Assert. assertEquals ( 0, ret )
6663	assertEquals ( CustomsItemCollection. getData ( ). size ( ), 1 )
6664	assertEquals ( HttpStatusCode. NOT_FOUND. getStatusCode ( ), connection. getResponseCode ( ) )
6665	assertEquals ( ( i < 10? i : 10 ), ( ( Long ) ksession. getQueryResults ( "TestDeclaredLengthWindow" ). iterator ( ). next ( ). get ( "$eventCount" ) ). intValue ( ) )
6666	Assert. assertEquals ( "b;a", response. getSource ( ). get ( "_labels" ) )
6667	assertEquals ( 1.000, score, 0.00001 )
6668	assertEquals ( "a\\n", found )
6669	assertEquals ( 3, skipped )
6670	assertThat ( result, is ( expected ) )
6671	assertViewName ( mav, "editNotificationSettings" )
6672	assertEquals ( jt. getRawClass ( ), Long. class )
6673	assertFalse ( hidden )
6674	assertEquals ( "ATS03F=0\\r\\n", intArrayToString ( command. serialize ( ) ) )
6675	assertEquals ( 266L, folder. getUnpackSizeOne ( ) )
6676	Assert. assertEquals ( String. format ( "some %s", this. html ( bb, "color", "color [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [/color]]", defaultOptions ( ) ) ), formatter. format ( "some [color=red]color [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [color=red] [/color] [/red] [/color]]", defaultOptions ( ) ) )
6677	assertResultSet ( res )
6678	assertTrue ( "Interpolators have been cloned", cc2. getInterpolators ( ). isEmpty ( ) )
6679	assertArrayEquals ( new Timestamp [ ] { new Timestamp ( "1970-02-04 00:00:00.591" ), new Timestamp ( "01999-05-16 00:00:00.591" ), new Timestamp ( "1970-02-04 01:02:33.01" ), null }, getRow ( ). getArray ( "timestasha", Timestamp [ ]. class ) )
6680	assertEquals ( avClusteringCoefficient, 0.0 )
6681	assertEquals ( H2Templates. DEFAULT, H2Provider. getTemplates ( em ) )
6682	assertProjectOut ( compiledFileNames, testDirPath )
6683	assertThat ( conn, is ( notNullValue ( ) ) )
6684	assertThat ( actual, is ( equalTo ( expected ) ) )
6685	assertThat ( tz. isInvalid ( date, PlainTime. of ( - 1, 0 ) ), is ( false ) )
6686	assertNull ( "null is returned when locale is not available", city. getContinent ( ). getName ( ) )
6687	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, n ) + ", rmse = " + rmse, 0.0, rmse, EPS )
6688	assertEquals ( bar1, bar2 )
6689	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( popup ) instanceof WPopupRenderer )
6690	assertEquals ( o1, o2 )
6691	assertThat ( result. toString ( ), is ( "OuterBean2{name='bingoohuang', bean=InnerBean1{addr='gongjianfang'}}" ) )
6692	assertNotNull ( plist )
6693	assertEquals ( "Qos=MOST_ONE", Base64. getEncoder ( ). encode ( msg ) )
6694	assertNotNull ( Regulation. reader ( ). read ( ) )
6695	assertEquals ( "1", ( ( NumberValue ) value1 ). getValue ( ) )
6696	assertEquals ( "../..", result. toString ( ) )
6697	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. COMMENT, this. doc ) )
6698	assertEquals ( "Type is returned for property 'class'", ClassName. class, container. getType ( "class" ) )
6699	assertEquals ( password, encodedPass )
6700	assertEquals ( 0, shell. run ( new String [ ] { "listbookies", "-all" } ) )
6701	Assert. assertEquals ( 8, count. intValue ( ) )
6702	assertEquals ( 2, orgUnits. size ( ) )
6703	Assert. assertFalse ( "result should be false", result )
6704	assertThat ( nodeTuple, is ( nullValue ( ) ) )
6705	given ( ). when ( ). get ( "/services/costcenters/schema.json" ). then ( ). assertThat ( )
6706	assertContentSame ( rs, rc, columnParam1 )
6707	assertThat ( headers. get ( HeaderConstants. EXPIRES ), is ( nullValue ( ) ) )
6708	assertEquals ( top, entry. getValue ( ) )
6709	assertThat ( controllerIdManager. getTargets ( ). size ( ), is ( Target. CONTROLLER_ID_MAX_SIZE ) )
6710	assertEquals ( "The cat loves a dog.", this. realiser. realise ( completeSen ). getRealisation ( ) )
6711	assertNull ( converter. getAsObject ( facesContext, new UIPanel ( ), "123" ) )
6712	assertTrue ( uploadSuccessful )
6713	Assert. assertNull ( result )
6714	assertFalse ( optionalLong. isPresent ( ) )
6715	assertTrue ( length == 10 )
6716	Assert. assertEquals ( correlation. computeCorrelationMatrix ( input ), new BlockRealMatrix ( expected ) )
6717	assertEquals ( "d3e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5
6718	assertArrayEquals ( plaintext, recovered )
6719	assertEquals ( NamedCurve. valuesFromAsn1 ( signatureGen ), NamedCurve. valuesFromAsn1 ( pub ) )
6720	Assert. assertNotNull ( topic )
6721	assertSame ( t, TEST_2007_07_15_12_30_40_987654321 )
6722	assertEquals ( "Wrong representation", NodeStructureHelper. ROOT_AUTHORS_TREE, model. getInMemoryRepresentation ( ) )
6723	assertEquals ( "2 & 3", expr. getParameterValue ( ) )
6724	assertEquals ( HttpStatusCode. INTERNAL_SERVER_ERROR. code, response. getStatus ( ) )
6725	assertThat ( result. fullName ( ), is ( Long. class. getName ( ) ) )
6726	Assert. assertEquals ( "[1, 3]", s. toString ( ) )
6727	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, name + "_diff" ) )
6728	assertEquals ( "dist job res is not 0:", 0, res )
6729	Assert. assertEquals ( "99999999999.9999", cide. getQuantidadeBCCIDE ( ) )
6730	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
6731	assertEquals ( "A:\\t[A, C]\\t[A, C]\\t\\n" + "C:\\t\\n", res )
6732	assertThat ( source. contains ( "\\r" ), is ( true ) )
6733	Assert. assertEquals ( "(nt_range (nt_point_location (nt_base_location - (nt_number 456))) _ (nt_point_location (nt_base_location - (nt_number 123))))", range. toStringTree ( parser ) )
6734	assertTrue ( "failed to decrypt ciphertext", Arrays. equals ( message, expectedMessage ) )
6735	TerminalParserTest. assertResult ( parser, "synchronized(foo);", SynchronizedBlockStatement. class, "synchronized(foo);" )
6736	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. NOT, v, TERM_FACTORY. getConstantLiteral ( "A.*B", XSD. STRING ), TERM_FACTORY. getConstantLiteral ( "i", XSD. STRING ) ), translation. get ( 0 ) )
6737	Assert. assertEquals ( 0, queue. size ( ) )
6738	assertEquals ( "3", Util. asString ( expression ) )
6739	assertThat ( System. currentTimeMillis ( ) - startTime, is ( not ( threadToMonitor. getTimeRemaining ( ) ) ) )
6740	Assert. assertEquals ( expResult, result )
6741	assertEquals ( value, this. impl. getString ( key ) )
6742	assertThat ( id, greaterThan ( 0 ) )
6743	assertEquals ( "Repository contains incorrect number of statements", 1, testCon. size ( ) )
6744	assertEquals ( "Buffer is not correct", "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6745	assertThat ( result, is ( "" + "{\\n" + "  \\"service\\" : \\"abuse-contact\\",\\n" + "  \\"link\\" : {\\n" + "    \\"type\\" : \\"locator\\",\\n" + "    \\"href\\" : \\"http://rest.db.ripe.net/abuse-contact/193.0.0.1\\"\\n" + "  },\\n" + "  \\"parameters\\" : {\\n" + "    \\"primary-key\\" : {\\n" + "      \\"value\\" : \\"193.0.0.0 - 193.0.0.255\\"\\n" + "    }\\n" + "  },\\n" + "  \\"abuse-contacts\\" : {\\n" + "    \\"primary-key\\" : {\\n" + "      \\"value\\" : \\"193.0.0.0 - 193.0.0.255\\"\\n" + "    }\\n" + "  },\\n" + "  \\
6746	assertThat ( captor. getValue ( ), is ( lazyPersistSetting ) )
6747	assertPutFails ( association, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
6748	Assert. assertEquals ( "in the room and a car", this. realiser. realise ( this. inTheRoom ). getRealisation ( ) )
6749	assertNotNull ( Role. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
6750	assertNotNull ( result )
6751	assertEquals ( "2.25", event. getLocation ( ). getReference ( ). toString ( ) )
6752	assertEquals ( "Expected 0 results!", 0, n )
6753	assertEquals ( expectedQuery, actualQuery )
6754	Assert. assertEquals ( Result. OK, sandboxedInstanceTestFixture. result )
6755	Assert. assertEquals ( session. getRandomGenerator ( foo0 ), session. getRandomGenerator ( foo1 ) )
6756	Assert. assertEquals ( expected, value )
6757	assertThat ( modelFromConfig, is ( sameInstance ( modelFromTest ) ) )
6758	assertThat ( element. getText ( ), is ( "value with appended text" ) )
6759	assertEquals ( original, other )
6760	assertOut ( "for each (var i:int in obj) {\\n\\tbreak;\\n}" )
6761	assertThat ( replicationCache. get ( "test" ), nullValue ( ) )
6762	assertFalse ( undefined. isReleased ( ) )
6763	assertObjectEquals ( "{type:'array',items:{type:'string'}}", x. getSchema ( ) )
6764	assertFalse ( "testIsInProgressSubmissionFalse 0", itemService. isInProgressSubmission ( context, item ) )
6765	Assert. assertEquals ( infoReverse. getSequence ( ), resultTranscript )
6766	Assert. assertEquals ( 1, patients. size ( ) )
6767	assertEquals ( s, s. mapFirstOrElse ( s -> s. mapFirstOrElse ( s ) ). toList ( ) )
6768	assertEquals ( new Integer ( 2 ), MethodFixture. getArgNum ( ) )
6769	assertStat ( result )
6770	assertEquals ( "{a:'a1',b:'b1',c:'c1',e:'',g:'\\\\'true\\\\'',h:'\\\\'123\\''}", r )
6771	assertEqualsIgnoreWhitespace ( expected, real )
6772	assertEquals ( listResponse. getEnvironments ( ). size ( ), 0 )
6773	assertEquals ( "x = bla", ejbql )
6774	assertValidQuery ( query )
6775	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
6776	assertArrayEquals ( Arrays. toString ( d. getResult ( ) ), refar, d. getResult ( ) )
6777	assertEquals ( "Failed to generate do while loop with nested expressions and no body", DOWHILE_NESTED_EMPTY, s )
6778	assertEquals ( 2, totalBestFriendAge )
6779	Assert. assertTrue ( capitals. length ( ) == 4 )
6780	assertTrue ( errors. equals ( noErrors ) )
6781	assertEquals ( major, version. parsed [ 0 ] )
6782	assertThat ( zookeeperClient, not ( nullValue ( ) ) )
6783	assertEquals ( expected, xml )
6784	assertOut ( "RoyaleTest_A.prototype.foo = function() {\\n  return React.createElement('div', { 'id': 'foo' });\\n}" )
6785	Assert. assertEquals ( "http://foo:8080/bar?a=A&b=B", filter. getRequestURL ( request ) )
6786	assertThat ( writer. get ( ), is ( ( byte ) - 100 ) )
6787	assertThat ( target. getMergeFeature ( feature1. getId ( ) ). getStatuses ( ). get ( 0 ). getStatuses ( ). get ( 0 ), is ( Statuses. getStatuses ( feature2. getId ( ). get ( 0 ). getStatuses ( ). get ( 0 ) ) )
6788	assertThat ( bar ( ), is ( 6 ) )
6789	assertEquals ( expected, recovered )
6790	assertEquals ( expecteds, actuals )
6791	Assert. assertEquals ( lb. getStatus ( ), LoadBalancerStatus. ERROR )
6792	assertNotNull ( "Specialty is null", entity )
6793	assertNotEquals ( 0, tokenLists. size ( ) )
6794	assertEquals ( expectedId, jobServicesClient. findById ( "test-name" ). getId ( ) )
6795	assertThat ( results. hasNext ( ), equalTo ( false ) )
6796	assertEquals ( Response. Status. NO_CONTENT. getStatusCode ( ), response. getStatus ( ) )
6797	assertEquals ( Response. Status. NO_CONTENT. getStatusCode ( ), response. getStatus ( ) )
6798	assertNotNull ( result )
6799	Assert. assertArrayEquals ( new byte [ ] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
6800	assertThat ( errors, hasFieldErrors ( "givenName" ) )
6801	assertTrue ( "BinaryEncoder test-" + i, b )
6802	assertEquals ( 4, tool. heapCaculation ( ) )
6803	assertResponse ( response, 400, "{\\"errors\\":[\\"Metric name is required to be null" ] } )
6804	assertFalse ( validator. validate ( EntityNames. STAFF, staffId ). equals ( staffId ) )
6805	assertEquals ( "test", cache. getProgram ( ) )
6806	assertEquals ( f. getQuery ( ), q )
6807	Assert. assertEquals ( expectedCrossProduct, crossProduct )
6808	assertEquals ( metadata, repository. getModuleMetadata ( "TEST-REPLICA" ) )
6809	assertEquals ( writeOperation, writer. getWriteOperation ( ) )
6810	assertEquals ( "", result )
6811	assertEquals ( 0, app. executeApplication ( args ) )
6812	assertEquals ( "negotiatorHandler", transport. getAttributes ( ). get ( SO_KEEPALIVE ) )
6813	Assert. assertNotNull ( category )
6814	Assert. assertNull ( result )
6815	context. assertIsSatisfied ( )
6816	Assert. assertTrue ( validator. validSequence ( 1, inputSequence, outcomesSequence, outcome ) )
6817	Assert. assertEquals ( 0, monitor. getHealthCheckCount ( ) )
6818	assertEqualsIgnoreWhitespace ( drlExpected, drlActual )
6819	assertEquals ( "", v. toString ( ) )
6820	assertEquals ( "3", multiServer. indexPicture ( FileUtils. readPicture ( LOCALPICTURE2 ), 3l, null ) )
6821	assertEquals ( expResult, result )
6822	Assert. fail ( e. getMessage ( ) )
6823	assertTrue ( throwables [ 0 ] instanceof NullPointerException )
6824	assertTrue ( "socket path pattern is " + ABSTRACT, a. path ( ). matches ( ABSTRACT ) )
6825	assertFalse ( pgql. parse ( query ). isQueryValid ( ) )
6826	assertEquals ( "Wrong value", ( byte ) 0xdead, u. s16. get ( ) )
6827	Assert. assertFalse ( isPortInCircuit )
6828	assertNotNull ( checkProfessionalUser )
6829	assertEquals ( clearPassword, password )
6830	assertThat ( resolver. resolve ( CamelCaseStory. class ), equalTo ( "org/jbehave/core/io/UnderscoredCamelCaseStory.story" ) )
6831	assertPermanentCount ( playerA, "Cabal Therapist", 0 )
6832	assertEquals ( expected, actual )
6833	assertEquals ( 1, linear. getRowVector ( 0, 1 ). length ( ) )
6834	assertOut ( "/**\\n * @constructor\\n */\\nfoo.bar.baz.A = function() {\\n};" )
6835	Assert. assertTrue ( response. toString ( ), response. result ( ) )
6836	assertSame ( t. toLocalTime ( ), LocalTime. MIDNIGHT )
6837	assertEquals ( TestUtil. SOCKS_TEST_PROXY, result. get ( 0 ) )
6838	assertTrue ( waiter. shouldStartWaiting ( ) )
6839	assertNotNull ( con. createStatement ( ) )
6840	assertEquals ( eventDetails. size ( ), events. size ( ) )
6841	assertThat ( result, is ( false ) )
6842	Helpers. assertJson ( json, expectedJson )
6843	assertEquals ( "Input value json should match output value json", inputJson, outputJson )
6844	assertNotNull ( cache )
6845	assertNotNullOrEmpty ( "Tags should never be null.", tags )
6846	assertSame ( t, TEST_2007_07_15_12_30_40_987654321 )
6847	Assert. assertEquals ( true, localesInOrder. contains ( LocaleUtility. fromSpecification ( Locale. ENGLISH ) ) )
6848	assertEquals ( "Exclude rule with name UselessParentheses should be excluded from ruleset", RuleExclude. EXCLUDE_NAME, rule. getExcludeName ( ) )
6849	assertEquals ( 1, foundComments. size ( ) )
6850	assertOut ( "a++" )
6851	assertEquals ( diffusioncoefficient, result [ 0 ], 0.01 )
6852	assertTrue ( details. hasAborted ( ) )
6853	assertEquals ( response. getStatusCode ( ), 200 )
6854	assertThat ( target. retrieveStats ( "http://localhost:8080/fred" ), is ( notNullValue ( ) ) )
6855	Assert. assertEquals ( expected, queryFromBuilder )
6856	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
6857	assertEquals ( 0, baseWriter. getWrittenTags ( ). size ( ) )
6858	MockEndpoint. assertIsSatisfied ( mockEndpoints )
6859	Assert. areEqual ( true, countA == 20, "检查记录条数,countA=" + countA + ", countB=" + countB )
6860	assertEquals ( "|1,2,3|true|false|true|\\n", tabulator. tableOf ( data ) )
6861	assertEquals ( 2, executeTestMethod ( test, Integer. class, null, 0 ). intValue ( ) )
6862	assertTrue ( content. contains ( ".metadata" ) )
6863	assertThat ( result, is ( "value" ) )
6864	assertEquals ( 2, list. size ( ) )
6865	assertEquals ( degree_EXPECTED, degree_ACTUAL )
6866	assertEquals ( 77, mr. getLocation ( ) )
6867	assertEquals ( expected, actual )
6868	VertxAssert. assertEquals ( "The graph operation resulted in an error: " + response. getString ( "message" ), "ok", response. getString ( "status" ) )
6869	assertTrue ( "testCanEditBooleanAuth", collectionService. canEditBoolean ( context, collection, true ) )
6870	JsonTestUtils. assertHasArrayOfObjectsWithFields ( response, "id" )
6871	Assert. assertTrue ( new JSONObject ( PEDIGREE_3_MIGRATED_DATA ). similar ( new JSONObject ( captured ) ) )
6872	assertEquals ( Math. br ( 4, 5 ), circle. br ( r ), PRECISION )
6873	Assert. assertEquals ( "caught", o )
6874	assertEquals ( String. valueOf ( ReturnCode. NO_SPEECH. code ( ) ), eventCaptor. getValue ( ). getParameter ( "rc" ) )
6875	assertEquals ( doc1, io. getDocumentById ( id1, false ) )
6876	assertSame ( t1, t2 )
6877	assertEquals ( 1, x. size ( ) )
6878	assertEquals ( "GPGLL", s )
6879	Assert. assertEquals ( objectMapper. readValue ( auctionSummaryWithDeals. toString ( ), MmxAuctionSummary. class ), auctionSummaryWithDeals )
6880	assertOrecValue ( orec, orecValue )
6881	assertFalse ( orFn. accept ( 1 ) )
6882	assertTrue ( Bytes. equals ( key1Bytes, key1ExpectedBytes ) )
6883	assertEquals ( 2, vrp. getJobs ( ). size ( ) )
6884	assertEquals ( vo. getPhoneNumbers ( ). get ( 0 ). getNumber ( ), "5776776" )
6885	assertEquals ( result, port )
6886	assertOut ( "var /** @type {CustomVector} */ a = new CustomVector()" )
6887	assertEquals ( "cfapps.io", target. getDomains ( ). get ( 0 ). getName ( ) )
6888	assertEquals ( expResult, result )
6889	assertEquals ( 1, repositoryService. createProcessDefinitionQuery ( ). count ( ) )
6890	assertEquals ( "<table><tbody><tr><td>One</td><td><table><tbody><tr><td>Two</td></tr></tbody></table></td><td>Three</td></tr></tbody></table>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
6891	Assert. assertFalse ( setA. equals ( setB ) )
6892	Assert. assertEquals ( 0.06303, test. bootstrap ( x, y, 10000, false, rng ), 1E-2 )
6893	assertEquals ( VALID_DATE, Deencapsulation. getField ( enrollmentGroup, "lastUpdatedDateTimeUtcDate" ) )
6894	Assert. assertTrue ( persistence. insert ( getContact ( ) ) )
6895	assertEquals ( "Failed to filter query string", expectedResult, normalizedUrl )
6896	assertEquals ( value, property. getOriginalValue ( ) )
6897	assertOutput ( freemarker. benchmark ( ) )
6898	Assert. assertEquals ( "unexpected XML protocol result", sb. toString ( ), tagOut )
6899	assertEquals ( "SelfNaming", client. getAttribute ( DOMAIN_NAME, OBJECT_NAME, "selfNaming" ) )
6900	assertTrue ( exception. getMessage ( ). contains ( "must be a Collection" ) )
6901	assertThat ( value, is ( equalTo ( 1024L ) ) )
6902	assertEquals ( "Required profiles", "runner", new FelixPlatformBuilderF160 ( m_bundleContext, "version" ). getRequiredProfile ( m_platformContext ) )
6903	assertTrue ( "size must be 2, but it is - " + queryModel. size ( ), queryModel. size ( ) == 2 )
6904	assertTrue ( accepts )
6905	assertEquals ( expResult, result )
6906	assertEquals ( constraintViolations. size ( ), 0 )
6907	Assert. assertEquals ( "result2", result. get ( "outputVariable1" ) )
6908	assertAntFilter ( filters, "{\\"address\\":{\\"streetName\\":\\"At my place\\",\\"streetNumber\\":\\"1\\"},\\"email\\":\\"somewhere@no.where\\",\\"firstName\\":\\"Martin\\",\\"lastName\\":\\"Frey\\",\\"reports\\":[{\\"address\\":null,\\"email\\":\\"report0@no.where\\",\\"firstName\\":\\"First 0\\",\\"lastName\\":\\"Doe 0\\",\\"manager\\":null,\\"reports\\":null},{\\"address\\":null,\\"email\\":\\"report1@no.where\\",\\"firstName\\":\\"First 1\\",\\"lastName\\":\\"Doe 1\\",\\"manager\\":null,\\"reports\\":null},{\\"address\\":null,\\"email\\":\\"report2@no.where\\",\\"firstName\\":\\"First 2\\",\\"lastName\\":\\"Doe 2\\",\\"manager\\":null,\\"reports\\":null},{\\"address\\":null,\\"email\\":\\"report3@no.where\\",\\"
6909	assertNull ( exception. get ( ) )
6910	assertEquals ( 0.0, f. value ( 1 ), 0.0 )
6911	testRunner. assertAllFlowFilesTransferred ( PutKudu. REL_SUCCESS, 1 )
6912	assertEqualsIgnoreWhitespace ( expected, real )
6913	assertEquals ( "9 id status", s )
6914	assertThat ( output. toString ( ), is ( "mygoodlittlebadson" ) )
6915	Assert. assertEquals ( "number emitted tuples", 1, swinSink. collectedTuples. size ( ) )
6916	assertThat ( findFeature ( features, "UpdateFirmware" ), is ( instanceOf ( UpdateFirmwareFeature. class ) ) )
6917	assertTrue ( ha. equals ( hb ) )
6918	assertEquals ( augmentationNode, entry. getValue ( ) )
6919	assertEquals ( RequestOptions. WAIT_FOR_RESPONSES_UNTIL_TIMEOUT, requestOptions. getWaitForResponses ( ) )
6920	assertEquals ( "ReasonToTerminate", pod1. getStatus ( ) )
6921	Assert. assertFalse ( clusterContext1. isListeningOnMulticastInterface ( ) )
6922	Assert. assertEquals ( "Tabby", names. makeString ( ) )
6923	Assert. assertTrue ( result. isValid ( ) )
6924	assertEquals ( arr, resultArr )
6925	assertThat ( entities. isEmpty ( ), is ( true ) )
6926	assertEquals ( address1, address2 )
6927	Assert. assertEquals ( dto1, loaded1 )
6928	assertThat ( result. toSet ( ). size ( ), is ( 1 ) )
6929	assertEquals ( 25, counter. getCountIterations ( ) )
6930	Assert. assertEquals ( "rows from db", NUM_TUPLES, transactionalStore. getNumEventsProcessed ( ) )
6931	assertEquals ( "http://example.com?url=https%3Aexample.com", got. toString ( ) )
6932	assertEquals ( entity, second )
6933	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, testName + "_diff" ) )
6934	Assert. assertEquals ( "File upload failed.", text )
6935	assertEquals ( HttpStatus. SC_NOT_FOUND, response. getStatus ( ) )
6936	assertThat ( c, is ( 2 ) )
6937	Assert. assertTrue ( cars. size ( ) > 0 )
6938	assertEquals ( "Servlet environment should be set", Environment. TEST, AppContext. current ( ). getServletContextEnvironment ( ) )
6939	assertThat ( encoded, stringContainsInOrder ( "<Patient xmlns=\\"http://hl7.org/fhir\\">", "<contained>", "<Condition xmlns=\\"http://hl7.org/fhir\\">", "<id value=\\"1\\"/>", "</Condition>", "</contained>", "<extension url=\\"test\\">", "<valueReference>", "<reference value=\\"#1\\"/>", "</valueReference>", "</extension>", "<birthDate value=\\"2016-04-05\\"/>", "</Patient>" ) )
6940	assertArrayEquals ( "invalid opaque value", value, opaque. getOpaque ( ) )
6941	assertTrue ( result. length ( ) > 0 )
6942	assertEquals ( Money. of ( 0.0, "CHF" ), ci. apply ( ci ) )
6943	assertFocusModificationSanity ( context )
6944	assertThat ( image, is ( equalTo ( "http://www.googlechart.com/chart/chart.png" ) ) )
6945	assertTrue ( "Should get response", response!= null )
6946	assertOverflow ( new BigDecimal ( x ). add ( new BigDecimal ( y ) ), result, x + y )
6947	assertNotNull ( execContext. getDocument ( ) )
6948	assertEquals ( model, actual )
6949	assertEquals ( score, 0.0, 0.00001 )
6950	assertFalse ( activityManager. isStarted ( expectedSplashScreenActivity ) )
6951	assertNotNull ( getCoprocessor ( log ) )
6952	assertTrue ( "Server should be sorted", lowest > last )
6953	assertEquals ( "Expected 5 results!", 5, count )
6954	assertTrue ( config. isClientProfile ( ) )
6955	Assert. assertEquals ( "node path", getPostData ( "uniqueness" ) )
6956	JSONAssert. assertEquals ( expected, response. getBody ( ), false )
6957	assertEquals ( df. getIRI ( "urn:test:prem" ), documentIRI )
6958	assertEquals ( dataSet. getRowCount ( ), 50 )
6959	assertTrue ( ARQ. isTrueOrUndef ( ARQ. optOrderByDistinctApplication ) )
6960	assertThat ( obj. getSensorsObservations ( ), is ( empty ( ) ) )
6961	assertEquals ( "~valid", expr. getParameterValue ( ) )
6962	assertFalse ( pm. isEnabled ( ) )
6963	assertEquals ( store. getRoot ( ). builder ( ). toString ( ), root. toString ( ) )
6964	assertFalse ( isValid )
6965	assertTrue ( objUnderTest. removeServiceProvider ( existingIssuer ) )
6966	Assert. assertTrue ( dumpToFile. exists ( ) )
6967	Assert. assertTrue ( flag )
6968	assertEquals ( "Key", msg. getString ( key ) )
6969	assertEquals ( 0, ic. getItemIds ( 0, - 1 ). size ( ) )
6970	Assert. assertEquals ( 0, queue. size ( ) )
6971	assertTrue ( out. isEmpty ( ) )
6972	assertThat ( elasticsearchTemplate. indexExists ( "test-index" ), is ( true ) )
6973	assertNull ( request. getEcommerceTax ( ) )
6974	assertThat ( actual, is ( expected ) )
6975	assertThat ( actual, is ( equalTo ( expected ) ) )
6976	Assert. assertTrue ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, this. access, this. document ) )
6977	Assert. assertEquals ( Arrays. < Object > asList ( 1, 2, 3 ), list )
6978	assertEquals ( logs. get ( i ), message )
6979	assertEquals ( expected, this. output. toString ( ) )
6980	assertTrue ( ( Boolean ) result )
6981	assertTrue ( between. appliesToProperty ( "foo" ) )
6982	assertEquals ( expectedQuery, actualQuery )
6983	Assert. assertEquals ( 1, files. length )
6984	assertNotNull ( result )
6985	assertEquals ( "<a><b><xxx newElementAttribute=\\"1234\\"></xxx></b></a>", result. getResult ( ) )
6986	assertEquals ( expected, actual )
6987	Assert. assertEquals ( localDate. toString ( ddMMMyyyy, Locale. ENGLISH ), "17-Jun-2013" )
6988	MatcherAssert. assertThat ( meaning. grammaticalMeaning ( Mockito. any ( ) ). grammemes ( ), CoreMatchers. equalTo ( ImmutableSet. of ( one, two, three ) ) )
6989	TestUtils. assertEquals ( anexo, anexoModificado )
6990	assertEquals ( results [ p ], density, 0.0 )
6991	assertVisitorSatisfied ( )
6992	assertEqualsIgnoreWhitespace ( expected, real )
6993	assertNull ( singletonServiceGroup. unregisterService ( firstReg ) )
6994	assertEquals ( "2.3.0", spec. decodeString ( ) )
6995	assertNotNull ( Document. fetcher ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "ETXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
6996	assertEquals ( 1, ( ( LockingMetricGetters ) statsCollector ). getMessageFailedCount ( ) )
6997	assertEquals ( "The reconsts don't match.", n3w. length, reconst. length )
6998	assertTrue ( pub. length == 1 )
6999	assertEquals ( 1, result. size ( ) )
7000	assertArrayEquals ( TEST_DATA, attrs. getBytes ( 0x7FE00010 ) )
7001	assertThat ( facts. getActions ( ), hasSize ( 1 ) )
7002	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
7003	assertEquals ( Boolean. TRUE, f. evaluate ( ) )
7004	assertEqualsJson ( expected, actual )
7005	assertArrayEquals ( new byte [ ] { 1, 2, 3, 4, 5, 6 }, bytes )
7006	assertEquals ( 1, ( int ) entries. count ( ). toBlocking ( ). single ( ) )
7007	assertOut ( "org.apache.royale.utils.Language.sortOpt(a, Array.NUMERIC)" )
7008	assertEquals ( description, activity. getProperty ( PROPERTY_ACTIVITY_DESCRIPTION ) )
7009	assertThat ( windows. withGaps ( ), is ( empty ( ) ) )
7010	assertCollectionSerialization ( expectedJSON, collection )
7011	assertFalse ( PharmaModulo11Validator. isValid ( pzn ) )
7012	assertEquals ( "foo", getParameterRepositoryService ( ). getParameterValueAsString ( key, "foo" ) )
7013	Assert. assertNull ( new CompareTool ( ). compareVisually ( dest, sourceFolder + "cmp_signed" + file, destinationFolder, "diff_", getTestMap ( new Rectangle ( 30, 245, 200, 12 ) ) ) )
7014	assertEquals ( 1, status )
7015	Assert. assertEquals ( ImmutableList. of ( new Term ( "noIndex", "noTerm" ) ), terms )
7016	assertEquals ( "K1", v1. getKey ( ) )
7017	assertEquals ( 3, uris. size ( ) )
7018	Assert. assertEquals ( "a", rootEl. getNodeName ( ) )
7019	Assert. assertEquals ( "somethings", unit )
7020	assertFalse ( currentData. isPresent ( ) )
7021	assertMatches ( expr. matcher ( "/a/b/c/d/f/@something" ), "/a/b/c", "/\\\\$2u/b/c/y/z/d/f" )
7022	assertEquals ( "Count of customer", 0, res )
7023	assertEquals ( 0, methods. size ( ) )
7024	assertEquals ( "a", val. getString ( "a" ) )
7025	Assert. assertEquals ( originalPaths, harPaths )
7026	assertTrue ( producer. windowing instanceof Time )
7027	assertSame ( root, transform ( root ) )
7028	Assert. assertTrue ( true )
7029	assertEquals ( "abc", FuturesExtra. asyncTransform3 ( futureA, futureB, futureC, ( a, b, c ) -> a + b + c, MoreExecutors. directExecutor ( ) ). get ( ) )
7030	Assert. assertEquals ( "fib 2 = fib (N-1) + fib (N-2)", res. toString ( ) )
7031	assertEquals ( "UUUU-04-01", result. getParameters ( ). get ( "date" ). getAsString ( ) )
7032	Assert. assertEquals ( "%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%3CResponse%2F%3E", elem. toUrl ( ) )
7033	assertEquals ( "number of messages not correct", numberOfRecords, receiveNum )
7034	assertEquals ( "from SURVEY s\\n" + "inner join SURVEY s2\\n" + "on s.ID = s2.ID", query. toString ( ) )
7035	assertTrue ( "Bundle file '" + _bundle + "' for bundle'" + bundle + "' does not exist.", _bundle. exists ( ) )
7036	assertEquals ( 5, cashFlow. getSize ( ) )
7037	assertTrue ( "Should equals", toJsonNode ( res ). equals ( toJsonNode ( TestUtils. readStringFromClasspathFile ( "/asserts/prepareCommentIndexedDocument_ORG-1501_1.json" ) ) ) )
7038	assertNull ( entryRelationship )
7039	Assert. assertTrue ( charset. equals ( CharsetUtil. getCharset ( charsetIndex ) ) )
7040	assertNotNull ( form )
7041	assertThat ( credentials, is ( notNullValue ( ) ) )
7042	assertEquals ( 2, actualExpectedWorkerLinkCount )
7043	Assert. assertTrue ( response. contains ( "Call reached IMPL as schemaValidation went thru fine.siteid - 0clientid - abclang - 3" ) )
7044	Assert. assertNotEquals ( resp. getStatus ( ), HttpServletResponse. SC_UNSUPPORTED_MEDIA_TYPE )
7045	get ( "expireaftertwoseconds" ). then ( ). assertThat ( )
7046	assertEquals ( sc1, sc2 )
7047	assertThat ( stream. count ( ), equalTo ( 1L ) )
7048	assertEquals ( "lucene condition serialization is wrong", expected, actual )
7049	assertTrue ( outStr. contains ( NamenodeFsck. HEALTHY_STATUS ) )
7050	Assert. assertFalse ( molecule1. equals ( molecule2 ) )
7051	assertThat ( domain. getLogHomeEnabled ( ), is ( true ) )
7052	assertTrue ( result )
7053	Assert. assertTrue ( ms < client. getCallTimeOut ( ) )
7054	Assert. assertEquals ( "Not a security filter", SecurityFilter. class, f. getClass ( ) )
7055	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 06" ) )
7056	assertEquals ( "Part1/Part2trunk/Part2branch/Part3", sw. toString ( ) )
7057	assertThat ( separators, is ( ";\\n;\\n;" ) )
7058	assertEquals ( recordTable, recordTable )
7059	assertEquals ( 0, report. getEventCount ( ) )
7060	Assert. assertFalse ( t1 == t2 )
7061	assertThat ( sshClientEnvVar, anyOf ( startsWith ( "::1" ), startsWith ( "127.0.0.1" ) ) )
7062	assertThat ( new FloatValidator ( "hoge" ). validate ( parameters, "aaa" ), is ( "hoge" ) )
7063	Assert. assertEquals ( expectedCardinality, outputCardinality )
7064	assertThat ( a. overlaps ( b ), is ( false ) )
7065	this. assertVerification ( )
7066	assertEquals ( buf. toString ( ), Long. toString ( input ) )
7067	assertEqualsStoreParams ( params, params2 )
7068	assertEquals ( 1, bucket. size ( ) )
7069	assertEquals ( Expression. LESS_THAN, exp. getType ( ) )
7070	assertEquals ( original, inverse )
7071	assertEquals ( RestrictedHealthStatus. WARN, response. getHealthy ( ) )
7072	assertTrue ( predicate. isHighlighted ( null, adapter ) )
7073	assertNull ( array )
7074	assertEquals ( expectedSqlForMathOperations8 ( ), result )
7075	Assert. assertEquals ( "(aa_change_ssr (aa_point_location (aa_char Cys) 123) ( aa_char Arg) 124) ( 3 _ 4 ))", aa_change_ssr. toStringTree ( parser ) )
7076	assertTrue ( pct. isOverrideSystemSettings ( ) )
7077	assertEquals ( "void f(void* target, void* p0) {\\n" + "    struct f_0001_0001 {int m0;};\\n" + "    struct f_0001_0000 {int m0;};\\n" + "    struct f_0001 {struct f_0001_0000 m0;struct f_0001_0001 m1;};\\n" + "    ((void (*)(struct f_0001)) target)(*((struct f_0001*)p0));\\n" + "}\\n", BridgeMethodCompiler. createBridgeCWrapper ( functionType. getReturnType ( ), functionType. getParameterTypes ( ), functionType. getParameterTypes ( ), "f" ) )
7078	assertEquals ( err. getClass ( ), HttpPostRequestEncoder. ErrorDataEncoderException. class )
7079	assertUserCount ( users, 5 )
7080	assertArrayEquals ( expectedBytes, serializer. serialize ( ) )
7081	assertNotNull ( kbase )
7082	assertEquals ( "value2 -arg1 value1 -arg2 myDate -arg3 value3", batchTask. argumentsToString ( batchTask. getArgs ( ) ) )
7083	assertTrue ( filter instanceof MockFilter )
7084	assertEquals ( items, matchingResults. size ( ) )
7085	Assert. assertEquals ( "did not get expected length back", expectedLen, actualRead )
7086	assertEquals ( "Jimmie", object. getString ( "firstname" ) )
7087	Assert. assertTrue ( writer. isStopped ( ) )
7088	assertEquals ( user, mockResult. included ( "user" ) )
7089	assertEquals ( myFile, entry. getFile ( ) )
7090	assertEquals ( 0, violations. size ( ) )
7091	VertxAssert. assertEquals ( "The graph operation resulted in an error: " + response. getString ( "message" ), "ok", response. getString ( "status" ) )
7092	assertTrue ( p. getPropertyType ( ). getName ( ). equals ( Properties. class. getName ( ) ) )
7093	assertArrayEquals ( expected, params. getTripleIndexes ( ) )
7094	Assert. assertTrue ( p. g ( 4 ) == 4 )
7095	assertEquals ( 0, result. size ( ) )
7096	assertEquals ( expected, actual )
7097	assertEquals ( 70, loadOntology. getAxiomCount ( ) )
7098	assertSame ( "same info", info, info ( "m", "m desc" ) )
7099	maven. forProject ( basedir ). withCliOption ( "-Dprotobuf.version=241" ). execute ( "verify" ). assertErrorFreeLog ( )
7100	assertEquals ( expectedResult, result )
7101	assertEquals ( "failed to generate class with method calling method on this", CLASS_WITH_METHOD_CALLING_METHOD_ON_THIS, cls )
7102	assertEquals ( "Request should be allowed", Response. Status. OK, val. getStatusInfo ( ) )
7103	assertEquals ( "http://localhost:80/mywebapp/servlet/MyServlet/", tested. getBaseUrl ( ) )
7104	Assert. assertEquals ( expected, map. getTransformer ( TransformerMapTest. class ) )
7105	assertEquals ( "http://foo/Patient?_include=a&_include=b", capt. getValue ( ). getURI ( ). toString ( ) )
7106	assertTrue ( cohortService. getCohortByUuid ( RestTestConstants2_1. COHORT_UUID ). getVoided ( ) )
7107	assertTrue ( reduce. getWindowing ( ) instanceof Time )
7108	Assert. assertTrue ( resultFound )
7109	assertFalse ( validator. getValidationResult ( ). hasFailures ( ) )
7110	Assert. assertTrue ( checkFlowNodeInstanceState ( NodeInstaceStates. PASSED_STATE, process, defaultInstanceId ) )
7111	assertEquals ( service. getSize ( new String [ ] { "", "", "" } ), 3 )
7112	assertFalse ( "Expected DateSchema string validation failure did not succeed", schema. validate ( stringEntity ) )
7113	assertTrue ( permissionEvaluator. hasPagePermission ( authentication, "project", "branch", DocumentrConstants. HOME_PAGE_NAME + "/foo", Permission. VIEW ) )
7114	assertNotNull ( statsd )
7115	assertEquals ( capability, handler1. handle ( cParameters, capaBytes ) )
7116	assertEquals ( 2, users. size ( ) )
7117	assertTrue ( "Node not removed", node. getChildren ( ). isEmpty ( ) )
7118	assertThat ( readBytes ( testee ), is ( "World|" ) )
7119	Assert. assertEquals ( "[1, 2, 3]", formatted )
7120	assertEquals ( "Expected 400 but got " + response. getStatus ( ), 400, response. getStatus ( ) )
7121	assertEquals ( 200, connection. getResponseCode ( ) )
7122	assertThat ( result. getType ( ), is ( "OFPOutPacket" ) )
7123	assertEquals ( JobStatus. ACCEPTED, jobResultArgumentCaptor. getValue ( ). getStatus ( ) )
7124	runner. assertNotValid ( service )
7125	assertTrue ( Arrays. equals ( expectedResult, encoded. array ( ) ) )
7126	assertEquals ( expected, returnValue )
7127	assertEquals ( expected, actual )
7128	assertEquals ( decodedColumnInfo, ImmutableList. of ( columnInfo1, columnInfo2 ) )
7129	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
7130	assertEquals ( sortedValues, values )
7131	assertFalse ( iterator. hasNext ( ) )
7132	assertEquals ( expResult, result )
7133	assertChangesNotDispatched ( listener )
7134	Assert. assertEquals ( "did not compute expected path", expected, path )
7135	assertThat ( url, is ( "/abc/Anything/def/123/ghi/123.45" ) )
7136	assertIsRemovedToInvisible ( columnModel, 0, false )
7137	assertEquals ( 3, longStream. getAsLong ( ) )
7138	assertEquals ( expectedDate, actualDate )
7139	assertEquals ( assertion, rowMean )
7140	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
7141	assertEquals ( "Persist operator should be added to dag after stream.add", persister, persistOperatorMeta )
7142	assertEquals ( "123", label. get ( ) )
7143	assertResultSet ( res )
7144	assertEquals ( testData, scanner. next ( ) )
7145	assertEquals ( 2, findIndexObject. size ( ) )
7146	assertNotNull ( proveedorFacturas. getId ( ) )
7147	assertEquals ( "True has to be returned in this case", 128 * 1024 * 1024, inf. getPreferredBlockSize ( ) )
7148	Assert. assertEquals ( ImmutableSet. of ( "keyToInclude", "anotherKeyToInclude" ), filteredPhotonRequest. keys ( ) )
7149	assertEquals ( 2, actualExpectedWorkerLinkCount )
7150	Truth. assertThat ( HttpJsonCallContext. createDefault ( ). withTimeout ( Duration. ofSeconds ( - 1L ) ). getTimeout ( ) )
7151	Assert. assertEquals ( 3, a. rank ( ) )
7152	assertEquals ( 1, list. size ( ) )
7153	assertTrue ( entity. equals ( entity2 ) )
7154	assertEquals ( "No such service demo", result )
7155	assertEquals ( outputEntity. getKey ( ). getPartitionId ( ). toString ( ), null )
7156	Assert. assertEquals ( expected, actual )
7157	Assert. assertNotNull ( job. toString ( ) )
7158	assertEquals ( "<b><<test>></b>", multiLineText. toDisplay ( ) )
7159	Assert. assertEquals ( 404, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
7160	assertEquals ( "http://foo/bar/stepdefs.json", url. toString ( ) )
7161	assertTrue ( result. size ( ) == 3 )
7162	assertTrue ( response. getEntry ( ). size ( ) > 0 )
7163	Assert. assertTrue ( result. equals ( "10 �拽�转" ) )
7164	assertSseResponse ( sseResponse, "event:eventName", "data:payload1", "event:eventName", "data:payload2" )
7165	Assert. assertTrue ( this. validator. validate ( c ). isEmpty ( ) )
7166	Assert. assertTrue ( basedir. exists ( ) )
7167	Assert. assertEquals ( "The house where I played poker was abandoned since 1986.", realised. getRealisation ( ) )
7168	assertFalse ( authorizer. authorize ( profiles ) )
7169	assertThat ( map. price ( ), is ( 17 ) )
7170	assertTrue ( close. await ( 10, SECONDS ) )
7171	assertEquals ( i, orderMap. get ( id ) )
7172	assertThat ( "Kein Ergebnis geliefert", target, notNullValue ( ) )
7173	assertThat ( testSubject. getPrefix ( TEST ), is ( NS ) )
7174	Assert. assertEquals ( "anta怒 40 minutoj", prettyTime. format ( prettyTime. calculatePreciseDuration ( new Date ( new Date ( ). getTime ( ) - 40 * 60 * 1000 - 40 * 1000 ) ) ) )
7175	Assert. fail ( type [ j ] + ", " + b + ", " + a )
7176	Assert. assertEquals ( 1d, StatUtils. getMean ( numbers ), TOL )
7177	Assert. assertEquals ( "88132-020", retornoConsultaCadastroEndereco. getCep ( ) )
7178	assertTrue ( serviceSet. isEmpty ( ) )
7179	assertThat ( IDN. toUnicode ( result. toString ( ) ), equalTo ( robots ) )
7180	assertNull ( query. offset ( 10 ). fetchOne ( ) )
7181	Assert. assertTrue ( ZipCompletionScanner. isCompleteZip ( file ) )
7182	assertEquals ( asList ( new LogoutRequest ( ) ), serverEvents. collect ( ) )
7183	Assert. assertThat ( values, Matchers. contains ( "value 0.5;p=v;q=0.5;value 1.0" ) )
7184	assertEquals ( newModified, Files. getLastModifiedTime ( path ). toMillis ( ) )
7185	assertPolygons ( expected, polys )
7186	assertNotNull ( accessToken )
7187	assertLocation ( "Rome", "Italy" )
7188	Assert. assertEquals ( "A1", value, 0d )
7189	ModelTestBase. assertIsoModels ( expected, m )
7190	assertThat ( violations. size ( ), is ( 0 ) )
7191	assertTrue ( "expected oval but got " + count, count == ERROR_LIMIT )
7192	assertEquals ( Float. class, handler. apply ( rs, 1 ). getClass ( ) )
7193	assertCleanedUpState ( 1 )
7194	assertNotNull ( edm )
7195	assertThat ( timePeriod. with ( STD_CLOCK_PERIOD. rounded ( ) ), is ( Duration. ofClockUnits ( 2, 61, 0 ) ) )
7196	assertTrue ( true )
7197	assertEquals ( IOTester. VALUE_IN_PAYLOAD, buf. getPayload ( ) )
7198	Assert. assertEquals ( table. getRowCount ( ), 2 )
7199	assertEquals ( 11, v. getProperty ( value ) )
7200	assertEquals ( 0, result. size ( ) )
7201	assertValidSelector ( result )
7202	assertThat ( result, is ( sameInstance ( primaryKeysResponse ) ) )
7203	Assert. assertNotNull ( result )
7204	Assert. assertTrue ( getException )
7205	assertEquals ( expected, dotFileFormat. format ( new StringReader ( "subgraph_gXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ) ) )
7206	assertEquals ( 10, state. getRowIndex ( ) )
7207	assertTrue ( underTest. createNewKey ( ) )
7208	assertEquals ( 10, instance. getFactor ( ), 0.1 )
7209	given ( ). get ( "zips/notfound.zip/test/path/content/notfound.png" ). then ( ). assertThat ( )
7210	assertThat ( renewer. getCurrentlyHeldLeases ( ). size ( ), equalTo ( 0 ) )
7211	Assert. assertEquals ( "The rule does not match the built one", testRule, builtRule )
7212	assertEquals ( "arguments should match", defaultBuilder. compression ( eOutputCompressionMode ). build ( ), controller. getFromUI ( false ) )
7213	assertEquals ( "dubbo://127.0.0.1:20887", result )
7214	Assert. assertTrue ( "topic was not removed", topic. getTopicMap ( ) == null )
7215	assertEquals ( PropUtil. getIntSessionProperty ( sess, "test", 1 ), 2 )
7216	assertSqlCanBeParsedAndDeparsed ( stmt )
7217	assertFalse ( "check same component", _update. hasUpdate ( NEW_STRING_PATH, newComponent2 ) )
7218	assertEquals ( 4 * THREE_LINES_REMOVED_SCORE, playerScores. getScore ( ) )
7219	assertEquals ( "array type", 2, parsed. params. get ( 0 ). first. arrayDepth )
7220	Assert. assertTrue ( check. equals ( o ) )
7221	assertTrue ( usl instanceof UniqueSymbol )
7222	assertTrue ( 5.0f == d. asFloat4 ( ) )
7223	Assert. assertTrue ( validator. validSequence ( 1, inputSequence, outcomesSequence, outcome ) )
7224	assertTrue ( easyCTO. getClass ( ). isAssignableFrom ( EasyCTO. class ) )
7225	assertEquals ( HttpServletResponse. SC_UNAUTHORIZED, response. getStatus ( ) )
7226	Assert. assertEquals ( Response. NOT_FOUND, response. statusCode )
7227	assertNotNull ( NativeCodeLoader. getLoadingError ( ) )
7228	assertEquals ( value, out. getSizeT ( ) )
7229	assertEquals ( expected, wrapperFilename )
7230	assertEquals ( "hello", filterResult. getValue ( ) )
7231	assertEquals ( 0, version. getMinors ( ). size ( ) )
7232	assertThatSliderValueIs ( minimumOf ( slider ) )
7233	assertThat ( resourceIds, is ( expectedResourceIds ) )
7234	Assert. assertEquals ( EMPTY, result )
7235	assertEquals ( o1, o2 )
7236	assertEquals ( "foo", store. getConnector ( REMOTE_CONNECTOR_ADDRESS ). get ( "name" ). asString ( ) )
7237	assertEquals ( "Maintenance document should have been handled", 1, logServiceState. documentCount )
7238	assertEquals ( response. getStatusCode ( ), 201 )
7239	assertEquals ( expected, actual )
7240	assertThat ( parameter, is ( "braa" ) )
7241	Assert. assertEquals ( 16, buf. remaining ( ) )
7242	assertEquals ( "dois sextilh玫es de inteiros", actual )
7243	assertEquals ( 1, detections. length )
7244	Assert. assertEquals ( "Failure - expected validatorList size to be 2", 2, str. size ( ) )
7245	assertEquals ( anchor, workbenchMenuStandardNavBarView. getMenuItemContextWidgetMap ( ). get ( menuId ) )
7246	assertTrue ( zoomUI. canZoomOut ( ) )
7247	assertOut ( "/**\\n * @export\\n * @return {number}\\n */\\nRoyaleTest_A.prototype.foo = function(bar) {\\n\\tvar self = this;\\n\\treturn -1;\\n}" )
7248	assertTrue ( vrpBuilder. getLocationMap ( ). containsKey ( "end" ) )
7249	assertEquals ( contentExpected, contentReturned )
7250	Assert. assertTrue ( rep. containsKey ( "Test tab" ) )
7251	Assert. assertEquals ( 300, li. getValue ( 50 ), 1e-5 )
7252	assertEquals ( new Integer ( 2 ), newestVersion. getIndex ( ) )
7253	Assert. assertEquals ( 0, services. size ( ) )
7254	assertThat ( TestI18n. testMessage. text ( Locale. ENGLISH ), is ( "Test Message" ) )
7255	assertThat ( result, is ( nullValue ( ) ) )
7256	assertEquals ( result, expecting )
7257	assertEquals ( "6:::{\\"name\\":\\"edwald\\",\\"args\\":[{\\"a\\":\\"b\\"},2,\\"3\\"]}", result )
7258	assertThrown ( val, promise )
7259	assertPaths ( asList ( "com", "sonatype", "example", "metadata.xml" ), paths )
7260	Assert. assertEquals ( Integer. valueOf ( 3 ), object )
7261	Assert. assertTrue ( permissions. toString ( ), permissions. isEmpty ( ) )
7262	assertEquals ( "a b\\n", found )
7263	assertEquals ( cal. getTime ( ), w. getEnd ( ) )
7264	Assert. assertEquals ( 1, entities. size ( ) )
7265	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getPermissions ( authorizables, list ( "jranalyst" ) ). values ( ) ). toString ( ) )
7266	assertRecord ( record )
7267	assertEquals ( "field.toLowerCase()", p. toString ( ) )
7268	assertEquals ( "Sie", selectSingle ( jcas, ref ). get ( 0 ) )
7269	assertFalse ( hasLock )
7270	assertEquals ( "Hello TestNG!", hello ( ) )
7271	Assert. assertFalse ( this. entityAccess. isOwner ( ) )
7272	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
7273	assertEquals ( "2.1", PomIdsHelper. getJobVersion ( property ) )
7274	assertTrue ( outContent. toString ( ). equals ( "Job1 is 3rd in the JobQueue.\\n" ) )
7275	assertArrayEquals ( data, ( short [ ] ) deserialize. readObject ( ) )
7276	Assert. assertNull ( mapping )
7277	assertThat ( comments, hasSize ( 2 ) )
7278	assertEquals ( row, serde. capturedRow )
7279	this. assertResponse ( faultResponse, null, this. defaultMessage, message, null, null, this. parameters )
7280	Assert. assertEquals ( result. getResultSize ( ), 8 )
7281	assertTrue ( nicHandle. equals ( NicHandle. parse ( "DW", source, countryCodes ) ) )
7282	assertEquals ( false, victim. getConfiguration ( ). isDebug ( ) )
7283	assertFalse ( b )
7284	assertThat ( timer. getDuration ( ), is ( TimeUnit. MILLISECONDS. toNanos ( 500 ) ) )
7285	assertEquals ( "Failed to convert empty String to BigInteger", null, model. getAmountInt ( ) )
7286	Assert. assertNotNull ( "FileName value is missing", atFields. get ( "fileName" ) )
7287	assertSame ( solution, selection. execute ( population ) )
7288	assertEquals ( newValue, presenter. getValue ( ) )
7289	assertNull ( resource )
7290	assertEquals ( 2, rules. size ( ) )
7291	assertEquals ( pp. getValue ( ), new Payload < > ( "error test error" ). getValue ( ) )
7292	assertEquals ( "Placeholder", rootMapper. mySynchronizer. getSelectedItems ( ). iterator ( ). next ( ) )
7293	assertConstruct ( tq, ttl )
7294	assertEquals ( "{\\"error\\":{\\"message\\":\\"testValue\\",\\"status\\":200,\\"values\\":[{\\"value\\":\\"testValue\\",\\"value\\":1.0}]},{\\"error\\":{\\"message\\":\\"testType\\",\\"status\\":200},{\\"value\\":\\"testValue\\",\\"status\\":200},{\\"value\\":1.0}]},{\\"error\\":{\\"message\\":\\"testValue\\",\\"status\\":200},\\"values\\":[{\\"value\\":\\"testValue\\",\\"value\\":1.0}]},{\\"error\\":{\\"message\\":\\"testType\\",\\"status\\":200},{\\"message\\":\\"testValue\\",\\"status\\":200}]}", writer. toString ( ) )
7295	assertEquals ( 0, ret_val )
7296	assertEquals ( "Attemped updating a TabGroup after adding a Tab to his first " + "TabGroup, then clearing the EntityManager.  " + "Expected to see the new tab after re-loading the TabGroup.", "Foo", tabGroup. getTabs ( ). get ( tabGroup. getTabs ( ). size ( ) - 1 ). getTabName ( ) )
7297	assertEquals ( "2 >>> 3", expr. getParameterValue ( ) )
7298	assertEquals ( "<foo:bar id=\\"1\\" /><abc:def id=\\"2\\">Foo<p>Hello</p></abc:def><foo:bar>There</foo:bar>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
7299	assertFalse ( like1. equals ( like2 ) )
7300	assertEquals ( 0, attribsSet. size ( ) )
7301	assertEquals ( "Reference value not set", Address. valueOf ( MAGIC ), ref. getValue ( ) )
7302	Assert. assertArrayEquals ( expected, kernel. toArray ( ), 1e-4 )
7303	assertEquals ( "Answer returning " + value, r. toString ( ) )
7304	assertEquals ( expectedSignature, signature )
7305	assertEquals ( "hello", config. name ( ) )
7306	Assert. assertEquals ( "Should return exactly one variable", 1, response. jsonPath ( ). getMap ( "" ). size ( ) )
7307	assertions. doesNotContain ( ( short ) 4, index )
7308	assertEquals ( validatedConfig. getString ( PostgresConnectorConfig. SLOT_NAME ), "xx-aa" )
7309	assertEquals ( a. getDstContextAlias ( ), "dst" )
7310	RouteUtils. assertSatisfied ( result )
7311	assertThat ( query. count ( ), is ( 0L ) )
7312	assertTrue ( executor instanceof FatGammaTxnExecutor )
7313	assertThat ( log. getEvents ( ). size ( ), equalTo ( 3 ) )
7314	Assert. assertEquals ( "The received ID is different than expected VALID_ID_FOR_DELETION.", VALID_ID_FOR_DELETION, da. getId ( ) )
7315	assertEquals ( json, jobResult. getJobResult ( ). getContent ( ) )
7316	Assert. assertEquals ( getResultMatrix ( ), resultMatrix )
7317	assertTrue ( "The output file doesn't match the expected one", Files. exists ( pom1 ) )
7318	assertEquals ( "test.txt", FileUtil. getFileName ( "test.txt" ) )
7319	Assert. assertEquals ( Board. Cell. CELLS [ 2 ] [ 0 ], move. start )
7320	assertEquals ( simpleLink, convertedEvent. getInputEvent ( ). getEventType ( ) )
7321	assertEquals ( expectedMethods, calledMethods )
7322	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE LENGTH(nodes.property) < 'literal'" ) )
7323	assertLogContains ( "Failed to list the failures" )
7324	assertEquals ( ORDER_XML, orderXML )
7325	assertNull ( instruction )
7326	assertEquals ( service. getSize ( new String [ ] { "", "", "" } ), 3 )
7327	assertTrue ( ind. contains ( v ) )
7328	Assert. assertArrayEquals ( message, expecteds, actuals )
7329	assertTrue ( htmlToDisplay. contains ( "<span id=\\"obs-id\\">" ) )
7330	Assert. assertEquals ( 0, MVEL. eval ( "parent.?lastName.length()", person ) )
7331	assertEquals ( "http://java.example.com:8080/foo/bar?buz=qux", got. toString ( ) )
7332	assertEquals ( expectedAddMonths ( ), result )
7333	assertThat ( delegate. multiply ( multiplier ), is ( multiplier ) )
7334	assertEquals ( r. get ( "node" ), r. get ( "node" ) )
7335	assertEquals ( Status. NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
7336	context. assertSentrySemanticException ( statement, "drop database " + DB1, semanticException )
7337	assertTrue ( getNoErrorMsg ( ), result )
7338	assertCustomerWithLinksRead ( )
7339	assertFalse ( result )
7340	assertNull ( adapter. getColumnIdentifierReverse ( 0 ) )
7341	assertTrue ( new File ( outputDir, "raw" ). exists ( ) )
7342	assertSame ( "Cloned instance", EmptyState. INSTANCE, cloned )
7343	assertEquals ( DataTypeManager. DefaultDataClasses. STRING, f. getType ( ) )
7344	assertEquals ( "jdbc/DS", propertyLoader. getUniqueName ( ) )
7345	Assert. assertEquals ( getProperty ( "sample.userId1" ), json. getString ( "userId" ) )
7346	assertEquals ( System. getProperty ( "line.separator" ), mojo. getLineSeparator ( ) )
7347	assertEquals ( 1, routingTable. getRoutingList ( ). length )
7348	assertEquals ( "Wrong number of child builders", 2, childBuilders. size ( ) )
7349	assertEquals ( "2008/DT Sichuan/JJ earthquake/NN From/IN Wikipedia/NN,/, the/DT free/NN encyclopedia/NN", firstLine )
7350	assertEquals ( 1, query ( ). from ( account ). where ( account. name. eq ( "a" ) ). select ( account. id ). fetch ( ). size ( ) )
7351	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE LOCALNAME(nodes) <> 'literal'" ) )
7352	assertThat ( one, is ( equalTo ( "1" ) ) )
7353	Assert. assertEquals ( "host weight should be 0", 0, source. getConfig ( ). getWeight ( ) )
7354	assertEquals ( "i'm stopped", obj. getStringValue ( ) )
7355	context. assertEquals ( SUCCESS, replyBody. getString ( STATUS ) )
7356	Assert. assertTrue ( versionMatchFilter. check ( makeAssociationDescriptor ( "1.0.*" ), makeServiceItem ( ) ) )
7357	Assert. assertNull ( value )
7358	assertInvocations ( client. getBusinessActivityInvocations ( ) )
7359	Assert. assertEquals ( "x=" + x, sig. value ( x ), sigL. value ( x ), EPS )
7360	Truth. assertThat ( stream. stream ( ) )
7361	assertResultSet ( res )
7362	Assert. assertSame ( e, this. mocker. getComponentUnderTest ( ). process ( e ) )
7363	BeanAssert. assertBeanEquals ( bean, parsed )
7364	assertThat ( actual, is ( notNullValue ( ) ) )
7365	assertEquals ( MULTIPARTFILE_PATHS. length, allFiles. size ( ) )
7366	assertThat ( graph. run ( ). get ( ), equalTo ( Integer. valueOf ( 3 ) ) )
7367	assertNotNull ( reporter )
7368	Assert. assertTrue ( orPredicate. test ( ) )
7369	assertThat ( taxFactorForPerson, equalTo ( TAX_FACTOR ) )
7370	assertEquals ( pior, pior2 )
7371	assertQuery ( testId, result, tdr. getTestData ( testId ) )
7372	assertEquals ( "OK", r )
7373	MatcherAssert. assertThat ( new BasicLexeme ( lexeme, ImmutableMap. of ( new GmEmpty ( ), ( ) -> "hey" ) ). pickLexemeFromArguments ( ), CoreMatchers. is ( lexeme ) )
7374	assertEntityHasValue ( mappedKey, value )
7375	assertConfig ( cfg, "permessage-compress", expectedParams )
7376	assertEquals ( 1, value. getPartition ( ) )
7377	assertEquals ( InternetServiceLifecycleMeta. States. InService. class. getSimpleName ( ), service. getState ( ) )
7378	assertEquals ( days, testResult )
7379	assertEquals ( "filename.middle.jpg", filename )
7380	TestUtils. assertEquals ( interesadoDTO, interesadoVO )
7381	assertEquals ( "fresh", html )
7382	assertEquals ( 12345678910L, tiffLong. getValue ( ) )
7383	assertEquals ( Status. BAD_REQUEST. getStatusCode ( ), response. getStatus ( ) )
7384	assertResponse ( response, 200, "{\\"errors\\":[\\"query.invalid is not a valid time unit, must be one of MILLISECONDS,SECONDS,MINUTES,HOURS,DAYS,WEEKS,MONTHS,YEARS\\"]}" )
7385	assertTrue ( actual. isEmpty ( ) )
7386	assertEquals ( "appName1", config. getAppName ( ) )
7387	assertNotNull ( Sim. reader ( "DEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
7388	assertThat ( xoManager, notNullValue ( ) )
7389	assertThat ( ont. containsAxiom ( otherAnnoAssertion ), is ( true ) )
7390	assertTrue ( cell. getTerrain ( ) instanceof Sand )
7391	assertThat ( sampledValue. getMeasurand ( ), equalTo ( measurand ) )
7392	assertTrue ( null == obj )
7393	Assert. assertEquals ( StatusCodes. NOT_FOUND, result. getStatusLine ( ). getStatusCode ( ) )
7394	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. ORCID_BIO_UPDATE, ScopePathType. ORCID_BIO_EXTERNAL_IDENTIFIERS_CREATE )
7395	Assert. assertTrue ( sum. longValue ( ) == 5L )
7396	assertEquals ( 0.3, ss. getPValue ( ), 0.001 )
7397	assertEquals ( prefix_and_search_result, result )
7398	Assert. assertEquals ( 2, terms. size ( ) )
7399	assertEquals ( 0, count )
7400	assertEquals ( connectionsBeforeReporting, connectionsAfterReporting )
7401	assertThat ( anyTS. getMinimum ( MINUTE_OF_DAY ), is ( 0 ) )
7402	assertTrue ( with. equals ( without ) )
7403	assertEquals ( "The EntityManagerFactory is not correct", EntityManagerFactory. class, injectionTargetInformation. getTargetClass ( ) )
7404	assertTrue ( table. isSelectable ( ) )
7405	arrays. assertDoesNotContain ( description, actual, value, index )
7406	assertEquals ( recoveredConnection, connection )
7407	assertEquals ( expected1, result )
7408	assertThat ( Duration. in ( units ). between ( t1, t2 ), is ( Duration. ofPositive ( ). months ( 0 ). days ( 1 ). hours ( 9 ). minutes ( 15 ). build ( ) ) )
7409	assertEquals ( "a.c at", found )
7410	assertTrue (! result )
7411	assertEquals ( "<table> <colgroup> <col> <colgroup> <col> <col> </colgroup><thead> <tr> <th> <th>2008 <th>2007 <th>2006 <th>2006 </th> </tr></thead> <tbody> <tr> <th scope=\\"rowgroup\\"> Research and development </th><td> $ 782 </td><td> $ 712 </td></tr></thead><tbody> <tr> <th scope=\\"row\\"> Percentage of net sales </th><td> 3.4% </td><td> 3.3% </td><td> 3.7% </td></tr></tbody><tbody> <tr> <th scope=\\"rowgroup\\"> Selling, general, and administrative </th><td> $ 3,761 </td><td> $ 2,963 </td><td> $ 2,433 </td></tr></tbody><tbody> <tr> <th scope=\\"row\\"> Percentage of net sales </th><td> 11.6% </td><td> 12.
7412	Assert. assertEquals ( 3, ops. size ( ) )
7413	assertEquals ( 2, a. length )
7414	Assert. assertTrue ( rose. containsRemote ( endp ) )
7415	assertTrue ( glass. isEmpty ( ) )
7416	assertEquals ( OK. getStatusCode ( ), response. getStatusLine ( ). getStatusCode ( ) )
7417	assertEquals ( "http://localhost:8080/jaxrs-uri-template-1.0-SNAPSHOT/app/download/file/{path:.+}", result )
7418	assertThat ( expected, equalTo ( actual ) )
7419	mockAggregated. assertIsSatisfied ( )
7420	assertEquals ( 2, micc. getCommandCode ( ) )
7421	Assert. assertEquals ( "Geo name list should be equal", "EPSG:4326", ldclient. geoNames2 ( ) )
7422	assertEquals ( 123L, deserialize. readLong ( ) )
7423	assertEquals ( 10, all. size ( ) )
7424	assertEquals ( "- 34, channel=0\\n", found )
7425	assertEquals ( cause, sut. getCause ( ) )
7426	Assert. assertNotNull ( freeTaggingService )
7427	assertEquals ( sandboxName, System. getProperty ( PROPERTY_NAME_SANDBOX_NAME ) )
7428	assertEquals ( expectedScript, observedScript )
7429	Assert. assertEquals ( Integer. class, clazz )
7430	assertEquals ( "<p>### title</p>", html )
7431	assertFalse ( ex. isPrime ( - 231 ) )
7432	Assert. assertEquals ( "Test", out )
7433	assertEquals ( "The list from the detailed history, was not the same as returned from checkout", list, actualList )
7434	Assert. assertFalse ( this. component. equals ( new DefaultMatchCountImpl ( this. feature2, HP01_GENES ) ) )
7435	Assert. assertEquals ( "did not get expected length", testLen, inputStream. available ( ) )
7436	assertEquals ( Base64. getEncoder ( ). encodeToString ( baos. toByteArray ( ) ), iterators )
7437	assertTrue ( r1. contains ( d ) )
7438	assertTrue ( result )
7439	Assert. assertEquals ( p, trials - 1 )
7440	assertEquals ( "Should return HTTP 201 (Created)", HttpStatus. CREATED, adapterResponse. getResponseStatus ( ) )
7441	assertEquals ( "{f:1}", o )
7442	assertNotNull ( result )
7443	assertEquals ( "Abies-v眉lg氓r卯s-忙bi茅帽t酶", pn. canonical ( ) )
7444	assertEquals ( "&#;", writer. toString ( ) )
7445	assertThat ( target. matchExactly ( action ), is ( false ) )
7446	assertEquals ( TextUtil. readUTF8 ( path ), generator. getResult ( ) )
7447	Assert. assertNotEquals ( "Test that getLocationY returned an int value", - 1, val )
7448	Assert. assertEquals ( ECHO_STRING, outMessage )
7449	Assert. assertEquals ( "2013/09/03", result. getText ( ) )
7450	assertEquals ( "Incorrect Short Reason", "Platform Down leela.local CustomProperty", alertManager. getShortReason ( testPlatformAlert ) )
7451	assertEquals ( qf1, qf2 )
7452	assertNull ( ret )
7453	Assert. assertNotNull ( raised )
7454	assertEquals ( this. dataservice, thatDataservice )
7455	assertThat ( selectedCell, is ( "B2" ) )
7456	assertResultSet ( fc. getMembers ( filter, new TypedObjectNodeXPathEvaluator ( ) ), "EADD" )
7457	assertThat ( range. normalize ( - 0.5 ), equalTo ( 0.0 ) )
7458	Assert. assertEquals ( A_PASCAL_33, outMatrix )
7459	assertEquals ( "test", mockEndpoint. getReceived ( ) )
7460	assertEquals ( typeId1, typeId2 )
7461	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
7462	Assert. assertEquals ( "SELECT 1 XOR 1 XOR 1;", text )
7463	assertEquals ( 0, g. getFirst ( ) )
7464	assertEquals ( "<foo:bar id=\\"1\\" /><abc:def id=\\"2\\">Foo<p>Hello</p></abc:def><foo:bar>There</foo:bar>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
7465	assertNotFired ( watch )
7466	assertEquals ( 2, wlsClusterConfig. getClusterSize ( ) )
7467	assertTrue ( latch. await ( 1, TimeUnit. SECONDS ) )
7468	assertTrue ( correct. get ( namedEntity. getLabel ( ) ). equals ( disambiguatedURL ) )
7469	assertNoOrders ( )
7470	Assert. assertEquals ( now, value )
7471	assertEquals ( false, annotationProxy. deprecated ( ) )
7472	assertEquals ( "Wrong result", null, conf. get ( String. class, key ) )
7473	assertEquals ( 2, x. size ( ) )
7474	assertEquals ( "value", value. asIs ( ) )
7475	assertThat ( harry. getFriends ( ), hasItems ( sally, steve ) )
7476	assertEquals ( "Failed to generate foreach loop with string array in array", FOREACH_STRING_ARRAY, foreachWithStringArray )
7477	assertEquals ( VALUE, jwt2. getJWTClaimsSet ( ). getSubject ( ) )
7478	assertThat ( converter. toJavaObject ( javaList ), is ( ( Object ) writableList ) )
7479	Assert. assertTrue ( received )
7480	assertTrue ( actual )
7481	assertEquals ( "", caller. getResponseBody ( ) )
7482	assertThat ( result, is ( Arrays. asList ( a, b, c ) ) )
7483	assertThat ( text, is ( equalTo ( text ) ) )
7484	assertArrayEquals ( new String [ ] { "A", "B", "C" }, r. readAtomStringList ( ) )
7485	Assert. assertEquals ( "Value is incorrect", map ( DATE_TIME_2_STRING, "test" ), value )
7486	Assert. assertEquals ( IrodsRuleInvocationTypeEnum. PYTHON, actual )
7487	assertEquals ( "Wrong return value", argument, service. callMethod ( "Game", context, args ) )
7488	assertEquals ( "The return value is not correct.", Tag. EVAL_PAGE, this. tag. doEndTag ( ) )
7489	assertNotNull ( "Could not find workflow " + WF_APICONSUMER, wfResource )
7490	Assert. assertEquals ( 3.5, result, 0.00001 )
7491	assertTrue ( value instanceof NullWritable )
7492	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff_maxheight_04_" ) )
7493	assertThat ( writer. get ( ), is ( nullValue ( ) ) )
7494	assertNull ( event )
7495	assertEquals ( Integer. valueOf ( 0x42 ), event. getMessageId ( ) )
7496	assertTrue ( 5.0f == d. asFloat4 ( ) )
7497	assertEquals ( 1, ksession. fireAllRules ( ) )
7498	assertEquals ( flag, result )
7499	assertEquals ( 20, rep. getNonZeroSize ( ) )
7500	Assert. assertTrue ( Files. size ( reconstructed ) == 3 )
7501	assertEquals ( "123", ids )
7502	Assert. assertTrue ( result )
7503	assertFalse ( filter. shouldDeliverNotification ( eventContext ) )
7504	assertSingleNotificationType ( EventType. FAILED_AUTHENTICATION )
7505	assertThat ( oobChannel. getName ( ), is ( equalTo ( authority ) ) )
7506	assertNotNull ( smartsheet )
7507	assertEquals ( 2, info. getFailedTaskIDs ( ). size ( ) )
7508	assertTrue ( "This roles should have the privilege", role. hasPrivilege ( "priv1" ) )
7509	assertTrue ( plugin. getPlayerBanStorage ( ). getBan ( player. getUUID ( ) ). isSilent ( ) )
7510	Truth. assertThat ( name. toString ( ) )
7511	assertEquals ( 2, numberOfOccurences )
7512	assertEquals ( "TestValue", context. lookup ( "context" ) )
7513	assertEquals ( "<p>Hello</p>", doc. getElementsByTag ( "div" ). get ( 0 ). html ( ) )
7514	assertHasHandler ( )
7515	assertEquals ( tag, Tagger. getTag ( o ) )
7516	Assert. assertEquals ( Status. NOT_FOUND. getStatusCode ( ), resp. getStatus ( ) )
7517	assertTrue ( requestParameter. isFloat ( ) )
7518	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
7519	assertThat ( conf, containsString ( "<interaction><code value=\\"" + SystemRestfulInteraction. HISTORYSYSTEM. toCode ( ) + "\\"/></interaction>" ) )
7520	assertEquals ( "Old Jon", firstName )
7521	assertEquals ( "six", suffix )
7522	assertThat ( entry, is ( instanceOf ( CreateVertexLogEntry. class ) ) )
7523	assertEquals ( iMine, iSun )
7524	assertEquals ( "Copy of " + inFile + " to " + outFile, src. get ( ). toString ( ), dest. get ( ). toString ( ) )
7525	assertEquals ( 0, result )
7526	assertions. containsSequence ( sequence )
7527	assertThat ( actual, containsString ( "failing-host" ) )
7528	Assert. assertEquals ( "should have returned the tag removed", 0, irodsTagValues. size ( ) )
7529	assertEquals ( expected, x )
7530	Assert. assertEquals ( HttpStatus. SC_OK, result. getCode ( ) )
7531	assertEquals ( expected, parser. process ( source ) )
7532	Assert. assertEquals ( 0.0f, VectorUtils. euclideanDistance ( a, 0.0f ), 0.00001f )
7533	login. assertIsConnectedAs ( "test1" )
7534	assertThat ( dog. names. length, is ( equalTo ( 2 ) ) )
7535	assertTrue ( serialized instanceof Serializable )
7536	assertTrue ( out. equals ( "M6 T2" ) )
7537	assertEquals ( SampleLocations. MELBOURNE, cargo. getLastKnownLocation ( ) )
7538	assertThat ( nsp. getZeroDigit ( new Locale ( "fr" ) ), is ( 0 ) )
7539	Assert. assertEquals ( 10, analyser. getLoadDelivered ( route ). get ( 0 ), 0.01 )
7540	assertThat ( other, DateMatchers. sameSecond ( date ) )
7541	assertMockEndpointsSatisfied ( )
7542	assertEquals ( TimeValue. ofSeconds ( 30 ), impl. getCorrectedReceivedAge ( entry ) )
7543	Assert. assertEquals ( 1, size )
7544	assertEquals ( "Certificate can be parsed", ValidationMessage. getMessage ( validationCheck, Locale. US ) )
7545	assertEquals ( streamName, sn. getName ( ) )
7546	assertThat ( parameters, nullValue ( ) )
7547	assertSeen ( results )
7548	assertEquals ( expected, cassandraRowMapper. map ( resultSet ). next ( ) )
7549	assertEquals ( query, result )
7550	assertTrue ( response. getStatusCode ( ) == 422 )
7551	assertEquals ( 0, queryResult. size ( ) )
7552	checker. assertEquals ( "[" + s + "][" + r + "][" + c + "]", exp, act )
7553	Assert. assertEquals ( ( Integer ) 11, res )
7554	assertTrue ( result. toString ( ). contains ( "<id>org.zeroturnaround.com.rebel.remote.test.RemoteTest1</id>" ) )
7555	assertTrue ( ( "" + kieModuleMetaData. getPackages ( ) ). contains ( "junit" ) )
7556	assertEquals ( "db17", rec. get ( "SUM" ) )
7557	assertSame ( cmd. returnValue, cmd. await ( Long. MAX_VALUE, TimeUnit. MILLISECONDS ) )
7558	assertEquals ( "(a 3 4)\\n", found )
7559	assertEquals ( intStr, moneyStr )
7560	Assert. assertTrue ( success )
7561	assertTrue ( "Page is not reloading", $ ( GridElement. class ). exists ( ) )
7562	assertEquals ( "input_nested_dir", line )
7563	Assert. assertEquals ( num, count )
7564	assertNotNull ( factory )
7565	assertTrue ( result. registration_ids. size ( ) == 0 )
7566	Assert. assertFalse ( evaluator. hasPermission ( authentication, targetId, targetType, permission ) )
7567	assertEquals ( expected, actual )
7568	assertEquals ( 3, springBeansConfig. getTargets ( ). size ( ) )
7569	assertEquals ( "TestGetValues 0", valueList, concatenate. getValues ( context, item ) )
7570	Assert. assertTrue ( canUse )
7571	assertEquals ( "SELECT * FROM log WHERE x1 =? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND x1!=? AND
7572	assertEquals ( "Should have thrown an IllegalStateException", IllegalStateException. class, Framework. getRuntimeNotInitializedException ( ). getClass ( ) )
7573	Assert. assertEquals ( new Long ( Long. MAX_VALUE ), RequestObjectHelper. getStartOffset ( requestObject ) )
7574	assertThat ( expected, snippetFor ( "I have:\\n" + "    // DataTable is a DataTableType.\\n" + "    //\\n" + "    // DataTable is a DataTableType.\\n" + "    //\\n" + "    // DataTable is a DataTableType.\\n" + "    //\\n" + "    // DataTable is a DataTableType.\\n" + "    //\\n" + "    //\\n" + "    //\\n" + "    // DataTable is a DataTableType.\\n" + "    //\\n" + "    //\\n" + "    // DataTable is a DataTableType.\\n" + "    //\\n" + "    // DataTable is a DataTableType.\\n" + "    //\\n" + "    //\\n" + "    //\\n" + "    //\\n" + "    //\\n" + "    //\\n" + "    //\\n" + "    //\\n" + "    //\\n" + "    //\\n" + "    // \\n" + "    // \\n" + "
7575	assertEquals ( keyExpected, keyBuilt )
7576	assertEquals ( "DEFAULT", vars. get ( "architect" ) )
7577	assertTrue ( testFailed. isEmpty ( ) )
7578	assertEquals ( "<html><head></head><body>pre <script>inner</script> aft</body></html>", TextUtil. stripNewlines ( doc. html ( ) ) )
7579	MutableMessageFactoryTest. assertExpiryDateEquals ( expiryDateValue, message )
7580	Assert. assertEquals ( uuid, result )
7581	assertTrue ( c. value ( ) == Cursor. NOT_LOADED )
7582	assertEquals ( "user should be logged in", SignUpResponse. Status. SERVER_ERROR_INTERNAL, response. getStatus ( ) )
7583	assertThat ( action. action, is ( RetryPolicy. RetryAction. RetryDecision. RETRY ) )
7584	assertEquals ( KarmaCalculator. UPVOTED_QUESTION_OR_ANSWER, votedAtSomething. reward ( ) )
7585	assertThat ( tags. size ( ), is ( 2 ) )
7586	assertEquals ( "number of rounds", getNumRounds ( ), getNumRounds ( ) )
7587	assertTrue ( filter. matches ( record ) )
7588	assertListTEquals ( listT, 42 )
7589	assertEquals ( expectedYaml, exportedYaml )
7590	assertEquals ( arr, resultArr )
7591	assertArrayEquals ( e, a )
7592	assertEqualsIgnoreWhitespace ( expected, real )
7593	assertThat ( buffer, is ( equalTo ( hammingWindow. getExpectedBuffer ( ) ) ) )
7594	assertions. isNotEqualTo ( false )
7595	Assert. assertTrue ( enabledSections. isEmpty ( ) )
7596	assertEquals ( "editor value must not be null", value, picker. getEditor ( ). getValue ( ) )
7597	assertEquals ( buf. toString ( ), "[\\"a\\",\\"b\\",\\"c\\"]" )
7598	assertThat ( TimestampInterval. parseISO ( "2012-04-01T14:15Z/P4DT1H45M" ), is ( expected ) )
7599	assertEquals ( "OK", result )
7600	assertEquals ( 2, constraints. size ( ) )
7601	assertEquals ( response. getStatus ( ), JsonResponseStatus. FAIL )
7602	assertEquals ( "There should be 0 errors", 0, chain. getChildren ( ). size ( ) )
7603	assertNull ( store. update ( query, newTd ) )
7604	assertEquals ( JodaBeanUtils. collectionType ( test, Person. class ), List. class )
7605	Assert. assertFalse ( nodes. isEmpty ( ) )
7606	assertEquals ( "http://localhost:" + PORT + "/two/bookstore/request/BookStore/BookStore/BookStore/BookStore/request/BookStore/BookStore/request/BookStore/BookStore/request/BookStore/2", path )
7607	assertEquals ( expectedHtml, removeTextRange ( result ) )
7608	assertEquals ( 100_000, counter. get ( ) )
7609	assertEquals ( "OK", nsObjStr )
7610	assertThat ( feature. getId ( ), is ( SimpleTestCase. class. getCanonicalName ( ) ) )
7611	assertEquals ( featureService, service )
7612	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
7613	assertThat ( list. size ( ), is ( 0 ) )
7614	assertThat ( result, is ( output ) )
7615	assertEquals ( "test", m2. getHeader ( "Subject", null ) )
7616	assertSame ( System. getProperty ( "java.home" ), value. getValue ( ) )
7617	assertEquals ( "Unexpected output", os. toString ( ), "1536743107526:!history" )
7618	assertEquals ( original, restored )
7619	assertIsAborted ( tx )
7620	assertCharacterCut ( input, expectedOutput, 2 )
7621	assertThat ( target. containsLink ( link. getId ( ) ), is ( true ) )
7622	Assert. assertNotNull ( sampleType )
7623	assertEquals ( LIMIT, dps. size ( ) )
7624	assertOut ( "foo : for each (var i:int in obj) {\\n\\tbreak foo;\\n}" )
7625	assertEquals ( "Checking subseq as expected", expectedDna, subSeq. getSequenceAsString ( ) )
7626	assertTrue ( differentiator. isNew ( fileInputStream ) )
7627	assertEquals ( 1, constraints. size ( ) )
7628	assertEquals ( "Unexpected value for toString()", expexted, actual )
7629	assertEquals ( queryResult, response )
7630	assertThat ( result, is ( nullValue ( ) ) )
7631	assertEquals ( expResult, result )
7632	assertEquals ( 0, myTestInstance. delete ( doc ) )
7633	assertTrue ( comparator. isDifferent ( lhs, rhs ) )
7634	assertEquals ( 2, t. splitUnquoted ( str, ">>" ). length )
7635	assertEquals ( "ToolTip text not set on tree column", toolTip, tree. getToolTipText ( ) )
7636	assertEquals ( expResult, result )
7637	assertEquals ( EdmSimpleTypeKind. DateTime, edmDateType )
7638	assertThat ( inputSchema, equalTo ( properties. main. schema ) )
7639	assertEquals ( 12, results. size ( ) )
7640	assertThat ( new SomeClass ( ), is ( sut ) )
7641	assertThat ( error, containsString ( "Config file " + file. getAbsolutePath ( ) + " does not exist." ) )
7642	assertArrayEquals ( new double [ ] { 1.0, 2.0, 3.0 }, airMass, 1e-4 )
7643	assertEquals ( ace, parsed )
7644	assertPerson ( person )
7645	assertEquals ( "Key", msg. remove ( key ) )
7646	assertEquals ( val, app. getTest ( ) )
7647	assertEquals ( expectedFormKey, actualFormKey )
7648	assertEquals ( NOT_FOUND, response. getStatus ( ) )
7649	Assert. assertEquals ( CurrentUser. getUser ( ), "" )
7650	Assert. assertEquals ( expectedString, resultBootstrapString )
7651	Assert. assertEquals ( "3 ���� 15 砖注�转 38 �������������������������������������������������������������������������
7652	assertTrue ( s. contains ( "SampleTree_1" ) )
7653	assertThat ( description. toString ( ), is ( "x" ) )
7654	Assert. assertTrue ( patientService. isIdentifierInUseByAnotherPatient ( patientIdentifier ) )
7655	Assert. assertArrayEquals ( SOL_22_EXPECTED, SOL_22_ACTUAL, DELTA )
7656	Assert. assertEquals ( newCfg, ctx. getConfiguration ( ) )
7657	assertEquals ( "Date not equal to itself ISO formatted and parsed", d. getTime ( ), d2. getTime ( ) + d. getTime ( ) % 1000 )
7658	assertEquals ( exp, TokenProvider. DEFAULT_EXPIRATION )
7659	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
7660	Assert. fail ( "Cannot marshall a complex map" )
7661	assertEquals ( this. expectedResult, this. actualResult )
7662	assertNull ( this. sqlgGraph. traversal ( ). V ( v1 ). next ( ). next ( ) )
7663	Assert. assertEquals ( before - 1, after )
7664	assertEquals ( expected, result )
7665	assertEquals ( "2.2", link. getVer ( ) )
7666	assertEquals ( "IP address should be set to the IP address that was specified", IP_ADDRESS, ipAddress )
7667	assertNotNull ( jsonAllUserJobSummary )
7668	assertEquals ( 5, sumXValues )
7669	assertThat ( actual, containsString ( "<h1>Name</h1><div class=\\"nameElement\\">given <b>FAM1 </b></div><h1>Address</h1><div><span>line1 </span><br/><span>line2 </span><br/></div></div>" ) )
7670	assertThat ( response. getStatus ( ), is ( Response. Status. OK. getStatusCode ( ) ) )
7671	assertEquals ( resizer, receivedResizer )
7672	assertEquals ( "UK", test. getCode ( ) )
7673	assertEquals ( DummyDrawHandler. drawTextToString ( "Das ist \\" dfs ", 10, 20, AlignHorizontal. LEFT, null ) + " fg=red", drawHandler. getLastDrawCall ( ) )
7674	assertThat ( myBigDecimal, is ( notNullValue ( ) ) )
7675	assertEquals ( 5094000000L, y. getFirstMillisecond ( ) )
7676	assertEquals ( 0, tasks. size ( ) )
7677	assertEquals ( "Wrong number of environments", 2, envs. size ( ) )
7678	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
7679	assertEquals ( "2.1e2", FmtUtils. stringForLiteral ( nl, getContext ( ) ) )
7680	assertThat ( actual, is ( equalTo ( expected ) ) )
7681	assertEquals ( 1, files. size ( ) )
7682	assertEquals ( 1, null1Dao. create ( nullThing ) )
7683	assertThat ( supplier1. authForBuild ( ), is ( nullValue ( ) ) )
7684	assertThat ( string, is ( "" ) )
7685	assertThat ( end, is ( start ) )
7686	assertFalse ( "Did not create DatagramSocket", socket == null || socket instanceof Socket )
7687	assertTrue ( checker. isDetected ( ) )
7688	assertEquals ( 2, result. getLength ( ) )
7689	assertFalse ( checker. isAuthorized ( context, profiles, " ", null ) )
7690	assertThat ( labels, equalTo ( Arrays. asList ( "2013/03/12 01:30:00", "01:30:10", "01:30:20" ) ) )
7691	assertEquals ( 1, result. size ( ) )
7692	N4CliHelper. assertExpectedOutput ( expectedString, out )
7693	assertEquals ( input, output )
7694	assertEquals ( NUM_WRITERS * ENTRIES, countHLog ( logfile, fs, conf ) )
7695	assertTriggered ( result )
7696	assertResultSet ( res )
7697	assertEquals ( "No rules are set", 0, ss. size ( ) )
7698	assertEquals ( expecting, result )
7699	Assert. assertNull ( dummy )
7700	assertEquals ( 0, maleFriends. size ( ) )
7701	assertEquals ( "3 ��������������������", t. format ( new Date ( 1000 * 60 * 60 * 3 ) ) )
7702	assertThat ( result, is ( nullValue ( ) ) )
7703	assertTrue ( polygon. toString ( ). contains ( "POLYGON" ) )
7704	assertThat ( testOutcome. getOriginalStory ( ). getName ( ), is ( "My user story" ) )
7705	assertEquals ( u. getSubusers ( ). size ( ), subUsers. size ( ) )
7706	assertThat ( ( Integer ) cache. ms. get ( "aaa" ), is ( 1 ) )
7707	assertEquals ( 1, rules )
7708	assertEquals ( "Incorrect number of view spaces", 1, count )
7709	arrays. assertHasSize ( description, null, 8 )
7710	assertEquals ( 1234, executeTestMethod ( test, Integer. class, null, 1234 ). intValue ( ) )
7711	assertTrue ( uniqueIssueIds. size ( ) == 2 )
7712	assertNotEquals ( optimize1, optimize2 )
7713	assertEquals ( 1, sql. insertInto ( table ( "post" ) ). columns ( field ( "id" ), field ( "title" ) ). values ( 1L, "High-Performance Java Persistence" ). execute ( ) )
7714	paths. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE )
7715	assertions. isNull ( )
7716	Assert. assertEquals ( "", buffer. toString ( ) )
7717	assertArrayEquals ( y, x )
7718	Assert. assertEquals ( "123", new String ( signatureValue ) )
7719	assertEquals ( expected, dataStr )
7720	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoISSQNTotal ( ). toString ( ) )
7721	Assert. assertEquals ( resultEntity, entity2 )
7722	assertEquals ( result, Math. tan ( 1 ) * PI, 0.0 )
7723	assertThat ( jmc. convert ( makeEvent ( quotedMsg, NO_ARGS ) ), is ( quotedMsg ) )
7724	assertArrayEquals ( new Integer [ ] { 0, 1, 2, 3, 4, 5, 7 }, a )
7725	Assert. assertEquals ( value, got. getpBigDecimal ( ). toString ( ) )
7726	assertEquals ( "<p><i><b>This</b></i> is <i><b>jsoup</b></i></p>", doc. body ( ). html ( ) )
7727	assertEquals ( recoveryECKey. getPublicKeyAsHex ( ), key. getPublicKeyAsHex ( ) )
7728	assertEquals ( null, result )
7729	Assert. assertEquals ( "ActionInvoker.ERROR_0011 - Failed to invoke action \\"foo\\" locally: Map = " + NL + "{" + NL + "    key1 = val1 java.lang.String" + NL + "    key2 = val2 java.lang.String" + NL + "} java.util.HashMap" + NL, messages. getRunningInBgLocally ( "foo", params ) )
7730	Assert. assertNull ( retrieved )
7731	assertThat ( sampleTestClass. pages, is ( not ( nullValue ( ) ) ) )
7732	assertEquals ( expectedProfile. getSid ( ), resultantProfile. getSid ( ) )
7733	assertThat ( route, canHandle ( GetAnnotatedController. class, "withRelativePath" ) )
7734	assertSame ( t. toLocalTime ( ), LocalTime. NOON )
7735	assertAnnotations ( 2, PhoneNumber. class, new TestEntity < > ( 0, "tel phone no. (+44)1981 634528", "tel" ), new TestEntity < > ( 1, "tel 0800-123-456", "tel" ) )
7736	Assert. assertEquals ( "<test-alias.XStreamXmlSerializerBuilderTest_-ValidityPeriod/>", serializedData )
7737	assertEquals ( "\\"a\\",b" + recordSeparator, sw. toString ( ) )
7738	Assert. assertTrue ( result. isValid ( ) )
7739	assertTrue ( rec_cnt == 0 )
7740	assertTrue ( msg, dynAny. equal ( dynAny2 ) )
7741	assertEquals ( "Header2004", hd. toString ( ) )
7742	Assert. assertEquals ( 2, cpu. getRegister ( ), 0 )
7743	assertThat ( peek. getPeriodicAverageLatencyInMs ( two ), is ( ( 105d + 34d + 97d ) / 3 ) )
7744	assertEquals ( "Select script should match expected", expectedUnionWithOrderBy ( ), result )
7745	assertEquals ( expected, roundTrip. getResults ( ) )
7746	Assert. assertEquals ( expectedNames, names )
7747	Assert. assertTrue ( violations. isEmpty ( ) )
7748	assertEquals ( expectedResult, mapping. mappingFor ( sourceLinking ) )
7749	Assert. assertEquals ( 400, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
7750	Assert. assertEquals ( "{" + "\\"@odata.context\\":\\"../$metadata#ESCollAllPrim(1)/CollPropertyDecimal\\"," + "\\"@odata.metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\"," + "\\"value\\":[\\"12\\",\\"-2\\",\\"1234\\"]}", resultString )
7751	assertTrue ( SUCCESS_MSG, monitor. setAsync ( key, value ). get ( ) )
7752	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 03" ) )
7753	assertThat ( entity. awakeFromInsertionCount ( ), is ( 1 ) )
7754	assertNotNull ( m )
7755	assertThrows ( VolumeChooserException. class, ( ) -> getTableDelegate ( ) )
7756	assertTrue ( result. getIndexUpdates ( ) > 0 )
7757	assertEquals ( 16, classUnderTest. getNumRankFileSquaresAvailable ( Position. h8 ) )
7758	assertFalse ( victim. accept ( request ) )
7759	assertEquals ( sb. toString ( ), qb. prepareStatementString ( ) )
7760	assertEquals ( "calendarColumn at absolute column " + column, calendarColumn, dayGridPosition. x )
7761	assertEquals ( 1, parseResults. get ( FILE_PATH ). getClasses ( ). size ( ) )
7762	assertEquals ( "Wrong conversion result", p. pattern ( ), PropertyConverter. toPattern ( ".+" ). pattern ( ) )
7763	assertTrue ( uri. endsWith ( "D.ttl" ) )
7764	assertThatSelectedValueIs ( "a20" )
7765	assertEquals ( "false", executeOperation ( operation ). asString ( ) )
7766	assertEquals ( config. getWriteTimeoutInMillis ( ), acceptedConfig. getWriteTimeoutInMillis ( ) )
7767	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 04" ) )
7768	assertFalse ( "Expected StringSchema integer validation failure did not succeed", schema. validate ( integerEntity ) )
7769	assertEquals ( networkActivationFunction. getType ( ), activationFunction. getType ( ) )
7770	Assert. assertEquals ( 3, activityNodes. size ( ) )
7771	assertEquals ( t1, t2 )
7772	assertThat ( log, is ( Files. readAllLines ( Paths. get ( "src/test/resources/data/expected/ExecuteQuerySqlFilter", "testExecuteQueryFilter.txt" ), StandardCharsets. UTF_8 ) ) )
7773	assertEquals ( key. getDefaultValue ( ). toString ( ), this. impl. getString ( key ) )
7774	assertTrue ( logging. getLog ( ). contains ( "RuleSet description is missing." ) )
7775	assertTrue ( e instanceof RuntimeException )
7776	Assert. assertNull ( job )
7777	assertEquals ( 0.1f, mutNum. floatValue ( ), 0.01f )
7778	assertThat ( actual, is ( notNullValue ( ) ) )
7779	Assert. fail ( "Error parsing workflow graph" )
7780	assertThat ( pickupTruck, hasProperty ( "model", equalTo ( "Ram" ) ) )
7781	assertEquals ( false, options. verbose ( ) )
7782	Assert. assertEquals ( IsolationLevels. READ_COMMITTED, connection. getIsolationLevel ( ) )
7783	assertOut ( "/**\\n * @const\\n * @type {number}\\n */\\nRoyaleTest_A.prototype.foo = 420" )
7784	arrays. assertContainsOnly ( description, actual, true, null )
7785	assertEquals ( "Do not use the Inet Adress", IOUtil. getLocalHost ( ). getHostName ( ) )
7786	assertEquals ( new SchemaAndValue ( schema, null ), schemaAndValue )
7787	assertNotNull ( is )
7788	Assert. assertEquals ( "moduleA", foundModule )
7789	assertThat ( result, is ( not ( nullValue ( ) ) ) )
7790	assertEquals ( TARGET + DOCNAME, docName ( ) )
7791	assertTrue ( true )
7792	assertThat ( unlocked. hashCode ( ), equalTo ( object. hashCode ( ) ) )
7793	Assert. assertNull ( result )
7794	assertMethodCall ( "getMethodCallWithBlankTarget()", "firstName", firstNameParameter, lastNameParameter )
7795	assertNotNull ( in )
7796	assertEquals ( buf. toString ( ), "EXISTING" )
7797	assertEquals ( date. format ( DateTimeFormatter. ofPattern ( "yyyy-MM-dd" ) ), f )
7798	assertTrue ( "Expected:\\n" + new String ( expected_res ) + ". \\nGot:\\n" + transRes, StreamUtils. compareCharStreams ( new ByteArrayInputStream ( expected_res ), new ByteArrayInputStream ( transRes. getBytes ( ) ) ) )
7799	assertNull ( result. getContainedItemSchema ( ) )
7800	assertEquals ( "String", shortForm )
7801	assertFalse ( violated )
7802	assertArrayEquals ( bytes, HexUtil. parseHex ( "ED3C3B8B03928D0E0012" ) )
7803	assertTokens ( integer ( 2 ), new CommentToken ( "#", " + 2 # + 3" ) )
7804	assertEquals ( "clone=true clonePermissions=true", getLastRequestQuery ( ) )
7805	assertTrue ( mat. matches ( ) )
7806	context. assertTrue ( config. succeeded ( ) )
7807	Assert. assertEquals ( expResult, result )
7808	JSONAssert. assertNotEquals ( "Message", "{id:1234}", actual, LENIENT )
7809	validator. verifyTextInLog ( "loaded class javax.xml.ws.Holder" )
7810	assertEquals ( "joe", StaticUserWebFilter. getUsernameFromConf ( conf ) )
7811	assertEquals ( "AND", predicate. getOperator ( ) )
7812	assertEquals ( 123L, b. getId ( ) )
7813	assertEquals ( "super", occs. findName ( "super" ) )
7814	assertThat ( getServerStartupInfo ( "ms1" ). getClusterName ( ), equalTo ( "cluster1" ) )
7815	assertThat ( hiveConf. get ( "waggledance-fed1" ), is ( "fed1" ) )
7816	assertEquals ( 0, executions. get ( ) )
7817	assertEquals ( TOTAL_EVENTS, gets. getCount ( ) )
7818	assertEquals ( 2.71f, array2. getFloat ( 0 ), 0.01 )
7819	assertEquals ( VisitStatus. BYPASS, getVisitStatus ( text ) )
7820	assertThat ( replication. getEventId ( ), is ( EVENT_ID ) )
7821	assertThat ( HttpUtils. attemptEncodeQueryParam ( o ), is ( nullValue ( ) ) )
7822	Assert. assertEquals ( 2, reactorHandlerRegistry. getEntrypoints ( ). size ( ) )
7823	assertionHelper. assertChecksumsEqual ( "checksums do not match", expectedChecksums, actualChecksums )
7824	Assert. assertEquals ( "what does a wolf eat", this. realiser. realise ( p ). getRealisation ( ) )
7825	assertEquals ( "(abc 34)\\n", found )
7826	Assert. assertEquals ( expected, BitBufferHelper. toNumber ( array, i ) )
7827	assertEquals ( prefix, pluginForREST. getURI ( uri ) )
7828	assertEquals ( "12234545hello4512689", res )
7829	Assert. assertEquals ( rrs. size ( ), endpoints. length )
7830	assertEquals ( 32, program. getMemSize ( ) )
7831	assertEquals ( origin, resourceEditProperty. getOrigin ( ) )
7832	assertEquals ( 0, actual. size ( ) )
7833	assertThat ( "getValue", node. getValue ( ), is ( - 2147483648 ) )
7834	assertEquals ( "http://__UP_subDomain__.example.org/123?dir=rtl", view. getHref ( ) )
7835	Assert. assertEquals ( "Fail count record of room", i, cr )
7836	Assert. fail ( "Should have failed" )
7837	assertThat ( target. getConvPortIdByMatches ( nwId, matches ), is ( "port1" ) )
7838	assertEquals ( 1, res )
7839	assertAllExchangesAreCompleted ( config, client. getExchangeStore ( ), time )
7840	assertEquals ( 1000.0, testResult, 0.0 )
7841	result. assertIsSatisfied ( )
7842	assertThat ( is. isEndOfStream ( ), is ( true ) )
7843	assertThat ( issue. getTitle ( ), is ( title ) )
7844	assertEquals ( z1, z2 )
7845	assertNotNull ( t )
7846	assertTrue ( Arrays. equals ( pktSerialized, actual ) )
7847	Assert. assertEquals ( "3.10", retornoConsultaCadastro. getVersao ( ) )
7848	assertEquals ( "3 啶�啶苦く啷� 啷�", t. format ( new Date ( 0 ) ) )
7849	Assert. assertTrue ( true )
7850	assertNotNull ( tiposBecas. getId ( ) )
7851	assertThat ( driver ( ). getCurrentUrl ( ), is ( equalTo ( "top" ) ) )
7852	Assert. assertTrue ( impl. canCachedResponseBeUsed ( host, request, entry, now ) )
7853	Assert. assertNotNull ( inputField )
7854	assertTrue ( c1 instanceof PublicCloneable )
7855	assertEquals ( jq ( ".zscell" ). get ( 0 ). getText ( ), "Copy of the clipboard" )
7856	assertNotNull ( service )
7857	Helpers. assertJson ( jsonElement. toString ( ), expectedJson )
7858	Assert. fail ( "Exception expected." )
7859	TestUtil. assertFuzzyContains ( "<input type=\\"text\\" id=\\"w1\\" value=\\"Hippocrates of Cos\\"", session. getHtmlToDisplay ( ) )
7860	assertSame ( f, b. getFactory ( ) )
7861	assertEquals ( "update EMPLOYEE\\n" + "set ID = (select emp2.ID\\n" + "from EMPLOYEE emp2\\n" + "where emp2.SUPERIOR_ID = emp1.ID)", sql. getSQL ( ) )
7862	assertTrue ( ex. getMessage ( ). equals ( "Fail all retrials!" ) )
7863	Assert. assertEquals ( "Stan", server. getServerSideComponentValue ( "greeting" ) )
7864	assertEquals ( 1000, executor. getMaxTotal ( ) )
7865	assertThat ( ruleManager. listGlobals ( ), is ( empty ( ) ) )
7866	assertEquals ( "Should get a 200 response", HttpStatus. OK, postgresFeedSource. getFeed ( getFeedRequest ). getResponseStatus ( ) )
7867	assertEquals ( 1, bs. capacity ( ) )
7868	assertEquals ( 10L, read )
7869	assertEquals ( expectedTransportCosts + expectedActivityCosts, iCosts, 0.01 )
7870	assertTrue ( "pool size should be DEFAULT_MAX_IDLE, despite the wrong configuration", poolConfig. getMaxIdle ( ) == PoolConfiguration. DEFAULT_MAX_IDLE )
7871	assertEquals ( "��T/��t�������������������������������������������������������������������������������
7872	assertTrue ( passedSessionWaitCall. getCount ( ) == 0 )
7873	assertThat ( "Expceted principal not found", rmap, hasItem ( new GidPrincipal ( 1001, false ) ) )
7874	assertTrue ( result. equals ( ib ) )
7875	assertTokenStreamContents ( tokenizer, stringArray ( "example.com" ) )
7876	Assert. assertSame ( o, ts. create ( o ) )
7877	assertEquals ( "hello", executeForResult ( op ). asString ( ) )
7878	assertEquals ( "Recycle", policy )
7879	Assert. assertEquals ( 43, map. size ( ) )
7880	Assert. assertNull ( caixa )
7881	assertEquals ( expecting, result )
7882	Assert. assertEquals ( "Wrong  Port No", new PortNumber ( 0x00010100L ), deserializedMessage. getPort ( ) )
7883	context. assertIsSatisfied ( )
7884	assertUnderflow ( ( long ) x * ( long ) y, result )
7885	assertTrue ( fileSizeAfter < fileSizeBefore )
7886	assertEquals ( "The return value is not correct.", Tag. EVAL_PAGE, this. tag. doEndTag ( ) )
7887	assertThat ( appMetadataResource. getFilename ( ), is ( "foo-source.xml" ) )
7888	assertThat ( score, is ( 3900 ) )
7889	assertEquals ( new Year ( 2000 ), editor. getValue ( ) )
7890	assertEquals ( "SELECT rownum FROM pg_catalog.pg_tables WHERE rownum < 5", query. toString ( ) )
7891	assertEquals ( new File ( dir, "rest/foo" + ext ), fileForURI ( uri, "/fedora", "/fedora", dir, ext ) )
7892	Assert. assertEquals ( codigoDeBarras, produto. getCodigoDeBarras ( ) )
7893	assertNotNull ( dataSourceChartGroup )
7894	assertEquals ( "http://localhost:8080/test", builder. build ( ). toString ( ) )
7895	assertEquals ( "a", fsa. getState ( ) )
7896	assertEquals ( 1, hits. totalHits )
7897	assertNull ( "No arg constructor", realm. getName ( ) )
7898	assertEquals ( 1, tasks. size ( ) )
7899	DataMockery. assertREQMODWithGetRequestNoBodyResponse ( response )
7900	assertEquals ( "Wikibot", output. get ( id ) )
7901	assertEquals ( 210, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
7902	assertTrue ( authorizer. isAuthorized ( context, profiles ) )
7903	assertThat ( encoded, stringContainsInOrder ( "{", "\\"resourceType\\": \\"Patient\\",", "\\"contained\\": [", "{", "\\"resourceType\\": \\"Condition\\",", "\\"id\\": \\"1\\"", "}", "],", "\\"extension\\": [", "{", "\\"url\\": \\"test\\",", "\\"valueReference\\": {", "\\"reference\\": \\"#1\\"", "}", "}", "],", "\\"birthDate\\": \\"2016-04-05\\"", "}" ) )
7904	assertThat ( iter. next ( ), is ( "33" ) )
7905	assertEquals ( err, result )
7906	assertEquals ( expectedLogMessage, actualLogMessage )
7907	assertNull ( resolver. resolve ( null, obj2 ) )
7908	assertEquals ( 7, count )
7909	Assert. assertEquals ( demoService. getExportedUrls ( ). get ( 0 ). getPort ( ), helloService. getExportedUrls ( ). get ( 0 ). getPort ( ) )
7910	assertEquals ( TEST_MSG, actual )
7911	assertThat ( terminalStep. wasRun ( ), is ( true ) )
7912	assertThat ( or. isSatisfied ( ), is ( false ) )
7913	Assert. assertNull ( connectionManager. createConnectionDetails ( null ) )
7914	assertThat ( getPivotModel ( ). getCurrentMdx ( ), is ( equalTo ( "SELECT {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS, " + "CrossJoin({[Product].[All Products], [Product].[Drink], [Product].[Food], [Product].[Non-Consumable]}, " + "{[Promotion Media].[All Media], [Promotion Media Media].[Bulk Mail], " + "[Promotion Media].[Cash Register Handout], " + "[Promotion Media].[Daily Paper], [Promotion Media].[Daily Paper, Radio], " + "[Promotion Media].[Daily Paper, Radio], [Promotion Media].[Daily Paper, Radio], " + "[Promotion Media].[Daily Paper, Radio], " + "[Promotion Media].[In-Store Coupon], [Promotion Media].[No Media], [Promotion Media].[Product Attachment], " + "[Promotion Media].[Radio], [Promotion Media].[Street Handout], " + "[Promotion Media].[Sunday Paper, Radio
7915	assertEquals ( user, serializedUser )
7916	assertLines ( lines )
7917	assertThat ( disque. bgrewriteaof ( ), containsString ( msg ) )
7918	Assert. assertEquals ( 0, dfsadmin. run ( args1 ) )
7919	assertEquals ( expResult, result )
7920	assertEquals ( expResult, result )
7921	assertNotNull ( textFileSaver )
7922	Assert. assertEquals ( true, errors. hasFieldErrors ( ) )
7923	assertEquals ( "Incorrect number of home pages", 2, countHomeStates )
7924	assertEquals ( "token 2\\n", found )
7925	Assert. assertEquals ( "IN([CAT.COL];\\"value\\";\\"2\\")", formatted )
7926	assertEquals ( GrpcUtil. DEFAULT_MAX_HEADER_LIST_SIZE, metadata. size ( ) )
7927	assertTrue ( e instanceof SocketTimeoutException )
7928	assertEquals ( expected, resultVal )
7929	assertEquals ( date, fileTime. getTime ( ) )
7930	assertEquals ( entity, response. readEntity ( String. class ) )
7931	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Receive>" + "Hey no tags!" + "</Receive>", elem. toXml ( ) )
7932	Assert. assertEquals ( "Incorrect label returned", lbl, item. getDecoratedLabel ( ) )
7933	Assert. assertEquals ( 5, routes. size ( ) )
7934	assertThat ( axioms. isEmpty ( ), is ( true ) )
7935	assertThat ( result, is ( defaultPlugins ) )
7936	assertThat ( record. isPresent ( ), is ( true ) )
7937	assertEquals ( p, fromDenseRecursiveForm ( recForm, 3, MonomialOrder. DEFAULT ) )
7938	assertEquals ( 1, sol. getUnassignedJobs ( ). size ( ) )
7939	assertEquals ( "{\\"date1\\":\\"2014-03-01T02:00:00\\"}", processor. generateFilter ( object ) )
7940	Assert. assertEquals ( expected_1, v )
7941	assertEquals ( 10 * Constants. TB, mConfiguration. getBytes ( PropertyKey. WEB_THREADS ) )
7942	assertEquals ( "187BE3D7-B89E-4C0F-A743-15191D5E8DC1", profile. getID ( ) )
7943	assertNull ( ruleCat )
7944	assertEquals ( expected, result )
7945	Assert. assertEquals ( 0, cancelledRequests. size ( ) )
7946	assertEquals ( expected, actual )
7947	assertEquals ( 2, posts. size ( ) )
7948	assertOut ( "/**\\n * @export\\n * @type {number}\\n */\\nRoyaleTest_A.prototype.foo = function(bar, baz) {\\n  baz = typeof baz!== 'undefined'? baz : null;\\n  return -1;\\n}" )
7949	assertThat ( webapp. getBuildImage ( ), is ( notNullValue ( ) ) )
7950	assertEquals ( 1, results. size ( ) )
7951	assertThat ( command. accept ( state ), is ( true ) )
7952	assertThat ( query. count ( ), is ( 3L ) )
7953	assertTrue ( xml. contains ( "<dummy>doesn't matter</dummy>" ) )
7954	assertTrue ( "Can't find statement", m. contains ( expectedStatement ( SSH_BASE ) ) )
7955	assertEquals ( "IdentifierLabel", resource. getIdentifier ( ). get ( 0 ). getValue ( ) )
7956	assertThat ( networkId, is ( "NewNetworkID" ) )
7957	assertTrue ( "toString() returned wrong value", testVal. toString ( ). equals ( intVal. toString ( ) ) )
7958	assertThat ( inactivityTimeAfterRefresh, is ( lessThan ( inactivityTime ) ) )
7959	Assert. assertEquals ( expected, actuals )
7960	assertMockEndpointsSatisfied ( )
7961	assertThat ( output. toString ( ), is ( "my good little bad son" ) )
7962	Assert. assertTrue ( ls1. size ( ) == ls2. size ( ) )
7963	assertTrue ( testListener. wasCalled )
7964	assertSame ( secondTry, st )
7965	Assert. assertNull ( "School year should be null", result )
7966	assertions. doesNotContain ( new short [ ] { 6, 8 } )
7967	assertEquals ( 123, this. model. getPosition ( ) )
7968	assertEquals ( expectedQuery, actualQuery )
7969	assertGreater ( "Grid should scroll vertically while editing in unbuffered mode", getGridVerticalScrollPos ( ), originalScrollPos )
7970	assertEquals ( exp, res )
7971	assertEquals ( SecurityGroupEntityMgr. findById ( this. em, NEW_SECURITY_GROUP_SAME_SFC_BINDED_UPDATE_ELEMENT_ID. getId ( ) ). getNetworkElementId ( ), NEW_SECURITY_GROUP_SAME_SFC_BINDED_UPDATE_ELEMENT_ID. getNetworkElementId ( ) )
7972	assertEquals ( 32.8125, calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
7973	UnitTestUtils. assertEquals ( "m3*m4=m5", m3. multiply ( m4 ), m5, entryTolerance )
7974	FeedChecker. assertQ ( "The PHP error is not correct", result, "//error[.='" + errorMessage + "']" )
7975	Assert. assertEquals ( 1, response. getTotalHits ( ). value )
7976	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff26_" ) )
7977	Assert. assertTrue ( out. contains ( "getcar/1999" ) )
7978	assertTrue ( convertedValue instanceof Integer )
7979	assertEquals ( " ::  took 0 ms.", result )
7980	assertEquals ( "file://dev/null/foo.jar", mods. get ( 0 ). getUrl ( ) )
7981	assertTrue ( timestamp. matches ( regex ) )
7982	assertTrue ( extraInfo. has ( "remoteUsername" ) )
7983	assertEquals ( 0, filter. getBits ( shape ). size ( ) )
7984	assertEquals ( "Testing", message )
7985	assertEquals ( expectedQuery, actualQuery )
7986	Assert. assertTrue ( output, output. contains ( "java.version" ) )
7987	assertEquals ( true, classUnderTest. getInitSessionTimezone ( ) )
7988	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
7989	Assert. assertNotNull ( "null execOut", execOut )
7990	assertTrue ( sql, sql. startsWith ( "SELECT #result('MAX(t0.ESTIMATED_PRICE)' 'java.math.BigDecimal''sc0') " + "FROM PAINTING t0" ) )
7991	assertEquals ( "Can't come back", ShadowToast. getTextOfLatestToast ( ) )
7992	Assert. assertEquals ( namespace, event. getNamespaces ( ). next ( ) )
7993	assertEquals ( fileMd5, CryptoUtils. encryptMD5File ( fileMd5 ) )
7994	assertEquals ( "AAA,AAA", strList )
7995	assertEquals ( unused, h. getUnused ( ) )
7996	assertTrue ( measures. toString ( ), measures. isEmpty ( ) )
7997	assertTrue ( operator. inheritsFrom ( john ) )
7998	assertParsingIsCorrect ( nativeQuery, expectedCacheName )
7999	Assert. assertEquals ( "Error downloading private file", file. getEnclosureLength ( ). longValue ( ), bytes )
8000	Assert. assertEquals ( data, handler. getData ( ) )
8001	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
8002	Assert. assertEquals ( fileEntry. getLabel ( ) + " was tagged", text )
8003	Assert. assertEquals ( "", urlEncodedValueReturned )
8004	assertTrue ( connectLatch. await ( 10, TimeUnit. SECONDS ) )
8005	assertEquals ( "opendj", resourceType. getName ( ) )
8006	assertEquals ( expectedScript, observedScript )
8007	assertEquals ( 2, designDocs. size ( ) )
8008	assertEquals ( 50, p. getAge ( ) )
8009	assertThat ( results. get ( 0 ). getTestSteps ( ). size ( ), is ( 3 ) )
8010	Assert. assertEquals ( AuthenticationToken. ANONYMOUS, token )
8011	assertEquals ( ApiStatus. SUCCESS, response. getMeta ( ). getStatus ( ) )
8012	files. assertHasParent ( someInfo ( ), actual, expectedParent )
8013	assertEquals ( "Wrong status code", Response. Status. OK. getStatusCode ( ), response. getStatus ( ) )
8014	Assert. assertEquals ( INSTALL_SDK_PATH, sdk. getPath ( ) )
8015	assertTrue ( list. getCustomerList ( ). size ( ) > 0 )
8016	assertFalse ( isServiceReady )
8017	assertGenres ( results )
8018	Assert. assertEquals ( 0, bucket. size ( ) )
8019	assertMandatoryElements ( targetProduct, true )
8020	assertEquals ( "Input Is Textbuilder", _byteBuffer, _utf8ByteBufferReader. getInput ( ) )
8021	assertTrue (! orderKey. prefixOf ( key ) )
8022	assertEquals ( "repro20030207 test", diffsToString ( Diff. diffText ( a, b, false, false, false ) ), "0.0.0.0*0.0.0.0*0.0.0.0*0.0.0.0*0.0.0.0*0.0.0.0*0.0.0.0*0.0.0.0*0.0.0.0.0.0.0.0.0.0.0*0.0.0.0.0.0.0.0.0.0.0.0.0.0.0*0.0.0.0.0.0.0.0.0.0.0.0*0.0.0.0.0.0.0.0*0.0.0.0.0.0.0.0.0.0.0.0.0.0.0*0.0.0.0.0.0*0.0.0.0.0.0.0.0.0*0.0.
8023	assertEquals ( "Cancelled default service com.alibaba.dubbo.rpc.protocol.dubbo.support.DemoService.", result )
8024	assertThat ( cancellationListener. isCancelled ( ), is ( false ) )
8025	assertionHelper. assertIrodsFileOrCollectionExists ( targetIrodsCollection, irodsFileSystem. getIRODSAccessObjectFactory ( ), irodsAccount )
8026	assertEquals ( "ID = userId", dataSetLookup. getFirstFilterOp ( ). getColumnFilterList ( ). get ( 0 ). toString ( ) )
8027	Assert. assertEquals ( 0, warningHeaders. length )
8028	assertNull ( res )
8029	assertEquals ( pattern, patterns. getPattern ( entityId ) )
8030	Assert. assertEquals ( expectedLanguage, actualLanguage )
8031	assertEquals ( expected, actual )
8032	assertThat ( this. state. getSortColumn ( ), is ( equalTo ( sortColumn ) ) )
8033	Assert. assertTrue ( success )
8034	assertTrue ( newTags. getTags ( ). size ( ) == 2 )
8035	assertTrue (! result )
8036	assertGetTruncateTableStatement ( new TableStatement ( "TRUNCATE TABLE 10 OR PERFORMANCE" ), "TABLE 10 OR PERFORMANCE" )
8037	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<features xmlns=\\"http://karaf.apache.org/xmlns/features/v1.0.0\\" name=\\"test-dependencies\\">\\n" + "<feature name=\\"test-dependencies\\" start-level=\\"42\\"/>\\n" + "<bundle>mygroup:myArtifactId</bundle>\\n" + "</feature>\\n", wr. toString ( ) )
8038	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
8039	assertTrue ( w. getStatus ( ) == HttpServletResponse. SC_PROXY_AUTHENTICATION_REQUIRED )
8040	assertEquals ( Timestamp. valueOf ( "2013-03-27T23:18:40Z" ), jstOi. getPrimitiveJavaObject ( result. get ( "five" ) ) )
8041	assertThat ( route, canHandle ( PathAnnotatedController. class, "withRelativePath" ) )
8042	assertThat ( matcher. matches ( response ), is ( true ) )
8043	assertArrayEquals ( new String [ ] { "Id", "\\"Delimited Field Name\\"", "Default_Case" }, cols )
8044	assertEquals ( false, OptimizerUtils. isIndexingRangeBlockAligned ( 2500, 3001, 7001, 9000, BRLEN, BCLEN ) )
8045	Assert. assertTrue ( authorizableHierarchy. toString ( ), authzProvider. hasAccess ( user1, authorizableHierarchy, actions, ActiveRoleSet. ALL ) )
8046	assertEquals ( "\\"x\\".\\"dup\\"", t. getNameInSource ( ) )
8047	assertTrue ( proxyReq. getHeaders ( ). isEmpty ( ) )
8048	assertEquals ( expected, cls )
8049	assertThat ( token. getType ( ), is ( PCRELexer. ResetStartMatch ) )
8050	assertEquals ( expResult, result )
8051	Assert. assertArrayEquals ( "The computed solution for Bleichenbacher attack must be equal to the original message", message, solution. toByteArray ( ) )
8052	assertThat ( testExecutor. invokeTest ( 1000L, ImmutableMultimap. of ( "force", "whatever" ) ), is ( false ) )
8053	assertThat ( a. hashCode ( ), is ( b. hashCode ( ) ) )
8054	assertNotNull ( defaultRule. defaultQueueName )
8055	assertEquals ( 2, links. size ( ) )
8056	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 09" ) )
8057	FunctionTestUtil. assertResult ( stringFunction. invoke ( offsetTime ), TimeFunction. FEEL_TIME. format ( offsetTime ) )
8058	assertEquals ( "Unexpected widgetset configuration option value", widgetset, config. getWidgetsetName ( ) )
8059	assertEquals ( "", out )
8060	assertEquals ( expResult, stringBuilder. toString ( ) )
8061	Assert. assertEquals ( "{\\"alice\\":{\\"p\\":\\"bob\\",\\"@xmlns:p\\":\\"http://test\\",\\"p:bob\\":[\\"charlie\\"]}}", result. toString ( ) )
8062	assertThat ( result. size ( ), is ( 0 ) )
8063	assertTrue ( "Should have changed", hasChange )
8064	assertEquals ( expected, actual )
8065	assertEquals ( "test", testObj. name ( ) )
8066	Assert. assertTrue ( validator. isValid ( 5, context ) )
8067	assertTrue ( testGraph. intersects ( d, d ) )
8068	assertThat ( element. getText ( ), is ( "with appended text" ) )
8069	assertEquals ( buffer. length ( ), bytes. length ( ) )
8070	assertNull ( daoService. get ( userWrapper, "PKEY", "Config", StatisticRefEnum. CREATED_ISSUE_COUNT ) )
8071	assertThat ( schedCapture. getValue ( ), is ( genericScheduler ) )
8072	Assert. assertEquals ( 0, distance. compute ( a, a ), 0d )
8073	assertEquals ( result, expectedUser )
8074	assertSame ( map0, mdcAdapter. getPropertyMap ( ) )
8075	assertTrue ( StoreParams. sameValues ( p, pDft ) )
8076	assertEquals ( 1, fixture. mark ( ) )
8077	Assert. assertTrue ( providerAInvoked )
8078	Assert. assertEquals ( nodeToKey ( queryA ), nodeToKey ( queryB ) )
8079	assertThat ( result, equalTo ( "hey, 1, hey, ho, hum, 2" ) )
8080	Assert. assertEquals ( new URI ( "http://localhost:80/?param=stuff&fragment" ), result )
8081	_PmAssert. assertNotVisible ( pm. pmBeanImpl )
8082	assertThat ( axioms, hasItem ( axiom ) )
8083	assertThat ( intOrString1, not ( equalTo ( intOrString2 ) ) )
8084	Assert. assertEquals ( "Incorrect number of PersonMergeLog found by winner", 2, lst. size ( ) )
8085	assertEquals ( "Root folder should be relative to root", upDir, rootLocation. resolve ( upDir ) )
8086	Assert. assertEquals ( expectedLanguage, actualLanguage )
8087	Assert. assertEquals ( 0, results. size ( ) )
8088	Assert. assertEquals ( "foo", comp. getHtmlClass ( ) )
8089	Assert. assertEquals ( localDate. toString ( ddMMMyyyy, Locale. ENGLISH ), "05-Feb-2013" )
8090	assertTrue ( basePermission. isAllowed ( auth, Sets. newHashSet ( ) ) )
8091	assertFalse ( validator. isValid ( new MyCustomStringImpl ( "A79927398713" ), null ) )
8092	assertEquals ( secToken, mapper. readValue ( secToken. toString ( ), X509FederationClient. SecurityToken. class ) )
8093	assertEquals ( expected, uri. getRawPath ( ) )
8094	assertions. containsSequence ( sequence )
8095	assertMappedFieldValueIsEmptyCollection ( )
8096	assertEquals ( v8TypedArray, v8TypedArray )
8097	assertEquals ( "{\\"instance\\":\\"-1.0\\"}", json )
8098	Assert. assertTrue ( Files. size ( tmfile. toPath ( ) ) > 0 )
8099	assertThat ( e. getMessage ( ), containsString ( expectedExceptionMessage ) )
8100	assertEquals ( exp, x )
8101	assertEquals ( expecetedTableName, builtTableName )
8102	assertEquals ( true, new File ( "target/data/person_" + ID + ".json" ). exists ( ) )
8103	assertEquals ( new ArrayList < Category > ( ), mockResult. included ( "categories" ) )
8104	assertEquals ( fullName, metric. fullName ( ) )
8105	assertEquals ( 18, instance. evaluations )
8106	assertEquals ( "Select using a where clause", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
8107	assertEquals ( "Test", $ ( NotificationElement. class ). getText ( ) )
8108	assertions. isNotEqualTo ( actual )
8109	Assert. assertEquals ( record. get ( "name" ). toString ( ), decoded. get ( "name" ). toString ( ) )
8110	assertThat ( capturePackage. getValue ( ). name ( ), is ( "com.example.package" ) )
8111	assertEquals ( expected, actual )
8112	assertEquals ( files, infos. size ( ) )
8113	assertSame ( this. joystick, joystick )
8114	assertEquals ( 42.0f, out. floatValue ( ), 0.0f )
8115	Assert. assertEquals ( "s3n://123:456@my-bucket/some/path", HiveAuthzBindingHookBase. parseURI ( "/some/path" ). getName ( ) )
8116	Assert. assertEquals ( assinatura, eventoInutilizacao. getAssinatura ( ) )
8117	Assert. assertEquals ( expectedResult, result )
8118	Assertions. assertEquals ( Collections. singletonMap ( "color", "red" ), response )
8119	assertPermanentCount ( playerA, "Utopia Sprawl", 1 )
8120	assertEncoded ( NASTY, NASTY, NASTY, actual )
8121	assertThat ( PropertiesUtil. createPrefixMap ( properties, "abc" ), is ( answer ) )
8122	assertNull ( datastore )
8123	assertThat ( value, equalTo ( "Dummy" ) )
8124	assertTarget ( "[['a', 'b']]" )
8125	assertCompletion ( "server.address=<*>", "server.port=<*>" )
8126	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
8127	assertThat ( resolver. resolve ( CamelCase. class ), equalTo ( "org/jbehave/core/io/camelCase.story" ) )
8128	assertEquals ( txtFile. getAbsoluteFile ( ). getAbsoluteFile ( ), source. getLocation ( ) )
8129	assertEquals ( dataflow, edit. getSubject ( ) )
8130	assertEquals ( "1\\t5\\n", b. asString ( ) )
8131	assertFalse ( jee. evaluate ( event ) )
8132	assertEquals ( 0, applicationDirectory. getAllApplications ( ). size ( ) )
8133	assertThat ( aDouble, equalTo ( bDouble ) )
8134	assertProcessInstanceCompleted ( processInstance )
8135	assertThat ( new File ( current, "a.txt" ), is ( file ( ) ) )
8136	assertThat ( axioms. isEmpty ( ), is ( true ) )
8137	Assert. assertEquals ( "The entity text is correctly transported", entityText, EntityUtils. toString ( out. toByteArray ( ) ) )
8138	assertNotNull ( r1. get ( ) )
8139	assertThat ( "unencoded setter has return type void", setter. getReturnType ( ), equalToType ( Void. TYPE ) )
8140	assertEquals ( ImmutableMap. of ( Key. create ( "param1" ), encodedRequestParams ), headers )
8141	assertThat ( aggregateMapper. getCapped ( ). getSize ( ), is ( 50 ) )
8142	assertNull ( field. getColourExpression ( ) )
8143	testHelper. assertExecutionTreeAfterMigration ( )
8144	assertThat ( event, is ( expected ) )
8145	assertThat ( s, is ( "a value greater than <1> xor a value less than <5>" ) )
8146	Assert. assertEquals ( "KeywordInPackage", name )
8147	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff_" ) )
8148	assertEquals ( originalSize - 1, getNumberOfAllVisitsIncludingVoided ( ) )
8149	assertArrayEquals ( values, sortedValues )
8150	arrays. assertDoesNotContain ( description, null, newArray ( true ) )
8151	assertTrue ( sc. invokeDestinationCalled ( ) )
8152	Assert. assertEquals ( 0.0, p, 0.000001 )
8153	assertEquals ( AuthorizationResult. ACCESS_GRANTED, permission. getResult ( ) )
8154	Assert. assertEquals ( "The quick brown fox jumped over the lazy dog.", resolvedString )
8155	assertThat ( result, is ( false ) )
8156	Assert. assertEquals ( expected, actual )
8157	assertTrue ( str. contains ( format. format ( date ) ) )
8158	assertEquals ( "Exception", t. getMessage ( ) )
8159	BrowserAgentTestUtils. assertBrowserAgent ( HTMLUNIT_CHROME_AGENT_STRING )
8160	Assert. assertEquals ( 1, countingNotifier. getNotificationCount ( ) )
8161	assertEquals ( "Expected response not seen.", "ONE", response )
8162	assertEquals ( "false", testedString )
8163	assertNotNull ( oracleEngine )
8164	assertEquals ( "Failed to restore " + runNo + " times", runNo, memorySnapshot. getRunNo ( ) )
8165	assertEquals ( "#00ff00", getColorpickerValue ( ) )
8166	assertEquals ( "High-Performance Java Persistence", post. getTitle ( ) )
8167	Assert. assertEquals ( expected, actual )
8168	Assert. assertEquals ( this. family1, this. component. resolveEntity ( FAMILY_1_ID ) )
8169	assertEquals ( "Wrong number of results", 1, validator. getResults ( ). size ( ) )
8170	arrays. assertDoesNotContain ( description, null, newArray ( true ) )
8171	assertThat ( sut. isMatch ( real, expected ), is ( false ) )
8172	assertTrue ( failedAsExpected )
8173	assertEquals ( "ABC", result )
8174	assertThat ( "Locations created with different paths and the same property must not be equal", locationA1, is ( locationA2 ) )
8175	Assert. assertFalse ( result )
8176	assertTrue ( true )
8177	assertions. isNullOrEmpty ( )
8178	assertEquals ( "Should return details parameter from request", "minutia", request. getDetailsParameter ( "details" ) )
8179	assertTrue ( resources. getResources ( ). isEmpty ( ) )
8180	assertTrue ( "Rule Delegations are not empty", ruleDelegationBos. size ( ) > 0 )
8181	assertThat ( actual, is ( equalTo ( "/ab/CD" ) ) )
8182	assertThat ( keyValueType. getValue ( ), equalTo ( aString ) )
8183	Assert. assertEquals ( "SELECT TO_DAYS('2007-10-07');", text )
8184	assertThat ( engine, notNullValue ( ) )
8185	Assert. assertEquals ( query, interpretedQuery )
8186	Assert. assertEquals ( "0", result. getReturnCode ( ) )
8187	context. assertEquals ( RESULT_MSG, value )
8188	assertEquals ( 1, ksession. fireAllRules ( ) )
8189	assertFalse ( value. isReplaceableBy ( 99L, 9, ComparableComparator. INSTANCE ) )
8190	assertEquals ( "true", response. get ( ). getStats ( ) )
8191	assertEquals ( "8a3d8e7b9a9e0d0e9b9e7d8", orderId )
8192	assertEquals ( 987889559999L, q. getLastMillisecond ( calendar ) )
8193	assertNotNull ( testClass )
8194	assertEquals ( tstName, ent. getCatalog ( ) )
8195	assertTrue ( BatchUtil. evaluate ( batch ) )
8196	assertEquals ( "[{\\"name\\":\\"table 1\\",\\"pkPolicy\\":\\"user_generated_value\\",\\"fields\\":[{\\"name\\":\\"id\\",\\"type\\":\\"string\\",\\"isPrimaryKey\\":true},{\\"name\\":\\"column 1\\",\\"nullable\\":true}]}]", content )
8197	assertEquals ( 42.1, result, 0.000001 )
8198	assertThat ( notification, containsString ( "\\"caption\\":\\"foobar\\"" ) )
8199	assertEquals ( "/_nodes/shutdown?delay=5s", action. getURI ( ElasticsearchVersion. UNKNOWN ) )
8200	assertEquals ( "document/literal", encodingStyle )
8201	assertNotNull ( graph. variables ( ) )
8202	assertEquals ( JobConfigHistoryConsts. ICONFILENAME, sut. getIconFileName ( ) )
8203	assertEquals ( 'd', ex. charAt ( s, 6 ) )
8204	assertEquals ( qb, qa )
8205	Assert. assertEquals ( true, errors. hasFieldErrors ( "encounterDatetime" ) )
8206	assertThat ( hasNativeSupportForPseudo, is ( false ) )
8207	assertEquals ( exp, TYPING_MAPPER. readValue ( json, ZoneId. class ) )
8208	Assert. assertTrue ( this. commandFacade. exists ( SwitchFullScreenCommand. class ) )
8209	assertTrue ( e. getMessage ( ). contains ( "Template dir" ) )
8210	assertNull ( gd )
8211	Assert. assertEquals ( 1, streams. length )
8212	assertThat ( MODEL. findNextTransition ( utc ). get ( ), is ( SPRING_1996 ) )
8213	assertEquals ( "Failed on [" + i + "] iteration", expected, merged )
8214	assertThat ( jvm. shouldEnableRemoteDebugging ( ), is ( false ) )
8215	assertThat ( pages. isCurrentPageAt ( ApacheHomePage. class ), is ( true ) )
8216	assertTrue ( "Add and get relation by name", relation. getKeyid1 ( ). equals ( testRelation. getKeyid1 ( ) ) )
8217	assertTrue ( config. getMeta ( ). isIgnoreDefaultProperties ( ) )
8218	Assert. assertEquals ( "should have added description", irodsTagValue, actual )
8219	assertArrayEquals ( expectedOutput1, output1 )
8220	assertEquals ( "Hello ^name", ResponseBodyInterpolator. interpolate ( "Hello ^name", req ) )
8221	assertNull ( response. getHeaders ( ). get ( "Links" ) )
8222	assertEquals ( "catch", getValue ( ) )
8223	assertEquals ( Arrays. asList ( "a", "b", "  ", "c" ), tokenList )
8224	assertEquals ( 4.0, distance. compute ( point1, point2 ), EPSILON )
8225	assertTrue ( fs. unlink ( "foo" ) )
8226	assertEquals ( "1,2,3", getInorderForm ( tree ) )
8227	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
8228	assertThat ( tracker. getAll ( ) [ firstElementOfArray ]. getTasks ( ), is ( empty ( ) ) )
8229	Assert. assertEquals ( expectedSlot, slot )
8230	assertEquals ( val. apply ( m ), m. with ( val ) )
8231	context. assertIsSatisfied ( )
8232	assertEquals ( value, actualValue )
8233	Assert. assertTrue ( errors. isEmpty ( ) )
8234	Assert. assertEquals ( 4.6, r, 0.00001 )
8235	assertNotNull ( encodingDetector )
8236	assertNotNull ( path )
8237	assertTrue ( specification. stats ( ). hasFailed ( ) )
8238	assertEquals ( expected, actual )
8239	assertEquals ( scIdentifier, result )
8240	Assert. assertEquals ( 401, response. getStatus ( ) )
8241	assertEquals ( expectedUri, uri )
8242	assertEquals ( expResult, result )
8243	assertEquals ( 1, count. get ( ) )
8244	assertTrue ( "Authentication context should be created", ops. exists ( TEST_AUTHENTICATION_CONTEXT_ADDRESS ) )
8245	assertEquals ( "Document does not exist.", 0, collection. getResourceCount ( ) )
8246	assertTrue ( filter. accept ( good ) )
8247	assertTrue ( cs. isLast ( ) )
8248	Assert. assertTrue ( redisd. isRunning ( ) )
8249	assertTrue ( FileUtils. contentEqualsIgnoreEOL ( new File ( "src/test/resources/reference/test.dump" ), outputFile, "UTF-8" ) )
8250	assertE ( "�尖�尖�尖��" + "�尖��  ��" + "��   ��" + "�尖��  ��" + "�尖�尖�尖�尖��" )
8251	Assert. assertEquals ( "hello,world", result. getName ( ) )
8252	assertTrue ( hasResourceProvidableType )
8253	assertEquals ( consumed, ResourceRelationType. valueOf ( consumed ) )
8254	Assert. assertEquals ( "Class should not be considered: ", false, new DifferenceAccumulatingHandler ( inclusionSet, exclusionSet ). isClassConsidered ( "de/test/java/regex/code/code" ) )
8255	assertEquals ( tmap, readValue )
8256	assertEquals ( "Item added", getSidebarPopup ( ). findElement ( By. className ( "v-grid-sidebar-content.gwt-MenuItem" ) ). getText ( ). toLowerCase ( Locale. ROOT ) )
8257	assertNotNull ( as )
8258	assertEquals ( 3, postCommentScores. size ( ) )
8259	assertTrue ( wasEmpty. get ( ) )
8260	assertArrayEquals ( new String [ ] { "singleton" }, treeContent )
8261	Assert. assertTrue ( matcher instanceof UriPatternMatcher )
8262	assertEquals ( 0, tree. size ( ) )
8263	Assert. assertEquals ( StringUtils. trimAllWhitespace ( result. toString ( ) ), "{\\"$or\\":[{\\"username\\":{\\"$regex\\":\\"^(?!Mistic).*$\\",\\"$options\\":\\"s\\"}}]}" )
8264	assertTrue ( Arrays. equals ( expectedPrivs, privs ) )
8265	assertTrue ( suspendables. contains ( method ) )
8266	assertNotNull ( "No author found", repositoryFactory. getRepositoryManager ( "HueLightStrips" ). searchByAuthor ( "alex" ) )
8267	Assert. assertEquals ( "kevin", el. getAsString ( ) )
8268	assertEquals ( 2, secureComponents. size ( ) )
8269	Assert. assertEquals ( 0, analyser. getLoadRightAfterActivity ( route. getEnd ( ), route ). get ( 0 ) )
8270	assertThat ( page. getTotalElements ( ), is ( equalTo ( 1 ) ) )
8271	assertEquals ( content, IOUtils. toString ( ungzippedStream, Charset. defaultCharset ( ) ) )
8272	assertEquals ( "incorrect result", result, aNumber. compareTo ( bNumber ) )
8273	assertEquals ( constraintViolations. size ( ), 1 )
8274	assertTrue ( clientBus. awaitTermination ( 10, TimeUnit. SECONDS ) )
8275	assertThat ( classes. size ( ), is ( 4 ) )
8276	assertObjectEquals ( "{type:'number'}", x. getSchema ( ) )
8277	assertSerialize ( map )
8278	assertEquals ( 0, violations. size ( ) )
8279	assertStates ( "existing", NOT_SUPPORTED, LINKED_BUT_NOT_SYNCED, EXISTING, null, null )
8280	assertEquals ( "Black", dto. getColors ( ) [ 0 ] )
8281	assertArrayEquals ( expected, fixture. getServerAddresses ( ) )
8282	assertEquals ( document, mapper. readValue ( JSON_MEDIA_INFO_LABELS, MediaInfoDocumentImpl. class ) )
8283	assertEquals ( "Hello, world!", sayHello. execute ( "world", "world" ) )
8284	assertEquals ( "Service should be started twice", 1, svc. getServiceCount ( ) )
8285	assertNotNull ( sessionFactoryBean. getObject ( ) )
8286	assertTrue ( shouldAnalyze )
8287	assertTrue ( cls. containsAxiom ( propP, propQ ) )
8288	assertions. isGreaterThan ( expected )
8289	assertEquals ( "names do not match!", "myComponent", component. getName ( ) )
8290	assertEquals ( "No failures were expected", 0, runTestsResults. getFailures ( ) )
8291	assertEquals ( "", result )
8292	assertEquals ( "Should have received exactly 1 change event", 1, events. size ( ) )
8293	assertTrue ( csv. equals ( "" ) )
8294	assertNotNull ( config )
8295	assertEquals ( "Unexpected primary style name", "v-tree", state. primaryStyleName )
8296	assertJson ( json )
8297	assertEquals ( "coap://50.0.0.1:5683", server. getUri ( ) )
8298	Assert. assertEquals ( journalTable. getKeyColumnNames ( ), ImmutableList. of ( "key1", "key2" ) )
8299	assertEquals ( "Wrong number of parameters", 0, provider. getParameters ( ). size ( ) )
8300	Assert. fail ( "RuntimeException expected" )
8301	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff14_" ) )
8302	assertEquals ( "Found " + numResults + " results instead of " + test [ 1 ], test [ 1 ], numResults )
8303	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
8304	assertEquals ( testDataValue, room. getProperties ( ). getData ( testDataKey ) )
8305	Assert. assertEquals ( expected. replace ( '\\'', '"' ), result )
8306	assertMatches ( written, resolved )
8307	assertEquals ( "hello", result )
8308	assertEquals ( "", result )
8309	assertTrue ( strategy instanceof DefaultShardStrategy )
8310	assertThat ( domain. getValidationFailures ( resourceLookup ), contains ( path ( "logHome" ) ) )
8311	assertEquals ( 2, statistics. getDistinctEdgePropertyValues ( ). size ( ) )
8312	assertEquals ( expectedData, ChartDataBuilder. buildBarData ( chartData ) )
8313	assertEquals ( "Mismatched canonical path", expected, actual )
8314	assertEquals ( ManipulationScope. FIELD, manipulation. getManipulationScope ( ) )
8315	Assert. assertEquals ( new BigDecimal ( "23691.35" ), term. getIndexedValue ( ) )
8316	assertEquals ( "Sex", args. get ( 0 ) )
8317	assertEquals ( 100, ( ( Integer ) proxy ). intValue ( ) )
8318	assertThat ( servletResponse, containsString ( "401" ) )
8319	assertTrue ( "suitable", suitable )
8320	assertEquals ( true, classUnderTest. isShowConstraintNames ( ) )
8321	assertThat ( serialization. from ( date ). asJson ( ), is ( equalTo ( expectedResult ) ) )
8322	assertSame ( stsClient, i. getStsClient ( ) )
8323	Assert. assertEquals ( prefixes. getNsPrefixURI ( "ex" ), query. getNsPrefixURI ( "ex" ) )
8324	assertFalse ( subject. getDelay ( ). isPresent ( ) )
8325	assertEquals ( "unknown version, could not find property foo.bar in module.properties", version )
8326	assertBeanValidation ( json, "query.metric[0].group_by[0].group_count may not be null" )
8327	assertNotNull ( "Returned console reader cannot be null", reader )
8328	assertEquals ( "Expected another type of analyzer", StopAnalyzer. class, analyzer. getClass ( ) )
8329	assertDefaults ( targetProduct, false )
8330	assertSame ( t. toLocalTime ( ), TEST_2007_07_15_12_30_40_987654321. toLocalTime ( ) )
8331	assertThat ( traversal. toList ( ), containsInAnyOrder ( likeVertex ( ). withTimId ( "id1" ), likeVertex ( ). withTimId ( "id2" ), likeVertex ( ). withTimId ( "id3" ) ) )
8332	assertEquals ( expected, getString ( TestExistsCriteriaImpl. example ( ) ) )
8333	assertThat ( result. getIssues ( ), empty ( ) )
8334	assertTrue ( user. hasRole ( "A Role", false ) )
8335	assertEquals ( o1, o2 )
8336	assertThat ( result. hasErrors ( ), is ( false ) )
8337	assertTrue ( set. isEmpty ( ) )
8338	assertNotNull ( "Keyword not found", result )
8339	assertEquals ( 1, violations. size ( ) )
8340	assertEquals ( 0, ksession. fireAllRules ( ) )
8341	assertEquals ( "9208675309", parsedTelephoneNumber )
8342	assertArrayEquals ( "3". getBytes ( ), jedisCluster. get ( byteKey ) )
8343	assertEquals ( 0, array. length )
8344	assertFocusModificationSanity ( context )
8345	assertEqualsIgnoreWhitespace ( expected, real )
8346	assertEquals ( "Mismatched data", expected, res )
8347	assertEquals ( response. getStatus ( ), STATUS200 )
8348	Assert. assertEquals ( button. getTagName ( ), "input" )
8349	assertEquals ( "matches(\\"\\\\\\\\s+\\")", buffer. toString ( ) )
8350	assertEquals ( "{\\"a\\":[1]}", n )
8351	assertEquals ( "Test message ab c", result )
8352	assertEquals ( "SELECT mat FROM SOHeader soh JOIN soh.soItem soi JOIN soi.material mat WHERE soh.soId = 1 AND " + "soi.shId = soh.soId AND mat.id = 'abc'", jpqlStatement. toString ( ) )
8353	assertEquals ( "7", this. banco. geraCodigoDeBarrasPara ( this. boleto ). substring ( 0, 6 ) )
8354	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
8355	assertEquals ( BIG_DATA, result )
8356	Assert. assertEquals ( "!!bitset [\\n" + "  1024,\\n" + "  # 00000000000000000000000000000000000000000000000000000000000000000000010000000000\\n" + "\\n" + "]", wire. toString ( ) )
8357	Assert. assertEquals ( new Double ( Long. MAX_VALUE ), _c. convert ( "Long.MAX_VALUE" ) )
8358	assertTrue ( exceptionReport. getHTTPStatusCode ( ) == HttpServletResponse. SC_INTERNAL_SERVER_ERROR )
8359	assertTrue ( ontology. containsAxiom ( OWLRDFProperty. class ) )
8360	Assert. assertEquals ( Constants. HEADER_SIGNIN_PATH, actualSignInPath )
8361	assertTrue ( entity. getSex ( ) == null )
8362	assertEquals ( expected, loops )
8363	assertTrue ( retDocumentOrganizations == documentOrganizations )
8364	Assert. assertEquals ( "Hello World!", result. get ( 1, TimeUnit. SECONDS ) )
8365	assertThat ( response. getStatus ( ), is ( Response. Status. NOT_FOUND. getStatusCode ( ) ) )
8366	assertEquals ( i, value. intValue ( ) )
8367	assertDeclarationValueRecovery ( ss )
8368	assertEquals ( 1, actual. size ( ) )
8369	assertEquals ( "OK", jedisCluster. scriptFlush ( byteKey ) )
8370	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. VIEW, this. doc ) )
8371	objects. assertIsOfAnyClassIn ( someInfo ( ), actual, types )
8372	assertNoCause ( "message" )
8373	Assert. assertEquals ( 2, i )
8374	assertNotNull ( image )
8375	assertEquals ( expectedResults, aggregationManager. aggregate ( results ) )
8376	assertThat ( markdown, is ( "| | <type>integer</type> | <reference>integer</reference> |" ) )
8377	assertEquals ( p, Period. of ( 0, 0, 0 ) )
8378	assertEquals ( "Count should be equal", 10000, accumulated )
8379	assertEquals ( TEAM_CITY_URL + "/app/rest/projects/id:project54", projectUrl )
8380	assertNotNull ( "Country is null", entity )
8381	Assert. fail ( e. getMessage ( ) )
8382	assertThat ( values, contains ( beginYear ) )
8383	assertOut ( "const a:* = 42" )
8384	assertEquals ( true, result )
8385	assertTrue ( pattern. matches ( "-1.0" ) )
8386	assertResultSet ( res )
8387	assertNotNull ( responseContent )
8388	assertEquals ( 1, kieSession. fireAllRules ( ) )
8389	assertEquals ( expected, actual )
8390	assertTrue ( contains ( url, "?key=123.5" ) )
8391	assertEquals ( Tuple3. of ( 17.29f, 14.5, - 0.98 ), Iterables. getOnlyElement ( applyAggregator ( a, input ) ) )
8392	assertTrue ( s. getRequiredSkills ( ). containsSkill ( "skill1" ) )
8393	assertThat ( responseObject, is ( nullValue ( ) ) )
8394	Assert. assertEquals ( protocoloInfo, protocolo. getProtocoloInfo ( ) )
8395	assertFalse ( "Attribute should be false", msg1. getEdimap ( ). isIgnoreUnmappedSegments ( ) )
8396	Assert. assertNull ( WebUtil. normalizeLocale ( s ) )
8397	Assert. assertNull ( "user group returned", actual )
8398	Truth. assert_ ( )
8399	assertEquals ( "Jersey/2.0-m09 (HttpUrlConnection 1.7.0_04) from the server", response )
8400	assertThat ( date. getMinimum ( CommonElements. RELATED_GREGORIAN_YEAR ), is ( 1000020532 ) )
8401	N4CliHelper. assertExpectedOutput ( expectedString, out )
8402	assertThat ( transferSuccessful, is ( true ) )
8403	assertTwoProcessesDifferentDefinition ( manager )
8404	assertNoDummyAccount ( USER_JACK_USERNAME )
8405	assertEquals ( 2, ftpFiles. length )
8406	assertThat ( value, is ( nullValue ( ) ) )
8407	Assert. assertEquals ( 1, ( int ) conceptName. getConceptNameId ( ) )
8408	assertTrue ( str. contains ( "123" ) )
8409	Assert. assertEquals ( units, deserialize ( tmpDir ) )
8410	assertNotNull ( node )
8411	assertTrue ( "hotmail contacts are empty", contacts. size ( ) > 0 )
8412	Assert. assertEquals ( 0l, ( long ) RequestObjectHelper. getEndOffset ( requestObject ) )
8413	assertFailureLogPresent ( instance, "failingTask" )
8414	assertThat ( parsers, is ( DdlParsers. BUILTIN_PARSERS ) )
8415	assertThat ( spec. getImagePullPolicy ( ), equalTo ( LOADER_IMAGEPULLPOLICY ) )
8416	assertEquals ( "Authentication failed", authenticator. authenticate ( "user", "password" ) )
8417	assertEquals ( expectedGhostTable, ghostTable )
8418	assertThat ( records. size ( ), is ( 0 ) )
8419	assertThat ( root, hasType ( Type. COMPLETELY_SCHEDULED_SUPERELEMENT ) )
8420	assertEquals ( previous + 2, list. size ( ) )
8421	assertTrue ( filter. shouldInclude ( source, "some.property" ) )
8422	Assert. assertArrayEquals ( cplxData_ovsmp_EXPECTED. toDoubleArray ( ), cplxData_ovsmp_ACTUAL. toDoubleArray ( ), DELTA )
8423	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + filename, sourceFolder + "cmp_" + filename, destinationFolder, "diff_" ) )
8424	assertTrue ( properties. shouldCreateNewChat ( ) )
8425	assertThat ( builder. toString ( ), is ( equalTo ( view. getDetails ( ) ) ) )
8426	assertTrue ( "EBV false: " + v, XSDFuncOp. booleanEffectiveValue ( v ) )
8427	Assert. assertEquals ( "Invalid AND of " + operands, row. expected, expr. evaluate ( ). booleanValue ( ) )
8428	assertEquals ( expected, actual )
8429	assertNull ( processor. getTables ( ) )
8430	assertEquals ( label + " serialize-normal failed", e1, r )
8431	assertEquals ( read, wpDocument )
8432	assertEquals ( expectedSource, instrumentedSource )
8433	assertThat ( ( String ) getter. invoke ( instance ), is ( equalTo ( "default" ) ) )
8434	Assert. assertEquals ( element. getText ( ), "click me" )
8435	assertThat ( pool. size ( ), is ( 0 ) )
8436	assertThat ( reading. getQuery ( ), is ( "offset=10" ) )
8437	assertEquals ( 250, tagCache. size ( ) )
8438	assertNotNull ( p )
8439	Assert. assertEquals ( expected, output )
8440	assertThat ( manager. getPartitionSubPath ( new Path ( "partition1" ) ), is ( new Path ( "partition1" ) ) )
8441	Assert. assertEquals ( 0, person. getAttributes ( 1 ). size ( ) )
8442	assertDegenerate ( scan )
8443	assertEquals ( "9 3\\n", found )
8444	assertEquals ( "Expected 0 results!", 0, n )
8445	assertFalse ( JPackage. isForcePackageNameLowercase ( ) )
8446	assertThat ( cursor. hasNext ( ), equalTo ( false ) )
8447	assertEquals ( "irida workflow is invalid", buildTestWorkflowSingle ( ), iridaWorkflowFromFile )
8448	assertEquals ( - 1, Iter. lastIndex ( data, filter ) )
8449	assertTrue ( true )
8450	Assert. assertTrue ( is. available ( ) > 0 )
8451	assertEquals ( date, request. getDate ( ) )
8452	Assert. assertNotNull ( "XML formatter not null", tba1 )
8453	assertEquals ( "immediateResume", str )
8454	Assert. assertEquals ( 0, this. outputDir. listFiles ( ). length )
8455	assertThat ( javaDocComment, containsString ( "A description for this enum" ) )
8456	assertEquals ( - 1, askLevel1. compareTo ( askLevel2 ) )
8457	assertEquals ( expected, actual )
8458	assertEquals ( original, newone )
8459	assertEquals ( ts. toEpochMilli ( ), currentTimeMillis )
8460	assertTrue ( selectedCells. isEmpty ( ) )
8461	Assert. assertEquals ( - 3, ( ( Number ) r ). intValue ( ) )
8462	assertEquals ( val1, point. getValue ( ) )
8463	Assert. assertTrue ( row. matches ( new Guess ( colors ) ) )
8464	assertEquals ( 1, position )
8465	assertThat ( pathElement. getCompletePath ( ), is ( "/a/b/c/d/e" ) )
8466	assertEquals ( 2, acc. get ( ) )
8467	testHelper. assertProcessEnded ( testHelper. snapshotBeforeMigration. getProcessInstanceId ( ) )
8468	Assert. assertEquals ( "Nodes should be considered free since run is considered old at this point ", 10, freeThreads )
8469	assertTrue ( currentGroup. getId ( )!= null )
8470	Assert. fail ( "Failed to get command lines for " + p. getPid ( ) + ": " + e. getMessage ( ) )
8471	assertThat ( queryContext. get ( ), is ( instanceOf ( RoutingContext. class ) ) )
8472	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFInfoCupomFiscalReferenciado ( ). toString ( ) )
8473	assertThat ( resolve ( "http://example.org/b/c" ), is ( "./example/b/c.xsd" ) )
8474	assertEquals ( witness, map )
8475	assertThat ( results. size ( ), is ( 1 ) )
8476	assertScoreAndParse ( content, null, 1 )
8477	assertArrayEquals ( EXPECTED_SIGN_SIGNED_BYTES, encodedBytes )
8478	assertEquals ( 0, kieBuilder. getResults ( ). getMessages ( ). size ( ) )
8479	assertThat ( decoderEncoder. decode ( ecodedSuffix ), equalTo ( qa [ 1 ] ) )
8480	mockOutput. assertIsSatisfied ( )
8481	assertEquals ( "SELECT COUNT(ACT[1], //ACT[2], //ACT[3], //ACT[4], //ACT[5], //ACT[6], //ACT[7], //ACT[8], //ACT[9], //ACT[10], //ACT[11], //ACT[12], //ACT[13], //ACT[13], //ACT[14], //ACT[15], //ACT[16], //ACT[17], //ACT[16], //ACT[15], //ACT[14]], //ACT[15]], //ACT[16]], //ACT[17]], //ACT[16]], //ACT[15]]", QueryParser. getQueryParser ( ). parse ( query ) )
8482	assertEquals ( testString, cv. getValue ( ) )
8483	assertEquals ( expectedQuery, actualQuery )
8484	assertEquals ( expectedRemoteCallReturn, remoteCallReturn )
8485	assertTrue ( "Bean renderer should be opened", isElementPresent ( By. className ( "v-formlayout-beanrenderer" ) ) )
8486	assertThat ( validationList, is ( Collections. < String > emptyList ( ) ) )
8487	assertTrue ( doc. isSameNode ( doc ) )
8488	assertThat ( concurrency, is ( 3 ) )
8489	assertEquals ( "123", converter. getAsString ( facesContext, new UIPanel ( ), null ) )
8490	Assert. assertEquals ( "http://example.com/events/Wiesbaden?eventName=Revo+Tour&location=Schlachthof#description", expanded. toString ( ) )
8491	assertTrue ( session. getNode ( "/test" ). isLock ( ) )
8492	assertArrayEquals ( expected, actual, DELTA )
8493	assertEquals ( "string", array. getString ( 0 ) )
8494	assertEquals ( "0000001476147541", nossoNumeroCompleto )
8495	assertThat ( result, contains ( new Interval ( RangeBoundary. OPEN, 0, 4, RangeBoundary. OPEN, 0, 0 ) ) )
8496	assertNotNull ( Fleet. fetcher ( "FLXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
8497	assertEquals ( response. getStatus ( ), STATUS200 )
8498	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
8499	assertEquals ( 0, time. getTime ( ) )
8500	assertTrue ( "Expected HostCapacityReport", obj instanceof HostCapacityReport )
8501	assertFalse ( workReportTypeDAO. exists ( workReportType. getId ( ) ) )
8502	assertTrue ( true )
8503	assertEquals ( result. getUuid ( ), newUuid )
8504	assertEquals ( true, getLoadLayerDefinitionAction ( ). isEnabled ( ) )
8505	assertEquals ( resp. getCode ( ), 204 )
8506	assertEquals ( expected, answer )
8507	assertTrue ( roles. size ( ) == 2 )
8508	assertTrue ( "Exception expected", write2Complete. await ( TIMEOUT. timeout ( ), TimeUnit. MILLISECONDS ) )
8509	assertTrue ( notifier. wasPerformed ( ) )
8510	assertEquals ( map1, map2 )
8511	helper. assertAttributeValue ( EXPECT_NoAttributeValue, orderLine. getM_AttributeSetInstance ( ), attr_Country )
8512	Assert. assertEquals ( expected, actual. toString ( ) )
8513	assertEquals ( expected [ i ], new String ( digest ) )
8514	Assert. assertFalse ( principal1. equals ( principal2 ) )
8515	assertThat ( result, is ( true ) )
8516	assertEquals ( before, currentUser. getPostCount ( ) )
8517	Assert. assertEquals ( "Compilation of the Vocab failed", 0, result )
8518	assertTrue ( e instanceof E_Version )
8519	assertEquals ( "candidate took 1 millis to execute\\n" + "control took 1 millis to execute\\n" + "example: candidate and control both executed successfully, and the responses match\\n", s )
8520	Assert. assertEquals ( 1, inter. size ( ) )
8521	BufferedImageAssert. assertMatches ( result, new float [ ] { 1, 1, 1, 1, 1, 1, 1, 0, 0 } )
8522	assertTrue ( provider. isProviderIdentifierUnique ( null ) )
8523	assertEquals ( getExplain ( delete, table. getSchemaName ( ) ), "\\n  Delete_Returning()\\n" + "    GroupLookup_Default(Index(c.PRIMARY) -> c)\\n" + "      IndexScan_Default(Index(c.PRIMARY), cid = $1)" )
8524	assertEquals ( "prototype value must be measured", comp. getPreferredSize ( ). width + table. getColumnMargin ( ), columnExt. getPreferredWidth ( ) )
8525	assertEquals ( element. getValueAsString ( ), "func code() {}" )
8526	assertArrayEquals ( new String [ ] [ ] { { "A", "B", "C" }, { "1", "2", "3" } }, event. getMatrix ( ) )
8527	assertEquals ( 0, songList. getTotalElements ( ) )
8528	assertEquals ( "abaac\\n", found )
8529	assertEquals ( numCalls + 1, newNumCalls )
8530	Assert. assertEquals ( SslMode. MIXED, mode )
8531	this. assertEditPostFormMavIsCorrect ( mav )
8532	assertThat ( "the unencoded field has type String", field. getType ( ), equalToType ( STRING ) )
8533	assertEquals ( "Number of account operations should be equal", numberOfOperations, returnedNumber )
8534	Assert. assertTrue ( rPr. getSz ( ). getVal ( ). intValue ( ) == 24 )
8535	assertEquals ( Type. PRIVACY_PREFERENCE_FILE, Type. get ( preference ) )
8536	assertOut ( "delete a" )
8537	Assert. fail ( "Expected SQL exception" )
8538	assertFailureValue ( "value of", "objectArray.length" )
8539	assertNotNull ( host )
8540	assertEquals ( "Expected ratcheting to have been updated", 15, config. getTypeConfigs ( ). get ( CHECKSTYLE ). getMax ( ). intValue ( ) )
8541	assertEquals ( 0xff, keyInfo. getMaxSubKeyLen ( ) )
8542	Assert. assertEquals ( 8, metrics. size ( ) )
8543	assertThat ( mapOfProperties. keySet ( ), containsInAnyOrder ( "leveluplunch.java.examples", "leveluplunch.java.exercises", "leveluplunch.java.tutorials" ) )
8544	Assert. assertEquals ( "unexpected XML protocol result", sb. toString ( ), tagOut )
8545	assertEquals ( testNewUrl, jobEntryHadoopCopyFiles. loadURL ( testUrl, testNcName, metaStore, mappings ) )
8546	assertThat ( localization. getLocale ( ). getLanguage ( ), equalTo ( PT_BR ) )
8547	assertEquals ( 4, booleans. size ( ) )
8548	AssertJUnit. assertTrue ( "filter does not match object", match )
8549	assertTrue ( source. isSnapshotsDisabled ( ) )
8550	assertThat ( noOfSolutions, is ( 16 ) )
8551	assertEquals ( actual, report )
8552	assertThat ( fileContent, is ( "english" ) )
8553	assertEquals ( TEST_CONTENT, CharStreams. toString ( result ) )
8554	assertObjectEquals ( "{'in':'header',name:'H',type:'object',properties:{f1:{type:'string'}}}", x )
8555	Assert. assertFalse ( PublisherSoapServerUtils. gpPublisherClient. publishStyle ( "STYLE_MOCK_MOCKITO_TEST_SOAP" ) )
8556	assertEquals ( "Hello {name}", ResponseBodyInterpolator. interpolate ( "Hello :name", req ) )
8557	assertThat ( diffs. toString ( ), equalTo ( "[Diff(EQUAL,\\"[a, b]\\"), Diff(DELETE,\\"[c, d]\\")]" ) )
8558	Assert. assertFalse ( pf. passesFilter ( p1 ) )
8559	assertThat ( itemTypeDAO. getTypes ( TENANT_ID, false ), is ( expectedTypes ) )
8560	assertEquals ( HELLOWORLD_URI + "iterationstrategy/stack", uri. toASCIIString ( ) )
8561	assertNotNull ( patient )
8562	assertTrue ( success )
8563	assertTrue ( result. get ( ) )
8564	assertEquals ( new File ( ABS_BASE_DIR + toResolve ), DockerPathUtil. resolveAbsolutely ( toResolve, ABS_BASE_DIR ) )
8565	Assert. notNull ( department )
8566	assertEquals ( false, result )
8567	assertThat ( driver. findElement ( By. id ( "halfwidth" ) ). getAttribute ( "value" ), is ( "A!����笺����锛�" ) )
8568	assertEquals ( null, min )
8569	Assert. assertEquals ( 3, resultList. size ( ) )
8570	Assert. fail ( "Channel's detail template not exist,Id is {}.", out. toString ( ) )
8571	assertThat ( classesToParse, is ( empty ( ) ) )
8572	assertNotNull ( User. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
8573	assertEquals ( Boolean. FALSE, e. getEnableCounting ( ) )
8574	assertEquals ( expResult, result )
8575	assertEquals ( 0, mockAdapter. includeBaseDirOptionLength ( ) )
8576	assertEquals ( "", result )
8577	assertEquals ( responseGetRequest. getUri ( baseURI ), expectedURI )
8578	Assert. assertEquals ( 1, mockService. getMessages ( ). size ( ) )
8579	Assert. assertTrue ( "Failure expected true", r. getLeft ( ) )
8580	assertRowCount ( results, 2 )
8581	assertNotNull ( Member. fetcher ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "MBXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
8582	this. assertAnalyzesTo ( _a, "{\\"foo\\":true}", new String [ ] { "foo", "true" }, new String [ ] { TypeAttribute. DEFAULT_TYPE, "<NUM>" } )
8583	assertEquals ( renderTypeOnlyResult ( ), result )
8584	assertEquals ( ImmutableList. of ( new Pair < Integer, Float > ( 1, 3.0f ), new Pair < Integer, Float > ( 3, 0.0f ) ), it. materialize ( ) )
8585	Assert. assertEquals ( 0, analyser. getLoadRightAfterActivity ( route. getActivities ( ). get ( 2 ), route ). get ( 0 ) )
8586	Assert. assertEquals ( "\\"\\\\u3042\\\\u3044\\\\u3044\\\\u3045\\\\u3044\\\\u3045\\\\u3044\\\\u3045\\\\u3044\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u304\\\\u304\\\\u304\\\\u3044\\\\u3044\\\\u3044\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u3045\\\\u304\\\\u304\\\\u304\\\\u304\\\\u304\\\\u304\\\\u304\\\\u304\\\\u304\\\\u304\\\\u304\\\\u304\\\\u3
8587	assertEquals ( body. toString ( ), "1test final" )
8588	Assert. assertEquals ( 2, violations. size ( ) )
8589	assertions. isNotEmpty ( )
8590	Assert. assertEquals ( "/test?field=a%2Cb%2Cc&user=1%2C2%2C3", result )
8591	assertThat ( count, is ( 1L ) )
8592	assertTrue ( Iterables. elementsEqual ( result. getSteps ( ), Lists. newArrayList ( new Step ( 0L, 1L, 0L, false ), new Step ( 1L, 1L, 0L, false ), new Step ( 2L, 3L, 2L, true ), new Step ( 2L, 1L, 2L, true ), new Step ( 2L, 2L, 2L, false ) ) ) )
8593	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"yes\\"?><jaxbModel><first>John</first><last>Citizen</last></jaxbModel>", result )
8594	assertEquals ( "value", exp. asDynamic ( ). asNavigationPropertyPath ( ). getValue ( ) )
8595	Assert. assertNull ( caixa )
8596	classes. assertHasSuperclass ( someInfo ( ), clazz, Object. class )
8597	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
8598	assertThat ( selectionModel. getSelectedObject ( ), is ( Optional. empty ( ) ) )
8599	assertTrue ( filter. matches ( "resilient_pool-0", poolOperation ) )
8600	assertEquals ( expectedNewCookie, parsedNewCookie )
8601	Assert. assertTrue ( response. toString ( ), response. result ( ) )
8602	assertTrue ( "Port referenced '" + referenced + "' is not referenced", isReferenced )
8603	assertSeven ( result, testContext, async )
8604	assertEquals ( "Wrong base path", "whatever", sinkFactory. getBasePath ( ) )
8605	assertThat ( ( String ) registrationProperties. getValue ( ). get ( "configuration" ), equalTo ( "configadmin" ) )
8606	assertEquals ( "OK", r )
8607	assertEquals ( 1, new NQueens ( solution ). attackedQueens ( ) )
8608	assertNull ( ev. get ( "a" ) )
8609	assertEquals ( expected, e. evaluate ( ), 0.0 )
8610	Assert. fail ( "Should have failed" )
8611	Assert. assertEquals ( expectedOutputValues, RheemCollections. asList ( outputValues ) )
8612	assertEquals ( 123, row. getValue ( ) )
8613	assertEquals ( expected, b )
8614	assertEquals ( uri, path )
8615	assertThat ( reader, is ( notNullValue ( ) ) )
8616	assertSame ( MockChooser1. class, delegate. getClass ( ) )
8617	assertEquals ( formatedValue, "26637142000158" )
8618	assertTrue ( FileUtil. findPatternInFile ( new File ( resultFilename ), "Avoid empty if" ) )
8619	assertFalse ( executor. shouldExecute ( action, javax. faces. event. PhaseId. APPLY_REQUEST_VALUES, true ) )
8620	assertTrue ( str. contains ( "com.querydsl.codegen.QGroup$QGroup$1" ) )
8621	assertEquals ( "Homer", exp. evaluate ( person ) )
8622	assertOut ( "this.b = this.b + 1" )
8623	Assert. assertEquals ( "PersonAddressName", result )
8624	assertEquals ( - 1, in. peekByte ( ) )
8625	assertNull ( result )
8626	Assert. assertNull ( gran )
8627	assertThat ( response, containsString ( "81.80.117.237 - 81.80.117.237" ) )
8628	assertEquals ( "1 seconds", result )
8629	assertThat ( givenStories. getPaths ( ), equalTo ( Arrays. asList ( GIVEN_STORY_PATH1, GIVEN_STORY_PATH2 ) ) )
8630	assertFalse ( isEditable )
8631	assertEquals ( "Hello World!", response )
8632	assertEquals ( "Failed at " + i, reduced. getDouble ( i ), res, 0.001 )
8633	Assert. assertEquals ( state. IDLE, state )
8634	Assert. isTrue ( getUser. getGroups ( ). size ( ) == 0 )
8635	assertLinkWithSameUnitsOk ( LinkInfo. UNIT_TYPE. NET, units )
8636	assertEquals ( DEFAULT_POPULATION_SIZE + evaluations, algorithm. getEvaluations ( ) )
8637	assertEquals ( "Period of time time % Milliseconds in a second <= 10000L", "00:00:01 (hh:mm:ss)", DateTimeUtils. millisecondsToHumanTime ( period ) )
8638	assertEquals ( "V1 Track", wrapper. getTrack ( ) )
8639	assertEquals ( "build", buildInfo. getAction ( ) )
8640	assertTrue ( closed. await ( WAIT, TimeUnit. SECONDS ) )
8641	assertEquals ( "3 啶�啶苦え啷� 啷�啶距う", t. format ( new Date ( 0 ) ) )
8642	Assert. assertEquals ( "1 futureday from now", p. format ( new Date ( 1000 * 60 * 60 * 24 ) ) )
8643	assertEquals ( "2", expr. getParameterValue ( ) )
8644	assertEquals ( "pmTitleCfgTooltipUsesTitleTest.ContainerPm", container. getPmTitle ( ) )
8645	Assert. assertEquals ( config, result )
8646	assertEquals ( "http://www.google.de:1234", client. getProxyHost ( ) )
8647	assertEquals ( r1, r2 )
8648	assertNotNull ( rs )
8649	assertEquals ( component. getStyleName ( ), "style1" )
8650	Assert. fail ( )
8651	assertSame ( job, new JsonWriter ( job, file ). getCoverallsFile ( ) )
8652	assertEquals ( expectedUrl, url )
8653	Assert. assertEquals ( 0, count. next ( ). in ( "asdasd" ). count ( ). next ( ). intValue ( ) )
8654	Assert. assertEquals ( coder. parse ( "s2*s3*s2*s3*s2*s3*s2*s3*s2*s3*s2*s3*s2*s3*s2*s3*s2*s3*s2*s3*s2*s3*s2*s3*s2*s3*s3^2*s3^2 - s2*s3*s3*s3*s3*s3*s2*s3*s2*s3*s2*s3*s3*s2*s3*s3*s2*s3*s2*s3*s3*s2*s3*s3*s2*s3*s3*s3*s2*s3*s3*s3*s3*s3*s3*s3*s3*s3*s3*s3*s2*s3*s2*s3*s3*s3*s3*s2*s3*s3*s3*s3
8655	assertEqualsIgnoreLineEnding ( output, "{\\n" + "  \\"additionalProperties\\" : [ {\\n" + "    \\"name\\" : \\"value\\"\\n" + "  } ],\\n" + "  \\"additionalProperties\\" : [ {\\n" + "      \\"name\\" : \\"value\\"\\n" + "  } ],\\n" + "  \\"additionalProperties\\" : [ {\\n" + "      \\"name\\" : \\"value\\"\\n" + "  } ]\\n" + "}" )
8656	assertEquals ( first. hashCode ( ), bc. hashCode ( ) )
8657	assertEquals ( "{test;param;}", result )
8658	assertThat ( main. getResource ( toClassFileName ( "a.class" ) ), is ( new File ( classPathUrls [ 0 ] ) ) )
8659	assertEnvelopeEquals ( expected, actual, STRICT )
8660	assertTrue ( "Expected Optional<NormalizedNode<?,?>> with no child nodes", optional. isPresent ( ) )
8661	assertEquals ( service. getSize ( new String [ ] { "", "", "" } ), 3 )
8662	assertThat ( actual, notNullValue ( ) )
8663	assertEquals ( "/foo/bar/baz", output )
8664	Assert. assertFalse ( conceptService. hasAnyConceptAttribute ( conceptAttributeType ) )
8665	assertTrue ( selector. evaluate ( source ) )
8666	assertFalse ( "Created MulticastSocket", context. datagramSocket instanceof MulticastSocket )
8667	Assert. assertEquals ( 5.1f, value, 0 )
8668	assertCard ( expectedCard, "http://magiccards.info/dgm/en/3.html", expectedCard. getRarity ( ). toDisplayName ( ), expectedCard. getName ( ) )
8669	assertThat ( request. getOauthParameters ( ), hasSize ( 3 ) )
8670	assertEquals ( "SELECT\\n" + "c.id, c.name, c.tags, c.category, c.description, \\n" + "c.division, c.experience_level as \\"experienceLevel\\", \\n" + "c.locations, c.type, c.parent_id as \\"parentId\\", \\n" + "g.latitude as \\"latitude\\", g.longitude as \\"longitude\\"\\n" + "FROM campaign c\\n" + "WHERE \\n" + "c.type = 'JOBPAGE' AND c.createts < now() -- {}\\n" + "ORDER BY c.createts\\n" + "LIMIT 100 -- {}\\n" + "OFFSET 1 -- {}", actual )
8671	Assert. fail ( "Should not be able to generate a -1 length String" )
8672	context. assertIsSatisfied ( )
8673	assertNull ( retry )
8674	Assert. assertFalse ( ModuleUtil. matchRequiredVersions ( openmrsVersion, requiredVersion ) )
8675	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
8676	assertThat ( renderLayers. getLayers ( ), is ( empty ( ) ) )
8677	Assert. assertNull ( job )
8678	Assert. assertTrue ( repo. getEventDefinition ( eqd2. getEventId ( ) ). equals ( evt1 ) )
8679	assertEquals ( expResult, result )
8680	assertEquals ( a1, a2 )
8681	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, n ) + ", rmse = " + rmse, 0.0, rmse, EPS )
8682	assertThat ( underTest. execute ( underTest, null, null, new Object [ ] { PATH, FORMAT, "group_repo" }, null ), is ( false ) )
8683	assertTrue ( Pattern. matches ( "(?s).*<html>\\\\s*<head>\\\\s*<style\\\\s*type=\\"text/css\\"\\\\s*media=\\"screen\\"\\\\s*allowfullscreen\\\\s*disabled=\\"true\\"\\\\s*checked=\\"checked\\"\\\\s*type=\\"text/css\\"\\\\s*media=\\"screen\\"\\\\s*allowfullscreen\\\\s*disabled=\\"true\\"\\\\s*disabled=\\"true\\"\\\\s*disabled=\\"true\\"\\\\s*/>\\\\s*<body>\\\\s*<table\\\\s*lang=\\"en\\"\\\\s*style=\\"left:\\\\s*48px;\\\\s*top:\\\\s*100px;\\\\s*position:\\\\s*absolute\\">\\\\s*<tbody>\\\\s*<tr>\\\\s*<td>\\\\s*<ul\\\\s*dir=\\"LTR\\"\\\\s*style=\\"left:\\\\s*48px;\\\\s*top:\\\\s*100px;\\\\s*position:\\\\s*absolute\\">\\\\s*<li\\\\s*style=\\"color:\\\\
8684	mockery. assertIsSatisfied ( )
8685	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
8686	assertOut ( "a.removeAt(2)" )
8687	Assert. assertNull ( foundPid )
8688	assertEquals ( asList ( Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment
8689	assertEquals ( "theSubStart", hpi. getStartActivityId ( ) )
8690	assertDocument ( session. getSessionFactory ( ), "Enterprise", "{ '_id' : 'enterprise-1', " + "'departments' : {" + "'sawing' : {" + "'name' : 'Sawing'," + "'price' : 7," + "'price' : 2," + "'price' : '2' + "}," + "'sale' : {" + "'name' : 'Sale'," + "'price' : '2' + "}" + "}" + "}" )
8691	Assert. assertEquals ( strExpected, strActual )
8692	assertEquals ( calendar. getTime ( ), toml. getDate ( "a_date" ) )
8693	assertNotNull ( doc )
8694	assertEquals ( "force switchable", status. toString ( ) )
8695	assertNotNull ( annotation )
8696	AssertJUnit. assertEquals ( expectedEdge. getEdgeType ( ), edgeType )
8697	runner. assertNotValid ( credentialsService )
8698	Assert. assertTrue ( "output does not contain version", listOutput. contains ( "version" ) )
8699	assertTrue ( "Russian alphabet not correctly reverse sorted", result )
8700	assertNotNull ( result )
8701	assertEquals ( "a b\\n", found )
8702	assertEquals ( 1, vrp. getDirectOfCustomer ( ). size ( ) )
8703	assertEquals ( "abc", res )
8704	assertEquals ( JobStatus. ENQUEUED, job. status )
8705	assertEquals ( expected, content )
8706	assertEquals ( expResult, result )
8707	assertEquals ( XML_BOOKS, writer. toString ( ) )
8708	assertEquals ( "Wrong source", source, select. getSource ( ) )
8709	ITUtils. assertReceivingDifferentRows ( proxy, key, ROW_COUNT )
8710	Assert. assertFalse ( p1. isSameAs ( p2 ) )
8711	assertRoundtrip ( input )
8712	assertSame ( ctrlC, accelerator )
8713	assertThat ( domain. getServer ( "server1", "cluster1" ). shouldStart ( 0 ), is ( true ) )
8714	assertEquals ( before, after )
8715	Assert. assertEquals ( b, a )
8716	assertEquals ( asList ( foo1 ), results )
8717	assertFormat ( number, String. valueOf ( number ) )
8718	assertThat ( converter. convert ( "10/06/2008", Date. class, bundle ), is ( equalTo ( new SimpleDateFormat ( "dd/MM/yyyy" ). parse ( "10/06/2008" ) ) ) )
8719	assertEquals ( "http://choob-plugin.org/PluginModule.class", UrlUtils. getResource ( url ) )
8720	assertEquals ( map. keySet ( ). size ( ), 1 )
8721	assertEquals ( defaults, config. getDefaults ( ) )
8722	Assert. assertTrue ( version1. equals ( version2 ) )
8723	Assert. fail ( "Should throw FileNotFoundException" )
8724	assertThat ( uri. getPath ( ), endsWith ( "testing" ) )
8725	assertNotNull ( result )
8726	Assert. assertEquals ( siteFinder. hasResults ( ), true )
8727	assertEquals ( "Expected 400 but got " + response. getStatus ( ), 400, response. getStatus ( ) )
8728	assertNotNull ( endpoint )
8729	assertEquals ( "Expected 0 results!", 0, n )
8730	assertTrue ( latch. await ( 4, SECONDS ) )
8731	assertThat ( time. with ( PlainTime. COMPONENT. setToNextFullHour ( ) ), is ( PlainTime. midnightAtEndOfDay ( ) ) )
8732	Assert. assertEquals ( "John Doe", customer )
8733	assertMockEndpointsSatisfied ( )
8734	assertThat ( parsed, is ( equalTo ( original ) ) )
8735	assertTrue ( modelFamilyDTOs. size ( ) >= 1 )
8736	Assert. assertEquals ( ERROR_MESSAGE + input + '"', expected, filter ( input ) )
8737	Assert. assertTrue ( pss. toString ( ). contains ( Integer. toString ( c. get ( Calendar. DAY_OF_MONTH ) ) ) )
8738	assertEquals ( "Did not match expected URIs", expected, lookups )
8739	assertEquals ( new Short ( ( short ) 3 ), t )
8740	assertEquals ( "icmp-rule-desc-update", policyRule. getDescription ( ) )
8741	assertEquals ( 0, to. getCount ( ) )
8742	assertEquals ( ",", testDelimiter )
8743	Assert. assertEquals ( decompressFlag, methodCalled. get ( 0 ) )
8744	assertThat ( channel. isLongString ( ), equalTo ( true ) )
8745	assertEquals ( HttpStatusCode. OK_200, response. getStatus ( ) )
8746	assertEquals ( "/parent/dir/a/b/c", path. toString ( ) )
8747	assertTrue ( output. isIsomorphicWith ( source ) )
8748	assertArrayEquals ( message, unmarshallHandshakeMessage ( ) )
8749	Assert. assertEquals ( "(aa_change_substitution (aa_point_location (aa_char Cys) 123) (aa_char Arg))", aa_change_substitution. toStringTree ( parser ) )
8750	assertTrue ( Property. buildAll. getValue ( new Properties ( ) ) )
8751	assertions. hasSize ( 5 )
8752	assertThat ( description. toString ( ), is ( "a future that completed with a value that is <1>" ) )
8753	assertLabelQueryResult ( query. toString ( ), both ( binds ( "xLabel", Literal. class ) ). and ( binds ( "x", URI. class ) ) )
8754	assertEquals ( "requests size", 4, requests. size ( ) )
8755	assertEquals ( MultiStringPropertyState. createStringProperty ( "source", Arrays. asList ( "1", "2", "3" ) ), builder. getPropertyState ( ) )
8756	Assert. assertEquals ( json. toString ( ), fromJson. toString ( ) )
8757	assertEquals ( "Duplicate label name was not allowed", WriteError. CONFLICT, error )
8758	assertEquals ( 0, stk. size ( ) )
8759	assertEquals ( 1234, get ( url ). intHeader ( "malformed", 1234 ) )
8760	assertEquals ( profilePage. getUsername ( ), "test-admin" )
8761	assertNotNull ( cal )
8762	assertNotNull ( output. list ( ) )
8763	assertEquals ( FAILED, result. get ( OUTCOME ). asString ( ) )
8764	assertThat ( "testSetPrimaryBitstreamID 0", b. getPrimaryBitstream ( ), equalTo ( bs ) )
8765	assertThat ( columnCombination. getContainedOneColumnCombinations ( fixture. getMaxNumberOfColumns ( ) ), IsIterableContainingInAnyOrder. containsInAnyOrder ( fixture. getExpectedContainedOneColumnCombinations1 ( ) ) )
8766	assertFalse ( nextExecution. isPresent ( ) )
8767	assertFalse ( Validator. isValidUtf8 ( buf, rw ) )
8768	Assert. assertEquals ( jdkHand, acHand )
8769	assertEquals ( expectedHome, config. getHomeDirectory ( ) )
8770	assertEquals ( AuthenticationTypeParser. SAS, parserSAS. getAuthenticationParser ( ). getType ( ) )
8771	assertThat ( true, equalTo ( result ) )
8772	assertTrue ( status. equals ( HardActivityConstraint. ConstraintsStatus. FULFILLED ) )
8773	assertTrue ( worker. getAssignments ( ). size ( ) == assignments. size ( ) )
8774	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 06" ) )
8775	assertThat ( props. getProperty ( COLA_REPORT_METHOD ), is ( GET_METHOD ) )
8776	Assert. assertEquals ( 100., time, 0.01 )
8777	assertEquals ( expected, actual )
8778	assertTrue ( instanceConstraintViolationsList. toString ( ), instanceConstraintViolationsList. size ( ) == 0 )
8779	assertEquals ( 0, getMessageQueueSize ( ) )
8780	assertTrue ( jiffle. isCompiled ( ) )
8781	assertThat ( CurrentInstance. getInstances ( ). size ( ), is ( 2 ) )
8782	assertThat ( response, not ( containsString ( "Unreferenced" ) ) )
8783	assertFalse ( objJPAEdmProperty. isConsistent ( ) )
8784	Assert. assertEquals ( val1, index )
8785	assertNotNull ( factoryBean. createKeyManagerFactory ( ) )
8786	Assert. assertEquals ( 0, actual, 1e-10 )
8787	assertEquals ( dn, dnExpected )
8788	assertEquals ( a1. getName ( ), a2. getName ( ) )
8789	assertTrue ( ex. getCause ( ) instanceof MutationsRejectedException )
8790	Assert. assertTrue ( validator. invalidMessagesFor ( cpf ). isEmpty ( ) )
8791	assertEquals ( auth1. hashCode ( ), auth2. hashCode ( ) )
8792	Assert. assertEquals ( "Verify that the default registered container is returned", name, container. getName ( ) )
8793	Assert. assertTrue ( true )
8794	assertMockEndpointsSatisfied ( )
8795	Assert. assertTrue ( o. equals ( obj ) )
8796	assertEquals ( "Unexpected URL address", con. getURL ( ). toString ( ), ei. getAddress ( ) )
8797	Assert. assertEquals ( driver ( ). manage ( ). getCookies ( ). size ( ), 0 )
8798	assertTrue ( handlerContainer. onBindCalled )
8799	assertEquals ( deserializedList. size ( ), 0 )
8800	assertEquals ( 0.0, aiResponse. getResultScore ( ), 0.0 )
8801	assertHelpLines ( "Option                                       Description", "------                                       -----------", "--date [MM/dd/yy: your basic date pattern]   a date     ", EMPTY )
8802	assertThat ( anyTS. contains ( CLOCK_HOUR_OF_AMPM ), is ( true ) )
8803	assertEquals ( value1, value2 )
8804	assertThat ( action. hashCode ( ), is ( other. hashCode ( ) ) )
8805	assertEquals ( "Connection per hosts", 70, ioConfig. getMaxConnPerHost ( ) )
8806	assertEquals ( expectedSource, instrumentedSource )
8807	assertEquals ( ValidationResult. OK. getStatus ( ), validationResult. getStatus ( ) )
8808	assertEquals ( 2L, actual )
8809	Assert. assertNull ( c. getAccessLevel ( ) )
8810	assertEquals ( "null", new JSONObject ( data ). toString ( ) )
8811	Assert. assertNotNull ( options. getSubOptions ( ConverterRegistry. class ) )
8812	assertEquals ( "scheme://:123/path", uri. toString ( ) )
8813	assertNotNull ( ref )
8814	assertEquals ( 2, cf1. hasChildren ( ) )
8815	Assert. assertTrue ( getException )
8816	assertEquals ( "C", output )
8817	assertions. containsNull ( )
8818	assertEquals ( 0, ret. size ( ) )
8819	assertEquals ( result, subject. unmodifiableSet ( ) )
8820	assertArrayEquals ( msg1, deserializedComm. getCommitmentValue ( ) )
8821	assertFalse ( extension. isUpdateContainerAllowed ( CONTAINER_ID, new KieContainerInstanceImpl ( CONTAINER_ID, KieContainerStatus. STARTED, kieContainer ), new HashMap < > ( ) ) )
8822	assertTrue ( difference. toString ( ), difference. toString ( ). contains ( "CreatedDate" ) )
8823	assertThat ( highlander, is ( notNullValue ( ) ) )
8824	assertEquals ( 1, cache. getResourceTypeManagerCache ( ). getResourceActivities ( ). size ( ) )
8825	Assert. assertEquals ( "12 ����������������������������������������������������������������������������������
8826	assertOut ( "RoyaleTest_A.prototype.royaleTest_a = function() {\\n  var /** @type {number} */ a = NaN;\\n  var /** @type {number} */ b = NaN;\\n  //var /** @type {number} */ a = NaN;\\n  //var /** @type {number} */ b = NaN;\\n  //var /** @type {number} */ c = NaN;\\n}" )
8827	assertEquals ( 1, interceptAnnotations. size ( ) )
8828	assertEquals ( "3 啶�啶苦く啷� 啷�", t. format ( new Date ( 0 ) ) )
8829	assertEquals ( "testing", removeSentenceDecorator. toDisplay ( ) )
8830	Assert. assertNotNull ( camelctx )
8831	assertEquals ( "the notification handler did not receive the " + RESOURCE_ADDED_NOTIFICATION, 1, handler. getNotifications ( ). size ( ) )
8832	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 10" ) )
8833	assertTrue ( Bean81V3BindMap. class. getName ( )!= null )
8834	assertAccessorsCorrect ( multi, "maxSelect", 3, 4, 5 )
8835	assertTrue ( count1. equals ( count2 ) )
8836	assertEquals ( config. getOozieWorkflowConfig ( ), event. getValue ( ). getNewValue ( ) )
8837	assertEquals ( "ISA03", s. getElement ( "ISA03" ) )
8838	assertEquals ( 0, fileSystem. size ( ) )
8839	assertEquals ( "123涓���浜烘��卞����", deserialize. readUTF ( ) )
8840	assertTrue ( "Expected ComplexSchema hierarchy validation succeeded", hierarchySchema. validate ( hierarchyEntity ) )
8841	assertEquals ( "Buthane", foundName )
8842	assertThat ( result, is ( lines ( new String [ ] [ ] { { "\\\\\\t" } } ) ) )
8843	assertEquals ( "true", mojo. flatten ( file ) )
8844	assertNotNull ( tm )
8845	assertEqualsIgnoreWhitespace ( result, KnowledgeHelperFixerTest. fixer. fix ( raw ) )
8846	assertThat ( result, is ( Arrays. copyOfRange ( data, 1, 3 ) ) )
8847	assertEquals ( "id", item. getId ( ) )
8848	assertArrayEquals ( getPixels ( expected, 0, 0, expected. getWidth ( ), expected. getHeight ( ), null ), getPixels ( actual, 0, 0, actual. getWidth ( ), actual. getHeight ( ), null ) )
8849	assertNotNull ( cat )
8850	assertEquals ( expectedPanel, actualPanel )
8851	assertTrue ( "testSnappyBlockCompression error!!!", out. toByteArray ( ). length > 0 )
8852	Assert. assertEquals ( "ActivityType.APPLICATION", sut. objectToString ( activity ) )
8853	Assert. assertEquals ( rawInput, text )
8854	assertEquals ( expected, elements )
8855	Assert. isTrue ( organizations. size ( ) > 0 )
8856	assertEquals ( "the_string", obj )
8857	assertThat ( destination. getBodyText ( ), is ( "Navigation Destination from : from rule" ) )
8858	assertEquals ( s, value )
8859	assertEquals ( 1, Evaluator. evaluate ( ex ). size ( ) )
8860	assertThat ( result, equalTo ( "setDValue" ) )
8861	assertEquals ( expected, model )
8862	assertEquals ( "setter password expected", "PaZZwor6", user. getPassword ( ) )
8863	assertEquals ( "root.parentq", policy. assignAppToQueue ( "root.default", "user1" ) )
8864	assertOut ( "<Button id=\\"myBtn\\"/>" )
8865	Assert. assertEquals ( expectedIp, AgentUtils. findIpAddress ( "127.0.0.1" ) )
8866	assertEquals ( "�械屑邪 �械芯写械�懈�械�泻懈� �芯芯写邪 1995(小�-95)��]]", crs. getRemark ( ). toString ( ) )
8867	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
8868	assertEquals ( biography, dbAbba. getBioSummary ( ) )
8869	Assert. assertEquals ( "c", eval ( ctx ) )
8870	assertThat ( jdbcSource, nullValue ( ) )
8871	assertFalse ( handler. containsMessageSubstring ( message, 0 ) )
8872	assertThat ( result, is ( equalTo ( ( List < String > ) of ( "AA", "BB" ) ) ) )
8873	assertEquals ( world, result )
8874	assertThat ( reply ( ), is ( anAppendReply ( ). withResult ( false ) ) )
8875	assertNotNull ( result )
8876	Assert. assertEquals ( string, table. getFilterVar ( ) )
8877	assertEquals ( error, "UUID passed in cannot be parsed" )
8878	assertEquals ( states. size ( ), 7 )
8879	assertTrue ( res instanceof String )
8880	assertEquals ( ExpressionFactory. inExp ( "path", Arrays. asList ( artist1, artist2 ) ), exp )
8881	assertEquals ( expected, response )
8882	assertEquals ( originalFetchCount, timeline. getFetchCount ( ) )
8883	Assert. fail ( "exception expected" )
8884	assertFalse ( isValid )
8885	assertThat ( unix ( instance, strategy ), equalTo ( "ec2-0-0-0-0.compute-1.amazonaws.com" ) )
8886	assertEquals ( true, result )
8887	assertThat ( employee. getSalary ( ), is ( 100.50D ) )
8888	assertThat ( request. getTimestamp ( ), equalTo ( now ) )
8889	assertEquals ( "(& [= fo*] [= *oo] [= foo])", m. toString ( ) )
8890	assertThat ( advisor. getAdvice ( ), instanceOf ( TpicPreBeanPostProcessor. DelegateTpicToThreadInterceptor. class ) )
8891	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoItemProdutoCombustivel ( ). toString ( ) )
8892	assertNull ( _poolDeviceMap. getOrCreateDS ( name, 0, ip ) )
8893	assertTrue ( "exp(" + arg + ") is " + vFM + " instead of " + vM, Precision. equalsIncludingNaN ( vM, vFM ) )
8894	assertEquals ( Arrays. asList ( "1234567890" ), digits )
8895	Assert. assertEquals ( "Hello World!", result )
8896	assertTrue ( resultComparator. compare ( od1, od2 ) < 0 )
8897	assertEquals ( 2, nuOfType1Vehicles )
8898	assertEquals ( "two undecilh茫o de inteiros", actual )
8899	assertThat ( model2. getMyBytes ( ), is ( value ) )
8900	assertEquals ( "Block size", 4, ecipher. getBlockSize ( ) )
8901	assertEquals ( "Compression/Decompression error", inputLine, readLine )
8902	assertThat ( foundResources, contains ( p2id. getValue ( ) ) )
8903	assertEquals ( expectedQuery, actualQuery )
8904	assertTrue ( actionsTriggered. get ( ) )
8905	assertNotNull ( transMeta )
8906	assertThat ( query ( ). where ( ). count ( ), is ( 0L ) )
8907	ramlResponse. assertContentEquals ( "filename", values )
8908	assertions. isSorted ( )
8909	assertEquals ( htmlDoc, new String ( output ) )
8910	arrays. assertContainsOnly ( description, actual, null )
8911	assertEquals ( "Unexpected status code in HTTP response.", SC_UNAUTHORIZED, statusCode )
8912	assertFalse ( validatorLoadbalancer. validate ( meta, POST ). passedValidation ( ) )
8913	assertEquals ( 20, result )
8914	Assert. assertThat ( instance. getId ( ), Matchers. is ( "natural key" ) )
8915	assertEquals ( "value", entry. getValue ( ) )
8916	assertNull ( cut. getJobResource ( resource. getID ( ) ) )
8917	assertNotNull ( Channel. reader ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "WKXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
8918	Assert. assertEquals ( "{\\"@context\\":\\"../../$metadata#ESMixPrimCollComp(32767)/" + "PropertyComp/olingo.odata.test1.CTBase\\"," + "\\"@metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\"," + "\\"@type\\":\\"#olingo.odata.test1.CTBase\\"," + "\\"AdditionalPropertyString\\":null," + "\\"PropertyInt16\\":111," + "\\"PropertyString\\":\\"TEST A\\"}", resultString )
8919	assertEquals ( "<textarea>&lt;p&gt;Jsoup&lt;/p&gt;</textarea>", doc. body ( ). html ( ) )
8920	assertTrue ( usl. getPenStroke ( ). getWidth ( ). equals ( "1 2 1 3" ) )
8921	assertEquals ( customToken, decoded. getToken ( ) )
8922	assertEquals ( expectedOutput, timeConversion. getFormattedTime ( input. split ( ":" ) ) )
8923	assertTrue ( container. getItemIds ( ). contains ( id ) )
8924	assertEquals ( expResult, result )
8925	Assert. assertTrue ( newSql. equals ( "SELECT * FROM cpcplan@dblink WHERE name = '12'" ) )
8926	Assert. assertEquals ( StringUtils. trimAllWhitespace ( result. toString ( ) ), "{\\"$or\\":[{\\"name\\":\\"foo\\",\\"age\\":1},{\\"name\\":\\"bar\\",\\"age\\":2},{\\"name\\":\\"baz\\",\\"age\\":3}}]}" )
8927	assertEquals ( LibUsb. SUCCESS, LibUsb. init ( context ) )
8928	Assert. assertNotNull ( e )
8929	assertEquals ( "Null should be compatibilized to 0", 0, val )
8930	assertEquals ( "city(new HashMap<String>())", city. toString ( ) )
8931	assertThat ( result, equalTo ( false ) )
8932	assertEquals ( new ArrayList < > ( ), tagsList )
8933	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
8934	assertSame ( "wrapping renderer must use combo's default on null", combo. getWrappedCellRenderer ( ), renderer )
8935	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). resolveVisibility ( "unknown" ) )
8936	assertEquals ( "Announcements table should be populated by 3 announcements", 3, controlPage. announcementsTableSize ( ) )
8937	assertNull ( subject. preProcess ( "sql", mock ( Statement. class ), mock ( ResultSetInternalMethods. class ), mock ( Connection. class ), 1, true, true, null ) )
8938	assertEquals ( "c", r )
8939	org. junit. Assert. assertEquals ( expected, actual )
8940	assertFalse ( rootNode. isAuthenticationEnabled ( ) )
8941	assertEquals ( PERSON_COUNT, personCount )
8942	assertEquals ( 0, branch_conditions. size ( ) )
8943	assertEquals ( TEST_MD5, computedDigest )
8944	Assert. assertEquals ( expected, actual )
8945	assertSemanticException ( statement, "create view view1 as select a from " + DB1 + ".tb1" )
8946	assertThat ( result, is ( Arrays. asList ( "getMyField", "getIsMyField", "getMyField", "isMyField" ) ) )
8947	assertThat ( specification. getUnits ( ), is ( BYTE. multiply ( 1L << 20 ) ) )
8948	Assert. assertEquals ( expected, computed, 0.01 )
8949	assertEquals ( 2, jobsToSubmit. size ( ) )
8950	assertThat ( studies. size ( ), is ( 0 ) )
8951	assertThat ( score > 0.0f, is ( true ) )
8952	assertNull ( svc. getZK ( ) )
8953	assertEquals ( "SELECT f1, f2 FROM Class", q. toString ( ) )
8954	assertNotNull ( hGrowSpace. createSpacer ( hFixedSpace, vGrowSpace ) )
8955	Assert. assertTrue ( result. size ( ) == 0 )
8956	assertEquals ( dnsCache1, dnsCache2 )
8957	assertEquals ( SchemaFromInd2AndSubfield2. class, field. getDefinition ( ). getFieldIndexer ( ). getClass ( ) )
8958	assertEquals ( "Base value is not properly parsed", Long. valueOf ( 1000 ), parsed )
8959	assertTrue ( "Checkout method did not return true.", action. checkout ( launcher, workspace, "viewname" ) )
8960	assertThat ( estimator. getCardinality ( ), is ( 10L ) )
8961	assertEquals ( one. jjtGetChildCount ( ), two. jjtGetChildCount ( ) )
8962	assertThat ( connection, is ( notNullValue ( ) ) )
8963	Assert. assertTrue ( Math. abs ( maxAbsDeviation ) < 1E-3 )
8964	assertTrue ( rem. equals ( new LineParameters ( new Color ( 51, 85, 102 ), 1.0,.5, "" ) ) )
8965	assertEquals ( "12:00", get ( ) )
8966	Assert. assertTrue ( "We should get 2 documents filtered for being oversized", count == 2 )
8967	assertThat ( getWindowHeaderMarginRight ( ), is ( "32px" ) )
8968	assertThat ( elasticSearchDownloader. createQuery ( ). toString ( ), containsString ( QUERY ) )
8969	assertThat ( source. getRetryLimit ( ), is ( i ) )
8970	assertAnnotations ( 0, Entity. class )
8971	assertEquals ( expectedResult, result )
8972	assertTrue ( dstClass. getDeclaredMethod ( "foo" ). isAccessible ( ) )
8973	assertEquals ( locationGetRequest. getUri ( baseURI ), expectedURI )
8974	assertEquals ( 10, count )
8975	assertEquals ( "SetArgs{langs=en, lang=fr}", setArgs. toString ( ) )
8976	assertTrue ( printError ( report ), report. hasItems ( ) )
8977	assertThat ( pairs. isEmpty ( ), is ( true ) )
8978	assertNotNull ( builder )
8979	assertNotNull ( result )
8980	assertNbrOfGerritEventListeners ( PluginImpl. getInstance ( ). getServer ( PluginImpl. DEFAULT_SERVER_NAME ) )
8981	assertEquals ( f. getLowestRanked ( ). intValue ( ), 11 )
8982	assertEquals ( 3, results. get ( "messageCount" ) )
8983	assertTrue ( serviceWadl. length ( ) > 0 )
8984	assertEquals ( users. size ( ), 1 )
8985	assertEquals ( expectedRegister, newRegister )
8986	assertEquals ( expResult, result )
8987	assertEquals ( "um milh茫o e centavos e um", actual )
8988	assertNotNull ( getStdOut ( ) )
8989	Assert. assertEquals ( "<Times><Expires>True</Expires><ExpiryTime>2016-01-16T00:00:00</ExpiryTime><LastAccessTime>2016-01-15T00:00:00</LastAccessTime><LastModificationTime>2016-01-17T00:00:00</LastModificationTime><LocationChanged>2016-01-19T00:00:00</LocationChanged><UsageCount>23</UsageCount></Times>", xml )
8990	assertThat ( prefixDeclarations. size ( ), is ( 2 ) )
8991	assertTrue ( ret )
8992	assertEquals ( "Mr. Horatio Test Hornblower", providerAttribute. getName ( ) )
8993	assertThat ( out. toString ( ), is ( String. format ( "Queen%s", sep ) ) )
8994	assertArrayEquals ( new int [ ] { 12345, 54321, 678768 }, factory. createDummy ( new ClassBindings ( ) ) )
8995	assertEquals ( expected, Util. underscoredToJava ( "propNameIdentifier123", false ) )
8996	assertEquals ( expectedResult, result )
8997	Assert. assertTrue ( "Capacity did not shrink!", ( ( CapacityBalancingEvictor < Integer > ) evictor ). getCapacity ( ) < 10 )
8998	assertEquals ( map. size ( ), n * nThreads )
8999	Assert. assertEquals ( xml, FabricaDeObjetosFake. getNFEventoCancelamento ( ). toString ( ) )
9000	assertEquals ( 5, sum )
9001	assertEquals ( expResult, result )
9002	assertNotNull ( connection )
9003	assertTrue ( AuthzResolver. authorizedInternal ( session, "test_security_team_admin", Arrays. asList ( createdVo, createdTeam ) ) )
9004	assertThat ( formatter. format ( PlainDate. of ( 2015, 1, 1 ) ), is ( "1 January 1, 1970" ) )
9005	assertTrue ( "Failed to match with compatible IPv6 subnet hex notation.", match )
9006	Assert. assertEquals ( "no column created", "AUDIT_ACTION_ID", actualColumn )
9007	Assert. assertTrue ( _c. canConvertTo ( Long. class ) )
9008	assertNotNull ( service. prepare ( query ). asSingleEntity ( ) )
9009	assertEquals ( "foobar", s )
9010	assertTrue ( intercepted. get ( ) )
9011	assertThat ( status, is ( 201 ) )
9012	assertFalse ( result )
9013	Assert. assertNotNull ( migrationPlan )
9014	N4CliHelper. assertExpectedOutput ( "express properties: application, request, response, Route, Router, query, static", out )
9015	assertEquals ( 3, cheeses. size ( ) )
9016	Assert. assertEquals ( expected, actual, TOl )
9017	assertEquals ( registerList. getRegisterList ( ), set )
9018	assertThat ( MomentInterval. parseISO ( "P4DT1H45M/2012-04-01T14:15Z/2012-04-01T16:00" ), is ( expected ) )
9019	assertTrue ( entities. size ( ) == 1 )
9020	assertThat ( crownStreetAddress. equalsContent ( rileyStreetAddress ), is ( false ) )
9021	assertEquals ( "No sub-branch was destroyed", 0, changes. size ( ) )
9022	assertFalse ( RangeDefinition. isDocSpecific ( docSpecificRange ) )
9023	assertNotNull ( jobConfig )
9024	assertRollupBeanValidation ( json, "rangeAggregator may not be null" )
9025	assertTrue ( reader. isLost ( ) )
9026	assertTrue ( set. isEmpty ( ) )
9027	assertNotNull ( document )
9028	Assert. assertNull ( session, "No session should have been created when proxy set is empty" )
9029	Assert. assertEquals ( expected, actual )
9030	assertEquals ( s, r. toString ( ) )
9031	Assert. assertFalse ( innstillinger. isTooManyPagesForPrint ( ) )
9032	assertEquals ( original. toString ( ), imposter. toString ( ) )
9033	assertEquals ( actual, expected, "Wrong substitution" )
9034	assertEquals ( statistics. size ( ), definitions. size ( ) )
9035	assertNull ( customPanelDef. getParent ( ) )
9036	assertions. containsSequence ( sequence )
9037	assertEquals ( "Response status should be OK", ClientResponse. Status. OK. getStatusCode ( ), clientResponse. getStatus ( ) )
9038	assertEquals ( correctResults, results )
9039	Assert. assertEquals ( "G9JYBOMPUXHYHKSNRNMMSSZCSHOFYOYNZRSZMAAYWDYEIMVVOGKPJBVBM9TDPULSFUNMTVXRKFIDOHUXXVYDLFSZYZTWQYTE9SPYYWYTXJYQ9IFGYOLZXWZBKWZN9QOOTBQMWMUBLEWUEEASRHRTNIQWJQNDWRYLCA", hash )
9040	assertEquals ( "3 啶�啶苦え 啷�啶距う", t. format ( new Date ( 1000 * 60 * 60 * 24 * 7 * 3 ) ) )
9041	assertSame ( shouldFind, selection. textInput ( By. id ( "test" ) ) )
9042	XMLAssert. assertXMLEqual ( "Invalid content received", content, result. toString ( ) )
9043	assertEquals ( "", p01. getValue ( ) )
9044	assertNull ( searchedNode )
9045	assertEquals ( pkgId, cache. getPkgId ( orgName, pkgName ) )
9046	assertThat ( value, isOneOf ( "45", "44", "45", "54" ) )
9047	assertNotNull ( dao. findByDemographicNo ( 1 ) )
9048	assertThat ( bufferedEvents. size ( ), equalTo ( 0 ) )
9049	assertEquals ( expectedSource, instrumentedSource )
9050	assertEquals ( "error message not equal", "invalid job type was not recognized", message )
9051	assertEquals ( DummyModel. where ( new Key ( "column1", "test123" ), new Key ( "column2", "test" ) ), Arrays. asList ( model ) )
9052	assertEquals ( actual1, actual2 )
9053	assertArrayEquals ( plaintext, result )
9054	assertSeen ( visible )
9055	assertEquals ( r1, r2 )
9056	Assert. assertEquals ( clickMe. getText ( ), buttonText )
9057	assertEquals ( docs. getResults ( ). size ( ), 2 )
9058	assertEquals ( keyExpected, keyBuilt )
9059	testRunner. assertAllFlowFilesTransferred ( EncodeContent. REL_FAILURE, 1 )
9060	assertSame ( "control", choice. get ( ) )
9061	assertSqlCanBeParsedAndDeparsed ( stmt )
9062	assertThat ( postResponse. getStatus ( ), is ( 400 ) )
9063	assertFalse ( checker. isFormat ( stream ) )
9064	assertThat ( _mockAddComponentService. getComponent ( _packageToReRegister ), is ( nullValue ( ) ) )
9065	assertThat ( description. toString ( ), is ( "a future that completed with a value that is <1>" ) )
9066	assertEquals ( Response. Status. NOT_FOUND. getStatusCode ( ), target. request ( MediaType. TEXT_PLAIN ). get ( ). getStatus ( ) )
9067	Assert. isTrue ( grade. getEmployments ( ). size ( ) > 0 )
9068	assertSame ( initialProperties, contextParameterResolver. resolve ( parameter, applicationContext ) )
9069	assertEquals ( 0.0, rmsd, 0.0001 )
9070	assertTrue ( Modifier. isPrivate ( c. getModifiers ( ) ) )
9071	assertEquals ( "unknown", commandDocument. getArg ( 0 ) )
9072	assertTrue ( "Agent-based allocation should have failed", plan. getAllReservations ( ). size ( ) == 0 )
9073	assertThat ( matcher. matches ( mockResponse ), is ( false ) )
9074	assertEquals ( "d 42\\n", found )
9075	assertThat ( count, is ( 1 ) )
9076	assertEquals ( defaultJobIdPartitioner. getPartition ( ), "default" )
9077	Assert. assertTrue ( mockedTenantDA. getLzPaths ( ). contains ( "." ) )
9078	assertEquals ( adminServletPath, environment. get ( "admin.servlet.uri" ) )
9079	assertEquals ( "1\\n", drl )
9080	assertEquals ( 0, counter )
9081	assertEquals ( expectedList, customerDAO. getAll ( ) )
9082	assertEquals ( "Bef&ore [Link&amp;1](#dest1?a=b&amp;c=d) Mid&dle [Link&amp;2](http://xyz/abc?x=y&amp;z=w) Aft&er", result )
9083	Assert. assertNotNull ( json. getString ( "startedFollowingResource" ) )
9084	Assert. assertEquals ( expectedNode. toString ( ), pdoc. toString ( ) )
9085	assertEquals ( "aTestString", classUnderTest. getSchemaName ( ) )
9086	assertCompletionsDisplayString ( "my.background=<*>", "color:", "color*:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:", "color:"
9087	assertThatCellReaderWasCalled ( )
9088	assertEquals ( "璁＄����璇�", 1, rs )
9089	assertArrayEquals ( new String [ ] { "1.2.40.0.13.1.1.99.27.1.1" }, matches ( query, Tag. SOPInstanceUID ) )
9090	assertArrayEquals ( expectedBytes, serializer. serialize ( ) )
9091	assertEquals ( "/db/a/", xmldbURI. resolveCollectionPath ( uri ). toString ( ) )
9092	assertEquals ( "Failed on i = " + i, x, ret )
9093	Assert. assertNotNull ( out. getD15 ( ) )
9094	Assert. assertFalse ( "Get Profile  returned no results", json. isEmpty ( ) )
9095	Assert. assertEquals ( decryptedStringExpected, decryptedStringActual )
9096	Assert. assertEquals ( "�����������������������������������������������������������������������������������
9097	assertEquals ( expected, service. getTimestampInSeconds ( ) )
9098	Assert. assertTrue ( response. getStatus ( ) == OK. getStatusCode ( ) )
9099	assertEquals ( expected, s )
9100	assertFalse ( "empty data source contains records", it. hasNext ( ) )
9101	assertThat ( serializeWith ( dateTime, formatter ), containsString ( dateTime. format ( formatter ) ) )
9102	assertEquals ( "1,2147483647,-2147483647,null", s. serialize ( ( HttpPartSchema ) null, new Short [ ] { new Short ( 1 ), Short. MAX_VALUE, Short. MIN_VALUE } ) )
9103	assertEquals ( "parameterValue", cli. parameter. some_changelog_parameter )
9104	Assert. assertEquals ( 0, ret )
9105	assertEqualsIgnoreLineEnding ( xmlString, "<?xml version='1.1' encoding='UTF-8'?><string>hello</string>" )
9106	assertFalse ( "Configuration is empty", plist. isEmpty ( ) )
9107	assertEquals ( VALID_DIR, mockPrefHandler. getPref ( PREF_KEY_LAST_TRACE_DIR ) )
9108	assertThat ( subtree. isEmpty ( ), is ( true ) )
9109	assertEquals ( "Temporary global id not set", new EOTemporaryGlobalID ( ), entity. __getGlobalID ( ) )
9110	assertNotNull ( result )
9111	assertTrue ( isCorrectEnqLinkRequest )
9112	assertTrue ( payload. needsBuild ( getProject ( ) ) )
9113	runner. assertAllFlowFilesTransferred ( PutAzureEventHub. REL_SUCCESS, 0 )
9114	Assert. fail ( "exception expected" )
9115	assertSelected ( get ( 0 ), get ( 1 ) )
9116	assertEquals ( - 1, aNumber. compareTo ( bNumber ) )
9117	assertEquals ( scale ( value ), ra. get ( ). get ( ) )
9118	assertEquals ( "Painting", p1. getProperty ( "name" ) )
9119	assertNotNull ( ds )
9120	assertEquals ( "...lead a </td> tail...", example. output ( ) )
9121	assertEquals ( Result. PASS, name. apply ( item, - 1 ) )
9122	assertEquals ( 1, result. size ( ) )
9123	Assert. assertEquals ( "Stylesheet contains two rules", 2, ss. size ( ) )
9124	assertTrue ( isContainerPrincipalTypeInResponse ( resp, false ) )
9125	assertNull ( "Required profiles is not null", new KnopflerfishPlatformBuilderF300T310 ( m_bundleContext, "version" ). getRequiredProfile ( m_platformContext ) )
9126	assertEquals ( result, HEX )
9127	assertNull ( song. getName ( ) )
9128	assertThat ( result, is ( Boolean. valueOf ( true ) ) )
9129	assertThat ( encryptedPasswordPass1, not ( equalTo ( encryptedPasswordPass2 ) ) )
9130	assertTrue ( c. isSessionCreated ( pom1 ) )
9131	assertEquals ( Locale. ENGLISH, metadata. getLanguage ( ) )
9132	assertAnnotations ( 2, Figure. class, new TestQuantity ( 0, "GR SU 02194 45374", "s", 0, "area" ), new TestQuantity ( 1, "45374", 45374, "s", 0, "area" ) )
9133	assertEquals ( true, results. contains ( "[INSERT], Return=OK, 1" ) )
9134	assertDepth ( "addSubTree", callTree, expectResult )
9135	assertArrayEquals ( expected, actual, DELTA )
9136	Assert. assertNotNull ( dataSourceFactory )
9137	assertEquals ( "nl:surfnet:diensten:hallo", group20Entry. getEntry ( ). get ( 0 ). getId ( ) )
9138	assertEquals ( s, bs. getSheep ( ) )
9139	assertEquals ( "Hello, Earth!", config. getString ( DEFAULT_CONTAINER, "expression" ) )
9140	assertThat ( response. getStatus ( ), is ( 200 ) )
9141	assertDownLoadAndInstallMessage ( distributionSet. getModules ( ), controllerId )
9142	assertThat ( r. hasUnrestrictedChild ( LIST, FsPath. create ( "/" ) ), is ( equalTo ( true ) ) )
9143	assertEquals ( Unpooled. buffer ( ), actual )
9144	assertThat ( test, is ( expected ) )
9145	assertTrue ( ( boolean ) testedMethod. invoke ( tasksManagerImpl, STARTING_BYTE_OF_2_BYTE_CHAR ) )
9146	assertSqlCanBeParsedAndDeparsed ( statement )
9147	Assert. assertEquals ( "Hello NAR World!", app. sayHello ( ) )
9148	assertEquals ( expResult, result )
9149	assertEquals ( 1, dataset. getDefaultModel ( ). size ( ) )
9150	assertEquals ( expected, cacheManager. resolveDefaultMaxSizeInvalidTooBigArgument ( ), 1e-9 )
9151	assertEquals ( "$metadata#ESAllPrim(PropertyString,PropertyInt16,PropertyInt16)", ContextURLBuilder. create ( contextURL ). toASCIIString ( ) )
9152	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
9153	assertThat ( actualEnums, is ( expectedEnums ) )
9154	assertThat ( object, nullValue ( ) )
9155	assertEquals ( 2, deployments. size ( ) )
9156	assertEquals ( doc1, io. getDocument ( q1 ) )
9157	assertEquals ( LocalDate. now ( zone ). getDayOfYear ( ), test. getValue ( ) )
9158	assertEquals ( expected [ i ] [ y ] [ x ], ra. get ( ). get ( ), 0 )
9159	assertErrorEventDefinition ( "end", "myErrorCode" )
9160	assertEquals ( expected, sut. getAllIds ( ) )
9161	assertEquals ( expected, actual )
9162	assertEquals ( "foo", result )
9163	assertTrue ( ic. imageEqualToReference ( screenshotImage, referenceImage, "google1-masked.png", 0.16 ) )
9164	mini. assertReadFile ( mini. getLocalFs ( ), fileSpec, "1;one", "2;two" )
9165	Assert. assertTrue ( billingService instanceof BillingCalculationPre )
9166	assertEquals ( expected, actual )
9167	assertArgumentParserException ( args )
9168	assertTrue ( true )
9169	assertEquals ( tmap, readValue )
9170	assertOut ( "var /** @type {string} */ a = unescape('%25')" )
9171	assertThat ( ( TraceeBackend ) FieldAccessUtil. getFieldVal ( interceptor, "backend" ), is ( Tracee. getBackend ( ) ) )
9172	assertTrue ( page. asXml ( ). contains ( "form:submit: Value is not current component." ) )
9173	assertEquals ( 1, groupsToBeProxied. size ( ) )
9174	assertEquals ( layerId, result )
9175	assertEquals ( docToInsert. getString ( "a-field" ), saved. getString ( "a-field" ) )
9176	assertThat ( otherWorkspace. getNode ( "/lockable" ). isLock ( ), is ( false ) )
9177	assertThat ( isTransactionRelated, is ( false ) )
9178	assertTrue ( subject. isShortHand ( ) )
9179	assertTrue ( ( Boolean ) result )
9180	assertThat ( ClockInterval. parseHHMM ( "720/24" ), is ( interval ) )
9181	assertEquals ( "public static void main(String[] args) {}", actualContent )
9182	assertThat ( injector. getInstance ( Key. get ( TestConfiguration. class ) ), is ( expectedConfiguration ) )
9183	assertEquals ( "Hello ^there", ResponseBodyInterpolator. interpolate ( "Hello ^there", req ) )
9184	assertEquals ( "SELECT CURRENT_DATE + CASE WHEN CAST(RAND() * 3 AS INTEGER) = 1 THEN 100 ELSE 0 END DAY AS NEW_DATE FROM mytable", CCJSqlParserUtil. toSQLString ( sql ) )
9185	assertTrue ( xml. matches ( "(?i)<\\\\?xml.*?version=\\"10.17\\".*?\\\\?>.*" ) )
9186	assertSame ( copy, map )
9187	result. assertErrorFreeLog ( )
9188	assertThat ( actual, is ( equalTo ( "/ab/CD/GH" ) ) )
9189	Assert. assertFalse ( "Failure expected true", r. getLeft ( ) )
9190	assertThat ( target, is ( instanceOf ( Topology. class ) ) )
9191	assertEquals ( "master", job. getBranch ( ) )
9192	assertEquals ( 1, result. getTotalHits ( ) )
9193	assertThat ( CollectionUtil. join ( list, ", " ), is ( "Aaa, Bbb, Ccc" ) )
9194	assertFailureKeys ( "key", "key", "value", "length" )
9195	assertEquals ( "endLoc", v. getEndLocation ( ). getId ( ) )
9196	Assert. assertEquals ( "Hallo 'Dave' ��������������������������������������������������������������������������������
9197	assertEquals ( "[1,2,3]", returnResult. get ( RETURN_RESULT ) )
9198	assertThat ( val, is ( Optional. of ( "one" ) ) )
9199	assertEquals ( expecteds, actuals )
9200	assertEquals ( "gzip", decorator. name ( ) )
9201	assertTrue ( "Should validate ASCII key", ValidationResult. isValid ( "mykey1234" ) )
9202	assertEquals ( "TEST.", result )
9203	assertPermanentCount ( playerB, "Grapeshot", 0 )
9204	Assert. assertThat ( control, is ( - 7 ) )
9205	assertNotNull ( connection )
9206	assertEquals ( "100000000000000000000.0/3.0", AviatorEvaluator. execute ( "100000000000000000000.0/3.0" ) )
9207	assertEquals ( 0, searchResultsConverter. getNoOfExecutions ( ) )
9208	assertEquals ( "library.xqm", mainSource. getFilename ( ) )
9209	assertNull ( request. getVisitorRegion ( ) )
9210	assertEquals ( road, road2 )
9211	assertEquals ( 0, stats. getNumBytes ( ) )
9212	assertEquals ( "unsortable column must be unsorted", SortOrder. UNSORTED, table. getSortOrder ( 0 ) )
9213	assertEquals ( new SimpleDateFormat ( "yyyy-MM-dd'T'HH" ). format ( dt ), new SimpleDateFormat ( "yyyy-MM-dd'T'HH" ). format ( dueDate ) )
9214	assertThat ( actual, is ( expected ) )
9215	Assert. assertTrue ( lrsRes. getSuccess ( ) )
9216	Assert. fail ( "Exception should have been thrown" )
9217	assertEquals ( expected, actual )
9218	Assert. assertEquals ( expected, actual )
9219	assertEquals ( "{\\"store\\":{\\"book\\":[{\\"category\\":\\"fiction\\",\\"author\\":\\"Evelyn Waugh\\",\\"title\\":\\"Sword of Honour\\"," + "\\"price\\":12.99}],\\"bicycle\\":{\\"color\\":\\"red\\",\\"price\\":19.95}},\\"arrayTest\\":[1,2,3]}", result. get ( RETURN_RESULT ) )
9220	assertEquals ( "JOHN + SUPERCLASS HOOK", object. getName ( ) )
9221	arrays. assertContainsSequence ( description, actual, sequence )
9222	assertTrue ( result. getBounds ( ). equals ( nonEmpty. getBounds ( ) ) )
9223	assertSame ( expected, result )
9224	assertTrue ( getNoErrorMsg ( ), result )
9225	assertThat ( out. exists ( ), is ( false ) )
9226	assertTrue ( f1. equals ( f2 ) )
9227	assertEquals ( Arrays. asList ( "a" ), results )
9228	assertEquals ( 1_000_000, version )
9229	assertEquals ( deserialized, truth )
9230	assertEquals ( testTitle, song. getTitle ( ) )
9231	assertEquals ( TestClass. class. getName ( ), service. logger. getName ( ) )
9232	assertFalse ( sut. execute ( request ) )
9233	assertEquals ( "This is a value spread out across several adjacent " + "natural lines by escaping the line terminator with a " + "backslash character.", property, TextUtil. multilines ( property ) )
9234	assertEquals ( response. getStateToken ( ), getSiteDefaultContent ( ). getStateToken ( ) )
9235	Assert. assertEquals ( false, retval )
9236	assertThat ( "Topics should be paginated for the given branch", topicsPage, hasPages ( pageCount ) )
9237	assertEquals ( expectedPolicy, builtPolicy )
9238	assertTrue ( true )
9239	assertEquals ( "LPQueryServiceConfigW{\\n" + "  DwServiceType: 1,\\n" + "  StartType: 2,\\n" + "  ErrorControl: 3,\\n" + "  DwLoadOrderGroup: LoadOrderGroup1,\\n" + "  TagId: 4,\\n" + "  Dependencies: [S1, S2],\\n" + "  ServiceStartName: ServiceStartName1,\\n" + "  DisplayName: DisplayName1\\n" + "  ],\\n" + "  Available: 4,\\n" + "  Available: 4,\\n" + "  Available: 4,\\n" + "  Available: 4,\\n" + "  Available: 4,\\n" + "  Available: 4,\\n" + "  Available: 4,\\n" + "  Available: 4,\\n" + "  Available: 4,\\n" + "  Available: 4,\\n" + "  Available: 4,\\n" + "  Available: 4,\\n" + "  Available: 4,
9240	Assert. assertEquals ( ipvo. getVipState ( ), VipState. Available )
9241	assertNotNull ( entity. getId ( ) )
9242	assertEquals ( "id", field. getType ( ) )
9243	assertEquals ( "http://example.org/ontology/name", conn. getNamespace ( "ont" ) )
9244	assertFalse ( permissionService. hasPermission ( 0, AclClassName. BRANCH, GeneralPermission. READ ) )
9245	Assert. assertEquals ( "API ID", spanEvent. getApiId ( ), API_ID )
9246	assertEquals ( 2, bs. capacity ( ) )
9247	assertEquals ( "Expected 0 results!", 0, n )
9248	assertTrue ( "selected bounds", model. isSelected ( today ) )
9249	assertFalse ( emptySerializable. asOptional ( ). isPresent ( ) )
9250	assertEquals ( Double. valueOf ( 1 / 10 ), day. inverse ( ). getValue ( ) )
9251	Assert. assertEquals ( "", json, winphone. toJSON ( ) )
9252	assertTrue ( connection ( ). exists ( RDFS. Resource, RDF. type, ex1, null, false ) )
9253	assertEquals ( numWatchersToStart - 1, consumersListOfActiveWatchers. size ( ) )
9254	Assert. assertEquals ( IsolationLevels. SERIALIZABLE, connection. getIsolationLevel ( ) )
9255	assertSame ( first, f. apply ( first, second ) )
9256	assertEquals ( "longitude", variableName )
9257	Assert. assertTrue ( in. verifyDigest ( digestPos, handshakeBytes, RTMPHandshake. GENUINE_FMS_KEY, 36 ) )
9258	files. assertHasDigest ( INFO, actual, algorithm, expected )
9259	assertEquals ( URI, EndpointUtil. decodeEndpointURI ( result ) )
9260	assertTrue ( validator. isValid ( "7992739871", null ) )
9261	assertEquals ( "Wrong list property", list, conf2. getProperty ( prop ) )
9262	assertEquals ( "0 0 5 *", result )
9263	assertEquals ( functionImportList. size ( ), 0 )
9264	assertEquals ( expected, cronExpr. evaluate ( after, zoneId ) )
9265	assertEquals ( logger1, logger2 )
9266	Assert. assertFalse ( s. containsPrivateIdentifiableInformation ( ) )
9267	Assert. assertTrue ( "Auth failed", Arrays. equals ( result, authed ) )
9268	assertEquals ( "geo_shape condition serialization is wrong", expected, actual )
9269	assertEquals ( "a b\\n", found )
9270	assertTrue ( new File ( "target/export11" ). exists ( ) )
9271	Assert. assertEquals ( 0., analyser. getTimeWindowViolationAtActivity ( route. getStart ( ), route ), 0.01 )
9272	assertThat ( accessor. isMutable ( ), is ( false ) )
9273	assertThat ( results, is ( new String [ ] { "Hello, world!" } ) )
9274	assertNotNull ( metadata )
9275	assertThat ( read ( format, written ), contains ( 1.25f ) )
9276	assertEquals ( p1. element0 ( ). payload ( ). remaining ( ), m2. payload ( ). remaining ( ) )
9277	assertNotNull ( deviceRegistration. getAttestationCert ( ) )
9278	assertEquals ( 40, new AcceptsLambda < Integer > ( ). accept ( ( a, b ) -> x + a + b ). intValue ( ) )
9279	assertEquals ( expected, actual )
9280	assertTrue ( getNoErrorMsg ( ), result )
9281	assertEquals ( "PER", rlg. nextLabel ( ) )
9282	Assert. assertEquals ( "dog", result. get ( "dog" ) )
9283	assertThat ( cut. getNumberOfFields ( ), is ( 2 ) )
9284	assertEquals ( "case when (cat.toes =?1) then?1 when (cat.toes =?2) then?2 else?3 end", serializer. toString ( ) )
9285	context. assertEquals ( patternStr. hashCode ( ), pH. hashCode ( ) )
9286	assertEquals ( 0, content. refCnt ( ) )
9287	assertEquals ( asList ( trace ( mdcValues, marker, message, args ) ), testLogger. getLoggingEvents ( ) )
9288	assertEquals ( "The value is not correct.", date, value )
9289	assertEquals ( times, result )
9290	assertEquals ( 0, project. getBuildConfigurations ( ). size ( ) )
9291	assertEquals ( "Revokes on " + change. getObjectName ( ) + " have been given to " + change. getRecipientList ( ), change. getConfirmationMessage ( ) )
9292	Assert. assertEquals ( expectedJsonTree, actualJsonTree )
9293	assertEquals ( "TEXT", sb. toString ( ) )
9294	Assert. assertEquals ( expectedResult, result. getValue ( ) )
9295	AssertEx. assertDoubleEquals ( 10.5, dist )
9296	assertEquals ( "701", properties. getSafetySwitch ( ) )
9297	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
9298	assertTrue ( id. length ( ) == length )
9299	assertEquals ( 7, context. getTableCount ( ) )
9300	assertTrue ( "Should have removed the accumulator after commit", weakMap. isEmpty ( ) )
9301	Assert. assertThat ( bs. getMassive ( ), is ( control ) )
9302	assertThat ( stateless, is ( not ( stateful ) ) )
9303	assertEquals ( expectedClientConfig, actualClientConfig )
9304	assertEquals ( "null", sb. toString ( ) )
9305	assertEquals ( false, result )
9306	assertEquals ( "fooValue", entity. getValue ( ) )
9307	assertEquals ( 0, result )
9308	assertEquals ( expResult, result )
9309	assertSerializeDeserialize ( ext )
9310	context. assertEquals ( 1, types. size ( ) )
9311	assertDecimalEquals ( dup. getValue ( 1 ), 8 )
9312	assertTrue ( denormalizer. denormalization ( "studentSectionAssociation" ). singleInsert ( entity ) )
9313	assertFalse ( rpcException. hasErrorCode ( ) )
9314	assertThat ( plog. parse ( "7:20:24" ), is ( interval ) )
9315	assertEquals ( "foo", fStep. getValue ( ) )
9316	assertEquals ( "INSERT INTO VERTEX ( w, x) " + "VALUES ( ( w.prop = 1, u.prop = 2), ( v.prop = 3, u.prop = 4) ) " + "VALUES ( ( w.prop = 3, u.prop = 4) " + "FROM MATCH (v)", QueryParser. getQueryParser ( ). parseCommand ( query ). toString ( ) )
9317	assertEquals ( "Expected 0 results!", 0, n )
9318	assertContains ( e. getMessage ( ), "'name'" )
9319	assertEquals ( 2, event. getValues ( ). length )
9320	Assert. assertEquals ( HiveRunnerConfig. TIMEOUT_SECONDS_DEFAULT, config. getTimeoutSeconds ( ) )
9321	assertEquals ( expected, Sets. newHashSet ( chunks ) )
9322	assertTrue ( "hasChildChanged() not true", _scs. hasChildChanged ( ) )
9323	Assert. assertFalse ( errors. hasErrors ( ) )
9324	assertEquals ( "value3", request. getParameter ( "name3", null ) )
9325	assertEquals ( expResult, result )
9326	assertNotNull ( user )
9327	assertTrue ( ic. imageEqualToReference ( screenshotImage, referenceImage, "google1.png", 0 ) )
9328	Assert. assertEquals ( String. format ( "some %s", this. html ( bb, "size", "size" ) ), formatter. format ( "some [size]size[/size]", defaultOptions ( ) ) )
9329	Assert. assertEquals ( activity, resolved )
9330	assertTrue ( requestResult )
9331	assertionHelper. assertEquals ( "did not overwrite", string1, actual )
9332	assertTrue ( filter. shouldInclude ( source, "some.property" ) )
9333	Assert. assertEquals ( config. getTheClazz ( ), Object. class )
9334	Assert. assertEquals ( "Wrong result", 1, reg1. getRegistrationCount ( ) )
9335	Functions. as ( extractor )
9336	assertFalse ( row. equals ( otherRow ) )
9337	iterablesWithCaseInsensitiveComparisonStrategy. assertContains ( someInfo ( ), actual, array ( "luke", "YOda", "LeIA" ) )
9338	assertEquals ( "_cat/allocation?h=shards%2Cdisk.indices%2Cdisk.used", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
9339	assertThat ( lines, hasSize ( 1 ) )
9340	assertEquals ( 101, keyCount. get ( ) )
9341	assertEquals ( "Result", dt. getDatatypeURI ( ), RDFS. xsdfloat )
9342	assertEquals ( "%level - %m%n", layout. getConversionPattern ( ) )
9343	assertTrue ( analysis. isTestPassing ( ) )
9344	assertEquals ( "recoveredResult must be Success(84)", recoveredResult, new Try. Success < > ( 84 ) )
9345	assertEquals ( 2, gpxEntries. size ( ) )
9346	assertEquals ( 0, drugs. size ( ) )
9347	assertThat ( result, contains ( likeTriple ( uri ( "http://www.example.org/example/1" ), ANY, ANY ), likeTriple ( uri ( "http://www.example.org/example/2" ), ANY, ANY ) ) )
9348	assertTrue ( true )
9349	assertEquals ( InterpreterResult. Code. ERROR, res. code ( ) )
9350	assertLine ( "great lakes brewery", b, false )
9351	assertFalse ( schemaRegistry. getHostnameVerifier ( ). verify ( "", null ) )
9352	assertEquals ( msg, myMessage )
9353	assertEquals ( model, RdfTestHelpers. parseRdf ( RdfTestHelpers. getResourceFromFile ( "ItemDocument.rdf" ) ) )
9354	assertNull ( "Certificate should be null", cert )
9355	assertEquals ( "unexpected errors: " + equeue, 1, equeue. errors. size ( ) )
9356	assertSame ( MockChooser1. class, delegate. getClass ( ) )
9357	assertThat ( new JcrValue ( factories, cache, PropertyType. DATE, date ). getDouble ( ), is ( ( double ) date. getTime ( ) ) )
9358	Assert. assertEquals ( "START TRANSACTION WITH CONSISTENT SNAPSHOT;", text )
9359	assertEquals ( expected, statement. toString ( ) )
9360	assertEquals ( "{\\"tagVO2\\":{\\"group\\":{\\"$\\":\\"b\\"},\\"name\\":{\\"$\\":\\"a\\"}}}", s )
9361	assertEquals ( "boolean", result )
9362	assertThat ( generated, is ( "{ {}\\nOPTIONAL {?v1. }}" ) )
9363	Assert. assertFalse ( isOk )
9364	assertEquals ( path, "/module/motechmodule/addfacility" )
9365	assertEquals ( "We are testing...", out )
9366	assertThat ( beanClass, typeCompatibleWith ( ApplicationDecorator. class ) )
9367	assertTrue ( true )
9368	assertThat ( lines. size ( ), is ( 1 ) )
9369	assertNotNull ( method )
9370	assertEquals ( passwordEncoder. encode ( plainText ), expected )
9371	assertEquals ( 0.5d, response, 0.0001d )
9372	Assert. assertEquals ( ServerParse. REPLACE, sqlType )
9373	assertEquals ( rep, rep1 )
9374	assertEquals ( subThing, newThing )
9375	assertEquals ( newEntry3, res )
9376	Assert. assertEquals ( "input and output must match", expected, found )
9377	assertSame ( descriptor, content )
9378	assertEquals ( "Successfully generated authentication message", "Successfully generated authentication message", authenticationMessageBuilder. generateSuccessfulAuthenticationMessage ( successfulToken ) )
9379	Assert. assertEquals ( 1, s. getPriority ( ) )
9380	assertEquals ( 0, count ( graph. vertices ( ) ) )
9381	assertEquals ( "4::", result )
9382	assertNotNull ( result )
9383	assertEquals ( Bytes. asList ( new byte [ ] { 3 } ), bytes ( producer. getValue ( ). next ( ) ) )
9384	assertEquals ( expectatedMessage. trim ( ), e. getMessage ( ). trim ( ) )
9385	assertEquals ( false, context. isResult ( ) )
9386	assertNotNull ( this. filter )
9387	assertEquals ( "2", getValue ( ) )
9388	assertEquals ( 10., Solutions. bestOf ( solutions ). getCost ( ), 0.01 )
9389	assertEquals ( null, result )
9390	assertTrue ( "Authentication factory should be created", ops. exists ( TEST_AUTHENTICATION_FACTORY_ADDRESS ) )
9391	assertFalse ( id1. equals ( null ) )
9392	assertEquals ( 6, tokens. size ( ) )
9393	QualityExpectations. newInstance ( ). receiptSchedule ( receiptSchedule ). aggregatedExpectation ( ). copyFrom ( aggregatedExpectations. qualityExpectation ( ) ). endExpectation ( ). endExpectation ( ). endExpectation ( ). endExpectation ( ). endExpectation ( ). endExpectation ( ). endExpectation ( ). endExpectation ( ). endExpectation ( ). endExpectation ( ). endExpectation ( ). copyFrom ( partsExpectations. qualityExpectation ( ). copyFrom ( huReceiptLineCandidatesBuilder. build ( ) )
9394	Assert. assertEquals ( obj. getByteArr ( ) [ 0 ], obj2. getByteArr ( ) [ 1 ] )
9395	switchyard. assertModelValid ( )
9396	assertThat ( nonSerializableResult, is ( not ( nullValue ( ) ) ) )
9397	assertions. isNullOrEmpty ( )
9398	Assert. assertTrue ( ( byte ) 0 == _c. convert ( "" ) )
9399	assertEquals ( "<table> <colgroup> <col> <colgroup> <col> <col> </colgroup><thead> <tr> <th> <th>2008 <th>2007 <th>2006 <th>2006 </th> </tr></thead> <tbody> <tr> <th scope=\\"rowgroup\\"> Research and development </th><td> $ 782 </td><td> $ 712 </td></tr></thead><tbody> <tr> <th scope=\\"row\\"> Percentage of net sales </th><td> 3.4% </td><td> 3.3% </td><td> 3.7% </td></tr></tbody><tbody> <tr> <th scope=\\"rowgroup\\"> Selling, general, and administrative </th><td> $ 3,761 </td><td> $ 2,963 </td><td> $ 2,433 </td></tr></tbody><tbody> <tr> <th scope=\\"row\\"> Percentage of net sales </th><td> 11.6% </td><td> 12.
9400	Assert. assertEquals ( "Hello! World", result )
9401	Assert. assertEquals ( json, writer. toString ( ) )
9402	assertEquals ( "Options should be equal to itself", options, options )
9403	assertTrue ( objAssociation. getConsistentEdmAssociationList ( ). size ( ) > 0 )
9404	assertEquals ( "column_after", statement. getColumnName ( ) )
9405	assertFailureCatalogContains ( AsyncSuspendWithoutForgetBean. class, "no annotations.*" + Forget. class. getName ( ) )
9406	Assert. assertNotNull ( "Thread name value is missing", jsonObject. get ( "threadName" ) )
9407	Assert. assertEquals ( new URI ( "http://absolute-url.fr/readme.txt" ), UriUtils. buildNewURI ( new URI ( url ), suffix ) )
9408	assertFalse ( result. isPresent ( ) )
9409	assertTrue ( check )
9410	assertEquals ( query, percolateQueryBuilder. buildQuery ( ) )
9411	assertEquals ( 0, app. executeApplication ( args ) )
9412	assertTrue ( "The output string is not correct", result. contains ( "SignatureInjectorImpTest.xml" ) )
9413	Assert. assertEquals ( "should have found read permissions", FilePermissionEnum. READ, enumVal )
9414	assertEquals ( "group:artifact:1.0.0:jar:classifier", model. toString ( ) )
9415	assertTrue ( expectedTextFound )
9416	Assert. assertEquals ( "eins zwei\\ndrei\\nvier\\nfuenf", result )
9417	assertThat ( scenario. getDeploymentDescriptions ( ), hasSize ( 2 ) )
9418	Assert. notNull ( wschu )
9419	assertEquals ( "Display should be visible", display. getText ( ), "Display should be visible" )
9420	assertEquals ( "Got a value", encoder. get ( ), da. getEncoder ( ) )
9421	assertFalse ( validator. validate ( certificateMapping, POST ). passedValidation ( ) )
9422	Assert. assertFalse ( "The filter should not have been initialized", TestFilter. INITIALIZED )
9423	assertEquals ( "1388538000000", partition )
9424	assertEquals ( "<csv-record number=\\"1\\"><firstname>Tom</firstname><lastname>Fennelly</lastname><gender>Male</gender><age>4</age><country>Ireland</country></csv-record><csv-record number=\\"2\\"><firstname>Mike</firstname><lastname>Fennelly</lastname><gender>Male</gender><age>2</age><country>Ireland</country></csv-record></csv-record>", result )
9425	assertEquals ( expectedDateString, actualDateString )
9426	assertEquals ( 2, violations. size ( ) )
9427	assertEquals ( URI. create ( "http://localhost:8080/a/b/c?a=x&b=y#hi" ), u )
9428	assertOut ( "<Button label=\\"Click me\\" />" )
9429	assertEquals ( "Hello", ( ( BizException ) read ). getMessage ( ) )
9430	Assert. assertEquals ( "hello", result. hello ( ) )
9431	assertThat ( entityFromElasticSearch, is ( notNullValue ( ) ) )
9432	assertThat ( actualAlgorithms, IsIterableContainingInAnyOrder. containsInAnyOrder ( expectedAlgorithms ) )
9433	Assert. assertNull ( foundProject )
9434	assertEquals ( bd, value )
9435	assertEquals ( "P2PKH", req. toString ( ) )
9436	assertThat ( cut. apply ( pageObject ), is ( true ) )
9437	assertEquals ( "updatedName", list. get ( 0 ). getName ( ) )
9438	assertTrue ( "yahoocn contacts are empty", contacts. size ( ) > 0 )
9439	assertFalse ( new NopolExample ( ). isEmpty ( list ) )
9440	assertSqlCanBeParsedAndDeparsed ( stmt )
9441	assertThat ( object. getClass ( ). getName ( ). replace ( '$', '.' ), is ( "com.example.WithOutFactory.WithOut" ) )
9442	assertCategorized ( categories )
9443	assertEquals ( output, processed )
9444	Assert. assertEquals ( vector, new Vector ( - 10, - 10, - 10 ) )
9445	Assert. assertTrue ( pss. toString ( ). contains ( "123" ) )
9446	assertEquals ( "Wrong message stored", message1, checkMessage )
9447	assertEquals ( - 1L, nodeId. getId ( ) )
9448	assertEquals ( okResponseText, testResponse. getStatus ( ) )
9449	assertMockEndpointsSatisfied ( )
9450	assertEquals ( 10, result. getTotalCount ( ) )
9451	assertArrayEquals ( data, ( short [ ] ) deserialize. readObject ( ) )
9452	assertFalse ( violation )
9453	assertEquals ( expResult, result )
9454	assertTrue ( Arrays. equals ( array, resp. getColumnList ( ) ) )
9455	assertEquals ( 3, types. size ( ) )
9456	assertEquals ( uri1, uri2 )
9457	assertThat ( t1. toSmiles ( ), is ( "T@@=1" ) )
9458	Assert. assertEquals ( expected, pluginForREST. getTypeName ( "test", false ) )
9459	assertEquals ( deleteReason, hpi. getDeleteReason ( ) )
9460	assertTrue ( logger. isWarnEnabled ( ) )
9461	assertSame ( mockedProton, amqpsConnection. getProton ( ) )
9462	assertEquals ( parser. parse ( inputString ), expected )
9463	assertFalse ( filter. isActive ( ) )
9464	Assert. assertSame ( testSubject, moved )
9465	Assert. assertTrue ( consumeInfoList. size ( ) > 0 )
9466	assertEquals ( "name", name )
9467	assertNotNull ( logStream1 )
9468	assertTrue ( set2. isEmpty ( ) )
9469	assertFalse ( syncOpt. isDbVersionPresent ( ) )
9470	assertEquals ( "Helles酶y", FileUtils. readFileToString ( tmp, StandardCharsets. UTF_8 ) )
9471	assertEquals ( 1, cache. getResourceActivities ( resource ). size ( ) )
9472	assertNotNull ( myBean )
9473	assertEquals ( expectedResult, result, 0.00001 )
9474	assertThat ( newStyle, is ( oldStyle ) )
9475	assertEquals ( HELLOWORLD_URI + "processor/Hello", uri. toASCIIString ( ) )
9476	assertEquals ( "Should return maxInactiveInterval from HttpSession", 100, session. maxInactiveInterval ( ) )
9477	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 1, warnings. size ( ) )
9478	assertArrayEquals ( new String [ ] { "input", "output" }, remaining )
9479	Assert. assertTrue ( edOrgContextRights. isEmpty ( ) )
9480	Assert. assertTrue ( "Number of entities: " + count, count == 1 )
9481	assertEquals ( VALID, credentials. getStatus ( ) )
9482	bytes. assertNotLessThan ( description, actual, expected )
9483	assertEquals ( testPlaylist, playlist )
9484	Assert. assertEquals ( expr, "Hello \\nDimitri", value )
9485	assertUnselectableDatesSelectedWhileHasValidSelection ( model )
9486	assertNull ( person )
9487	assertEquals ( "John Doe", actual )
9488	Assert. assertEquals ( null, actualValue )
9489	assertTrue ( true )
9490	assertEquals ( "bar", indexSpec. getName ( ) )
9491	assertNotEquals ( reindex1, reindex2 )
9492	assertEquals ( "Concrete Action", value. asIs ( ) )
9493	Assert. assertTrue ( "The re-generated and the read record do not match.", k1. equals ( k2 ) && v1. equals ( v2 ) )
9494	assertNotNull ( scrollUI )
9495	assertEquals ( s, r )
9496	assertEquals ( "1.407", version )
9497	assertEquals ( file, FileTgz. getFilenameFromPath ( file ) )
9498	assertEvidence ( evidence, 1, 0, 0, 1 )
9499	assertEquals ( "A B", f. toString ( ) )
9500	assertEquals ( "�械写胁械写� 泻��邪械� �械谯胁械泻邪, �械谯胁械泻 锌芯谰��邪械� 锌懈蟹写�", text )
9501	assertThat ( validator. isAllowed ( ), is ( true ) )
9502	assertThat ( arguments. get ( "foo" ), is ( "bar" ) )
9503	assertFalse ( Misc. containsNulls ( collection ) )
9504	assertEquals ( Arrays. asList ( "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-01-01", "1970-
9505	assertTrue ( method. getReturnType ( ) == Priority. class )
9506	assertions. containsOnly ( values )
9507	rule. assertScenarioEnded ( )
9508	assertEquals ( Integer. valueOf ( 5 ), reference. getRetries ( ) )
9509	assertNotNull ( dao )
9510	assertThat ( content, is ( equalTo ( numberOfElements ) ) )
9511	assertThat ( getValues ( query ( "bla", "mntner" ), "key" ), contains ( "bla-bla-mnt" ) )
9512	assertTrue ( closed. await ( 5, SECONDS ) )
9513	Assert. assertNull ( req )
9514	assertEquals ( expectedTimestamp, actualTimestamp )
9515	assertEquals ( "org.phenotips.patientSheet.section.patient-info: Name, Age, Description, Onset, Name, Age, Description, Identifier, Age, Description, Id, Name, Age, Description, Id, Name, Age, Description, Id, Name, Age, Description, Id, Name, Age, Description, Id, Name, Age, Description, Id, Name, Identifier, Age, Description, Id, Description, Id, Description, Id, Description, Id, Name, Name, Name, Name, Age, Description, Onset, Onset, Name, Age, Description, Id, Description, Id, Name, Age, Description, Id, Name, Description, Id, Name, Age, Description, Id, Description, Id, Name, Age, Description, Id, Description, Id, Name, Description, Id, Name, Age, Description, Id, Description, Id, Description, Id, Description, Id, Description, Id, Description, Id, Name, Description, Id, Name, Description, Id, Description, Id, Description, Id, Description, Id, Description, Id, Description, Id
9516	assertEquals ( 400, response. statusCode ( ) )
9517	Assert. assertEquals ( 100_000, this. sqlgGraph. traversal ( ). V ( ). has ( T. label, "A" ). count ( ). next ( ). intValue ( ) )
9518	assertEquals ( proxy. echo ( "hello" ), "hello" )
9519	assertEquals ( i1, i2 )
9520	assertArrayEquals ( new Object [ 0 ], e. toList ( ). toArray ( ) )
9521	assertEquals ( documentoVO, infoDocumentoCSV )
9522	assertEquals ( 0, report. getItems ( ). size ( ) )
9523	assertTrue ( constraint. fulfilled ( iContext ) )
9524	assertCoordinates ( 0, TOP_Y - 1 )
9525	Assert. assertEquals ( "Node{edge=FOO, value=null, edges=[]}", node. toString ( ) )
9526	org. junit. Assert. assertEquals ( expected, actual )
9527	assertEquals ( "Hello World", request. getResponse ( ). getContent ( ) )
9528	assertThat ( xmlResult, CompareMatcher. isSimilarTo ( out. toString ( ) ). ignoreWhitespace ( ). withNodeMatcher ( new DefaultNodeMatcher ( ElementSelectors. byNameAndText ) ) )
9529	assertTrue ( children. isEmpty ( ) )
9530	assertions. isGreaterThan ( new Short ( ( short ) 10 ) )
9531	assertTrue ( vosManagerEntry. getDirectAdmins ( sess, createdVo ). contains ( user ) )
9532	Assert. assertArrayEquals ( bytes, result )
9533	Assert. assertFalse ( new LogAdapter ( "N/A", mockConfigThread ( ) ). isErrorEnabled ( ) )
9534	assertEquals ( UNESCAPED_USER_VALUE, substituter. getSubstitutedValue ( ) )
9535	assertMockEndpointsSatisfied ( )
9536	assertEquals ( D, fit. getDiffusionCoefficient ( ), 0.01 )
9537	Assert. assertNull ( loadedFile )
9538	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm", result ) )
9539	assertFalse ( list. contains ( null ) )
9540	Assert. assertEquals ( "_ANYFIELD_ == 'email' && ANOTHER_FIELD == 'blah' && filter:includeRegex(FIELDA, '.*all_.*)')", JexlStringBuildingVisitor. buildQuery ( result ) )
9541	assertEquals ( result, "2007" )
9542	assertSame ( injectable, injectionTarget. injectable )
9543	assertMockEndpointsSatisfied ( )
9544	assertNull ( loggedInUser )
9545	assertEquals ( asList ( foo4 ), results )
9546	assertEquals ( v1, v2 )
9547	assertEquals ( 3, result. get ( ). getList ( ). size ( ) )
9548	assertNotNull ( dialectConverterForEveryoneElse. get ( "brat" ) )
9549	assertThat ( type, is ( equalTo ( Integer. class ) ) )
9550	assertTrue ( validator. validate ( certificateMapping, PUT ). passedValidation ( ) )
9551	assertThat ( bar, is ( 2 ) )
9552	assertThat ( hasJsonPath. matchesSafely ( json ), is ( false ) )
9553	assertEquals ( CompressionType. Zip, compressionType )
9554	assertModel ( modelInstance, "definitions:definitions" )
9555	assertEquals ( IP_10_123_1_54_80, StringUtils. formatLocalSocket ( socket ) )
9556	Assert. assertEquals ( registry1, registry2 )
9557	assertTrue ( inactiveQuestion. wasLastTouched ( ) )
9558	assertTrue ( counterManager. getCounterManage ( ) instanceof CounterManagerImpl )
9559	assertThat ( registry. getPluginOrder ( ), is ( equalTo ( Arrays. asList ( firstPlugin, secondPlugin ) ) ) )
9560	assertTrue ( valid )
9561	assertEquals ( expResult, result )
9562	assertNotNull ( request. getTableSchema ( ) )
9563	assertEquals ( "name", name )
9564	assertEquals ( "", result )
9565	Assert. assertNotNull ( rb )
9566	assertEquals ( player. getMinions ( ). size ( ), 1 )
9567	assertThat ( changes, hasSize ( 0 ) )
9568	assertEquals ( expected, dotfileWriter. formatPCollectionNodeDeclaration ( inputCollection, jobPrototype ) )
9569	assertAxisEquals ( 0.9, 1.3, new double [ ] { 0.0, 1.0, 10.0 }, new String [ ] { "0", "1", "10" }, axis )
9570	assertNotNull ( pi )
9571	assertEquals ( "1f8ac10f23c5b5bc1167bda84b833e5c057a77d2", new String ( Hex. encodeHex ( message ) ) )
9572	assertEquals ( 19L, maximum )
9573	assertTrue ( myMessage. toString ( ). contains ( "52=FOO\\00134=3\\00149=3" ) )
9574	assertEquals ( resource, response )
9575	assertThat ( getResponseStatus ( DOMAIN1_CLUSTERS_HREF + "/cluster1" ), equalTo ( HTTP_BAD_REQUEST ) )
9576	assertEquals ( "Wrong number of instances", 2, events. size ( ) )
9577	assertResultSet ( res )
9578	assertThat ( result, is ( principalCollection ) )
9579	Assert. assertEquals ( operator. getJobExecution ( id ). getBatchStatus ( ), BatchStatus. ABANDONED )
9580	assertNotNull ( actualNativeClient )
9581	assertEquals ( 2, songs. getTotalElements ( ) )
9582	assertions. containsSequence ( ( short ) 6, ( short ) 6, ( short ) 8, ( short ) 10, ( short ) 10 )
9583	assertEquals ( expected, actual )
9584	assertThat ( actual, is ( expected ) )
9585	assertEquals ( "test", lt. run ( ) )
9586	assertEquals ( expResult, result )
9587	assertEquals ( "ABBA but not a sore loser.", this. realiser. realise ( completeSen ). getRealisation ( ) )
9588	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
9589	Assert. assertEquals ( icms10, icms. getIcms10 ( ) )
9590	assertThat ( unlocked. newLockedObjectWithPrivateConstructor ( ). getMyField ( ), equalTo ( "initialized" ) )
9591	assertThat ( result, is ( equalTo ( 0 ) ) )
9592	assertThat ( context, body. size ( ), is ( 2 ) )
9593	assertEquals ( 1, i )
9594	assertEquals ( expResult, result )
9595	assertFalse ( "Two violations with different begin column should result in not equal nodes", node1. equalsNode ( node2 ) )
9596	assertArrayEquals ( expected, encoder. getEncoded ( ) )
9597	assertEquals ( "/genPath", path )
9598	assertFalse ( job1. addDependingJob ( new ControlledJob ( conf ) ) )
9599	assertThat ( results, containsInAnyOrder ( "Hello, world!" ) )
9600	assertThat ( options. isHelp ( ), is ( true ) )
9601	assertFalse ( annotations. isEmpty ( ) )
9602	Assert. assertEquals ( "This is my rule name", result )
9603	assertThat ( story. getTimeout ( ), is ( DEFAULT_TIMEOUT ) )
9604	assertThat ( hasJsonValue. matchesSafely ( json ), is ( false ) )
9605	assertTrue ( drl. contains ( "FreeFormLine" ) )
9606	assertFalse ( result )
9607	Assert. assertEquals ( 13L, value )
9608	Assert. assertTrue ( browser. findElement ( By. id ( "body" ) ). getText ( ). contains ( "Vra�ar" ) )
9609	assertEquals ( KnightScorer. targetScores [ 0 ], scorer. scorePosition ( board, context ) )
9610	service. callCounter. assertCalls ( "{findIds=1, getItems=1}" )
9611	assertEquals ( Arrays. asList ( "-i", "input", "-o", "output", "-t", "Movie Title", "-i", "input", "-t", "output", "-m", "m:", "a:b", "-b", "b", "-c", "A:b", "-d", "b", "-l", "b", "-t", "b", "a:b", "-l", "b", "-l", "b", "-t", "b", "-l", "b", "-l", "b", "-l", "b", "-l", "b", "-l", "b", "-l", "b", "-d", "b", "-l", "b", "-l", "b", "a:b", "-l", "b", "-l", "b", "-l", "b", "-l", "b", "-l", "b", "-
9612	assertThat ( d1. between ( d2 ), is ( PlainDate. of ( 2012, 3, 1 ) ) )
9613	assertQuery ( false, "deep-equal(/test/*[1], /test/*[2])" )
9614	Assert. assertTrue ( Math. abs ( valueMonteCarlo - valueAnalytic ) < 1E-02 )
9615	assertEquals ( Arrays. asList ( "A" ), list )
9616	assertEquals ( "2013-03-01T09:07:00Z", doc. getLastPublicationDate ( ). toString ( ) )
9617	assertThat ( ct. getMeridiems ( TextWidth. WIDE, OutputContext. FORMAT ). print ( Meridiem. M1 ), is ( "M1" ) )
9618	Assert. assertEquals ( expected, actual )
9619	ImgLib2Assert. assertImageEquals ( ArrayImgs. unsignedBytes ( new byte [ ] { 1, 2, 3, 4 }, 1, 1 ), argb )
9620	assertEquals ( "b", r. get ( "name" ) )
9621	assertEquals ( originalByteStrings, sortedByteStrings )
9622	assertTrue ( uris. contains ( new URI ( "https://" + uuid + ".com" ) ) )
9623	assertThat ( translatedStatement, is ( expectedTranslatedStatement ) )
9624	assertThat ( provider. getSubject ( axiom ), is ( iriOptional ) )
9625	assertResultSet ( res )
9626	assertThat ( resourcePermission. toString ( ), is ( systemPermissionName ) )
9627	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 09" ) )
9628	assertEquals ( result1, result2 )
9629	Assert. assertEquals ( "[3, 2, 6, 4, 7, 1, 5]", result. toString ( ) )
9630	assertNotNull ( transaction )
9631	assertEquals ( expectedNormalized, actualNormalized. toString ( ) )
9632	assertTrue ( pojo. testService. interrupted. get ( ) )
9633	assertFalse ( g1. equals ( g2 ) )
9634	Assert. assertEquals ( 3, books. size ( ) )
9635	Assert. assertTrue ( "should not get any tags", irodsTagValues. isEmpty ( ) )
9636	Assert. fail ( "Expected a handler exception due to incompatible policy" )
9637	objects. assertIsEqualToComparingFieldByFieldRecursively ( someInfo ( ), actual, other, noFieldComparators ( ), defaultTypeComparators ( ) )
9638	assertThat ( lines. size ( ), is ( tuples. size ( ) ) )
9639	Assert. assertTrue ( exists )
9640	assertTrue ( "Handler wasn't run", ran. get ( ) )
9641	assertThat ( uut. isColaInjected ( ), is ( true ) )
9642	assertTrue ( zero. exec ( input ) )
9643	assertTrue ( theSelectedPoolsWere ( pools ( ) ) )
9644	assertCapturedMessage ( eventMessage ( "sess1", "/topic", "eventMessage" ), eventMessage ( "sess2", "/topic", "eventMessage" ) )
9645	assertThat ( longProperty, is ( equalTo ( 42L ) ) )
9646	Assert. assertEquals ( ServerParse. SELECT, sqlType )
9647	assertFalse ( "WorkflowState should not be in add mode when selected", actual )
9648	assertTrue ( b. isTrue ( ) )
9649	assertThat ( a. overlaps ( b ), is ( false ) )
9650	Assert. assertNull ( dataModelLoadBalancer. getSessionPersistence ( ) )
9651	assertEquals ( 123, ConfigResolver. getConfig ( dsHomeConfig ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( ). getDSConfig ( )
9652	Assert. assertNotNull ( "Wallets not null", wallets )
9653	assertNull ( client. getJob ( id ) )
9654	assertEquals ( "65", result. toString ( ) )
9655	assertThat ( shrinks, contains ( newArrayList ( 4, 5 ), newArrayList ( 6, 7 ), newArrayList ( 8, 9 ), newArrayList ( 10, 11 ), newArrayList ( 12, 13 ), newArrayList ( 14, 15 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList ( 15, 16 ), newArrayList
9656	assertThat ( tokens. matches ( BasicTokenizer. WORD, BasicTokenizer. WORD ), is ( true ) )
9657	assertEquals ( TEST_STRING, actual )
9658	assertFalse ( b )
9659	assertEquals ( expectedFont [ i ], foInline. getAttribute ( "font-family" ) )
9660	assertThat ( domainCreatePermissions_post, is ( domainCreatePermissions_pre ) )
9661	Assert. assertTrue ( Precision. equals ( 0.0, MathArrays. distance ( p1, p2 ), 1 ) )
9662	assertEquals ( e. getFreeVars ( ), "b" )
9663	assertEquals ( HttpStatusCodes. TEMPORARY_REDIRECT. getStatusCode ( ), response. getStatusLine ( ). getStatusCode ( ) )
9664	assertEquals ( newTableName, proxy. getTableName ( ) )
9665	VertxAssert. assertEquals ( "The retrieval of the specified document header resulted in an error: " + response. getString ( "message" ), "ok", response. getString ( "status" ) )
9666	Assert. assertNotNull ( cumulates )
9667	assertEqualTokenFeatureLengths ( "ahgsfdajhgsfd���涓����������������������������������������������������������������������������
9668	assertEquals ( "find by created date not returning any events", 1, eventRepos. findByCreatedBetween ( now - 86400000, now + 86400000 ). size ( ) )
9669	assertEquals ( e. getFreeVars ( ), "x", "y", "z", "a" )
9670	TestCase. assertTrue ( attribute. match ( t ) )
9671	assertEquals ( "涓�浜轰俊�������������������������������������������������������������������������������
9672	assertOut ( "var /** @type {*} */ a = undefined" )
9673	assertEquals ( 255, fixture. readUI32 ( ) )
9674	assertEquals ( Duration. ZERO, d )
9675	assertTrue ( BufferedImageComparer. isRGBSimilar ( sourceImage, img ) )
9676	assertArrayEquals ( "a\\r\\n.\\r\\n". getBytes ( "US-ASCII" ), out. toByteArray ( ) )
9677	Assert. assertEquals ( 1, i )
9678	assertEquals ( "c\\n", found )
9679	assertThat ( a. getValue ( ), equalTo ( "A1" ) )
9680	assertThat ( endpoints, is ( empty ( ) ) )
9681	assertEquals ( new BigDecimal ( 12345 ), result )
9682	assertTrue ( anyOf. matches ( "Yoda" ) )
9683	assertEquals ( seconds, testResult )
9684	assertThat ( resourcePermissions. isEmpty ( ), is ( true ) )
9685	assertEquals ( "Expected 1 result!", 1, n )
9686	assertEquals ( expected, seq. getSpreaders ( ) )
9687	assertEquals ( "Ioc", car. getIoc ( ) )
9688	assertSame ( toBeThrown, ex. getCause ( ) )
9689	assertEquals ( "Bob", query ( ). from ( cat ). where ( cat. name. eq ( name ) ). set ( name, "Bob" ). select ( cat. name ). fetchFirst ( ) )
9690	assertTrue ( path. isPath ( ) )
9691	assertTrue ( applications. size ( ) > 0 )
9692	assertEquals ( 0, query. getArguments ( ). size ( ) )
9693	response. then ( ). assertThat ( )
9694	Assert. assertEquals ( false, retval )
9695	assertTrue ( "objectClass should still be in the registry after move failure", getObjectClassRegistry ( ). contains ( NEW_OID ) )
9696	assertThat ( response. getHeader ( "Test" ), is ( "test" ) )
9697	assertNotNull ( configuration )
9698	assertTrue ( "Time passed should be less than session lifetime", timePassed < k3po. getSessionLifetime ( ) )
9699	assertEquals ( "public enum Company {; public String getName(){\\n  return name;\\n}\\n}\\n", cu. toString ( ) )
9700	assertEquals ( in. readObject ( ). getClass ( ), Bean. class )
9701	assertEquals ( "dbPath contains spaces", "file:///test/test/test/test/test/test/test/test/test/test/test/result", xoManager. encodeDatabasePath ( dbPath ) )
9702	Assert. assertTrue ( cmd. apply ( bkFlags, new String [ ] { "-bs", "127.0.0.1:8000", "-f", "-l", "1" } ) )
9703	assertNotNull ( projects )
9704	assertEquals ( "p.setSomething($param);", builder. build ( ) )
9705	assertEquals ( "A Session with an HTTPSession from the Request should have been created because create parameter " + "was set to false", httpSession, request. session ( false ). raw ( ) )
9706	assertEquals ( "user", rm. getRole ( ) )
9707	assertEquals ( "void f(void* target) {\\n" + "    ((void (*)(void)) target)();\\n" + "}\\n", BridgeMethodCompiler. createBridgeCWrapper ( functionType. getReturnType ( ), functionType. getParameterTypes ( ), functionType. getParameterTypes ( ), "f" ) )
9708	assertThat ( userPermissions, hasItem ( "ROLE_ADMIN" ) )
9709	Assert. assertTrue ( bnet. getConditionalDistributionTime0 ( var ). equalDist ( dynamicNB. getConditionalDistributionTime0 ( var ), 0.05 ) )
9710	assertEquals ( "www.leveluplunch.com/java/examples?test=a&test=b", uri. toString ( ) )
9711	assertTrue ( services. size ( ) > 0 )
9712	Assert. assertEquals ( getElement ( "OBR.1", "CX.1" ), handler. getFillerOrderNumber ( ) )
9713	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, query2 ) )
9714	assertEquals ( false, result )
9715	assertFalse ( validator. validate ( EntityNames. STUDENT_COHORT_ASSOCIATION, cohortIds ). equals ( cohortIds ) )
9716	Assert. assertNotNull ( result )
9717	assertNotEquals ( e1, e2 )
9718	assertEquals ( "stop drinking coke", repository. read ( scan ). getMetadata ( fieldType1. getName ( ) ). get ( "field1" ) )
9719	assertThat ( sampleEntities. size ( ), is ( equalTo ( 30 ) ) )
9720	assertEquals ( ( long ) 8, result. getLongValue ( ) )
9721	assertMockEndpointsSatisfied ( 1, TimeUnit. MINUTES )
9722	assertEquals ( i, 4 )
9723	assertNull ( lookup )
9724	assertEquals ( 0, rule. match ( langTool. getAnalyzedSentence ( "Of zo." ) ). length )
9725	assertNotNull ( connector )
9726	assertEquals ( "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n" + "1\\n", result. toString ( ) )
9727	assertEquals ( errorMsg, dataXException. getMessage ( ) )
9728	assertNotNull ( Channel. fetcher ( "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
9729	assertTrue ( "Got children", node. getChildren ( ). isEmpty ( ) )
9730	Assert. assertArrayEquals ( ENCODED_VALUE, byteOutputStream. toByteArray ( ) )
9731	assertResultSet ( res )
9732	assertEquals ( 0, activityListAdapter. getHeaderPositionForItem ( 0 ) )
9733	assertTrue ( "Failed", failed )
9734	assertTrue ( li. handleMessage ( message ) )
9735	assertEquals ( 204, delete. getStatus ( ) )
9736	assertTrue ( Arrays. equals ( arr, arr2 ) )
9737	assertTrue ( validator. validate ( "student", ids ). containsAll ( ids ) )
9738	assertEquals ( - 1, SnowcastSequenceUtils. compareTimestamp ( sequence1, sequence2 ) )
9739	assertEquals ( "with", queryName. getValue ( ) )
9740	assertEquals ( expected, uri )
9741	assertEquals ( cfProvider. getConfiguredProperties ( ), ImmutableMap. of ( "connectionNameList", MULTIPLE_IBM_MQ_BROKERS ) )
9742	assertions. isGreaterThan ( new Integer ( - 2 ) )
9743	assertThat ( drbdXml. getPossibleChoices ( option ), is ( new Value [ ] { new StringValue ( ), new StringValue ( "/usr/lib/drbd/crm-primary-on.sh" ) } ) )
9744	assertFalse ( n. exists ( ) )
9745	assertNull ( next )
9746	assertThat ( inSignature, is ( true ) )
9747	Assert. assertArrayEquals ( bytes, result )
9748	assertEquals ( expectedResults, actualResults )
9749	assertNotNull ( result )
9750	assertTrue ( collection. containsAll ( input ) )
9751	Assert. assertThat ( refNodeId, is ( not ( nullValue ( ) ) ) )
9752	assertNotNull ( EntityProvider. readServiceDocument ( in, "application/atom+xml" ) )
9753	assertEquals ( "The book title is not returned", "title", source. getTextContent ( ) )
9754	assertOut ( "goog.provide('foo.bar.baz.A');\\n\\n/**\\n * @constructor\\n */\\nfoo.bar.baz.A = function() {\\n\\tif (a) {\\n\\t\\tfor (var /** @type {Object} */ i in obj) {\\n\\t\\t\\tdoit();\\n\\t\\t}\\n\\t}\\n};" )
9755	assertOut ( "/**\\n * @constructor\\n */\\norg.apache.royale.A = function() {\\n};\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('org.apache.royale.A', org.apache.royale.A);\\n\\n\\n/**\\n * @export\\n * @type {Object}\\n */\\ngoog.exportSymbol('org.apache.royale.A', org.apache.royale.A);\\n\\n\\n/**\\n * @return {Object}\\n */\\norg.apache.royale.A.prototype.foo1 = function() {\\n  return null;\\n  };\\n\\n\\n/**\\n * @export\\n * @return {Object}\\n */\\norg.apache.royale.A.prototype.foo1a = function(value) {\\n  return null;\\n  };\\n\\n\\n/**\\n * @return {Object}\\n */\\norg.apache
9756	assertEquals ( expected, exts )
9757	assertThat ( restored, is ( p ) )
9758	assertNull ( result )
9759	assertEquals ( currSize, fct. getSize ( ) )
9760	Assert. assertEquals ( source, dist )
9761	assertNotEquals ( oldid, id )
9762	Assert. assertEquals ( "3 ��� ��", t. format ( new Date ( 0 ) ) )
9763	assertTrue ( StringUtils. isNotBlank ( content ) )
9764	assertThat ( subjectOf ( axiom ), isOptionalOf ( individual ) )
9765	BaseTest. assertEqualsUnordered ( "find(po)", quads1, quads2 )
9766	assertThat ( list. get ( 0 ), is ( 1 ) )
9767	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
9768	Assert. assertEquals ( 100., time, 0.01 )
9769	assertRequestWithCookie ( endpoint, HttpMethod. GET, name, value )
9770	assertEquals ( 1, tagInode. stat ( ). getUid ( ) )
9771	assertEquals ( 307, cr. getStatus ( ) )
9772	assertThat ( PlainDate. of ( 2014, 4, 21, 23, 45, 30, 123456789 ). getCalendarDate ( ), is ( date ) )
9773	assertEquals ( 0, loaded. size ( ) )
9774	Assert. assertNotNull ( facility )
9775	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
9776	assertNotNull ( plasmapheresis. getId ( ) )
9777	assertTrue ( page. getBody ( ). asText ( ). indexOf ( "Inserting children" )!= - 1 )
9778	Assert. assertTrue ( "duplicate variant was not removed", vn. getVariants ( ). size ( ) == 1 )
9779	assertFalse ( validator. validate ( EntityNames. TEACHER_SCHOOL_ASSOCIATION, teacherSchoolAssociations ). equals ( teacherSchoolAssociations ) )
9780	Assert. assertEquals ( 0, points. size ( ) )
9781	assertEquals ( "", result )
9782	assertThat ( indexCreationDate )
9783	assertEquals ( "http://example.com/fallback", uri. getFallbackUrl ( ) )
9784	assertTrue ( Collections. disjoint ( list, evens ) )
9785	assertEquals ( "谩茅锚玫-盲农���玫�", slug )
9786	assertThat ( archetypeElementVO, is ( notNullValue ( ) ) )
9787	Assert. assertEquals ( compareEncode. length, decodeRegisterBrokerBody. encode. length )
9788	assertTrue ( ODataChangesetResponseItem. isUnexpected ( expectedResItem ) )
9789	assertThat ( command. accept ( state ), is ( true ) )
9790	assertEquals ( 0, service. deleteOldFormsProtectionIds ( new ArrayList < String > ( ) ). size ( ) )
9791	Assert. assertEquals ( factory. getRuleParsers ( ). get ( factory. getRuleParsers ( ). size ( ) - 1 ), testParser )
9792	assertEquals ( dateTime. toDate ( ), esTimestampFormatted )
9793	assertEquals ( "a", s )
9794	assertEvents ( context, "QuartzService not stopped or StoreReference not restarted.", true )
9795	assertEquals ( expectedActivityCosts + expectedTransportCosts, iCosts, 0.01 )
9796	assertEquals ( TEST_IOS_APP_METADATA, iosApp. getMetadataAsync ( ). get ( ) )
9797	assertThat ( entityId, is ( nullValue ( ) ) )
9798	assertEquals ( stats, protoStats )
9799	assertNull ( entity )
9800	assertEquals ( false, CatalogTreeUtils. isCatalogReferenceNode ( noDapNode ) )
9801	assertEquals ( "1.234", doublePrecisionFloat. toString ( ) )
9802	assertNotNull ( Conversation. fetcher ( "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
9803	assertEquals ( Arrays. asList ( 1, 2, 3, 4, 5, 6 ), query ( ). from ( cat ). orderBy ( num. asc ( ) ). select ( cat. num. as ( num ) ). fetch ( ) )
9804	assertEquals ( 1, fixture. mark ( ) )
9805	assertEquals ( NOT_DECODED, PASSWORD, object. getPassword ( ) )
9806	assertEquals ( "Duke", model. getName ( ) )
9807	assertEquals ( "test", article. getEditSummary ( ) )
9808	assertEquals ( "1. request received", reply )
9809	assertEquals ( expected, result )
9810	assertEquals ( 41, p. getAge ( ) )
9811	assertEquals ( "[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
9812	assertEquals ( true, result )
9813	assertEquals ( expected, response. getValue ( ) )
9814	assertEquals ( expectedBounds, actualBounds )
9815	assertThat ( serviceCallNotificationService. isCalled ( ), is ( false ) )
9816	assertSame ( tileSize, renderingHints. get ( GPF. KEY_TILE_SIZE ) )
9817	assertEquals ( LATIN1_STRING, response. getResponseAsString ( ) )
9818	assertEquals ( 0.011, gst. getLongitudeError ( ), 0.001 )
9819	assertTrue ( item40Location. equals ( item40Location2 ) )
9820	assertEquals ( "[null,null,null,null,null,null,null,null,null,null,null,null,null,null,123.123,true,true,3312,Mystring]", baos. toString ( ) )
9821	Assert. assertEquals ( 10000, getRowCount ( ) )
9822	Assert. assertTrue ( thriftTransportConfig. isTcpDataSenderCommandAcceptEnable ( ) )
9823	assertThat ( value, is ( valueOfDesc2 ) )
9824	assertEquals ( data, data2 )
9825	Assert. assertEquals ( false, b )
9826	Assert. assertNotNull ( asientoRecibido )
9827	assertEquals ( name, greeter. getMessage ( ) )
9828	assertTrue ( resultComparator. compare ( fd1, fd2 ) < 0 )
9829	assertEquals ( 82, new AcceptsLambda < Integer > ( ). accept ( l ). intValue ( ) )
9830	arrays. assertContainsOnly ( description, actual, emptyArray ( ) )
9831	assertArrayEquals ( new byte [ ] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0
9832	assertEquals ( "OK", r )
9833	assertOut ( "var /** @type {boolean} */ a = new Boolean(1)" )
9834	assertEquals ( request. getUri ( baseURI ), expectedURI )
9835	Assert. assertTrue ( sigfw. isComplete ( ) )
9836	assertEquals ( period, start. until ( end ) )
9837	Assert. assertEquals ( Arrays. asList ( post ), postList )
9838	assertJsonEquals ( ImmutableMap. of ( "topic", "test-topic", "android", data ), message )
9839	assertNull ( expression. evaluate ( record ) )
9840	assertEquals ( m1, m2 )
9841	assertEquals ( result. size ( ), 0 )
9842	assertEquals ( false, result )
9843	assertEquals ( 0, table. getHeight ( ) )
9844	assertEquals ( 2.2, element. getStableChildren ( ). size ( ) )
9845	assertTrue ( log. debugEnabled ( ) )
9846	editor. assertProblems ( "my-repo|Unused", "other-repo|Unused" )
9847	assertFalse ( tokenizer. hasHeader ( ) )
9848	assertFalse ( ucd. getChild ( 0 ) instanceof ASTImplementsList )
9849	assertEquals ( 0, classUnderTest. getPluginStatuses ( ). length )
9850	assertEquals ( org [ i ], StringUtils. revertBrackets ( rep [ i ] ) )
9851	assertEquals ( result. length ( ), 0 )
9852	assertEquals ( 123, child. tell ( ) )
9853	assertEquals ( "../../com.zeroturnaround/jrebel.commons/target/classes", actualObj )
9854	assertThat ( target. parse ( ), is ( false ) )
9855	assertEquals ( query, json )
9856	assertFalse ( filter. isSimplePnfsMatch ( ) )
9857	Assert. assertEquals ( EventType. UNSUSPEND, eventType )
9858	assertNotNull ( createdBreaker )
9859	runner. assertNotValid ( )
9860	assertSame ( newUrl, url )
9861	assertEquals ( value, anotherValue )
9862	assertTrue ( endpointRef. toString ( ). equals ( expectedRef. toString ( ) ) )
9863	assertEquals ( dbName, itemName. getSPARQLName ( ) )
9864	Assert. assertNotNull ( trazas )
9865	assertEquals ( binomial, jacobi. evaluate ( v, w ), 1e-10 )
9866	assertEquals ( "at recovery loop: " + recoveryLoop, 0, mapSize )
9867	assertThat ( DatastoreUtil. getCount ( ds, Lock. KIND ), is ( 0 ) )
9868	assertEquals ( "A comparison of associated dsd sd", doc. getTitle ( ) )
9869	assertTrue (! result )
9870	assertEquals ( 10.81, fontSize, 0.1 )
9871	Assert. assertEquals ( "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15", networks )
9872	assertEquals ( "Wrong result", defaultValue, config. get ( Integer. class, KEY_PREFIX, defaultValue ) )
9873	assertOut ( expected )
9874	assertEquals ( "rev150930", keyID. getValue ( ) )
9875	assertEquals ( rc. request ( ). host ( ), host )
9876	Assert. fail ( "Should throw an exception here" )
9877	assertTrue ( ml. length == 1 )
9878	assertThat ( subject. getMessages ( preparedUpdate ), is ( UpdateMessages. objectNotFound ( "DEV-ROOT-MNT" ) ) )
9879	assertEquals ( 0, fooDao. queryForAll ( ). size ( ) )
9880	Assert. assertEquals ( Constants. GENERIC_SERIALIZATION_BEAN, url. getParameter ( Constants. GENERIC_KEY ) )
9881	assertTrue ( result. isEmpty ( ) )
9882	Assert. assertNull ( actual )
9883	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff21_" ) )
9884	assertEquals ( 0, latch. getCount ( ) )
9885	assertThat ( json, is ( "{\\"foo\\":{\\"value\\":\\"bar\\"}}" ) )
9886	assertEquals ( "12345", envelope. getMessageId ( ) )
9887	Assert. assertNotNull ( addressResultsDto )
9888	Assert. assertEquals ( RD, rd. getRD ( ) )
9889	assertTrue ( site. login ( "email@example.com", "password", http ) )
9890	assertThat ( givenProgram. getChildPrograms ( ), contains ( stringProgram ( "X" ), stringProgram ( "0123" ) ) )
9891	assertThat ( context. getValue ( ), is ( "I'm a string." ) )
9892	Assert. assertEquals ( 1, response. getTotalHits ( ). value )
9893	assertTrue ( page. asXml ( ). matches ( "(?s).*com.sun.faces.test.servlet30.faceletresourceresolver2.MyFaceletResolver.*" ) )
9894	Assert. assertEquals ( 7, result. length )
9895	assertTrue ( showView. isShow ( ) )
9896	maps. assertHasEntrySatisfying ( info, actual, key, isDigits )
9897	assertNotNull ( InsureSuccessRate. fetcher ( "BXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "Insights" ). fetch ( ) )
9898	assertEquals ( expected, query. export ( ) )
9899	assertEquals ( "POST /controllink HTTP/1.1\\r\\n" + "Host: fake\\r\\n" + "Content-Type: text/xml\\r\\n" + "SOAPAction: service:type#AddPortMapping\\r\\n" + "Connection: Close\\r\\n" + "Cache-Control: no-cache\\r\\n" + "Pragma: no-cache\\r\\n" + "Content-Length: 4096\\r\\n" + "\\r\\n" + "<?xml version=\\"1.0\\"?>" + "<soap:Envelope xmlns:soap=\\"http://schemas.xmlsoap.org/soap/envelope/\\" soap:encodingStyle=\\"http://schemas.xmlsoap.org/soap/encoding/\\">" + "<soap:Body>" + "<u:AddPortMapping xmlns:u=\\"service:type\\">" + "<NewRemoteAddress>5.6.7.8\\">" + "<NewExternalPort>12345</NewExternalPort>" + "<NewProtocol>TCP</NewProtocol>" + "</NewExternalPort>" + "</u:AddPortMapping>" + "</soap:Body>"
9900	assertTrue ( query. toString ( ). contains ( "FROM <named> <foo>" ) )
9901	assertEquals ( - ONE_HOUR_IN_MILLIS, time. getTime ( ) )
9902	assertTrue ( resultMessage ( result, POST ), result. passedValidation ( ) )
9903	assertThat ( userObject. getPassword ( ), is ( equalTo ( password ) ) )
9904	Assert. assertEquals ( msg, handler. getRcv ( ). toString ( ) )
9905	assertOut ( "var /** @type {string} */ a = String(100)" )
9906	assertEquals ( "geom", ( dump ( ( Node ) r. get ( "node" ) ) ). getProperty ( "layer" ) )
9907	assertEquals ( "dois decilh玫es", actual )
9908	assertThat ( combined, returnsSameItems ( expectedNodes ) )
9909	assertEquals ( 0, conf. getMountSpecificConf ( ). size ( ) )
9910	assertEquals ( expect, rs )
9911	assertTrue ( resourcesManager. getAdminGroups ( sess, resource ). contains ( group ) )
9912	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
9913	assertEquals ( "foo", sb. toString ( ) )
9914	assertThat ( ranking, is ( lessThan ( Integer. valueOf ( 1 ) ) ) )
9915	assertEquals ( list. size ( ), 3 )
9916	Assert. assertEquals ( "col", intersect. getPath ( ) )
9917	assertTrue ( pojo. testService. interrupted. get ( ) )
9918	assertEquals ( "[\\"A\\",[\\"foo\\",2],\\"B\\"]", TextUtils. joinJSON ( Arrays. asList ( "A", list, "B" ) ) )
9919	assertEquals ( "[Cookie{name='name', value='test1', version='VERSION_0_NETSCAPE', path=Optional[/], domain=Optional[localhost.local], httpOnly=false, secure=true, maxAge=Optional[-1]}]", httpRequest. getEffectiveCookies ( ). toString ( ) )
9920	assertTrue ( getBody ( response ). length ( ) > 100 )
9921	assertTrue ( cleanExit )
9922	assertEquals ( "my title", configuration. getTitle ( ). getText ( ) )
9923	assertEquals ( "user1,user1", result )
9924	Assert. assertEquals ( "did not set resource redirect", true, transferOptions. isAllowPutGetResourceRedirects ( ) )
9925	assertEquals ( describe, n. toJSONString ( false ) )
9926	assertEquals ( readFile ( "src/test/resources/graal3" ), out )
9927	assertThat ( output. toString ( ), is ( "my good little bad son" ) )
9928	assertTrue ( QueryUtil. getExplainPlan ( rs ). contains ( "    SERVER ARRAY ELEMENT PROJECTION" ) )
9929	assertTrue ( FstUtils. fstEquals ( fstB, fstReversed, FstUtils. LOG_REPORTER ) )
9930	Assert. assertEquals ( result, collector. emitted )
9931	assertNull ( result )
9932	Assert. assertEquals ( "a test", br. readLine ( ) )
9933	Assert. assertTrue ( output. contains ( "mychain" ) && output. contains ( "default" ) )
9934	assertEquals ( expectedFileName, actualFileName )
9935	Assert. assertEquals ( configNew, configOld )
9936	context. assertIsSatisfied ( )
9937	assertEquals ( ChatStatus. ready, chat. getStatus ( ) )
9938	assertEquals ( expected, actual )
9939	assertTrue ( videos. contains ( video ) )
9940	Assert. assertEquals ( expected, getString ( writer ) )
9941	assertTrue ( connectFuture. isConnected ( ) )
9942	assertEquals ( JSON. serialize ( result ), "[ \\"value1\\", 12]" )
9943	Assert. assertTrue ( "Body validation failed", isValid )
9944	assertSame ( testTable, column. getTable ( ) )
9945	assertValidationFailures ( deriver, config )
9946	testHelper. assertProcessEnded ( testHelper. snapshotBeforeMigration. getProcessInstanceId ( ) )
9947	assertEquals ( "Fusco", lambdaList. get ( 0 ). getLastName ( ) )
9948	assertTrue ( response. statusCode == 200 )
9949	assertTrue ( "Task retries lower than specified via withTaskRetryLimit()", actualAttempts == expectedAttempts || actualAttempts == expectedAttempts - 1 )
9950	assertFalse ( ret2. equals ( t1 ) )
9951	assertEquals ( "Hello ^[request?name1] [request?name2]", ResponseBodyInterpolator. interpolate ( "Hello ^[request?name1] [request?name2]", req ) )
9952	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
9953	assertEquals ( "No test cases should fail", 0, runTestsResults. getFailedTests ( ). size ( ) )
9954	assertThat ( proc. context ( ). contextAttrs ( ). get ( "__retryCount" ), is ( retryCount ) )
9955	Assert. assertEquals ( 2, failures. size ( ) )
9956	Assert. assertEquals ( "3 ���� 15 砖注�转 38 �������������������������������������������������������������������������
9957	assertEquals ( EMPTY_STRING, FieldParser. parse ( EMPTY_STRING, schema ) )
9958	assertEquals ( Result. FAIL, notuser. apply ( item ) )
9959	assertEquals ( "ARTIST_ID=2, SERIAL=1", id. toString ( ) )
9960	assertNotNull ( Settings. fetcher ( ). fetch ( ) )
9961	assertNotNull ( result )
9962	assertTrue ( discretionary )
9963	Assert. assertFalse ( list. accept ( element ) )
9964	assertEquals ( result. build ( ). find ( ArrayElement. class, "retval" ). get ( 0 ). getEntries ( ), myTestInstance. groupBy ( builder ). toList ( ) )
9965	assertEquals ( "WatchSubtree", WebUtilities. getAsText ( mockMonitoringRequest ) )
9966	assertThat ( result, is ( Optional. empty ( ) ) )
9967	assertEquals ( "text/csv; charset=UTF-8", layout. getContentType ( ) )
9968	assertEqualsWithoutWhiteSpaces ( "(added)", newUnion )
9969	assertTrue ( buckets. size ( ) > 0 )
9970	assertFalse ( meta1. equals ( meta2 ) )
9971	Assert. assertEquals ( config, result )
9972	assertNotNull ( InstalledAddOnExtension. reader ( "XEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
9973	assertThat ( DateInterval. between ( start, end ). getEnd ( ), is ( Boundary. of ( IntervalEdge. OPEN, end ) ) )
9974	assertEquals ( true, MapUtils. isEmpty ( map ) )
9975	assertThat ( result. size ( ), equalTo ( jedis. size ( ) ) )
9976	assertEquals ( LockMode. WRITE, mLockList. getLockMode ( ) )
9977	assertTrue ( "No categories returned!", categories!= null && categories. size ( ) > 0 )
9978	assertThat ( books. getContent ( ). size ( ), is ( 2 ) )
9979	assertEquals ( - 2451545.0, julDate. getJulianDate ( ), TOLERANCE )
9980	assertThat ( "getChildCount", node. getChildCount ( ), is ( 0 ) )
9981	assertThat ( testOutcome. getResult ( ), is ( ERROR ) )
9982	assertSimpleTerm ( result, "term1", false, false )
9983	Assert. assertTrue ( String. format ( "failed to force bad pass phrase verification error. expected message '%s...', actual message: '%s'", Application. VERIFY_ERROR, message ), isErrorMessage )
9984	assertTrue ( epsgDescription. contains ( "EPSG:4326" ) )
9985	assertEquals ( alternative, choice )
9986	Assert. assertEquals ( "a%2Aa=b%2Ab", getLine ( QUERY_LINE, canonicalRequest ) )
9987	Assert. assertThat ( table. toString ( ), is ( "Hello : World" ) )
9988	assertTrue ( resource + " is not valid", result. isValid ( ) )
9989	assertTrue ( c. isValidForSqlQuery ( ) )
9990	runner. assertTransferCount ( PutHiveStreaming. REL_FAILURE, 1 )
9991	assertEquals ( "{\\"schemaType\\":\\"AVRO\\",\\"schema\\":\\"string\\"}", request. toJson ( ) )
9992	assertTrue ( bos. toString ( ). contains ( "<filter xmlns=\\"http://www.w3.org/2005/Atom\\" name=\\"filter\\"/>" ) )
9993	org. junit. Assert. assertEquals ( expected, actual )
9994	Assert. assertEquals ( "SELECT " + fixedColumns + ",COUNT(*) FROM v WHERE _user_ ='me' ORDER BY `foo.bar` DESC", sql )
9995	assertEquals ( Status. FAIL, jxm. getStatus ( ) )
9996	assertEquals ( "week header column in LToR", BasicMonthViewUI. WEEK_HEADER_COLUMN, dayGridPosition. x )
9997	assertXMLEqual ( new StringReader ( "<body><outer>text</outer></body>" ), new StringReader ( html ( processed ) ) )
9998	assertEquals ( expected, actual )
9999	assertThat ( predicate. getPartitionPredicate ( ), is ( "(p1='value11' AND p2='value22') OR (p1='value1' AND p2='value2')" ) )
10000	Assert. assertTrue ( exceptionThrown )
10001	assertEquals ( 0, actual )
10002	assertEquals ( "$5$abc$HbF3RRc15OwNKB/RZZ5F.1I6zsLcKXHQoSdB9Owx/Q8", Sha2Crypt. sha256Crypt ( buffer, "$5$abc" ) )
10003	assertEquals ( "<a>One</a> Two Three <i>Four</i> Fix <i>Six</i>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
10004	Assert. assertEquals ( "Session Application-Id should be the same as indicated.", SH_APPID, sessionAppId )
10005	assertEquals ( expResult, result )
10006	assertEquals ( expResult, result )
10007	assertNotNull ( m )
10008	assertEquals ( example5424Syslog, rsyslogd. parseLine ( example5424Syslog ) )
10009	assertThat ( editor. getValue ( ), is ( getExistingObject ( ) ) )
10010	assertEquals ( "wrong message", "Test message", dut. getMessage ( ) )
10011	assertEquals ( 'd', ex. charAt ( s, 0 ) )
10012	Assert. assertEquals ( "Invalid result", true, predicate. test ( new Object ( ) ) )
10013	Assert. assertEquals ( testVariable, lookup. getInput ( testVariable ) )
10014	assertThat ( axioms. isEmpty ( ), is ( true ) )
10015	assertEquals ( expResult, result )
10016	assertEquals ( employees. size ( ), empIds. length )
10017	assertEquals ( test. getStrings ( ), ImmutableList. of ( "A", "B" ) )
10018	assertEquals ( "^(a 3)b 5\\n", found )
10019	assertEquals ( response. getStatus ( ), Status. SUCCESS. getValue ( ) )
10020	Assert. assertEquals ( 0, ObservationUtils. getObservationCount ( names ) )
10021	assertNull ( shouldBeNull )
10022	assertTrue ( context. getHeartbeatMode ( ) == HeartbeatMode. NO_MODE )
10023	assertEquals ( HttpStatusCode. INTERNAL_SERVER_ERROR. code, response. getStatus ( ) )
10024	assertEquals ( "Testing Course", courses. get ( 0 ). getName ( ) )
10025	assertTrue ( arr. every ( callbackfn ) )
10026	assertTrue ( "edit should be created", edit. isAddedToHistory ( ) )
10027	assertTrue ( syn instanceof JavassistMethodSynthesizer )
10028	assertSame ( fieldVar, result )
10029	Assert. assertEquals ( message, actualMessage )
10030	assertEquals ( URI. create ( "http://localhost:8080/base/resource/subresource" ), u )
10031	assertEquals ( "Option value", "true", commandLine. getOption ( "simpleOption" ) )
10032	assertTrue ( validator. isValid ( resource, MetadataSection. COLLECTIONS_SECTION ) )
10033	assertEquals ( "foo/bar", ref. getReference ( ). toString ( ) )
10034	Assert. fail ( e. getMessage ( ) )
10035	assertTrue ( "There should be errors", countErrors ( chain ) > 0 )
10036	assertEquals ( new HashSet < String > ( Arrays. asList ( "staff1", "staff2", "staff3" ) ), underTest. filterConnectedViaProgram ( new HashSet < String > ( staffIds ), e ) )
10037	assertEquals ( LocalDate. of ( 2012, 7, 6, 0, 0 ), test )
10038	Assert. assertFalse ( activeLedgers. containsKey ( lh. getId ( ) ) )
10039	assertEventEqualAfterSerializeDeserialize ( event )
10040	assertEquals ( expected, mergeAclEntries ( existing, aclSpec ) )
10041	assertThat ( results, samePaths ( new File ( root, "a.txt" ), new File ( root, "c.txt" ) ) )
10042	assertThat ( result, is ( "0.0.0" ) )
10043	assertSame ( de, reg. build ( e ) )
10044	assertThat ( leaseType. getName ( ), is ( lease. getLeaseType ( ). getName ( ) ) )
10045	assertEquals ( expectedQuery, actualQuery )
10046	Assert. fail ( "Every deployment should have defined its own logging profile. But found this line in logs: " + line )
10047	assertEquals ( result, range. exclude ( other ) )
10048	assertEquals ( "aMethod", response )
10049	assertTrue ( result. matches ( ) )
10050	assertEquals ( input, tokenizer. tokenize ( input ) )
10051	assertEquals ( true, check. isRequired ( ) )
10052	assertFalse ( resultMessage ( result, PUT ), result. passedValidation ( ) )
10053	this. assertOneMatcher ( is ( instanceOf ( HeaderRequestMatcher. class ) ) )
10054	assertEquals ( Status. BAD_REQUEST. getStatusCode ( ), r. getStatus ( ) )
10055	Assert. assertEquals ( 0, shexc. getExitCode ( ) )
10056	assertEquals ( 2, i )
10057	assertEquals ( Sets. newHashSet ( "table1", "table2", "table3" ), service. getTablesToRepair ( cluster, unit ) )
10058	assertEquals ( 1, i. intValue ( ) )
10059	Assert. assertEquals ( projectorForward. getTranscriptStartingAtCDS ( ), resultTranscript )
10060	assertTrue ( globalDomainAccessControllerSubject. updateOwnerRegistrationControlEntry ( orce ) )
10061	assertEquals ( mockResponse, testResponse )
10062	assertEquals ( 0, cacheStorage. size ( ) )
10063	assertEquals ( TOP_LEVEL_CONTAINER_FROM_USES, bindingII. getLastPathArgument ( ). getNodeType ( ) )
10064	assertEquals ( expected, elements )
10065	assertTrue ( "Workflow is not in an error state", workflowStatus. errorOccurred ( ) )
10066	assertEquals ( "OK", response. get ( 0 ) )
10067	assertEquals ( expResult, result )
10068	assertTrue ( "Identity realm should be created", ops. exists ( TEST_IDENTITY_REALM_ADDRESS ) )
10069	assertEquals ( expect, cpcClass. normalize ( ) )
10070	assertEquals ( "Painting", p1. getProperty ( "name" ) )
10071	assertSimpleTerm ( result, "term% term_ %term_", false, true )
10072	Assert. assertFalse ( skipResult )
10073	assertThat ( errors, not ( hasFieldErrors ( "degree" ) ) )
10074	Assert. assertTrue ( intersect instanceof EmptyRange )
10075	assertFalse ( isEmoji )
10076	assertArrayEquals ( expectedResults, actualResults, 0.00001 )
10077	assertTrue ( ex. isPrime ( 97 ) )
10078	assertEquals ( IndexSampleHelper. DELETE_BY_EXAMPLE_RESULT, actualReturnValue )
10079	assertEquals ( qn, qnExpected )
10080	assertTrue ( value. size ( ) > 0 )
10081	assertEquals ( this. unpacked, unpacked )
10082	assertEquals ( setProperties, subscription. getSubscriptionProperties ( ) )
10083	assertEquals ( "SELECT * WHERE {?user?_c2?_c3 ;?_c4?user_gender. FILTER(?user_gender =?_c6) }" )
10084	assertPorts ( "port-offset", DEFAULT_COMMAND_API_PORT + offset, DEFAULT_INTERNAL_API_PORT + offset, DEFAULT_MONITORING_API_PORT + offset )
10085	assertEquals ( 2, filteredMatches. size ( ) )
10086	assertThat ( encoded, is ( LwM2mByteArrays. LWM2M_OBJECT_WITH_TIMESTAMP_PROPERTY_VALUE ) )
10087	assertTrue ( "Looks like the expected wadl is not generated", applicationWadl. length ( ) > 0 )
10088	assertEquals ( 1., end. getTheoreticalEarliestOperationStartTime ( ), 0.01 )
10089	Assert. assertNull ( a0. optionalInteger ( ) )
10090	assertThat ( confirmation. getStatus ( ), equalTo ( remoteStartStopStatus ) )
10091	assertEquals ( 7, tool. heapCaculation ( ) )
10092	assertEquals ( setOfStrings ( "silver" ), all )
10093	assertTrue ( tc. isValid ( ) )
10094	assertTrue ( getNoErrorMsg ( ), result )
10095	assertTrue ( checker. isZipInputStream ( bufferedInputStream ) )
10096	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getPrivileges ( set ( "producer_group1" ), ActiveRoleSet. ALL ) ). toString ( ) )
10097	assertNull ( array )
10098	assertEquals ( resp, ack )
10099	assertEquals ( "Testing", txtRes )
10100	assertEquals ( true, ( ( DropDownImageListEditor ) presenter ). isEditMode )
10101	Assert. assertEquals ( demoService. getExportedUrls ( ). get ( 0 ). getPort ( ), helloService. getExportedUrls ( ). get ( 0 ). getPort ( ) )
10102	BufferedImageAssert. assertMatches ( result, new float [ ] { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 } )
10103	assertTrue ( doc. getLabels ( ). isEmpty ( ) )
10104	this. assertIndices ( im ( 0, 0 ), im ( 1, - 1 ), im ( 2, 1 ), im ( 3, 2 ) )
10105	assertThat ( codePoints. containsAll ( "����������������������������������������������������������������������������������
10106	assertTrue ( ref. limit ( ) == 0 )
10107	assertEquals ( UNSUPPORTED_MEDIA_TYPE, argumentCaptor. getValue ( ). getStatusInfo ( ) )
10108	assertNull ( found )
10109	assertNotFound ( client. executePost ( "/foo", "", ContentType. TEXT_PLAIN ) )
10110	Assert. assertEquals ( false, obs. getValueAsBoolean ( ) )
10111	assertEquals ( 0.0, c. getCardinality ( ), 0.00001 )
10112	assertEquals ( testPersonId, activity. getObjectToString ( ) )
10113	assertThat ( inputStream, is ( notNullValue ( ) ) )
10114	Assert. assertTrue ( true )
10115	assertLabelQueryResult ( query. toString ( ), both ( binds ( "p", URI. class ) ). and ( binds ( "pLabel", Literal. class ) ) )
10116	assertTrue ( Arrays. equals ( tmp. keySet ( ), dataMap. contentKeys ( ) ) )
10117	assertEquals ( "x", new Experiment ( ). doIt ( "x" ). join ( ) )
10118	assertEquals ( "helloworld2", FileUtils. readFileToString ( testFile, Charset. forName ( "UTF-8" ) ). trim ( ) )
10119	assertEquals ( expected, formatted )
10120	Assert. assertThat ( ExceptionCodeMapping. BadIdException. getExceptionIdentifier ( ), is ( Integer. valueOf ( fromJson. getValue ( ) ) ) )
10121	Assert. assertEquals ( 2147483647, res )
10122	assertFalse ( problem )
10123	assertEquals ( expected, actual )
10124	assertEquals ( BYTE_FIELD_VALUE, storedValue )
10125	assertThat ( nonInfo, hasSize ( 2 ) )
10126	assertTrue ( sba instanceof ThickSBA )
10127	assertEquals ( "OK", response. getTitle ( ) )
10128	Assert. assertEquals ( "A", deployment. getName ( ) )
10129	assertTrue ( validator instanceof EmailValidator )
10130	assertTrue ( fail )
10131	assertEquals ( 3, obj. foo )
10132	assertArrayEquals ( Arrays. copyOf ( os. toByteArray ( ), 4 ), MAGIC_LITTLE_ENDIAN )
10133	assertEquals ( "Please input method name, eg: \\r\\ninvoke xxxMethod(1234, \\"abcd\\", {\\"prop\\" : \\"value\\"})\\r\\ninvoke XxxService.xxxMethod(1234, \\"abcd\\", {\\"prop\\" : \\"value\\"})\\r\\ninvoke com.xxx.XxxService.xxxMethod(1234, \\"abcd\\", {\\"prop\\" : \\"value\\"})", result )
10134	Assert. assertFalse ( list. accept ( element ) )
10135	assertThat ( instance. getValue ( ), equalTo ( TEST_VALUE ) )
10136	assertArrayEquals ( packet, Proto. arraylist_to_array ( payload ) )
10137	Assert. assertEquals ( row. length, length )
10138	assertTrue ( Configurator. compareFs ( fs1, fs2 ) )
10139	assertEquals ( insertNum, results. size ( ) )
10140	assertEquals ( "Common exception", ms. getText ( ) )
10141	assertEquals ( 1, destroyed. get ( ) )
10142	assertEquals ( Character. valueOf ( '|' ), CsvBulkImportUtil. getCharacter ( conf, "conf.key" ) )
10143	assertEquals ( in, outStream2. toString ( "UTF-8" ) )
10144	assertEquals ( 6, context. getTableCount ( ) )
10145	assertEquals ( ids, validator. validate ( EntityNames. STUDENT_STUDENT, ids ) )
10146	assertEquals ( field. getName ( ), NameUtils. canonicalizeForEnumTypes ( region. getId ( ) ) )
10147	assertThat ( "Row 15 is visible.", getSpreadsheet ( ). getSheetCtrl ( ). getCell ( 14, 1 ). $n ( ). getSize ( ). getHeight ( ), lessThanOrEqualTo ( 1 ) )
10148	assertThat ( reader. isClosed ( ), is ( true ) )
10149	assertEquals ( Arrays. asList ( "D", "B" ), pis )
10150	assertEquals ( 80, sumOfType1Cap )
10151	assertDirectory ( "hello", "hello", "hello", "hello" )
10152	Assert. assertEquals ( expected, super. parse ( " good.path.here" ) )
10153	assertEquals ( 10., newVrp. getInitialVehicleRoutes ( ). iterator ( ). next ( ). getDepartureTime ( ), 0.01 )
10154	assertE ( "       " + "       " + "       " + "��      " + "=======" + "       " + "#######" )
10155	assertEquals ( ".instance.test(1, 2, 3)", callTest. toJavaSrc ( ) )
10156	assertTrue ( jobService. getJobServerStatus ( namespace, jobName ). isEmpty ( ) )
10157	assertNotNull ( Conference. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
10158	assertEquals ( "Configuration 'notExist' is applied to the cache", "notExist", configuration )
10159	assertThat ( errors. toString ( ), containsString ( "No response found for required item with id = 'link0'" ) )
10160	assertAccessorsCorrect ( rows1, rows2, "expandedRows", table )
10161	assertNull ( cmp )
10162	assertThat ( list. size ( ), is ( 0 ) )
10163	assertEquals ( expResult, result )
10164	MatcherAssert. assertThat ( "Instance reusedExistingDatabase should be true.", instances. reusedExistingDatabase ( ) )
10165	Assert. assertEquals ( Arrays. asList ( "5" ), a. getStrings ( ) )
10166	assertEquals ( "http://www.example.com/10001/QQ=10001", url )
10167	assertThat ( maxSide. add ( new Point ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
10168	assertFalse ( integer2 == integer3 )
10169	assertEquals ( expResult, result )
10170	Assert. assertEquals ( "AES-256-CBC", header. getCipher ( ) )
10171	assertTrue ( conn!= null )
10172	assertEquals ( new LocalDateTimeIterator ( fromTime, toTime ), new LocalDateTimeIterator ( fromTime, toTime ) )
10173	assertNotNull ( injector )
10174	assertEquals ( 0.0, instance. inclusiveHypervolume ( ind ), 0.0 )
10175	Assert. assertEquals ( "world", simpleMapPOJO. getBytesMap ( ). get ( "hello" ) )
10176	assertEquals ( currTime, ltime. getAndUpdateTime ( ) )
10177	Assert. assertNotNull ( str )
10178	Assert. assertEquals ( newConfiguration, result )
10179	assertEquals ( "en", checker. detectLanguage ( new File ( "/prg/fastText-0.1.0/data/lid.176.bin" ) ) )
10180	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED, status )
10181	assertEquals ( "[10, 8, 6, 4, 2]", IteratorToGeneratorAdapter. adapt ( range ). toCollection ( ). toString ( ) )
10182	assertFalse ( "Should produce different random bytes", Arrays. equals ( new Random ( ). randomBytes ( ), new Random ( ). randomBytes ( size ) ) )
10183	assertEquals ( "SELECT * FROM pet WHERE pet.pet_id = 3", sql )
10184	assertTrue ( result < 0 )
10185	assertTrue ( "Wrong info: " + result. info, result. info. startsWith ( "2 document" ) )
10186	assertThat ( studies. size ( ), is ( 0 ) )
10187	Assert. assertEquals ( "This is a new field", formField. getField ( ). getName ( ) )
10188	assertThat ( getMatchingContainerEnv ( domainPresenceInfo, jobSpec ), allOf ( hasEnvVar ( "item1", "value1" ), hasEnvVar ( "item2", "value2" ) ) )
10189	FixtureAsserts. assertStringMatchesJsonFixture ( "Customer retrieve their User as HAL+JSON", actualResponse, "/fixtures/hal/user/expected-customer-retrieve-user.json" )
10190	assertEquals ( cliLoadJob. getJobSpec ( ), createLoadSpec ( ) )
10191	assertNotNull ( "Previous step failed", uri_conferenceInstance )
10192	assertNotNull ( Credential. reader ( ). read ( ) )
10193	assertEquals ( "{\\"a\\":null,\\"b\\":1}", n )
10194	assertEquals ( "Parsing of long option does not match expected result.", PROPERTY_LONG_EXPECTED, parseResult )
10195	Assert. assertEquals ( expected, returned )
10196	assertEquals ( "no-cache", wrapper. getFirstHeader ( "Cache-Control" ). getValue ( ) )
10197	runner. assertValid ( service )
10198	assertEquals ( "{\\"data\\":[{\\"x\\":80,\\"y\\":80,\\"name\\":80},{\\"x\\":20,\\"y\\":20,\\"name\\":20}]}", toJSON ( containerSeries ) )
10199	assertSqlCanBeParsedAndDeparsed ( stmt )
10200	Assert. assertEquals ( expected, actual )
10201	assertThat ( node, isBrowseNodeWith ( contentRepository, null, "foo", "foo", asset ) )
10202	assertFalse ( fieldAccessor. fieldIsPrimitive ( ) )
10203	assertEquals ( false, out. firstElement ( ). get ( ) )
10204	Assert. assertEquals ( 0, TestUtil. getTableSize ( workingCopy, SVNWCDbSchema. ACTUAL_NODE. name ( ) ) )
10205	assertEquals ( pSquare. evaluate ( percentile ), randomMaster. reduce ( percentile, aggregates ), Double. MIN_VALUE )
10206	Assert. assertEquals ( NUM_SHIRT_THREADS, collector. size ( ) )
10207	assertMockEndpointsSatisfied ( )
10208	assertEquals ( "secret", DecryptUtil. decryptMap ( secretMap ) )
10209	assertEquals ( expected, getString ( TestSelectWithCustomCommentImpl. example ( ) ) )
10210	assertParseTree ( rootNode ( "hello world", stringNode ( "greeting", "hello", stringNode ( "hi", "hello" ) ) ), tree )
10211	assertEquals ( "firstName", res. get ( "firstName" ) )
10212	Assert. assertEquals ( ans [ i ], count )
10213	assertEquals ( "", contactEditText. getText ( ). toString ( ) )
10214	assertEquals ( before, after )
10215	Assert. fail ( "Missing required input" )
10216	assertTrue ( relevant )
10217	assertTrue ( closed. await ( 2, SECONDS ) )
10218	assertThat ( applied, is ( RuntimeContext. DEFAULT ) )
10219	assertThat ( DateInterval. parseISO ( "2012-W01-1/W05-4" ), is ( expected ) )
10220	assertEquals ( expectedJson, json )
10221	assertThat ( actual, is ( expected ) )
10222	assertEquals ( 0, retryPolicy. getRetryCount ( ) )
10223	assertEquals ( 0.945f, result, 0.001f )
10224	assertEquals ( now. toDate ( ), result. getEndTime ( ) )
10225	assertEquals ( "Incorrect number of master commits", 1, masterCommits. size ( ) )
10226	assertEquals ( "Title is not available.", createURI ( "d/e/f" ), testObj. getObjectUri ( mem, createURI ( "a/b/c" ) ) )
10227	assertNotEquals ( options1, options2 )
10228	assertTrue ( sets. contains ( message3 ) )
10229	assertTrue ( meta. isNullable ( ) )
10230	assertTrue ( String. format ( "[%s] should be valid.", coord ), validator. isValid ( coord, null ) )
10231	assertTrue ( instantiator instanceof ObjenesisClassInstantiator )
10232	assertTrue ( userDTO. getId ( ). equals ( 1L ) )
10233	assertEquals ( 2, objects. size ( ) )
10234	assertEquals ( 200, response. getStatusLine ( ). getStatusCode ( ) )
10235	assertTrue ( getNoErrorMsg ( ), result )
10236	assertEquals ( "putValue", region. get ( "putKey" ) )
10237	Assert. assertEquals ( msg, n )
10238	Assert. assertEquals ( 1, handler. convertIdentifier ( v ) )
10239	assertEquals ( "Should get feed with METHOD_NOT_ALLOWED", HttpStatus. METHOD_NOT_ALLOWED, response. getResponseStatus ( ) )
10240	Assert. assertEquals ( BatchStatus. COMPLETED, exec. getStatus ( ) )
10241	Assert. assertArrayEquals ( bytes, result )
10242	assertTrue ( p. getStatusSimple ( ). toString ( ). equals ( "active" ) )
10243	assertTrue ( "Empty List should not sort correctly", list. equals ( list2 ) )
10244	assertThat ( result, equalTo ( "Hello" ) )
10245	files. assertIsFile ( someInfo ( ), notAFile )
10246	Assert. assertFalse ( list. accept ( element ) )
10247	assertEquals ( NetPlan. getAttributesCollectionOfQextendsNetworkElementString ( Arrays. asList ( n1, n2, n3 ) ), Arrays. asList ( n1, n2, n3 ) )
10248	assertArrayEquals ( new int [ ] { 1, 1 }, context. getUpdatesCount ( ) )
10249	assertTrue ( videos. contains ( video ) )
10250	assertEquals ( check. getValue ( ), actual )
10251	assertEquals ( "public class CompanyException {\\n}\\n", td. toString ( ) )
10252	Assert. assertNotNull ( addressResultsDto )
10253	assertThat ( context. statement ( ), is ( "'b c'" ) )
10254	assertEquals ( "{\\"level\\":\\"INFO\\",\\"loggerName\\":\\"a.B\\",\\"marker\\":\\"Marker1\\",\\"parents\\":[\\"GrandFatherMarker\\",\\"GrandMotherMarker\\"]}," + "\\"includeNullDelimiter\\":false}", str )
10255	Assert. assertTrue ( "Group should have been added to sub menu", subMenu. getMenuItems ( ). contains ( group ) )
10256	assertThat ( fieldError, is ( nullValue ( ) ) )
10257	assertThat ( underTest. getLabel ( ), is ( TYPE + "s/" + TIM_ID ) )
10258	assertTrue ( "should have found the proposition", propositionFound )
10259	AvroAssertTestUtil. assertEqualsWithJsonIgnoreOrder ( outputDirPath, actualOutputDocIdPicOuts, DocumentMetadata. class )
10260	assertSingleResult ( op, Statistic. SDEV, expSD )
10261	assertEquals ( value2, updatedConfigState. value )
10262	assertTrue ( result )
10263	assertThat ( stats, notNullValue ( ) )
10264	assertEquals ( "count", jumlah. intValue ( ) )
10265	assertThat ( base. thenCancelledCancelled ( supplier ), is ( new ImmediateFailed < > ( caller, cause ) ) )
10266	assertEquals ( 40., solution. getCost ( ), 0.01 )
10267	Assert. assertFalse ( result )
10268	assertEquals ( expected. build ( ), doc )
10269	assertEquals ( expected, actual )
10270	assertTrue ( tasks. size ( ) == 5 && tasks. get ( 0 ). getId ( ) == 10 && tasks. get ( tasks. size ( ) - 1 ). getId ( ) == 50 )
10271	assertThat ( editor. isIgnore ( ), is ( false ) )
10272	assertLoadBalanced ( restTemplate )
10273	Assert. assertNotNull ( "null data object, was not found", dataObject )
10274	assertThat ( result, is ( notNullValue ( ) ) )
10275	assertEquals ( "������������������������������������������������������������������������������������
10276	assertArrayEquals ( shorts, decoded )
10277	assertEquals ( records. size ( ), 3 )
10278	assertEquals ( "size: " + size, list. toString ( ) )
10279	assertNull ( w )
10280	assertNotSame ( 0, count )
10281	context. assertFalse ( handled )
10282	assertThat ( response. getStatus ( ), is ( Response. Status. OK. getStatusCode ( ) ) )
10283	assertThat ( uut. getFeatures ( ). isEmpty ( ), is ( true ) )
10284	Assert. assertEquals ( 1, count )
10285	assertThat ( subject. getCleanValue ( ). toString ( ), is ( "foo       bar" ) )
10286	assertEquals ( 0, result. size ( ) )
10287	Assert. assertEquals ( "{\\"" + entityType. getPropertyNames ( ). get ( 0 ) + "\\":{" + "\\"type\\":\\"MultiLineString\\",\\"coordinates\\":[" + "[[1.0,1.0],[2.0,2.0],[3.0,3.0],[4.0,4.0],[5.0,5.0]]," + "[[99.5,101.5],[150.0,151.25]]]}}", IOUtils. toString ( serializerNoMetadata. entity ( metadata, entityType, entity, null ). getContent ( ) ) )
10288	assertTrue ( "queued.push() blocks", ( time2 - time1 ) < delay )
10289	assertThat ( response. getCode ( ), is ( "a test 23" ) )
10290	Assert. assertEquals ( "Error while getting Thesaurus Type!", expectedThesaurusTypeTitle, actualThesaurusTypeTitle )
10291	assertPostEdgeProducesJson ( response, false, true )
10292	Assert. assertEquals ( "1234567890", result. getText ( ) )
10293	assertProcessVarValue ( processInstance, "x", "1" )
10294	assertMockEndpointsSatisfied ( )
10295	assertEquals ( "foobar", result )
10296	assertEquals ( "Include pattern", Arrays. asList ( ".*", ".*ha", ".*hb" ), ruleSet2. getIncludePatterns ( ) )
10297	assertNotNull ( a )
10298	assertTrue ( inventory. containsMaterialAmount ( mat, amount ) )
10299	Assert. assertTrue ( array. equals ( result ) )
10300	Assert. assertEquals ( "[1, 2, 3, 4]", equals )
10301	assertTrue ( page. getBody ( ). getTextContent ( ). contains ( "Username or email" ) )
10302	Assert. assertEquals ( map, map2 )
10303	assertEquals ( 1, testList. size ( ) )
10304	assertEquals ( "should be the same age in days", expected. intValue ( ), result. intValue ( ) )
10305	Assert. assertNull ( nullValue )
10306	Assert. assertEquals ( result. getResultSize ( ), 1 )
10307	assertThat ( repository. getDescriptor ( Repository. PROPERTY_DESC ), is ( "value" ) )
10308	assertThat ( MockI18n. passthrough. text ( str ), is ( str ) )
10309	assertTrue ( actual. entrySet ( ). containsAll ( expected. entrySet ( ) ) )
10310	assertEquals ( 0, FileChunkUtil. getNumberOfChunks ( file, TestFileConfiguration. CHUNK_SIZE ) )
10311	assertThat ( strategy, is ( instanceOf ( ActiveLocationStrategy. class ) ) )
10312	Assert. assertEquals ( ValidationResult. Result. ERROR, sink. validate ( null ). getStatus ( ) )
10313	assertEquals ( "", result )
10314	assertTrue ( image. equals ( reference ) )
10315	Assert. assertEquals ( expResult, result )
10316	Assert. assertEquals ( 2, result. length ( ) )
10317	assertNull ( output )
10318	assertEquals ( "192.168.0.123/24", event. getIp ( ). getAddress ( ) )
10319	assertEquals ( "No Test", msg. get ( "helloTest" ) )
10320	assertFalse ( param. isRequired ( ) )
10321	assertEquals ( "milestone", activityType )
10322	assertEquals ( "straks", t. format ( date ) )
10323	assertEquals ( builder. buildResponse ( ). getErrors ( ). size ( ), 0 )
10324	assertEquals ( "name", myTestInstance. runAdminCommand ( "name", commandDoc ) )
10325	assertNotNull ( result )
10326	assertEquals ( 1, slice. events. size ( ) )
10327	assertEquals ( "result=" + result, result2, result )
10328	assertEquals ( "ABCDEF", new String ( tis. toByteArray ( ) ) )
10329	assertEquals ( "reorder set should not be the original", origWriteSet, reorderSet )
10330	assertThat ( archetypeCatalog, not ( nullValue ( ) ) )
10331	assertThat ( returnT. getValue ( ), is ( "127.0.0.1:9999" ) )
10332	assertFalse ( "Testing ModuleNotFoundException", everything. contains ( "ERROR" ) )
10333	assertEquals ( "0FFFFF212", Evaluator. evaluate ( ex ) )
10334	assertTrue ( "Exception occurred", gui. isStopped ( ) )
10335	assertEquals ( builder. type. toString ( ), ExperimentType. SAVE_MODEL. toString ( ) )
10336	assertNotNull ( encounter. getOrders ( ). iterator ( ). next ( ). getInstructions ( ) )
10337	assertTrue ( asyncTask. get ( ) )
10338	assertThat ( userId. isPresent ( ), is ( true ) )
10339	assertTrue ( downloader. waitForReportReady ( ) )
10340	assertTrue ( s. length ( ) == 0 )
10341	assertEquals ( 5, pendingPosts. size ( ) )
10342	assertEquals ( Permissions. UPDATE, testProcessEngineCfg. getDefaultUserPermissionForTask ( ) )
10343	assertFalse ( "The getChanges() method reported a change", hasChange )
10344	assertEquals ( 0, result. length )
10345	assertEquals ( families. length, 1 )
10346	assertTrue ( "aa modified on should be updated", aaModifiedOn == aa2. getModifiedOn ( ). getTime ( ) )
10347	assertEquals ( "3 �����", t. format ( new Date ( 0 ) ) )
10348	assertNotNull ( EndUser. fetcher ( "ITXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
10349	assertMockEndpointsSatisfied ( )
10350	assertEquals ( 1, packetIn. getCount ( ) )
10351	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
10352	assertEquals ( 5l, d. asInt8 ( ) )
10353	assertEquals ( expected, actualQuery )
10354	Assert. assertNotNull ( json. getJsonObject ( "entry" ). getString ( "id" ) )
10355	assertNotNull ( numberTypeConverter )
10356	assertEquals ( app. getEvents ( ). size ( ), 0 )
10357	assertEquals ( 1L, peopleIds. get ( 0 ) )
10358	Assert. assertEquals ( expected, actual )
10359	assertEquals ( 3, numberOfUsers )
10360	Assert. assertEquals ( Arrays. asList ( "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ), collected )
10361	assertOut ( "b = b + 1" )
10362	Assert. assertEquals ( 1, id )
10363	assertEquals ( "UTF-8", eh. get ( 0 ). getEventType ( ) )
10364	assertEquals ( maxEventId, task. getLastEventId ( ) )
10365	assertEquals ( "DIME", result )
10366	Assert. assertTrue ( "Bad cost - expected " + 12.0 + " but was " + cost, cost == 12.0d )
10367	assertEquals ( Atom. of ( "ok" ), result )
10368	assertArrayEquals ( TEObjectUtil. TE_LSP_FAST_REROUTE1, ByteArray. getAllBytes ( output ) )
10369	Assert. assertEquals ( "", json, ios. toJSON ( ) )
10370	assertDeleteMessage ( sendMessage )
10371	assertEquals ( expected, MD5Utils. computeMd5 ( s ) )
10372	assertFalse ( hasPermission )
10373	assertEquals ( expected, actual )
10374	assertThat ( ret, is ( nullValue ( ) ) )
10375	assertTrue ( url. equals ( newUrl ) )
10376	assertEquals ( document. json ( ), expectedDocumentJson )
10377	Assert. assertEquals ( "{\\"alice\\":[\\"bob\\"]}", writer. toString ( ) )
10378	assertExceptionContainsCorrectMessage ( ( ) -> userTaskAdminClient. reassignWhenNotCompleted ( task. getId ( ), "", reassign ), "Container '" + CONTAINER_ID_V2 + "' is not associated with time format '" + TASK_DATE_FORMAT + "'", "Container '" + CONTAINER_ID_V2 + "' is not associated with time format '" + TASK_DATE_FORMAT + "'" )
10379	assertArrayEquals ( "replace and replace is replace". getBytes ( ), actuals )
10380	assertThat ( markedWord, is ( "louper" ) )
10381	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. GTE, v, TERM_FACTORY. getConstantLiteral ( "3", XSD. LONG ) ), translation. get ( 0 ) )
10382	assertThat ( path, is ( "../foo-1.0-SNAPSHOT.woa/Contents/test" ) )
10383	assertEquals ( BuilderFactory. start ( ). addMongoLong ( "a", 12345678901L ). build ( ), doc )
10384	assertEquals ( gcd, intrp. monic ( ) )
10385	assertThat ( command. accept ( state ), is ( false ) )
10386	assertThat ( PlainTimestamp. of ( 2014, 4, 21, 9, 15 ). with ( MICRO_OF_SECOND, 999999999 ), is ( PlainTimestamp. of ( date, time ) ) )
10387	assertContentType ( actual )
10388	assertEquals ( testGenre, song. getGenre ( ) )
10389	assertEquals ( 0, components. size ( ) )
10390	assertThat ( ( Boolean ) getter. invoke ( instance ), is ( equalTo ( false ) ) )
10391	assertEquals ( "  0xXX", b. asString ( ) )
10392	assertThat ( imageInfo. version ( ), is ( "1.22" ) )
10393	assertTypeListsEqual ( params, expectedParams )
10394	assertArrayEquals ( expected, actual )
10395	assertThat ( comparator. compare ( axiom3, axiom1 ), is ( lessThan ( 0 ) ) )
10396	assertTrue ( actual )
10397	assertTrue ( contentAsString. indexOf ( fieldFontSetting ) > 0 )
10398	Assert. assertTrue ( contains )
10399	assertEquals ( "From is not properly parsed", lsdf. parse ( "2015/02/28 01:02:03.004 GMT" ), mapper. readFrom ( columns ) )
10400	assertTrue ( sampler instanceof HTTPRawSampler )
10401	assertEquals ( "Wrong number of tasks", 2, tasks. size ( ) )
10402	assertEquals ( reservationName, "res_1" )
10403	assertTrue ( "no exception was thrown", exception )
10404	assertFalse ( database. isClean ( "ab" ) )
10405	Assert. assertNull ( "Distinct name was expected to be null", jBossWebMetaData. getDistinctName ( ) )
10406	assertTrue ( Files. isRegularFile ( target ) )
10407	assertEquals ( query1, query2 )
10408	Assert. assertNull ( person. getAttribute ( "name1" ) )
10409	Assert. assertEquals ( "Test template val1 and val2", output )
10410	Assert. assertEquals ( "hey", searchRequestBuilder. request ( ). routing ( ) )
10411	assertNotNull ( res )
10412	Assert. assertEquals ( obj, target )
10413	assertThat ( parseArguments. isEmpty ( ), is ( true ) )
10414	assertNull ( item. getList ( ) )
10415	assertTrue ( descriptor. hasConstrainedParameters ( ), "Setting given for cross parameter should take precedence" )
10416	assertEquals ( "getPortalHome url failed", expected, europeanaUrlService. getPortalHome ( ) )
10417	assertEquals ( Integer. valueOf ( 0 ), Integer. valueOf ( list. size ( ) ) )
10418	assertThat ( rendering, is ( "1st September 2011 + ONE_DAY" ) )
10419	assertFalse ( d1. equals ( d2 ) )
10420	assertThat ( payload, is ( "{\\"name\\":\\"login\\",\\"ramQuotaMB\\":8,\\"authType\\":\\"sasl\\",\\"password\\":\\"password\\"}" ) )
10421	assertThat ( output, containsString ( "\\"text\\":\\"generated\\"," ) )
10422	Assert. assertEquals ( window1, window2 )
10423	Assert. assertEquals ( 1001, total )
10424	assertEquals ( ClassWithPrivateAndProtectedMethodInSeparatePackage. RESULT, invokeResult )
10425	assertFalse ( "our group shouldn't have set our attribute", retAttr. contains ( attributes. get ( 0 ) ) )
10426	assertNull ( doc )
10427	assertTrue ( results. size ( ) > 1 )
10428	assertEquals ( joinFileDescriptorBo, JoinFileDescriptorBo. EMPTY_JOIN_FILE_DESCRIPTOR_BO )
10429	assertTrue ( plugin. getNameBanStorage ( ). getBan ( player. getName ( ) ). isSilent ( ) )
10430	assertNotEquals ( insertAction, retractAction )
10431	assertEquals ( NodeValue. FALSE, r )
10432	assertEquals ( 2, numberOfElephants )
10433	assertThat ( def. isSingle ( ), is ( true ) )
10434	assertNotNull ( bindingDOMDataTreeProducerAdapter. createProducer ( ImmutableSet. of ( ) ) )
10435	assertTrue ( elapsed < numberLongEvents * 1000 )
10436	Assert. assertEquals ( getCssFileContents ( cmpFile ), styleSheet. toString ( ) )
10437	assertEquals ( Version. valueOf ( "1.0.0+alpha+build" ), builder. build ( ) )
10438	assertEquals ( publicationDate. getTime ( ), mods. get ( 0 ). getPublicationDate ( ) )
10439	context. assertIsSatisfied ( )
10440	assertNotNull ( result )
10441	assertEquals ( "service", s. getType ( ) )
10442	assertEquals ( "T:12", x. toString ( ) )
10443	assertThat ( foundResources, contains ( p2id. getValue ( ) ) )
10444	assertThat ( result. getPersonIdItems ( ), is ( Collections. singletonList ( new PersonIdItem ( "John", "Smith" ) ) ) )
10445	assertEquals ( LifecycleState. DISCONNECTED, node. connect ( ). toBlocking ( ). single ( ) )
10446	assertCompletionsDisplayString ( "spring:\\n" + "  http:\\n" + "    converters:\\n" + "      preferred-json-mapper: <*>\\n", "json", "json" )
10447	Assert. assertNull ( queryResult. getExplanations ( ) )
10448	Assert. assertEquals ( "/prefix1:root/prefix2:otherchild", expression. toString ( ) )
10449	assertOut ( "goog.provide('org.apache.royale.A');\\n\\n\\n/**\\n * @constructor\\n */\\nfoo.bar.baz.A = function() {\\n};" )
10450	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
10451	assertEquals ( asList ( Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment. SIZE, Segment
10452	assertThat ( fe, notNullValue ( ) )
10453	assertEquals ( 1, response. getEntry ( ). size ( ) )
10454	assertThat ( itr. hasNext ( ), is ( false ) )
10455	Assert. fail ( "Test should fail, user shouldn't be allowed to invoke that method" )
10456	Assert. assertNotNull ( addressResultsDto )
10457	assertTrue ( tasks. size ( ) == 1 )
10458	assertTrue ( scanResult. isError ( ) )
10459	assertThat ( wrapper. get ( 1 ), is ( ( short ) 0x2424 ) )
10460	assertThat ( output, containsString ( "\\"text\\":\\"generated\\"," ) )
10461	assertThat ( renderer. getShortForm ( entity ), is ( "xsd:negativeInteger" ) )
10462	assertThat ( versionedIdsOf ( units ), bagEquals ( versionedIdList ( LAUNCHER_FEATURE, LAUNCHER_FEATURE_JAR, LAUNCHER_BUNDLE, LAUNCHER_BUNDLE_LINUX ) ) )
10463	assertEquals ( "select cat\\nfrom Cat cat\\n  fetch cat1\\nfrom Cat cat1", query2. toString ( ) )
10464	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE NAME(nodes) >= 'literal'" ) )
10465	assertEquals ( 0, SnowcastSequenceUtils. compareTimestamp ( sequence1, sequence2 ) )
10466	assertEquals ( testSet. size ( ), 2 )
10467	assertEquals ( "Should have found 2 validation records", 2, appender. getCounting ( ) )
10468	assertEquals ( vNum, pdfNum )
10469	assertTrue ( equals ( statEntity, nativeEntity ) )
10470	Assert. assertEquals ( queue, testQueue )
10471	assertEquals ( "UPDATE EntityWithRelations SET EntityWithRelations.name =? WHERE EntityWithRelations.id =?", Utils. singleLine ( sql ) )
10472	assertThat ( actual. asList ( ), is ( empty ( ) ) )
10473	assertEquals ( Arrays. asList ( "http://somelink", "" ), new JsonLinkConsumer ( ). readLinks ( reader, null ) )
10474	assertEquals ( "bla_base.ssdump2", fileName )
10475	Assert. assertEquals ( 6, elements. size ( ) )
10476	assertEquals ( "getRuntimeVersion timeout", latch. getCount ( ), 0 )
10477	assertTrue ( result )
10478	assertEquals ( 0, suggestedConfigUpdates. size ( ) )
10479	Assert. assertEquals ( 0, tableNames. size ( ) )
10480	Assert. assertTrue ( out. size ( ) > 0 )
10481	assertThat ( returned. getX ( ), is ( 2l ) )
10482	assertEquals ( ( new SparseSet ( "-a +a/b" ) ). getPattern ( ), set. getPattern ( ) )
10483	assertEquals ( "Failed on rows: [" + rows + "], columns: [" + columns + "], iteration: [" + i + "]", 1.0f, res, 0.01f )
10484	assertSame ( faultUnMarshaller, factory. getFaultUnMarshaller ( ) )
10485	CheckstyleTestUtils. assertSimilarXmlWithResource ( "/org/sonar/plugins/checkstyle/CheckstyleProfileExporterTest/" + "noCheckstyleRulesToExport.xml", sanitizeForTests ( writer. toString ( ) ) )
10486	assertEquals ( "Call count stability check.", "{findIds=2, getItems=6}", service. callCounter. toString ( ) )
10487	Assert. assertNotNull ( "null irodsTaggingService from factory", irodsTaggingService )
10488	assertEquals ( 2, timers. size ( ) )
10489	assertEquals ( 1, newUser. getViewedBooks ( ). size ( ) )
10490	Assert. assertEquals ( TimeValue. NEG_ONE_MILLISECOND, d )
10491	assertThat ( CompositeBlobStore. getStoreSuitabilityCheck ( ), equalTo ( CompositeBlobStore. StoreSuitabilityCheck. EMPTY ) )
10492	assertInEqualsOut ( )
10493	assertEquals ( "groupId:artifactId", softwareProjectId. getProjectId ( ) )
10494	assertEquals ( "FLUSH", methodCall )
10495	assertEquals ( expected [ counter ++ ], actual )
10496	assertEquals ( "" + "************\\n" + "************\\n" + "************\\n" + "************\\n" + "************\\n" + "************\\n" + "************\\n" + "************\\n" + "************\\n", raster. toString ( ) )
10497	assertTrue ( result )
10498	assertTrue ( target. isModify ( newSettings ) )
10499	assertTrue ( gl. size ( ) > 0 )
10500	assertEquals ( "EXECUTE DIAL", execCommand. buildCommand ( ) )
10501	assertEquals ( "utf-8", mediaType. charset ( ). name ( ) )
10502	assertUserSettingsCount ( )
10503	assertEquals ( STANDART, decoded )
10504	assertEquals ( expectedResult, resultString )
10505	Assert. assertTrue ( expect ( o, false ) )
10506	assertMakeImageCanReadImage ( imageData )
10507	assertEquals ( "", character. getData ( ) )
10508	assertEquals ( 0, app. executeApplication ( args ) )
10509	Assert. assertNotNull ( action )
10510	assertThat ( request. getConnectorId ( ), is ( someInteger ) )
10511	Assert. assertEquals ( "Wrong order found for " + name, orderMap. get ( name ), order )
10512	assertNull ( avroField. convertToKettleValue ( array, mock ( Schema. class ), mock ( Schema. class ), false ) )
10513	Assert. assertEquals ( i, o )
10514	arrays. assertContainsOnly ( description, actual, emptyArray ( ) )
10515	assertIsCommitted ( tx )
10516	Assert. fail ( "identifier accepted as qname" )
10517	assertEquals ( jsonProps. size ( ), props. size ( ) )
10518	assertEquals ( Type. ACCOUNT, Type. get ( account ) )
10519	assertEquals ( expectedResult, result )
10520	assertEight ( result, testContext, async )
10521	assertEquals ( "{\\"id\\":1,\\"label\\":\\"MyButton\\",\\"x\\":2,\\"y\\":2,\\"color\\":0,\\"width\\":2,\\"height\\":2,\\"pushMode\\":false}", result )
10522	assertEquals ( exp, arrayX )
10523	assertEquals ( "some return path", mockResult. included ( "returnPath" ) )
10524	assertE ( "----------" + "|        |" + "|        |" + "|        |" + "|    o   |" + "|        |" + "|        |" + "|        |" + "----------" )
10525	assertEquals ( NUM_ITERATIONS, count ( ) )
10526	Assert. assertTrue ( intersect instanceof EmptyRange )
10527	assertTrue ( result. isEmpty ( ) )
10528	assertEquals ( "{key:value}", target. toString ( ) )
10529	assertEquals ( expected, result )
10530	assertEquals ( "CpctPI", hospitalModel. getAddress ( "CORE18001224T" ) )
10531	assertEquals ( "hello, world!", out )
10532	assertNotEmpty ( token0 )
10533	assertEquals ( Arrays. asList ( "y=1" ), results )
10534	assertTrue ( Bytes. equals ( opened, data ) )
10535	Assert. assertEquals ( 1234, multicastSocket. getLocalPort ( ) )
10536	assertEquals ( "<table>... <tr>... <td>a</td>... </tr>... </table>", example. toString ( ) )
10537	assertEquals ( result, expected )
10538	assertEquals ( expected, result )
10539	Assert. assertEquals ( udf. getKey ( embedding ), udf. getKey ( embedding ) )
10540	Assert. assertEquals ( 76.875, tdCosts. getBackwardTransportTime ( loc ( "from" ), loc ( "to" ), 100., null, null ), 0.01 )
10541	assertEquals ( Lists. newArrayList ( 1 ), listBad )
10542	assertThat ( result. getBins ( ), equalTo ( Arrays. asList ( 1, 2, 3 ) ) )
10543	Assert. assertTrue ( "Optimal coverage: " + best. getCoverage ( ), best. getCoverage ( ) > 0.99 )
10544	Assert. assertEquals ( "Pattern " + index + " is not correct", Character. toString ( HostPatternsHolder. NEGATION_CHAR_PATTERN ) + testHost, patterns. get ( index ). toCharacterString ( ) )
10545	assertTrue ( results. size ( ) == 0 )
10546	assertTrue ( Files. exists ( list ) )
10547	assertArrayEquals ( sentBytes, new byte [ ] { 0x17, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
10548	assertNotNull ( result )
10549	assertions. containsSequence ( ( short ) 6, ( short ) 6, ( short ) 8, ( short ) 10, ( short ) 10 )
10550	assertEquals ( "void dest5(int, @B int)", toString ( dest ) )
10551	Assert. assertTrue ( "Invalid file types should not be honored", CollectionUtils. isEqualCollection ( expected, widget. getFileTypes ( ) ) )
10552	Assert. assertThat ( job. sendCommand ( "test command" ), is ( false ) )
10553	assertThat ( summed. getDouble ( 0 ), equalTo ( new double [ ] { 0, 1, 2, 3, 4, 5 } ) )
10554	assertThat ( options. isIgnoreFailures ( ), is ( true ) )
10555	assertEquals ( column, fromProto )
10556	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5 ) ) )
10557	Assert. assertTrue ( "There should be no GREService if no gre is configured", greServices. isEmpty ( ) )
10558	assertEquals ( "CC=[C]=CC", g. toSmiles ( ) )
10559	assertThat ( f. format ( time ), is ( "17:45 PDT" ) )
10560	Assert. assertTrue ( "Did not expect optimal coverage: ", best. getCoverage ( ) > 0 )
10561	Assert. assertEquals ( "SELECT USER();", text )
10562	assertEquals ( filteredEvidenceItemMap. size ( ), 0 )
10563	assertEquals ( 0, errors. size ( ) )
10564	Assert. assertEquals ( "id [" + id + "] - id [" + id2 + "]", ( id2 - id ), ( long ) MIN_BLK_SIZE )
10565	assertTrue (! plan1. equals ( plan2 ) )
10566	assertTrue ( size < BUFFER_SIZE )
10567	assertTrue ( Futures. getUnchecked ( collector ) )
10568	assertThat ( propertyVariable, is ( "alex" ) )
10569	assertSame ( test. b, test. defaultInjectOneTarget. m1 )
10570	assertNull ( study )
10571	assertNotNull ( bean )
10572	assertEquals ( 0, retCode )
10573	assertFalse ( rolesPrivileges. isEmpty ( ) )
10574	assertEquals ( 2, branches. size ( ) )
10575	assertEquals ( "Expected a refresh", 1, supplier. authForImage ( accessToken ) )
10576	assertEquals ( 1234, unprocessed. getExpected ( ) )
10577	assertEquals ( HttpStatus. SC_OK, response. getStatus ( ) )
10578	assertTrue ( kbuilder. hasErrors ( ) )
10579	Assert. assertEquals ( "no data objects found", 1, entries. size ( ) )
10580	assertTrue ( clas. getClass ( ). getName ( ), ( Boolean ) clas )
10581	runner. assertAllFlowFilesTransferred ( PublishKafka_2_0. REL_SUCCESS, 3 )
10582	Assert. assertNull ( tags )
10583	assertEquals ( "Max Mustermann", result )
10584	assertTrue ( result. length ( ) > 0 )
10585	assertEquals ( map1, map2 )
10586	Assert. assertEquals ( "org.jboss.as:jboss-as-arquillian-container-domain-remote:7.1.1.Final", adapter. dependencies ( ) [ 0 ] )
10587	assertThat ( zonedDateTime, is ( notNullValue ( ) ) )
10588	assertEquals ( "<b>1</b>\\n<p><b>2</b>3</p>", doc. body ( ). html ( ) )
10589	assertEquals ( Status. NO_CONTENT. getStatusCode ( ), r. getStatus ( ) )
10590	assertEquals ( 1, res. getInt ( "nbHits" ) )
10591	Assert. assertEquals ( "2011-11-01 10:20:30", formater. format ( date. getTime ( ) ) )
10592	Assert. assertFalse ( "server should supoort case-insensitive", isSupport )
10593	assertNotNull ( data )
10594	Assert. assertThat ( Foo. class. getDeclaredField ( "b" ), is ( true ) )
10595	Assert. assertTrue ( newSql. equals ( "SELECT * FROM cpcplan WHERE name = :name" ) )
10596	assertThat ( getRecordedDomain ( ), hasCondition ( Available ). withStatus ( "True" ) )
10597	assertNotNull ( text )
10598	assertThat ( problems. size ( ), is ( 0 ) )
10599	assertEquals ( - 300, scorer. scorePosition ( board, context ) )
10600	assertTrue ( importHandler. cachedImports. isEmpty ( ) )
10601	assertTrue ( mapper. getOntologyIRIs ( ). contains ( df. getIRI ( "http://owlapitestontologies.com/about" ) ) )
10602	Assert. assertTrue ( isValid ( resp, FORMAT_JSON, false, 1 ), "Response is not valid" )
10603	assertTrue ( loc. contains ( "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress" ) )
10604	assertEquals ( "image", new String ( os. toByteArray ( ), "UTF-8" ) )
10605	assertEquals ( "��缁�甯�澶�", elValue )
10606	assertSame ( out, result )
10607	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
10608	assertTrue ( latch. await ( WAIT_SEC, TimeUnit. SECONDS ) )
10609	Assert. assertTrue ( result. toString ( ), result. isSuccessful ( ) )
10610	assertNull ( factory. newNameResolver ( new URI ( "bbb://foo" ), Attributes. EMPTY ) )
10611	assertEquals ( expected, got )
10612	assertNull ( "Therapy is not null for ID", therapy )
10613	AssertiveInstance. init ( )
10614	Assert. assertNull ( userService. getUser ( 502 ) )
10615	ctx. assertTrue ( res. size ( ) > 0 )
10616	Assert. assertFalse ( policy. isResponseCacheable ( request, response ) )
10617	assertEquals ( inc. get ( ). get ( ), outRA. get ( ). get ( ), 0.0 )
10618	assertFalse ( parameter. isNamed ( ) )
10619	assertEquals ( 0, out. size ( ) )
10620	assertEquals ( 1, livePostManager. getAll ( ). size ( ) )
10621	Assert. assertTrue ( this. manager. connectAll ( Arrays. asList ( null, this. family1, null, this. family2, null ), this. person1 ) )
10622	assertArrayEquals ( new byte [ ] { 1, 2, 3, 4 }, sink. toByteArray ( ) )
10623	assertThat ( axioms, hasItem ( annotationAssertionAxiom ) )
10624	assertEquals ( result, MessageFormat. format ( "{0,date,short} {0,time}", min ) )
10625	assertEquals ( value, returned )
10626	assertEquals ( "one,two", sb. toString ( ) )
10627	assertThat ( unmarshal ( sb ), allOf ( hasEntry ( "explicit key", "explicit" + HACK_ATTEMPT ), hasEntry ( "mdc key", "mdc" + HACK_ATTEMPT ) ) )
10628	assertEquals ( "NOT (x = 5 AND y = 5)", c. toString ( ) )
10629	assertNotNull ( jobProperties )
10630	assertEquals ( fields. size ( ), 2 )
10631	assertTrue ( estimator. estimate ( ). isEmpty ( ) )
10632	Assert. assertEquals ( "Application name", "TestAliasApp", dag. getAttributes ( ). get ( com. datatorrent. api. Context. DAGContext. APPLICATION_NAME ) )
10633	assertEquals ( IP_10_123_1_54_80, StringUtils. formatSocketServer ( socket ) )
10634	Assert. assertEquals ( 0, result. getEntities ( ). size ( ) )
10635	assertTrue ( vret. isValid ( ) )
10636	assertSelect ( tq, binding ( vars, "1", "\\"Alice\\"", "\\"Smith\\"" ), binding ( vars, "2", "\\"Bob\\"", "\\"Cook\\"" ) )
10637	assertEquals ( expected, location )
10638	assertEquals ( "id:bigint(\\"0\\",\\"IDENTITY\\",NOT_NULL)", column. toString ( ) )
10639	assertThat ( excludeProgressLogsFilter. decide ( event ), equalTo ( NEUTRAL ) )
10640	assertThat ( c. getResponseCode ( ), is ( 201 ) )
10641	assertEquals ( "tpc/incoming/2014/02/01/03", path )
10642	Asn1UtilTest. assertEncoded ( ENCODED_IPV4_RESOURCES, resources )
10643	assertThat ( p1, is ( p2. inverse ( ) ) )
10644	assertTrue ( lineOffsetExpected. equals ( lineOffset ) )
10645	assertEquals ( m1, m2 )
10646	assertEquals ( "http://example.org/{X}/{Y}//", URITemplates. getUriTemplateString ( f1 ) )
10647	assertEquals ( 1, result )
10648	assertEquals ( 0, recognizedPattern1. compareTo ( recognizedPattern2 ) )
10649	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( url ) )
10650	assertEquals ( expected, cls )
10651	Assert. assertEquals ( "True", obs. getValueAsString ( Locale. US ) )
10652	assertEquals ( end - start, 100, 50 )
10653	assertTrue ( element. getElements ( ). isEmpty ( ) )
10654	Assert. assertEquals ( "42", ( ( Foo ) result ). getName ( ) )
10655	Assert. assertEquals ( 1, result. intValue ( ) )
10656	assertEquals ( HttpStatus. CREATED, statusCode )
10657	assertThat ( renderer. getShortForm ( entity ), is ( "owl:backwardCompatibleWith" ) )
10658	assertEquals ( "auditOperationType must not be null.", e. getMessage ( ) )
10659	assertTrue ( reindeerHeight < valoHeight )
10660	HeadlessTestUtils. assertHeadlessYes ( $. driver ( ). get ( ) )
10661	assertNull ( result )
10662	Assert. assertTrue ( expected. similar ( actual ) )
10663	assertEquals ( expectedId, newId )
10664	Assert. assertEquals ( 2, countNumberOfOccurence ( fullyQualifiedName, "adm1Name" ) )
10665	Assert. assertEquals ( "123\\n--\\n[0:1,1:2,2:3]", html )
10666	assertEquals ( geojsonRDD. rawSpatialRDD. count ( ), 103 )
10667	Assert. assertEquals ( ScoreLangConstants. EVENT_EXECUTION_FINISHED, runtimeInformation. getEventType ( ) )
10668	assertEquals ( "1", response. getString ( "alerts" ) )
10669	assertLookup ( breaks, values, srcImg, DataBuffer. TYPE_DOUBLE )
10670	assertEquals ( app. getLatest ( ), app. getLatest ( ) )
10671	assertTrue ( map. isEmpty ( ) )
10672	assertEquals ( numAttributes, relatedResult. getAttributeGroups ( ). length )
10673	assertThat ( foundResources, contains ( p2id. getValue ( ) ) )
10674	assertEquals ( expResult, result )
10675	assertEquals ( expected, result )
10676	assertTrue ( actual. isEmpty ( ) )
10677	assertThat ( getCreatedPod ( ). getSpec ( ). getNodeName ( ), is ( "kube-01" ) )
10678	assertEquals ( "Pattern matches for all parameters ", true, lslp. parseLine ( pattern, 1, 2, 2, 2, 2, "(username):.COMMAND=nub" ) )
10679	assertTrue ( help. contains ( cmd ) )
10680	assertTrue ( encoded. indexOf ( "\\r\\n" ) == encoded. lastIndexOf ( "\\r\\n" ) )
10681	assertEquals ( "test", sn. getSourceDestination ( ) )
10682	assertEquals ( flavour, flavour2 )
10683	assertEquals ( mav. getViewName ( ), "failure" )
10684	assertEquals ( 1, map. size ( ) )
10685	assertThat ( result, is ( false ) )
10686	Assert. assertEquals ( 0, queue. size ( ) )
10687	Assert. assertEquals ( 2, violations. size ( ) )
10688	assertEquals ( "Find by UoM label not returning a list with one value descriptor", 1, valueDescriptors. size ( ) )
10689	assertThat ( results, is ( Arrays. asList ( "A", "B", "C" ) ) )
10690	Assert. assertNull ( this. component. resolveEntity ( NONEXISTENT_ID ) )
10691	assertEquals ( "The table id is incorrect", tableId, bout. toString ( ) )
10692	assertThat ( cut. apply ( pageObject ), is ( false ) )
10693	assertTrue ( resultMessage ( result, PUT ), result. passedValidation ( ) )
10694	assertThat ( Visitors. readable ( query ), is ( "SELECT * FROM A UNION ALL SELECT * FROM B" ) )
10695	assertThat ( renderingComparator. compare ( axiom1, axiom2 ), is ( 0 ) )
10696	assertEquals ( "a<V>\\n", found )
10697	assertThat ( event. getStart ( ), is ( true ) )
10698	Assert. assertTrue ( Models. isomorphic ( expected, actual ) )
10699	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. EDIT, this. doc ) )
10700	assertEquals ( 0.0, dataSet. collect ( ). get ( 0 ), 0.001 )
10701	assertEquals ( "RUNNING", output. toString ( ) )
10702	Assert. assertEquals ( 3, a. getNumberOfMethods ( ) )
10703	assertEquals ( vars. size ( ), 0 )
10704	Assert. assertEquals ( 1, events. size ( ) )
10705	assertThat ( c1. call ( 1, 2, 3 ), returns ( 19823 ) )
10706	assertEquals ( toml. getDouble ( "a" ), toml. getDouble ( "b" ), 0 )
10707	Assert. assertEquals ( "BOUNDARY", _bad )
10708	assertEquals ( d1, d2 )
10709	assertThat ( ListNumbers. toListNumber ( array ), equalTo ( ( ListNumber ) new ArrayShort ( array ) ) )
10710	assertArrayEquals ( data, stream. toByteArray ( ) )
10711	Assert. assertNotNull ( addressResultsDto )
10712	assertEquals ( params, instance. getParams ( ) )
10713	Assert. assertEquals ( xmlEsperado, icms51. toString ( ) )
10714	assertNotNull ( Query. fetcher ( "UAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "UHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
10715	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 01" ) )
10716	authRule. assertScenario ( scenario )
10717	assertThat ( result, is ( false ) )
10718	assertFalse ( "isLoaded should return false if only element displayed is not required when " + "RequireAll annotation is used.", testView. isLoaded ( ) )
10719	Assert. assertEquals ( MedianOf3PivotingStrategy. class, getUnivariateStatistic ( ). getPivotingStrategy ( ). getClass ( ) )
10720	assertEquals ( DecodeQualification. INVALID, readerPlugIn. getDecodeQualification ( stReader ) )
10721	assertTrue ( result. contains ( propertyFileString ) )
10722	Assert. assertEquals ( "Hello, ejbthree1852", result )
10723	AsserterWithLazyInitialisationAlgorithm. ASSERTER. assertImmutable ( klasse )
10724	assertTrue (! branch_conditions. isEmpty ( ) )
10725	assertTrue ( "Expected VirtualIps object", obj instanceof VirtualIps )
10726	assertNotNull ( factory. createContext ( file ) )
10727	assertTrue ( validator. isValid ( context ) )
10728	assertThat ( channelDTO, nullValue ( ) )
10729	assertEquals ( expResult, result )
10730	assertNotNull ( service )
10731	assertNull ( factoryReference. create ( null ) )
10732	Assert. assertSame ( mockManagerFactory, AbstractDecorator. getOriginalDecoratedObject ( victim. getWroManagerFactory ( ) ) )
10733	assertTitleEquals ( "resourceReference", "WMS specification", getSingleton ( resource. getResourceReferences ( ) ) )
10734	assertTrue ( "Something wrong with delta link!", json. contains ( "delta_link=\\"Rooms?deltatoken=1234\\"}" ) )
10735	assertEquals ( 0, branch_conditions. size ( ) )
10736	Assert. assertEquals ( expectedCorrelation, bearAndSteadyGene. calculateRankCorrelation ( x, y ), DOUBLE_PRECISION_DELTA )
10737	assertTrue ( Modifier. isPrivate ( constructor. getModifiers ( ) ) )
10738	Assert. fail ( "Nested execution is forbidden" )
10739	assertEquals ( v, v1 )
10740	assertEquals ( "Generator should have been called only once", 1, generator. callCount )
10741	assertThat ( infos. length, is ( 0 ) )
10742	Assert. assertEquals ( "Incorrect title text from constructor", TITLE_TEXT, fieldSet. getTitle ( ) )
10743	assertEquals ( 2, entity. getNrCols ( ) )
10744	Assert. assertEquals ( "8080", result )
10745	assertOperation ( ( ) -> client. getSpace ( this. spaceName ) )
10746	assertFalse ( credentials. isPresent ( ) )
10747	Assert. assertTrue ( list. size ( ) > 0 )
10748	assertEquals ( "test", testString. getValue ( ) )
10749	assertUrl ( url, "http", "localhost", 80, "/" )
10750	Assert. fail ( )
10751	Assert. assertNull ( loadedModule )
10752	assertEquals ( tagList1, tagList2 )
10753	assertTick ( 2 )
10754	assertEquals ( m1, m2 )
10755	assertNotNull ( stream )
10756	assertEquals ( "encoded/decoded long do not match", value, decoded )
10757	given ( ). header ( "Origin", "http://127.0.0.1:8888" ). when ( ). get ( "tests/gateleen/cors/TestResource" ). then ( ). assertThat ( )
10758	Assert. assertEquals ( srCollection. getStaticRoutes ( ), builtSrCollection. getStaticRoutes ( ) )
10759	assertEquals ( "rule \\"my rule\\"\\n" + "dialect \\"mvel\\"\\n" + "when \\n" + "(\\n" + "   (\\n" + "      Term(effectiveDate < \\"30-Sep-2018\\") and \\n" + "      Policy($state : state == \\"KS\\" || == \\"MN\\" || == \\"NM\\" || == \\"UT\\" )\\n" + "   or\\n" + "   (\\n" + "      Term(effectiveDate < \\"23-Jun-2019\\") and \\n" + "         Policy(state : state == \\"AZ\\" || == \\"IA\\" || == \\"NE\\" || == \\"SD\\" )\\n" + "   )\\n" + "   )\\n" + "   )\\n" + "   end\\n" + "   end\\n" + "end", model. toString ( ) )
10760	Assert. assertEquals ( reporter. getSpans ( ). size ( ), 5 )
10761	assertThat ( result. endsWith ( "[inNode=node01, inPort=port01]" ), is ( true ) )
10762	assertEquals ( sqe, result )
10763	assertOut ( expected )
10764	assertEquals ( ints, ints2 )
10765	assertEquals ( timezone, "GMT+3" )
10766	assertThat ( arguments. getResources ( ), hasSize ( 2 ) )
10767	assertEquals ( "cat.bodyWeight", path. toString ( ) )
10768	assertEquals ( Arrays. asList ( "/dest/test1.txt", "/dest/woo/test2.txt" ), walker. paths )
10769	assertNotNull ( provider. getConvenienceSetters ( ) )
10770	assertEquals ( ProductData. TYPE_FLOAT32, tiffIFD. getBandDataType ( ) )
10771	assertNotNull ( southboundProvider. getDb ( ) )
10772	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPSD )
10773	assertEquals ( Color. BLACK, instance. getBackground ( ) )
10774	assertThat ( RpslObjectFilter. diff ( original, updated ), is ( "@@ -1,2 +1,4 @@\\n" + " mntner:         UPD-MNT\\n" + "+description:    descr\\n" + "+mnt-by:         UPD-MNT\\n" + " source:         TEST\\n" ) )
10775	assertEquals ( expResult, result )
10776	assertTrue ( Initialize. checkInit ( fs, sconf, conf ) )
10777	assertEquals ( "Hashcodes for default extensions are always equal - they have no properties", defaultExtension0. hashCode ( ), defaultExtension1. hashCode ( ) )
10778	assertEquals ( 0, elements. size ( ) )
10779	assertEquals ( "c", a. toString ( ) )
10780	assertEquals ( JodaBeanUtils. collectionTypeTypes ( test, Person. class ), expected )
10781	Assert. assertEquals ( "1:2.5", ret. toString ( ) )
10782	assertTrue ( result. contains ( "CURRENT LOG APPENDER" ) )
10783	assertNull ( this. filter ( null, testTarget ) )
10784	Assert. assertTrue ( dictionary. containsWord ( "a" ) )
10785	assertEquals ( "Tonto", unwrappedCacheEntry )
10786	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
10787	assertEquals ( 1, myTestFactory. getCluster ( ). getServers ( ). size ( ) )
10788	Assert. assertEquals ( resourceContent, writer. toString ( ) )
10789	assertNotNull ( SyncListPermission. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "ESXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
10790	assertEquals ( buf. toString ( ), "{\\"a\\":\\"aa\\",\\"b\\":{\\"c\\":\\"cc\\"}}" )
10791	assertTrue ( SpriteUtils. isAliasSprite ( sprite1, sprite2 ) )
10792	assertEquals ( object, cache. get ( url, clazz ) )
10793	assertEquals ( TEST_CUSTOM_PAYLOAD, testResult. getProvisioningPayload ( ) )
10794	assertUnderflow ( ( long ) x + ( long ) y, result )
10795	assertEquals ( "hello world", result )
10796	assertEquals ( "user2", result )
10797	assertTrue ( "rootPane must be visible", rootPane. isVisible ( ) )
10798	assertNull ( parsedArg )
10799	assertEquals ( "testValue", value )
10800	assertEquals ( 2, all. size ( ) )
10801	assertEquals ( Seconds. of ( - 3 ), test12. dividedBy ( - 3 ) )
10802	assertThat ( results, hasSize ( 0 ) )
10803	Assert. assertEquals ( polygon, result. getValue ( ) )
10804	assertEquals ( val, jgen. writeBinary ( val. getBytes ( ) ) )
10805	assertSame ( reply1, reply2 )
10806	assertEquals ( "{\\"store\\":{\\"book\\":[{\\"category\\":\\"reference\\",\\"author\\":\\"Nigel Rees\\",\\"title\\":" + "\\"Sayings of the Century\\",\\"price\\":8.95},{\\"category\\":\\"fiction\\",\\"author\\":\\"Evelyn Waugh\\"," + "\\"title\\":\\"Sword of Honour\\",\\"price\\":12.99}],\\"bicycle\\":null}]}", result. get ( RETURN_RESULT ) )
10807	Assert. assertEquals ( expected, outValue )
10808	Assert. assertEquals ( "SanDiDeiGg1o1h5.8apapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapap
10809	arrays. assertContainsOnly ( description, new short [ 1 ], null )
10810	assertEquals ( "ok", node. getMessage ( ) )
10811	assertEquals ( 0L, runtimeService. createProcessInstanceQuery ( ). involvedGroups ( Collections. singleton ( "involvedGroup" ) ). or ( ). involvedGroups ( Collections. singleton ( "nonInvolvedGroup" ) ). count ( ) )
10812	assertThat ( rendered, is ( test [ 1 ] ) )
10813	Assert. assertEquals ( rtpPacket. getTimestamp ( ), 0, "Timestamp should be 0." )
10814	assertMockEndpointsSatisfied ( 1, TimeUnit. MINUTES )
10815	assertEquals ( arr, resultArr )
10816	assertEquals ( input. acceptObjectKey ( ), expected )
10817	assertEquals ( expected, roads )
10818	Assert. assertEquals ( Object. class, t. getType ( ) )
10819	assertNull ( TYPE_HANDLER. getResult ( rs, 1 ) )
10820	assertEquals ( first, test )
10821	assertNotNull ( user )
10822	assertEquals ( "John", e. getName ( ) )
10823	Assert. assertEquals ( ProxyPongEntity. PONG, pong )
10824	assertEquals ( expectedJson, rp. toJson ( ) )
10825	assertFalse ( call ( dao -> dao. unlinkAsset ( asset ) ) )
10826	assertThat ( result, is ( notNullValue ( ) ) )
10827	assertEquals ( "0a0a0a0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f", computeTMTextUnitMD5 )
10828	Assert. assertEquals ( "Compression type not set", expected, MultiRFileOutputFormatter. getCompressionType ( ) )
10829	assertEquals ( 1, salaboyTasks. size ( ) )
10830	assertTrue ( errors. isEmpty ( ) )
10831	assertThatListContainsOneElement ( "foo" )
10832	assertEquals ( "mm", s )
10833	Assert. assertFalse ( InstanceValidationUtil. hasResourceAssigned ( mock. dataAccessor, TEST_CLUSTER, TEST_INSTANCE ) )
10834	assertTrue ( "Failed to match with compatible IPv6 subnet.", match )
10835	assertXMLEqual ( XmlUtils. toString ( actual ), expected, actual )
10836	assertEquals ( "Output custom metadata map is not the same", inputCustomMetadataMap, outputCustomMetadataMap )
10837	assertTrue ( o. description ( ). startsWith ( "(overridden) " + "<j_org_robovm_objc_CustomClassTest$SubClass1: 0x" ) )
10838	assertTrue ( consumerFile. exists ( ) )
10839	assertEquals ( "31.Jul.2014 13:58:14 UncaughtException in thread: main (id 1, priority 5)\\n" + "java.lang.RuntimeException: Second\\n" + "\\tat SecondClass.secondMethod(SecondClass.java:12)\\n" + "\\tat SecondClass.firstMethod(SecondClass.java:10)\\n" + "\\n" + "31.Jul.2014 13:58:14 UncaughtException in thread: main (id 1, priority 5)\\n" + "java.lang.RuntimeException: First\\n" + "\\tat FirstClass.secondMethod(FirstClass.java:12)\\n" + "\\tat FirstClass.firstMethod(FirstClass.java:10)\\n", exceptionTextPane. getDetails ( ) )
10840	assertNotNull ( object )
10841	assertEquals ( expStr, valStr )
10842	assertNull ( jsonElement )
10843	datesWithCustomComparisonStrategy. assertIsInTheFuture ( someInfo ( ), actual )
10844	assertEquals ( 3, record. size ( ) )
10845	Assert. assertEquals ( "Region (RS Index)", command. getLoad ( ). getLevelClass ( ). getLevelTypeString ( ) )
10846	assertEquals ( table. getColumn ( 1 ). getIdentifier ( ), adapter. getColumnIdentifierReverse ( 0 ) )
10847	assertThat ( ( Integer ) prop0. getClass ( ). getMethod ( "getSeedRatio" ). invoke ( prop0 ), is ( 1500 ) )
10848	assertThat ( "response contains a non-empty fullName", StringUtils. isNotBlank ( response. getFullName ( ) ) )
10849	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
10850	assertThat ( results, is ( new String [ ] { "A,B,C,D" } ) )
10851	assertEquals ( testName, actual )
10852	assertThat ( fe, notNullValue ( ) )
10853	SetSpanReceiver. assertSpanNamesFound ( expectedSpanNames )
10854	assertEquals ( HttpResponse. SC_BAD_GATEWAY, response. getHttpStatusCode ( ) )
10855	Assert. assertNotNull ( connection. getWarnings ( ) )
10856	assertNotNull ( ConfigUtils. newInstance ( this, "testProperty", NonStaticInnerClass. class ) )
10857	assertThat ( formatterOutput, sameJSONAs ( expected ) )
10858	Assert. assertEquals ( expected, result )
10859	Assert. fail ( "Exception should be thrown" )
10860	assertThat ( actualResult, equalTo ( expectedResponses ) )
10861	assertNotNull ( presenter. listEditor )
10862	assertThat ( commands. run ( ), is ( empty ( ) ) )
10863	assertEquals ( "Linting sensor for TypeScript files", desc. name ( ) )
10864	assertTrue ( outAny. equal ( inAny ) )
10865	assertEquals ( versions, Arrays. asList ( version ) )
10866	assertTrue ( result. getErrors ( ). size ( ) > 0 )
10867	AssertiveInstance. init ( )
10868	assertTrue ( str. contains ( "rdf:type rdfs:Resource" ) )
10869	assertTrue ( config. isAdvancedClusterConfigSet ( ) )
10870	assertFalse ( newVrp. getJobs ( ). containsKey ( "4" ) )
10871	Assert. assertEquals ( expected, actual )
10872	assertEquals ( expected, actual )
10873	assertNotNull ( ewd )
10874	Assert. assertEquals ( Redirect. Status. USE_PROXY. intValue ( ), response. status )
10875	Assert. assertEquals ( records. get ( 0 ). getFirstValue ( "app" ), "one" )
10876	Assert. assertEquals ( 1, list. size ( ) )
10877	assertTrue ( "Returned XML length not > 0.", serviceXml. length ( ) > 0 )
10878	assertEquals ( "foo", res. getArgument ( 0 ) )
10879	assertEquals ( "{\\"d\\":{\\"EntitySets\\":[" + "\\"Employees\\",\\"Teams\\",\\"Rooms\\",\\"Managers\\",\\"Buildings\\"," + "\\"Container2.Photos\\"]}}", getBody ( response ) )
10880	assertEquals ( expected, result )
10881	assertEquals ( "https://java.example.com/foo/bar/buz/qux", got. toString ( ) )
10882	assertThat ( ChatColor. stripColor ( subject. toString ( ) ), is ( expected. toString ( ) ) )
10883	Assert. assertEquals ( null, new CompareTool ( ). compareByContent ( output, cmp, outputPath, "diff" ) )
10884	assertEquals ( "inherited", ext. getValue ( null, obj ) )
10885	assertEquals ( true, bean. getPrimitiveBoolean ( ) )
10886	assertEquals ( "columnControl must have margin from ui", UIManager. getAction ( ColumnControlButton. COLUMN_CONTROL_BUTTON_MARGIN_KEY ), control. getMargin ( ) )
10887	assertTrue ( this. remotingClient. isConnected ( ) )
10888	assertNotNull ( VirtualSchemaTO )
10889	assertThat ( ruleManager. get ( id [ 0 ] ), is ( code [ 0 ] ) )
10890	assertEquals ( prev, propertiesConfigurationProperties. remove ( key ) )
10891	Assert. assertEquals ( TimeZone. getTimeZone ( "America/New_York" ), config. getTimeZone ( ) )
10892	assertEquals ( TEST_2007_07_14_PONE, t )
10893	assertSuccess ( services. executeOperation ( udpOperation ) )
10894	Assert. assertFalse ( compatibilityResult. isCompatible ( ) )
10895	assertEquals ( "SELECT * WHERE {?user?_c2?_c3 }" )
10896	Assert. assertFalse ( testFailed )
10897	assertTrue ( "Privacy policy retrieved aborted due to timeout", errorException. getMessage ( ). contains ( testTitle ) )
10898	assertNull ( transaction )
10899	Assert. assertEquals ( "null", writer. toString ( ) )
10900	Assert. assertEquals ( new IntNode ( root. length ). add ( new IntNode ( 1 ) ). add ( new IntNode ( 2 ) ). add ( new IntNode ( 3 ) ), node )
10901	assertContains ( indels, 100, "C", "GGATCAT" )
10902	assertCallTree ( callTree, callStack. getStackEvents ( ), true )
10903	assertMockEndpointsSatisfied ( )
10904	assertNotNull ( objJPAEdmProperty. getJPAEdmKeyView ( ) )
10905	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"record\\":{\\"url\\":\\"http://sendme.com/tropo\\"},\\"beep\\":true,\\"interdigitTimeout\\":5.0,\\"maxTime\\":300.0,\\"asyncUpload\\":true}}]}" )
10906	Assert. assertEquals ( new Partition ( "2-0" ), partition )
10907	assertTrue ( "Should have failed, but got " + n + " times instead of " + pJNA. length + " times instead of " + pOptimal. length + " times instead of " + pJavolution. length + " times instead of " + pBridJ. length + " times instead of " + pNIO. capacity ( ), ( n < n ) )
10908	assertSame ( error, failingStream. getError ( ) )
10909	assertEquals ( expectedQuery, actualQuery )
10910	tc. assertEquals ( thread, Thread. currentThread ( ). getName ( ) )
10911	assertEquals ( "bkchoi,ROLE_USER", result. getResponse ( ). getHeader ( "Authorization" ) )
10912	assertTrue ( ex. isPrime ( 13 ) )
10913	assertTrue ( "Unexpected page returned", PROJECT_PAGE_NAME. equals ( projectService. getSpecificProjectPage ( projectId, user ) ) )
10914	assertThat ( result, is ( nullValue ( ) ) )
10915	assertEquals ( 10, result )
10916	assertEquals ( "simpleList: [Value1, Value2, Value3]\\n", root. toString ( ) )
10917	connection. assertBufferEndsWith ( "Reset configuration is required" + Config. getLineSeparator ( ) )
10918	assertNull ( PojoPropertyUtilsBean. persistenceStructureService. getObjectType ( notAnOjbObject. getClass ( ) ) )
10919	assertEquals ( slice1Assert, slice1Test )
10920	assertEquals ( "192.168.0.123/24", event. getIp ( ). getAddress ( ) )
10921	verifier. assertFileDoesNotExist ( GENERATED_SCHEMA )
10922	assertEquals ( "Expected another type of analyzer", StandardAnalyzer. class, analyzer. getClass ( ) )
10923	assertEquals ( "sub", subTrans. getName ( ) )
10924	assertTokenStreamContents ( ts, new String [ ] { "vitajt", "wikip茅di" }, new int [ ] { 0, 11 }, new int [ ] { 7, 20 }, null, new int [ ] { 1, 2 }, null, 20, null, true )
10925	assertEquals ( count, actual )
10926	Assert. assertEquals ( msg, result )
10927	assertEquals ( expectedResult, result. toString ( ) )
10928	assertScenario ( )
10929	Assert. assertEquals ( "type name website", title )
10930	assertEquals ( 2., matrix. getTransportCost ( loc ( 1 ), loc ( 2 ), 0.0, null, null ), 0.1 )
10931	assertEquals ( "0000", r )
10932	Assert. assertNotNull ( o )
10933	assertThat ( replacedQuery, is ( "a =? AND (`b.c` =? OR d IN?) ORDER BY x" ) )
10934	assertEquals ( "Local changes", ( Integer ) 100, copyRef. deref ( ) )
10935	Assert. assertEquals ( expected, actual )
10936	assertEquals ( "myValue", sessionStore. get ( "test", sessionId, String. class ) )
10937	assertEquals ( c1, c2 )
10938	Assert. areEqual ( 1, st. getInt ( 1 ), "验证无数据" )
10939	assertEqualsIgnoreWhitespace ( expected, real )
10940	assertEquals ( baselineData. getHospital ( ). size ( ), 0 )
10941	Assert. assertNull ( actual )
10942	assertThat ( response. getDomainSearchResults ( ). get ( 0 ). getHandle ( ), equalTo ( "DOMAIN-TEST1-TEST" ) )
10943	assertObjectEquals ( "{type:'object',additionalProperties:{type:'object',properties:{f1:{type:'string'}}},description:'org.apache.juneau.jsonschema.JsonSchemaGeneratorTest$BeanMap<org.apache.juneau.jsonschema.JsonSchemaGeneratorTest$SimpleBean>'}", s. getSchema ( BeanMap. class ) )
10944	assertTrue ( signature. contains ( "signature=" ) )
10945	assertEquals ( "Session count should be correct.", sessionCount + 1, SessionListener. getSessionCount ( ) )
10946	assertThat ( TestI18n. testMessage. text ( Locale. ENGLISH, "Test" ), is ( "Test" ) )
10947	assertTrue ( majorJavaVersion >= 0 )
10948	assertTrue ( dd. isWildcardEnumValue ( ) )
10949	assertSamples ( )
10950	this. assertVerification ( )
10951	assertProcessInstanceCompleted ( processInstance )
10952	assertEquals ( optionB, ConfigUtils. getFirstOptionFirst ( options ) )
10953	assertEquals ( 1, tokens. size ( ) )
10954	assertEquals ( - 5.0, FrontUtils. distanceToClosestPoint ( point2, front ), EPSILON )
10955	assertTrue ( toml. getArray ( "a" ). isEmpty ( ) )
10956	assertNull ( DataConfiguration. getDate ( DataConfiguration. DATE_FORMAT_KEY ) )
10957	assertEquals ( 0.0, percentile. evaluate ( emptyArray ), 0.0 )
10958	Assert. assertTrue ( resources instanceof MetadataProvider )
10959	assertEquals ( expectedTextResult, new String ( result ) )
10960	assertTrue ( workflowService. startWorkflow ( ) )
10961	assertEquals ( expected, transformed )
10962	assertEquals ( first. not ( ), builder. getValue ( ) )
10963	assertThat ( bomb. state ( ), is ( "kaboom!" ) )
10964	assertNotNull ( colportor. getId ( ) )
10965	Assert. assertEquals ( urlEsperada, nota. getInfoSuplementar ( ). getQrCode ( ) )
10966	assertTrue ( StoreParams. sameValues ( p, pDft ) )
10967	assertEquals ( true, p. getActive ( ) )
10968	assertTrue ( dbCon. contains ( "some_id" ) )
10969	assertTrue ( "Successful permission check was not logged", loggedSuccessfulPermissionCheck ( AUDIT_LOG_FILE, USER ) )
10970	assertEquals ( 0, userList. indexOf ( user ) )
10971	assertTrue ( status. failed ( ) )
10972	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. NOT, TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. GTE, TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. GTE, TERM_FACTORY. getConstantLiteral ( "1", XSD. LONG ) ) ) ), translation. get ( 0 ) )
10973	mockery. assertIsSatisfied ( )
10974	Assert. assertNull ( new CompareTool ( ). compareXmp ( destinationFolder + fileName, sourceFolder + "cmp_" + fileName, true ) )
10975	assertEquals ( "TimeStep :, ", result )
10976	Assert. assertEquals ( "��瑁�|��|��瑁�", words )
10977	assertEquals ( cells. toString ( ), "myTable" )
10978	assertEquals ( expResult, result )
10979	assertEquals ( stat, fromJson )
10980	assertEquals ( ConnAckMessage. IDENTIFIER_REJECTED, m_returnCode )
10981	assertTrue ( string. contains ( "foo" ) )
10982	assertFalse ( validator. isValid ( resource, MetadataSection. COURSE_SECTION ) )
10983	assertThat ( auth. getIssuer ( ), is ( nullValue ( ) ) )
10984	assertEquals ( src, URLDecoder. decode ( dest, "utf-8" ) )
10985	assertTrue ( Modifier. isPrivate ( constructor. getModifiers ( ) ) )
10986	assertTrue ( mesageReceivedByClient )
10987	assertTrue ( page. asXml ( ). indexOf ( "true" )!= - 1 )
10988	assertFalse ( "Expected StringSchema integer validation failure did not succeed", schema. validate ( integerEntity ) )
10989	Assert. assertEquals ( speed, color. getHighestValue ( ), 0.001 )
10990	assertThat ( "Locations created with identical paths and different properties must not return false for locations created with identical paths and different properties", locationA1. equals ( locationA2 ), is ( false ) )
10991	assertEquals ( "Failed to generate invocation on literal", "foo.toString()", result )
10992	assertThat ( pactFoder. exists ( ), Is. is ( true ) )
10993	assertEquals ( CubeEdge. i, edge )
10994	assertEquals ( expecting, found )
10995	assertEquals ( "stringdata", unitTestTablePojoRead. getBinarydata ( ) )
10996	assertEquals ( expResult, result )
10997	assertEquals ( p, p2 )
10998	Assert. assertEquals ( entity. ttl, reloaded. ttl, 0 )
10999	assertThat ( changes. size ( ), is ( 1 ) )
11000	assertTrue ( "result set not iterated", iterated )
11001	assertTrue ( multiMap. remove ( key ) )
11002	assertThat ( messages. size ( ), is ( 0 ) )
11003	assertTrue ( testClass. isUnableToCreateMoreTransactions ( ) )
11004	assertThat ( xray. getInterfaceMethods ( ), hasSize ( 0 ) )
11005	assertEquals ( expResult, result )
11006	Assert. assertTrue ( "User should be logged in!", browser. findElements ( By. xpath ( "//li[contains(text(), 'Welcome')]" ) ). size ( ) > 0 )
11007	assertThat ( versionedIdsOf ( units ), bagEquals ( versionedIdList ( REFERENCED_BUNDLE_V1, OPTIONAL_BUNDLE ) ) )
11008	assertThat ( response. getStatus ( ), is ( 301 ) )
11009	assertFalse ( testResults. getInvoked ( ) )
11010	Assert. assertEquals ( term, term. getConceptReferenceTermMaps ( ). get ( 0 ). getTermA ( ) )
11011	assertNotNull ( resultMap )
11012	assertTrue ( cv. supports ( Date. class ) )
11013	assertEquals ( 0.0, score, 0 )
11014	assertEquals ( 0, found )
11015	assertEquals ( 10, toTest. deserialize ( ) )
11016	Assert. assertNull ( result )
11017	assertEquals ( 1000, updater. getBytesTransferred ( ) )
11018	assertThat ( driver. findElement ( MobileBy. AccessibilityId ( "progress_views_button" ) ). getText ( ), is ( "100%" ) )
11019	assertNotNull ( nestedAnnotation )
11020	AssertAnnotations. assertToken ( tokens, select ( jcas, Token. class ) )
11021	assertEquals ( 654321, ws. getReceiveBufferSize ( ) )
11022	assertTrue ( result. isEmpty ( ) )
11023	Assert. assertEquals ( 200, ex. getContext ( ). getProperty ( HttpContextMapper. HTTP_RESPONSE_STATUS ). getValue ( ) )
11024	assertEquals ( 1, jobs. size ( ) )
11025	assertTrue ( "isDisplayed should return true if at most a number of elements are displayed as" + " specified to be required, with any number of non-displayed elements.", element. isDisplayed ( ) )
11026	assertEquals ( expected, visitor. visit ( new IElement ( "g1", "e1" ) ). toString ( ) )
11027	assertEquals ( Sets. newHashSet ( testWorkflowPhylogenomics, testWorkflow1v1 ), workflows )
11028	assertArrayEquals ( TEObjectUtil. TE_LSP_ASSOCIATION_2, ByteArray. getAllBytes ( output ) )
11029	assertArrayEquals ( Doubles. toArray ( huginProbabilities ), Doubles. toArray ( amidstProbabilities ), 0.025 )
11030	assertEquals ( "shoesfin.NET", orgl. getOrg ( "67.43.156.0" ) )
11031	assertTrue ( smsSettings. isConfigured ( ) )
11032	assertThat ( currentPage, is ( anyPage ( ) ) )
11033	Assert. assertEquals ( 3, result )
11034	assertEquals ( ChineseRemainders. createMagic ( prime1, prime2, remainder1, remainder2 ), magic )
11035	assertFalse ( "There should be no row", listParser. nextRow ( ) )
11036	assertEquals ( "aHR0cDovL2xldmVsdXBsdW5jaC5jb20vZXhhbXBsZXMvP3Bhcm09VGhpcyBwYXJhbWV0ZXI=", encodedURL )
11037	assertEquals ( 0, infoList. size ( ) )
11038	assertEquals ( createChildListing ( "child3" ), future. get ( ). getResult ( ) )
11039	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( query, expectedQuery ) )
11040	Assert. assertTrue ( users. size ( ) >= 0 )
11041	Assert. assertEquals ( "Unexpected coverage: ", 2d / 3d, best. getCoverage ( ), 0.001 )
11042	assertTrue ( permissionEvaluator. hasProjectPermission ( authentication, "project", Permission. EDIT_PAGE ) )
11043	assertEquals ( "Map to query should be empty", "", QueryParser. buildQuery ( map ) )
11044	assertEquals ( "3", RatingTransformer. transformIdentity ( input ) )
11045	assertSame ( base. abs ( ), base )
11046	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
11047	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
11048	assertEquals ( result. size ( ), 0 )
11049	assertTrue ( userCanDeleteBranch )
11050	assertThat ( timeline. getState ( ), is ( Timeline. State. INITIAL ) )
11051	assertEquals ( "Merge scripts are not the same", expectedMergeSimple ( ), testDialect. convertStatementToSQL ( stmt ) )
11052	assertEquals ( "1:xxxy;\\n", found )
11053	assertEquals ( expected, bos. toString ( ) )
11054	org. junit. Assert. assertEquals ( expected, tHandler. getLastRecord ( ). getThrown ( ) )
11055	assertThat ( outputFile. length ( ), is ( 62L ) )
11056	assertNumEquals (.9d, mdd. calculate ( series, tradingRecord ) )
11057	Assert. assertEquals ( 0, violations. size ( ) )
11058	assertEquals ( "{ \\"hello\\" : [1,2]}", writer. toString ( ) )
11059	assertNotNull ( key )
11060	assertRoundtrip ( input )
11061	assertEquals ( 0., violation, 0.01 )
11062	assertEquals ( Boolean. valueOf ( true ), result )
11063	assertNotNull ( sKey, aCSS )
11064	assertTrue ( "Should get valid parser", parser!= null )
11065	assertFalse ( rule. shouldProceed ( userSession, request ) )
11066	assertEquals ( displayer. isRefreshOn ( ), false )
11067	assertAnnotations ( 2, Quantity. class, new TestQuantity ( 0, "400 square millimetres", 400, "mm^2", 400 * Area. MM2_TO_M2, "m^2", "area" ), new TestQuantity ( 1, "400mm^2", 400, "mm^2", 400 * Area. MM2_TO_M2, "m^2", "area" ) )
11068	assertTrue ( true )
11069	Assert. assertFalse ( "multipart/byteranges". equalsIgnoreCase ( elt. getName ( ) ) )
11070	assertEquals ( "id", id )
11071	assertEquals ( 0, manager. getAll ( ). size ( ) )
11072	assertFalse ( status. equals ( HardActivityConstraint. ConstraintsStatus. FULFILLED ) )
11073	assertNull ( lookUpManager. lookUpWorkingObjectOrReturnNull ( object ) )
11074	assertEquals ( l1, l2 )
11075	assertEquals ( "|one |two |three    |\\n" + "|four|five|siiiiiiix|\\n", tabulator. tableOf ( data ) )
11076	assertEquals ( attributes, repositoryRecord. getCurrent ( ). getAttributes ( ) )
11077	assertEquals ( expected, sanitized )
11078	assertTrue ( "Unexpected result", result. toString ( ). contains ( "File not found" ) )
11079	assertEquals ( "Expected response not seen.", 404, response. getStatus ( ) )
11080	assertThat ( ( Integer ) Whitebox. invokeMethod ( target, "getDestinationCompId", path ), is ( 1 ) )
11081	assertThat ( sut. getName ( ), is ( "SUT" ) )
11082	DatasetAssert. unorderedEquals ( sink1. getOutputs ( ), "first", "second-0" )
11083	assertNull ( person2 )
11084	assertNotNull ( "IDPSSODescriptor is not null", sp )
11085	context. assertIsSatisfied ( )
11086	Assert. assertEquals ( 200, response. status )
11087	assertEquals ( "Java", os )
11088	assertTrue ( i + ", " + src. getAbsolutePath ( ), src. delete ( ) )
11089	assertEquals ( 10L, target. get ( ) )
11090	Assert. assertTrue ( pss. toString ( ). contains ( "test" ) )
11091	assertThat ( result, is ( "(((item.lastmodified:[" + escapedFromDate ( DATE ) + " TO *]) AND (item.spec.set:[" + escapedSetDate ( SET ) + "])))" ) )
11092	Assert. assertEquals ( "should have updated info", "", updatedUser. getInfo ( ) )
11093	assertTrue ( AcceptanceTestUtil. isInterested ( peerComponent, remoteWorkerOD. getDeploymentID ( ) ) )
11094	assertEquals ( 1.2e22, ( ( DoubleValue ) ( ( SelectExpressionItem ) ( ( PlainSelect ) select. getSelectBody ( ) ). getSelectItems ( ). get ( 0 ) ). getExpression ( ) ). getValue ( ), 0 )
11095	assertTrue ( "Found nested declarations", nested. containsKey ( key ) )
11096	assertEquals ( "Should have been authenticated.", oauthClientId, answer. getReturnVal ( ) )
11097	assertEquals ( true, ( allforums. size ( ) > 0 ) )
11098	assertTrue ( startState )
11099	assertThat ( res. toString ( ), is ( equalTo ( "my last response transactionId is: <xml />" ) ) )
11100	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + destName + ".pdf", sourceFolder + "cmp_" + name + ".pdf", destinationFolder, "diff_" ) )
11101	assertEquals ( "", result )
11102	assertFalse ( iter. hasNext ( ) )
11103	assertThat ( partitionKeyValue. toJson ( ), equalTo ( mapper. writeValueAsString ( Collections. singletonList ( data ) ) ) )
11104	assertEquals ( originalFetchCount, timeline. getFetchCount ( ) )
11105	assertTrue ( page1. asText ( ). contains ( "abcdef" ) )
11106	Assert. assertEquals ( "http://localhost/" + SonarNavigator. RESOURCE_PATH + "123", url )
11107	assertThat ( "missing owner not detected", validation. hasErrorAbout ( "no", "owner" ) )
11108	assertEquals ( testSet, monitorNames )
11109	assertThat ( findFeature ( features, "ChangeAvailability" ), is ( instanceOf ( ChangeAvailabilityFeature. class ) ) )
11110	assertEquals ( "twitter/tweet/_search/version", search. getURI ( ElasticsearchVersion. UNKNOWN ) )
11111	assertReplacement ( input, regex, replacement, lookBehind, capacityCharBuf, expectedOutput, flags )
11112	assertEquals ( V8Value. OBJECT, type )
11113	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
11114	Assert. assertTrue ( isValid, "Poll with empty title and empty items must be valid" )
11115	assertEquals ( expected, toJSON ( series ) )
11116	assertEquals ( "3 啶�啶苦え啷� 啷�啶距う", t. format ( new Date ( 0 ) ) )
11117	assertThat ( request. getTargetClass ( ), is ( equalTo ( clazz ) ) )
11118	assertEquals ( null, params. getString ( new Parameter ( "a.k" ), null ) )
11119	assertThat ( o, nullValue ( ) )
11120	Assert. assertEquals ( entity. publicValue, actualValue )
11121	Assert. assertTrue ( result )
11122	assertTrue ( "topics should be empty", topicMap. isEmpty ( ) )
11123	Assert. assertNotNull ( cu )
11124	Assert. assertNull ( new CompareTool ( ). compareByContent ( filename, sourceFolder + "cmp_copyFields01.pdf", destinationFolder, "diff_" ) )
11125	assertEquals ( 10.0, outputValues. get ( 0 ), 0.0 )
11126	assertTrue ( Arrays. equals ( data, ( boolean [ ] ) deserialize. readObject ( boolean [ ]. class ) ) )
11127	assertions. containsSequence ( sequence )
11128	assertEquals ( expected, actual )
11129	assertEquals ( expResult, result )
11130	assertNotNull ( myBean )
11131	assertThat ( errors, hasFieldErrors ( "givenName", "error.invalid" ) )
11132	assertEquals ( 0, stat )
11133	assertEquals ( "cookie", cookie, reconnectCohort. getShard ( ) )
11134	assertEquals ( "FooValue", Foo. fooValue )
11135	assertTrue ( "file not deleted", FsUtil. exists ( filePathOnFileSystem ) )
11136	assertEquals ( 2, table. getCells ( ). size ( ) )
11137	assertLongArrayEquals ( expected, toLongArray ( splits ) )
11138	assertEquals ( "Must be Equal", interfaceTypeClass, InterfaceTypeOther. class )
11139	Assert. assertEquals ( 2, tables. size ( ) )
11140	assertEquals ( 0, rowCount )
11141	assertEquals ( 0, tp. size ( ) )
11142	assertEquals ( "non-object Container{s=aa i=4}", b. nonObject ( new Container ( "aa", 4 ) ) )
11143	assertGameOver ( )
11144	assertEquals ( "master", masterNode. getName ( ) )
11145	assertNull ( spanBuilder )
11146	assertFalse ( isAuthenticated )
11147	assertFalse ( voter. voteMatch ( affiliation, organization ) )
11148	Assert. assertTrue ( queueResponse. isOk ( ) )
11149	assertEquals ( 0.0, instance. inclusiveHypervolume ( ind ), 0.0 )
11150	assertEquals ( "und", metadata. getLanguage ( ) )
11151	Assert. assertTrue ( comparator. compare ( cell2, cell1 ) == 1 )
11152	assertEquals ( expResult, result )
11153	assertEquals ( expected, actual )
11154	assertEquals ( 3, list. size ( ) )
11155	assertEquals ( expectedResult, verifyTomcat. invoke ( audit ) )
11156	Assert. assertEquals ( "SELECT * WHERE { <http://example.org> <http://predicate> \\"A multi\\\\nline string\\". }", query. toString ( ) )
11157	assertEquals ( Sets. newHashSet ( "comp", "inst" ), prefixes )
11158	assertTrue ( cut. getAttributes ( ). isEmpty ( ) )
11159	assertEquals ( expectedIds, Ids )
11160	assertServiceResource ( resource )
11161	Assert. assertEquals ( icmsSetado, icms. getIcmssn102 ( ) )
11162	assertContains ( e. getMessage ( ), "'id'" )
11163	assertEquals ( "a-z", bitSet. toString ( ) )
11164	Assert. assertEquals ( false, objectSet. isEmpty ( ) )
11165	assertThat ( browsers. stream ( ). map ( b -> ( WebDriverBrowser ) b ). map ( WebDriverBrowser :: getWrappedDriver ). map ( TargetedWebDriver :: getWebDriverTarget ). collect ( Collectors. toList ( ) ), containsInAnyOrder ( WebDriverTargets. window ( "window1" ), WebDriverTargets. window ( "window2" ) ) )
11166	assertNotNull ( photoRepository )
11167	Assert. isTrue ( true )
11168	assertEquals ( 0, ShadowToast. shownToastCount ( ) )
11169	assertEquals ( expected, actual. toString ( ) )
11170	assertEquals ( copy, profile )
11171	assertEquals ( "Select with order by", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
11172	Assert. assertEquals ( 0, analyser. getWaitingTimeAtActivity ( route. getStart ( ), route ), 0.01 )
11173	Assert. assertEquals ( "center", cell. getHorizontalAlign ( ) )
11174	assertThatSql ( query, is ( "SELECT nodes.col1,nodes.col2 FROM table AS nodes" ) )
11175	assertEquals ( 5.3, result, 0.00001 )
11176	assertThat ( end, is ( PlainDate. of ( 2011, Month. DECEMBER, 31 ). at ( PlainTime. midnightAtStartOfDay ( ) ). inTimezone ( ZonalOffset. ofHours ( AHEAD_OF_UTC, 14 ) ) ) )
11177	repository. findByFirstnameAndLastname ( Single. just ( "Walter" ), "White" ). test ( ). awaitCount ( 1 ). assertNoErrors ( )
11178	Assert. assertEquals ( h1. get ( "key" ), h2. get ( "key" ) )
11179	Assert. assertEquals ( createArrayNode ( 2, 3 ), result )
11180	assertTrue ( "Path for added node is wrong: actual=" + listener. getEvents ( ). get ( 0 ). getPath ( ) + ", expected=" + addedNode. getPath ( ), containsPath ( listener, addedNode. getPath ( ) ) )
11181	assertTrue ( span. getText ( ). contains ( "Error" ) )
11182	assertTrue ( "File should be empty", tocFile. exists ( ) )
11183	assertEquals ( "Incorrect number of events sent", testSize, _receiver. getResult ( ). size ( ) )
11184	assertEquals ( vr. getValidity ( ), Validity. INVALID )
11185	assertEquals ( 1, testResults. getDeliveries ( ) )
11186	Assert. assertEquals ( 1, statusTuples. size ( ) )
11187	assertEquals ( expResult, result )
11188	assertEquals ( expectedOutput, actualOutput )
11189	Assert. assertEquals ( 0, terms. size ( ) )
11190	assertNull ( eventScanConfig )
11191	assertTrue ( localServer. is_local ( ) )
11192	assertViolationsThat ( report. getValidationViolations ( ), equalTo ( "Root definition has documentation with missing title" ) )
11193	assertTrue ( nodes. split ( "\\n" ). length > 0 )
11194	assertEquals ( 1, eventSubscriptions. size ( ) )
11195	assertThat ( issues, is ( empty ( ) ) )
11196	assertEqualDoubleVectors ( tsne. mean ( X [ 3 ], epsilon ), tsne. mean ( X [ 3 ] ), epsilon )
11197	assertEquals ( "Test SQL Exception", formattedMessage )
11198	assertSomeDatas ( expected, actual )
11199	assertThat ( message, containsString ( "Build succeeded, calling PutJobResult" ) )
11200	assertEqualsIgnoreWhitespace ( expectedDRL, RuleModelDRLPersistenceImpl. getInstance ( ). marshal ( model ) )
11201	assertEquals ( data, _helloWorld. sayHello ( data ) )
11202	assertNull ( data )
11203	assertTrue ( zipfile. exists ( ) )
11204	Assert. fail ( "Expected TimeoutException" )
11205	assertThat ( databaseHelper. getMaxSerial ( ), is ( 1L ) )
11206	Assert. assertEquals ( "4c4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d
11207	assertEquals ( 4, extension. getHandlersForExceptionType ( IllegalArgumentException. class, bm, qualifiers, TraversalMode. DEPTH_FIRST ). size ( ) )
11208	Assert. assertEquals ( newLastModificationTimeMs, inodeDirectory. getLastModificationTimeMs ( ) )
11209	assertEquals ( expResult, result )
11210	assertEquals ( "hello world", extractedString )
11211	assertTrue ( "testCanEditBooleanAuth2_useInheritance 0", collectionService. canEditBoolean ( context, collection ) )
11212	assertEquals ( 2, cache. listPrivileges ( null, null, null, new Server ( "server1" ), new Database ( "db1" ) ). size ( ) )
11213	assertEquals ( expected, actual )
11214	assertFalse ( cli. getCredentials ( ). isPresent ( ) )
11215	assertEquals ( "package org.kissmda.test.junit;\\n" + "import java.util.Collection;\\n" + "import java.util.List;\\n" + "import java.util.Collection;\\n" + "import java.util.List;\\n" + "public abstract class ClazzName extends java.util.Collection {\\n" + "  public abstract List<java.lang.Integer> asList(  Collection<java.lang.Integer> values) {\\n" + "    return null;\\n" + "  }\\n" + "}", cu. toString ( ). trim ( ) )
11216	assertThat ( localization. getLocale ( ), equalTo ( PT_BR ) )
11217	assertEquals ( false, attributes. isOtherFile ( ) )
11218	assertThat ( result, is ( notNullValue ( ) ) )
11219	assertTrue ( latch. await ( 4, SECONDS ) )
11220	assertEquals ( f1, f2 )
11221	assertEquals ( expecteds, actuals )
11222	assertFalse ( "InetSocketAddress should be recreated", inetSocketAddress1 == inetSocketAddress2 )
11223	assertTrue ( conf. getClassLoader ( ) instanceof Fake_ClassLoader )
11224	assertEquals ( packet, p )
11225	assertEquals ( "25", empty. getCommand ( ) )
11226	assertEquals ( ForwardSecrecyBlackList. RSA_EXPORT_WITH_RC2_CBC_40_MD5, cipher )
11227	assertEquals ( "Hello ^there", ResponseBodyInterpolator. interpolate ( "Hello ^there", req ) )
11228	assertArrayEquals ( expected, result )
11229	assertEquals ( "file://localhost/etc/password", one. absUrl ( "href" ) )
11230	assertEquals ( address, address2 )
11231	assertThat ( domain. getValidationFailures ( resourceLookup ), empty ( ) )
11232	Assert. assertEquals ( stop, receivedStop )
11233	assertFalse ( SystemTray. isSupported ( ) )
11234	assertNotNull ( result )
11235	assertNotNull ( "Previous step failed", uri_userInstance )
11236	assertEquals ( expected, actual )
11237	assertEquals ( Proxy. NO_PROXY, result. get ( 0 ) )
11238	assertNull ( result )
11239	assertEquals ( expected, out )
11240	assertEquals ( expected, actual )
11241	assertThat ( mFileHelper. mImageFile, is ( nullValue ( ) ) )
11242	assertNull ( store. pull ( key1 ) )
11243	assertThat ( matcher. matches ( "{\\"number\\":1}" ), is ( false ) )
11244	assertEquals ( 0, dir. getNextServer ( ) )
11245	assertThat (! duration. isNegative ( ), equalTo ( true ) )
11246	assertEquals ( "* :123: Arthur Dent\\n", toWikiText ( note ) )
11247	assertEquals ( expResult, result )
11248	assertEquals ( expectedPort, actualPort )
11249	Assert. assertTrue ( "expecting the false positive rate to be lower than 3%", falsePositiveRate < 0.03d )
11250	assertEquals ( "foo", cfg. foo ( ) )
11251	assertThat ( e. getCause ( ), Matchers. instanceOf ( ArangoDBException. class ) )
11252	assertNull ( start. getErrorResponseBody ( ) )
11253	assertEquals ( content, "Hello World" )
11254	Assert. assertEquals ( "Unknown destination queue", MicroPipelineValidationResult. UNKNOWN_SOURCE_QUEUE, new MicroPipelineValidator ( ). validateComponent ( cfg, queues, components ) )
11255	assertEquals ( 0, inclusionTerms. size ( ) )
11256	assertEquals ( logs. get ( i ), message )
11257	Assert. assertEquals ( expectedResult, resultString )
11258	assertThat ( DateInterval. parseISO ( "2012-01-01/2014-02-14" ), is ( expected ) )
11259	assertions. containsSequence ( sequence )
11260	assertEquals ( 8, result. size ( ) )
11261	assertThat ( tracker. findByName ( itemTask. getName ( ) ), is ( itemTaskEdited ) )
11262	assertNotNull ( f. getRecordWriter ( mockCollection, c ) )
11263	assertEquals ( 1, ksession. fireAllRules ( ) )
11264	assertThat ( unicodeString, is ( equalTo ( unicodeString ) ) )
11265	assertThat ( output, containsString ( "FHIR resource created:" ) )
11266	assertEquals ( "5", exec. getNumMapTasks ( ) )
11267	assertTrue ( fixture. hasSubscriptionId ( ) )
11268	assertParseOneDoc ( editor, "DOC(0): ", "  KEY(0): world:", "    KEY(2): europe:", "      KEY(4): france:", "        RAW(6): cheese", "      KEY(4): belgium:", "        RAW(2): beer", "      KEY(2): canada:", "      KEY(4): montreal: poutine", "      KEY(4): vancouver:", "        RAW(6): salmon", "  KEY(0): moon:", "      KEY(2): moonbase-alfa:", "      RAW(4): moonstone", "      RAW(-1):" )
11269	Assert. assertArrayEquals ( "original array not equals compress/decompressed array", result, bytes )
11270	assertThat ( status, equalTo ( GGDataSource. Status. OK ) )
11271	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "xfdfWithFieldsWithValue.pdf", sourceFolder + "cmp_xfdfWithFieldsWithValue.pdf", destinationFolder, "diff_" ) )
11272	assertEquals ( "true", result. getResource ( 0 ). getContent ( ). toString ( ) )
11273	assertThat ( count, is ( 1L ) )
11274	assertEquals ( 3, possibleOutcomes. size ( ) )
11275	assertEquals ( expectedExperimentContents, testExperimentResults. getExperiments ( ) )
11276	assertNotNull ( result )
11277	assertForbiddenResponse ( response )
11278	assertTrue ( true )
11279	assertArray2dEquals ( expecteds, actuals )
11280	assertEquals ( expected, uri. toString ( ) )
11281	assertTrue (! result. equals ( recessive ) )
11282	assertEquals ( lines - 1, results )
11283	assertTrue ( ndefMessage. getNdefRecords ( ). length == 0 )
11284	assertThatNothingHappened ( jobExecution, lastCreatedJobId, 1 )
11285	assertEquals ( "Wrong result", value, interpolator. interpolate ( value ) )
11286	assertTrue ( all. size ( ) > 0 )
11287	Assert. assertEquals ( 1, dependences. size ( ) )
11288	assertEquals ( "Colors: [RED, BLACK, YELLOW]\\n", builder. toString ( ) )
11289	assertMatch ( strategyConfiguration, strategy )
11290	assertFalse ( node. equals ( new Object ( ) ) )
11291	assertThat ( testResponse, is ( expectedResponse ) )
11292	assertTrue ( o. description ( ). startsWith ( "(overridden) " + "<j_org_robovm_objc_CustomClassTest$SubClass1: 0x" ) )
11293	assertEquals ( "File contents should be escaped", escapedFilename, response )
11294	assertEquals ( 0, client. getLeadership ( ) )
11295	assertEquals ( BAD_REQUEST_400, response. getStatus ( ) )
11296	assertEquals ( 5, calculator. getResult ( ) )
11297	assertSuccessOrCancelled ( response )
11298	assertXMLIdentical ( new Diff ( result, combineWithIdKey ( recessive, dominant ) ), true )
11299	assertNull ( res )
11300	assertEquals ( "{key:value,key2:value2}", target. toString ( ) )
11301	assertThat ( resultedQuery, is ( expectedQuery ) )
11302	assertNotNull ( "Clinical data is not null for ID", clinicalData )
11303	Assert. assertNull ( alertMessage )
11304	assertEquals ( new Rectangle ( 0, - 1, 10, 100 ), pos )
11305	assertTrue ( r1 instanceof PublicCloneable )
11306	assertTrue ( raises )
11307	assertEquals ( "cast('2003-12-31' AS date)", helpGetString ( func ) )
11308	assertEquals ( 400, r. getStatus ( ) )
11309	assertEquals ( "select a~", result )
11310	assertEquals ( 1, in. getByteCount ( ), 0L )
11311	assertNotNull ( book. getId ( ) )
11312	Assert. assertNotNull ( testSession )
11313	assertArrayEquals ( new long [ ] { 2 }, result )
11314	Assert. assertEquals ( 3, vertices. size ( ) )
11315	assertTrue ( map. containsKey ( JSR166TestCase. six ) )
11316	assertThat ( config. isCacheGzippedContent ( ), is ( false ) )
11317	assertOut ( "/**\\n * @private\\n * @type {boolean}\\n */\\nRoyaleTest_A.prototype.foo" )
11318	assertEquals ( 0, buildIds. size ( ) )
11319	Assert. assertEquals ( "There is no item here.", responseResult. getText ( ) )
11320	assertEquals ( "a thousand", mapValue. getValue ( ) )
11321	assertThat ( "getValue", node. getValue ( ), is ( 2147483647 ) )
11322	assertEquals ( relationship1, lookedUpRelationship )
11323	assertEquals ( "foo", classifier. classify ( new Foo ( ) ) )
11324	assertEquals ( expecting, found )
11325	assertEquals ( Result. PASS, type. apply ( item ) )
11326	assertEquals ( 1, testList. size ( ) )
11327	Assert. assertNotNull ( selfInjected )
11328	assertEquals ( "3 啶�啶苦く啷�", t. format ( new Date ( 0 ) ) )
11329	assertEquals ( sampleIn. removeCastToSameType ( oi ), sampleOut. removeCastToSameType ( oi ) )
11330	assertThat ( ebRec. getValue ( ), is ( ( Object ) "encrypted:bar" ) )
11331	Assert. assertEquals ( otfLength, reparsedFont. header. totalSfntSize )
11332	assertMockEndpointsSatisfied ( )
11333	assertEquals ( 200, page. getWebResponse ( ). getStatusCode ( ) )
11334	assertThrows ( InvalidMethodSignatureException. class, ( ) -> new JavaParameterTypeDefinition ( "", "(.*)", method, false, false, false, lookup ) )
11335	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
11336	assertEquals ( expected, sb. toString ( ) )
11337	assertTrue ( "Returned object should be a SynchronizedBag.", bag instanceof SynchronizedBag )
11338	assertThat ( target. onConnectionChangedAddedPre ( msg ), is ( false ) )
11339	assertThat ( res. toString ( ), is ( equalTo ( "My friend Rokko is 30 years old." ) ) )
11340	Assert. assertEquals ( "25", person. getFieldValues ( "services" ). get ( 0 ). getId ( ) )
11341	assertDepth ( "addLevel", callTree, expectResult )
11342	assertThat ( "Event did not return correct user id", listener. getEvents ( ). get ( 0 ). getUserId ( ), is ( "node1" ) )
11343	assertTrue ( unitOfWork. canCheckExistence ( 1, child ) )
11344	assertFalse ( validator. isValid ( resource, MetadataSection. BASIC_SECTION ) )
11345	assertEquals ( expectedAst, ast. dump ( "" ) )
11346	assertNotNull ( workflowSource )
11347	assertThat ( condition. isSatisfied ( ), is ( false ) )
11348	assertEquals ( 3.5d, prediction, 0.00001 )
11349	assertTrue ( a1. isZeroBased ( ) )
11350	assertEquals ( 1, targets. size ( ) )
11351	assertNotNull ( result )
11352	assertEquals ( "Incorrect total value", sum. getValue ( ), new Total ( BigDecimal. TEN, 4 ). getTotal ( ) )
11353	assertTrue ( pregame. before ( superBowlXLV ) )
11354	assertNotNull ( result )
11355	assertEquals ( expResult, result )
11356	assertTrue ( connectFuture. isConnected ( ) )
11357	assertEquals ( "SS:1234", x. toString ( ) )
11358	assertTrue ( uuid. length ( ) == urlToken. length ( ) )
11359	Assert. assertEquals ( "test", dataString )
11360	assertEquals ( 3, x )
11361	assertEquals ( allocateSize, key. getIds ( ). size ( ) )
11362	Assert. fail ( "testCreateSymlink - expected exception is not thrown" )
11363	Assert. assertFalse ( translateService. isTranslated ( field ) )
11364	assertEquals ( "a!b!c!xyz", sw. toString ( ) )
11365	assertArrayEquals ( expectedBytes, serializer. serialize ( ) )
11366	assertEquals ( 6, s )
11367	assertThat ( ontologyIds, containsInAnyOrder ( ontologyId ) )
11368	assertEquals ( "http://localhost/", httpEndpoint )
11369	assertEquals ( new String ( result ), "test parsed" )
11370	assertEquals ( "OK", response. getData ( ) )
11371	assertFalse ( problem )
11372	assertEquals ( AllergyStatus. NO_KNOWN_ALLERGIES, allergies. getStatus ( ) )
11373	assertTrue ( text. contains ( "Seam Reports Rocks" ) )
11374	assertEquals ( expectedValues, DurationsConverter. convertFromNanos ( input, MINUTES ) )
11375	assertEquals ( "parameters", parameters. toString ( ) )
11376	given ( ). param ( "foo", "bar1" ). when ( ). get ( "res/" ). then ( ). assertThat ( )
11377	Assert. assertTrue ( count == 0 || count == runs )
11378	Assert. assertFalse ( ValidationUtils. isNullOrEmpty ( os ) )
11379	assertThat ( expected, is ( notNullValue ( ) ) )
11380	assertNull ( outbound ( writeTarget ) )
11381	Assert. assertEquals ( "Donald Trump turn on the light", target_ )
11382	assertEquals ( domTreeEntry, domRpcEntry )
11383	Assert. assertEquals ( expected, actual )
11384	assertEquals ( "tR3+Ty81lMeYAr/Fid0kMTYa/WM=", signer. sign ( request, params ) )
11385	assertEquals ( "Incorrect string generated", String. format ( "%n    - Set bar to foo from ExampleData and OtherTable, joined on x is y and z is 1" ), HumanReadableStatementHelper. generateAliasedFieldAssignmentString ( field ) )
11386	assertDateEquals ( new DateTime ( 2013, 5, 20, 15, 0, 0, 0 ), date )
11387	assertEquals ( "The generated bytes should be equal", randomBoolean, bytes )
11388	assertEquals ( "SELECT @type as alias FROM C", q. toString ( ) )
11389	assertAllCommandsUsed ( )
11390	assertEquals ( "with_parent", result. getValue ( ) )
11391	assertNull ( fileOperationMap. getOperation ( operation. getPnfsId ( ) ) )
11392	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
11393	assertEquals ( 1024, cnt )
11394	assertEquals ( expectedQuery, query )
11395	assertThat ( result, is ( true ) )
11396	Assert. assertTrue ( pattern2. matcher ( employee. getName ( ) ). matches ( ) )
11397	assertThat ( actual, is ( Key. create ( CounterShardData. class, TEST_COUNTER_NAME, 1 ) ) )
11398	Assert. assertFalse ( rawClass. isArray ( ) )
11399	assertNull ( query. singleResult ( ) )
11400	Assert. assertEquals ( expected, tested. listRequestInit ( ) )
11401	assertSame ( "requestsCount", 1, ejbCounter. getRequestsCount ( ) )
11402	assertTrue ( client2MessageReceived. get ( ) == null )
11403	assertEquals ( DEFAULT_GRAPHITE_IPPORT, backendAlarm. getGraphiteBaseUrl ( ) )
11404	assertTrue ( Arrays. equals ( bytes, new byte [ size ] ) )
11405	assertEquals ( actualMimeType, expectedMimeType )
11406	assertEquals ( 3.0, costs, 0.01 )
11407	AssertionUtils. multiAssertEquals ( createAsDocument11, response7. getResponseObject ( ) )
11408	assertThat ( changeList. isEmpty ( ), is ( true ) )
11409	Assert. assertTrue ( returnedVisibilities. isEmpty ( ) )
11410	assertNotSupported ( result )
11411	assertEquals ( "numhits is wrong", 4160, res. getNumhits ( ). intValue ( ) )
11412	assertThat ( actual, is ( equalTo ( "NO_ARGUMENTS" ) ) )
11413	assertThat ( context. get ( "FOO" ), equalTo ( "BAR" ) )
11414	assertThat ( thrown, instanceOf ( TimeoutException. class ) )
11415	assertEquals ( 2, map. size ( ) )
11416	assertThat ( result, is ( new String [ ] [ ] { { "Hello\\nworld!" } } ) )
11417	assertEquals ( 17, count )
11418	assertTrue ( syn instanceof ReflectionMethodSynthesizer )
11419	assertEquals ( Status. BAD_REQUEST. getStatusCode ( ), argument. getValue ( ). getStatus ( ) )
11420	Assert. assertEquals ( "SELECT 10 IS TRUE;", text )
11421	assertEquals ( 1.0 / 3, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
11422	assertTrue ( humanName. hasGiven ( "test" ) )
11423	assertEquals ( 900, subject. getMinimumDisplayTime ( ). get ( ). intValue ( ) )
11424	Assert. assertEquals ( expected, actual )
11425	assertEquals ( "leading date grid position must return null date", null, ui. getDayInMonth ( month, BasicMonthViewUI. SECOND_WEEK_ROW, BasicMonthViewUI. SECOND_DAY_COLUMN ) )
11426	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><alice>bob</alice>", result. toString ( ) )
11427	assertThat ( catResult. getIndices ( ), hasSize ( 2 ) )
11428	assertEquals ( "", result )
11429	assertEqArgumentGeneratesXPath ( 2, eqNegative2XPathExpression )
11430	assertEquals ( "quantile() did not produce correct result", 0.0, actual, 0.001 )
11431	assertEquals ( null, objmap. get ( "field_pub" ) )
11432	assertEquals ( "(LIST<W> a<V> b<V> c<V>)\\n", found )
11433	assertEquals ( "DressageEquipment_Pony", relationshipTemplate. getProperties ( ). getKVProperties ( ). get ( "Driver" ) )
11434	assertEquals ( "test", form. postFormBean ( text ) )
11435	assertEquals ( "Test message", writer. toString ( ) )
11436	Assert. fail ( "Test encountered an unexpected exception." )
11437	Assert. assertTrue ( received )
11438	assertThat ( subjectOf ( axiom ), isOptionalOf ( individual ) )
11439	assertSuccess ( taskAfter. getResult ( ) )
11440	Assert. assertEquals ( "Cluster name should be unique", clusterTbl. getClusterName ( ), newCluster. getClusterName ( ) )
11441	assertEquals ( 1, x )
11442	assertEquals ( expected, actual )
11443	assertNotNull ( expectedRequester )
11444	assertEquals ( "[message: hello0, message: hello1]", broadcasts. toString ( ) )
11445	assertResponse ( outputStream, expected )
11446	assertFalse ( features. isPresent ( ) )
11447	assertArrayEquals ( new byte [ ] { 1, 2, 3 }, received )
11448	assertEquals ( getMessage ( MessageKeys. ERROR ), driver. findElement ( By. id ( "errorMsg" ) ). getText ( ) )
11449	assertThat ( output. readValuesToList ( ), equalTo ( expectedValues ) )
11450	assertEquals ( expected, response )
11451	Assert. assertEquals ( "The remote address", remoteAddress, gmx. getProperty ( "remoteAddress" ) )
11452	assertThat ( d. getScope ( ), equalTo ( "s" ) )
11453	Assert. fail ( "MgmtOperationException should have been thrown" )
11454	assertEquals ( TemporalType. DATE, attributeDesc. getTemporalType ( ) )
11455	assertTrue ( features. noneMatch ( f -> f. isBlacklisted ( ) ) )
11456	assertEquals ( "https://image.eveonline.com/Type/22436_32.png", urlString )
11457	Assert. assertEquals ( "/houses?query=Ask something&test2=someting else&thing=A test", uri )
11458	assertNotNull ( person )
11459	assertEquals ( json. toString ( ), sc. schemaConfAsJSON ( ) )
11460	assertEquals ( BINARY_CONTENT, result )
11461	assertEquals ( 1, col. count ( ) )
11462	assertThat ( result, is ( notNullValue ( ) ) )
11463	assertEquals ( componentName, "${componentIconKey}" )
11464	assertEquals ( 0777, mode. intValue ( ) )
11465	assertDefaultAccept ( filter )
11466	assertEquals ( "https://login.microsoftonline.com/", config. getSite ( ) )
11467	assertThat ( PlainTime. axis ( ). getBaseUnit ( MILLI_OF_DAY ), is ( unit ) )
11468	assertTrue ( isVisibleForModerator )
11469	assertNotNull ( result )
11470	assertTrue ( true )
11471	Assert. assertEquals ( "f1:2.5", ret. toString ( ) )
11472	assertEquals ( ClusterType. STAND_ALONE, myTestFactory. getClusterType ( ) )
11473	assertThat ( "testGpValue", is ( functions. globalProperty ( "testGpName", "" ) ) )
11474	assertEquals ( "\\n<p>This is <strong>bold</strong>!</p>\\n", html )
11475	assertTrue ( Files. exists ( tmpFile ) )
11476	assertTrue ( descriptor. isStarttlsEnabled ( ) )
11477	assertTrue ( mConfiguration. getBoolean ( PropertyKey. WEB_THREADS ) )
11478	assertFalse ( entity. isValid ( ) )
11479	assertEquals ( HttpStatusCode. NOT_FOUND_404, response. getStatus ( ) )
11480	assertEquals ( "http://schema.org/Recipe", microdata. getType ( ) )
11481	assertEquals ( expectedChildOrganizationProfile, resultantProfile )
11482	assertEquals ( SearchResponseContextHandler. class, h. getClass ( ) )
11483	assertEquals ( "DoubleIt isn't working with negative numbers", - 16, response )
11484	assertTrue ( "Stream contains data", stream. size ( ) > 10 )
11485	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, testName + "_diff" ) )
11486	assertEquals ( expectedRate, rate, 0.0001 )
11487	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getAllPrivileges ( set ( "jranalyst" ), ActiveRoleSet. ALL ) ). toString ( ) )
11488	assertArrayEquals ( new float [ ] { 0, 1, 2, 3, 4, 5, 6 }, StretchingUtils. stretch ( array ) )
11489	assertExtractEquals ( Lists. newArrayList ( "AAC:value AAC", "ABC:value ABC", "ACC:value ACC" ), extractor. extract ( result ) )
11490	runner. assertNotValid ( )
11491	assertEquals ( undefined1, undefined2 )
11492	assertEquals ( "http://test.com/abc", UrlUtils. escapeUrlBasic ( in ) )
11493	assertThat ( result, is ( "foo" ) )
11494	Assert. assertThat ( bufferCount, is ( 3L ) )
11495	assertThat ( "Initator methionine wrong", initMet. toString ( ), is ( "M" ) )
11496	assertEquals ( "say", response. getContent ( ) )
11497	assertTrue ( msg, c1. equals ( c2 ) )
11498	assertThat ( customer, sameInstance ( anotherCustomer ) )
11499	assertEquals ( "branch names not shortenen correctly", "loadrules", scm. getBranchNames ( ) )
11500	assertEquals ( 0, runnersAfter. size ( ) )
11501	assertTrue ( found )
11502	assertEquals ( 0, annotatedTypes. size ( ) )
11503	assertEquals ( "xsd:byte", prefixedName )
11504	assertTrue ( usl. getStrokeColor ( ) instanceof Color )
11505	assertEquals ( "47.5678", csvValues. get ( "lat" ) )
11506	assertTrue ( true )
11507	assertThat ( componentId, is ( equalTo ( "madeup" ) ) )
11508	assertTrue ( learned. isEquivalentTo ( given, ba ) )
11509	assertEquals ( 123, value )
11510	assertEquals ( input, results. get ( 0 ) )
11511	Assert. assertEquals ( "hux2", manipulation. getOldColumnName ( ) )
11512	assertTrue ( integrationApp. isOnTerminate ( ) )
11513	assertArrayEquals ( NOT_ENCODED, binary, encode ( object ) )
11514	assertEquals ( Json. pretty ( model ), "{" + NEWLINE + "  \\"properties\\" : {" + NEWLINE + "    \\"byteArray\\" : {" + NEWLINE + "      \\"type\\" : \\"array\\"," + NEWLINE + "      \\"items\\" : {" + NEWLINE + "        \\"type\\" : \\"string\\"," + NEWLINE + "        \\"format\\" : \\"binary\\"" + NEWLINE + "      }" + NEWLINE + "    }" + NEWLINE + "}" )
11515	assertEquals ( 4, numberOfLines )
11516	assertArrayEquals ( bytes, otherBytes )
11517	editor. assertProblems ( "build-it|should define 'branch'", "test-it|does not exist" )
11518	assertEquals ( "somedir", t. getMessage ( ) )
11519	assertTrue ( numberFour. isBefore ( newYearsDay ) )
11520	Assert. assertEquals ( cDate, eDate )
11521	assertEquals ( Arrays. asList ( new Property ( "foo", "baz" ) ), event. getTags ( ). keySet ( ) )
11522	assertEquals ( "currentContext fieldNoValueValidationError dynaProp fieldValidationError", classNameForPropertyInputField )
11523	assertions. isNotLessThan ( null )
11524	Assert. assertTrue ( sdk. getAaptPath ( )!= null &&! sdk. getAaptPath ( ). equals ( "" ) )
11525	assertEquals ( HttpStatus. SC_BAD_REQUEST, response. getStatus ( ) )
11526	assertTrue ( bundle. exists ( ) )
11527	assertEquals ( Collections. emptyList ( ), group. getValue ( ) )
11528	assertTrue ( filter. shouldInclude ( source, "some.property" ) )
11529	assertEquals ( FleetSize. FINITE, vrp. getFleetSize ( ) )
11530	assertEquals ( 100, counter. get ( ) )
11531	assertEquals ( expected, authorizables. mergeAuthorizations ( authorizables ) )
11532	assertFalse ( actualResult )
11533	assertCapturedMessage ( eventMessage ( "sess1", "/foo/1", "message1" ), eventMessage ( "sess2", "/foo/middle/1", "message2" ), eventMessage ( "sess1", "/foo/test/1", "message3" ), eventMessage ( "sess2", "/foo/middle/test/1", "message4" ) )
11534	assertDataFrame ( frame, streamId, false, Unpooled. EMPTY_BUFFER )
11535	assertEquals ( fileSize, fileSizeActual )
11536	assertThat ( actual, is ( "2015-05-01 12:31:49.000" ) )
11537	assertEquals ( expected, result )
11538	assertTrue ( bodyTypeAdapter instanceof JSONBodyTypeAdapter )
11539	assertTrue ( foundMethods!= null && foundMethods. size ( ) == 4 )
11540	assertFalse ( credentials. isPresent ( ) )
11541	assertEquals ( max, fs. getBootSector ( ). getRootDirEntryCount ( ) )
11542	Assert. assertNotNull ( "null result", result )
11543	assertNull ( request. getAttribute ( HTTP_SERVER_SPAN_ATTRIBUTE ) )
11544	Assert. assertEquals ( 0., analyser. getWaitingTimeAtActivity ( route. getEnd ( ), route ), 0.01 )
11545	assertTrue ( closed. await ( 2, SECONDS ) )
11546	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Prompt>" + "<Say language=\\"arb\\" loop=\\"1\\" voice=\\"man\\">message</Say>" + "<Pause length=\\"1\\"/>" + "<Play digits=\\"digits\\" loop=\\"1\\">https://example.com</Play>" + "</Prompt>", elem. toXml ( ) )
11547	assertEquals ( "{\\"from\\":1,\\"to\\":2}", json )
11548	assertThat ( result. statusCode, is ( Response. OK ) )
11549	assertFalse ( matcher. match ( msg, rule ) )
11550	Assert. assertEquals ( "OK", result )
11551	assertEquals ( "", sw. toString ( ) )
11552	assertTrue ( fp. equals ( con ) )
11553	assertThat ( indexPage. nameRadioButtons. getSelectedValue ( ). get ( ), is ( "2" ) )
11554	Truth. assertThat ( protoBuf )
11555	assertTrue ( wlsClusterConfig. checkUpdateDynamicClusterSizeJsonResult ( "1" ) )
11556	assertResponse ( DataMockery. createRESMODWithGetRequestWithoutBody ( ), request )
11557	assertTrue ( output. startsWith ( "<!DOCTYPE HTML PUBLIC \\"-//W3C//DTD XHTML 1.0 Strict//EN\\" \\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\">" ) )
11558	assertEquals ( expectedJsonObject, model. getJsonObject ( ) )
11559	assertEquals ( expectedRandom ( ), result )
11560	assertThat ( userStoryClass. getName ( ), is ( MyUserStories. DoingSomethingElse. class. getName ( ) ) )
11561	assertEquals ( "modulusBits=" + modulusBits, nBits, MachineArithmetic. modulus ( modulusBits ) )
11562	assertNotNull ( "Social Followers (JSON STRING)", friends )
11563	assertSuccess ( validationResult )
11564	assertEquals ( "AutomationJobRegion [region=AAAAA_1, users=[]]", result )
11565	Truth. assertThat ( callable. call ( 1 ) )
11566	assertNull ( entry. getName ( ) )
11567	assertEquals ( 9873298999999L, w. getFirstMillisecond ( calendar ) )
11568	assertTrue ( sqlString. contains ( "asc" ) )
11569	assertIsSatisfied ( 2L, TimeUnit. SECONDS, defaultOutbound )
11570	assertEquals ( expected, e. evaluate ( ), 0.0 )
11571	assertEquals ( g1, g2 )
11572	Assert. assertNotNull ( signature )
11573	assertThat ( domainTopology. getServerConfig ( serverName ). isAdminPortSecure ( ), is ( true ) )
11574	assertTrue ( _comp. isEquals ( json, expected ) )
11575	assertEquals ( 1, branch_conditions. size ( ) )
11576	arrays. assertHasSize ( description, null, 8 )
11577	assertThat ( actual, containsString ( "\\"uuid:\\"urn:uuid:42795ed8-041f-4ebf-b6f4-78ef6f64c2f2\\"" ) )
11578	assertEquals ( firefoxDriver, defaultDriver )
11579	assertEquals ( "Expected " + key, expected, result )
11580	assertEquals ( 4, result. getProperties ( ). size ( ) )
11581	assertTrue ( "Empty job should work", success )
11582	assertNoTaint ( arrayData [ calculateIndex ( ) ] )
11583	assertEquals ( 0, ranges. size ( ) )
11584	Assert. assertEquals ( "�����宸ュぇ瀛�", words )
11585	assertNotNull ( "CorporationDepartment is null", entity )
11586	assertComparisonFailure ( "Fichier produit en erreur : " + toFilePath ( "FileAssertWithAlignmentStyle_expected.xls" ) )
11587	assertTrue ( true )
11588	assertEquals ( "Patch", book. getName ( ) )
11589	assertThat ( errors, hasSize ( 1 ) )
11590	assertEquals ( ImmutableList. of ( "g", "h" ), namespaces )
11591	assertion. satisfies ( "has wings" )
11592	assertEquals ( notNull, presentSerializable. asOptional ( ). get ( ) )
11593	assertThat ( consoleStepListener. toString ( ), is ( expectedSteps ) )
11594	assertEquals ( expected, query. export ( ) )
11595	assertValueEqualsResultSet ( rs, Arrays. < Object > asList ( ROW2, ROW4 ) )
11596	assertSame ( url2, url1 )
11597	assertEquals ( 1, bindings. size ( ) )
11598	assertEquals ( "?a=b+c&d=e", qs. toQueryString ( ) )
11599	Assert. assertArrayEquals ( new byte [ ] { ( byte ) 0xa4, ( byte ) 0xee, ( byte ) 0xba, ( byte ) 0x8e, 0x63, 0x3d, 0x77, ( byte ) 0x88, 0x69, ( byte ) 0xf5, 0x68, ( byte ) 0xd0, 0x5a, 0x1b, 0x3d, ( byte ) 0xc7, 0x2b, ( byte ) 0xfd, 0x4, ( byte ) 0xdd }, r )
11600	assertEquals ( o, null )
11601	Assert. assertFalse ( this. manager. disconnect ( this. family1, this. person1 ) )
11602	assertEquals ( "Swedish", lt. check ( "I can give you more a detailed description." ) )
11603	assertTrue ( facet1. equals ( facet2 ) )
11604	assertEquals ( propertyValue, p. getValue ( ) )
11605	assertEquals ( EXPECTED_PLAN_DETAILS_PATH, path )
11606	Assert. assertNull ( actual )
11607	Assert. assertEquals ( 1, SimpleClass. class. getDeclaredFields ( ). length )
11608	assertThat ( result, equalTo ( false ) )
11609	assertEquals ( "foo=le=2011-03-02", ret )
11610	assertEquals ( "certificate1", auth. getCertificate ( ) )
11611	Assert. assertThat ( dump, equalTo ( "UnionTypeExpressionNode: user | cat[] | hamster | fish (Start: 8, End: 20, On: [artificial node])\\n" + "    NamedTypeExpressionNode cat -> {null} (Start: 7, End: 13, On: [artificial node])\\n" + "        LibraryRefNode h -> {null} (Start: 15, End: 20, On: [artificial node])\\n" + "        LibraryRefNode f -> {null} (Start: 16, End: 20, On: [artificial node])" ) )
11612	assertFalse ( x. equals ( y ) )
11613	assertEquals ( expected, query. export ( ) )
11614	assertAnnotations ( 2, Coordinate. class, new TestCoordinate ( 1, "TF4-56", "tf789", "{\\"type\\": \\"Point\\", \\"coordinates\\": [-5.004712,56.794800]}" ), new TestCoordinate ( 0, "TF 789", "tf4-56", "{\\"type\\": \\"Point\\", \\"coordinates\\": [-5.004712,56.794800]}" ) )
11615	assertThat ( estimator. estimate ( renderingContext ), equalTo ( 0.5f ) )
11616	assertEquals ( TEST_OUTPUT, convertedString )
11617	assertThat ( revisions, contains ( revision ) )
11618	assertNotNull ( oInstance )
11619	assertTrue ( true )
11620	assertEquals ( expectedValue, result )
11621	assertNotNull ( user )
11622	Assert. assertThat ( result, is ( testResult ) )
11623	assertTrue ( tt2 == tt )
11624	Assert. assertArrayEquals ( new byte [ ] { 0, 0, 0, 't', 'e','s', 't' }, result )
11625	assertPostFails ( "3", role, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
11626	Assert. assertEquals ( responseBean, userBean )
11627	Assert. assertTrue ( pss. toString ( ). contains ( "123" ) )
11628	assertEquals ( whereClause, Deencapsulation. getField ( querySpecificationBuilder, "where" ) )
11629	assertEquals ( expected, actual )
11630	assertEquals ( "<h2>A Headline</h2>", html )
11631	assertSame ( connection, incrementPoolOnTimeoutConnectionAcquiringStrategy. getConnection ( connectionRequestContext ) )
11632	assertEquals ( true, result. getResults ( ). iterator ( ). hasNext ( ) )
11633	assertEquals ( expResult, result )
11634	assertEquals ( outputDocuments, inputDocuments )
11635	assertThat ( unmarshalEmbedded ( sb ), hasEntry ( "some key", "some value" ) )
11636	assertEquals ( expected, testVertex. getKey ( ) )
11637	assertEquals ( "(34 55)\\n", found )
11638	assertEquals ( 3, violations. size ( ) )
11639	assertEquals ( "<body>&x=</body>", result )
11640	assertEquals ( 2, ary. length )
11641	assertEquals ( this, vRef )
11642	assertNotNull ( exchangeAdapter )
11643	Assert. assertEquals ( String. format ( "a %s text", this. html ( bb, "10", "sized" ) ), formatter. format ( "a [size=\\"10]sized[/size] text", defaultOptions ( ) ) )
11644	assertEquals ( "d3e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8
11645	assertEquals ( "Hitpoints(99)", screenshotPlugin. parseLevelUpWidget ( LEVEL_UP_LEVEL ) )
11646	Assert. assertTrue ( testPackage. getPackage ( ). contains ( "Workflow" ) )
11647	assertThat ( getEntityBody, is ( "something" ) )
11648	assertTrue ( result. length ( ) > 0 )
11649	assertEquals ( Deencapsulation. getField ( twinCollection, "name" ), "TwinCollection[name=" + Deencapsulation. getField ( twinCollection, "name" ) + "]" )
11650	assertEquals ( expected, response. getValue ( ) )
11651	assertEquals ( "The location[0] key does not exist in JavaScript object!", result. get ( RETURN_RESULT ) )
11652	assertEquals ( "Skipped I_S columns", 0, skipped )
11653	assertPoint ( 40, 0, change )
11654	Assert. assertEquals ( expected, actual )
11655	assertEquals ( "", toml. getString ( "a" ) )
11656	Assert. assertEquals ( "SELECT * WHERE { \\"with? mark\\" \\"http://predicate\\" \\"test\\". }", query. toString ( ) )
11657	assertTrue ( result < 0 )
11658	Assert. assertEquals ( codigoEvento, infoEventoManifestacaoDestinatario. getCodigoEvento ( ) )
11659	assertEquals ( expected, actual )
11660	assertEquals ( - 1, result )
11661	assertTrue ( rec_cnt == 3 )
11662	assertEquals ( sc, actualConfig. getSamplerConfiguration ( ) )
11663	assertEquals ( 1, ksession. fireAllRules ( ) )
11664	assertEquals ( "geom", ( dump ( ( Node ) r. get ( "node" ) ) ). getProperty ( "layer" ) )
11665	Assert. assertTrue ( Arrays. equals ( entry. getBytes ( ), fmt. toBytes ( e ) ) )
11666	assertThat ( mimetype, is ( "application/octet-stream" ) )
11667	assertEquals ( "Hello Camel in action", reply )
11668	assertEquals ( 0.3990f, new TruncateDecimal ( ). exec ( tuple ) )
11669	assertEquals ( HttpStatusCodes. FOUND, response. getStatus ( ) )
11670	assertions. isNotLessThan ( expected )
11671	Assert. assertEquals ( "foo", hdfsWriter. getOpenedFilePath ( ) )
11672	assertThat ( resp. getStatus ( ), equalTo ( 200 ) )
11673	assertEquals ( 0, callable. call ( ) )
11674	assertThat ( concat, is ( equalTo ( denyAll ) ) )
11675	assertEquals ( expected, result )
11676	assertEquals ( ReadConcern. DEFAULT, parsedReadConcern )
11677	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getPermissions ( authorizables, list ( "jranalyst" ) ). values ( ) ). toString ( ) )
11678	assertToStringJoinEquals ( "", "", "" )
11679	assertEquals ( "10.0.0.1", address. getGlobal ( ) )
11680	Assert. assertEquals ( 20, result )
11681	assertEquals ( "1984.", map. get ( "Date of manufacture" ). get ( 0 ) )
11682	assertEquals ( new JsonObject ( "{ \\"foo\\": \\"bar\\"}" ), event. getBodyAsJson ( ) )
11683	assertThat ( result, contains ( "ABC", "EDF" ) )
11684	assertEquals ( "New Album", itemClient. getItem ( createdAlbumId ). getEntity ( ). getTitle ( ) )
11685	assertEquals ( CUSTOMER_XML, context. process ( exchange ) )
11686	assertEquals ( newLat, config. getProperty ( "locaiton.lat" ) )
11687	Assert. assertTrue ( "Optimal coverage not reached: " + best_fitness, best_fitness == 0.0 )
11688	assertEquals ( MathUtil. max ( 2, 3 ), MathUtil. max ( 2, 3 ) )
11689	assertTrue ( Arrays. equals ( message. toByteArray ( ), message2. toByteArray ( ) ) )
11690	Assert. assertFalse ( channel. isOpen ( ) )
11691	assertArrayEquals ( document. keySet ( ). toArray ( ), new Object [ ] { KEY1 } )
11692	Assert. assertTrue ( "Item was stale", item. isStale ( now ) )
11693	assertNull ( preferences. getIntValue ( "0" ) )
11694	assertBundleEvent ( BundleEvent. STARTED, "org.knowhowlab.osgi.testing.it.test.bundle", 5, TimeUnit. SECONDS )
11695	assertEquals ( "value", keyInfo. getKey ( ) )
11696	assertTrue ( "Graphs not isomorphic", isomorphic ( graphName, m ) )
11697	assertEquals ( "Hello World\\n", bytes. parseUtf8 ( CONTROL_STOP ) )
11698	Assert. assertEquals ( "ApplicationReport.status", appReport. getStatus ( ) )
11699	assertSame ( filter, derive ( filter, "g:a:1" ) )
11700	assertEquals ( Collections. singleton ( TestEnum. ONE ), select. getSelectedItems ( ) )
11701	assertEquals ( "Test book names", Collections. singletonList ( "Test book" ), bookNames )
11702	assertEquals ( expected, authorizations. downgrade ( authorizations ) )
11703	assertException ( "FEEL-01015", "''", "< ''", "'camunda'", "< 'camunda'", "false", "< true", "'12'", "< '12'", "\\"12\\"", "< \\"12\\"" )
11704	assertEquals ( t, Util. getExceptionThrows ( t ) )
11705	Assert. assertEquals ( 2, result. length ( ) )
11706	assertThat ( referenceSet. getOntologyAnnotations ( ), hasItem ( ontologyAnnotation ) )
11707	assertThat ( target. onNodeDeletePre ( ORIGINAL_NW_ID, node1 ), is ( false ) )
11708	assertFalse ( accepted )
11709	assertTrue ( versionFileApp. exists ( ) )
11710	tester. assertEquals ( expected, actual )
11711	assertThat ( indexPage. checkbox. isChecked ( ), is ( true ) )
11712	assertEquals ( newx, result, 0.01 )
11713	assertNotNull ( r. createRuleUnitDescription ( fooBar ) )
11714	Assert. assertEquals ( " INSERT INTO t_pet (petId, name) ", sql )
11715	assertFalse ( routeSpecification. isSatisfiedBy ( itinerary ) )
11716	assertEquals ( asList ( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
11717	assertThat ( existingName, is ( "camelcasefxml.fxml" ) )
11718	assertThat ( response, containsString ( "invalid range: Not within 1-1" ) )
11719	Assert. assertTrue ( result )
11720	assertEquals ( createdVarNb, assignedVars. size ( ) )
11721	assertEquals ( "foo", s )
11722	assertEquals ( 1, resultComparator. compare ( ind1, ind2 ) )
11723	assertNotNull ( metadata )
11724	Assert. assertFalse ( result. isValid ( ) )
11725	assertThat ( path. toFile ( ), is ( new File ( baseDir, "info" ) ) )
11726	assertEquals ( "Hello World!", result )
11727	assertThat ( hierarchies, contains ( hierarchy ) )
11728	Assert. fail ( "IllegalArgumentException expected" )
11729	Assert. assertEquals ( string, parse ( string ) )
11730	assertEquals ( constraint. getValue ( ), "test" )
11731	assertEquals ( Dec10th2015, DateUtils. daysAfterWithoutTimeZone ( Dec11th2015, Dec10th2015 ) )
11732	assertTrue ( resultComparator. compare ( fd1, fd2 ) < 0 )
11733	assertEquals ( expected, this. fsParser. extractFlowspec ( entry. build ( ) ) )
11734	assertEquals ( 0, errorMessages. size ( ) )
11735	assertThat ( matcher. matches ( value ), is ( true ) )
11736	Assert. assertArrayEquals ( ENCODED_VALUE, byteOutputStream. toByteArray ( ) )
11737	assertEquals ( classification, factory. createClassification ( objectLibrary ) )
11738	Assert. fail ( "build listing failure" )
11739	assertEquals ( "Invalid expression", cronexpression, parse ( cronexpression ) )
11740	Assert. assertEquals ( "", json, ios. toJSON ( ) )
11741	assertNull ( localRuntime. getDataDomain ( ) )
11742	assertEquals ( ChangeLevel. NONE, parseAndRun ( "ALTER TABLE c DROP PRIMARY IF EXISTS x" ) )
11743	assertTrue ( feature. isEnabled ( configuration ) )
11744	Assert. assertEquals ( "concat('foo', fileNumber)", result )
11745	assertEquals ( 1.0, response, 0.0 )
11746	assertEquals ( "June", MONTHS_OF_YEAR_BACKWARDS [ 0 ] )
11747	assertTrue ( result. getErrors ( ). size ( ) > 0 )
11748	Assert. assertEquals ( "Parameter has different value than that specified", file, config. getLogging ( ). getFile ( ) )
11749	assertThat ( actualResult, is ( nullValue ( ) ) )
11750	assertTrue ( userAuthorizedToAccess )
11751	assertTrue ( validator. validate ( EntityNames. GRADE, grades ). containsAll ( grades ) )
11752	assertEquals ( new SimpleDateFormat ( "yyyy" ). format ( dt ), new SimpleDateFormat ( "yyyy" ). format ( dueDate ) )
11753	assertEquals ( 1, liveUdis1. size ( ) )
11754	assertNotNull ( tomcatProcessorQuery )
11755	assertEquals ( test. minMoves ( input ), 2 )
11756	assertEquals ( propertyClass, ComponentProperties. class )
11757	assertEquals ( expected, actual )
11758	assertThat ( widgetset, is ( "default" ) )
11759	assertEquals ( getExpectedSchemaAndValue ( OPTIONAL_INT32_SCHEMA, message, UNSIGNED_RESULT ), result )
11760	assertNotEquals ( searchScroll1, searchScroll2 )
11761	assertEquals ( 4, victim. tocNumberOfPages ( ) )
11762	assertTrue ( result )
11763	assertEquals ( SIGNED_PLAIN_JSON_DOCUMENT, producer. signPlainJsonDocument ( ) )
11764	assertEquals ( true, request. getPluginPDF ( ) )
11765	assertEquals ( 1, result. size ( ) )
11766	assertEquals ( windowSize * windowSize * windowSize, windowSize * windowSize * 2 )
11767	assertEquals ( addedTriples, triplesAfter - triplesBefore )
11768	assertArrayEquals ( bMessage, bEncrypted )
11769	assertTrue ( latch. await ( 4, SECONDS ) )
11770	Assert. assertThat ( this. mojo. schemaCompatibility, IsEqual. equalTo ( expectedVersions ) )
11771	Assert. assertTrue ( relationshipTypes. size ( ) == 2 )
11772	assertEquals ( "SpringBeanLifecycleTracker", "[setProperty, setMuleContext, springInitialize, start, stop, springDestroy]", springLT. getTracker ( ). toString ( ) )
11773	assertThat ( collections, containsInAnyOrder ( "test" ) )
11774	Assert. assertEquals ( 2, this. em ( ). getMetamodel ( ). getEntities ( ). size ( ) )
11775	assertThat ( fe, notNullValue ( ) )
11776	assertThat ( result. isHealthy ( ), is ( true ) )
11777	assertThat ( hours, equalTo ( EffortDuration. zero ( ) ) )
11778	assertNotNull ( result )
11779	Assert. assertNotNull ( connection. getNetworkTimeout ( ) )
11780	Assert. assertTrue ( result )
11781	Assert. assertEquals ( "P0DT2H30M59.0S", EwsUtilities. getTimeSpanToXSDuration ( timeSpan ) )
11782	assertFalse ( folder. isOpen ( ) )
11783	assertSearchYields ( index, "html=body", "a", "b" )
11784	assertThat ( statusCodeOf ( response ), is ( HttpServletResponse. SC_FORBIDDEN ) )
11785	Assert. assertEquals ( this. msg, entity1 )
11786	assertThat ( fmt. parse ( "20141000x" ), is ( PlainDate. of ( 2014, 10, 4 ) ) )
11787	Assert. assertEquals ( "associated", ap. getText ( ) )
11788	assertTrue ( "Logger not set", config. getLogger ( ) instanceof AbstractLogger )
11789	assertEquals ( f1. hashCode ( ), f2. hashCode ( ) )
11790	assertEquals ( response. asString ( ), FAILED, response. get ( OUTCOME ). asString ( ) )
11791	assertThat ( "sessionIds should not have the same prefix", sessionId1. regionMatches ( 0, sessionId2, 0, 30 ) )
11792	assertEquals ( expectedAffOrgPairs, affOrgPairs )
11793	assertEquals ( "/protected/res/documents/index.html?focus=contractId&caller=BLUE&referrer=/protected/res/my_contracts/index.html&fragment=/contractDetails/thing", affordance. toString ( ) )
11794	assertNotNull ( Trunk. reader ( ). read ( ) )
11795	assertSimpleTerm ( result, "term\\\\*", false, false )
11796	assertTrue ( getStdErr ( ). indexOf ( "WSI-BP-1.0 R2203" ) > - 1 )
11797	Assert. assertEquals ( "New York", updatedLocation. getName ( ) )
11798	assertTrue ( kept. contains ( new ItemStack ( ItemID. SHADOW_SWORD, 1 ) ) )
11799	assertTrue ( rendering. contains ( "<rights>" + rightsString + "</rights>" ) )
11800	assertSame ( target, object )
11801	assertEquals ( "abc", copy. getMapProperty ( ). get ( "ab" ) )
11802	assertE ( "�尖�尖�尖�尖�尖��" + "��      ��" + "��      ��" + "��      ��" + "��      ��" + "��      ��" + "��      ��" + "��      ��" + "��      ��" + "��      ��" + "��      ��" + "��      ��" + "��      ��" + "��
11803	Assert. assertEquals ( avulsa, notaInfo. getAvulsa ( ) )
11804	assertMethod ( methodParser, testCase. name, testCase. status, testCase. payload )
11805	assertEquals ( "Failed on iteration " + x, z1, z2 )
11806	assertFalse ( OAuthUtils. validateScopes ( requestScopes, registeredScopes, false ) )
11807	assertThat ( elementFacade. getText ( ), is ( "text" ) )
11808	assertNull ( TYPE_HANDLER. getResult ( rs, 1 ) )
11809	assertEquals ( buildValue ( i ), new String ( value. getBytes ( ), 0, value. getLength ( ) ) )
11810	Assert. assertEquals ( "2 ��� ��", t. format ( new Date ( new Date ( ). getTime ( ) - 6543990 ) ) )
11811	assertEquals ( 3, qr. rank ( ) )
11812	assertEquals ( 60, integer. getInteger ( ). intValue ( ) )
11813	assertEquals ( mimeType, op. getMimeType ( ) )
11814	assertNull ( client. lastBatch )
11815	assertNotNull ( "No node model", nodeModel )
11816	assertSame ( "wrapping renderer must use list's default on null", list. getListCellRenderer ( ), renderer )
11817	Assert. assertTrue ( isValid ( resp, FORMAT_JSON, true ), "Response is not valid" )
11818	assertEquals ( "msg", sut. getMessage ( ) )
11819	assertEquals ( "Should respond with 400", 400, responseContext. getStatus ( ) )
11820	assertEquals ( 6, index. size ( ) )
11821	assertEquals ( "2002-03-07T10:00:00", v1. withoutTimezone ( ). toString ( ) )
11822	assertEquals ( p1, p2 )
11823	assertTrue ( out. toString ( ). contains ( "Total size" ) )
11824	assertArrayEquals ( new byte [ ] { ( byte ) 0 }, value. asBytes ( ) )
11825	assertEquals ( obj. getDownloadURL ( ), obj. getLatest ( ) )
11826	Assert. assertEquals ( "0", result. getReturnCode ( ) )
11827	assertThat ( toUnqualifiedVersionlessIdValues ( myObservationDao. search ( map ) ), containsInAnyOrder ( toValues ( id1 ) ) )
11828	assertEquals ( true, result [ 0 ] )
11829	assertEquals ( "Hello, simple", baos. toString ( ) )
11830	assertThat ( response. getStatusLine ( ). getStatusCode ( ), is ( 418 ) )
11831	assertEquals ( numDocs, results. size ( ) )
11832	context. assertTrue ( event. succeeded ( ) )
11833	assertTrue ( "This test must runs without an error, because we can not guarantee that this test method run as first. " + res, true )
11834	assertThat ( generatedReportText, isSimilarTo ( expectedReport, "timestamp" ) )
11835	assertEquals ( reg. getSoftwareVersion ( ), reg2. getSoftwareVersion ( ) )
11836	assertThat ( jsonOutputStreamParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/jsonmarshallertest/testTimestamp.json" ) ) )
11837	assertTrue ( collection. size ( ) > 0 )
11838	assertEquals ( PATH, asset. name ( ) )
11839	arrays. assertContainsOnly ( description, new short [ 1 ], null )
11840	assertEquals ( "(foo void ;)\\n", found )
11841	assertTrue ( validator. validate ( EntityNames. STAFF, staffId ). equals ( staffId ) )
11842	assertEquals ( LocalDate. of ( 2004, 2, 5 ), test )
11843	assertFootersJoined ( )
11844	arrays. assertDoesNotContain ( someInfo ( ), actual, values )
11845	assertTrue ( shootist. callerSendsBye )
11846	assertGetCredentialsFailsWithAuthRequired ( setupDirectKerberosClient ( ), context, "Performing a 401 HTTP action" )
11847	assertEquals ( description, activity. getProperty ( PROPERTY_ACTIVITY_DESCRIPTION ) )
11848	assertEquals ( 1, figures. size ( ) )
11849	assertTrue ( veh1. getSkills ( ). containsSkill ( "skill2" ) )
11850	assertTrue ( result )
11851	assertThat ( url. toString ( ), is ( "http://localhost?a=b&path=c/" ) )
11852	Assert. assertEquals ( 720, result )
11853	assertNull ( lock )
11854	assertTrue ( keysMap. isValidKey ( getArtifact ( "test.group", "test", "1.1.1" ), null, null ) )
11855	assertSame ( "wrapping renderer must use combo's default on null", renderer. getDelegateRenderer ( ), combo. getWrappedRenderer ( ) )
11856	assertEquals ( "WIFI:S:some weird SSID;Authentication:WPA;P:aintNoSecret;H:true;", wifi. toString ( ) )
11857	assertions. endsWith ( sequence )
11858	assertThat ( sulfuras. getQuality ( ), is ( initialQuality + 3 ) )
11859	assertEquals ( "USPS", shipment. getCustomsInfo ( ) )
11860	assertEquals ( encoding, upload. getHeaderEncoding ( ) )
11861	assertTrue ( output. contains ( "OK" ) )
11862	assertTrue ( pox. getErrorMessage ( ). contains ( "body hash mismatch" ) )
11863	assertNull ( this. commandFacade. exists ( SwitchFullScreenCommand. class, "outKey" ) )
11864	assertEquals ( 1, classFileDefinitions. size ( ) )
11865	assertEquals ( "unsortable column must be unsorted", SortOrder. UNSORTED, table. getSortOrder ( 0 ) )
11866	assertThat ( set. size ( ), is ( 2 ) )
11867	assertEquals ( certSubject, certificateChain. get ( 0 ). getSubject ( ) )
11868	assertNull ( change )
11869	assertNotNull ( results )
11870	assertTrue ( true )
11871	Assert. assertEquals ( "should retrieve correct value", fieldValue, node. getValue ( ) )
11872	assertNotNull ( metricsFactory )
11873	assertEquals ( cache1, cache2 )
11874	assertTrue ( dbStarted )
11875	assertContentSame ( rs, rc, columnParam1 )
11876	assertEquals ( entities, loadedEntities )
11877	assertEquals ( expectedFilteredRecommendedItems, actualFilteredRecommendedItems )
11878	assertEquals ( "Task with ID 'ORIG' was not executed", ise. getMessage ( ) )
11879	assertEquals ( instance, instance. getChild ( ) )
11880	assertEquals ( null, Iter. last ( iter, filter ) )
11881	assertThat ( result, equalTo ( "/path?query" ) )
11882	assertEquals ( expected, statement. toString ( ) )
11883	assertTrue ( comp. disposed )
11884	AssertUtil. assertSuccess ( serviceResponse )
11885	assertEquals ( "1 millisekunti sitten", t. format ( new Date ( 0 ) ) )
11886	assertTrue ( out. equals ( "F/12.987654321" ) )
11887	assertRequest ( "POST", "Conference/%s/Member/%s/Deaf/", confId, memberId )
11888	assertTrue ( SpriteUtils. isAliasSprite ( sprite1, sprite2 ) )
11889	assertEquals ( SortOrder. UNSORTED, controller. getSortOrder ( 0 ) )
11890	Assert. assertEquals ( "Unexpected result: " + result, expectedResult, result )
11891	assertNull ( textView. text ( ). get ( ) )
11892	assertThat ( searchResults. size ( ), is ( 1 ) )
11893	assertEquals ( "a=c", m. getHeader ( "cookie" ) )
11894	assertEquals ( rows - 1, sorter. convertRowIndexToView ( rows - 1 ) )
11895	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Pay action=\\"https://example.com\\" actionOnEmptyResult=\\"true\\" bargeIn=\\"true\\" debug=\\"true\\" statusCallback=\\"https://example.com\\" statusCallbackMethod=\\"GET\\" maxAttempts=\\"1\\" securityCode=\\"true\\" postalCode=\\"postal_code\\" minPostalCodeLength=\\"1\\" paymentConnector=\\"payment_connector\\" tokenType=\\"one_time\\" chargeAmount=\\"charge_amount\\" currency=\\"currency\\" description=\\"description\\" validCardTypes=\\"visa\\" language=\\"de-de\\"/>", elem. toXml ( ) )
11896	assertThat ( databaseGiven, is ( sameInstance ( database ) ) )
11897	assertEquals ( expected, actual )
11898	assertEquals ( expected, actual )
11899	assertThat ( address, not ( hasKey ( countryCode ) ) )
11900	Assert. assertTrue ( "Expected AES256 cipher suites, got null", resolved!= null && resolved. size ( )!= 0 )
11901	assertEquals ( origDatagrams [ testIdx ], d )
11902	Assert. assertNull ( retVxGroup )
11903	assertTrue ( v1. getSkills ( ). containsSkill ( "skill2" ) )
11904	assertEquals ( "starthere", opts. getScans ( ). get ( 0 ). getStartRow ( ) )
11905	assertFalse ( delegate. shouldBeDeleted ( ) )
11906	assertTrue ( html. contains ( "<script>alert(\\"Hello\\"" ) )
11907	assertEquals ( 0, ccs. size ( ) )
11908	assertEquals ( rs2, rs )
11909	assertEquals ( "2\\n", found )
11910	assertEquals ( ImmutableSet. of ( a. getGroup ( ) ), groups )
11911	assertPrehandle ( "methodFeatureTwo", false, METHOD_FEATURE_TWO_RESPONSE_STATUS )
11912	assertThat ( "getValue", node. getValue ( ), is ( true ) )
11913	assertEquals ( "A string with two expressions 4 set", handler. expandExpressions ( "A string with two expressions ${here} set", null ) )
11914	Assert. assertFalse ( graphUtil. hasCycle ( graph ) )
11915	assertEquals ( "The attribute value is changed.", expectedNewValue, pm. stringAttr. getValue ( ) )
11916	assertTrue ( err <.1 )
11917	assertThat ( resolved, is ( notNullValue ( ) ) )
11918	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "freeTextAnnotation01.pdf", sourceFolder + "cmp_freeTextAnnotation01.pdf", destinationFolder, "diff_" ) )
11919	assertEquals ( intList, ( ( List < Integer > ) r. get ( "list1" ) ). size ( ) )
11920	Assert. assertTrue ( aliceFoundFirst )
11921	assertEquals ( "_cat/indices?v=true", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
11922	assertEquals ( 126, templateCache. size ( ) )
11923	assertTrue ( ra. matches ( "([\\\\\\\\](([^\\\\\\"\\n\\r\\\\])|([\\\\\\\\][nrtf\\\\\\"\\\\\\\\])|([\\\\\\\\][x][0-9a-fA-F]{2})|([\\\\\\\\][u][0-9a-fA-F]{4})|([\\\\\\\\][U][0-9a-fA-F]{8}))*[\\\\\\"]" ) )
11924	assertThat ( description. toString ( ), is ( "x y z" ) )
11925	assertEquals ( iDataVeh2. getSelectedVehicle ( ), veh2. getSelectedVehicle ( ) )
11926	assertFalse ( item. isLazyLoaded ( ) )
11927	assertThat ( inputStream, notNullValue ( ) )
11928	assertThat ( taskService. createTaskQuery ( ). taskGroup ( "demo" ). count ( ), is ( 1L ) )
11929	assertEquals ( "val1", result )
11930	assertThat ( response. getPassword ( ), is ( "testpassword" ) )
11931	assertEquals ( "debug:My message with 3 parameters : 1, 2, 3", output )
11932	assertThat ( result, is ( true ) )
11933	assertEquals ( 0L, result )
11934	Assert. fail ( "expected IllegalArgumentException" )
11935	Assert. assertNotNull ( entity2 )
11936	assertThat ( result, isSuccessfulCommand ( ) )
11937	assertEquals ( 1.0, feasibilityRatio ( solutionList ), 0.00000000001 )
11938	Assert. assertNotNull ( victim. create ( ) )
11939	assertRightOrder ( nodes, results )
11940	Assert. assertEquals ( AccessValidator. DEVICE_WITH_REQUESTED_ID_NOT_FOUND, result )
11941	assertThat ( scoreDocs. length, is ( 3 ) )
11942	assertEquals ( new BigDecimal ( "29.959" ), entity. getN73 ( ) )
11943	Assert. assertEquals ( 0, trackable. skip ( 1 ) )
11944	Assert. assertEquals ( weightsSum, filter. getWeightsSum ( ) )
11945	assertHost ( "global-hosts", "myHost", "gatewayHost", "commandHost", "internalHost", "monitoringHost" )
11946	assertThat ( "getValue", node. getValue ( ), is ( "abc" ) )
11947	Assert. assertArrayEquals ( expected, actual )
11948	mockery. assertIsSatisfied ( )
11949	assertEquals ( "24", listPager. getPage ( ) )
11950	Assert. assertEquals ( uri1, uri2 )
11951	assertNull ( newTransports. poll ( ) )
11952	assertThat ( result, is ( jsonString ( "hello" ) ) )
11953	assertions. isLessThan ( new Short ( ( short ) 2 ) )
11954	assertFalse ( d. isUsingStatisticsManager ( ) )
11955	assertFalse ( violation )
11956	assertEquals ( "register", jsp )
11957	assertEquals ( "test", test )
11958	Assert. assertEquals ( expected, loc. getAccession ( ). getID ( ) )
11959	assertEquals ( "application/zip", dataSource. getContentType ( ) )
11960	Assert. assertEquals ( 0, errors. size ( ) )
11961	assertNotEquals ( first, second )
11962	assertFalse ( "Edits dir exists already - it shouldn't", fs. exists ( regionEdits ) )
11963	assertThat ( result. iterator ( ). next ( ). getString ( "value" ), is ( "myValue01" ) )
11964	Assert. assertEquals ( 403, response. getStatus ( ) )
11965	assertNotNull ( driver )
11966	Assert. assertFalse ( secure )
11967	assertOut ( "var /** @type {boolean} */ a = new Boolean(1)" )
11968	assertEquals ( expectedQuery, actualQuery )
11969	assertThat ( cut. apply ( hasText ), is ( true ) )
11970	assertEquals ( EXPECTED_STOPWORDS, stopwords )
11971	assertNotNull ( NonTerminal. IF_COMMAND. buildAbstractSyntaxTree ( tokenStream ) )
11972	assertEqualsJFiglet ( asciiArt )
11973	assertEquals ( Status. NOT_FOUND, response. getClientResponseStatus ( ) )
11974	assertTrue ( _comp. isEquals ( json, expected ) )
11975	assertTrue ( lines. contains ( "longest-mention: bill clinton" ) )
11976	assertThat ( formatter. number ( 1 ), is ( "1" ) )
11977	arrays. assertContainsOnly ( description, actual, null )
11978	assertTrue ( param2. getValue ( ). get ( 0 ) instanceof QueryParam )
11979	assertEquals ( "?p1=v1&p2=v2", query. toString ( ) )
11980	assertEquals ( nodeId, logicalNodeId )
11981	assertEquals ( RPCTransport. DEFAULT_MAX_RECV_FRAG, transport. getMaxRecvFrag ( ) )
11982	assertNotNull ( buildClientWithDefaults ( clientBuilder, "http://localhost" ) )
11983	assertEquals ( unfiltered, AuthorizationUtils. filterDeniedParams ( unfiltered ) )
11984	assertEquals ( testTxtContents, new String ( contents ) )
11985	assertThat ( baos. toString ( ), startsWith ( String. format ( "" + "0 Scenarios" + "%n" + "0 Steps" + "%n" + "1 Scenarios" + "%n" + "2 Steps" + "%n" + "3 Scenarios" + "%n" + "4 Steps" + "%n" + "6 Scenarios" + "%n" + "7 Steps" + "%n" + "6 Scenarios" + "%n" + "7 Steps" + "%n" + "6 Scenarios" + "%n" + "7 Skipped" + "%n" + "6 Scenarios" + "%n" + "7 Skipped" + "%n" + "6 Scenarios" + "%n" + "7 Skipped" + "%n" + "6 Scenarios" + "%n" + "7 Steps" + "%n" + "7 Skipped" + "%n" + "7 Skipped" + "%n" + "7 Skipped" + "%n" + "7 Skipped" ) ) )
11986	assertTrue ( sourceFolderKeys1. equals ( sourceFolderKeys2 ) )
11987	assertThat ( "There should be no tray matching anymore", trayMatchings. isEmpty ( ), is ( true ) )
11988	Assert. assertEquals ( 11, analyser. getLoadRightAfterActivity ( route. getActivities ( ). get ( 0 ), route ). get ( 0 ) )
11989	assertEquals ( expected, actual )
11990	assertTrue ( latch. await ( 10, TimeUnit. SECONDS ) )
11991	assertEquals ( "Base for floats is wrong", Integer. valueOf ( 3 ), parsed )
11992	assertThat ( allUsedBindings ( result ), containsInAnyOrder ( "$p" ) )
11993	assertThat ( max. get ( ), is ( "1" ) )
11994	assertThat ( threadOne. isEnded ( ), is ( true ) )
11995	assertEquals ( 0, data. length )
11996	assertTrue ( result. length ( ) > 0 )
11997	Assert. assertEquals ( "second", res. getStringData ( ) )
11998	assertThat ( options. getGlue ( ), is ( new GluePath ( "com.example" ) ) )
11999	assertEquals ( "Hello World", ECHO_THIS_IS_HANDY, executor. getStdoutOutput ( ) )
12000	assertFalse ( isAuthenticated )
12001	assertThat ( processor. process ( request ), is ( true ) )
12002	Assert. assertNull ( caixa )
12003	Assert. assertEquals ( expectedPortNoStrings [ i ], portNoString )
12004	assertNotNull ( result )
12005	assertFalse ( noneExistingFile. exists ( ) )
12006	assertEquals ( betweenness [ index2 ], 0.0 )
12007	assertEquals ( job. id, lastRecentJob. id )
12008	assertNull ( result )
12009	assertEquals ( String. valueOf ( '!' ), formatWithRecordSeparator. getRecordSeparator ( ) )
12010	assertEquals ( "windows", PlatformDetector. OS. getName ( ) )
12011	assertNull ( array )
12012	assertTrue ( file. exists ( ) )
12013	assertEquals ( 0, actual. size ( ) )
12014	assertEquals ( "Expected to pass", expected, actual )
12015	assertEquals ( "3 啶�啶苦く啷�", t. format ( new Date ( 0 ) ) )
12016	Assert. assertEquals ( "Testing € special. chars =also at the end =", toString ( bos. toByteArray ( ) ) )
12017	Assert. assertFalse ( MultiPathSupportUtil. isTableTypeSupported ( this. constraints, AFI_SAFI ) )
12018	assertEquals ( "http://localhost:8080", webApiClient. getWebApiUrl ( ) )
12019	assertEquals ( expected, result )
12020	assertTrue ( "All unread messages are marked as read.", unreadMessages. isEmpty ( ) )
12021	assertThat ( result, is ( nullValue ( ) ) )
12022	assertEquals ( "High-Performance Java Persistence", book. getTitle ( ) )
12023	assertThat ( finder. findPath ( start, end ), is ( empty ( ) ) )
12024	assertTrue ( "Shortcut was not removed", $ ( LabelElement. class ). first ( ). getText ( ). contains ( "A on" ) )
12025	assertTrue ( urlWithPath. equals ( urlString ) || urlWithPath1. equals ( urlString ) )
12026	assertNotNull ( ferp )
12027	assertTrue ( WroUtil. matchesUrl ( request, "wroApi/test" ) )
12028	assertEquals ( 2, subject. getMessages ( ). size ( ) )
12029	assertEquals ( "case " + Expressions. TRUE + " then new Object()", expr. execute ( ) )
12030	Assert. assertEquals ( 10, result. getResultSize ( ) )
12031	Assert. assertEquals ( null, actualValue )
12032	assertEquals ( "default-class-loader", uiClass. getClassLoader ( ) )
12033	assertEquals ( iterations, cryptor. getIteration ( ) )
12034	Assert. assertFalse ( this. manager. disconnect ( this. family1, this. person1 ) )
12035	MatcherAssert. assertThat ( PodHelper. isReady ( pod ), is ( true ) )
12036	assertEquals ( 2, myPm. minLen2. getMinLen ( ) )
12037	assertThat ( lines, is ( Arrays. asList ( "This is a long line that cannot fit on a single line and could be wrapped" ) ) )
12038	assertEquals ( Arrays. asList ( "setName", "customAction" ), events )
12039	assertTrue ( resultMessage ( res, PUT ), res. passedValidation ( ) )
12040	assertTrue ( true )
12041	assertNotNull ( response )
12042	assertEquals ( privilege, p )
12043	assertEquals ( "Wrong URL", file. getAbsoluteFile ( ), FileLocatorUtils. fileFromURL ( url ). getAbsoluteFile ( ) )
12044	assertEquals ( p1, p2 )
12045	Assert. fail ( )
12046	assertThat ( DateInterval. atomic ( date ). isEmpty ( ), is ( true ) )
12047	assertEquals ( "All received messages are correct.", 0, messageVerifier. getFailures ( ) )
12048	assertEquals ( BPResultType. FAIL, testResult. getResultType ( ) )
12049	assertThat ( result, is ( false ) )
12050	assertEquals ( sessionInfo. getIdentity ( ). getIdentifier ( ), username )
12051	assertEquals ( "VALUE_TO_TEST", rsp. getHeaderField ( HEADER ) )
12052	assertEquals ( "Expected another type of analyzer", NorwegianAnalyzer. class, analyzer. getClass ( ) )
12053	assertGalleries ( galleries )
12054	assertResult ( session )
12055	Assert. assertEquals ( "{\\"value\\":\\"test\\",\\"success\\":true}", json )
12056	Assert. assertFalse ( ContextClassLoaderBinder. isOjbLoadedClass ( ClassLoader. getSystemClassLoader ( ). getParent ( ), "test" ) )
12057	assertEquals ( 0, engineRule. getHistoryService ( ). createUserOperationLogQuery ( ). count ( ) )
12058	assertNull ( statusFail )
12059	assertOrder ( order, length, comparator )
12060	assertEquals ( HttpStatusCodes. OK. getStatusCode ( ), response. getStatusLine ( ). getStatusCode ( ) )
12061	assertEquals ( "function sample1 ()", functionLibrary. getFunctionLibraryScript ( ) )
12062	assertEquals ( "Count.getReplacementCommand", expected, actual )
12063	assertEquals ( "slf4j-api:1.7.21", files. get ( 0 ). getName ( ) )
12064	assertTrue ( encoded. indexOf ( "\\n" ) == encoded. lastIndexOf ( "\\n" ) )
12065	Assert. fail ( "Non-square matrix exception should have been thrown" )
12066	Assert. assertEquals ( 10, KafkaConsumerUtils. INSTANCE. getNumRead ( ) )
12067	assertFalse ( shouldVote )
12068	assertEquals ( future, underTest. doEventuallyCollectEmpty ( consumer, supplier ) )
12069	assertEquals ( "2\\n", found )
12070	Assert. assertEquals ( 11, patients. size ( ) )
12071	assertEquals ( VALID_BIC8_UPPERCASE, bic. toString ( ) )
12072	Assert. assertNotNull ( dateTime )
12073	files. assertHasDigest ( INFO, actual, digest, expected )
12074	Assert. assertEquals ( FileUtils. readFileToString ( file0, Charset. forName ( "UTF-8" ) ), expected )
12075	assertNotNull ( result )
12076	assertEquals ( 10, result )
12077	Assert. assertEquals ( "Incorrect default type", TabSetType. TAPSET, tabset. getType ( ) )
12078	assertNull ( removeFirst )
12079	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), hasEnvVar ( ITEM1, END_VALUE_1 ) )
12080	assertEquals ( "http://help.pentaho.com", spyAppConfigProperties. getHelpUrl ( ) )
12081	assertThat ( toolchain. execute ( "java", environmentVariables ), is ( nullValue ( ) ) )
12082	assertions. isNotLessThan ( expected )
12083	assertStat ( result )
12084	Assert. assertEquals ( "monkey", mAuthenticator. getAuthToken ( ) )
12085	assertEquals ( "/a/b/c", result. toString ( ) )
12086	assertEquals ( 0, numbers. size ( ) )
12087	assertEquals ( "Number of records in the file should be equal", 1, readCount )
12088	Assert. assertNull ( this. taskLogService. findByTaskDeploymentId ( taskDeploymentId ) )
12089	assertTypeEquals ( expected, actual )
12090	assertFalse ( "Permission denied", readAnalysisSubmissionPermission. isAllowed ( authentication, analysisSubmission ) )
12091	assertEquals ( expectedDatetime, strategy. getNextBusinessDay ( ldt ) )
12092	assertEquals ( "There should be 2 issues", 2, issues. size ( ) )
12093	editor. assertProblems ( "fooBarZor.enabled|Expecting a 'Boolean' node", "fooBarZor.enabled.subprop|Expecting a 'Boolean' node", "fooBarZor.enabled.subprop|Expecting a 'Boolean' node", "fooBarZor.enabled.subprop|Expecting a 'Boolean' node", "fooBarZor.enabled.subprop|Expecting a 'Boolean' node", "fooBarZor.enabled.subprop|Expecting a 'String' node" )
12094	assertEquals ( "https://server/articlepath/abc", underTest. provideLink ( "abc" ) )
12095	assertNull ( user )
12096	assertEquals ( 19L, maximum )
12097	assertEquals ( 0, expansion. getExpansion ( ). getContains ( ). size ( ) )
12098	assertNotNull ( Event. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "AEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
12099	Assert. assertEquals ( first, second )
12100	assertThat ( key. verify ( Algorithm. HMAC_SHA512, "hello1". getBytes ( UTF_8 ), sig ), is ( false ) )
12101	assertEquals ( expectedIDs, this. featureManager. getAllFeatureIds ( ) )
12102	assertTrue ( result. contains ( "Hello World!" ) )
12103	assertEquals ( 1, results. getUpdates ( ). size ( ) )
12104	Assert. fail ( e. getMessage ( ) )
12105	Assert. assertEquals ( 1.0d, n, 0.0 )
12106	Assert. assertEquals ( 3L, log. count ( ) )
12107	assertNull ( links )
12108	assertEquals ( expectedResult, result )
12109	Assert. assertEquals ( new Double ( - 1.0 ), _c. convert ( "-1.0" ) )
12110	assertEquals ( expected, elements )
12111	assertEquals ( Result. ERROR, source. validate ( container ). getStatus ( ) )
12112	Assert. assertTrue ( nodeService. nodeExists ( lb2, node2 ) )
12113	assertTrue ( rm instanceof TranslucentRepaintManager )
12114	assertTrue ( "Error config not empty", setUpErrorConfig ( ). isEmpty ( ) )
12115	assertEquals ( "jdbc:hive2://testhost:21050/;auth=ldap;ssl=true;trustStore=user;trustStorePassword=password", connectionString )
12116	assertEquals ( 0.0, diff. getValue ( HB_METERS ), 500 )
12117	Assert. assertEquals ( rtpPacket. getVersion ( ), 2, "Expect version = 2" )
12118	Assert. assertEquals ( "Error updating public community file", file. getVersion ( ), version + 1 )
12119	assertEquals ( 7, reader. readFields ( ). size ( ) )
12120	assertEquals ( expectedQuery, actualQuery )
12121	assertEquals ( "LocationSearchFeed [locationList=[]]", result )
12122	context. assertIsSatisfied ( )
12123	Assert. assertNotNull ( lookup )
12124	assertNull ( expression. evaluate ( record ) )
12125	assertEquals ( 10, pixel. inc ( ) )
12126	assertThat ( headlineOf ( view ), is ( "2 builds have failed since Ben, Connor and Daniel committed their changes" ) )
12127	assertTrue ( "Expect mapping generated by CoveredbyMapper to be equal to reference mapping", mapper. getMapping ( s, t, "?x", "?y", "top_within(x.asWKT, y.asWKT)", 1.0d ). equals ( referenceMapping ) )
12128	assertEquals ( "baz", config. getString ( "bar" ) )
12129	assertTrue ( dependency. getViolations ( ). isEmpty ( ) )
12130	assertEquals ( "/" + ORCID + "/funding/123", x. getFundingGroup ( ). get ( 0 ). getFundingSummary ( ). get ( 0 ). getPath ( ) )
12131	assertNull ( apiForUrl )
12132	assertEquals ( 4, exceptions )
12133	assertEquals ( 1, logs. size ( ) )
12134	assertEquals ( 200, response. getStatus ( ) )
12135	assertNotNull ( getStdOut ( ) )
12136	assertThat ( output, is ( Bytes. toArray ( asList ( 3, 4 ) ) ) )
12137	assertThat ( jexlSelector. getType ( ), is ( CselSelector. TYPE ) )
12138	assertFalse ( shouldVote )
12139	assertFalse ( "hasFacet should return false", hasFacet )
12140	assertTrue ( setCookie. startsWith ( sessionCookieName + "=" ) )
12141	Assert. assertTrue ( m. isVoiceConfig ( ) )
12142	Assert. assertEquals ( 0, chronicle. getNumEvents ( 0, 2000 ) )
12143	assertEquals ( Address. of ( "one" ), fixture. removeSuffix ( 0 ) )
12144	assertEquals ( "val2val1", result )
12145	assertNotNull ( relapse. getId ( ) )
12146	assertEquals ( ( short ) 2, classUnderTest. getCompatibilityLevel ( ) )
12147	Assert. assertEquals ( 0, b. length )
12148	assertEquals ( "string2", ObjectUtils. getValue ( object, "string2" ) )
12149	assertEquals ( 3, documentCount )
12150	assertEquals ( result, expectedResult )
12151	assertThat ( request. equals ( request2 ), is ( false ) )
12152	assertEquals ( expResult, result )
12153	assertEquals ( "", result )
12154	assertThat ( node. getMetaData ( ), is ( mockMeta ) )
12155	assertEquals ( 3, breakpointID )
12156	assertEquals ( bigInteger, decimal. toBigInteger ( ) )
12157	Assert. assertEquals ( EJB_INTERCEPTED + "-regex", bean. test ( ) )
12158	assertEquals ( 0, executedActionCount. get ( ) )
12159	assertEquals ( result, expecting )
12160	assertEquals ( "[1]", writer. toString ( ) )
12161	Assert. assertEquals ( expected, actual )
12162	Assert. assertEquals ( "12 ����������������������������������������������������������������������������������
12163	assertNull ( "The returned query should not be null", result1 )
12164	assertThat ( argument. getValue ( ). getName ( ), is ( "step_with_array: <span class='step-parameter'>[1, 2, 3]</span>" ) )
12165	assertions. isNotEqualTo ( actual )
12166	assertTrue ( binlogEvent. equals ( EventFactory. dml ( 1, 1, "f.1", 1, "a", "b", false, false, DMLType. INSERT ) ) )
12167	assertXMLEqual ( new StringReader ( "<body></body>" ), new StringReader ( html ( processed ) ) )
12168	assertEquals ( gavs. size ( ), versionTranslator. getGroupCount ( ) )
12169	assertEquals ( 1000, highValueTarget. getAttack ( ) )
12170	assertNull ( property )
12171	assertThat ( author, nullValue ( ) )
12172	assertEquals ( in, out )
12173	assertFalse ( HttpMessageUtils. isText ( message ) )
12174	assertEquals ( "test", echo. echo ( "test" ) )
12175	Assert. assertEquals ( "Permission denied", response )
12176	assertEquals ( expected, actual )
12177	assertTrue ( "Login empty", constraintViolations. size ( ) == 1 )
12178	assertEquals ( collection. add ( new TestCollectionElement ( "1" ) ), collection. add ( new TestCollectionElement ( "2" ) ) )
12179	assertEquals ( doc1, io. getDocumentById ( id1, false ) )
12180	assertThat ( traversal. toList ( ), containsInAnyOrder ( likeVertex ( ). withTimId ( "id1" ), likeVertex ( ). withTimId ( "id2" ), likeVertex ( ). withTimId ( "id3" ) ) )
12181	assertEquals ( "response string", httpClient. put ( "/test_db/_design/designDocID/_update/functionName/docID?key=value", params ). body ( ) )
12182	assertEquals ( 0, fileSize )
12183	assertEquals ( label, bs. getVolumeLabel ( ) )
12184	assertTrue ( matches )
12185	assertThat ( errorResponse1, is ( errorResponse2 ) )
12186	assertNotNull ( result )
12187	editor. assertProblems ( "spring|Duplicate", "spring|Duplicate" )
12188	assertEquals ( expected, settings )
12189	Assert. assertEquals ( 0.0, a. transposeMultiply ( b ). subtract ( a. transpose ( ). multiply ( b ) ). getNorm ( ), 1.0e-15 )
12190	assertTrue ( isPropsSupportedByDefault )
12191	assertEquals ( 3, count )
12192	assertEquals ( 2, artists. size ( ) )
12193	assertEquals ( expected, result )
12194	assertTrue ( MatrixUtils. equals ( p, pinvRnk1, 0.05 ) )
12195	assertCompilationMessage ( diagnostics, Kind. ERROR, 14, 8, "Found more than one @WorkbenchPanel or parts." )
12196	assertActionKey ( HttpVerb. POST, "root-collection-params", true, keys. get ( 0 ) )
12197	assertFalse ( hasPermission )
12198	Assert. assertEquals ( true, retval )
12199	Assert. assertTrue ( "CumulativeLoss is expected to be less than 800: " + udtf. getCumulativeLoss ( ), udtf. getCumulativeLoss ( ) < 800 )
12200	Assert. assertTrue ( jsonList. size ( ) > 0 )
12201	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
12202	assertEquals ( new File ( f, "src/myxcode" ), FolderLayout. getSourceFolder ( project ) )
12203	assertEquals ( 10, count )
12204	Assert. assertEquals ( "http://www.w3.org/2005/Atom", location )
12205	Assert. assertEquals ( "user.zone:password", info. toString ( ) )
12206	Assert. assertEquals ( b10, b2 [ 0 ] )
12207	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
12208	assertNotNull ( manager. find ( tagUC. getId ( ) ) )
12209	assertTrue ( writeMethod. getReturnType ( ) == SecurityContext. class )
12210	assertEquals ( 1, application. informAttributeRemoved. get ( ) )
12211	assertThat ( result, is ( sameInstance ( foreignKeysRequest ) ) )
12212	assertEquals ( "Expected that after deleting a tabGroup, it's still tied to the " + "tab, the tabIndex is null," + " and the tab is marked as deleted", true, deletedFlag. booleanValue ( ) )
12213	assertTrue ( page. asXml ( ). indexOf ( "SUCCESS" )!= - 1 )
12214	assertEquals ( list, parser ( "// comment\\r\\n ( str)" ). object ( "" ) )
12215	assertEquals ( 1, itemsets. size ( ) )
12216	assertEquals ( - 1, r. peekChar ( ) )
12217	assertEquals ( "Hello World", metadata. get ( TikaCoreProperties. TITLE ) )
12218	Assert. assertEquals ( "https://foo.com:8080/things/123{/thingSubId}{?anchor1,anchor2}{?anchor2,anchor1}", result )
12219	assertTrue ( like. passesFilter ( "id", item ) )
12220	assertThat ( schema, containsString ( "input TypeUnionAddsInput {\\n" + "  short_multiValueList: [TypeInput, TypeDeletionsInput, TypeReplacementsInput]\\n" + "}\\n\\n" ) )
12221	assertVisitorSatisfied ( )
12222	assertThat ( actual, is ( equalTo ( expected ) ) )
12223	assertEquals ( 1, inverses. size ( ) )
12224	assertNull ( result. getItem ( COSName. R ) )
12225	Assert. assertEquals ( CLOUD_SDK_HOME + "/appengine.jar", sdk. getPath ( ) )
12226	Assert. assertNotNull ( user )
12227	assertNull ( session. getClassLoader ( NAME1 ) )
12228	Assert. assertEquals ( admin. getLogin ( ), TestConfig. ADMIN )
12229	assertEquals ( 29, output )
12230	assertNotNull ( beanDescriptor )
12231	assertTrue ( r1 instanceof PublicCloneable )
12232	assertEquals ( "dropwizard", metrics. getBaseName ( ) )
12233	assertEquals ( KEY_ALIAS, container. getComponentData ( TEST_CONTAINER, getStudioName ( GoogleDriveLoginDefinition. RETURN_KEY_ALIAS ) ) )
12234	assertEquals ( 0, serverStatus. getVolume ( ) )
12235	assertEquals ( "This test must runs without an error, because we can not guarantee that this test method run as first. ", 0, res )
12236	Assert. assertEquals ( "{" + "\\"@odata.context\\":\\"../$metadata#ESAllPrim(32767)/PropertyDecimal\\"," + "\\"@odata.metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\"," + "\\"value\\":\\"34\\"}", resultString )
12237	assertEquals ( TEST_VALUE, endpoint. getDurableSubscriptionName ( ) )
12238	Assert. assertTrue ( true )
12239	assertEquals ( 0, p. getMaskGroup ( ). getNodeCount ( ) )
12240	assertEquals ( 15663, HttpUtil. readChunkSize ( new ByteArrayInputStream ( s. getBytes ( ) ) ) )
12241	assertTrue ( s. isSubTree ( root, root ) )
12242	Assert. assertFalse ( "Should not exceed - " + LONG_TEXT_2. getBytes ( ). length, payload. isGlobalExceedLength ( ) )
12243	assertMockEndpointsSatisfied ( )
12244	assertEquals ( ShoppingProductChannel. LOCAL, channel. getChannel ( ) )
12245	assertArrayEquals ( message, serializedHandshakeMessage )
12246	assertEquals ( "concat() Text Is Test", Text. valueOf ( "Test" ), _text )
12247	assertEquals ( dim. width, separator. getPreferredSize ( ). width )
12248	assertTrue ( testSupport. boot ( ) )
12249	assertArrayEquals ( pkgClasses. toArray ( ), defaultClasses. toArray ( ) )
12250	assertEquals ( "DC:3.4.4", coordinate. getName ( ) )
12251	assertEquals ( 0, rpt. size ( ) )
12252	assertSame ( expected, actual )
12253	assertThat ( instance, is ( nullValue ( ) ) )
12254	assertEquals ( witness, tl )
12255	assertEquals ( expected, actual )
12256	JSONAssert. assertEquals ( expected, response. getBody ( ), false )
12257	assertEquals ( "TM00015", id )
12258	Assert. assertEquals ( pixel_EXPECTED, pixel_ACTUAL, eps05 )
12259	assertEquals ( 1.0, similarWordRatio, 0.001 )
12260	assertEquals ( result, "10.2" )
12261	Assert. assertTrue ( set. toIdentityString ( ). contains ( "foo" ) )
12262	assertEquals ( "field.asMap()", p. toString ( ) )
12263	assertEquals ( 200, response. getStatus ( ) )
12264	Assert. assertEquals ( "(aa_change_indel (aa_point_location (aa_char Cys) 123) del (aa_string Cys ins) arg)", aa_change_indel. toStringTree ( parser ) )
12265	assertEquals ( 1, find. size ( ) )
12266	Assert. assertEquals ( "08/10/2016 17:57:49 GMT-04:00", time )
12267	assertEquals ( "[Cookie{name='foo', value='bar', version='VERSION_0_NETSCAPE', path=Optional[/], domain=Optional[localhost.local], httpOnly=true, secure=false, maxAge=Optional[-1]}]", httpRequest. getEffectiveCookies ( ). toString ( ) )
12268	assertEquals ( "0.0", policy. getRate ( ). toString ( ) )
12269	Assert. assertEquals ( expectedTimelineSegments, timeline. getTimelineSegments ( ) )
12270	Assert. assertNotNull ( cm )
12271	assertTrue ( model1. contains ( model2 ) )
12272	assertEquals ( "Find by label with unknown label is still returning a list with one reading", 0, readings. size ( ) )
12273	assertEquals ( generatedName, extractedName )
12274	assertTrue ( out. contains ( "User [admin] is not authorized to view the logs for entity" ) )
12275	assertEquals ( 2, nodes. size ( ) )
12276	assertThat ( MODEL. findNextTransition ( utc ). get ( ), is ( SPRING_1947 ) )
12277	assertEquals ( expResult, result )
12278	Assert. assertTrue ( returnedVisibilities. isEmpty ( ) )
12279	assertEquals ( "master", result. get ( ) )
12280	Assert. assertEquals ( 2, segments. size ( ) )
12281	Assert. assertEquals ( expected, discipline )
12282	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
12283	assertThat ( tokens, equalTo ( Arrays. < Object > asList ( "This is a test", "Another test", "No spaces", "Between these two" ) ) )
12284	assertNotNull ( result )
12285	assertMockEndpointsSatisfied ( )
12286	assertEquals ( count1. get ( ), count2. get ( ) )
12287	assertEquals ( USERNAME, profile. getId ( ) )
12288	assertFalse ( arrayType. isPrimitive ( ) )
12289	Assert. fail ( "distcp failure" )
12290	assertNotNull ( session )
12291	assertEquals ( CREATED_PODCAST_RESOURCE_ID, createPodcast )
12292	assertTrue ( exists )
12293	assertEquals ( sortedSinged, result )
12294	assertEquals ( body. toString ( ), POST_VAL )
12295	assertEquals ( expResult, result )
12296	assertSame ( t, TEST_2007_07_15 )
12297	assertEquals ( "[[\\"bla\\",null],[\\"blub\\"]]", json )
12298	assertFalse ( status. equals ( HardActivityConstraint. ConstraintsStatus. FULFILLED ) )
12299	Assert. assertTrue ( pointQuadTree. contains ( nodeQuadTree ) )
12300	assertEquals ( 5, results. count ( ) )
12301	assertionHelper. assertIrodsFileMatchesLocalDataObjectFile ( irodsFileForSecondaryUser, irodsFile )
12302	assertEquals ( "{\\"version\\": \\"3.0.0\\", \\"gauges\\": {}, \\"counters\\": {}, \\"histograms\\": {}, \\"meters\\": {}, \\"timers\\": {}}", bson. toJson ( writerSettings ) )
12303	assertEquals ( 4, parent. getChildren ( ). size ( ) )
12304	assertEquals ( 1, result. size ( ) )
12305	assertEquals ( actualSimplePage, samplePage, "Page isn't equals" )
12306	assertNotNull ( perms )
12307	assertNull ( entry )
12308	assertEquals ( lexicon. getRoots ( ). size ( ), 0 )
12309	assertEquals ( searchFormat, updatedSearchFormat )
12310	assertThat ( principals, hasItem ( new UserNamePrincipal ( "user" ) ) )
12311	JSONAssert. assertEquals ( expected, result. getResponse ( ). getContentAsString ( ), false )
12312	assertEquals ( "fileOfKnownSize", fileWithSize. getSize ( ) )
12313	assertEquals ( 1.0, result, 0.1 )
12314	assertEquals ( expectedValue, generatedValue )
12315	assertThat ( session, is ( notNullValue ( ) ) )
12316	assertEquals ( expected, actual )
12317	assertThat ( url. toString ( ), is ( "http://localhost/foo/bar" ) )
12318	assertThat ( listener. getPartitionSpecFilter ( ), is ( "(p1='val1' AND p2=val2) OR (p1='val11' AND p2=val22) OR (p1='val111' AND p2=val222)" ) )
12319	assertEquals ( json, result. toString ( ) )
12320	assertEquals ( new ModelId ( "Car", "com.bosch", "1.0.0" ), ModelId. fromPrettyFormat ( modelId ) )
12321	assertEquals ( testValue, result )
12322	assertEquals ( 1, auc. updatesSize ( ) )
12323	assertEquals ( expected, postRestart )
12324	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
12325	Assert. assertFalse ( t. sameContent ( ) )
12326	assertEquals ( "8e9d9e9b9e0d9b9e7", orderId )
12327	Assert. assertTrue ( isEqual ( distance, 0.25 ) )
12328	assertNotNull ( service )
12329	assertThat ( result, is ( false ) )
12330	assertEquals ( expectedPrefix, actualPrefix )
12331	Assert. assertNotNull ( regResponse )
12332	assertEquals ( obj, value )
12333	assertThat ( dodgyBase. toString ( ), is ( "http://bar/qux" ) )
12334	assertMockEndpointsSatisfied ( )
12335	assertThat ( cr. isComuneAmministrativo ( ), is ( true ) )
12336	assertEquals ( "@{foo}", s )
12337	assertEquals ( "thevalue", retrievedValue )
12338	Assert. assertEquals ( 1, timeZoneDefinition. compare ( first, second ) )
12339	assertOrecValue ( orec, orecValue )
12340	assertNull ( nullConverted )
12341	assertEquals ( CudaGridExecutioner. MetaType. INVERTED_PREDICATE, executioner. getMetaOpType ( opB ) )
12342	assertEquals ( pos, arg. getBeginColumn ( ) )
12343	assertEquals ( 0, issues. size ( ) )
12344	assertTrue ( isMineInDirection )
12345	Assert. assertEquals ( true, objectSet. isEmpty ( ) )
12346	assertEquals ( "\\nHello\\r\\n!", mustache. render ( ImmutableMap. < String, Object > of ( "foo", "FOO" ) ) )
12347	assertEquals ( "1b5b33346d611b5b6d", Hex. encodeHexString ( TextUtils. green ( "a" ). getBytes ( ) ) )
12348	assertEquals ( sentinelHello1, sentinelHello2 )
12349	assertEquals ( stat, stat2 )
12350	assertEquals ( singleton ( "not" ), map. keySet ( ) )
12351	assertFalse ( "No movie clips!", result. isEmpty ( ) )
12352	assertThat ( jsonComparator. compare ( expected, actual ), is ( false ) )
12353	assertEquals ( Level. INFO. toString ( ), level. toString ( ) )
12354	assertReposPathDoesNotStartWithSlashAfterUpdateOnFile ( workingCopy )
12355	assertEquals ( "<span class=\\"first\\" data-info=\\"{&quot;data&quot;:&quot;attribute&quot;}\\">This</span> " + "<span class=\\"second\\" data-info=\\"{&quot;data&quot;:&quot;attribute&quot;}\\">Second</span> " + "<span class=\\"third\\" data-info=\\"{&quot;data&quot;:&quot;attribute&quot;}\\">Third</span> " + "<span class=\\"fourth\\" data-info=\\"{&quot;data&quot;:&quot;attribute&quot;}\\">Third</span> " + "<span class=\\"third\\" data-info=\\"{&quot;data&quot;:&quot;attribute&quot;}\\">Third</span> " + "</span> ", transform ( methodDeclarationNode ) )
12356	Assert. assertEquals ( "*3*5*7*8*", result )
12357	assertThat ( comparator. compare ( axiom1, axiom2 ), is ( 1 ) )
12358	assertEquals ( "jede sekunde", t. describe ( cron ) )
12359	assertEquals ( StrictMath. pow ( 10, 4 ), pow )
12360	assertEquals ( expected, successors )
12361	assertEquals ( Arrays. asList ( "ibar", "iunk", "xyz", "junk", "jixnay", "foo", "blah", "yermom" ), options. specs ( ) )
12362	assertNull ( userService. getUser ( 502 ) )
12363	assertFalse ( "No results expected.", set. hasMoreResources ( ) )
12364	Assert. assertEquals ( new URI ( "./mypath" ), uri )
12365	assertEquals ( CompressionType. Tar, compressionType )
12366	assertTrue ( shell. disposed )
12367	assertEquals ( expected, actual )
12368	assertEquals ( 0, metrics. size ( ) )
12369	endpoint. assertIsSatisfied ( )
12370	assertEquals ( timeFrameView, timeFrameEditor. view )
12371	assertEquals ( expectedNode, actualNode )
12372	Assert. assertTrue ( "Document info fail. Expected: " + expectedMessage + " actual: " + agpl, checkDocumentInfo ( licensed, agpl ) )
12373	assertThat ( outcome. getIssues ( ). size ( ), is ( 2 ) )
12374	assertTrue (! result. hasErrors ( ) )
12375	assertThat ( msgAndResponse. completeDataset, is ( sameInstance ( both ) ) )
12376	Assert. assertTrue ( "Capabilities should match", first. matchesOs ( capabilities ) )
12377	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
12378	assertEquals ( "1.0 * DOUBLECLOSED(+A) + 1.0 * SINGLECLOSED(+Foo) = 1.0.", rule. toString ( ) )
12379	assertEquals ( output, String. valueOf ( times ) )
12380	assertEquals ( "myTestAlias", delegate. getAlias ( ) )
12381	assertThat ( classPool. loadClass ( fakeClass. getName ( ) ). isNoClassPool ( ), is ( true ) )
12382	assertEquals ( InetAddress. getLoopbackAddress ( ), tchannel. getServerHost ( ) )
12383	assertEquals ( valuesWritten, valuesRead )
12384	assertNotNull ( metadata )
12385	Assert. assertFalse ( this. manager. isConnected ( this. family1, this. person1 ) )
12386	assertEquals ( fixture, this. libshout. getFormat ( ) )
12387	assertEquals ( "vehLoc", route. getEnd ( ). getLocation ( ). getId ( ) )
12388	assertEquals ( expecting, found )
12389	assertTrue ( countDownLatch. await ( 10, TimeUnit. SECONDS ) )
12390	assertionsFailure ( resultMap )
12391	assertNull ( entry )
12392	assertEquals ( lastValue, "EndNode8" )
12393	assertTrue ( "Event listener should be called", isElementPresent ( By. className ( "v-observer-listener" ) ) )
12394	assertEquals ( expectedMap, map )
12395	assertEquals ( "Hello :firstName :lastName", ResponseBodyInterpolator. interpolate ( "Hello :firstName :lastName", req ) )
12396	assertFalse ( listOutput. isEmpty ( ) )
12397	assertEquals ( cat, trie2. getFromRootNode ( ) )
12398	assertEquals ( CONTRIBUTED_PATH, cp )
12399	assertEquals ( abort. isUserResourceLimitation ( ), duplicate. isUserResourceLimitation ( ) )
12400	Assert. fail ( )
12401	assertThat ( stringOf ( sut. toDevice ( msg ) ), is ( lua ( powerPinMessage ( anyAnalogPin. pinNum ( ), "INTR" ) ) ) )
12402	assertOut ( "RoyaleTest_A.prototype.royaleTest_a = function() {\\n" + "  var self = this;\\n" + "  function a() {\\n" + "  };\\n" + "}" )
12403	assertEquals ( 1, courses. size ( ) )
12404	Assert. assertEquals ( ( Float ) 1.0f, res )
12405	assertSearchYields ( index, "(foo:aaa AND (foo:bbb OR (foo:ccc))", "foobbb", "fooccc" )
12406	arrays. assertContains ( description, null, values )
12407	Assert. assertEquals ( functionColumn, ( ( String [ ] ) result ) [ 0 ] )
12408	assertTrue ( success )
12409	assertEquals ( expected, result )
12410	assertEquals ( expectedLong, value )
12411	assertNotNull ( error )
12412	assertEquals ( 0, n )
12413	sensei. assertWriteJson ( property )
12414	assertSame ( expr. accept ( visitor ), visitResult )
12415	assertPutFails ( role, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
12416	assertEquals ( "ISO-8859-1", originalEncoding )
12417	assertEquals ( "2015-11-23 00:00", results )
12418	assertTrue ( Futures. getUnchecked ( collector ) )
12419	assertThat ( requestHeader ( UNDEFINED_HEADER, mockMatcher ). retrieveValue ( req ), is ( nullValue ( ) ) )
12420	assertPartialOrdered ( storeWithoutCommitThenDelete_expected ( stored, deleted ), readLatestJournalEntries ( ) )
12421	Assert. fail ( "Should have failed due to conflict with parent index" )
12422	assertEqualsJson ( expected, actual )
12423	assertEquals ( "Wrong number of visited nodes", nodeCount, visitor. getVisitedNodes ( ). size ( ) )
12424	assertEquals ( 10, result. getValue ( ). intValue ( ) )
12425	assertEquals ( resultMock, result )
12426	assertTrue ( result. isEmpty ( ) )
12427	assertVisitorSatisfied ( )
12428	assertEquals ( "5422", arr. reduceRight ( callbackfn ) )
12429	context. assertIsSatisfied ( )
12430	assertNull ( flow )
12431	assertEquals ( xs, ys )
12432	assertThat ( compatibility. getIncompatibility ( ), both ( containsString ( "time" ) ). and ( not ( containsString ( "20" ) ) ) )
12433	Assert. assertEquals ( "{\\"a\\":\\"abc\\"}", result )
12434	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
12435	assertEquals ( mockedX509Certificate, actualPublicKeyCertificate )
12436	assertEquals ( text. getText ( ), "" )
12437	Assert. assertEquals ( 10L, template. execute ( callable, retryState ). call ( ). longValue ( ) )
12438	assertEquals ( "gradient for cls " + cls, gradIdx, result, 1e-5 )
12439	assertEquals ( "Select script should match expected", expectedConcatenationWithNestedFieldLiterals ( ), result )
12440	assertFactorization ( poly, UnivariateSquareFreeFactorization. SquareFreeFactorization ( poly ) )
12441	assertTrue ( constraints. getExpiryTime ( ) < System. currentTimeMillis ( ) )
12442	assertEquals ( 0.0, p. getAscorption ( sepVarPos ), 0.01 )
12443	Assert. assertEquals ( roads, adjacentRoad )
12444	assertNotNull ( kidless )
12445	assertEquals ( hashMap, CollectionsFactory. createMap ( TMap. entry ( 1, "value" ), TMap. entry ( 2, "value" ) ) )
12446	assertEquals ( data1, data2 )
12447	assertEquals ( "ABCDEFGH", state. prefix )
12448	assertEquals ( "Should have found 3 files", 3, cc. size ( ) )
12449	Assert. assertEquals ( expected, actual )
12450	Assert. assertEquals ( "Unexpected result: " + result, expectedResult, result )
12451	assertEquals ( "http.server.header", acceptOptions. get ( "http.server.header" ) )
12452	assertEquals ( expected, actual )
12453	Assert. assertEquals ( json, writer. toString ( ) )
12454	Assert. assertEquals ( "de", result )
12455	assertNotNull ( entity. getId ( ) )
12456	UmaTestUtil. assert_ ( pat )
12457	assertThat ( mixer, instanceOf ( ServiceManager. class ) )
12458	assertEquals ( expResult, result )
12459	Assert. assertTrue ( "grid data", grd_EXPECTED [ i ]. equals ( grd_ACTUAL [ i ], DELTA_06 ) )
12460	assertThat ( infos. length, is ( 0 ) )
12461	assertEquals ( liList. get ( 0 ). getContent ( ). get ( 0 ), "newli01!" )
12462	assertTrue ( retryPolicy. getRetryCondition ( ). shouldRetry ( null, e, 1 ) )
12463	assertEquals ( firstMid, mid. get ( ) )
12464	assertEquals ( s, result. toString ( ) )
12465	assertTrue ( processor. canProcessEvent ( event ) )
12466	assertFalse ( result )
12467	assertEquals ( ( float ) now, Float. valueOf ( output ), 100 )
12468	assertEquals ( 0, result. getMappingsCount ( ) )
12469	assertEquals ( position, returnedPosition )
12470	assertEquals ( "myseq.nextval", new SQLSerializer ( new Configuration ( new SQLServerTemplates ( ) ) ). handle ( nextval ). toString ( ) )
12471	assertEquals ( "bar", jsonConfiguration. getString ( "foo" ) )
12472	Assert. assertEquals ( null, new CompareTool ( ). compareByContent ( output, cmp, outputPath, "diff" ) )
12473	Assert. fail ( e. getLocalizedMessage ( ) )
12474	assertEquals ( new ModelId ( "Test", "com.bosch", "1.0.2" ), ModelId. fromPrettyFormat ( modelId ) )
12475	assertEquals ( "TokenExpirationDate not equal to value set by setTokenExpirationDate()", newExpireDate, sut. getTokenExpirationDate ( ) )
12476	assertMessageAndPath ( constraintViolationCreationContextList. get ( 0 ), message, pathWith ( ). property ( "foo" ). property ( "bar", true, 3, null ) )
12477	assertTrue ( sink. getInvalidConfiguration ( ) )
12478	assertEquals ( expected, actual )
12479	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
12480	assertEquals ( "_value=foo", s )
12481	assertEquals ( result, true )
12482	assertDtoAndMapConstructorAreSame ( 0 )
12483	assertJsonEquals ( ImmutableMap. of ( "topic", "test-topic", "webpushConfig", data ), message )
12484	assertThrows ( IllegalStateException. class, funnel :: run )
12485	assertEquals ( 4, result. getProperties ( ). size ( ) )
12486	assertBrownGCD ( gcd, a, b )
12487	assertEquals ( "Base for strings is wrong", "192.168.0.1", parsed )
12488	assertEquals ( 1.0f / 60.0f, entry. getEffectiveDurationHours ( ), Float. MIN_NORMAL )
12489	assertEquals ( HttpStatus. SC_OK, response. getStatusLine ( ). getStatusCode ( ) )
12490	assertEquals ( "onekey1val1val5|key2val2|", hash )
12491	Assert. assertEquals ( 2, batches. size ( ) )
12492	assertEquals ( 1, ksession. fireAllRules ( ) )
12493	assertAnnotations ( 1, Location. class, new TestLocation ( 0, "London", 51, "N", 000, "W", UK ) )
12494	Assert. assertFalse ( context. getResult ( ) )
12495	runner. assertAllFlowFilesTransferred ( AbstractBigQueryProcessor. REL_FAILURE, 1 )
12496	assertEquals ( "test", getFieldValue ( someField, someObject, null ) )
12497	assertNull ( "An open task cannot have a closer", task. getCloser ( ) )
12498	assertEquals ( repeat, threadCount. get ( ) )
12499	assertEquals ( "Mon", d. getType ( ) )
12500	assertTrue ( dao. existsRemoteFileTable ( ) )
12501	assertTrue ( e. getCause ( ). getMessage ( ). contains ( "ELY05125" ) )
12502	tester. assertInfoMessages ( "Username and password are incorrect!" )
12503	result. assertIsSatisfied ( )
12504	assertThat ( prop. satisfiesConstraints ( value ), is ( true ) )
12505	assertEquals ( 0, tableNames. size ( ) )
12506	assertNotNull ( error )
12507	assertEquals ( expected, result, 0.000001d )
12508	assertEquals ( 1, result )
12509	Assert. assertTrue ( "Single namespace is not supported by protobuf", true )
12510	org. junit. Assert. assertEquals ( expected, actual )
12511	assertFalse ( album1. equals ( album2 ) )
12512	assertEquals ( "name", stubPanel. getName ( ) )
12513	assertEquals ( "http://localhost.jenkins/git/notifyCommit?" + "url=http%3A%2F%2Fsome.stash.com%2Fscm%2Ffoo%2Fbar.git" + "&branches=refs%2Fheads%2Fmaster" + "&sha1=sha1&TARGET_BRANCH=master", captor. getValue ( ). getURI ( ). toString ( ) )
12514	assertNotNull ( injector )
12515	assertEquals ( expResult, result )
12516	assertTrue ( ( ( BooleanType ) respParam. getParameter ( ). get ( 0 ). getValue ( ) ). booleanValue ( ) )
12517	assertTrue ( cause [ 0 ] instanceof ValidationException )
12518	assertEquals ( "Echo Tex.get()t Doesn't Match!", "echo this...", response. getMessageBody ( ) )
12519	assertEquals ( "A", z )
12520	Assert. areEqual ( "getd bmode,zone", ZdalDataSource. getGetdBmodeAndZone ( ), "getd bmode,zone" )
12521	assertThat ( result, is ( empty ( ) ) )
12522	assertTrue ( "Snapshot with greater timestamp is greater", greaterSnapshot. compareTo ( snapshot ) > 0 )
12523	assertThat ( bolt. srcDestFieldMapping, is ( new HashMap < String, Object > ( ) ) )
12524	assertTrue ( sba instanceof ThickSBA )
12525	Assert. assertTrue ( "canonicalizing the test file " + filename + " produces " + out + " which is different from " + baseline, TestFileUtils. compareFileToResource ( out, baseline ) )
12526	assertEquals ( "4.2.1", model. getVersion ( ) )
12527	assertEquals ( conv. getExchangeRateProviderName ( ), prov. getName ( ) )
12528	assertEquals ( expected, result )
12529	assertEquals ( getLabel ( ), 0.0, prod. minus ( b ). getRMS ( ), TOLERANCE )
12530	assertions. containsSequence ( sequence )
12531	assertThat ( os. size ( ), not ( 0 ) )
12532	assertEquals ( "double mapper serialization is wrong", expected, actual )
12533	assertNotNull ( res )
12534	assertEqualLines ( "invalid updating", definedContent, newContent. toString ( ) )
12535	assertEquals ( "very obese", string0 )
12536	assertEquals ( "UNI___is", orgSectionHasher. hash ( section ) )
12537	assertEquals ( Orientation. typeOf ( 7 ), orientation )
12538	Assert. assertEquals ( expResult, result )
12539	assertTrue ( e. getCause ( ) instanceof RaftException )
12540	assertArrayEquals ( expected, actual )
12541	Assert. assertTrue ( Models. isomorphic ( expected, actual ) )
12542	assertEquals ( 1, metaMessage. getDuration ( ) )
12543	assertEquals ( i, instance. size ( ) )
12544	assertEquals ( "8.1.0", revision )
12545	helper. assertAttributeValue ( EXPECT_NoAttributeValue, invoiceLine. getM_AttributeSetInstance ( ), attr_Country )
12546	assertThat ( ret, equalTo ( "default" ) )
12547	assertEquals ( "Analysis Submission is not equal to project", project2, shareAnalysisSubmissionWithProject. getProject ( ) )
12548	assertNotNull ( obj )
12549	assertEquals ( input. parseString ( ), expected )
12550	assertTrue ( checkDisconnected ( ) )
12551	assertThat ( cursor. asListRemaining ( ), hasItems ( "movies/TheMatrix", "movies/TheDevilsAdvocate", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/TheMatrix", "movies/The
12552	assertTrue ( Arrays. equals ( getPacketData ( "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" ), version. serialize ( ) ) )
12553	Assert. assertEquals ( 0, a. getNosi ( ) )
12554	assertEquals ( sb. toString ( ), whereSb. toString ( ) )
12555	assertEquals ( str, "string" )
12556	assertEquals ( Arrays. asList ( "#k1b" ), cm. getPrelines ( ) )
12557	assertTrue ( true )
12558	assertEquals ( "4.0.0.0", ip. getValue ( ) )
12559	assertEquals ( NUM_WRITERS * ENTRIES, countHLog ( logfile, fs, conf ) )
12560	assertEquals ( 1, branch_conditions. size ( ) )
12561	assertFalse ( translationResult. getResult ( ). booleanValue ( ) )
12562	assertEquals ( true, r. avalie ( avaliaveis, null ). getReal ( ), 0.0001d )
12563	assertEquals ( 1, shacl. nbResult ( gg ) )
12564	assertTrue ( entity. isValid ( ) )
12565	assertThat ( description. toString ( ), is ( "<3> sheet(s) number 1" ) )
12566	assertEquals ( anchorListItem, workbenchMenuCompactNavBarView. getMenuItemWidgetMap ( ). get ( menuId ) )
12567	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. FUNDING_READ_LIMITED )
12568	mock. assertIsSatisfied ( )
12569	assertThat ( target. getQueueId ( ), is ( new Integer ( 1234 ) ) )
12570	assertEquals ( "Hello Tim", resp. getResponseBody ( ). trim ( ) )
12571	Assert. assertEquals ( expected, actual )
12572	assertSelectResultKeys ( selector, "abc", "edf" )
12573	assertEquals ( Transaction. DEFAULT_TX_FEE, request. tx. getFeePerKb ( ) )
12574	assertNotNull ( MessageInteraction. reader ( "KSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "KCXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "KPXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
12575	Assert. assertEquals ( 1, result. getOperations ( ). size ( ) )
12576	assertEquals ( expected, actual )
12577	assertNull ( map )
12578	assertNotNull ( subject. getCertificate ( ) )
12579	assertThat ( ConnectionHeaders. fromString ( " \\b\\t\\n\\r\\f{ \\b\\t\\n\\r\\f\\"key\\" \\b\\t\\n\\r\\f: \\b\\t\\n\\r\\f\\"value\\" \\b\\t\\n\\r\\f, \\b\\t\\n\\r\\f\\"foo\\" " + "\\b\\t\\n\\r\\f\\"bar\\" \\b\\t\\n\\r\\f} \\b\\t\\n\\r\\f" ), is ( expected ) )
12580	assertTrue ( events. size ( ) == 3 )
12581	assertEquals ( "Steven (Frederic) Seagal", victim. readLiteralString ( ) )
12582	assertTrue ( acceptor. validate ( controllerMethod, controllerInstance ) )
12583	assertEquals ( DUMMY_URL, endpoint )
12584	assertThat ( out, is ( equalTo ( nullValue ( ) ) ) )
12585	assertThat ( tester. request. getParameterValues ( "aaa" ), is ( new String [ ] { "111" } ) )
12586	assertEquals ( expected, result )
12587	Assert. assertTrue ( pinyinSet1. size ( ) > 1 )
12588	assertEquals ( "ABCDEF", ObjectInspector. substitute ( ObjectInspector. reVarSubstPattern, "${X|Y|Z}", new ZorkaConfig ( props ) ) )
12589	assertTrue ( error )
12590	Assert. assertEquals ( new TableName ( "bar", "foo" ), manipulation. getOriginalTableName ( ) )
12591	assertEquals ( 6, outSize )
12592	assertTrue ( learner. fuzz ( equiv ) )
12593	assertThat ( pathsInSource, hasItems ( pathInSource1, pathInSource23 ) )
12594	Assert. assertNull ( new CompareTool ( ). compareByContent ( out, cmp, destinationFolder ) )
12595	assertEquals ( "0 event should be returned", 0, events. size ( ) )
12596	Assert. assertEquals ( 2, count. get ( ) )
12597	Assert. assertTrue ( validator. validSequence ( 0, inputSequence, outcomesSequence, outcome ) )
12598	assertTrue ( "Authentication failed", ops. exists ( TEST_SYSLOG_AUDIT_LOG_ADDRESS ) )
12599	Assert. assertEquals ( 0, comparator. compare ( id1, id2 ) )
12600	assertEquals ( 0, argList. size ( ) )
12601	Assert. assertTrue ( conn. isClosed ( ) )
12602	assertEquals ( "foo=bar", scope. generate ( ) )
12603	assertEquals ( "pong!", reply. body ( ) )
12604	assertEquals ( "(| [= foo] [= bar] [= baz])", m. toString ( ) )
12605	assertNotNull ( result )
12606	assertEquals ( generatedJavascript, expectedJavascript )
12607	assertNotNull ( oracleEngine )
12608	assertTrue ( desc. isEmpty ( ) )
12609	assertNotNull ( result )
12610	assertTrue ( "isPresent should return true if only element actually present is not " + "required when RequireAll annotation is used.", testView. isPresent ( ) )
12611	assertNull ( future. get ( ) )
12612	Assert. assertEquals ( xxx, JSONUtils. getInt ( jsonObject, "salary" ) )
12613	assertEquals ( DEFAULT_CONTENT, rewrite ( gadget, DEFAULT_CONTENT ) )
12614	Assert. assertEquals ( 2, metaUpdate. addKeepers ( dc, cluster, new ShardTbl ( ). setShardName ( shard ) ) )
12615	Assert. fail ( "Expecting MathIllegalStateException" )
12616	assertTrue ( 12345.0d == d. asFloat8 ( ) )
12617	assertEquals ( "q=\\"participants\\"", q )
12618	assertTrue ( evaluator. evaluate ( ae ) )
12619	assertEquals ( Result. STOP, or. apply ( pathData ) )
12620	assertEquals ( 1, x. size ( ) )
12621	assertThat ( results, contains ( mrId ) )
12622	assertTrue ( versionFileLib. exists ( ) )
12623	assertEquals ( "c2", child1. getProperty ( "copyProp" ) )
12624	assertEquals ( "value", properties. getProperty ( "namesrv.domain" ) )
12625	Assert. assertEquals ( "Should have received the correct number of access events", 1, event. getAccessEvents ( ). size ( ) )
12626	assertThat ( root. getString ( ( NamespaceRegistry ) null, encoder, encoder ), is ( "/" ) )
12627	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
12628	assertEquals ( "wrong size", 0, intList. size ( ) )
12629	assertEquals ( "java.lang.Object.equals()", mthd. toString ( ) )
12630	assertObjectEquals ( "{'in':'header',name:'If-Unmodified-Since',type:'string'}", pi )
12631	assertEquals ( expected, result. getTime ( ) )
12632	assertArrayEquals ( new byte [ ] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
12633	assertEquals ( 1, type. getCapacityDimensions ( ). getNuOfDimensions ( ) )
12634	assertGraph ( "" + "digraph G1 {\\n" + "  label = \\"10\\" tall;\\n" + "  style = filled;color=lightgrey;\\n" + "  electricityHeater -> Heater;\\n" + "  CoffeeMaker -> Pump;\\n" + "}\\n" )
12635	assertFalse ( loadconstraint. fulfilled ( context ) )
12636	assertTrue ( uut. getCombiners ( ). isEmpty ( ) )
12637	assertThat ( result, is ( instanceOf ( Success. class ) ) )
12638	assertTrue ( barrier. isAborted ( ) )
12639	assertThat ( specification. getUnits ( ), is ( MILLI. multiply ( 1L << 10 ) ) )
12640	assertEquals ( 1, branch_conditions. size ( ) )
12641	assertEquals ( 3, paragraphElement. getElementCount ( ) )
12642	assertEquals ( "Both filters should be used", 17, size )
12643	Assert. assertEquals ( Status. NOT_FOUND. getStatusCode ( ), resp. getStatus ( ) )
12644	assertEquals ( new SchemaAndValue ( Schema. BOOLEAN_SCHEMA, true ), avroData. toConnectData ( avroSchema, true ) )
12645	assertTrue ( result. contains ( "\\"1-0-v0\\":{\\"type\\":\\"LCD\\",\\"values\\":[\\"1\\",\\"2\\"]}" ) )
12646	Assert. assertEquals ( true, 0 == partition. calculate ( "2014-01-01 12:00:03" ) )
12647	Assert. fail ( "Should have thrown exception" )
12648	assertEquals ( mk, mk2 )
12649	Assert. assertEquals ( expected, name )
12650	Assert. assertEquals ( HttpServletResponse. SC_INTERNAL_SERVER_ERROR, response. getStatusLine ( ). getStatusCode ( ) )
12651	assertEquals ( "foo", this. classifier. classify ( new IllegalStateException ( "Foo" ) ) )
12652	assertFalse ( attributes. isNew ( ) )
12653	Assert. assertNotNull ( addressResultsDto )
12654	assertEquals ( "[5, 4, 3, 2, 1]", IteratorToGeneratorAdapter. adapt ( range ). toCollection ( ). toString ( ) )
12655	assertEquals ( 144., violation, 0.01 )
12656	assertEquals ( Float. valueOf ( 81.56891f ), testVal )
12657	assertNull ( expr. exec ( new PmExprExecCtxt ( pmConversation ) ) )
12658	assertArrayEquals ( centuryAndTitlesFromHadoop, centuryAndTitlesFromInput )
12659	assertEquals ( "", generated )
12660	assertEquals ( results, expected )
12661	assertTrue ( details. hasCompensated ( ) )
12662	assertTrue ( "Location not defined", handler. isLocationDefined ( ) )
12663	assertThat ( "interface inherited static method", obj, equalTo ( 44 ) )
12664	Assert. assertTrue ( "No results when search for people search", success )
12665	assertEquals ( l, fr. getAuthors ( ) )
12666	assertEquals ( "readonly", exp. getExpression ( ) )
12667	assertTrue ( result. isSuccess ( ) )
12668	assertEquals ( expectedResult, actualResult )
12669	assertEquals ( "Failed to generate for loop with declaring initializer and counting expression", FOR_DECLARING_INITIALIZER_NO_COUNTING_EXP_EMPTY, s )
12670	assertNotNull ( transferer )
12671	assertThat ( actual, is ( "ABC_ID_OID" ) )
12672	assertEquals ( "Base for doubles is wrong", Double. valueOf ( 3.5d ), parsed )
12673	assertEquals ( IP, profile. getId ( ) )
12674	assertEquals ( 3, getCount ( ) )
12675	assertEquals ( 1, books. size ( ) )
12676	assertEquals ( expected, got )
12677	Assert. assertEquals ( "Wrong scope", scope. toString ( ), globalConfiguration. toString ( ) )
12678	assertEquals ( 1000, fixedRate )
12679	assertThat ( testOutcome. getName ( ), is ( "some_test" ) )
12680	assertTrue ( "back off should be calculated for " + factor + " times", nextBackoffMillis >= factor )
12681	assertTrue ( isSorted )
12682	Assert. assertTrue ( res. isEmpty ( ) )
12683	assertTrue (! result. isEmpty ( ) )
12684	assertEquals ( "Float value does not match", bookmark. getVisitRatio ( ), loadedBookmark. getVisitRatio ( ), 0.001 )
12685	assertThat ( result, containsInAnyOrder ( "Jane", "Adam" ) )
12686	assertEquals ( f3Rec, r )
12687	Assert. assertTrue ( myRecordList. size ( ) == 2 )
12688	assertLexer ( parser, Scanners. IDENTIFIER, Indentation. WHITESPACES. optional ( null ) )
12689	assertNull ( sessionFactory. getCurrentSession ( ). get ( TaskElement. class, taskGroupWithOneChild. getId ( ) ) )
12690	assertArrayEquals ( "odd terminated compact decode fail", expected, CompactEncoder. unpackToNibbles ( test ) )
12691	assertEquals ( new SubmissionSet ( ), result )
12692	assertEquals ( "0b0c7", result )
12693	assertThat ( loader, hasItem ( isA ( LookAndFeelAddon. class ) ) )
12694	assertEquals ( before, read )
12695	assertNotNull ( Member. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "QUXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
12696	assertEquals ( q1, qr )
12697	Assert. assertEquals ( payLoad, "test" )
12698	Assert. assertSame ( o, p. getExpectedValue ( ) )
12699	assertTrue ( "incorrect value", aNumber. toString ( ). equals ( result ) )
12700	Assert. assertEquals ( expected, actual )
12701	assertTrue ( model. getObjects ( Catalysis. class ). size ( ) == 4 )
12702	Assert. assertEquals ( "org.wildfly.arquillian:wildfly-arquillian-container-domain-remote:2.2.0.Final", adapter. dependencies ( ) [ 0 ] )
12703	assertFalse ( resp )
12704	Assert. assertEquals ( Rfc1349TrafficClass. IPTOS_LOWCOST. value ( ), socket. getTrafficClass ( ) )
12705	assertEquals ( "bar", p. poll ( ) )
12706	assertEquals ( true, classUnderTest. getSavePreferencesImmediately ( ) )
12707	assertEquals ( c1, c2 )
12708	assertEquals ( expResult, result )
12709	assertEquals ( r1, r2 )
12710	assertCorrectBinaryString ( data, expected )
12711	assertFalse ( clusterStatus. isInSafeMode ( true, DEFAULT ) )
12712	assertEquals ( "raw() content-type-header=[text/plain; charset=UTF-8] accepts-header=[*/*]", actual )
12713	Assert. assertEquals ( element. getText ( ), "click me" )
12714	assertEquals ( "163.152.23.222", ip. asChars ( ) )
12715	assertEquals ( mockUserDetails, userDetails )
12716	assertEquals ( "TDP-D", searchCallback. state )
12717	Assert. assertEquals ( c. getValue ( ), "unchecked" )
12718	assertEquals ( "test", echo. echo ( "test" ) )
12719	context. assertIsSatisfied ( )
12720	Assert. assertEquals ( "DragMe", destination. getText ( ) )
12721	assertNotNull ( Transcription. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "TRXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
12722	Assert. assertTrue ( kernelServices. isSuccessfulBoot ( ) )
12723	assertThat ( "should not register user with existing mail address", registered, is ( false ) )
12724	assertTrue ( "unexpected value", value )
12725	assertNull ( result )
12726	assertInvocations ( invocations )
12727	assertThat ( builder, is ( CoreMatchers. any ( BaseWssFactoryBuilder. class ) ) )
12728	TestUtils. assertEquals ( interesado, interesadoCreado )
12729	assertThat ( testExecutor. invokeTest ( 1000L, ImmutableMultimap. of ( "force", "whatever" ) ), is ( true ) )
12730	assertEquals ( transformedQuery, expectedQuery )
12731	assertThat ( po. get ( ). getRegisteredCount ( ), is ( 200 ) )
12732	assertEquals ( "Expected response not seen.", 200, response. getStatus ( ) )
12733	Assert. assertNull ( prewritePrimaryRow ( ) )
12734	assertEquals ( expResult, result )
12735	assertTrue ( generator instanceof MessagePackGenerator )
12736	assertTrue ( true )
12737	assertThat ( axioms, hasItem ( axiom ) )
12738	assertEquals ( tags, taggedMetric. getTags ( ) )
12739	assertEquals ( expected, json )
12740	assertNotNull ( form )
12741	assertTrue ( sut. isAccountNonLocked ( ) )
12742	assertTrue ( ( boolean ) testedMethod. invoke ( tasksManagerImpl, STARTING_BYTE_OF_4_BYTE_CHAR ) )
12743	assertEquals ( "(1,2,3,4,5)", asSequenceStr ( result ) )
12744	assertTrue ( traceHeaderLatch. await ( 5, TimeUnit. SECONDS ) )
12745	assertEquals ( "Wrong number of fraud sets", 16, fraudSet. size ( ) )
12746	assertTrue ( rs. next ( ) )
12747	assertEquals ( 1, count )
12748	Assert. assertEquals ( fsAccess. serviceHadoopConf. get ( "foo" ), "FOO" )
12749	assertThat ( output. format ( "failed", "", "failed" ), Matchers. is ( "\\033[32msuccess\\033[0m" ) )
12750	Assert. fail ( "Was able to create two fields with same alias" )
12751	assertThat ( sortDependencies. toString ( ), is ( "DependencySortOrder{childElementNames=[groupId, scope]}" ) )
12752	assertThat ( frame, notNullValue ( ) )
12753	assertEquals ( 140.5, sum ( numbers ), DELTA )
12754	assertTokensEqual ( of ( integer ( 1 ) ), lastSeenTokens. get ( ) )
12755	assertThat ( result, is ( nullValue ( ) ) )
12756	assertEqualsQR ( A, qr. factor ( new DenseMatrix ( A ) ) )
12757	assertThat ( writer. toString ( ), equalTo ( "onetwothree" ) )
12758	assertEquals ( expectedPosition, actualPosition, 0 )
12759	assertEquals ( HttpURLConnection. HTTP_NOT_ACCEPTABLE, urlConnection. getResponseCode ( ) )
12760	assertEquals ( "appId", applicationAction. getAppId ( ) )
12761	arrays. assertContainsOnly ( description, actual, other )
12762	assertEquals ( 1, query. count ( ) )
12763	assertEquals ( docElement. getBody ( ), child. getTextContent ( ) )
12764	assertTrue ( future. isDone ( ) )
12765	assertEquals ( "log.txt", manager. getFileFormat ( prefix ) )
12766	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm", result ) )
12767	assertEquals ( "WKT[��Tokyo��, $Bessel, $Lat, $Lon, $deg]", wkt )
12768	Assert. assertTrue ( newPointAvailable )
12769	assertEquals ( 0, statistics. size ( ) )
12770	assertTrue ( lt. interpret ( Version. valueOf ( "1.0.0" ) ) )
12771	assertThat ( result, is ( false ) )
12772	assertXsltOutput ( "P", "T" )
12773	assertThat ( "Count of customer", res, is ( 3 ) )
12774	assertEquals ( "3 啶�啶�啷� 啷�啷�", t. format ( new Date ( 315569259747L * 3L ) ) )
12775	Assert. assertEquals ( 1, s. x )
12776	assertEquals ( HttpStatus. SC_MOVED_TEMPORARILY, response. getStatus ( ) )
12777	assertEquals ( r1. hashCode ( ), r2. hashCode ( ) )
12778	assertFalse ( Intersects. lineIntersectsCircle. call ( a, c ) )
12779	Assert. assertTrue ( pss. toString ( ). contains ( Integer. toString ( Calendar. getInstance ( ). get ( Calendar. YEAR ) ) ) )
12780	assertEquals ( acceptor, typedMap. get ( accKey ) )
12781	assertEquals ( history, unmarshalledHistory )
12782	assertEquals ( check, result. keySet ( ) )
12783	assertEquals ( "333", tk. next ( ) )
12784	arrays. assertDoesNotContain ( description, null, new short [ 2 ] )
12785	assertNotNull ( keystore. deleteKeyPair ( getResourceAsString ( "keys/test.pub" ) ) )
12786	assertEquals ( OVERRIDE_NAME_TRAIT, v. getTrait ( OVERRIDE_NAME_TRAIT ) )
12787	assertThat ( signatureValue, is ( equalTo ( "74:EE:2F:97:89:0C:45:CC:21:FC:04:2C:BB:46:2D:9B:47:D6:E7:67:82:D6:5D:F1:D2:70:0A:31:8A:9F:2C:D2:BD:FD:E8:7F:0B:5B:A6:A6:B8:7B:13:BF:AC:D1:B0:FB:9A:8D:1D:47:E2:84:86:4E:9B:10:DA:D4:57:50:F5:36:D9:03:FE:B1:B7:44:75:5F:D6:73:AE:A3:EA:8D:24:E2:F4:C9:96:4A:3B:81:EA:F4:58:6C:E6
12788	Assert. assertTrue ( hasIndexHashKeyEqualCondition )
12789	assertNotNull ( "Date cannot be null", date )
12790	assertEquals ( expected, SouthWarp. getPatternMap ( ) )
12791	assertThat ( result. size ( ), is ( 3 ) )
12792	rule. assertScenarioEnded ( )
12793	assertEquals ( sentryUri. toString ( ) + "api/293b4958-71f8-40a9-b588-96f004f64463", sentryApiUrl. toString ( ) )
12794	assertRows ( sequencedPath, 6, TEST_COLUMNS )
12795	assertEquals ( "1", changeEvent [ 0 ]. getPosition ( ) )
12796	assertTrue ( entity. getId ( ) > 0 && entity. getArea ( ) == - Double. MIN_VALUE )
12797	Assert. assertEquals ( VAL6 [ j ] [ 0 ] + "->" + j, VAL6 [ j ] [ 1 ], result. getText ( ) )
12798	assertEquals ( JacksonDeserializer. class, deserializer. getClass ( ) )
12799	Assert. assertEquals ( "jduke", LdapUtil. auth ( user, password ) )
12800	assertNotNull ( result )
12801	assertEquals ( 1, violations. size ( ) )
12802	assertEquals ( 1, dataStore. getIndices ( MOCK_DATA_TYPE_1 ). length )
12803	assertEquals ( base64CipherText, decryptedCipherText )
12804	assertEquals ( expected, filterAclEntriesByAclSpec ( existing, aclSpec ) )
12805	Assert. assertEquals ( "a\\ninside-a-closure\\n", html. trim ( ). replace ( " ", "" ) )
12806	Assert. assertEquals ( "dew-test", result. data ( ) )
12807	assertEquals ( "^[a-zA-Z0-9_]+$", regex )
12808	assertTrue ( h. getNewURL ( ). equals ( "/NewSimpleRegex" ) )
12809	assertArrayEquals ( new String [ ] { "1.2.40.0.13.1.1.99.27.1.1" }, matches ( query, Tag. SOPInstanceUID ) )
12810	assertTrue ( cloned [ 0 ] == cloned [ 1 ] )
12811	assertTrue ( ok )
12812	assertTrue ( TEST_UTIL. getHBaseAdmin ( ). isTableEnabled ( TABLENAME ) )
12813	assertEquals ( 2, context. getAssociatedActivities ( ). size ( ) )
12814	assertResolvedModelIsNull ( )
12815	assertEquals ( text, infoTextManager. getNewsText ( ) )
12816	assertEquals ( "XXX: " + result, expectedString )
12817	assertEquals ( 2, count )
12818	assertNull ( patientInfo. getName ( ) )
12819	assertEquals ( expected, header. getValue ( ) )
12820	Assert. assertTrue ( json. has ( CONTROLLER_NAME ) )
12821	assertLog ( Log. INFO, "test info argument argument2 argument3" )
12822	Assert. assertArrayEquals ( expected, actual. toArray ( ) )
12823	Assert. assertTrue ( c. getLastReport ( ). isEmpty ( ) )
12824	assertTrue ( clientInfoService. isUseProxies ( ) )
12825	assertTrue ( metricsService. metricsNames ( ). size ( ) > 0 )
12826	assertNull ( clientManager. get ( channel ) )
12827	assertThat ( cloths, IsIterableWithOrder. < String > iterableWithOrder ( ) )
12828	assertEquals ( i, fromList )
12829	assertNotNull ( testObj. getPanel ( ) )
12830	assertEquals ( 1, results. size ( ) )
12831	assertEquals ( expectedReprovisionPolicy, individualEnrollment. getReprovisionPolicy ( ) )
12832	assertEquals ( "base crs", crs )
12833	assertTrue ( emptyMap. isEmpty ( ) )
12834	assertPlanMatches ( project )
12835	Assert. assertEquals ( null, _c. convert ( "" ) )
12836	assertTrue ( criteria. getResultList ( ). containsAll ( criteriaCTO. getResultList ( ) ) )
12837	assertEquals ( 4, result. get ( ). getList ( ). size ( ) )
12838	assertEquals ( expected, splitter. split ( expression ) )
12839	assertEquals ( "EncodeConstants.OF10_VERSION_ID,Action,OutputActionCase", key1. toString ( ) )
12840	assertTrue ( Pattern. matches ( HTableDescriptor. VALID_ADMIN_TABLE_REGEX, tn ) )
12841	Assert. assertFalse ( task. isInitialized ( ) )
12842	assertIterationsEqual ( out1, out2 )
12843	assertEquals ( "test", subject. getProjectName ( ) )
12844	assertions. containsOnly ( )
12845	assertTrue ( functionsWithName. isEmpty ( ) )
12846	assertEquals ( expected, uri. toString ( ) )
12847	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED, status )
12848	assertEquals ( "num metrics in registry", 3, r. metrics ( ). size ( ) )
12849	assertEquals ( "", propertyValue )
12850	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
12851	Assert. assertEquals ( setOf ( new KeyStatistics < String > ( "Ford", 6 ), new KeyStatistics < String > ( "Honda", 6 ), new KeyStatistics < String > ( "Toyota", 6 ), new KeyStatistics < String > ( "BMW", 2 ) ), keyStatistics )
12852	Assert. assertEquals ( dim. getNumCols ( ), 100 )
12853	assertTrue ( action. isExecuted ( ) )
12854	assertEquals ( "http://www.w3.org/2005/Atom", atomURI. toString ( ) )
12855	assertTrue ( lock. lockConnection. getMetaData ( ). getURL ( ). contains ( database ) )
12856	assertEquals ( "LINESTRING(0 0, 1 3)", ClobType. getString ( c ) )
12857	assertEquals ( "Dummy Resource", testResource. getSourcePath ( ) )
12858	assertEquals ( arr, resultArr )
12859	assertEquals ( r3, mostRelevantResource )
12860	assertThat ( result, equalTo ( "OK" ) )
12861	assertEquals ( "bar1", jedis. get ( "foo2" ) )
12862	assertNotNull ( query )
12863	Assert. assertEquals ( "Date " + date + " was not correctly truncated to year", dateTruncExpected, dateTruncActual )
12864	assertNotNull ( Member. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
12865	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"no\\"?><root>" + "<firstArray><value>firstArrayValue0</value><secondArray><value>secondArrayValue0-0</value></thirdArray>" + "<thirdArray><value>thirdArrayValue0-0-1</value></thirdArray></secondArray></firstArray>" + "<secondArray><value>secondArrayValue0-1</value><thirdArray><value>thirdArrayValue0-1-0</value></thirdArray>" + "<thirdArray><value>thirdArrayValue0-1-1</value></thirdArray></secondArray></firstArray>" + "<firstArrayRenamed><secondArrayRenamed><value>secondArrayValue1-0</value></thirdArray>" + "<thirdArrayRenamed><value>thirdArrayValue1-0-1</value></thirdArray>" + "<thirdArray><value>thirdArrayValue1-0-2</value></thirdArray>" + "<thirdArray><value>thirdArrayValue1-0-2</value
12866	assertNull ( t2 )
12867	assertThat ( allDomainPermissions. isEmpty ( ), is ( true ) )
12868	assertThat ( "��瑷�璇ヨ�淇��规��浣�涓��卞奖��浜�3琛�", effect, equalTo ( 3 ) )
12869	assertNull ( field. getFill ( ) )
12870	Assert. assertTrue ( "this should be a file", irodsFile. isFile ( ) )
12871	assertEquals ( 1, count. get ( ) )
12872	Assert. assertNotNull ( pojo. testManager )
12873	Assert. assertEquals ( entity, result )
12874	assertThat ( modified. equals ( sniffed ), is ( true ) )
12875	assertEquals ( "<test:Foo text='Foo title' data='User data'/>", output )
12876	assertTrue ( message, containsString ( "You have been banned until 2007-12-03, please respect throttling and retry-after headers." ) )
12877	assertTrue ( "Invalid attachment type upload was not handled", true )
12878	Assert. assertEquals ( FileType. MZXML, fileType )
12879	assertThat ( propertyLoader. loadProperties ( new File ( "missing.properties" ) ), is ( notNullValue ( ) ) )
12880	org. junit. Assert. assertEquals ( 1, count. get ( ) )
12881	assertNodeWithContent ( sequencedRootPath, "customrowfactory" )
12882	Assert. assertEquals ( "test", description. getPattern ( ) )
12883	assertTrue ( result. passedValidation ( ) )
12884	Assert. assertEquals ( x, y )
12885	assertThat ( component. getLastActivity ( ), is ( latestActivity ) )
12886	assertThat ( getProcessingError ( ), containsTypeError ( "domainNamespaces", "slice", "bool" ) )
12887	assertTrue ( "Record should be valid", isValid )
12888	assertEquals ( expResult, result )
12889	assertEquals ( 2, commentlList. size ( ) )
12890	assertEquals ( arr, resultArr )
12891	assertEquals ( 1, stopwatch. getCount ( ) )
12892	Assert. assertNotNull ( addressResultsDto )
12893	assertEquals ( value, genericSolutionAttribute. getAttribute ( genericSolutionAttribute. getAttributeIdentifier ( ) ) )
12894	assertEquals ( 1, selectJobByProcessInstanceId ( processInstance. getId ( ) ). getRetries ( ) )
12895	assertThat ( converter. toJavaObject ( new HiveCharWritable ( hiveChar ) ), is ( ( Object ) "a" ) )
12896	assertEquals ( Subscription. State. PENDING, subscription. getState ( ) )
12897	assertThat ( mid, is ( not ( - 1 ) ) )
12898	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). delete ( this. patient ) )
12899	assertEquals ( "abc", result )
12900	assertEquals ( dataType, header. getDataType ( ) )
12901	runner. assertValid ( )
12902	Assert. assertEquals ( vsName, s. getVirtualServer ( ). getName ( ) )
12903	Assert. assertFalse ( "Invalid request from interceptor", result )
12904	assertNull ( attrs. getColumn ( "someInt", Integer. class ) )
12905	assertE ( "�尖�尖�尖��" + "��111��" + "��131��" + "��121��" + "�尖�尖�尖�尖�尖�尖��" )
12906	assertEquals ( name, result )
12907	Assert. assertEquals ( "Error updating public file", file. getVersion ( ), version + 1 )
12908	assertEquals ( "GBP -125.34", test. toString ( ) )
12909	assertEquals ( "2", idView. caretPosition ( ). get ( ) )
12910	assertSame ( reply1, reply2 )
12911	assertEquals ( usage + 1, statsUsageService. getUsage ( StatsUsageType. FULLTEXT ) )
12912	assertEquals ( 2, resultComparator. compare ( uniquecc1, uniquecc2 ) )
12913	assertEquals ( new Dimension ( 50, 50 ), ac. getValue ( ). getSize ( ) )
12914	assertEquals ( 1, n )
12915	assertEquals ( 3, ksession. fireAllRules ( ) )
12916	assertFalse ( executableHelper. overrides ( subType, superType ), "Literature#getTitle() is private. It should not be possible to override it." )
12917	assertSingleIssue ( issues, 1, "Function def.", "5min" )
12918	assertDtos ( expected, actual )
12919	assertEquals ( Hive2SimbaDatabaseMeta. URL_IS_CONFIGURED_THROUGH_ODBC, baseSimbaDatabaseMeta. getURL ( testDbName, "", "" ) )
12920	assertEquals ( "unsignedByte", shortForm )
12921	assertEquals ( "Expected 0 results!", 0, count )
12922	assertEquals ( "ALTER TABLE testtable DROP IF EXISTS PARTITION (country='US')", query )
12923	assertThat ( findBook, is ( notNullValue ( ) ) )
12924	assertNull ( "no item should have been found", item )
12925	assertEquals ( readLog. getStatementExecutedLog ( ), statementExecutedLog )
12926	assertEquals ( DataTransferStatus. REJECTED, response. getStatus ( ) )
12927	Assert. assertEquals ( "false", tree. getLabel ( data ). getName ( ) )
12928	Assert. assertEquals ( result. toStringWithoutTime ( ). trim ( ), expectedResult. trim ( ) )
12929	assertNotNull ( disp )
12930	assertEquals ( false, foo. _boolean )
12931	Assert. assertNotNull ( referrers )
12932	assertNotNull ( message )
12933	assertThat ( result, is ( "'\\r'\\n" ) )
12934	assertNotNull ( result )
12935	assertEquals ( result. size ( ), 2 )
12936	assertEquals ( "{\\"relationship\\":\\"SELF\\",\\"url\\":{\\"value\\":\\"http://orcid.org\\"},\\"workExternalIdentifierType\\":\\"DOI\\",\\"workExternalIdentifierId\\":{\\"content\\":\\"peer-review:subject-external-identifier-id\\"}}", converter. convertTo ( peerReview. getSubjectExternalIdentifier ( ), null ) )
12937	assertEquals ( Sets. newHashSet ( "table1" ), service. getTablesToRepair ( cluster, unit ) )
12938	Assert. fail ( "Should have thrown exception" )
12939	assertTrue ( result. isResultOK ( ) )
12940	Assert. assertTrue ( result. isEmpty ( ) )
12941	assertArrayTest ( form )
12942	assertTrue ( latch. await ( 4, SECONDS ) )
12943	assertNull ( "empty translation is not worth a review. The UI spots that alone", review )
12944	assertFalse ( validator. isValid ( request ) )
12945	assertEquals ( expResult, result )
12946	assertThat ( nestedGrid. getHeight ( ), is ( 20 ) )
12947	assertNameToken ( ast, "bwahaha" )
12948	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 1, warnings. size ( ) )
12949	assertObjectEquals ( "{name:'foo'}", t )
12950	assertEquals ( LibUsb. getVersion ( ). apiVersion ( ), "1.0" )
12951	assertEquals ( "0b", formatter. decodeFromString ( "0b" ) )
12952	assertEquals ( 2, testOrderType. getOrders ( patient, outPatient ). size ( ) )
12953	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( 5.0 ), mapper. readBitemporalDate ( columns, "ttTo" ) )
12954	validator. assertValid ( value )
12955	assertThat ( errors, not ( hasFieldErrors ( "familyNamePrefix" ) ) )
12956	assertEquals ( "bar1,bar2", containerRequest. getHeaderAsString ( "foo" ) )
12957	assertEquals ( 0., errorRate, TestDataManager. DELTA_DOUBLE )
12958	assertEquals ( 0, rpt. size ( ) )
12959	assertSame ( mockJaxbContext, actual )
12960	assertNull ( validatingPlugin )
12961	assertEquals ( "4.01", response. getHeader ( HttpHeader. ODATA_VERSION ) )
12962	Assert. assertEquals ( "newTestId", newActualId )
12963	Assert. assertEquals ( 1, solution. getUnassignedJobs ( ). size ( ) )
12964	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
12965	assertIsAborted ( tx )
12966	Assert. assertEquals ( TestModel. C4. f1, f1 )
12967	assertNotNull ( "could not find contract resource", url )
12968	assertTrue ( folder. getProgressState ( ) == ProgressState. IN_PROGRESS )
12969	assertEquals ( result, AuthenticationStatus. AUTHENTICATED, "Authentication existing user with correct credentials should be successful." )
12970	Assert. fail ( "Exception should be thrown" )
12971	Assert. assertThat ( QueryBuilder. getInstance ( ). buildFilterQuery ( co, "", 0, 1, 0, 0, null ), equalTo ( expected ) )
12972	assertNull ( new RandomRelationshipSelector ( ). selectRelationship ( database. getNodeById ( 0 ) ) )
12973	assertEquals ( "test-value", request. getHeaders ( ). get ( "x-custom-header" ) )
12974	assertThat ( model. getRoot ( ). getChildren ( ). size ( ), equalTo ( 0 ) )
12975	assertEquals ( "boolean", shortForm )
12976	assertThat ( sw. toString ( ), is ( equalTo ( "    b" ) ) )
12977	assertSeq ( new String [ ] { "<a/>", "<b/>" }, "reverse(/top/*)" )
12978	assertThat ( asset. formatAttributes ( ). get ( "contributors" ), is ( "Foo <foo@example.com> (http://www.example.com/foo)" ) )
12979	assertEquals ( 5, entry. getTotalResults ( ) )
12980	assertEquals ( "http://blob", packageUri )
12981	assertMatches ( written, resolved )
12982	assertEquals ( expected, result )
12983	assertEquals ( expectedAst, ast. dump ( "" ) + "\\n" )
12984	assertEquals ( "", digest )
12985	Assert. assertTrue ( entryList. isEmpty ( ) )
12986	Assert. assertEquals ( expected, actual )
12987	assertEquals ( "There should only be one entity", 1, result. size ( ) )
12988	assertThat ( result, is ( false ) )
12989	assertTrue ( resultMessage ( result, POST ), result. passedValidation ( ) )
12990	Assert. assertArrayEquals ( u, MathArrays. unique ( x ), 0 )
12991	assertEquals ( b. build ( ), iterImpl. asDocument ( ) )
12992	assertEquals ( "", wire. toString ( ) )
12993	Assert. assertEquals ( env. get ( "java.naming.factory.initial" ), "com.sun.jndi.dns.DnsContextFactory" )
12994	assertEquals ( "https://listener:2000/foo/bar", url )
12995	assertEquals ( version, "12" )
12996	assertEquals ( expected, cls )
12997	assertThatFeatureIsInContext ( builder, "feature_test", Configuration. getDefault ( ). enabledStatus )
12998	assertEquals ( String. valueOf ( ReturnCode. NO_DIGITS. code ( ) ), eventCaptor. getValue ( ). getParameter ( "rc" ) )
12999	assertThat ( name. getQualifiedName ( ), is ( "aaa.bbb.server.meta.ccc.DddMeta" ) )
13000	assertEquals ( request. getContentLength ( ), result )
13001	Assert. assertEquals ( hello, helloFromIrods )
13002	assertFalse ( isDisabled )
13003	assertNotNull ( result )
13004	assertEquals ( true, classUnderTest. getShowToolTips ( ) )
13005	assertThat ( box. has ( thing ), is ( false ) )
13006	runner. assertNotValid ( )
13007	assertMockEndpointsSatisfied ( )
13008	assertTrue ( longArray. length == 3 )
13009	assertEquals ( TextUtil. readUTF8 ( path ), generator. getResult ( ) )
13010	assertEquals ( "Translation failed", SocketException. class, pelopsException. getClass ( ) )
13011	Assert. assertTrue ( contains )
13012	assertEquals ( arr, resultArr )
13013	Assert. assertEquals ( sum, 499 )
13014	assertFalse ( Strings. isNullOrEmpty ( resp ) )
13015	Assert. assertEquals ( driver ( ). getTitle ( ), "We Arrive Here" )
13016	assertNull ( output )
13017	assertEquals ( "Failed to parse: @[5,-50]", pe. getMessage ( ) )
13018	assertEquals ( expected, actual )
13019	assertTrue ( resultComparator. compare ( fd1, fd2 ) > 0 )
13020	assertNotNull ( "testIOExceptionInWriterConstructor error!!!", reader )
13021	assertEquals ( g1, g2 )
13022	assertTrue ( matchResult )
13023	assertThat ( description. toString ( ), is ( "cell at \\"B6\\" contained <String> expected <String> sheet \\"Sheet1\\"" ) )
13024	assertTrue ( sta. validateStrokeAndFill ( new PenFill ( ), null ) )
13025	assertThat ( supplier. authForImage ( ), matchesAccessToken ( accessToken ) )
13026	assertEquals ( SimpleScore. of ( 42 ), scoreDirector. calculateScore ( ) )
13027	Assert. assertEquals ( testString, HtmlToXMLUtil. unescapeToXML ( testString ) )
13028	Assert. fail ( "IOException expected" )
13029	assertCollection ( response )
13030	assertEquals ( "password_one_time_reset", modelAndView. getViewName ( ) )
13031	assertEquals ( "abc", injected. val. get ( ) )
13032	assertInvocations ( client. getTwoPhaseCommitInvocations ( ) )
13033	assertEquals ( 2, roleListWrapper. getRoles ( ). size ( ) )
13034	Assert. fail ( "expected exception" )
13035	Assert. assertEquals ( "涓�|浠�涔�", words )
13036	assertThat ( reportGenerator. generateJsonSingleUserJson ( usageStatistics ), equalTo ( "{\\n" + "  \\"user\\": \\"cvop\\",\\n" + "  \\"totalFileReadingMb\\": \\"262\\",\\n" + "  \\"totalCpuTime\\": \\"00:29:58\\",\\n" + "  \\"totalTime\\": \\"00:29:26\\",\\n" + "  \\"totalMemoryUsedMbs\\": \\"7,500,170\\",\\n" + "  \\"project\\": \\"fire\\",\\n" + "  \\"startTime\\": \\"12.01.2017 17:03:40\\",\\n" + "  \\"totalVcoresUsed\\": \\"1,762\\",\\n" + "  \\"status\\": \\"SUCCEEDED\\"\\n" + "}" ) )
13037	assertThat ( entityId, is ( equalTo ( ( Object ) 100L ) ) )
13038	assertEquals ( "This is binary content", response. getEntity ( ). getContent ( ) )
13039	assertEquals ( "2008-02-07_00:00", s )
13040	assertEquals ( 0, logRecordList. size ( ) )
13041	assertThat ( top3RichCustomerList, contains ( "John", "Jane", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John", "John
13042	Assert. assertTrue ( menuBarContainerTool. getCategories ( ). size ( ) > 0 )
13043	assertEquals ( entities, entities2 )
13044	assertEquals ( expected, actual )
13045	Assert. assertEquals ( expected, wire. read ( ). text ( ) )
13046	assertTrue ( pass )
13047	assertEquals ( n, c )
13048	assertEquals ( "Expected table size to be 5", 5, table. getRowCount ( ) )
13049	assertEquals ( "select survey.NAME from SURVEY survey order by survey.NAME asc", toString ( query ) )
13050	Assert. assertEquals ( devices, loadedDevices )
13051	assertMockEndpointsSatisfied ( )
13052	Assert. assertEquals ( 1, resultado )
13053	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5 ) ) )
13054	assertEquals ( schema, schema2 )
13055	assertTrue ( "i=" + i, duration > 10000 )
13056	assertEquals ( expected, actual )
13057	Assert. assertEquals ( PriorityBean. PRIORITY, job. getPriority ( ) )
13058	Assert. assertTrue ( concept. isEmpty ( ) )
13059	assertEquals ( "|Monday|Tuesday|Wednesday|Thursday|Friday", days )
13060	Assert. assertEquals ( createObjectNode ( "fieldName", 42 ), result )
13061	assertTrue ( matcher. match ( msg, rule ) )
13062	assertEquals ( Arrays. asList ( "Be", "Hello", "World" ), testObject. getCombinations ( ) )
13063	assertTrue ( pub. isClosed ( ) )
13064	assertMockEndpointsSatisfied ( )
13065	Assert. assertTrue ( combiSet. nbOfCombinations ( 3 ) == 1 )
13066	assertFalse ( victim. isValid ( box, null ) )
13067	Assert. assertEquals ( invokers, fileredInvokers )
13068	assertEquals ( DispatcherType. REQUEST, dispatcherType )
13069	assertEquals ( "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,23,23,24,25,25,26,27,27,28,29,30,31,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,35,36,35,36,35,36,35,36,35,16,17,18,19,20,21,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,
13070	assertNotNull ( stream )
13071	assertNotNull ( result )
13072	assertTrue ( simpleValue1. equals ( simpleValue2 ) )
13073	assertEquals ( "returned parsed text value was incorrect", expectedReturn, StringUtils. searchAndColor ( text, searchText, dummyColorInt ) )
13074	assertEquals ( connectionTimeout, ConfigUtils. getConnectionTimeout ( mockServletContext ) )
13075	assertEquals ( etalonFrequencyListJSON, frequencyListJSON )
13076	mock. assertIsSatisfied ( )
13077	assertTrue ( true )
13078	assertEquals ( mod, modSer )
13079	assertE ( "�尖�尖�尖��" + "�� �� ��" + "��   ��" + "�� �� ��" + "�� �� ��" + "�� �� ��" + "�� �� ��" + "�� �� ��" + "�� �� ��" + "�尖�尖�尖�尖��" )
13080	assertThat ( r, hasEntry ( "int", ( Object ) ( - 1 ) ) )
13081	assertEquals ( 0, count )
13082	assertEquals ( "Input key/value json should match output key/value json", inputJson, outputJson )
13083	assertEquals ( VerifyFailType. WARN, pluginParameters. verifyFailType )
13084	assertEquals ( "[someDataStore] testVM/Renamed", testDiskFileNameString )
13085	Assert. assertEquals ( "test create schema with bson type", HttpStatus. SC_CREATED, resp. getStatus ( ) )
13086	assertMetric ( "ReqPerSec", "1.99871" )
13087	assertArrayEquals ( expected, actual )
13088	assertNotNull ( result )
13089	Assert. assertEquals ( clientConfig, clientConfig2 )
13090	assertThat ( taxFactor, equalTo ( TaxService. DEFAULT_TAX_FACTOR ) )
13091	assertTrue ( validator. isValid ( ) )
13092	assertEquals ( 0, lintresult. getIssues ( ). size ( ) )
13093	assertNotNull ( query )
13094	assertStack ( new Object [ ] { Long. valueOf ( 3 ), null }, stack )
13095	Assert. assertTrue ( actual. equals ( expected ) )
13096	assertThat ( validator. validate ( parameters, "aaa" ), is ( nullValue ( ) ) )
13097	assertScriptEquality ( expectedScript, actualScript )
13098	assertEquals ( "http://apache.org/shindig?foo#hello=world&foo=bar", builder. toString ( ) )
13099	assertEquals ( 0, numEdits )
13100	assertEquals ( expected, actual )
13101	assertEquals ( emptyList ( ), result )
13102	files. assertIsDirectoryContaining ( INFO, actual, JAVA_SOURCE )
13103	Assert. assertEquals ( 100., time, 0.01 )
13104	assertEquals ( response. getStatus ( ), Status. SUCCESS. getValue ( ) )
13105	assertNotNull ( uMapping )
13106	assertEquals ( "ok", testSet. getTestResults ( ). get ( 0 ). getResult ( ) )
13107	Assert. isTrue ( true )
13108	Assert. assertEquals ( path, "dir" + File. separatorChar + "dir2" )
13109	assertThat ( sw. toString ( ), is ( equalTo ( "    bcd\\n    test" ) ) )
13110	assertEquals ( dictionary, verbSynset. getDictionary ( ) )
13111	assertEquals ( "High-Performance Java Persistence", post. getTitle ( ) )
13112	assertThat ( messages, contains ( messages. toString ( ) ) )
13113	assertEquals ( "1", el. get ( 0 ). getName ( ) )
13114	assertEquals ( "" + QueryMessages. outputFilterNotice ( ) + "\\n" + "organisation:   FOO-ORG\\n" + "source:         RIPE\\n" + "\\n" + "organisation:   BAR-ORG\\n" + "source:         RIPE\\n" + "\\n", response )
13115	Assert. assertEquals ( Integer. class, clazz )
13116	assertTrue ( ex. getMessage ( ). equals ( "Dee on initial crawl!" ) )
13117	assertEquals ( 404, responseGet. getStatus ( ) )
13118	assertEquals ( DataStatus. ACTIVE, empty. getCycleLockStatus ( ) )
13119	assertEquals ( id, effect )
13120	assertThat ( validations. getErrors ( ), hasSize ( 1 ) )
13121	assertTrue ( syncOpt. isDbVersionPresent ( ) )
13122	assertNotNull ( transplant. getId ( ) )
13123	assertTrue ( db. isLocking ( ) )
13124	assertEquals ( "a<TParser.V>\\n", found )
13125	assertThat ( referenceSet. getReferencingOntologyAnnotations ( ), is ( empty ( ) ) )
13126	assertEquals ( "Hello World!", result )
13127	Assert. assertNotNull ( "null collection returned", actual )
13128	assertEquals ( 3, groupMembers. size ( ) )
13129	assertEquals ( expected, result )
13130	assertEquals ( "USA", exp. evaluate ( person ) )
13131	assertEquals ( SAMPLE_BOOLEAN_ATT_VALUE, returnedDomainEntity. getBooleanField ( ) )
13132	assertEquals ( JBossSAMLURIConstants. NAMEID_FORMAT_PERSISTENT. get ( ), nameIDPolicy. getFormat ( ) )
13133	assertEquals ( repo, diConfig. getRepository ( ) )
13134	assertEquals ( "bob", val )
13135	assertThat ( mqttClient. getMessages ( ), is ( Arrays. asList ( new Message ( topic ( "D2" ), "1" ) ) ) )
13136	assertTrue ( "getMinimized() doesn't return the same value as the previous setMinimized(true)", gadget. getMinimized ( ) )
13137	assertEquals ( "http://suryagaddipati/cancan.git", template )
13138	assertEquals ( "Types that only differ in case should be equivalent", 0, comparator. compare ( type1, type2 ) )
13139	assertEquals ( pos. getErrorIndex ( ), 0 )
13140	assertThat ( l, contains ( 9, 8, 7 ) )
13141	assertEquals ( parser. parse ( expectedOutput ), devent. payload )
13142	assertEquals ( expected, got )
13143	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff_width01_" ) )
13144	assertEquals ( "2.1234 >> 2", e. eval ( ). toPlainString ( ) )
13145	assertTrue ( html. contains ( "w1" ) )
13146	assertEquals ( 14, res )
13147	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. VIEW, this. doc ) )
13148	assertEquals ( m1, m2 )
13149	assertEquals ( ElasticSearchIndexProvider. ES_KEYWORD_TYPE, type )
13150	assertEquals ( "Wrong decoded value", decodedValue, config. getEncodedString ( KEY_PREFIX, "default", decoder ) )
13151	assertThat ( subjectOf ( axiom ), isOptionalOf ( atom ) )
13152	assertEquals ( message, activity. getBaseObject ( ), map. get ( "baseObject" ) )
13153	assertEquals ( expResult, result )
13154	assertTrue ( m. isValid ( code ) )
13155	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. ORCID_BIO_EXTERNAL_IDENTIFIERS_CREATE )
13156	assertEquals ( 0, Files. getLastModifiedTime ( testFolder ) )
13157	assertEquals ( BuilderFactory. start ( ). addBinary ( "a", ( byte ) 5, "The quick brown fox jumped over the lazy dogs.". getBytes ( "US-ASCII" ) ). build ( ), doc )
13158	assertTrue ( result. contains ( "audio_stream_id" ) )
13159	assertEquals ( 1, service. prepare ( query ). countEntities ( fo ) )
13160	assertEquals ( 0.0, calculator. calculate ( ), 0.01 )
13161	assertEquals ( "application2.properties", bootConf )
13162	assertTrue ( namedCluster. checkHdfsNameNotEmpty ( null ) )
13163	Assert. assertNotNull ( personStructure )
13164	assertEquals ( data, target. getDataManager ( ). get ( new Parameters ( ). setLocationKey ( locationKey ). setContentKey ( contentKey ) ) )
13165	assertEquals ( Arrays. asList ( "col1", "col2" ), subset. getProperty ( "key5" ) )
13166	Assert. assertFalse ( isNewRequired )
13167	assertTrue ( "Waited less than 700ms: " + waited, waited < 700 )
13168	assertEquals ( "Hello", argument. getValue ( ). get ( "key" ) )
13169	assertNotEquals ( ctx1, ctx2 )
13170	assertFalse ( purchase. getTicket ( ). isDiscount ( ) )
13171	assertEquals ( 12, metadata )
13172	assertFalse ( validator. validate ( Meta, PUT ). passedValidation ( ) )
13173	assertTrue ( bp. isConverged ( ) )
13174	assertOut ( "/**\\n * @export\\n */\\nB.prototype.http_$$ns_apache_org$2017$custom$namespace__b = function() {\\n  var self = this;\\n  function c(f) {\\n  };\\n  c(custom_namespace::b);\\n}" )
13175	assertTrue ( roles. size ( ) > 0 )
13176	Assert. isTrue ( grades. size ( ) > 0 )
13177	assertNull ( item. getList ( ) )
13178	assertEquals ( 6. * 3600. + 6. * 60., sec, 0.01 )
13179	assertEquals ( sample, sample2 )
13180	assertThat ( result. getPayload ( ), is ( instanceOf ( String. class ) ) )
13181	assertOut ( "/**\\n * @export\\n */\\nB.prototype.b = function() {\\n  function c(f) {\\n  };\\n  c(d);\\n}" )
13182	assertEquals ( ( short ) 0x0009, s. m0_0 ( ) )
13183	assertEquals ( "", sanitized )
13184	Assert. assertTrue ( true )
13185	assertEquals ( expectedSpec, opts. getIndexingSpecification ( ) )
13186	assertTrue ( "Should have thrown an exception", thrown )
13187	assertEquals ( expectedURI, gotURI )
13188	assertFalse ( index. isReadyForClusterIndexed ( cluster ) )
13189	assertThat ( arguments. getAgent ( ), equalTo ( "funky-bot-2" ) )
13190	assertCaret ( 2 )
13191	Assert. assertEquals ( "Raw speed test", acc2, acc, 1e-6 )
13192	assertThat ( output, containsString ( "Number of stats: " ) )
13193	assertEquals ( WEBJAR_URL_PREFIX + "jquery/jquery.js", javaScript )
13194	assertThat ( dto. isLegacyUser ( ), is ( false ) )
13195	assertTrue ( userCanReadBranch )
13196	assertEquals ( base. plusDays ( 20 ), absoluteTime )
13197	Assert. assertFalse ( handle )
13198	assertEquals ( refPoint, testPoint )
13199	assertNull ( e. abortShutdownReason ( ) )
13200	assertEquals ( 0, p. getStart ( ) )
13201	assertNotNull ( ciudad )
13202	Assert. assertTrue ( authenticator. logout ( ) )
13203	assertEqualsIgnoreWhitespace ( expected, real )
13204	assertThat ( factory. newNameResolver ( URI. create ( "http://override:5678" ), NameResolver. Args. EMPTY ), is ( nullValue ( ) ) )
13205	assertArrayEquals ( TEST_DATA, readAllBytes ( gfs. getPath ( "/dir/file.txt" ) ) )
13206	assertTrue ( exceptionTestResults. getInvoked ( ) )
13207	assertEquals ( false, result )
13208	assertEquals ( expectedResult, user )
13209	assertEquals ( 0, count )
13210	assertThat ( sel, is ( datatype ) )
13211	arrays. assertContainsOnly ( description, actual, array ( "Luke", "Yoda", "Leia", null ) )
13212	assertThat ( JDBCAdapter. SQL_TIMESTAMP. from ( Moment. of ( 1341100800L, 210, TimeScale. POSIX ) ), is ( ts ) )
13213	assertEquals ( rdiv, answer )
13214	assertEquals ( "hello", filterResult. getValue ( ) )
13215	assertNotNull ( createdBreaker )
13216	assertNotNull ( parent )
13217	assertFalse ( result. passedValidation ( ) )
13218	assertThat ( encoded, containsString ( "{\\"linkId\\":\\"value123\\",\\"_linkId\\":{\\"extension\\":[{\\"url\\":\\"http://123\\",\\"valueString\\":\\"HELLO\\"}]}}" ) )
13219	assertEquals ( objectName, expectedObjectName )
13220	assertThat ( actualShardNumber >= 0 && actualShardNumber < 1, is ( true ) )
13221	assertThat ( underTest. isValid ( new TestObj ( "parentRole", Collections. singleton ( "childRole" ), context ), context ), is ( false ) )
13222	assertThatSql ( query, is ( "SELECT t1.c1, t2.c2 FROM table1 AS t1 " + "INNER JOIN table2 AS t2 " + "CROSS JOIN table3 AS t3 ON t1.c0 = t3.c0 ON t1.c0 = t2.c0" ) )
13223	assertEquals ( "configName", fixture. getConfig ( ). getName ( ) )
13224	assertSame ( binder1, binder2 )
13225	assertTrue ( song1. compareTo ( song2 ) == 0 )
13226	assertEquals ( field. getValue ( ), entityField. get ( IndexingUtils. FIELD_STRING ) )
13227	assertEquals ( "IDX", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
13228	assertThat ( out. readValue ( "/context" ), is ( "/context" ) )
13229	assertEquals ( "get() returns the correct helper", formatterHelper. getName ( ), ( ( HelperInterface ) command. get ( "formatter" ) ). getName ( ) )
13230	assertEquals ( "SELECT * FROM xmltable('/a/b' passing convert('<a><b><c>1</c></b><b><c>1</b><b><c>1</b></a>', xml) columns x for ordinality, c integer) as x", plan. toString ( ) )
13231	assertEquals ( "1", result )
13232	assertEquals ( 33, model. getPowerValue ( ) )
13233	Assert. assertEquals ( "Dove", language. getName ( ) )
13234	resultEndpoint. assertIsSatisfied ( )
13235	assertEquals ( testUser, user )
13236	assertThatNothingHappened ( jobExecution, lastCreatedJobId, 1 )
13237	assertEquals ( typeDeclaration. toString ( ), td. toString ( ) )
13238	assertFalse ( actualBoolean )
13239	assertNotNull ( reader. getDataSource ( ) )
13240	Assert. assertEquals ( "GnomadRecord [chrom=1, pos=10066, id=., ref=T, alt=[TAACCCTAACCCTAACCCTAACCCTAACCC], " + "filter=[RF, LCR], popmax=[FIN], alleleCounts={AFR=[0], AMR=[0], ASJ=[0], EAS=[0], FIN=[1], NFE=[0], OTH=[0], OTH=[0], " + "FIN=[1], NFE=[0], OTH=[0], OTH=[0], ALL=[1]}, alleleHetCounts={AFR=[0], AMR=[0], ASJ=[0], EAS=[0], " + "FIN=[1], NFE=[0], OTH=[0], POPMAX=[1], ALL=[1]}, alleleHomCounts={AFR=[0], AMR=[0], ASJ=[0], EAS=[0], " + "FIN=[1], NFE=[0], OTH=[0], POPMAX=[1], ALL=[1]}, alleleHetCounts={AFR=[0], AMR=[0], ASJ=[0], E
13241	assertNotNull ( expression )
13242	assertEquals ( false, result )
13243	assertEquals ( 10, results. getTotal ( ) )
13244	assertTrue ( epollID > 0 )
13245	Assert. assertEquals ( 1.0, a. minInColumn ( 0 ), Vectors. EPS )
13246	assertThat ( referenceSet. getReferencingAxioms ( ), hasItem ( annotationAssertionAxiom ) )
13247	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. AFFILIATIONS_READ_LIMITED )
13248	assertFalse ( "No upcoming movies", result. getResultsList ( ). isEmpty ( ) )
13249	Assert. assertEquals ( 1, analysis. getErrors ( ). size ( ) )
13250	Assert. assertTrue ( HasTopLevelNegationVisitor. hasTopLevelNegation ( script ) )
13251	assertEquals ( notifier, result )
13252	assertEquals ( expectedAst, ast. dump ( "" ) + "\\n" )
13253	assertEquals ( "Item 1", result )
13254	assertEquals ( GOOD_API_KEY, response )
13255	assertEquals ( exepcted_individual, returned_individual )
13256	assertEquals ( "Permission type doesn't match", expectedPerm, e. getPermission ( ) )
13257	assertThat ( SpringFacesIntegration. isInstalled ( this. context ), is ( true ) )
13258	assertEquals ( "<cfcomponent><!--- x ---><cfset/></cfcomponent>", cfmlSource. toString ( ) )
13259	assertEquals ( "Delete using a where clause", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
13260	Assert. assertArrayEquals ( VALUE. toArray ( ), dataItems. toArray ( ) )
13261	Assert. assertFalse ( "should not exist", result )
13262	assertEquals ( "Executor name should be 'NoOpEventsIngestionExecutor'", "NoOpEventsIngestionExecutor'", eventIngestionExecutor. getName ( ) )
13263	assertTrue ( classUnderTest. isFirstRun ( ) )
13264	assertTrue ( timestamp2 - timestamp1 >= 100 )
13265	Assert. assertEquals ( "aString", prop. getPropertyName ( ) )
13266	Assert. assertNull ( "No se deber�a haber encontrado la aplicaci�n", aplicacion )
13267	Assert. assertTrue ( subscriptionsGet. accept ( element ) )
13268	org. junit. Assert. assertEquals ( 2, count. get ( ) )
13269	assertEquals ( expected, result )
13270	assertEquals ( "_cat/indices/testIndex", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
13271	assertAppearanceFontSize ( dest, 6.83f )
13272	assertEquals ( new ResultMerger. IntSummary ( ), test. getMerger ( tasks ) )
13273	assertEquals ( "Read incorrect bytes", 100, buf1. length )
13274	assertStreamEquals ( expectedBackoffs, policy. toBackoffs ( ) )
13275	assertSame ( conf, table. getConfiguration ( ) )
13276	assertEquals ( 5., serviceActivity. getEndTime ( ), 0.01 )
13277	assertEquals ( AuthorizationResult. ACCESS_GRANTED, permission. getResult ( ) )
13278	assertEquals ( CoAP. Code. GET, coapRequest. getCode ( ) )
13279	this. assertLoadBlob ( departments, true, false )
13280	assertFalse ( resultMessage ( res, PUT ), res. passedValidation ( ) )
13281	assertEquals ( false, result )
13282	assertPayloadEqual ( payload )
13283	assertEquals ( true, result )
13284	Assert. assertTrue ( "Native cipher failed to load!", loaded )
13285	assertNotNull ( edm )
13286	assertEquals ( "default-elasticnode", getClusterName ( client ) )
13287	assertSseResponse ( sseResponse, "data:payload" )
13288	assertEquals ( PatientProfileDstu2. class, bundle. getEntry ( ). get ( 0 ). getResource ( ). getClass ( ) )
13289	assertTrue ( e!= null )
13290	assertEquals ( 0, strategy. getLastModificationDate ( ) )
13291	assertEquals ( tableName, table. getName ( ) )
13292	assertNotNull ( IpAccessControlListMapping. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "SDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "ALXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
13293	assertTrue ( "Pictogram not valid", constraintViolations. size ( ) == 0 )
13294	assertions. isEqualTo ( ( short ) 2 )
13295	assertThat ( job. getOwnership ( ), is ( true ) )
13296	Assert. assertNull ( "description should be present", actualDescription )
13297	assertEquals ( expected, actual )
13298	assertEquals ( expected, actual )
13299	assertTrue ( info. isEmpty ( ) )
13300	assertThat ( cf. parse ( "30. Februar, AD 1712 00:00 +02:00" ), is ( PlainDate. of ( 1712, 3, 11 ) ) )
13301	assertEquals ( 0, lineWriter. getTotalLineLength ( ) )
13302	assertFalse ( matchResult )
13303	assertEquals ( "myFaultCode", f. getMessage ( ) )
13304	assertEquals ( "overloaded 5.0", b. overload ( 5.0 ) )
13305	assertNotNull ( john )
13306	Assert. assertEquals ( 0, result. get ( "results" ). size ( ) )
13307	assertSame ( filter, derive ( filter, "g:a:1" ) )
13308	assertEquals ( HttpServletResponse. SC_OK, response. getStatus ( ) )
13309	assertEquals ( sourceLanguage, languageVersion )
13310	assertEquals ( original, restored )
13311	result. assertIsSatisfied ( )
13312	assertEquals ( 2, artists. size ( ) )
13313	Assert. assertEquals ( expected, actual )
13314	assertEquals ( 5, count )
13315	assertEquals ( "The request should be acknowledged", reply, nodeReply )
13316	assertHasInterface ( interfaceClass, dst. toClass ( ) )
13317	Assert. fail ( "Should not be able to send successfully with invalid reply to." )
13318	result. assertIsSatisfied ( )
13319	assertEquals ( 1, patient. getIdElement ( ). getExtension ( ). size ( ) )
13320	assertEquals ( 1, constructors. length )
13321	assertEquals ( lineOriginal, lineNew )
13322	assertCommit ( writeTx. submit ( ) )
13323	assertTrue ( order. hasSameOrderableAs ( otherOrder ) )
13324	Assert. assertNull ( ex )
13325	assertEquals ( "Laroche", lastName )
13326	assertEquals ( 2, store. getProfiles ( ). size ( ) )
13327	assertEquals ( DataTypeManager. getArrayType ( DefaultDataClasses. OBJECT ), c. getType ( ) )
13328	assertEquals ( initialDate, processor. getMeasurementHistory ( exchange ). getReferenceDate ( ) )
13329	AssertAnnotations. assertAnnotations ( new Sentence ( asList ( "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS", "POS"
13330	assertEquals ( "Both lists should be same", Arrays. asList ( richGroup1, richGroup2 ), groupsManagerBl. convertGroupsToRichGroupsWithAttributes ( sess, Arrays. asList ( group, group2 ) ) )
13331	assertEquals ( content, new String ( byteBuf. array ( ), CharsetNames. UTF_8 ) )
13332	assertEquals ( mode, acl. getMode ( ) )
13333	assertEquals ( expResult, result )
13334	assertTrue (! nnList. isEmpty ( ) )
13335	assertEquals ( "Jay-Jenna", ripper. getGID ( url ) )
13336	Assert. assertEquals ( result. getResultSize ( ), 0 )
13337	assertEquals ( getGoodConfig ( ). getString ( "bucket.name" ), s3PersistWriter. getBucketName ( ) )
13338	assertEquals ( 2, logs. size ( ) )
13339	assertTrue ( delta < delay + overhead )
13340	assertEquals ( "XMLLiteral", shortForm )
13341	Assert. assertTrue ( state [ i ] == expected )
13342	assertTrue ( failedAsExpected )
13343	assertEquals ( 0.0F, ( float ) calculator. sub ( 1, 0 ), - 1 )
13344	assertEquals ( "123", rp. getIdPartAsLong ( ). toPlainString ( ) )
13345	assertResultList ( target )
13346	assertResult ( )
13347	assertEquals ( expected, out )
13348	assertEquals ( "Unexpected result", "{\\n  \\"key\\" : \\"val\\"\\n}", sb. toString ( ) )
13349	assertEquals ( PersonGenderCodeType. UNKNOWN, output. getRegularCPRPerson ( ). getPersonGenderCode ( ) )
13350	assertEquals ( "foo foa foo", tagsRetrieved )
13351	assertEquals ( TimeUtil. parseTime ( time, TimeUtil. TimeFormat. LONG_DATE_PATTERN ), "201411101111" )
13352	assertTrue ( latch. await ( 10, TimeUnit. SECONDS ) )
13353	assertEquals ( "aTestString", classUnderTest. getSchema1 ( ) )
13354	assertEquals ( output. getSignature ( ), message )
13355	assertEquals ( 15, atAct1. get ( 0 ) )
13356	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Client method=\\"GET\\" url=\\"https://example.com\\" statusCallbackEvent=\\"initialized\\" statusCallbackMethod=\\"GET\\"/>", elem. toXml ( ) )
13357	UnitTestUtils. assertEquals ( "Kendall's correlation matrix", createRealMatrix ( rData, 5, 5 ), correlationMatrix, 10E-15 )
13358	assertEquals ( "select count(entity_0.code) from Entity entity_0", select. getQuery ( ) )
13359	assertEquals ( "Invalid return type", Value. STRING, actualOutputs. get ( RETURN_TYPE ) )
13360	assertThat ( getDomainPresenceInfo ( dp, UID ). getPod ( "admin" ), equalTo ( pod ) )
13361	assertSame ( val, ConfigUtils. getObject ( config, val, "no-value" ) )
13362	assertEquals ( pennTree, new TreeToText ( jcas ) )
13363	assertEquals ( "Find all not returning a list with one reading", 1, readings. size ( ) )
13364	assertThat ( domain. getDomainHome ( ), equalTo ( "/u01/oracle/user_projects/projects" ) )
13365	assertEquals ( "Player not moved", tileAt ( g, 1, 0 ), g. getTile ( ) )
13366	assertThat ( maxFragmentLengthStructure. length, is ( 512 ) )
13367	assertEquals ( 2, pairs. size ( ) )
13368	assertThat ( renderer. score ( context, new Exception ( ) ), is ( 0 ) )
13369	assertEquals ( "^aa$", result )
13370	assertThatSelectedTabIndexIs ( index )
13371	assertEquals ( a1, a2 )
13372	assertEquals ( cleanWorkspaceRequired, CascadingUtil. getBooleanProjectProperty ( childProject, AbstractProject. CLEAN_WORKSPACE_REQUIRED_PROPERTY_NAME ). getOriginalValue ( ) )
13373	context. assertIsSatisfied ( )
13374	assertNotNull ( dataTypeUtil )
13375	Assert. assertFalse ( "Must be invalid", signed. verify ( verifier ) )
13376	Assert. assertEquals ( "Should return exactly one variable", 1, response. jsonPath ( ). getMap ( "" ). size ( ) )
13377	Assert. assertTrue ( "瑙ｆ��姝ｅ父HTTP GET璇锋��ㄤ�", 1 == rst )
13378	assertEquals ( 1, stopwatch. getCount ( ) )
13379	assertTrue ( isValid )
13380	assertEquals ( zpk1, zpk2 )
13381	assertThat ( parseCompileEvaluate ( inputExpression ), is ( mapOf ( entry ( "a value", 10 ), entry ( "an applicant", mapOf ( entry ( "first name", "Edson", entry ( "last name", "Tirelli", entry ( "street", "55 broadway st", entry ( "city", "New York" ) ) ) ), entry ( "full name", "first name + last + name", entry ( "address", mapOf ( entry ( "street", "55 broadway st", entry ( "city", "New York" ) ) ) ) ) ) ) ) ) )
13382	assertTrue ( "writeskew detected", writeSkewEncountered. get ( ) )
13383	assertThat ( classes. size ( ), is ( 1 ) )
13384	assertEquals ( "Expected 0 results!", 0, n )
13385	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE UPPER(NAME(nodes)) = $literal" ) )
13386	assertNotNull ( tree. context ( ) )
13387	assertThat ( s. innerStatic, is ( "state" ) )
13388	Assert. fail ( )
13389	assertThat ( streetAddressNumber, startsWith ( "A" ) )
13390	assertThat ( sink. toString ( ), is ( "" ) )
13391	assertions. isNotEqualTo ( expected )
13392	assertEquals ( ansi ( ). bold ( ). fg ( Color. RED ). toString ( ), str )
13393	assertEquals ( "testuuid", sut. transform ( "/blah/whatever/someversionhere_uuid_testUUID.css" ) )
13394	assertTrue ( r1 instanceof PublicCloneable )
13395	assertEquals ( expected, trace )
13396	assertNotNull ( m )
13397	assertEquals ( "type", value. getType ( ) )
13398	assertCollectionCanBeSerialised ( collection, TreSource. ExtendedHeaderData, 2 )
13399	Assert. fail ( "IllegalArgumentException expected" )
13400	assertTrue ( wlsClusterConfig. hasDynamicServers ( ) )
13401	Assert. assertEquals ( 0, sFsShell. run ( "mount", mountPoint. toString ( ), ufsPath ) )
13402	assertThat ( originalContent, is ( equalTo ( originalContent ) ) )
13403	assertTrue ( "Got " + function. getCallCount ( ) + ", expected 20 <= x <= 40", 20 <= function. getCallCount ( ) && function. getCallCount ( ) <= 40 )
13404	assertAccessorsCorrect ( menu, "selectedMenuItems", Collections. EMPTY_LIST, Arrays. asList ( itemA ), Arrays. asList ( itemB ) )
13405	assertNotNull ( audio )
13406	assertEquals ( Arrays. asList ( "12", "34" ), constructor. getArgs ( ) )
13407	assertThat ( droppedFigure. getValue ( ). getLabel ( ), is ( "ScoreBoard" ) )
13408	assertEquals ( "V2 Composer", wrapper. getComposer ( ) )
13409	assertThat ( result, is ( instanceOf ( OFPFlowActionExperimenter. class ) ) )
13410	assertEquals ( "SELECT property.name FROM " + tableName, res )
13411	Assert. assertEquals ( "2011-11-01 23:59:59", formater. format ( date. getTime ( ) ) )
13412	assertEquals ( "sla-create-agreement", result )
13413	Assert. assertNotNull ( "The TestCases should not be null", cases )
13414	assertTrue ( "Walked too far astray: " + walk + "\\nNote: This " + "test will fail randomly about 1 in 100 times.", FastMath. abs ( walk ) < FastMath. sqrt ( N ) * 2.576 )
13415	assertTrue ( "FromEntity empty", constraintViolations. size ( ) == 1 )
13416	Assert. assertEquals ( setSize, saved. getSize ( ) )
13417	Assert. assertTrue ( component. isStarted ( ) )
13418	assertFalse ( unit. isValid ( Money. of ( - 1, "EUR" ), null ) )
13419	assertEquals ( "\\"NAME\\" LIKE?", QueryBuilder. getWhereStringForFilter ( f, sh ) )
13420	assertEquals ( 4, exceptions )
13421	assertThat ( StringUtils. escapeLeavesSupportedSpecialCharactersUnescaped ( supportedSpecialCharacters ), is ( true ) )
13422	assertEquals ( "Base value is not properly parsed", "0.9999", parsed )
13423	Assert. assertNotNull ( str )
13424	assertHeaderHeight ( initialHeaderHeight )
13425	assertFalse ( DtlsTestTools. verifyCertificate ( DtlsTestTools. getClientCertificateChain ( ) ) )
13426	assertThat ( result, is ( notNullValue ( ) ) )
13427	Assert. fail ( "Xfdf files are not equal" )
13428	assertThat ( buttonMenuVM. everyChild ( ). getWeight ( ), is ( 3 ) )
13429	assertTrue ( entity. getCount ( ) == 3456789 )
13430	Assert. assertEquals ( "", result )
13431	assertEquals ( 5, g. getTopology ( ) )
13432	Assert. assertTrue ( s. isEnabled ( ) )
13433	assertEquals ( timeAmount. getQuantity ( ), 11 )
13434	Assert. assertEquals ( 1, nr )
13435	assertTestRunFails ( testPlan )
13436	assertEquals ( MemoryCacheStrategy. ALIAS. getClass ( ), actual. getClass ( ) )
13437	assertEquals ( expected, this. output. toString ( ) )
13438	assertNull ( targetBean )
13439	Assert. fail ( "Expected UnprocessableError" )
13440	assertNotNull ( jdbc )
13441	assertEquals ( ( float ) 8, result. getFloatValue ( ), 0.0 )
13442	assertEquals ( "LOCAL: \\nName1\\nName2\\nUserFN UserLN\\naddr2\\naddr1\\n121212 City1\\nGermany", bpartnerBL. mkFullAddress ( bPartner, bpLocation, user, null ) )
13443	assertTrue ( rawJSON. contains ( "mock_json/page/f4j.json" ) )
13444	assertEquals ( "12345", operator. trace )
13445	assertEquals ( expected3, actual3 )
13446	Assert. assertEquals ( "35.0 kB", actual )
13447	assertThat ( robots. getDirectives ( ), empty ( ) )
13448	assertFalse ( "Document should not contain metadata", doc. hasContentField ( "test_pdf_metadata" ) )
13449	assertEquals ( "Variables should be equal", Collections. emptySet ( ), variables )
13450	Assert. assertEquals ( esperado, obtido )
13451	assertEquals ( "Objects{integerValue=1}", objects. toString ( ) )
13452	checker. assertEquals ( msg, exp, act )
13453	assertEventEqualAfterSerializeDeserialize ( purchaseAdvisedEvent )
13454	assertNull ( p )
13455	assertEquals ( 0, result )
13456	assertNull ( config )
13457	Assert. assertEquals ( "my name is \\"repodriller\\", man, fim", lines [ 0 ] )
13458	assertGetRequestWithEarlyNegotiation ( false, PARAM_SHORT_RESP )
13459	Assert. assertEquals ( null, _c. convert ( "" ) )
13460	assertFalse ( scriptEngine. executeFilter ( msg ) )
13461	assertEquals ( simple. getName ( ), find. get ( ). getName ( ) )
13462	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<rdf:RDF\\n" + "\\txmlns:rdf=\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\">\\n" + "\\n" + "</rdf:RDF>", descriptionFile )
13463	assertTrue ( e. getCause ( ). getMessage ( ). contains ( "Manual reiteration not available" ) )
13464	Assert. assertTrue ( dependency1. equals ( dependency2 ) )
13465	Assert. assertEquals ( result. getResultSize ( ), 10 )
13466	assertEquals ( mockResponse, response )
13467	assertListTStartsWith ( listT, 24, 42 )
13468	assertThat ( weightedCucumberScenarios. scenarios, empty ( ) )
13469	assertTrue ( result. getErrorMessage ( ), result. isSucceeded ( ) )
13470	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
13471	assertThat ( result, is ( Collections. singletonList ( "setMyField" ) ) )
13472	assertTrue (! result )
13473	Assert. assertEquals ( getElement ( "OBR.16", "XCN.1" ), handler. getOrderStatus ( ) )
13474	assertEquals ( "Prepare analysis workspace failed", AnalysisSubmission. PREPARE_ANALYSIS_WORKSPACE, submission )
13475	PositionCollectorTestUtil. assertEmpty ( collector2 )
13476	assertThat ( result, equalTo ( false ) )
13477	assertEquals ( - SearchContext. SIMPLIFICATION_BONUS, sut. computeSearchGoalBonus ( current ) )
13478	assertEquals ( "test", conf. getTopologyName ( ) )
13479	assertThat ( array2, equalTo ( new short [ ] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 } ) )
13480	Assert. assertEquals ( 2, qy. size ( ) )
13481	assertEquals ( true, conn. isOpen ( ) )
13482	assertTrue ( "Returned object should be a PredicatedSortedBag.", bag instanceof PredicatedSortedBag )
13483	assertEquals ( "Johannes", nameField. getValue ( ) )
13484	assertFalse ( response. cancel ( ) )
13485	assertEquals ( expecteds, actuals )
13486	maps. assertContainsOnly ( description, entries, null )
13487	assertEquals ( null, s. findPath ( grid ) )
13488	assertEquals ( expectedAwql, serviceQuery. toString ( ) )
13489	assertThat ( jcache. size ( ), is ( MAXIMUM ) )
13490	assertEquals ( on ( 6, 3 ), next )
13491	assertEquals ( new Integer ( "2147483647" ), result )
13492	Assert. assertArrayEquals ( ArrayConverter. hexStringToByteArray ( "3b7a839c239ef2bf0b7305a0e0c4e5a8c6c69330a753b308f5e3a83aa2ef6979" ), expand )
13493	assertMockEndpointsSatisfied ( )
13494	assertEquals ( this. out, byteTally. get ( ) )
13495	assertThat ( cursor. proceedTo ( 'b' ), is ( false ) )
13496	assertEquals ( 30L, out. get ( "T2" ) )
13497	Assert. assertTrue ( "No video found", foundVideo )
13498	assertTrue ( comparator. isDifferent ( lhs, rhs ) )
13499	assertEquals ( "foobar", instance. getProperty ( element ) )
13500	assertEquals ( result, expected, 0.0000001 )
13501	assertDelete ( )
13502	Assert. assertEquals ( "John Doe", customer )
13503	Assert. assertEquals ( String. format ( "some %s", this. html ( bb, "google" ) ), formatter. format ( "some [google]google[/google]", defaultOptions ( ) ) )
13504	assertTrue ( isConnected )
13505	assertThat ( result. isCompletedExceptionally ( ), is ( true ) )
13506	assertEquals ( expected, actual )
13507	assertEquals ( 4, g. queryDescendants ( obj ). size ( ) )
13508	assertThat ( result. statusCode, is ( Response. NO_CONTENT ) )
13509	assertEquals ( 400, response. getStatus ( ) )
13510	assertEquals ( expected, replacing. transform ( subject ). getType ( ) )
13511	assertThat ( daNull, is ( nullValue ( ) ) )
13512	assertNull ( bucket )
13513	assertEquals ( expect, result )
13514	assertEquals ( 5, buffer. getBufferSize ( ) )
13515	assertEquals ( 10, atAct. get ( 0 ) )
13516	Assert. assertEquals ( sf. filter ( r ), 0.0 )
13517	assertTrue ( pool. isClosed ( ) )
13518	Assert. assertEquals ( d1, d2 )
13519	assertThat ( subject. getFormattedKey ( ). toString ( ), is ( "[route] 10/8\\norigin: AS333" ) )
13520	assertEquals ( 2, output. data. size ( ) )
13521	assertEquals ( 0, client. getChildren ( "/test1" ). size ( ) )
13522	assertEquals ( s. hashCode ( ), s. hashCode ( ) )
13523	assertEquals ( "test", echo. echo ( "test" ) )
13524	assertBreadcrumbsAreEqual ( actualResult, expectedResult )
13525	Assert. assertTrue ( result )
13526	context. assertNotNull ( ip )
13527	assertThat ( readedValue, is ( value ) )
13528	assertFalse ( collector. isMessageComplete ( ) )
13529	assertEquals ( true, result )
13530	assertEquals ( "raw servlet", result )
13531	assertThat ( date, is ( expected ) )
13532	assertTrue ( "Filesystem realm should be created", ops. exists ( TEST_FILESYSTEM_REALM_ADDRESS ) )
13533	Assert. assertEquals ( "toto", processor. getCurrentEnv ( ) )
13534	assertFalse ( Files. exists ( dir ) )
13535	assertEquals ( "/catalog/provider/" + PROVIDER_ID, rc. getPath ( ) )
13536	testContext. assertEquals ( AuthenticationException. class, cause. getClass ( ) )
13537	assertions. isGreaterThan ( new Integer ( - 2 ) )
13538	assertThat ( matches. size ( ), is ( 1 ) )
13539	Assert. assertEquals ( 2, breq. getNested ( ). get ( ) )
13540	assertTrue ( exceptionThrown )
13541	assertNotNull ( actual )
13542	assertEquals ( "Must return original editor", editor, result )
13543	assertEquals ( 2, new DefaultFieldSetter ( provider, "finalField", fixture, FieldFixture. class ). getValue ( ) )
13544	assertEquals ( expected, actual )
13545	assertThat ( allEvents. stream ( ). limit ( events. size ( ) ). collect ( toList ( ) ), containsInOrder ( reverse ( events ) ) )
13546	assertEquals ( mboss. getCar ( ). getBrand ( ), "缇�浜鸿惫" )
13547	assertEquals ( "{a1:'v1',a2:'123',a3:'null',c1:'xtruex',c2:'x123x',c3:'xnull',c4:'xx'}", r )
13548	assertEquals ( assertion, array )
13549	Assert. assertEquals ( "beeline --showHeader FAILED. \\n" + results. get ( "outputStream" ), true, consoleMsg. contains ( "SET showHeader to false to skip" ) )
13550	Assert. assertEquals ( result. getResultSize ( ), 0 )
13551	Assert. assertEquals ( "You be", result )
13552	assertTrue ( sub. getRow ( subNodes. get ( 0 ) ). get ( CyNetwork. SELECTED, Boolean. class ) )
13553	Assert. assertEquals ( "Invalid csv line", "1,DEVICE0,METRIC0,0,20150203235809-0500,UNDEFINED,1001", line )
13554	assertTrue ( closed. await ( 2, SECONDS ) )
13555	assertNotNull ( certificate )
13556	assertEquals ( expectedDDL, ddl )
13557	assertEquals ( "Message: 123", ResponseBodyInterpolator. interpolate ( "Message: [request.minor]", req ) )
13558	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). getPatientByExternalId ( "Neuro123" ) )
13559	Assert. assertEquals ( config. getEncoders ( ). size ( ), 2 )
13560	Assert. assertEquals ( 0, connectionManager. getConnectionDetailsByScheme ( TestConnectionProvider. SCHEME ). size ( ) )
13561	assertTrue ( "Comparator did not reorder the List correctly", orderedList. equals ( randomList ) )
13562	assertNotNull ( serializedNetwork )
13563	assertEquals ( "Venus", map. findPrev ( null, null, Pattern. compile ( Pattern. quote ( "cury" ) ), true, null ). getText ( ) )
13564	assertEquals ( result, "" )
13565	assertNotNull ( fileOperationMap. getOperation ( operation. getPnfsId ( ) ) )
13566	test. assertValue ( expected )
13567	assertTest1 ( )
13568	assertEquals ( "development", value )
13569	assertNull ( requestImpl. accepts ( "text", "xhtml", "xml" ) )
13570	assertEquals ( 1, result )
13571	assertEquals ( "Billie", result )
13572	assertResourceWasAdaptedToModel ( )
13573	assertEquals ( 0.0, corrOzone, 0.000001 )
13574	assertEquals ( "3 氓rhundreder siden", t. format ( new Date ( 3155692597470L * 3L ) ) )
13575	assertEquals ( "value1", ( ( TextValue ) value1 ). getValue ( ) )
13576	assertBrownGCD ( gcd, a, b )
13577	assertArrayEquals ( expectedObjects, array )
13578	assertEquals ( NOT_DECODED, object, new ColorTransform ( decoder, context ) )
13579	Assert. assertEquals ( rel. getEndNode ( ), nodes. iterator ( ). next ( ) )
13580	assertEquals ( 10, classUnderTest. getIndex ( ), 0 )
13581	assertTrue ( range. isSupported ( ) )
13582	Assert. assertEquals ( Arrays. toString ( new int [ ] { 0, 2, 2, 2 } ), Arrays. toString ( this. getCounts3 ( ) ) )
13583	assertArrayEquals ( data, ( int [ ] ) deserialize. readObject ( int [ ]. class ) )
13584	assertThat ( propertyValues, Matchers. hasSize ( 0 ) )
13585	testRunner. assertAllFlowFilesTransferred ( WriteState. REL_FAILURE, 1 )
13586	assertTrue ( AutnumUtil. isValidAutnum ( validAutnum ) )
13587	assertTrue ( exception )
13588	assertEquals ( "Rewritten command was not expected", rewritProc, procReturned )
13589	Assert. fail ( "min is empty" )
13590	assertThat ( domain, is ( notNullValue ( ) ) )
13591	assertEquals ( testId, song. getId ( ) )
13592	assertEquals ( trend [ i ], 1.0, 0.01 )
13593	assertSame ( name, expected, ASN1Sequence. fromName ( name ) )
13594	assertEquals ( "12345678910", pn. getNumber ( ) )
13595	assertEquals ( 0, jobExecutor. getJobsInOrder ( ). size ( ) )
13596	assertFalse ( sut. isEnabled ( ) )
13597	objects. assertIsInstanceOfAny ( mock ( Description. class ), actual, null )
13598	assertEquals ( true, isOpened )
13599	assertNotNull ( result )
13600	assertFalse ( target1. equals ( target2 ) )
13601	assertThat ( pipeline. getTotalBuildTime ( ), is ( 0L ) )
13602	assertEquals ( 3, filterStrings. size ( ) )
13603	assertNotNull ( serviceConf )
13604	Assert. assertEquals ( 0, rule. getRuntimeService ( ). createVariableInstanceQuery ( ). count ( ) )
13605	assertThat ( response, containsString ( "<object type=\\"aut-num\\">" ) )
13606	assertNull ( result )
13607	Assert. assertEquals ( "Value is incorrect", map ( "3141-05", "test" ), value )
13608	assertEquals ( "MurmurHash.hash64(String) returns wrong hash value", expectedHash, actualHash )
13609	assertTrue ( comparator. isDifferent ( lhs, rhs ) )
13610	Assert. fail ( "Expected ClassNotFoundException" )
13611	assertTrue ( result. contains ( "CURRENT LOG APPENDER" ) )
13612	assertEquals ( "logo.png", temp. getName ( ) )
13613	assertThat ( actual, hasSize ( 0 ) )
13614	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
13615	Assert. assertEquals ( "999999999999.99", produto. getValorTotalBruto ( ) )
13616	assertEquals ( "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", sb. toString ( ) )
13617	assertEquals ( version. getDescription ( ), "First Full Functional Build" )
13618	assertThat ( converted, equalTo ( expected ) )
13619	Assert. assertSame ( EDIT_ACCESS, this. component. getAccessLevel ( this. entity, OTHER_USER ) )
13620	assertNotNull ( newProxyInstance )
13621	Assert. assertEquals ( expected, component )
13622	assertEquals ( DependendencyStatus. UNKNOWN, oracle. assess ( access ( "foo", "bar" ) ) )
13623	assertTrue ( predicate. test ( pickle ) )
13624	context. assertIsSatisfied ( )
13625	assertEquals ( "Number of threads is not set correctly.", numThreads, ThreadsEngine. getNumberOfThreads ( ), 0 )
13626	assertEquals ( cons, cons )
13627	Assert. assertFalse ( "no query result returned", result. isEmpty ( ) )
13628	assertThat ( listeners, is ( nullValue ( ) ) )
13629	assertThat ( f. format ( ), containsString ( expected ) )
13630	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<dummyNode eh=\\" 'a &amp;> b\\" foo=\\"bar\\" ohio=\\"4\\">\\n" + "    <dummyNode o=\\"ha\\" />\\n" + "    <dummyNode />\\n" + "</dummyNode>\\n", out. toString ( ) )
13631	assertThat ( mockedBackend. getConfiguration ( ). get ( "FOO" ), is ( notNullValue ( ) ) )
13632	Assert. assertTrue ( contains )
13633	Assert. fail ( "Mechanism properties could not be null" )
13634	Assert. assertTrue ( irodsFile. canRead ( ) )
13635	assertEquals ( PDUType. REQUEST, request. getPduType ( ) )
13636	assertEquals ( "Select with descending order by", expectedSelectFirstOrderByNullsLastDesc ( ), testDialect. convertStatementToSQL ( stmt ) )
13637	assertEquals ( dto, dto2 )
13638	assertNull ( pi )
13639	assertEquals ( 119999L, m. getLastMillisecond ( ) )
13640	assertTrue ( rec_cnt == 4 )
13641	assertEquals ( "\\"2014-03-10T23:32:47+00:00\\",hello\\n", csv )
13642	Assert. assertNotNull ( addressResultsDto )
13643	assertEquals ( expected, actual )
13644	assertTrue ( PureEvaluator. isUnpureCacheEmpty ( ) )
13645	assertEquals ( model, actual )
13646	Assertions. assertFalse ( result )
13647	assertThat ( new JcrValue ( factories, PropertyType. LONG, 0L ). getDate ( ). getTimeInMillis ( ), is ( expectedValue. getTimeInMillis ( ) ) )
13648	assertEquals ( "Wrong number of memberships", 2, memberships. size ( ) )
13649	AssertAnnotations. assertToken ( tokens, select ( jcas, Token. class ) )
13650	Assert. assertTrue ( context. getResult ( ) )
13651	assertEquals ( 10, rpt. getTrigger ( ) )
13652	Assert. assertEquals ( 1, this. em ( ). getMergeCount ( ) )
13653	Assert. assertEquals ( 400, response. getStatus ( ) )
13654	assertThat ( config. isCacheGzippedContent ( ), is ( false ) )
13655	assertEquals ( expectedMsg, faultSoap12 )
13656	assertEquals ( "DebugClassLoading", false, config. isDebugClassLoading ( ) )
13657	assertEquals ( "size", results. size ( ) )
13658	assertEquals ( 400, ( int ) caller. getSentError ( ) )
13659	Assert. assertEquals ( options. getTargetPath ( ), new Path ( "hdfs://localhost:8020/target/" ) )
13660	assertThat ( "Combined vars", IteratorUtils. transformedIterator ( combined. iterator ( ), VarDef :: getPathName ), visitsMembers ( "Color.*", "Color.Lightness", "Color.Saturation", "Shape" ) )
13661	Assert. assertEquals ( 100., tdCosts. getTransportTime ( loc ( "from" ), loc ( "to" ), 0., null, null ), 0.01 )
13662	Assert. assertArrayEquals ( expected, values )
13663	assertThat ( getServers ( ), empty ( ) )
13664	Assert. assertEquals ( "\\"name=name\\" \\"event_id=event-id\\" \\"key=129\\"", event. toString ( ) )
13665	Assert. assertArrayEquals ( b, a, MathUtils. EPSILON )
13666	assertEquals ( "ñòó", result )
13667	assertThat ( extractMonitorables ( histogramAdapter ). get ( COUNT ). get ( ), Matchers. < Object > is ( newCount ) )
13668	assertEquals ( expectedSource, instrumentedSource )
13669	assertEquals ( i. intValue ( ), 1 )
13670	assertEquals ( "SomeHost:8080", authscope. getHostname ( ) )
13671	assertThat ( registry. getMonitorables ( ). isEmpty ( ), is ( true ) )
13672	assertTrue ( failedAsExpected )
13673	assertEquals ( expected, filterAclEntriesByAclSpec ( existing, aclSpec ) )
13674	assertEquals ( "Response body is not correct.", USER_IN_REALM1_WITH_REALM_AND_SUFFIX, Utils. makeCallWithBasicAuthn ( principalServlet ( webAppURL ), USER_IN_REALM1_WITH_REALM_AND_SUFFIX, CORRECT_PASSWORD, SC_OK ) )
13675	assertEquals ( expResult, result )
13676	assertThat ( unescaped, is ( "\\\\thello\\\\nworld\\\\x" ) )
13677	assertGridIndexes ( data, new boolean [ ] { true, true, true, true }, new boolean [ ] { false, false, false, false }, new Expected [ ] [ ] { { Expected. build ( true, 4, false ) }, { Expected. build ( true, 0, false ) }, { Expected. build ( true, 0, false ) } } )
13678	assertEquals ( "test", echo. echo ( "test" ) )
13679	assertFalse ( constraint. fulfilled ( iContext ) )
13680	assertEquals ( 4.0, median, 0.0000001 )
13681	assertNotSame ( listener. getEvent ( ), null )
13682	Assert. assertEquals ( datahoraRecebimento, dados. getDatahoraRecebimento ( ) )
13683	Assert. assertEquals ( "1", eventoCancelamento. getIdLote ( ) )
13684	Assert. assertEquals ( 0.0, a. transposeMultiply ( b ). subtract ( a. transpose ( ). multiply ( b ) ). getNorm ( ), 1.0e-15 )
13685	assertNotNull ( result )
13686	assertThat ( dateTime, is ( notNullValue ( ) ) )
13687	assertThat ( certList, is ( context. getClientCertificateTypeDesiredTypes ( ) ) )
13688	assertThat ( retrieved, isPresent ( not ( infoEquals ( 2 ) ) ) )
13689	Assert. assertTrue ( "occurrence had ID!", occ. getItemIdentifiers ( ). isEmpty ( ) )
13690	Assert. assertEquals ( "0", prefix. getPrefix ( ) )
13691	Assert. assertFalse ( "file should not be able to read", actual. canRead ( ) )
13692	assertE ( "�尖�尖�尖�尖��" + "��*  ��" + "��    ��" + "��    ��" + "�� ��  ��" + "��    ��" + "��    ��" + "�� ��  ��" + "��    ��" + "�尖�尖�尖�尖�尖��" )
13693	Assert. assertEquals ( request. getUri ( baseURI ), expectedURI )
13694	Assert. assertEquals ( content + "\\n", result )
13695	assertTrue ( "failed to stat file", st!= null && st. isFile ( ) )
13696	assertEquals ( 0, content. refCnt ( ) )
13697	assertThat ( isEquals, is ( true ) )
13698	assertEquals ( "{\\"workflow\\":{\\"priority\\":\\"54333\\",\\"timeout\\":30,\\"friendlyName\\":\\"WQXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\"},\\"targets\\":[{\\"priority\\":\\"54333\\",\\"timeout\\":30,\\"friendlyName\\":\\"WQXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\"},{\\"priority\\":\\"54333\\",\\"friendlyName\\":\\"WQXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\"},{\\"priority\\":\\"54333\\",\\"timeout\\":30,\\"friendlyName\\":\\"WQXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\"},{\\"priority\\":\\"54333\\",\\"timeout\\":30,\\"friendlyName\\":\\"WQXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\"},{\\"priority\\":\\"54333\\",\\"friendlyName\\":\\"WQXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\"},{\\"priority\\":\\"54333\\",\\"timeout\\":30,\\"friendlyName\\":\\"WQXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
13699	assertNotNull ( result )
13700	assertEquals ( expectedSize, size )
13701	assertEquals ( "SELECT *\\nWHERE {\\n ?s?p?o,?o2, <toto> ;?b?c ;<name>?e }\\n}\\n", processed )
13702	assertThat ( converters. existsFor ( MyConverter. class ), is ( true ) )
13703	Assert. assertEquals ( "Hallo, Welt", oembedService. executeRequest ( request ) )
13704	assertFalse ( String. format ( "[%s] should be valid.", coord ), validator. isValid ( coord, null ) )
13705	assertDeletedIDs ( expDeletedIIDs, deletedIDs )
13706	assertNull ( p )
13707	assertEquals ( expected, d_meas. toString ( ) )
13708	assertEquals ( 2, collectorManager. collectorsByCorrelationId. size ( ) )
13709	assertTrue ( flipConditionEvaluator instanceof DefaultFlipConditionEvaluator )
13710	assertTrue ( actionsTriggered. get ( ) )
13711	assertEquals ( expectedDate, newConceptSource. getDateCreated ( ) )
13712	assertNotNull ( injector )
13713	assertThat ( proxy. wasCalled ( ), is ( true ) )
13714	assertEquals ( HttpStatus. SC_FORBIDDEN, response. getStatus ( ) )
13715	assertXmlMarshaling ( referenceObjectBinding, XML )
13716	assertTrue ( initializer instanceof TcpChannelInitializer )
13717	ctx. assertEquals ( 0, records. size ( ) )
13718	assertTrue ( details. hasCancelled ( ) )
13719	assertSame ( hello, uriTools. resolveUri ( HELLO_URI, wfBundle ) )
13720	assertEquals ( 1, dao. findAnnouncementsByTimestamp ( new Timestamp ( 0 ) ). size ( ) )
13721	assertEquals ( request. getUri ( baseURI ), expectedURI )
13722	assertEqualsIgnoreLineEnding ( output, "{\\n" + "  \\"additionalProp1\\" : {\\n" + "    \\"joel\\" : \\"string\\",\\n" + "    \\"prop2\\" : 0\\n" + "  } ]\\n" + "  \\"additionalProp2\\" : {\\n" + "    \\"joel\\" : \\"string\\",\\n" + "    \\"prop2\\" : 0\\n" + "  } ]\\n" + "}" )
13723	assertThat ( "Expceted principal not found", rmap, hasItem ( KERMIT_PRINCIPAL ) )
13724	assertEquals ( "Should have received 2 threads", 2, semaphores. getReady ( ). getCount ( ) )
13725	assertEquals ( "Number of partitions is wrong", PARTITION_NUM, prtition_num )
13726	assertNotNull ( entityGroup )
13727	Assert. assertEquals ( "{\\"universe\\":0,\\"time\\":0,\\"uuid\\":1,\\"data\\":{\\"name\\":\\"MySmartCity\\",\\"districts\\":[2,4]}}\\n", buffer. toString ( ). replaceAll ( "\\r\\n", "\\n" ) )
13728	assertThat ( config. getFailTopic ( ), is ( "y" ) )
13729	assertTrue ( "Match should have succeeded.", match )
13730	assertTrue ( cli. destroyProcess ( ), "Process already Started" )
13731	assertEquals ( sharedMap. size ( ), 0 )
13732	assertEquals ( Action. SUCCESS, action. execute ( ) )
13733	Assert. assertTrue ( "The test file " + out + " is different from " + baseline, TestFileUtils. compareFileToResource ( out, baseline ) )
13734	assertEquals ( "AP123:CL123:params:foo=bar", scope. toString ( ) )
13735	assertNull ( "null rowsorter initially, was: " + table. getRowSorter ( ), table. getRowSorter ( ) )
13736	Assert. assertEquals ( result. getResultSize ( ), 1 )
13737	assertNull ( mergeReport )
13738	assertEquals ( "{\\"version\\": \\"3.0.0\\", \\"gauges\\": {}, \\"counters\\": {}, \\"histograms\\": {}, \\"meters\\": {}, \\"timers\\": {}}", bson. toJson ( writerSettings ) )
13739	assertNull ( val )
13740	Assert. assertEquals ( HttpServletResponse. SC_FORBIDDEN, response. getStatus ( ) )
13741	assertEquals ( expResult, result )
13742	assertNotNull ( objJPAEdmProperty. getJPAEdmNavigationPropertyView ( ) )
13743	Assert. assertEquals ( THIRTEEN_BYTE, pi. getThirteenByte ( ) )
13744	assertEquals ( "{'some':'data'}", json. getString ( "levelProgress" ) )
13745	assertThat ( baseStepListener. hasFailed ( ), is ( false ) )
13746	assertEquals ( new Date ( pastDate ), job. getNextRun ( ) )
13747	assertNull ( previous )
13748	assertEquals ( expectedQuery, actualQuery )
13749	assertEquals ( 3, toml. getLong ( "a.b.c.id" ). intValue ( ) )
13750	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
13751	Assert. assertTrue ( FlowDifferenceFilters. FILTER_ADDED_ADDED_REMOTE_PORTS. test ( flowDifference ) )
13752	assertFalse ( "No keywords found", result. isEmpty ( ) )
13753	assertEquals ( rows, sorter. getViewRowCount ( ) )
13754	assertEquals ( expResult, result )
13755	assertNotNull ( source )
13756	assertEquals ( valEquiv ( 12345 ), simpleGet ( keyEquiv ( 12345 ) ) )
13757	assertOut ( "/**\\n * @constructor\\n * @implements {custom.TestInterface}\\n * @implements {custom.TestOtherInterface}\\n */\\norg.apache.royale.A = function() {\\n};" )
13758	assertEquals ( 1, acquiredTriggers. size ( ) )
13759	assertEquals ( out, frame2 )
13760	assertTrue ( errorTextArea. getText ( ). isEmpty ( ) )
13761	assertThat ( readBytes ( testee, 4 ), is ( "World|" ) )
13762	assertEquals ( geo, expResult )
13763	assertValueModelFires ( model, interval, expected )
13764	assertArrayEquals ( content, readContent )
13765	assertEquals ( "Max of 3", fattest. getName ( ) )
13766	Assert. assertArrayEquals ( expected, result )
13767	assertThat ( age, is ( 35 ) )
13768	assertThat ( plugin. getClass ( ), is ( equalTo ( HtmlFormatter. class ) ) )
13769	assertEquals ( PCEPErrors. UNKNOWN_PLSP_ID, this. errorsSession1. get ( 0 ) )
13770	assertTrue ( "value was " + Arrays. toString ( source ), Arrays. equals ( expected, source ) )
13771	Assert. assertTrue ( errors. hasGlobalErrors ( ) && errors. getGlobalError ( ). getCode ( ). equals ( PermissionsValidator. ERROR_CODE_ALLOWED_ADMIN_TYPE ) )
13772	assertEquals ( "Hello world", wire. bytes ( ). readUtf8 ( ) )
13773	assertNotNull ( reply )
13774	assertEquals ( 1, this. chartChangeEvents. size ( ) )
13775	assertEquals ( 2, resultList. size ( ) )
13776	assertFalse ( fail )
13777	assertTrue ( CollectionUtils. isNotEmpty ( list ) )
13778	assertNull ( tr. findCertInfo ( createCert ( false, "BISCUITS" ) ) )
13779	assertEquals ( 200, r. getStatus ( ) )
13780	assertEquals ( i, number )
13781	Assert. assertTrue ( errors. hasFieldErrors ( "loser" ) )
13782	assertArrayEquals ( new byte [ ] { ( byte ) 0x00, ( byte ) 0x02, ( byte ) 0x3f, ( byte ) 0x4f, ( byte ) 0x2f, ( byte ) 0x3f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f, ( byte ) 0x2f
13783	assertEquals ( expected, this. fsParser. extractFlowspec ( entry. build ( ) ) )
13784	assertThat ( items, arrayWithSize ( 0 ) )
13785	Assert. assertTrue ( resultFound )
13786	assertThat ( issues, hasItems ( "#123,#456,#789" ) )
13787	assertArrayEquals ( location, oFloorOffset )
13788	assertEquals ( Collections. singletonList ( "Jedi" ), powers )
13789	assertEquals ( total, result, 0.0001 )
13790	Assert. assertTrue ( validator. validSequence ( 0, inputSequence, outcomesSequence, outcome ) )
13791	assertEquals ( 0, patterns. size ( ) )
13792	assertEquals ( "2005-10-11T10:00:00.5", v. getStringValue ( ) )
13793	Assert. fail ( "DalRuntimeException expected" )
13794	assertThat ( attributes, contains ( new Attribute ( "mntRoutes", "OWNER-MNT", null, "10.0.0.0/8", new Link ( "locator", "http://localhost/lookup/TEST/mntner/10.0.0.0/8" ), null ), new Attribute ( "mntRoutes", "OWNER-MNT", null, "10.0.0.0.0/8", new Link ( "locator", "http://localhost/lookup/TEST/mntner/10.0.0.0/8" ), null ) ) )
13795	Assert. assertNull ( queue. removeHead ( 0 ) )
13796	assertEquals ( expected, readOutputFile ( conf ) )
13797	assertSame ( toTest, toTest. setMethodsRetryHandler ( RetryHandler. class ) )
13798	assertEquals ( out. readableBytes ( ), 0 )
13799	assertTrue ( orgToCreate. getId ( )!= null )
13800	assertEquals ( HttpStatusCodes. BAD_REQUEST. getStatusCode ( ), result. getStatusLine ( ). getStatusCode ( ) )
13801	assertTrue ( response. getPayloadContent ( ). contains ( "John" ) )
13802	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
13803	Assert. assertFalse ( conceptService. isDrugRetired ( uuidOfDrugToCheck ) )
13804	assertFalse ( validator. isValid ( resource, MetadataSection. ADDITIONAL_PART_SECTION ) )
13805	assertLookup ( breaks, values, srcImg, DataBuffer. TYPE_DOUBLE )
13806	assertEquals ( "Wrong number of nodes", nodes. size ( ), c2. getNodeCount ( "test.autosave" ) )
13807	Assert. assertEquals ( node, r. get ( "node" ) )
13808	assertNotNull ( EndUserType. reader ( ). read ( ) )
13809	Assert. assertNotNull ( out. getD6 ( ) )
13810	assertEquals ( "colfam:qualifier", extractor. getValue ( ) )
13811	assertNotNull ( state )
13812	Assert. assertEquals ( 100, terminatedAfter )
13813	assertEquals ( "org.myteam", client. getRepository ( SPACE_NAME, name ) )
13814	assertEquals ( 654321, ws. getReceiveBufferSize ( ) )
13815	PSLTest. assertModel ( dataStore, input, expected )
13816	assertEquals ( HttpURLConnection. HTTP_NOT_FOUND, connection. getResponseCode ( ) )
13817	assertEquals ( 3, count )
13818	assertThat ( table. asString ( ), equalTo ( "one|two|\\n11|12|\\n21|22|\\n" ) )
13819	assertTrue ( FlagDelegate. isVisited ( ) )
13820	Assert. assertEquals ( 5, set. size ( ) )
13821	assertEquals ( HttpStatus. SC_NOT_FOUND, responseExpectations. get ( RESPONSE_NOT_FOUND_CODE ) )
13822	Assert. assertTrue ( threadPoolConfig. getQueue ( ) instanceof SynchronousQueue )
13823	Assert. assertEquals ( "Cache-Control: public, max-age=5", result. getFirstHeader ( "Cache-Control" ) )
13824	Assert. assertFalse ( "failure - expected numbers to be diff", CMC. equals ( CMC2 ) )
13825	assertions. contains ( expected )
13826	context. assertIsSatisfied ( )
13827	assertEquals ( ColumnType. INTEGER, columnDifference. getCol1Type ( ) )
13828	Assert. assertEquals ( "Kth selector did not match sort result: " + resultSort, resultKthSelector, resultSort, 1e-5 )
13829	Assert. assertTrue ( auths. isEmpty ( ) )
13830	Assert. assertTrue ( uploadResult. isSuccess ( ) )
13831	assertEquals ( "2012-01-02", date. getValueAsString ( ) )
13832	assertThat ( numFound ( query ( "q=company" ) ), is ( 1L ) )
13833	assertThat ( actual, is ( expected ) )
13834	assertTrue ( "Agent-based allocation should have failed", plan. getOrderReservations ( ). size ( ) == numJobsInScenario )
13835	assertEquals ( expected, reference. get ( ) )
13836	assertEquals ( "m Foo, Foo, {2}, {3}, {4,number,#.00}, {5} {foe}", msg. getMessage ( ) )
13837	assertEquals ( "0.0", s )
13838	assertEquals ( "someHost", requestImpl. host ( ) )
13839	Assert. assertEquals ( false, retval )
13840	Assert. assertTrue ( ff4j. isAutocreate ( ) )
13841	assertTrue ( result. getErrors ( ). size ( ) > 0 )
13842	Assert. assertNull ( caixa )
13843	assertEquals ( MockStormApplication. class, mockStormApplication. getConfigClass ( ) )
13844	assertEquals ( "myField", name )
13845	assertDtoAndMapConstructorAreSame ( 1 )
13846	assertions. doesNotHaveDuplicates ( )
13847	assertE ( "�尖�尖�尖�尖��" + "��     ��" + "��  ��  ��" + "��     ��" + "�尖�尖�尖�尖��" )
13848	assertEquals ( tenantId, connection. getClientInfo ( PhoenixRuntime. TENANT_ID_ATTRIB ) )
13849	Assert. assertNotNull ( addressResultsDto )
13850	assertEquals ( component. getStyleName ( ), "style1 style2" )
13851	Assert. assertTrue ( got. contains ( "Created device: {" ) )
13852	assertEquals ( expected, actual )
13853	assertTrue ( "Schema loaded", loaded )
13854	assertThat ( "replace", localRepo. getPulls ( ), hasKey ( 1 ) )
13855	assertTrue ( true )
13856	Assert. assertTrue ( deadLockDetected. booleanValue ( ) )
13857	assertMessageAndPath ( constraintViolationCreationContextList. get ( 0 ), message, pathWith ( ). property ( "foo" ). property ( "bar", true, "test", null ). property ( "fubar" ) )
13858	Assert. assertEquals ( "1.0", version )
13859	assertTrue ( namedClusterManager. loadUrlMap ( testNcName, metaStore ) )
13860	assertEquals ( "The link type was ignored.", LinkType. LINK, link )
13861	assertFalse ( processor. canProcessEvent ( event ) )
13862	assertTrue ( expectedMaxPoolingActivation. compare ( poolingActivation, TOLERANCE ) )
13863	assertThat ( restfulServerConfig. getPort ( ), is ( 8080 ) )
13864	assertTrue ( prefs. matches ( t ) )
13865	Assert. assertEquals ( expected, MessageFormatter. format ( message, "p1", "p2", "p3", "p4", "p5" ) )
13866	assertEquals ( "Unexpected server selection timeout", ServerSelectionTimeout. DEFAULT, clientOptions. getServerSelectionTimeout ( ) )
13867	assertEquals ( expected, printer. toString ( ) )
13868	assertEquals ( Arrays. asList ( "abc", "def", "ghi" ), removeEmpty )
13869	assertEquals ( ".outer { margin: 2px;.inner { padding: 3px; } }", normalize ( css ) )
13870	Assert. assertEquals ( 1, compareResult )
13871	assertEquals ( 20, header. getCallID ( ) )
13872	assertEquals ( actual, expected, "Wrong substitution" )
13873	assertTrue ( cli. isConnected ( ) )
13874	assertEquals ( rs2, rs )
13875	Assert. assertEquals ( expectedResult, resultString )
13876	Assert. assertNull ( testPatientData )
13877	assertThat ( tuple. getSetOrEmpty ( "field" ), empty ( ) )
13878	assertThat ( buf. size ( ), is ( 0 ) )
13879	assertEquals ( expectedMessage, result )
13880	assertEquals ( 400, response. getStatus ( ) )
13881	assertEquals ( expResult, result )
13882	Assert. assertArrayEquals ( oldbb, bb )
13883	assertThat ( extension. getMaxFragments ( ). get ( MaxFragmentLength. Type. MAX_FRAGMENT_LENGTH ), is ( code ) )
13884	assertEquals ( expected, actual )
13885	assertEquals ( "[Function released]", v8Object. toString ( ) )
13886	Assert. assertTrue ( "CumulativeLoss is expected to be less than 1200: " + udtf. getCumulativeLoss ( ), udtf. getCumulativeLoss ( ) < 1200 )
13887	assertEquals ( 1, fired )
13888	assertXMLStringsEquals ( "<Root>\\n" + "   <X>\\n" + "      <Y>Passed</Y>\\n" + "   </X>\\n" + "   <Child>Value</Child>\\n" + "</Root>\\n", test. toString ( ) )
13889	assertFalse ( violation )
13890	assertEquals ( fp. hashCode ( ), con. hashCode ( ) )
13891	assertNull ( actual )
13892	Assert. assertEquals ( expected, component )
13893	assertThat ( defn. getDeclaringNodeType ( ), is ( nullValue ( ) ) )
13894	assertTrue ( anchors. size ( ) == 3 )
13895	N4CliHelper. assertExpectedOutput ( "exportFromPlainJsFileFromModuleA\\nexportFromPlainJsFileFromModuleB\\nexportFromPlainJsFileFromModuleC\\nexportFromPlainJsFileFromModuleC", out )
13896	Assert. assertEquals ( 200, newMergedRecord. getIncomingTransferSsl ( ) )
13897	assertEquals ( packet, p )
13898	Assert. assertNotNull ( target )
13899	assertFalse ( condition. evaluate ( ) )
13900	assertTrue ( Boolean. FALSE. equals ( value ) )
13901	assertEquals ( expResult, result )
13902	Assert. assertEquals ( expectedNumber, numberOfItems )
13903	assertThat ( studies. size ( ), is ( 1 ) )
13904	assertEquals ( 1, set. size ( ) )
13905	Assert. assertNull ( inventoryItems )
13906	assertThat ( reader. nextKeyValue ( ), is ( false ) )
13907	assertEquals ( 100, getCache ( provider, "foo" ). capacity )
13908	Assert. assertTrue ( evaluator. hasPermission ( authentication, targetId, targetType, permission ) )
13909	assertions. containsSequence ( sequence )
13910	assertTrue ( isTransposed ( m ) )
13911	assertEquals ( sentryPrivilege. getSequenceId ( ), seqId )
13912	assertDateEquals ( dateTime, result )
13913	Assert. assertEquals ( Type. High, type )
13914	assertEquals ( nullInfo, info )
13915	assertTrue ( "user in admin group should have access", val )
13916	Assert. fail ( "Can't cd into a non-existing nodepath." )
13917	assertStat ( result )
13918	assertArrayEquals ( output, output2 )
13919	assertEquals ( timeInstant. getTimeMode ( ), TimeInstant. TimeMode. NOW )
13920	assertEquals ( result, toTypedExpression ( "someB#ICB.someC#ICC.onlyConcrete() ", ICB. class ). getExpression ( ). toString ( ) )
13921	assertEquals ( 2, response. getReturn ( ). size ( ) )
13922	assertEquals ( "Method #toString is wrong", "PrefixCondition{boost=0.5, field=name, value=tr}", condition. toString ( ) )
13923	assertEquals ( "Should get a 200 response", HttpStatus. OK, jdbcFeedSource. getEntry ( getEntryRequest ). getResponseStatus ( ) )
13924	arrays. assertDoesNotContain ( description, null, newArray ( true ) )
13925	assertEquals ( "Qos=MOST_ONE", Base64. getEncoder ( ). encode ( msg ) )
13926	assertTrue ( strategy. isCrawable ( url, 1 ) )
13927	assertEquals ( "JSON Form", result, json. toString ( ) )
13928	Assert. assertNotNull ( mediaId )
13929	assertDepth ( right, rightSource, 2 )
13930	assertTrue ( wordsFedFound )
13931	Assert. assertTrue ( fallbackRan )
13932	assertEquals ( ids, completeRichMembers )
13933	assertEquals ( "chrome", result. getUserAgent ( ) )
13934	Assert. assertEquals ( TransformXMLTestHelper. TEST_XML, output )
13935	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
13936	Assert. assertEquals ( decompressFlag, methodCalled. get ( 0 ) )
13937	assertThat ( fieldError, is ( nullValue ( ) ) )
13938	assertEquals ( "check plugins empty", _plugins, Collections. emptySet ( ) )
13939	assertEquals ( "value~~~~~~~", value )
13940	assertEquals ( "Category should be deleted", MCRCategory. CategoryType. DOMAIN, deleteCategory. getCategoryType ( ) )
13941	assertAnnotationCompletions ( "@Value(\\"#{345${spring.prop1}<*>}}\\")", "@Value(\\"#{345${data.prop2}<*>}}\\")", "@Value(\\"#{345${else.prop3}<*>\\")" )
13942	assertEquals ( ordered, result )
13943	assertEquals ( "2014-03-01T18:39:00.000Z", op. toString ( ) )
13944	Assert. assertTrue ( "It should return Parameter Values", Arrays. equals ( values, parameterValues ) )
13945	tester. assertRenderedPage ( HomePage. class )
13946	assertThat ( text ( written ), is ( "a\\t\\t\\t\\t\\t\\t" ) )
13947	assertEquals ( "/t/test", templateUri. toString ( ) )
13948	assertEquals ( 5445, result )
13949	assertEquals ( 0, input. getAxiomCount ( ) )
13950	testRunner. assertNotValid ( )
13951	assertEquals ( refPoint, testPoint )
13952	assertThat ( throwable. getCause ( ), is ( instanceOf ( ReflectiveException. class ) ) )
13953	assertEquals ( 1, module. getInstalledModuleServices ( ). size ( ) )
13954	assertEquals ( domainRoles, result )
13955	assertEquals ( 1, ( ( ObjectWithOptions2 ) ( ( ObjectWithOptions ) options. optOp ). optionsOp ). value )
13956	context. assertIsSatisfied ( )
13957	assertEquals ( 0.0, epsilon. evaluate ( front ), EPSILON )
13958	assertThat ( orchestrator. isContainerDisabled ( ), is ( false ) )
13959	assertTrue ( testModelView instanceof MyModelView )
13960	assertEquals ( pd1, pd2 )
13961	assertEquals ( Integer. valueOf ( 2 ), deque. getLast ( ) )
13962	assertEquals ( "a\\tb\\tc\\n" + "b\\tc\\n" + "d\\t\\n", out. toString ( ) )
13963	assertEqualDoubleArrays ( pymin, min, epsilon )
13964	assertEquals ( MyMedication. class, mo. getContained ( ). getContainedResources ( ). get ( 0 ). getClass ( ) )
13965	Assert. assertFalse ( subscriptionsDelete. accept ( element ) )
13966	assertThat ( testValues, is ( expectedValues ) )
13967	assertEquals ( expectedContainers, actualContainers )
13968	assertThat ( parsed. getProperties ( ), is ( nullValue ( ) ) )
13969	assertEquals ( "two hundred dollars", actual )
13970	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<samlp:Response Consent=\\"urn:oasis:names:tc:SAML:2.0:consent:unspecified\\" Destination=\\"https://samlcent/Shibboleth.sso/SAML2/POST\\" ID=\\"_fd601e21-5f81-469e-88c7-da72dccf1357\\" InResponseTo=\\"_545e60fe3602a06d25f241b622c5a773\\" IssueInstant=\\"2015-04-06T06:42:39.213Z\\" Version=\\"2.0\\" xmlns:samlp=\\"urn:oasis:names:tc:SAML:2.0:protocol\\"><Issuer xmlns=\\"urn:oasis:names:tc:SAML:2.0:assertion\\">http://SAMLWIN.saml.lan/adfs/services/trust</Issuer><samlp:Status><samlp:StatusCode Value=\\"urn:oasis:names:tc:SAML:2.0:status:Success\\"/></samlp
13971	assertTrue ( "ratio: " + ratio, ratio < 1.0 )
13972	assertThat ( testListener. isDelivered ( ), is ( true ) )
13973	assertThat ( logRecords, contains ( originalService ) )
13974	GenericTestUtils. assertExceptionContains ( "does not match CTime of DN", nnCTime, "CTime of DN should be 1.0.0" )
13975	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 06" ) )
13976	resultEndpoint. assertIsSatisfied ( )
13977	Assert. assertEquals ( "Should return a serialized point", ALICE_PUBLIC_KEY, mult )
13978	Assert. assertEquals ( sessionId, this. session. getSessionId ( ) )
13979	assertFalse ( pti. equals ( null ) )
13980	assertTrue ( isValid )
13981	assertGameOver ( )
13982	assertTrue ( "Configurable sasl server factory should be created", ops. exists ( TEST_SERVER_FACTORY_ADDRESS ) )
13983	assertions. isNotLessThan ( new Short ( ( short ) 10 ) )
13984	assertEquals ( 10, nn. getLpDist ( ), 0.01 )
13985	assertCallTree ( callTree, callStack. getStackEvents ( ), true )
13986	assertEquals ( simple. getName ( ), find. getName ( ) )
13987	assertDependencyWasResolvedToOptional ( )
13988	assertThat ( mode, is ( equalTo ( ShellMode. batch ( ) ) ) )
13989	assertEquals ( expected, wire. read ( ( ) -> "VALUE" ). int64 ( ) )
13990	Assert. assertEquals ( 0d, p. evaluate ( d ), Double. MIN_VALUE )
13991	assertEquals ( "Empty", dsc. getDisplayName ( ) )
13992	assertTrue ( ( Boolean ) result )
13993	assertEquals ( 0, messages. size ( ) )
13994	assertThat ( tags, is ( empty ( ) ) )
13995	assertNull ( FormEntryUtil. getLocation ( formEntryContext ) )
13996	Assert. assertEquals ( 2, query. getResultSize ( ) )
13997	Assert. assertTrue ( "lookup returned wrong topic: " + found, found!= null )
13998	assertLdapPasswordByFullName ( ACCOUNT_JACK_PASSWORD, ACCOUNT_JACK_PASSWORD )
13999	assertTrue ( "Failed authentication with wrong user was not logged", loggedFailedAuth ( LOG_FILE, UNKNOWN_USER ) )
14000	assertTrue ( getRecordsAsXmlString. contains ( "hopCount=\\"2\\"" ) )
14001	assertEquals ( originalSize + 1, tags. all ( ). size ( ) )
14002	assertEquals ( 4, result. getProperties ( ). size ( ) )
14003	assertEquals ( expResult, result )
14004	Assert. assertEquals ( expect, cnt )
14005	assertResultSet ( res )
14006	assertTrue ( Bytes. compareTo ( bytes1, bytes2 ) < 0 )
14007	assertEquals ( "subSubName", expr. exec ( new PmExprExecCtxt ( pmConversation ) ) )
14008	assertEquals ( "asdf", obj. get ( "jsonNode" ). getText ( ) )
14009	Assert. assertEquals ( node, r. get ( "node" ) )
14010	Assert. assertFalse ( service. isAlertSystemOn ( ) )
14011	mockery. assertIsSatisfied ( )
14012	assertTrue ( "No Privileges were found in the Administrator Main Page.", checkField ( "enterName", "Dummylege" ) )
14013	assertEquals ( expected, actual )
14014	Assert. assertTrue ( true )
14015	assertEquals ( NUM_WINDOWS, databaseSize )
14016	assertTrue ( e instanceof E_StrUpperCase )
14017	Assert. assertTrue ( parameter. evaluate ( rewrite, context ) )
14018	assertSame ( GBP_2_34, test )
14019	assertEquals ( expected, result )
14020	assertTrue ( check ( "a", input, output ) )
14021	assertTrue ( report. contains ( "Not equal" ) )
14022	assertEquals ( expResult, result )
14023	assertEquals ( 2, builder. getAddedVehicleTypes ( ). size ( ) )
14024	assertEquals ( test. expected ( ), test. actual ( ) )
14025	assertEquals ( creditCardXML, writer. toString ( ). trim ( ) )
14026	assertEquals ( inverse, fields [ 0 ]. get ( null ) )
14027	assertEquals ( "-something", commandLine. getOptionValue ( 't' ) )
14028	assertEquals ( sqe, convertResult. get ( 0 ) )
14029	assertEquals ( "4_1_0.20191214.1", taskList. get ( 0 ). getTables ( ). get ( 0 ). getTableName ( ) )
14030	Assert. assertEquals ( 1, reactorHandlerRegistry. getEntrypoints ( ). size ( ) )
14031	assertEquals ( "two undecilh茫o de inteiros", actual )
14032	assertEquals ( EmailState. DELETED, result. getState ( ). getState ( ) )
14033	assertPermanentCount ( playerB, "Elite Vanguard", 0 )
14034	assertNotNull ( result )
14035	Assert. assertEquals ( 256.633, result, 1 )
14036	assertThat ( getRecordedDomain ( ), not ( hasCondition ( Progressing ) ) )
14037	assertArrayEquals ( new double [ ] { 0.0, 0.0, 0.0 }, pot. getPotentials ( ) )
14038	assertEquals ( expResult, result )
14039	assertEquals ( expected, actual )
14040	Assert. assertEquals ( String. valueOf ( obj ), quantidade, tamanho )
14041	assertEquals ( expected, identity )
14042	assertEquals ( EXAMPLE_RESPONSE_SINGLE_ROWS, catResult. getRowCount ( ) )
14043	assertEquals ( a1, a2 )
14044	assertEquals ( ConfigKey. ENCRYPTION_KEY. getDefaultValue ( ), property )
14045	assertThat ( info. isRequired ( ), is ( true ) )
14046	assertTrue ( inv1. fire ( ) )
14047	assertEquals ( 8, someNotSoRandomAsciiAsList. size ( ) )
14048	Assert. assertEquals ( "Hello World", ejbInstance. sayHello ( ) )
14049	assertTrue ( selector. evaluate ( source ) )
14050	Assert. assertEquals ( EstadoAsientoRegistralEnum. RECHAZADO. getValue ( ), estado. getEstado ( ) )
14051	assertEquals ( Math. sqrt ( 0.01 ), distance. compute ( point1, point2 ), EPSILON )
14052	assertEquals ( 2, encounters. size ( ) )
14053	assertThat ( notSent. size ( ), is ( 0 ) )
14054	assertEquals ( "test", dummy. test )
14055	assertThat ( terminalStep. wasRun ( ), is ( false ) )
14056	assertEquals ( "Expected 0 results!", 0, n )
14057	assertEquals ( "Invalid name", headerName. getLocalPart ( ), result. getValue ( ) )
14058	assertEquals ( 0, monitor. getNumZk ( ) )
14059	Assert. assertNotNull ( this. mocker. getComponentUnderTest ( ). getLock ( this. currentDocumentReference ) )
14060	assertFalse ( config. isAdvancedClusterConfigSet ( config. getNamedCluster ( ) ) )
14061	assertThat ( sampleTestClass. driver, is ( not ( nullValue ( ) ) ) )
14062	rule. assertScenarioEnded ( )
14063	assertTrue ( cp. isReadOnly ( ) )
14064	assertEquals ( "Hello :Tim", ResponseBodyInterpolator. interpolate ( "Hello :name", req ) )
14065	Assert. isTrue ( rows > 0 )
14066	assertEquals ( "1.0", version )
14067	assertEquals ( connectionTimeout, ConfigUtils. getConnectionTimeout ( mockServletContext ) )
14068	assertEquals ( expected, result )
14069	assertEquals ( "return proposition should be returned", propositionDefinition, returnPropositionDefinition )
14070	assertEquals ( IS_NULL. toString ( ), res. getHibernateCriterion ( ). toString ( ) )
14071	logSpy. assertInfo ( "Element click was not called" )
14072	assertEquals ( 1, constraints. size ( ) )
14073	assertTrue ( collection. size ( ) > 0 )
14074	Assert. assertEquals ( "Fail count record of room", i, cr )
14075	Assert. assertFalse ( tcpConnectivity. supports ( requirement ) )
14076	assertEquals ( LineText. LEFT, lineText. getAlignment ( ) )
14077	assertThat ( anyTS. contains ( SECOND_OF_DAY ), is ( true ) )
14078	assertEquals ( "Expected 0 results!", 0, n )
14079	assertEquals ( 3, subject. size ( ) )
14080	assertEquals ( 0, curatedDrugs. size ( ) )
14081	assertAxisEquals ( 0.9, 1.3, new double [ ] { 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0 }, new String [ ] { "0.9", "1.3", "2.0", "3.0", "4.0", "5", "6", "7", "8", "9", "10" }, axis )
14082	assertAllCommandsUsed ( )
14083	assertThat ( selectedCell, is ( "B2" ) )
14084	assertThat ( new SearchArgumentFilter ( searchArgument, structTypeInfo ). accept ( corc ), is ( true ) )
14085	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff_overflowNewContent02_" ) )
14086	assertEquals ( 2, command. getVariables ( ). size ( ) )
14087	assertExtendedEquals ( expected, dd, PRODUCT_TOLERANCE_FACTOR )
14088	assertEquals ( 2, numberOfTests. getLength ( ) )
14089	assertNull ( result )
14090	assertEquals ( 0, tasks. size ( ) )
14091	assertEquals ( "vertical scroll bar policy must be set", JScrollPane. VERTICAL_SCROLLBAR_ALWAYS, scrollPane1. getVerticalScrollBarPolicy ( ) )
14092	Assert. assertEquals ( 2, tables. size ( ) )
14093	assertNotNull ( result )
14094	r. assertEqualBeans ( orig, received, "ami,zone,description,remoteFS,type,jvmopts,stopOnTerminate,securityGroups,subnetId,useEphemeralDevices,useDedicatedTenancy,role" )
14095	assertEquals ( expected, actual )
14096	assertTrue ( rs. next ( ) )
14097	assertEquals ( 1, Evaluator. evaluate ( ex ) )
14098	assertEquals ( "Wrong number of sources for unknown key", 2, config. getSources ( "unknown.key" ). size ( ) )
14099	assertThat ( result, is ( "Network2" ) )
14100	assertEquals ( 2, instance. getNeurons ( ). size ( ) )
14101	context. assertIsSatisfied ( )
14102	assertTrue ( x. isEq ( topo. getOutput ( ) ) )
14103	assertNull ( encryption )
14104	Assert. assertNotNull ( instance. getFirstAtomMapping ( ) )
14105	assertThat ( followInitiativeDao. getFollowers ( initiativeId ). size ( ), is ( 2 ) )
14106	dataLoader. assertDataToJsonEqualsExpectedFileContent ( "shouldReturnFieldsOnly.json", result )
14107	assertNull ( "Unexpected value in outputTriple: " + outputTriple, outputTriple )
14108	assertTrue ( map instanceof Map )
14109	assertTrue ( map. get ( loadBalancerId ). get ( hostId ). size ( ) == 1 )
14110	assertThat ( type, equalTo ( DBR_String. TYPE ) )
14111	assertEquals ( "Wrong super type", Event. RESET, builderResetType. getSuperType ( ) )
14112	assertEquals ( 3, allClasses. size ( ) )
14113	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), hasItem ( createConfigMapKeyRefEnvVar ( "VARIABLE1", "my-env", END_VALUE_1 ) ), hasItem ( createSecretKeyRefEnvVar ( "VARIABLE2", "my-secret", END_VALUE_1 ) ), hasItem ( createFieldRefEnvVar ( "MY_NODE_IP", END_VALUE_1 ) ) )
14114	assertEquals ( expected, actual )
14115	assertThat ( getPodSpec ( jobSpec ). getContainers ( ), nullValue ( ) )
14116	assertTrue ( elapsed > 0 )
14117	assertEquals ( BatchStatus. COMPLETED, execution. getStatus ( ) )
14118	assertThat ( groupUnderTest. isFeatureEnabled ( ), is ( equalTo ( false ) ) )
14119	Assert. assertEquals ( content. get ( numberOfContent - 1 ), nodeB. getDataManager ( ). getNewestVersion ( parameters ). getTestString ( ) )
14120	assertEquals ( "6.3-((3+1)/5+3.14)*600%(2+3-(6+(4.3-9)))", this. codeGenerator. getPostFixExpression ( ) )
14121	assertNotNull ( Jta. getJtaContext ( ) )
14122	assertNull ( processEngine. getRuntimeService ( ). createProcessInstanceQuery ( ). singleResult ( ) )
14123	Assert. assertEquals ( expected, actual. getName ( ) )
14124	assertEquals ( literal, builder. toString ( ) )
14125	assertEquals ( 4, aggregator. generateId2OutcomeFile ( ). split ( "\\n" ). length )
14126	assertEquals ( expResult, stringBuilder. toString ( ) )
14127	assertThat ( page. clickTargetButton. isVisible ( ), is ( true ) )
14128	assertEquals ( expectedFolderPath, buildFolderPath )
14129	assertChildren ( moveTo )
14130	assertEquals ( p, pws. getProgramByName ( "program name" ) )
14131	assertEquals ( "Latitude is not properly parsed", 5.3f, mapper. readLatitude ( columns ), 0 )
14132	assertEquals ( testcrypt, client. getCryptoSuite ( ) )
14133	assertThat ( result ( ), not ( containsString ( "\\"client\\"" ) ) )
14134	assertEquals ( searchFormat, updatedSearchFormat )
14135	assertThat ( result, is ( notNullValue ( ) ) )
14136	Assert. fail ( "should have thrown SQLFeatureNotSupportedException" )
14137	assertThat ( Material. matchMaterial ( String. valueOf ( material. getId ( ) ) ), is ( material ) )
14138	assertNotNullOrEmpty ( "Tags should never be null.", tags )
14139	Assert. isTrue ( users. size ( ) > 0 )
14140	assertTrue ( ( "actual count: " + count ), count <= 2 )
14141	assertTrue ( "Audit log count should greater than zero", auditLogs. size ( ) >= 15 )
14142	assertEquals ( 0., iCosts, 0.01 )
14143	Assert. assertEquals ( "Mismatch between system property (or default) and OgnlRuntime _useFirstMatchGetSetLookup flag state?", optionDefinedInEnvironment? flagValueFromEnvironment : defaultValue, OgnlRuntime. getUseFirstMatchGetSetLookupValue ( ) )
14144	assertEquals ( 1, cache. listPrivileges ( null, null, null, new Server ( "server1" ) ). size ( ) )
14145	assertEquals ( "Hello There. Here is some text.", text )
14146	assertEquals ( "456.5 [\\\\d\\\\.]+ =~", this. codeGenerator. getPostFixExpression ( ) )
14147	mockery. assertIsSatisfied ( )
14148	assertEquals ( 100, total )
14149	assertXmlEqual ( expected, formatterOutput )
14150	assertEquals ( publisher, result )
14151	assertTrue ( AbstractAnalyticsService. hasMetrics ( css1 ) )
14152	assertTrue ( setCookie. contains ( "; HttpOnly" ) )
14153	assertThat ( PlainDate. of ( 2000, 12, 1 ). with ( model. weekOfYear ( ). atFloor ( ) ), is ( PlainDate. of ( 2000, 11, 26 ) ) )
14154	assertEquals ( "LOCAL: \\nUserFN\\nUserLN\\naddr2\\naddr1\\n121212 City1\\nGermany", bpartnerBL. mkFullAddress ( bPartner, bpLocation, user, null ) )
14155	Assert. assertFalse ( FileUtil. gitFilesAreEqual ( neq1, neq2 ) )
14156	assertEquals ( asList ( info ( mdcValues, marker, message ) ), testLogger. getLoggingEvents ( ) )
14157	assertNull ( t )
14158	Assert. assertEquals ( "EXCEPTION: class java.lang.IllegalStateException", response )
14159	Assert. assertEquals ( false, authServerName. equals ( serverName ) )
14160	assertThat ( confirmation. validate ( ), equalTo ( true ) )
14161	Assert. assertEquals ( "HomeScreenActivity", defaultApp )
14162	assertEquals ( "hello, world!", result )
14163	assertTrue ( "Repository should contain newly added statement", testCon. hasStatement ( name, name, nameBob, false ) )
14164	assertEquals ( expectedValue, advice. cacheGetSingle ( pjp ) )
14165	assertEquals ( expected, actual )
14166	assertEquals ( "A Value with real data added then removed should return the interpolated value on getValue().", interpolatedValue, victim. getValue ( ), EPSILON )
14167	assertTrue ( dao. hasPolicy ( "pd1" ) )
14168	assertThat ( result, is ( jsonBoolean ( false ) ) )
14169	assertTrue ( pattern. matches ( "-1.1" ) )
14170	assertThat ( adapterHelloWorld. helloWorld ( ), is ( "Hello Adapter!" ) )
14171	assertThat ( sel, is ( cls ) )
14172	assertThat ( result, is ( 5L ) )
14173	assertBeanValidation ( json, "end_relative.value must be greater than or equal to 1" )
14174	assertEquals ( 100, cr. mark ( ) )
14175	assertEquals ( 20, rs. getInt ( 1 ) )
14176	assertTrue ( output, output. matches ( "(?s).*set 'x' in \\\\d+ms = " + val + ".*" ) )
14177	assertThat ( ( String ) dest. get ( "ccc" ), is ( "111" ) )
14178	Assert. assertEquals ( "[a, b, c, d, e]", inv. invokeFunction ( "split", "a.b.c.d.e" ). toString ( ) )
14179	assertEquals ( list, parser ( "s//tr" ). object ( "" ) )
14180	assertTrue ( workspaceNames. contains ( defaultWorkspaceName ) )
14181	assertThat ( branchFilter, instanceOf ( All. class ) )
14182	Assert. assertEquals ( ZoneStateEvent. disable, vo. getZoneState ( ) )
14183	assertTrue ( resolver. resolve ( ) == null )
14184	Assert. assertEquals ( 0, analyser. getVariableTransportCostsAtActivity ( route. getStart ( ), route ), 0.01 )
14185	assertNull ( fileOperationMap. getOperation ( operation. getPnfsId ( ) ) )
14186	assertEquals ( 0, errors. get ( ) )
14187	Assert. assertEquals ( "First line\\n  Indented line\\nLast line\\n", formatted )
14188	Assert. assertEquals ( AgentConstants. PLATFORM_VMWARE, this. agent. parameters )
14189	assertEquals ( "MEKA", predict. get ( 0 ) )
14190	assertEquals ( "<p><img src=\\"http://example.com/\\" alt=\\"Image\\" /></p><p><img /></p>", TextUtil. stripNewlines ( cleanHtml ) )
14191	assertEquals ( "String", f. getFieldType ( ) )
14192	assertEquals ( 0, errors. size ( ) )
14193	assertEquals ( "0", script. execute ( ) )
14194	assertNotNull ( start. getLastBuild ( ) )
14195	assertThat ( boundSql. getSql ( ), Matchers. equalTo ( "select  id in (?,?,?) " ) )
14196	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED, status )
14197	assertEquals ( generatedJavascript, expectedJavascript )
14198	assertEquals ( expected, actual )
14199	Assert. assertEquals ( ( Long ) 10L, res )
14200	assertTrue ( false )
14201	assertEquals ( 6. * 3600. + 6. * 60. + 12., sec, 0.01 )
14202	assertThat ( str, contains ( "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello World", "Hello
14203	assertThat ( result, is ( equalTo ( ( List < String > ) of ( "AA", "BB" ) ) ) )
14204	assertEquals ( 1, findings. size ( ) )
14205	assertNotNull ( doc )
14206	assertNoMessage ( getMockEndpoint ( ) )
14207	assertEquals ( "Someone", result )
14208	assertThat ( selected, is ( infoPresenter2 ) )
14209	assertEquals ( body. toString ( ), "<html><body><h1>Resource not found</h1></body></html>" )
14210	assertNotNull ( "EngineFactory is not configured.", factory )
14211	assertEquals ( 1, objects. size ( ) )
14212	assertEquals ( DataTypes. createStructType ( Lists. newArrayList ( field1, field2, field3 ) ), subset )
14213	assertFalse ( algorithm. contentEquals ( equalAlgorithm ) )
14214	TestCase. assertTrue ( result )
14215	assertTrue ( result )
14216	assertTrue ( slice. events. isEmpty ( ) )
14217	assertEquals ( Integer. valueOf ( 1 ), conversions. newInstance ( strPath ). get ( intPath ) )
14218	assertTrue ( result. getErrors ( ). size ( ) > 0 )
14219	assertThat ( utc. format ( TimeScale. POSIX ), is ( "POSIX-2012-06-30T23:59:59,123456789Z" ) )
14220	assertEquals ( message, sentFrame. toString ( UTF_8 ) )
14221	assertTrue ( determinized. equals ( fstDeterminized ) )
14222	assertTrue ( ok )
14223	assertEquals ( "", result )
14224	assertEquals ( "x", vdb. get ( "name" ) )
14225	Assert. assertEquals ( "Value is incorrect", map, value )
14226	assertFalse ( tagNode. isSelfClosing ( template ) )
14227	Assert. assertEquals ( "in", listLoopStatement. getLoopStatement ( ). getExpression ( ) )
14228	assertPermanentCount ( playerA, "Amoeboid Changeling", 0 )
14229	assertThat ( testUriStr, is ( expectedUriStr0 + "&" + expectedUriStr1 ) )
14230	assertNotNull ( store. get ( key, new String [ 0 ] ) )
14231	Assert. assertEquals ( 1, factory. getNumCarvedTestCases ( ) )
14232	assertEquals ( expFilter, filter )
14233	assertEquals ( "constructor failed", Base64. class, base64. getClass ( ) )
14234	assertEquals ( 1, result. getNuOfDimensions ( ) )
14235	assertEquals ( server. getName ( ), "server-test-1" )
14236	assertEquals ( "John", person. myname ( ) )
14237	assertTrue ( inProgressMessages. isEmpty ( ) )
14238	Assert. assertEquals ( "b", sample. getCurrentState ( ) )
14239	assertThat ( repo1, is ( sameInstance ( repo2 ) ) )
14240	assertTrue ( rec_cnt == 1 )
14241	Assert. assertFalse ( result )
14242	assertMatrixEquals ( Ad, A )
14243	assertNull ( twinMetadata )
14244	assertNotNull ( "First Transcript in the collection must be returned", transcript )
14245	assertThat ( control. matches ( "/clients/dog/5/" ), is ( true ) )
14246	assertEquals ( "Adverse event", pm_ade. getCategoryName ( ) )
14247	assertThat ( reply ( ), is ( anAppendReply ( ). withResult ( true ) ) )
14248	assertArrayEquals ( expected, result, 0.000001 )
14249	assertTrue ( Transforms. abs ( sub1. sub ( arr2 ). div ( sub1 ) ). maxNumber ( ). doubleValue ( ) < 0.01 )
14250	Assert. assertEquals ( dataHoraRecibo, consultaRetorno. getDataHoraRecibo ( ) )
14251	assertArrayEquals ( expected, numbers )
14252	Assert. assertNotNull ( "Default module not found", def )
14253	assertEquals ( "World", message. toString ( ) )
14254	assertEquals ( "test-api-key", bitApi. getApiKey ( ) )
14255	assertThat ( valid, is ( equalTo ( false ) ) )
14256	assertEquals ( 100d * SCROLL_LEFT / ( SCROLL_WIDTH - CLIENT_WIDTH ), position, 0 )
14257	assertFalse ( array. isView ( ) )
14258	assertEquals ( new Response ( ), result )
14259	assertEquals ( ChargingCapability. V_480V_3_PHASE_32A, ChargingCapability. fromConnector ( connector ) )
14260	assertFalse ( faceted. register ( ) )
14261	assertEquals ( 204, response. getStatus ( ) )
14262	assertThat ( abc, is ( "eureka" ) )
14263	assertEquals ( expResult, result )
14264	assertEquals ( hash64_1, hash64_2 )
14265	Assert. assertEquals ( "136.5", response )
14266	assertEquals ( "world&bar", builder. getQueryParameter ( "hello world" ) )
14267	assertEquals ( "<html><head><title>One</title></head><frameset><frame /><frame /></frameset></html>", TextUtil. stripNewlines ( doc. html ( ) ) )
14268	assertEquals ( "Value is incorrect", map, value )
14269	assertTrue ( baseConsumerClass. exists ( ) )
14270	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
14271	Assert. assertEquals ( motivo, consultaRetorno. getMotivo ( ) )
14272	assertProcessInstanceCompleted ( processInstance )
14273	assertEquals ( expectedQuery, actualQuery )
14274	assertTrue ( rewriteRule. matches ( c ) )
14275	assertTrue ( "Wizard should have been closed", wizard. isOpen ( ) )
14276	assertIsSatisfied ( 2L, TimeUnit. SECONDS, secondOutbound )
14277	Assert. assertEquals ( expected, actual )
14278	assertThat ( qualifier, is ( "SimpleDataDrivenScenario" ) )
14279	context. assertIsSatisfied ( )
14280	assertEquals ( Sets. newHashSet ( 1, 2 ), Sets. newHashSet ( q. asList ( ) ) )
14281	assertThrown ( val, promise2 )
14282	assertNotNull ( result )
14283	assertEquals ( expected. get ( index ), actual. get ( index ) )
14284	assertTrue ( cc. toString ( ). contains ( "private=\\"a,b\\"" ) )
14285	assertThat ( response. getBody ( ), containsString ( "Hello World, Buddy" ) )
14286	assertEquals ( " Actual doesn't match with expected. ", new Integer ( 0 ), new Integer ( cs. getRow ( ) ) )
14287	assertEquals ( featureService1, aspect. getFeatureService ( ) )
14288	arrays. assertHasSize ( description, null, 8 )
14289	assertTrue ( result == null )
14290	Assert. assertTrue ( m. getBook ( ). equals ( b ) )
14291	assertEquals ( new Float ( 123.4f ), result )
14292	Assert. assertEquals ( expResult, result, 0.0 )
14293	assertTrue ( actionServiceRegistered )
14294	Assert. assertEquals ( new Path ( "obj1.nestedSimpleInteger" ), fullPath )
14295	Assert. assertEquals ( "Block result is wrong", new Integer ( 2 ), o )
14296	assertEquals ( 0, maxByColumns. length )
14297	assertEquals ( map. get ( "child" ), child )
14298	assertEquals ( 0, tree. getBeforePosition ( ZERO ) )
14299	assertEquals ( "{k1:{f:1}}", o )
14300	assertTrue ( emptyDatabase. isClean ( ) )
14301	assertEquals ( "jsmith@aaa.$3", mappedIdentity )
14302	assertEquals ( txId1. get ( ), txId2. get ( ) )
14303	assertThat ( uri. isTemplate ( ), equalTo ( true ) )
14304	Assert. assertTrue ( true )
14305	assertEquals ( "Expected 0 results!", 0, n )
14306	assertEquals ( "no-cache", wrapper. getFirstHeader ( "Cache-Control" ). getValue ( ) )
14307	assertEquals ( "graph has wrong average value, should be 0.0", 0d, average, 0.00001 )
14308	assertEquals ( "testpass", FileUtils. readFileToString ( passwordFile, "UTF-8" ) )
14309	assertFalse ( violation )
14310	assertTrue ( fs. exists ( srcFilePath ) )
14311	assertEquals ( actual, pluginConfiguration )
14312	assertEquals ( expectedQuery, actualQuery )
14313	assertNotEquals ( getMapping1, getMapping2 )
14314	assertEquals ( "#: expected type: String, found: Map", actual )
14315	assertEquals ( tag. doStartTag ( ), Tag. SKIP_BODY )
14316	assertTrue ( events. size ( ) == 1 )
14317	assertEquals ( false, result )
14318	assertEquals ( 2, searchScreenshots. size ( ) )
14319	assertEquals ( "Expected 10 results!", 10, n )
14320	Assert. assertTrue ( children. size ( ) > 0 )
14321	Assert. assertNotNull ( rangerServiceDef )
14322	Assert. assertEquals ( "AS400ConnectionPool", endpoint. getConfiguration ( ). getConnectionPool ( ). getName ( ) )
14323	assertEquals ( "blah", result. getOut ( ). getBody ( ) )
14324	Assert. assertEquals ( "current", authzDepConf. get ( currentVar. getVar ( ) ) )
14325	iterables. assertIsSubsetOf ( someInfo ( ), actual, newArrayList ( "Yoda", "C-3PO" ) )
14326	assertEquals ( 2, em. createQuery ( query ). getResultList ( ). size ( ) )
14327	assertEquals ( "Hello World", response )
14328	assertTrue ( true )
14329	Assert. assertEquals ( getElement ( "PID.1", "PV.1" ), handler. getPatientLocation ( ) )
14330	Assert. assertArrayEquals ( expected, actual. toArray ( ) )
14331	Assert. assertEquals ( builder. toString ( ), expected, actual, tol )
14332	assertEquals ( count1, repository. execute ( countOp ). longValue ( ) )
14333	Assert. assertEquals ( "(nt_change_duplication (nt_point_location (nt_base_location (nt_number 123))) dup (nt_string)", nt_change_duplication. toStringTree ( parser ) )
14334	assertAllAlbums ( repository. findByTrackNameLike ( albums. getTrackName ( ) ) )
14335	assertEquals ( newValue, rot. getRateOfTurn ( ), 0.1 )
14336	Assert. assertEquals ( expected, new HtmlFormatter ( null, container ). format ( input, options ) )
14337	assertEquals ( "Expected no keys after deletion", 0, keys )
14338	assertEquals ( expected, FileCommands. ftGetFileInfoArray ( channelIds, channelPasswords, filePaths ) )
14339	assertEquals ( "undef", server. getConfig ( ). getProperty ( "server.build.username" ) )
14340	assertThat ( response. getStatus ( ). getCode ( ), is ( HttpStatus. BAD_REQUEST ) )
14341	assertEquals ( testExtractor, extractorInstance1 )
14342	Assert. assertTrue ( success )
14343	assertEquals ( "(SSN, SSM) IN ('11111111111111', '2222222222222222')", result. toString ( ) )
14344	Assert. assertEquals ( "涓�|瑗夸集�╀�", words )
14345	Assert. assertThat ( values, Matchers. contains ( "gzip", "compress", "gzip", "identity" ) )
14346	assertEquals ( uploadLocation + FileUtils. toDir ( stateToken ) + filename + pngExtension, absFile )
14347	assertTrue ( MessageEncodeDecode. checkIsSameList ( m1. dataSetTrackerList ( ), m2. dataSetTrackerList ( ) ) )
14348	assertNotNull ( result )
14349	assertCapturedHint ( expected, capture, EncodeHintType. CHARACTER_SET )
14350	Assert. assertNull ( httpServerAuthenticationMechanism )
14351	Assert. assertEquals ( "select sym:sym from test", select. toQ ( ) )
14352	assertEquals ( "samedi, janvier 01", DateUtils. formatFriendlyDate ( DateUtils. nowUtc ( ), Locale. ENGLISH ) )
14353	assertTrue ( getAlphaConstraint ( ksession ) instanceof LambdaConstraint )
14354	assertTrue ( "Available: " + factories. size ( ), true )
14355	assertTrue ( newYearsEve. isBefore ( newYearsDay ) )
14356	assertLookup ( breaks, values, srcImg, DataBuffer. TYPE_USHORT, roi, null )
14357	assertEquals ( 0, multimap. size ( ) )
14358	assertThat ( subject. toString ( ), is ( "" + "***RDNS: (related to 0.2.193.in-addr.arpa) CRITICAL: Fatal error in delegation for zone 0.2.193.in-addr.arpa.\\n" + "\\n" + "No name servers found at child or at parent. No further testing can be performed." ) )
14359	assertEquals ( "my-content-type", connection. getHeaders ( ). get ( "Content-Type" ) )
14360	assertTrue ( getNoErrorMsg ( ), result )
14361	assertThat ( qsCallback. asDocument ( ), is ( b. build ( ) ) )
14362	Assert. assertEquals ( expectedResult, fileComparer. replaceFourAbstractPartialClasses ( file1AsList ) )
14363	Assert. assertEquals ( getDao ( ). count ( ), count - 1 )
14364	assertEquals ( true, actualObj ( ). getBoolean ( "arraySupport" ) )
14365	Assert. assertFalse ( policy. isResponseCacheable ( "GET", response ) )
14366	assertEquals ( i1, i2 )
14367	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Sms action=\\"https://example.com\\" from=\\"+15017122661\\" method=\\"GET\\" statusCallback=\\"https://example.com\\" to=\\"+15558675310\\" from=\\"+15017122661\\" method=\\"GET\\" statusCallback=\\"https://example.com\\">", elem. toXml ( ) )
14368	assertSame ( cache, nativeCache )
14369	assertEquals ( score, smsd1. getFragmentSize ( 0 ) )
14370	Assert. assertFalse ( "Capabilities should match", first. matchesCapabilities ( map ) )
14371	assertEquals ( true, bm. isBitSet ( 63 ) )
14372	Assert. assertEquals ( expected, Strings. unCapitalizeFirstChar ( data ) )
14373	assertThat ( pi, is ( notNullValue ( ) ) )
14374	Assert. fail ( "Test encountered an unexpected exception." )
14375	assertEquals ( 0, sos. getSchemaNames ( ). size ( ) )
14376	assertEquals ( "string", param. toJson ( ) )
14377	Assert. assertFalse ( report. isSuccess ( ) )
14378	assertNull ( token )
14379	assertNotNull ( type )
14380	assertEquals ( expectedQuery, actualQuery )
14381	assertEquals ( "DISTANCE(x,y,1.1,1.2)", p. toString ( ) )
14382	Assert. assertNotNull ( url )
14383	assertEquals ( testNewUrl, jobEntryHadoopCopyFiles. loadURL ( testUrl, testNcName, metaStore, mappings ) )
14384	assertThatSql ( query, is ( "SELECT t1.c1,t2.c2 FROM table1 AS t1 JOIN table2 as t2 ON t1.c0 = t2.c0" ) )
14385	assertEqualsIgnoreWhitespace ( expected, drl )
14386	assertEquals ( 0, changes. size ( ) )
14387	assertThat ( collectionName, startsWith ( "admin" ) )
14388	assertThat ( value. toString ( ), is ( equalTo ( "test" ) ) )
14389	assertSame ( value, XenqttUtil. validateGreaterThan ( "integer", value, max ) )
14390	Assert. assertEquals ( ( Integer ) 1, res )
14391	assertThat ( testOutcome. getTags ( ), hasItem ( TestTag. withName ( "A user feature" ). andType ( "feature" ) ) )
14392	Assert. assertEquals ( "driver.goBack();", result )
14393	assertEquals ( expected, result )
14394	assertScheduleWhenTuplesAvailableStrategy ( strategy, 0 )
14395	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
14396	assertEquals ( testQueryValue, rval )
14397	assertThat ( tester. response. getStatus ( ), is ( equalTo ( HttpServletResponse. SC_OK ) ) )
14398	assertEquals ( linearChainFg, fgfile )
14399	Assert. assertEquals ( "other", config. getName ( ) )
14400	assertArrayEquals ( "Required profiles", new String [ ] { "org.eclipse.junit", "org.eclipse.junit" }, new ProjectBuilderF321T372 ( m_bundleContext, "version" ). getRequiredProfiles ( m_platformContext ) )
14401	assertThat ( route, canHandle ( ClientsController. class, "list" ) )
14402	assertEquals ( expectedResult, result )
14403	assertContains ( e. getMessage ( ), "'first'" )
14404	assertBuildException ( "password" )
14405	assertEquals ( "Wrong result", "db2jcc.jar,db2jcc_license_cu.jar", config. getString ( "mypath" ) )
14406	assertEquals ( extSource. getId ( ), extSource2. getId ( ) )
14407	Assert. fail ( "Should have thrown exception" )
14408	assertEquals ( "bar", lr. get ( 2 ). get ( ) )
14409	assertNotSame ( fixture, copy )
14410	assertNotEquals ( update1, update2 )
14411	assertTrue ( "result must be a failure", result. isSuccess ( ) )
14412	assertEquals ( "Base for floats is wrong", Double. valueOf ( 3.6d ), parsed )
14413	assertThat ( response. getStatusLine ( ). getStatusCode ( ), is ( HttpStatus. SC_INTERNAL_SERVER_ERROR ) )
14414	assertEquals ( "user", this. userService. getValue ( ) )
14415	assertThat ( result, is ( jsonNumber ( 1 ) ) )
14416	assertEquals ( "client-id", rc. request ( ). header ( "Authorization" ) )
14417	assertEquals ( outerJson, BsonCodec. bsonObjectToJsonObject ( outerBson ) )
14418	Assert. assertEquals ( "Remote invocation of EJB was not successful", StatefulBeanRemote. ANSWER, response )
14419	assertEquals ( "lentement+plus", lentement. getCode ( ) )
14420	assertNotNull ( exception )
14421	assertEquals ( 10, b. get ( ) )
14422	assertSame ( is, this. testee. getData ( cn ) )
14423	assertPermanentCount ( playerB, "Cast Through Time", 1 )
14424	assertEquals ( "X=foo%3Fbar&baz%3Fquz", s. serialize ( m ) )
14425	assertNotEquals ( putMapping1, putMapping2 )
14426	assertObjectEquals ( "{}", t )
14427	assertEquals ( 1, posts. size ( ) )
14428	assertThat ( results, is ( Arrays. asList ( "A", "B", "C" ) ) )
14429	assertArrayEquals ( array, data. getData ( type ) )
14430	Assert. assertEquals ( "9c2f2e2e2e2f9a3b6c2f2e3b6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a", fp )
14431	assertFalse ( post. isVotedUpBy ( user ) )
14432	assertEquals ( 11, p. getTotalPages ( ) )
14433	assertEquals ( 1, handler. getCalledTimes ( ) )
14434	assertThat ( testOutcome. getLastStep ( ). getName ( ), is ( "Step 3" ) )
14435	assertTrue ( wasException )
14436	assertFalse ( aggregator. usages ( ). iterator ( ). hasNext ( ) )
14437	assertThat ( result, isFailedCommand ( ) )
14438	assertEquals ( 1, ksession. fireAllRules ( ) )
14439	assertEquals ( 0, articles. size ( ) )
14440	assertEquals ( "", printer. getText ( ) )
14441	assertTrue ( resources. isEmpty ( ) )
14442	assertEquals ( "Should return success", "success", jsonObj. get ( "status" ). getAsString ( ) )
14443	Assert. assertEquals ( "Value is incorrect", map, value )
14444	assertEquals ( "BatchedModifications response", 1, batchedModifications. size ( ) )
14445	assertEquals ( original, result )
14446	assertEquals ( expResult, result )
14447	assertThat ( actual, sameJsonAs ( new JSONObject ( "{\\"uniqueItems\\":true,\\"minItems\\":5,\\"maxItems\\":10,\\"allItemSchema\\":\\"boolean\\"}" ) ) )
14448	assertNotNull ( referenceObjectBinding )
14449	assertTvShowResultsPage ( results )
14450	assertThat ( house. cat. firstLeg. birthDay, is ( equalTo ( ( Calendar ) new GregorianCalendar ( 2010, 4, 10 ) ) ) )
14451	assertEquals ( mockPom, converter. convertFromText ( moduleName, null, null ) )
14452	assertTrue ( "File " + beforeFile. getName ( ) + " is not migration", FileUtil. compareFileToResource ( beforeFile, afterFile ) )
14453	this. assertLoadBlobViaTuples ( tuples, false, true )
14454	assertTrue ( "should ignore unknown passwords", jdbcAuthProvider. comparePasswords ( PASSWORD, PLAIN_PASSWORD ) )
14455	Assert. assertNotNull ( json. getString ( "uid" ) )
14456	assertTrue ( runtimeExceptionCalled [ 0 ] )
14457	Assert. fail ( "Should have failed for version " + version )
14458	assertEquals ( "3.yes,1.A;3.yes,1.C;3.yes,1.D;3.yes,5.hello;3.yes,5.world;", stringWriter. toString ( ) )
14459	assertEquals ( 0, container. getMetadataCount ( ) )
14460	assertEquals ( "", converter. format ( null ) )
14461	assertThat ( comboBox. getDataProvider ( ), is ( not ( provider ) ) )
14462	assertEquals ( initialSize - 1, taskScheduler ( ). list ( ). size ( ) )
14463	assertEquals ( 1, counter. getCount ( ) )
14464	assertArrayEquals ( expected, oneZero. split ( ) )
14465	assertEquals ( Long. valueOf ( 67 ), resultMap. get ( "Age" ) )
14466	assertions. endsWith ( sequence )
14467	assertEquals ( 6, tokens. size ( ) )
14468	assertEquals ( blanks. length, transactionViewModel. getTrits ( ). length )
14469	Assert. assertTrue ( systemUnderTest. propertyOverridesExist ( ) )
14470	assertThat ( results. size ( ), is ( 0 ) )
14471	assertions. hasSize ( 5 )
14472	Assert. assertFalse ( policy. isResponseCacheable ( request, response ) )
14473	assertEquals ( "Expected same parent", parent, instance. getParent ( ) )
14474	assertEquals ( "123", writer. getResult ( ) )
14475	assertEquals ( "Wrong value", null, interpolator. resolve ( TEST_NAME ) )
14476	Assert. assertTrue ( isOk )
14477	assertEquals ( Integer. valueOf ( 0 ), value )
14478	assertEquals ( BAD_REQUEST. getStatusCode ( ), response. getStatus ( ) )
14479	assertEquals ( "[= foo]", m. toString ( ) )
14480	assertEquals ( "Counts [follows=1, followed_by=1, media=1]", result )
14481	Assert. assertEquals ( adImpressionStream. size ( ), collector. actualResults. size ( ) )
14482	assertFalse ( checkTest )
14483	Assert. assertEquals ( 0.0, getMetric ( ). calculate ( getSession ( ) ), getDelta ( ) )
14484	Assert. fail ( "Have not found 'doDynamic' in the returned function list" )
14485	assertEquals ( 2, a. value )
14486	assertThat ( token. isStillActive ( ), is ( false ) )
14487	assertEquals ( "reason", hookClass. onMarkPossiblyBroken ( ) )
14488	assertNotNull ( NonTerminal. PROMETHEUS. buildAbstractSyntaxTree ( tokenStream ) )
14489	assertTrue ( resourceRelationBoundary. isAddableAsProvidedResourceToResourceGroup ( master, slaveName ) )
14490	assertNull ( cache. get ( key ) )
14491	Assert. assertTrue ( true )
14492	assertEquals ( "1. Change container should be displayed", "1. Change container should be displayed", findElement ( By. id ( "changeContainer" ) ). getText ( ) )
14493	assertTrue ( result instanceof XMLReportChunkBuilder )
14494	assertFalseForPropertyValidation ( )
14495	assertThat ( properties, is ( expected ) )
14496	assertThat ( ids, contains ( pid. getValue ( ) ) )
14497	assertThat ( log. getLogEntries ( 1, 5, quorumId ), resultsIn ( equalTo ( entries ) ) )
14498	assertEquals ( NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
14499	assertThat ( noOfSolutions, is ( 87 ) )
14500	assertEquals ( 0, exitCode )
14501	assertEquals ( date, date2 )
14502	Assert. assertEquals ( "Value is incorrect", map ( MONTH_DAY_STRING, "test" ), value )
14503	assertEquals ( result, "10 years ago" )
14504	assertEquals ( VALUE1 + VALUE2, client. get ( KEY1 ). toCompletableFuture ( ). get ( ) )
14505	assertEquals ( result. getRelativeSubUserId ( ), subUser. getRelativeSubUserId ( ) )
14506	Assert. assertArrayEquals ( "Not all expected favorites are returned.", expectedResult ( queryResult ). toArray ( ), results. toArray ( ) )
14507	assertEquals ( lastProgress, t )
14508	Assert. assertEquals ( 2, user. getTotalUnreadPrivateMessages ( ) )
14509	assertThat ( result, is ( expected ) )
14510	assertNotNull ( con. getAutoCommit ( ) )
14511	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"conference\\":{\\"id\\":\\"1234\\",\\"mute\\":false,\\"playTones\\":false,\\"interdigitTimeout\\":3.5,\\"required\\":true,\\"terminator\\":\\"#\\"}}]}" )
14512	assertEquals ( "Deleted entity should match original", revisions. getTotalElements ( ), 1 )
14513	assertThat ( underTest. isLastDownloaded ( ), is ( false ) )
14514	Assert. assertEquals ( "select babyfish_shared_alias_0 " + "from org.babyfishdemo.jpacriteria.entities.Employee babyfish_shared_alias_0", createQueryTemplate ( cq ). toString ( ) )
14515	assertEquals ( "?p1=v1&p2=v2&p3=v3", query. toString ( ) )
14516	assertThat ( tag. getDescription ( ), is ( "annotated-tag-of-2nd-commit" ) )
14517	assertEquals ( 1, instance. evaluations )
14518	assertNotNull ( helper )
14519	assertThat ( fe, notNullValue ( ) )
14520	assertNoDataValue ( targetPoduct. getBand ( FLOAT_BAND_NAME ), new PixelPos ( 23.5f, 13.5f ), 299.0, 299.0 )
14521	testHelper. assertJobMigrated ( "eventSubProcessStart", "eventSubProcessStart", AsyncContinuationJobHandler. TYPE )
14522	assertEquals ( 1, CollQueryFactory. from ( entity, Collections. singleton ( new Entity ( ) ) ). where ( $ ( entity. getBoolean1 ( ) ). eq ( Boolean. TRUE ) ). fetchCount ( ) )
14523	assertThat ( result, contains ( v_121, v_122 ) )
14524	Assert. assertEquals ( 9, map. size ( ) )
14525	assertTrue ( "foo". equals ( test ( ) ) )
14526	Assert. assertEquals ( "bob", token. getUserName ( ) )
14527	assertFalse ( canHandle ( handlerInput ) )
14528	assertEquals ( "Wrong name", newName, root. getName ( ) )
14529	Assert. assertNotNull ( savedTenant2 )
14530	assertEquals ( expected, result. toString ( ) )
14531	assertResultSet ( res )
14532	assertEquals ( "this is a test", pnr. getProperty ( "test" ). get ( ) )
14533	assertTrue ( "diff: " + diff, diff < 1000 )
14534	assertEquals ( expectedQuery, actualQuery )
14535	Assert. assertEquals ( 0.0, getMetric ( ). calculate ( getSession ( ) ), getDelta ( ) )
14536	assertEquals ( dataSet. getRowCount ( ), 50 )
14537	assertTrue ( "Headers tar file '" + headersTarFile + "' for sdk '" + sdk + "' and configuration '" + configuration + "' does not exist.", headersTarFile. exists ( ) )
14538	assertEqualsLQ ( Ac, lq. factor ( new DenseMatrix ( Ac ) ) )
14539	assertEquals ( "Hawk id=\\"x\\",mac=\\"yFJJWss5T5FJSHs7GJA2WjUQ/LEZOnUv/FE=\\",ts=\\"1\\",nonce=\\"abc\\",body=\\"Das ist ein toller body\\"", h. toString ( ) )
14540	assertTrue ( "Failed permission check was not logged", loggedFailedPermissionCheck ( AUDIT_LOG_FILE, USER ) )
14541	assertEquals ( "x INT\\n", found )
14542	Assert. assertEquals ( jsonString, "[{\\"name\\":\\"涓���\\",\\"id\\":1,\\"brithDate\\":null,\\"money\\":1.1},{\\"name\\":\\"涓���\\",\\"id\\":1,\\"brithDate\\":null,\\"money\\":1.1}]" )
14543	assertEquals ( ( VecTools. multiply ( newOutput, outputGrad ) - VecTools. multiply ( output, outputGrad ) ) / eps, grad. get ( i ), 1e-5 )
14544	assertTrue ( check )
14545	assertFalse ( identityService. userExists ( user. getId ( ) ) )
14546	Assert. assertEquals ( "test", stack. top ( ). get ( "test", null ) )
14547	assertNull ( entry )
14548	assertEquals ( 30.0, v. getLatestArrival ( ), 0.01 )
14549	assertThat ( result, is ( jsonString ( null ) ) )
14550	Assert. assertEquals ( expectedOutput, output )
14551	assertEquals ( protocol, response. getHeader ( SecWebSocketVersionInterceptor. SEC_WEB_SOCKET_PROTOCOL_HEADER ) )
14552	assertEquals ( "<p>Hello</p>\\n<p>There</p>", divs. html ( ) )
14553	assertEquals ( customUiTemplateUpdated. getTemplateValue ( ), customUiTemplate. getTemplateValue ( ) )
14554	assertEquals ( "regexp condition serialization is wrong", expected, actual )
14555	assertFalse ( "WorkflowDocument should not indicate quickstart as SuperUser", document. isValidAction ( ActionType. SU_BLANKET_APPROVE ) )
14556	assertThat ( description. toString ( ), is ( "A JSON array with size: 3" ) )
14557	Truth. assertThat ( searchResponse. getHits ( ). totalHits ( ) )
14558	assertAllCommandsUsed ( )
14559	assertTrue ( getNoErrorMsg ( ), result )
14560	Assert. assertNull ( vm. getInstanceOfferingUuid ( ) )
14561	assertNotNull ( entity. getId ( ) )
14562	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
14563	assertThat ( formatter. parse ( "April/14, Heisei 29" ), is ( expected ) )
14564	assertMedianIs ( 4D )
14565	assertFalse ( test5. equals ( null ) )
14566	Assert. assertArrayEquals ( expected, result, 1e-5 )
14567	assertEquals ( testGen1. getInsertGroup ( testLSN ). toString ( ), testGen2. getInsertGroup ( testLSN ). toString ( ) )
14568	assertEquals ( header, conditionals. toHeaders ( ). getFirstHeader ( HeaderConstants. IF_MODIFIED_SINCE ). get ( ) )
14569	assertEqualsIgnoreWhitespace ( expected, real )
14570	assertEquals ( "<!DOCTYPE html><!-- a comment -->One <qux />Two", TextUtil. stripNewlines ( doc. html ( ) ) )
14571	Assert. assertTrue ( this. tableVerifier. getAssertionSummary ( ) )
14572	assertEquals ( "1234567890123456789", columnInformation. getInformationContent ( ) )
14573	assertTrue ( page. getContent ( ). contains ( "ENABLED_FOR_CK = true" ) )
14574	assertEquals ( 2, graph. countVertices ( "V" ) )
14575	assertMockEndpointsSatisfied ( )
14576	Assert. assertTrue ( permissions. toString ( ), permissions. isEmpty ( ) )
14577	assertEquals ( "dois nonilh玫es", actual )
14578	assertProductEvidence ( result, product )
14579	assertNotNull ( result )
14580	Assert. assertNotNull ( addressResultsDto )
14581	assertEquals ( 1, result )
14582	assertEquals ( false, maybeName. isPresent ( ) )
14583	assertThat ( page. hasError ( ), is ( false ) )
14584	assertTrue ( exitCallHook. exitCalled )
14585	assertTrue ( list. isEmpty ( ) )
14586	assertNotNull ( result )
14587	assertEquals ( 1, getStartBatchCount ( ) )
14588	assertUnselectableDatesSelectedWhileHasValidSelection ( model )
14589	assertTrue ( result instanceof V8Function )
14590	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"transfer\\":{\\"to\\":\\"tel:+14157044517\\"}}]}" )
14591	assertFalse ( Files. exists ( source ) )
14592	assertNotNull ( result )
14593	Assert. assertEquals ( "org.wildfly.arquillian:wildfly-arquillian-container-managed:2.2.0.Final", adapter. dependencies ( ) [ 0 ] )
14594	assertEquals ( "abc123", ad. getAttachment ( ). getBoundary ( ) )
14595	Assert. assertEquals ( "distributedTransactionTimeout=42", getReplHeader ( ) )
14596	assertThat ( webbitException, is ( notNullValue ( ) ) )
14597	assertEquals ( "(SOURCEFIELD =='sourceValue' AND TARGETFIELD == 'targetValue' AND ENRICHFIELD == 'enrichValue')", transformed )
14598	assertEquals ( maxTries, failedAt )
14599	iterables. assertIsSubsetOf ( someInfo ( ), actual, newArrayList ( ) )
14600	assertTrue ( blobStore. delete ( tileRange ) )
14601	assertTrue ( "Timezone offset should be negative", offsetMillis >= 0 )
14602	assertEquals ( true, classUnderTest. isSelected ( ) )
14603	Assert. assertFalse ( "did not pass filter when last good path is empty", testControlBlock. filter ( "" ) )
14604	assertEquals ( 1, tree. calculateDepth ( ) )
14605	assertEquals ( afterAesEncrypt2, pc. encrypt ( randomStr, replyMsg2 ) )
14606	assertEquals ( 1, e. getMessageReference ( ). getContent ( ). size ( ) )
14607	assertTrue ( responseBody. contains ( "HTTP/1.1 200 OK" ) )
14608	Assert. assertTrue ( expect ( o, false ) )
14609	assertResourceContains ( "function" )
14610	assertEquals ( expected, result )
14611	assertCorrectList ( )
14612	assertPaintingResult ( objects )
14613	assertEquals ( 0xffff, result )
14614	assertArrayEquals ( "The view paths array is incorrect", new String [ ] { "test", "test" }, scm. getViewPaths ( EMPTY_VARIABLE_RESOLVER ) )
14615	assertEquals ( id, act. getId ( ) )
14616	assertEquals ( "x=a;b\\n", found )
14617	assertTrue ( result. getErrorMessage ( ), result. isSucceeded ( ) )
14618	assertThat ( m1, is ( not ( m2 ) ) )
14619	assertNotNull ( rh )
14620	softly. assertThat ( skipInstallationChecker )
14621	Assert. assertTrue ( "Out of bounds (" + result [ 0 ] + " > " + start [ 0 ] + ")", result [ 0 ] >= start [ 0 ] )
14622	assertEquals ( resources, parser. ipAddressBlocksToDer ( RFC3779_APPENDIX_B_EXAMPLE_1 ) )
14623	testHelper. assertProcessEnded ( testHelper. snapshotBeforeMigration. getProcessInstanceId ( ) )
14624	Assert. fail ( "Should have failed" )
14625	Assert. assertEquals ( expResult, result )
14626	assertNull ( mostRecentId )
14627	assertThat ( values, contains ( patientId. getValue ( ), encId. getValue ( ), conditionId. getValue ( ), epId. getValue ( ), encId. getValue ( ), epId. getValue ( ), conditionId. getValue ( ), encId. getValue ( ), epId. getValue ( ), encId. getValue ( ), epId. getValue ( ), encId. getValue ( ), epId. getValue ( ), epId. getValue ( ), epId. getValue ( ), epId. getValue ( ), epId. getValue ( ), epId. getValue ( ), epId. getValue ( ), epId. getValue ( ), epId. getValue ( ), epId. getValue ( ), encId. getValue ( ), encId. getValue ( ), encId. getValue ( ), encId. getValue ( ), encId. getValue ( ), encId. getValue ( ), encId. getValue ( ), epId. getValue ( ), epId. getValue ( ), encId. getValue ( ), encId. getValue ( ),
14628	assertEquals ( "Didn't get a 200 response", 200, getStatus ( patchReq ) )
14629	assertTrue ( store. evictable ( new Configuration ( ) ) )
14630	assertEquals ( "Test\\nThis is a test", sb. toString ( ) )
14631	assertGroups ( ldapUserGroupCallback, true, true, false, false )
14632	assertArrayEquals ( expected, ArrayUtils. reverse ( array ), 0.00001 )
14633	assertNotEquals ( column1, column2 )
14634	Assert. assertEquals ( urlEsperada, nota. getInfoSuplementar ( ). getQrCode ( ) )
14635	assertEquals ( expected, sorted )
14636	assertEquals ( expected [ i ] [ y ] [ x ], ra. get ( ). get ( ), 0 )
14637	Assert. assertTrue ( validator. validSequence ( 1, inputSequence, outcomesSequence, outcome ) )
14638	assertEquals ( USERNAME, principal. getName ( ) )
14639	assertEquals ( "1", result. getStringValue ( ) )
14640	assertEquals ( 2, kSession. fireAllRules ( ) )
14641	assertFalse ( appender. isStarted ( ) )
14642	assertEquals ( "CFBundleVErsion in file '" + infoPList + "' is not the expected version '" + dynamicVersion + "'.", dynamicVersion, new PListAccessor ( infoPList ). getStringValue ( PListAccessor. KEY_BUNDLE_VERSION ) )
14643	assertEquals ( expectedQuery, actualQuery )
14644	assertEquals ( "Ok", close )
14645	assertThat ( c. name, is ( nullValue ( ) ) )
14646	assertEquals ( id, sut. getId ( ) )
14647	assertResultsMatch ( select ( windowFunction ( count ( ). build ( ). as ( "theCount" ) ). from ( tableRef ( "WindowFunctionTable" ) ), "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"
14648	assertTrue ( filter. matches ( operation, poolInfoMap ) )
14649	assertFalse ( fs. deleteOnExit ( path ) )
14650	assertTrue ( "Wrote incorrect char[] string: " + s, s. equals ( "Hello World" ) )
14651	ValidationTestUtils. assertPatternMatches ( pattern, expected )
14652	assertTrue ( result )
14653	should. assertEquals ( 2, res. result ( ). principal ( ). getInteger ( "provider" ). intValue ( ) )
14654	assertEquals ( tags. get ( ), Collections. singletonList ( Lists. newArrayList ( "1" ) ) )
14655	assertEquals ( expResult, result )
14656	Assert. assertEquals ( simple. getName ( ), name )
14657	assertEquals ( 25, cap. get ( 0 ) )
14658	assertThat ( coords, equalTo ( actualCoords ) )
14659	assertEquals ( "http://tempuri.org", w. getWorkGroup ( ). get ( 0 ). getWorkSummary ( ). get ( 0 ). getUrl ( ). getValue ( ) )
14660	Assert. assertEquals ( "3.14", this. ghci. pullRaw ( "my_pi" ). get ( ) )
14661	assertThat ( result, is ( nullValue ( ) ) )
14662	assertEquals ( 200, test. val )
14663	assertMockEndpointsSatisfied ( )
14664	assertThat ( newValues, hasSize ( 0 ) )
14665	assertEquals ( MLContextUtil. BUILD_TIME_NOT_AVAILABLE, buildTime )
14666	assertEquals ( "SELECT * WHERE {?user?_c2?_c3 } LIMIT 4" )
14667	assertThat ( new SelectBest ( ). selectSolution ( Arrays. asList ( sol1, sol2 ) ), is ( sol2 ) )
14668	assertEquals ( "12345", writer. write ( carrier ) )
14669	assertEquals ( expected, actual )
14670	assertEquals ( 1, comparator. compare ( null, solution2 ) )
14671	Assert. assertEquals ( "%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%3CConnect%2F%3E", elem. toUrl ( ) )
14672	assertEquals ( 2, posts. count ( ) )
14673	assertEquals ( "Merge table should have 2 additional records now", 2, finalNumberOfRecords - initialNumberOfRecords )
14674	assertEquals ( goldenResponse, responseObserver. firstValue ( ). get ( ) )
14675	assertNotNull ( testObj. getPanel ( ) )
14676	Assert. assertTrue ( error. getMessage ( ). contains ( "ORU_R01" ) )
14677	assertEquals ( 1, branch_conditions. size ( ) )
14678	assertEquals ( "{\\"title\\":\\"my title\\",\\"description\\":\\"my description\\",\\"id\\":\\"my/id\\"}", actual. toString ( ) )
14679	assertEquals ( 2d * Math. cos ( Math. E ), e. evaluate ( ), 0d )
14680	assertEquals ( "myTestId", history. getId ( ). getIdPart ( ) )
14681	assertArrayEquals ( refar, d. getResult ( ) )
14682	this. assertLoadBlob ( departments, false, true )
14683	assertEquals ( 0, metrics. size ( ) )
14684	assertThat ( result, is ( true ) )
14685	Assert. assertEquals ( NodeState. NEW, addedNode. getState ( ) )
14686	assertEquals ( count1, count2 )
14687	assertTrue ( "Choke rate is " + maxRate + " but actual rate is " + actualRate, actualRate >= maxRate )
14688	assertEquals ( "padRight() To 10", Text. valueOf ( "******Test" ), _text )
14689	assertTrue ( doc. getStatementGroups ( ). isEmpty ( ) )
14690	assertTrue ( "Can't find statement", m. contains ( expectedStatement ( APP_BASE ) ) )
14691	assertEquals ( instance, ksession. startProcess ( TIMER_ID ). getId ( ) )
14692	assertFalse ( selectedFile. exists ( ) )
14693	assertEquals ( OK. getStatusCode ( ), getStatus ( put ) )
14694	assertThat ( resultCommand, is ( expectedCommand ) )
14695	assertEquals ( 4915, result )
14696	assertTrue ( resp. isSuccess ( ) )
14697	MockInterceptor. assertContent ( new String [ ] { "Mock1", "Mock2", "Mock3", "Mock4", "Mock5", "Mock6" }, new String [ ] { "Mock6", "Mock5", "Mock4", "Mock3", "Mock2", "Mock1" }, new String [ ] { } )
14698	assertEquals ( StorageCommonConfig. STORE_URL_DEFAULT, connectorConfig. getStoreUrl ( ) )
14699	assertThat ( tester. getMessages ( FeedbackMessage. ERROR ). size ( ), is ( 1 ) )
14700	assertEquals ( "Expected another type of analyzer", KeywordAnalyzer. class, analyzer. getClass ( ) )
14701	Assert. assertEquals ( "AND", last. getOp ( ) )
14702	assertAnnotations ( 2, Quantity. class, new TestQuantity ( 0, "2 cubic metres", 2, "m^2", 2, "area" ), new TestQuantity ( 1, "2 cubic metres", 2, "m^2", 2, "area" ) )
14703	assertEquals ( t, dt. getTime ( ) )
14704	assertNoneEqual ( otherCapabilityFqans )
14705	assertEqualsWithoutWhiteSpaces ( "", union )
14706	assertEquals ( "hello", result )
14707	assertEquals ( "first second", subject. getOutput ( ). get ( 2 ) )
14708	Assert. assertTrue ( logLatch. await ( 10, TimeUnit. MINUTES ) )
14709	assertThat ( result, equalTo ( true ) )
14710	out. assertIsSatisfied ( )
14711	assertSame ( t, TEST_2007_07_15 )
14712	assertEquals ( BigDecimal. TEN, dto. getQty ( ) )
14713	assertEquals ( 1, sparseView. getFirstColumn ( ) )
14714	assertTrue ( "Token realm should be created", ops. exists ( TEST_TOKEN_REALM_ADDRESS ) )
14715	assertEquals ( IProcess. URN_XPATH_1_0_IN_BPEL_2_0, process. getExpressionLanguage ( ) )
14716	assertNull ( placeHolder. getParentClass ( ) )
14717	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"message\\":{\\"say\\":[{\\"value\\":\\"This is an announcement\\"},\\"to\\":\\"+13055551212\\",\\"from\\":\\"3055551000\\",\\"voice\\":\\"KATE\\",\\"timeout\\":10.0,\\"answerOnMedia\\":false}}]}" )
14718	assertThat ( supers, contains ( superProperty ) )
14719	assertEquals ( testFM. fileMetaDataMock. getFile ( ). getName ( ), testFM. underTest. getOutputFile ( ). getName ( ) )
14720	assertEquals ( 200, response. getStatus ( ) )
14721	SerializableObjects. assertEquals ( bar, parsedBar )
14722	assertEquals ( expected, e. evaluate ( ), 0.0 )
14723	Assert. assertEquals ( "Result is not last evaluated expression", "World", o )
14724	assertEquals ( "pong!", reply. body ( ). getString ( "message" ) )
14725	assertEquals ( 32, program. getMemSize ( ) )
14726	assertTrue ( duration > 100 )
14727	assertThat ( exists, is ( false ) )
14728	Assert. assertTrue ( queryResult. getSize ( ) >= 1 )
14729	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
14730	Assert. assertEquals ( 3, ( int ) sync ( list. get ( 0 ) ) )
14731	assertEquals ( "The break sentences are not correct", results [ 0 ], results [ 1 ] )
14732	Assert. assertTrue ( id!= null )
14733	assertTrue ( graphContains ( gStore. getDefaultGraph ( ), new Triple ( s, p, NodeFactoryExtra. parseNode ( "123" ) ) ) )
14734	assertThat ( scriptContent, is ( "Selective Annotation" ) )
14735	assertEquals ( 1, result )
14736	assertTrue ( true )
14737	assertEquals ( "Message not found", "Please enter a value", driver. findElement ( By. cssSelector ( ".error" ) ). getText ( ) )
14738	assertTrue ( passed [ 0 ], passed [ 0 ] == null )
14739	assertTrue ( result. isResultOK ( ) )
14740	assertEquals ( prefix + "hello" + suffix, result )
14741	assertEquals ( "Wrong result", BulkOMaticUtils. MATCH_ID, match. getId ( ) )
14742	assertEquals ( "a,c", out )
14743	assertEquals ( testSet. cardinality ( ), board. cardinality ( ) )
14744	assertThat ( candidates. size ( ), is ( 0 ) )
14745	assertEquals ( "null", getSelect ( ). getText ( ) )
14746	assertEquals ( "Value not as expected!", Long. valueOf ( 1 ), bi. getValue ( ) )
14747	assertEquals ( "[pm1.g1.e1, pm1.g1.e2, pm1.g1.e3, pm1.g1.e4, pm1.g2.e1, pm1.g2.e2, pm1.g2.e3, pm1.g2.e4]", query. getProjectedSymbols ( ). toString ( ) )
14748	assertTrue ( GerritVersionChecker. isCorrectVersion ( GerritVersionChecker. Feature. fileTrigger, testServer ) )
14749	Assert. assertEquals ( unidadeFederativa, eventoRetorno. getOrgao ( ) )
14750	assertObjectEquals ( "{type:'string'}", x. getSchema ( ) )
14751	assertTrue ( listener. isDone ( ) )
14752	assertEquals ( "hello world", new String ( ObjectConverterUtil. convertToCharArray ( result. getBinaryStream ( ), - 1, "UTF32" ) ) )
14753	assertEquals ( 0, score ( ) )
14754	assertTrue ( ( Boolean ) result )
14755	Assert. assertEquals ( expected, actual, 0 )
14756	assertEquals ( stream, streamAfterParse )
14757	assertNotEquals ( playlist1. hashCode ( ), playlist2. hashCode ( ) )
14758	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + destPdf, sourceFolder + cmpPdf, destinationFolder ) )
14759	assertEquals ( inputGraphHead, outputGraphHead )
14760	assertNotNull ( testObj. getFieldDataManager ( ) )
14761	assertContainsAllGames ( games )
14762	assertThat ( taskService. createTaskQuery ( ). taskAssignee ( "demo" ). taskId ( task. getId ( ) ). count ( ), is ( 1L ) )
14763	Assert. assertEquals ( displayNameExpected, displayNameActual )
14764	assertTrue ( matchResult )
14765	assertFalse ( satisfiesPrecondition ( cu ) )
14766	assertEquals ( expResult, result, 0.001F )
14767	Assert. assertEquals ( "Wrong key created", comparationKey, createdKey )
14768	assertEquals ( URIUtils. appendMetadataSegment ( uri, "metadata" ), uri )
14769	assertFalse ( resultMessage ( res, PUT ), res. passedValidation ( ) )
14770	assertEquals ( expectedDataset, dataset )
14771	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Say>" + "<genericTag key=\\"value\\">" + "someText" + "</genericTag>" + "</Say>", elem. toXml ( ) )
14772	assertEquals ( "Database should be the same", "geogig", targetEnv. getTablePrefix ( ) )
14773	assertEquals ( expectedPlotsNames, sprites )
14774	assertTrue ( "The entityGroup should be present in online entityGroups list.", fs. getOnlineEntityGroups ( ). contains ( eg ) )
14775	assertTrue ( wkt, wkt. matches ( "urn:ogc:def:crs:epsg:4326" ) )
14776	assertEquals ( d, voidable. getDateVoided ( ) )
14777	assertEquals ( str, decrypted )
14778	Assert. assertEquals ( "updated", result. getReturnMsg ( ) )
14779	Assert. assertEquals ( 0, lostWorkersInfo. size ( ) )
14780	assertThat ( testInstance. getMyInjection ( ), is ( nullValue ( ) ) )
14781	assertTrue ( root. containsNetwork ( s1 ) )
14782	assertCloseTo ( "Scroll position should be 0", newRowLocation, rowLocation0 )
14783	assertEquals ( 2, v. getCount ( ) )
14784	runner. assertAllFlowFilesTransferred ( PublishKafka_0_10. REL_FAILURE, 3 )
14785	assertEquals ( "3.141592653589793", method. invoke ( normalizer, literal, false ) )
14786	Assert. assertEquals ( "40 minutes ago", prettyTime. format ( prettyTime. calculatePreciseDuration ( new Date ( new Date ( ). getTime ( ) - 40 * 60 * 1000 - 40 * 1000 ) ) ) )
14787	assertNotNull ( reservation )
14788	assertThat ( result. fullName ( ), is ( "double" ) )
14789	assertEquals ( "[s,e,c]", s. getContext ( ). toString ( ) )
14790	Assert. assertEquals ( ExchangePhase. OUT, exchange. getPhase ( ) )
14791	assertThat ( PrettyTime. of ( Locale. BRIRISH ). print ( duration, TextWidth. WIDE ), is ( "1 year and 1 day" ) )
14792	assertThat ( isEquals, is ( true ) )
14793	assertTrue ( p1. implies ( p2 ) )
14794	Assert. assertEquals ( CORSFilter. CORSRequestType. PRE_FLIGHT, requestType )
14795	assertTrue ( reportData. size ( ) > 0 )
14796	assertEqualsWithoutWhiteSpaces ( "translate([10,20,30]) rotate([10,20,30]) (empty)", moved )
14797	assertEquals ( ENTITY_COUNT, postIds. size ( ) )
14798	Assert. assertTrue ( isFile ( fc, f ) )
14799	assertIpAddress ( )
14800	Assert. assertEquals ( schema. getSubsequentVersionField ( ), "version_number" )
14801	assertEquals ( expResult, result )
14802	assertTrue ( icheck. getFaults ( ). length > 0 )
14803	assertTrue ( reader. hasNext ( ) )
14804	assertArray2 ( ARRAY2, memcache. get ( KEY1 ) )
14805	assertEquals ( expResult, result )
14806	Assert. assertEquals ( patientPrograms. size ( ), Util. getResultsSize ( result ) )
14807	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
14808	assertEquals ( - 1, cmpTo. compareTo ( 5L ) )
14809	assertTrue ( value. contains ( "cas" ) )
14810	assertEquals ( expected, actual )
14811	assertTrue ( s1. equals ( s ) )
14812	assertEquals ( "<http://www.semanticweb.org/ontologies/2013/7/untitled-ontology-150#Country3-a>", val )
14813	assertEquals ( 0.5, density,.05 )
14814	assertTrue ( Futures. getUnchecked ( collector ) )
14815	assertEquals ( mod, modSer )
14816	assertEquals ( expected, modelWriter. toString ( ) )
14817	Assert. assertThat ( reader. readLine ( ), is ( "Hello World" ) )
14818	assertHasMethod ( model, "java.lang.Object proof(int p0,int p1)" )
14819	assertTrue ( connectFuture. isConnected ( ) )
14820	Assert. assertEquals ( jsc, jscs. get ( 0 ) )
14821	assertEquals ( "<p>This is deleted text</p>\\n", result. message ( ). get ( 0 ). getData ( ) )
14822	assertEquals ( "Correct Platform is not fetched by server", pValue, testPlatform )
14823	assertEquals ( "WARNING", object. get ( "level" ) )
14824	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 09" ) )
14825	assertEquals ( 1, countConcept ( mainConceptUri ) )
14826	assertThat ( result. statusCode, is ( Response. OK ) )
14827	assertMockEndpointsSatisfied ( )
14828	assertEquals ( "select * from ( select row_.*, rownum rownum_ from ( select * from user ) row_ ) where rownum_ <= 10+100 and rownum_ > 10", sql )
14829	assertResultsEqual ( renderChild ( net, sum ), 0.0, 0.0, 0.0, 0.0 )
14830	assertTrue ( perun. getUsersManagerBl ( ). getAdminsIfNotExist ( sess, u. getUserId ( ) ). contains ( u ) )
14831	assertThat ( content, is ( equalTo ( pageContent ) ) )
14832	assertEquals ( "4142", Arrays. toString ( nums ) )
14833	assertTrue ( page. asText ( ). contains ( "Hello World" ) )
14834	assertTrue ( response. contains ( getWebContextVarDefinition ( "USE_CONFIG_DEFAULT", this. noOsgiRequireConfigDefault ) ) )
14835	assertThat (! duration. isNegative ( ), equalTo ( true ) )
14836	assertNotNull ( todo )
14837	Assert. assertEquals ( aString, sut. getName ( ) )
14838	assertEquals ( msgAndResponse, response )
14839	assertDurationEquals ( d, t1. minus ( t2 ) )
14840	assertEquals ( "en-US", h. getLanguage ( ) )
14841	assertEquals ( "[a, b, c]", s )
14842	assertFalse ( configuration. isPresent ( ) )
14843	assertNotNull ( diagnosis. getId ( ) )
14844	assertEquals ( list, result )
14845	Assert. assertEquals ( 2, vm. getStack ( ). size ( ) )
14846	assertTrue ( connection. isClosed ( ) )
14847	assertNotNull ( HostedNumberOrder. fetcher ( "HRXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
14848	Assert. assertEquals ( HttpServletResponse. SC_OK, response. getStatus ( ) )
14849	assertTrue ( twoBackoffIntervalsMs < ( endTimeMs - startTimeMs ) )
14850	assertEquals ( "go", componentAt ( 0, 0 ). getText ( ) )
14851	assertThat ( node. getEntities ( ), is ( Collections. singleton ( owlBottomClass ) ) )
14852	assertYaml ( "", Samples. PROJECT_STRATEGY_ROLESMAPPING_UNIQUE_KIBANA_MODE. getContent ( ), rolesMapping )
14853	assertThat ( slider. getValue ( ), is ( 5.0 ) )
14854	assertNumEquals ( "1.0", highestValue. getValue ( 11 ) )
14855	assertEquals ( "Expected another type of analyzer", SimpleAnalyzer. class, analyzer. getClass ( ) )
14856	assertThat ( handledResponse, is ( equalTo ( response ) ) )
14857	assertEquals ( expectedSqlForMathOperations15 ( ), result )
14858	assertEquals ( mockQuery, queryPlan. getQuery ( ) )
14859	assertEquals ( Result. PASS, group. apply ( item ) )
14860	assertEquals ( 20000L, testLong )
14861	assertRows ( filePath, 6, TEST_COLUMNS )
14862	assertEquals ( "Wrong value", ATTR_VALUE, node2. getAttribute ( ATTR ) )
14863	Assert. assertEquals ( "2 �������", p. format ( new Date ( 1000 * 60 * 60 * 2 ) ) )
14864	assertEquals ( "OK", reply )
14865	assertResponseContainsModel ( "<img class=\\"componentIcon\\" src=\\"modelregistry/api/componenticon\\"/> nt:unstructured", Model. class, 123L, "modelName" )
14866	assertEquals ( "Expected 2 results!", 2, n )
14867	assertNull ( "Not returning inprogressZnode", inprogressNodePath )
14868	assertEquals ( BRIGHT. foreground ( RED ), style )
14869	arrays. assertContainsOnly ( description, actual, emptyArray ( ) )
14870	assertEquals ( "simple test", entries. get ( 0 ). getMessage ( ) )
14871	assertEquals ( Collections. singletonList ( "A" ), descendants )
14872	Assert. assertEquals ( "MD5 checksum mismatch", expectedChecksum, sb. toString ( ) )
14873	assertEquals ( jsonFromObject, jsonFromString )
14874	assertEquals ( expResult, result )
14875	Assert. assertEquals ( identificador, protocoloInfo. getIdentificador ( ) )
14876	assertNull ( f. evaluate ( null ) )
14877	assertIsCommitted ( tx )
14878	assertNull ( expected. getName ( ) )
14879	assertResult ( metrics )
14880	assertEquals ( "yes", html )
14881	assertEquals ( expected, bsos. toBitString ( ) )
14882	assertEquals ( 1, instance. evaluations )
14883	assertEquals ( expected, uri. toString ( ) )
14884	assertThat ( filter. include ( artifact ), is ( false ) )
14885	assertThat ( options. getString ( "scopeFieldName" ), is ( "fieldName" ) )
14886	assertThat ( confirmation. getStatus ( ), equalTo ( clearCacheStatus ) )
14887	assertFalse ( "Result should be false for public method.", result )
14888	assertEquals ( expectedQuery, actualQuery )
14889	assertEquals ( "success result", spyInterpretJob. getInterpreterResult ( ). getMessage ( ) )
14890	assertTrue ( page. asText ( ). contains ( "MESSAGE 1" ) )
14891	assertTrue ( "Results are not the same", results. size ( ) == 0 )
14892	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
14893	Assert. assertEquals ( "<table border=\\"1\\" cellspacing=\\"0\\">\\n" + "<tr>\\n" + "<th class=\\"pass\\">Col 1</th>\\n" + "<th class=\\"pass\\">Col 2</th>\\n" + "</tr>\\n" + "<tr>\\n" + "<td class=\\"pass\\">A1</td>\\n" + "<td class=\\"pass\\">A2</td>\\n" + "</tr>\\n" + "<tr>\\n" + "<td class=\\"pass multi\\" colspan=\\"2\\">2 more rows...</td>\\n" + "</tr>\\n" + "</table>", TableTestUtils. getHtml ( this. tableVerifier, "table" ) )
14894	assertEquals ( data, baos. toString ( StandardCharsets. UTF_8 ) )
14895	assertEquals ( "{\\n" + "  'player2':{\\n" + "    'board':'some_board2',\\n" + "    'boardSize':14,\\n" + "    'gameName':'game',\\n" + "    'heroesData':{\\n" + "      'coordinates':'coordinates1',\\n" + "      'group':[\\n" + "        'player2'\\n" + "      ]\\n" + "    },\\n" + "    'info':'some_info2',\\n" + "   'score':235,\\n" + "   'scores':{\\n" + "      'player2':300\\n" + "    }\\n" + "  }\\n" + "}", JsonUtils. prettyPrint ( result ) )
14896	Assert. assertTrue ( strategy. shouldRetry ( null, 0, null ) )
14897	assertTrue ( it. next ( ). asText ( ). contains ( "Hello World" ) )
14898	assertThat ( target. parse ( ), is ( true ) )
14899	assertThat ( new CodePrinter. Builder ( statement ). setCompilerOptions ( options ). build ( ), equalTo ( "_$jscoverage['test.js'].branchData['4'][2].removeInstrumentation(12,15)" ) )
14900	Assert. assertEquals ( 20, lambda. testAddInt ( 15, 5 ) )
14901	assertEquals ( expected, actual )
14902	assertEquals ( 2, i )
14903	Assert. assertEquals ( t. getSchema ( ), expectedSchema )
14904	assertNull ( "The validateArgTypes() method is buggy.", sf. validateArgTypes ( argTypes ) )
14905	assertEquals ( statusCode, sc. getCode ( ) )
14906	assertEquals ( entry, result )
14907	assertTrue ( ok )
14908	assertEquals ( "zero", actual )
14909	assertEquals ( 10, version. intValue ( ) )
14910	assertEquals ( 0, classpath. entries ( ). size ( ) )
14911	assertEquals ( new AffineTransform ( 1, 3, 2, 1, 10, 20 ), g2. getTransform ( ) )
14912	Assert. assertTrue ( cubes. size ( ) == 1000 )
14913	assertTrue ( "Command " + cmd + " timed out", con. getTimeout ( ) > workingTimeOut )
14914	assertResponse ( outputStream, expected )
14915	assertDecompressSpecification ( SPECIFICATION, shape. decompress ( ). build ( ). getSpecification ( ) )
14916	assertThat ( t, is ( u ) )
14917	Assert. assertEquals ( expected, testIndex. findConc ( "[lemma = 'jumps' | lemma = 'jump' | lemma = 'fox']" ) )
14918	assertEquals ( DependendencyStatus. FORBIDDEN, oracle. assess ( access ( "foo", "bar" ) ) )
14919	assertNotNull ( result )
14920	assertEquals ( originalService, event. getServiceForData ( ) )
14921	PSLTest. assertRule ( rule, "|A| * SINGLECLOSED(+A) + |B| * SINGLECLOSED(+B) = 1.0.", true )
14922	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE NAME(nodes) < 'literal'" ) )
14923	assertThat ( new SearchArgumentFilter ( searchArgument, structTypeInfo ). accept ( corc ), is ( false ) )
14924	assertUrlsEqual ( expected, url )
14925	Assert. assertEquals ( expected, testIndex. findConc ( " 'May' 'the' " ) )
14926	assertSqlCanBeParsedAndDeparsed ( statement )
14927	assertTrue ( "Differences: " + differences + "/" + rounds, differences > rounds * 0.9 && differences <= rounds )
14928	assertTrue ( "Short Title empty", constraintViolations. size ( ) == 1 )
14929	Assert. fail ( "Expected to fail, but didn't" )
14930	assertEquals ( "1.0", serviceMetadata. getVersion ( ) )
14931	assertSame ( test1, test2 )
14932	assertEquals ( asList ( foo5 ), results )
14933	assertEquals ( 5L, deltaDays. longValue ( ) )
14934	assertEquals ( "[(AppNode:foo --name=value:0>16)]", ast. stringify ( true ) )
14935	assertThat ( testDescription. name ( ), equalTo ( "MyTestingClass.should_do_this" ) )
14936	assertThat ( envelope. getValue ( ). getMessage ( ), is ( "test" ) )
14937	assertEquals ( "operator", operator. getOperator ( ) )
14938	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 04" ) )
14939	assertThat ( locationManager. getTableLocation ( ), is ( new Path ( TABLE_BASE_PATH + "/partition" ) ) )
14940	assertEquals ( exValues, possibleValues )
14941	Assert. assertEquals ( String. format ( "some %s here", this. html ( bb, "http://something" ) ), formatter. format ( "some [UrL]http://something[/URL] here", defaultOptions ( ) ) )
14942	assertEquals ( expected, result )
14943	assertThat ( target, is ( instanceOf ( OFPFlowActionPopPbbQuery. class ) ) )
14944	assertEquals ( val, results. getTimestamp ( colN ) )
14945	assertEquals ( 20, tasks. size ( ) )
14946	assertTrue ( nullObserver. get ( ) )
14947	Assert. assertTrue ( response. startsWith ( "404|NotFound" ) )
14948	assertTrue ( stream. idempotent )
14949	Assert. assertArrayEquals ( "Invalid binary data", data, dataActual )
14950	assertEquals ( newHashSet ( objectFactory ), everrestApplication. getFactories ( ) )
14951	assertThat ( actual, is ( equalTo ( expected ) ) )
14952	assertEquals ( expectedScriptNode, actualScriptNode )
14953	Assert. assertSame ( configuration, victim. getConfiguration ( ) )
14954	assertEquals ( mockWriter. toString ( ), response. toString ( ) )
14955	assertEquals ( expResult, result )
14956	Assert. fail ( "Expected UnknownReferenceException" )
14957	assertEquals ( "{X}", URITemplates. getUriTemplateString ( f1 ) )
14958	assertArrayEquals ( new int [ ] { 0, 0, 1 }, closed )
14959	assertThat ( bakeWorld ( new MyTimeboxedProcessingSystem ( 10, 0.01f, 0.02f, 9 ) ). process ( ), is ( true ) )
14960	assertTrue ( ScriptTestUtil. scriptIsInstanceOfScript ( testScript, expectedScript ) )
14961	assertEquals ( resolved. getTitle ( ), "foo" )
14962	assertEquals ( 0, sqlMetadataQueryExec. getDriverClassesToForceMeta ( ). size ( ) )
14963	assertEquals ( dbvEnum. size ( ), listVEnumElement. size ( ) )
14964	Assert. assertEquals ( ImportConfirmAction. SUCCESS, action. execute ( ) )
14965	assertTrue ( page. asXml ( ). contains ( "foo:bar" ) )
14966	org. junit. Assert. assertEquals ( expected, tHandler. getLastRecord ( ). getThrown ( ) )
14967	assertNotNull ( "Should have thrown a SoapServerException", caught )
14968	Assert. assertEquals ( "Button 1", button. getText ( ) )
14969	assertEquals ( expecteds, actuals )
14970	assertEquals ( 6, getHistoryLength ( ) )
14971	assertEquals ( "dest_name1", conf. getDestinationName ( ) )
14972	assertEquals ( 6, x )
14973	assertTrue ( m. nextInt ( 4 ) < 4 )
14974	assertTrue ( report. exists ( ) )
14975	assertNotEquals ( foo. tList, foo. stringList )
14976	assertEquals ( "Simple option", "-Dhttp.port=80", commandLine. getOption ( "simpleOption" ) )
14977	Assert. assertEquals ( 1, count )
14978	assertAllTargetsCount ( 0 )
14979	assertTrue ( resultComparator. compare ( fd1, fd2 ) > 0 )
14980	assertThat ( sut. isMatch ( real, expected ), is ( false ) )
14981	Assert. assertEquals ( expectedGeoJson, geoJson )
14982	assertShapeCoordinates ( boundaryEventBounds, 343, 200 )
14983	assertEquals ( "tz:" + tz. getID ( ) + " locale:" + locale. getDisplayName ( ), expected, actual )
14984	DataMockery. assertREQMODWithEarlyTerminatedPreviewAnnouncementIcapMessage ( request )
14985	assertEquals ( "street1+city1", me. getLikes ( ) )
14986	assertValidQuery ( query )
14987	assertNull ( this. getRemoteEndpoint ( url, params ) )
14988	Assert. assertTrue ( result )
14989	assertNotNull ( binding )
14990	assertThat ( formattedValue, is ( "A big story (<a target=\\"_blank\\" href=\\"http://my.issue.tracker/MYPROJECT/browse/MYPROJECT-123\\">#MYPROJECT-123</a>,<a target=\\"_blank\\" href=\\"http://my.issue.tracker/MYPROJECT/browse/MYPROJECT-456\\">#MYPROJECT-456</a>)" ) )
14991	assertFalse ( result. getMap ( ). getTr ( ). isEmpty ( ) )
14992	assertEquals ( expectedLineItem, actualLineItem )
14993	assertTrue ( statisticManager. findTaskRunningStatisticsWeekly ( ). isEmpty ( ) )
14994	assertOut ( "public class B implements custom.TestOtherInterface {\\n\\tpublic function B() {\\n\\tthis.type = '';\\n\\t}\\n}" )
14995	assertEquals ( 2, response. size ( ) )
14996	assertEquals ( EnumTest. class, c. resolveType ( "TheInnerClass.EnumTest" ) )
14997	assertEquals ( "{}", MapUtils. toString ( map ) )
14998	assertNull ( guicer. get ( DummyInterfaces. Gamma. class, MESSAGING_ACTIONS ) )
14999	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE (nodes.col1 IS NOT NULL " + "AND (nodes.col2 IS NOT NULL " + "AND nodes.col3 IS NOT NULL))" ) )
15000	assertEquals ( new BigDecimal ( "9.0" ), ticket. getDiscountPrice ( ) )
15001	assertThat ( localTime. toString ( ), is ( "2015-06-18T23:59:59.999Z" ) )
15002	assertEquals ( jobStatusTraceEvent, getJobEventRdbSearch ( ). findJobStatusTraceEvent ( JobEventRdbSearch. Condition. class ) )
15003	assertEquals ( ref, item )
15004	Assert. assertEquals ( profile. getId ( ), 1 )
15005	Assert. assertTrue ( "Listener not added", listenerAdded. get ( ) )
15006	assertEquals ( true, clusterBarrierManager. manageAckBarrier ( barrierPath, nodesExpected ) )
15007	assertEquals ( Integer. valueOf ( "1" ), result. getValue ( ) )
15008	assertEquals ( columnInfoList, fromConfig )
15009	assertThat ( found, is ( equalTo ( method ) ) )
15010	assertEquals ( "name", paramConfig. toString ( ) )
15011	assertEquals ( "inc(1)", counter. toString ( ) )
15012	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE LOCALNAME(nodes) = 'literal'" ) )
15013	assertThat ( context. getRealPath ( "/WEB-INF/classes/" ), is ( "/x/WEB-INF/classes/" ) )
15014	assertEquals ( test, npLoad )
15015	assertEquals ( "Incorrect number of items in reader", 4, count )
15016	assertThat ( tableMetas, is ( Collections. singletonList ( tableMeta ) ) )
15017	Assert. assertEquals ( "1\\n2\\n3\\n", eval ( sb. toString ( ) ) )
15018	assertNotNull ( result )
15019	assertEquals ( expected, actual )
15020	assertThat ( jsonOutputStreamParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/jsonmarshallertest/testEnvironment.json" ) ) )
15021	assertSingleElementCollection ( regionClientId, executeIds )
15022	assertEquals ( Quaternionf. IDENTITY, readQuaternion ( buf ) )
15023	Assert. assertTrue ( output. toString ( ). contains ( "No context details" ) )
15024	assertEquals ( "payload" + i, result )
15025	assertEquals ( "Expected that the pruning snapshot delay is less than the minimum.", 10000, iotaConfig. getLocalSnapshotsPruningDelay ( ) )
15026	assertNotNull ( processInstanceId )
15027	assertTrue ( slice. events. isEmpty ( ) )
15028	assertEquals ( 0, result. getBindingResultCount ( ) )
15029	assertEquals ( witnessList, partList )
15030	assertEquals ( "StringColumns:\\n", builder. toString ( ) )
15031	assertNumEquals ( 2, getCriterion ( ). calculate ( series, tradingRecord ) )
15032	assertEquals ( 1.0, errorRatio. evaluate ( FrontUtils. convertFrontToSolutionList ( frontApproximation ) ), EPSILON )
15033	assertThat ( options. toJSON ( ), is ( ( JsonElement ) json ) )
15034	listener. assertTestFailedWith ( AssertionError. class )
15035	Assert. assertEquals ( newValue, readValue, 0f )
15036	assertEquals ( NAMESPACE_BPEL_2_0, process. getTargetNamespace ( ) )
15037	assertEquals ( expected, mapper. valueToTree ( resource ) )
15038	assertThat ( content, is ( nullValue ( ) ) )
15039	runner. assertValid ( )
15040	assertEquals ( expResult, result )
15041	assertTrue ( r1 instanceof PublicCloneable )
15042	assertEquals ( 1, violations. size ( ) )
15043	Assert. assertTrue ( portA!= portB )
15044	assertEquals ( "{\\"f1\\":\\"J\\",\\"f2\\":100,\\"f3\\":true}", s. serialize ( a ) )
15045	assertThat ( output, CoreMatchers. containsString ( "Successfully wrote 2 rows" ) )
15046	assertEquals ( body. toString ( ), "123" )
15047	assertTrue ( callableInterceptor. executed. get ( ) )
15048	assertEquals ( 250, map. get ( 190, 210 ) )
15049	assertEquals ( "Set of bytes not matching any bitmask " + bitmask, expected, result )
15050	MatrixTestAbstract. assertMatrixEquals ( e, c )
15051	assertEquals ( "<input type='hidden' name='ACCEPTURL' value='http://mydomain.com/result?hint=ok'>\\n" + "<input type='hidden' name='AMOUNT' value='1000'>\\n" + "<input type='hidden' name='CANCELURL' value='http://mydomain.com/result?hint=ca'>\\n" + "<input type='hidden' name='CANCELURL' value='http://mydomain.com/result?hint=ca'>\\n" + "<input type='hidden' name='ACCEPTURL' value='http://mydomain.com/result?hint=ok'>\\n" + "<input type='hidden' name='CANCELURL' value='http://mydomain.com/result?hint=ca'>\\n" + "<input type='hidden' name='CANCELURL' value='http://mydomain.com/result?hint=ca'>\\n" + "<input type='hidden' name='ACCEPTURL' value='http://mydomain.com/result?hint=ok'>\\n" + "<input type='hidden' name='AMOUNT' value='1000'>\\n" + "<
15052	assertDateEquals ( r, t. plus ( d ) )
15053	assertEquals ( String. class. getName ( ), propertyType. getName ( ) )
15054	Assert. assertFalse ( reuseStrategy. keepAlive ( null, response, context ) )
15055	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
15056	assertThat ( candidateSteps. size ( ), Matchers. equalTo ( 0 ) )
15057	Assert. assertEquals ( icmsSetado, icms. getIcms90 ( ) )
15058	Assert. assertEquals ( expected, actual )
15059	assertThat ( h. toSmiles ( ), is ( "CCOCC(C)CCOCC" ) )
15060	assertThat ( history. getVariant ( ), is ( AncientJulianLeapYears. SCALIGER ) )
15061	assertEquals ( "(| (& [* fo.*] [*.*oo]) [= bar])", m. toString ( ) )
15062	assertThat ( TimestampInterval. parseISO ( "P4DT1H45M/2012-092T14:15" ), is ( expected ) )
15063	mockOutput. assertIsSatisfied ( )
15064	assertNull ( resolvedMatrixParameter )
15065	assertEquals ( expectedDocument, actualDocument )
15066	assertNull ( xtc. search ( tmid ) )
15067	assertEquals ( 1, result )
15068	assertTrue ( result. isEmpty ( ) )
15069	assertEquals ( flag, result )
15070	listener. assertEventFired ( new SortOrder ( "foo", SortDirection. ASCENDING, SortDirection. ASCENDING, SortDirection. DESCENDING ) )
15071	assertEquals ( "Sum(sum(add(one)))", transform. apply ( new Binary ( "1" ) ) )
15072	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "colorTest03.pdf", sourceFolder + "cmp_colorTest03.pdf", destinationFolder, "diff_" ) )
15073	assertEquals ( "av0c", nodeToStringTransformer. transform ( ) )
15074	Assert. assertNull ( job )
15075	assertEquals ( longKeyAlt, password. getHashedPassword ( ) )
15076	assertThat ( parser. parsePath ( tokens ( identifier ), typeSystem ), is ( identifier ) )
15077	assertVideos ( videos )
15078	Assert. assertTrue ( exclusion1. hashCode ( ) == exclusion2. hashCode ( ) )
15079	assertThat ( int_gt_1, is ( "1" ) )
15080	assertEquals ( expected, emptyGraph. getSuccessors ( ) )
15081	assertRequest ( "POST", "Call/%s/Speak/", callId )
15082	assertEquals ( expected, actualQuery )
15083	assertEquals ( Sentinel3Product. QUALIFIER_FROM_XFDU_MANIFEST, Sentinel3ProductReaderPlugInTest. decodeQualificationFromXfduManifest ( path ) )
15084	assertEquals ( "V1 Title", wrapper. getTitle ( ) )
15085	assertTrue ( cvs. size ( ) > 0 )
15086	assertSame ( "Auditor re-election is not happened for auditor failure!", auditor, newAuditor2 )
15087	assertThat ( actual. size ( ), is ( 0 ) )
15088	assertEquals ( argumentCaptor. getValue ( ). getExposedPorts ( ), expectedExposedPorts )
15089	assertNotNull ( getStdOut ( ) )
15090	Assert. assertEquals ( assinatura, eventoManifestacaoDestinatario. getAssinatura ( ) )
15091	assertSame ( service1, service2 )
15092	TestUtil. assertSuccess ( result )
15093	assertThat ( result, is ( "LowerNwNodeId" ) )
15094	assertEquals ( expected, actual )
15095	assertEqualsIgnoreWhitespace ( expected, real )
15096	assertNotNull ( result )
15097	assertThat ( event. getExtra ( ). get ( key ), equalTo ( expectedValue ) )
15098	Assert. assertEquals ( "Decode brackets not correct", out, WebUtilities. decodeBrackets ( in ) )
15099	assertEquals ( "Hello foo!", engine. compileMustache ( "custom_helper01", "Hello {{#custom}}{{source}} {{foo}}!" ). render ( ImmutableMap. of ( "templateName", "template", "foo", "hello" ) ) )
15100	assertNotNull ( Session. reader ( "KSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
15101	assertEquals ( q [ 0 ], q [ 1 ] )
15102	Assert. assertNull ( new CompareTool ( ). compareByContent ( filename, sourceFolder + "cmp_copyLargeFile01.pdf", destinationFolder, "diff_" ) )
15103	assertEquals ( 0, result. size ( ) )
15104	assertTrue ( mapCell. isAtSameLocationAs ( other ) )
15105	assertEquals ( c1, c2 )
15106	assertThat ( returnedMode. getData ( ), is ( instanceOf ( SpecificData. class ) ) )
15107	assertEquals ( org, sub. substitute ( "value" ) )
15108	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
15109	assertEquals ( "breakjs", page. getPluginName ( ) )
15110	assertEquals ( address, dest. getAddress ( ) )
15111	assertEquals ( "1", r )
15112	assertEquals ( hash, Hex. toHexString ( s ). hashCode ( ) )
15113	assertEquals ( Collections. singletonList ( 9L ), result )
15114	assertEquals ( change. getChangeData ( ), data )
15115	assertEquals ( expected, errorListMap. get ( qname ) )
15116	assertThat ( c. toString ( ), is ( "myString >= aaa" ) )
15117	assertTrue ( worker. getTimeForQueryMs ( "select * {?s?p?o} LIMIT 10", "10" ) [ 0 ] > 0 )
15118	assertEquals ( 2, cc. getValue ( ) )
15119	assertEquals ( Node. UNDEF, n )
15120	assertEquals ( 1, value. getValue ( ) )
15121	assertThat ( resultFilters. get ( "publisherId1" ). size ( ), is ( 1 ) )
15122	assertSizes ( validator, double [ ]. class )
15123	assertTrue ( parsed. getGraph ( ). isEmpty ( ) )
15124	assertThat ( actual, is ( equalTo ( n ) ) )
15125	assertEquals ( 1, stat. getDev ( ) )
15126	assertThat ( e. getMessage ( ), equalTo ( "Rejecting illegal call to synthetic constructor: private Subclass(org.kohsuke.groovy.sandbox.impl.Checker$SuperConstructorWrapper). " + "Perhaps you meant to use one of these constructors instead: public Subclass()" ) )
15127	assertEquals ( Color. blue. getRGB ( ), thumbnail. getRGB ( 49, 99 ) )
15128	assertFalse ( lhs. equals ( rhs ) )
15129	assertSame ( expectedResp, FutureUtils. result ( rrStore. getNamespace ( expectedReq ) ) )
15130	assertThat ( result, is ( true ) )
15131	assertEquals ( "3 啶�啶苦く啷� 啷�啶距う", t. format ( new Date ( 2629743830L * 12L * 3L ) ) )
15132	assertEquals ( result. build ( ). find ( ArrayElement. class, "retval" ). toList ( ), myTestInstance. groupByAsync ( builder ). get ( ). toList ( ) )
15133	Assert. assertEquals ( Character. valueOf ( 'F' ), node. getIncomingEdgeFirstCharacter ( ) )
15134	assertOut ( "visible=\\"false\\"" )
15135	assertEquals ( superClass. hashCode ( ) ^ Objects. hashCode ( value ), doublePrecisionFloat. hashCode ( ) )
15136	assertEquals ( ( ( Number ) results. iterator ( ). next ( ). getValue ( ) ). intValue ( ), 43 )
15137	assertThat ( storedProcResultAsString, equalTo ( "\\"my temp value\\"" ) )
15138	assertEquals ( getExpectedItemSize ( allStrings ), DynamoDBUtil. getItemSizeBytes ( item ) )
15139	assertTrue ( latch. await ( 4, SECONDS ) )
15140	Assert. assertEquals ( result, aggregator. getResult ( 0 ) )
15141	assertEquals ( "4>5\\r\\n 6", AviatorEvaluator. execute ( "4>5\\r\\n 6" ) )
15142	assertMockEndpointsSatisfied ( )
15143	assertEquals ( TagUtils. getTaggedCommit ( "source_tag", repo ), BranchUtils. getHeadCommit ( "test_branch", repo ) )
15144	assertNotNull ( "PlacementChangeRequest is null", entity )
15145	assertEquals ( date, avg )
15146	assertEquals ( null, ent. getName ( ) )
15147	assertEquals ( expectedQuery, actualQuery )
15148	assertEquals ( 1, listener. updatedInjectedFilters. size ( ) )
15149	assertEquals ( "base stuff + some stuff\\n" + "base stuff + other stuff\\n" + "=======\\n" + "base stuff + other stuff\\n" + ">>>>>> refs/heads/ours\\n" + "base stuff + some stuff\\n" + ">>>>>> refs/heads/theirs\\n", readAsString ( gfs. getPath ( "/test_file.txt" ) ) )
15150	Assert. fail ( "Should have thrown exception" )
15151	assertEquals ( 0, instance. getInterfaceCount ( ) )
15152	assertNotNull ( result )
15153	Assert. assertNull ( MCRUserManager. getUser ( this. user. getUserName ( ), this. user. getRealm ( ) ) )
15154	assertFalse ( kieModule instanceof CanonicalKieModule )
15155	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
15156	Assert. assertEquals ( expResult, result )
15157	assertTrue ( foundSetting )
15158	assertNotNull ( appContext. getResourceDocument ( new StringBufferInputStream ( xml ) ) )
15159	Assert. assertNotNull ( response )
15160	assertThat ( referenceSet. getReferencingOntologyAxioms ( ), hasItem ( axiom ) )
15161	assertTrue ( connectFuture. isConnected ( ) )
15162	mockEndpoint. assertIsSatisfied ( )
15163	assertEquals ( "Wrenn and Six rules should be the first loyalty ability rule", "Wrenn and Six rules should be the first loyalty ability rule", firstLoyaltyAbilityRulesText )
15164	assertSqlCanBeParsedAndDeparsed ( stmt )
15165	assertEquals ( "1 test case was supposed to be created", 1, foundTestCases. size ( ) )
15166	assertEquals ( mav. getViewName ( ), "redirect:/outbox" )
15167	Assert. assertFalse ( context. getResult ( ) )
15168	assertArrayEquals ( result, ByteArray. getAllBytes ( aggregator ) )
15169	assertNotNull ( Country. reader ( ). read ( ) )
15170	assertEquals ( "<Patient xmlns=\\"http://hl7.org/fhir\\"><name><family value=\\"uuml &uuml;\\"/></name></Patient>", p. toString ( ) )
15171	assertEquals ( expected, result )
15172	Assert. assertEquals ( "AroundConstructPostConstructWithObjectReturnType", bean. getMessage ( ) )
15173	Assert. assertTrue ( result )
15174	assertEquals ( "<b>foo</b>", unrender. get ( ) )
15175	assertEquals ( one, result )
15176	assertEquals ( "abc", sb. toString ( ) )
15177	assertEquals ( 1, address. getShortNumber ( ) )
15178	Assert. assertNotNull ( addressResultsDto )
15179	paths. assertHasDigest ( INFO, actual, digest, expected )
15180	assertArrayEquals ( " { 'BSON': ['awesome', 5.05, 1986] } not the expected bytes.", arrayDocument, out. toByteArray ( ) )
15181	assertCurrentTestFileName ( currentHtmlFileName )
15182	assertEquals ( 1, buffer. get ( ) )
15183	assertThat ( ages, everyItem ( greaterThanOrEqualTo ( 25 ) ) )
15184	assertEventFired ( ChartEvents. XAXES_EXTREME, chart )
15185	assertTrue ( onto. containsAxiom ( factory. getOWLEnumTypeDefinitionAxiom ( factory. getOWLDatatype ( IRI. create ( tns, "String" ) ), OWL2DatatypeImpl. getDatatype ( OWL2Datatype. XSD_STRING ) ) ) )
15186	assertThat ( manager. registerVoter ( "foo", 123 ), is ( 123 ) )
15187	this. assertServiceInstanceGetRequest ( serviceInstance, false, "failed" )
15188	assertFalse ( post. getTopic ( ). getSubscribers ( ). contains ( user ) )
15189	Assert. assertEquals ( 1.0, a. diagonalProduct ( ), 1e-5 )
15190	assertEquals ( 1, countValue )
15191	assertTrue ( closed. await ( 2, SECONDS ) )
15192	Assert. fail ( "Should have thrown SQLFeatureNotSupportedException" )
15193	assertOut ( "var /** @type {*} */ a = ((a + b) - (c + d)) * e" )
15194	assertThat ( p, is ( nullValue ( ) ) )
15195	assertEquals ( "one,two", sb. toString ( ) )
15196	assertNotNull ( testee )
15197	assertEquals ( i, list. head ( ). get ( ) )
15198	assertEquals ( expResult, result )
15199	assertNotNull ( entity. getId ( ) )
15200	Assert. assertEquals ( itemExportacaoIndireta, detalheExportacao. getExportacaoIndireta ( ) )
15201	assertTrue ( Double. valueOf ( f ). equals ( output. get ( ) ) )
15202	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
15203	Assert. assertTrue ( result. equals ( "11 minutoj" ) )
15204	assertTrue ( hasNoise )
15205	assertTrue ( comparePomFiles ( reactorProjects ) )
15206	assertThat ( actualExceptionCode, is ( "bus001" ) )
15207	assertThat ( result ( ), not ( containsString ( "\\"comments\\"" ) ) )
15208	Assert. assertTrue ( false )
15209	assertTrue ( someNotSoRandomAsciiAsList. size ( ) == 8 )
15210	assertTrue ( stack. getDurability ( ) == potion. toDamageValue ( ) )
15211	Assert. assertEquals ( Arrays. asList ( record4, record3, record2, record1 ), listToSort )
15212	assertTrue ( monitorConfig. getConfig ( ). isConfigChanged ( ) )
15213	assertNotNull ( result )
15214	Assert. fail ( "Was able to set properties when accessing sensitive parameter from within EL" )
15215	Assert. assertTrue ( isKeyEntity )
15216	assertThat ( s1, containsString ( str ) )
15217	assertTrue ( "assertions should be enabled", enabled )
15218	assertEquals ( membersFiltered. getTags ( ), expected )
15219	assertArrayEquals ( expected, actual )
15220	assertEquals ( RESULT, result )
15221	assertions. isNotEqualTo ( actual )
15222	assertTrue ( lines. stream ( ). anyMatch ( l -> l. contains ( "SF: Hello, Hello World!" ) ) )
15223	assertEquals ( expected, result )
15224	assertEquals ( 0., calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
15225	assertTrue ( detector. evaluate ( "", 10, 5 ) )
15226	assertThat ( parse ( contents ), contains ( map ( "value", "1" ) ) )
15227	assertEquals ( r1, r2 )
15228	assertTrue ( true )
15229	Assert. assertNotNull ( addressResultsDto )
15230	assertEquals ( new ParseResult ( new Doc ( "ParserTest", Pkg. _Pkg ( list ( _JavaEOLComment ( "//a pre-start comment" ), _JavaEOLComment ( "//a start comment" ) ), "hello.world" ), list ( Imprt. _Imprt ( list ( IMPORTS_COMMENT ), "wow.man" ), Imprt. _Imprt ( NO_COMMENTS, "flim.flam" ) ), list ( new DataType ( list ( _JavaEOLComment ( "//an annotation comment" ), _JavaEOLComment ( "//datatype comment" ) ), _Annotation ( "foo", Optional. < AnnotationElement > _None ( ) ), _Annotation ( "bar", Optional. < AnnotationElement > _None ( ) ) ) ), list ( new Arg ( Util. < ArgModifier > list ( ), _Primitive ( _IntType ( ) ), "hey", new Arg ( list ( _Final ( ) ), _Ref ( _ClassType ( "String", NO_ACTUAL_TYPE_ARGUMENTS ) ) ), "whatever" ) )
15231	assertEquals ( ko1, ko2 )
15232	assertEquals ( indexRollover1, indexRollover2 )
15233	assertNull ( "The result should be null.", config )
15234	assertThat ( getCreatedPod ( ). getSpec ( ). getEnvironmentVariables ( ), allOf ( hasEnvironmentVariable ( "item1", "value1" ), hasEnvironmentVariable ( "item2", "value2" ) ) )
15235	assertEquals ( 591, orbitFiles. length )
15236	assertEquals ( "FRED", name )
15237	assertTrue ( match )
15238	Assert. assertTrue ( "this should be a directory", isDir )
15239	Assert. assertNotNull ( savedBook. getBookId ( ) )
15240	Assert. assertEquals ( 0, errors. size ( ) )
15241	assertArrayEquals ( expected, dest. getData ( ) )
15242	Assert. assertEquals ( value + step, nextValue )
15243	assertNull ( "Analyzer must be null", mapper. analyzer )
15244	Assert. fail ( "RuntimeException should be thrown!" )
15245	assertNotNull ( reporter )
15246	assertNotNull ( decorator )
15247	assertEquals ( "test email", reply )
15248	Assert. assertNotNull ( result )
15249	assertNotNull ( proveedorFacturas. getId ( ) )
15250	Assert. assertEquals ( 0.5, f15. getPartialDerivative ( 1 ), 0 )
15251	assertSame ( tokenCell ( 0 ), sync. getPair ( ( TextTokenCell ) tokenCell ( 1 ) ) )
15252	assertEquals ( keyExpected, keyBuilt )
15253	assertEquals ( expect, strategy. write ( new FunctionData6 ( ) ) )
15254	assertEquals ( expectedKeys, actualKeys )
15255	assertFalse ( "syntax OID should no longer be present", schemaManager. getSyntaxCheckerRegistry ( ). contains ( OID ) )
15256	assertParser ( twig )
15257	assertTrue ( diff. toString ( ), diff. similar ( ) )
15258	assertEquals ( "{\\"store\\":{\\"book\\":[{\\"category\\":\\"newCategory\\",\\"author\\":\\"Nigel Rees\\",\\"title\\":" + "\\"Sayings of the Century\\",\\"price\\":8.95},{\\"category\\":\\"fiction\\",\\"author\\":\\"Evelyn Waugh\\"," + "\\"title\\":\\"Sword of Honour\\",\\"price\\":12.99}],\\"bicycle\\":{\\"color\\":\\"red\\",\\"price\\":19.95}}," + "\\"arrayTest\\":[1,2,3]}", result. get ( RETURN_RESULT ) )
15259	assertEquals ( expResult, result )
15260	assertThat ( del. getDeadline ( ), is ( new Deadline ( ) ) )
15261	assertTrue ( task. policy. isReadFailed ( ) )
15262	assertNull ( "was supposed to pass", status )
15263	assertNull ( GeodeticDatum. ANCHOR_POINT_KEY, properties. put ( GeodeticDatum. ANCHOR_POINT_KEY, "Origin Z" ) )
15264	Assert. assertTrue ( result. size ( ) == 1 )
15265	assertionHelper. assertTwoFilesAreEqualByRecursiveTreeComparison ( actualFileContents, fis )
15266	assertThat ( builder, hasToString ( "<a href=\\"https://flattr.com/thing/123546/a-demo-thing\\">" + "<img src=\\"http://api.flattr.com/button/flattr-badge-large.png\\"" + " width=\\"93\\" height=\\"20\\" alt=\\"Flattr this\\" title=\\"Flattr this\\" border=\\"0\\" />" + "</a>" ) )
15267	assertThat ( allowed, is ( true ) )
15268	assertTrue ( listEditor. getList ( ). isEmpty ( ) )
15269	assertThat ( DatastoreUtil. referenceToKey ( reference ), is ( key ) )
15270	Assert. assertEquals ( dbLoadBalancers. size ( ), dbLoadBalancers1. size ( ) )
15271	Assert. assertEquals ( 1, detailC. size ( ) )
15272	Assert. assertNotNull ( cnx )
15273	assertEquals ( 0, idx )
15274	assertEquals ( "Document type fetch iteration limit is wrong", 10, fetchIterationLimit )
15275	assertArrayEquals ( data, ( short [ ] ) deserialize. readObject ( short [ ]. class ) )
15276	assertThat ( condition. isSatisfied ( ), is ( true ) )
15277	assertEquals ( "OOMIYA^SHOUGO", getResultAttributes ( query, Tag. Modality ). split ( "=" ) [ 0 ]. toUpperCase ( ) )
15278	assertResultSet ( res )
15279	assertThat ( underTest. extract ( request ), is ( nullValue ( ) ) )
15280	assertThat ( cb. getForwardCallback ( ), nullValue ( ) )
15281	Assert. assertEquals ( true, a. compareTo ( b ) < 0 )
15282	Assert. assertEquals ( "somethingmock", ret. getValue ( ) )
15283	assertOut ( "var /** @type {Object} */ a = Object(\\"1\\")" )
15284	Assert. assertEquals ( expect_sql, sql )
15285	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
15286	Assert. fail ( e. getMessage ( ) )
15287	assertTrue ( outputs. size ( ) >= 2 )
15288	assertResultsEqual ( results, Arrays. asList ( 42L ) )
15289	assertTrue ( true )
15290	assertEquals ( "mickey@disney.com", descriptor. getDefaultRecipients ( ) )
15291	assertNull ( recordResultSet )
15292	assertEquals ( clone, forwardInfo )
15293	assertEquals ( "fileName-" + TIMESTAMP + ".js", result )
15294	assertEquals ( 0, trace. allProperties ( ). size ( ) )
15295	assertEquals ( Status. NO_CONTENT. getStatusCode ( ), updated. getStatus ( ) )
15296	Assert. assertEquals ( i, InetAddress. getByName ( "10.0.0.2" ) )
15297	assertEquals ( null, result )
15298	assertFeatureValues ( expected, testQuery, testText, new QueryFeatureExtractor ( ) )
15299	assertArrayEquals ( result, new byte [ ] { 0x0, 0x1 } )
15300	assertEquals ( tableColor, scrollPane. getViewport ( ). getBackground ( ) )
15301	Assert. assertEquals ( 200, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
15302	Assert. assertEquals ( "(nt_point_location (nt_base_location * (nt_number 123)) (nt_offset - (nt_number 4)))", loc. toStringTree ( parser ) )
15303	Assert. assertThat ( list, Is. is ( Arrays. asList ( "1", "1_1", "1_2", "1_3", "1_4", "2_1", "2_2", "2_3", "2_4", "3", "4", "5", "6", "7" ) ) )
15304	assertThat ( f. format ( PlainDate. of ( 2017, 10, 1 ) ), is ( "Sunday, Eighth Month 12, 2017(d墨ng-y�u)" ) )
15305	assertEquals ( 0, dureation )
15306	assertFalse ( content. contains ( "Category:�板��" ) )
15307	assertThat ( authoritativeResourceOne. getUri ( ), is ( URI. create ( "http://www.w3.org/2005/Atom", "AUT", "AS3546" ) ) )
15308	assertNotNull ( historyProxy )
15309	assertThat ( router. allRoutes ( ), hasItem )
15310	assertEquals ( expected, result )
15311	assertEquals ( "{\\"d\\":{\\"__metadata\\":{\\"id\\":\\"" + getEndpoint ( ) + "Rooms('3')\\"," + "\\"uri\\":\\"" + getEndpoint ( ) + "Rooms('3')\\",\\"type\\":\\"RefScenario.Room\\"," + "\\"etag\\":\\"W/\\\\\\"3\\\\\\"\\"}," + "\\"Id\\":\\"3\\",\\"Name\\":\\"Room 3\\",\\"Seats\\":2,\\"Version\\":3," + "\\"nr_Employees\\":{\\"__deferred\\":{\\"uri\\":\\"" + getEndpoint ( ) + "Rooms('3')/nr_Employees\\"}}," + "\\"nr_Building\\":{\\"__metadata\\":{\\"id\\":\\"" + getEndpoint ( ) + "Buildings('2')\\"," + "\\"uri\\":\\"" + getEndpoint ( ) + "Buildings('2')\\",\\"type\\":\\"RefScenario.Building\\"}," + "\\"Id\\":\\"2\\",\\"Name\\":\\"Building 2\\",\\"Image\\":null," + "\\"nb_Rooms\\":{\\"__
15312	assertEquals ( 20, tasks. size ( ) )
15313	assertDocContent ( doc )
15314	assertFalse ( empty. isKnown ( ) )
15315	assertEquals ( NetPlan. getAttributeValues ( Arrays. asList ( n1, n2, n3 ) ), Arrays. asList ( "1", "2" ) )
15316	assertTrue ( expectedTag )
15317	assertEquals ( HttpURLConnection. HTTP_NO_CONTENT, conn. getResponseCode ( ) )
15318	assertNotNull ( data. getString ( 0, data. length ( ) ) )
15319	assertEquals ( first, builder. getValue ( ) )
15320	assertNull ( userArg. getValue ( ) )
15321	assertEquals ( imports. size ( ), tree. getModelObject ( ). getChildCount ( tree. getModelObject ( ). getRoot ( ) ) )
15322	assertEquals ( "aTestString", classUnderTest. getClientName ( ) )
15323	Assert. assertEquals ( "curl -X GET -H \\"test-cookie\\" = \\"test-value\\" 'https://eatstreet.com/api/v2/CitiesByState.json\\"; test-cookie3= \\"test-value4\\" ", curl )
15324	assertThat ( parse ( contents ), contains ( map ( "a", "'12'", "'a' : '12'", "a' : '12'" ) ) )
15325	assertEquals ( timeFrameEditor. isFirstMonthAvailable ( ), true )
15326	assertColumnFamilyResource ( resource )
15327	assertThat ( result. size ( ), is ( 0 ) )
15328	assertEquals ( String. format ( p, r. getMillis ( ) ), cf. format ( r ) )
15329	assertThat ( formatMsg ( jmc, OBJ_MSG ), is ( OBJ_MSG ) )
15330	assertEquals ( actual, expected )
15331	assertEquals ( HttpStatusCode. CREATED_201, response. getStatus ( ) )
15332	assertThat ( result, is ( nullValue ( ) ) )
15333	assertOut ( "var /** @type {*} */ a = undefined" )
15334	Assert. assertEquals ( 5, es. size ( ) )
15335	TestUtils. assertBuildSuccess ( build )
15336	assertNull ( user )
15337	assertTrue ( properties. isEmpty ( ) )
15338	assertEquals ( originalText, scriptPanel. getText ( ) )
15339	assertEquals ( "logical1", manager2. getLogicalNode ( "logical-watch" ) )
15340	assertEquals ( personList. length, 2 )
15341	assertNull ( "Should have thrown an exception", exception )
15342	assertEquals ( 2, database. getEmployees ( ). size ( ) )
15343	assertTrue ( namespace. getId ( ) > 0 )
15344	Assert. fail ( "IllegalArgumentException should occur but didn't!" )
15345	assertTrue ( reason == null )
15346	assertEquals ( "SQL to select update record", "SELECT * FROM " + tableName ( TEST_TABLE ), testDialect. convertStatementToSQL ( stmt ) )
15347	assertArrayEquals ( asciiData, binaryData, 0.001f )
15348	assertEquals ( child, instance. getChild ( ) )
15349	assertEquals ( "custom", helper. getStringValue ( "custom" ) )
15350	assertResponse ( outputStream, expected )
15351	assertOut ( "this.knownMember = 4" )
15352	assertMockEndpointsSatisfied ( )
15353	assertThat ( requests, is ( 1 ) )
15354	assertEquals ( "Positive selection iteration result", "[a, b, c, d, e, f, g, h, i, j, k, l, m]", IterableUtil. shallowCopy ( selection ). toString ( ) )
15355	assertEquals ( 80., stateManager. getActivityState ( route. getActivities ( ). get ( 1 ), vehicle, InternalStates. LATEST_OPERATION_START_TIME, 0 ), 0.01 )
15356	assertEquals ( "Incorrect number of roles", 0, roles. size ( ) )
15357	assertThat ( c. toString ( ), is ( "myString == aaa" ) )
15358	assertSame ( expectedT, t )
15359	assertEquals ( plugins, runningInForumPlugins, "Plugin should be retrieved from database." )
15360	assertOptionsSetViaConfigurator ( )
15361	Assert. assertEquals ( createArrayNode ( 1, 2, 3 ), result )
15362	assertEquals ( "Conversion did not match", value, to )
15363	Assert. assertEquals ( 0, fileredInvokers. size ( ) )
15364	this. assertAnalyzesTo ( _a, "{\\"foo\\":true}", new String [ ] { "foo", "true" }, new String [ ] { TypeAttribute. DEFAULT_TYPE, "<NUM>" } )
15365	assertEquals ( result, "10:15:30 AM" )
15366	assertEquals ( value, evaluated )
15367	assertException ( "FEEL-01015", "''", "< ''", "'camunda'", "< 'camunda'", "false", "< true", "'12.2'", "< '12.2'", "\\"12.2\\"", "< \\"12.2\\"" )
15368	assertAllExchangesAreCompleted ( config, client. getExchangeStore ( ), time )
15369	Assert. areEqual ( true, countA < 10 && countB < 10, "countA值" )
15370	assertEquals ( "failed to generate class with JSNI method", CLASS_WITH_JSNI_METHOD, cls )
15371	assertEquals ( asList ( warn ( mdcValues, marker, message, args ) ), testLogger. getLoggingEvents ( ) )
15372	assertEquals ( "2017-01-19 05:05:59", spec. interpret ( "1484802359000" ) )
15373	assertNotNull ( render. getRuleRenderOptions ( ) )
15374	assertEquals ( expected, actual )
15375	assertThat ( jobStore. getJobs ( ). size ( ), equalTo ( 0 ) )
15376	assertTrue ( getNoErrorMsg ( ), result )
15377	assertEquals ( expected, result )
15378	assertEquals ( now, target. getCreatedOn ( ) )
15379	assertNull ( binningFormModel. getRegion ( ) )
15380	Assert. assertEquals ( position, lastPosition )
15381	assertEquals ( "debug: bug", berr. toString ( ). trim ( ) )
15382	assertUrl ( url, "http", "localhost", 80, "/" )
15383	assertEquals ( "locationUpdate", subscriptionRequest. getValue ( ). getMulticastName ( ) )
15384	assertThat ( result, is ( Arrays. copyOfRange ( data, 1, 2 ) ) )
15385	Assert. assertTrue ( bd. compareTo ( exp ) == 0 )
15386	assertEquals ( "Cha_rs", person. getName ( ). getFamilyName ( ) )
15387	assertEquals ( "sort field condition serialization is wrong", expected, actual )
15388	assertThat ( result. statusCode, is ( Response. OK ) )
15389	assertEquals ( NOT_FOUND. getStatusCode ( ), response. getStatusCode ( ) )
15390	assertStreamOpenedExactlyOnce ( )
15391	assertEquals ( 400, fail )
15392	assertTrue ( "Not this". equals ( form. firstName. getValue ( ) ) )
15393	assertEquals ( spill, out )
15394	assertTrue ( outputGraphExecutor. contains ( "1" ) )
15395	Assert. assertTrue ( httpAcceptor. emptyBindings ( ) )
15396	Assert. assertEquals ( 1, result )
15397	assertThat ( codes, containsInAnyOrder ( "50015-7", "47239-9" ) )
15398	assertEquals ( message, line )
15399	assertTrue ( $ ( TreeElement. class ). first ( ). getItem ( 1 ). isClicked ( ) )
15400	assertEquals ( expResult, result )
15401	assertEquals ( "1", cfg. getProperty ( "primeNumber" ) )
15402	assertTrue ( requestContext. isSecure ( ) )
15403	assertEquals ( field. getXrefLabelNames ( ), Collections. emptyList ( ) )
15404	assertEquals ( HttpStatusCode. INTERNAL_SERVER_ERROR. code, response. getStatus ( ) )
15405	Assert. assertEquals ( PRIO_NODE, compoundWrite. apply ( PRIO_NODE ) )
15406	assertThat ( runtime. exitStatus ( ), is ( equalTo ( ( byte ) 0x1 ) ) )
15407	Assert. assertEquals ( "0.0", result. toPlainString ( ) )
15408	assertFalse ( agent. needModel ( ) )
15409	assertTrue ( enumValuesSet. isEmpty ( ) )
15410	Assert. assertNotNull ( zoo )
15411	assertThat ( underTest. execute ( underTest, null, null, new Object [ ] { assetDocument, "jexlexpression", "*", repoToContainedGroupMap }, null ), is ( false ) )
15412	assertEquals ( n, i )
15413	assertEquals ( "12345678-1234-1234-1234-123456789ABC", token ( TokenKind. GuidValue ) )
15414	assertThat ( contributors, hasSize ( 30 ) )
15415	assertEquals ( expecting, result )
15416	assertEquals ( "<foo> || (*->custard) || bar>", ctn. toDSL ( ) )
15417	assertTrue ( s. startsWith ( "str in com.querydsl.core.DefaultQueryMetadata@c" ) )
15418	assertNotNull ( compassDropController. getDropTarget ( ) )
15419	assertEquals ( 1, filter. filter ( aciContext, OperationScope. ENTRY, null ). size ( ) )
15420	assertTrue ( references. isEmpty ( ) )
15421	assertEquals ( 0, g. size ( ) )
15422	assertOut ( "a *= b" )
15423	assertEquals ( "(int a 3)\\n", found )
15424	assertEquals ( g1. get ( i ). getHydrogenCount ( ), g2. get ( i ). getHydrogenCount ( ) )
15425	assertEquals ( "Item One", returnedItem. getItemName ( ) )
15426	Assert. assertEquals ( 2, data. length ( ) )
15427	assertThat ( entities. getTotalElements ( ), equalTo ( 1L ) )
15428	Assert. assertEquals ( 0, results. size ( ) )
15429	assertTrue ( deleteSecurityGroupIPSetsResponse. getRet_code ( ) == 0 )
15430	assertThat ( result, contains ( "path/to/output.json" ) )
15431	assertEquals ( HttpStatusCode. BAD_REQUEST_400, response. getStatus ( ) )
15432	Assert. assertTrue ( dict. contains ( entry2 ) )
15433	assertNotNull ( services )
15434	assertEquals ( 10, routeState. get ( 0 ) )
15435	assertTrue ( dsc. getPanel ( )!= null )
15436	assertThatThrownBy ( ( ) -> this. mocker. getComponentUnderTest ( ). processRequest ( request ) )
15437	assertNotNull ( cache. get ( id ) )
15438	assertXMLEqual ( expectedXml, outXml )
15439	BufferedImageAssert. assertMatches ( result, new float [ ] { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 } )
15440	assertEquals ( aNumber, result, 1E11 )
15441	Assert. assertTrue ( "Contains " + map. get ( "firstName" ) + ", " + map. get ( "lastName" ), result. contains ( "firstName" ) )
15442	assertEquals ( 5, hg19. size ( ) )
15443	assertEquals ( l1, l2 )
15444	assertEquals ( row. get ( ). getA ( ), null )
15445	assertNull ( topicService. getDraft ( currentUser ) )
15446	assertEquals ( "Removal failed", 0, newPerms & Perms. CREATE )
15447	assertSqlCanBeParsedAndDeparsed ( stmt )
15448	assertEquals ( "test", echo. echo ( "test" ) )
15449	Assert. assertEquals ( 0, p. h ( 10, - 1 ) )
15450	Assert. assertEquals ( "not a restartable job", BatchStatus. FINISHED, exec. getBatchStatus ( ) )
15451	assertEquals ( "MD5-SHA-256", digest. digest ( ) )
15452	Assert. assertEquals ( "Wrong number of target hosts", 3, targetHosts. size ( ) )
15453	assertEquals ( 2, trends. size ( ) )
15454	assertEquals ( "A1 text", sheetController. getCellContent ( "A1" ) )
15455	assertEquals ( request. getRemoteHost ( ), result )
15456	assertEquals ( "9c4d4d4e4f9b9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f2f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f
15457	assertEquals ( date, emptySession. getEnd ( ) )
15458	assertThat ( convertedSalt, is ( BaseEncoding. base16 ( ). encode ( salt. getBytes ( ) ) ) )
15459	assertEquals ( "range condition serialization is wrong", expected, actual )
15460	assertTrue ( result1. size ( ) == 2 && result2. size ( ) == 3 )
15461	Assert. assertFalse ( nodes. isEmpty ( ) )
15462	assertEquals ( "test-value", clientWrapper. get ( "key1" ) )
15463	Assert. assertTrue ( result )
15464	assertNull ( getParameterRepositoryService ( ). getParameterValueAsBoolean ( key ) )
15465	assertEquals ( "Hibernate Master Class", _post. getTitle ( ) )
15466	assertStyleEquals ( ".xyz { font: bold;} A { color: #7f7f7f}", styleSheet )
15467	assertEquals ( expected, actual )
15468	assertSubtreeIsEquivalent ( expected, actual )
15469	assertEquals ( 1, capturedEvent. getValue ( ). getFirstIndex ( ) )
15470	Assert. assertEquals ( "Highlighted button should be displayed", "Highlighted button should be displayed", highDriver. getHighlightedButton ( ) )
15471	Assert. fail ( "InvalidFormatException must be thrown" )
15472	assertEquals ( expResult, result, 0.000001 )
15473	lowLevelElasticSearchOperations. assertThatConnectionToElasticsearchIsPossible ( anyString ( ), anyInt ( ) )
15474	assertThat ( localName, is ( "thename" ) )
15475	assertEquals ( DecodeQualification. SUITABLE, readerPlugIn. getDecodeQualification ( headerFile ) )
15476	assertOut ( "a.setTime(a.getTime() + 10)" )
15477	assertTrue ( true )
15478	assertEquals ( Integer. valueOf ( 1 ), myTestInstance. insertAsync ( doc ). get ( ) )
15479	assertEquals ( new BigDecimal ( "11" ), lambda. apply ( BigDecimal. ONE ) )
15480	Assert. assertTrue ( new File ( jar ). exists ( ) )
15481	assertStat ( result )
15482	assertGridBodyCellEditContext ( editContextArgumentCaptor. getValue ( ), 0, 1, ROW_HEIGHT * 2, col2. getWidth ( ), GRID_ABSOLUTE_Y + HEADER_HEIGHT, GRID_ABSOLUTE_X + col1. getWidth ( ), GRID_ABSOLUTE_Y + HEADER_HEIGHT, visibleBounds. getX ( ) )
15483	assertScoreAndParse ( content, null, 1 )
15484	Assert. assertEquals ( "[1, 2, 3, 4, 6, 7, 5]", result. toString ( ) )
15485	Assert. assertTrue ( isEqual ( distance, 0 ) )
15486	assertValidLicenseKeyFormat ( licenseKey )
15487	assertThat ( fileConfig. getConfigProperties ( ), contains ( configProperty ( INSERT_FINAL_NEWLINE, false ) ) )
15488	assertThat ( downstreamJobs, contains ( "my-upstream-pom-pipeline-1" ) )
15489	assertEquals ( "echo 'hello world'", lclp. toCommand ( env ) )
15490	assertNotNull ( "Resource not found", in )
15491	Assert. assertEquals ( 1, reports. size ( ) )
15492	assertNull ( migrationJob )
15493	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Message to=\\"to\\" from=\\"from\\" method=\\"GET\\" statusCallback=\\"https://example.com\\"/>", elem. toXml ( ) )
15494	Assert. assertEquals ( absoluteDir, fSys. getWorkingDirectory ( ) )
15495	assertEquals ( ImmutableList. of ( 1, 2, 3 ), ImmutableList. copyOf ( evaluate ( "${iter}", Iterable. class ) ) )
15496	arrays. assertContainsSequence ( description, actual, null )
15497	assertEquals ( "Wrong constructed key", "key..test..more...tests", key. toString ( ) )
15498	assertEquals ( entry1, foundEntry )
15499	assertThat ( testOutcome. getPendingCount ( ), is ( 6 ) )
15500	assertThat ( ebs1, not ( equalTo ( ebs2 ) ) )
15501	assertSame ( "wrapping renderer must use list's default on null", custom, renderer. getDelegateRenderer ( ) )
15502	assertEquals ( c. newInstance ( ). getAppdefEntityId ( ), testPlatformAlertDef. getAppdefEntityId ( ) )
15503	assertEquals ( bestStats. getFinalScore ( ), 1.0, 0.01 )
15504	assertEquals ( events. get ( events. size ( ) - 1 ), events. get ( events. size ( ) - 1 ) )
15505	assertFalse ( payload. getTags ( ). isEmpty ( ) )
15506	assertThat ( result, isFailedCommand ( ) )
15507	assertEquals ( expected, json )
15508	assertEquals ( "2015-10-05", mo. getDateWrittenElement ( ). getValueAsString ( ) )
15509	assertThat ( document, is ( nullValue ( ) ) )
15510	assertTrue ( s. stopCalled )
15511	assertEquals ( "getSong", Names. resourceMethodName ( resource, method ) )
15512	assertTrue ( or. isDefined ( ) )
15513	Assert. assertEquals ( 0.0, rmse, EPSF )
15514	assertTrue ( "Enlish alphabet not correctly reverse sorted", result )
15515	assertFalse ( JodaBeanSer. COMPACT. smartReader ( ). isKnownFormat ( bytes ) )
15516	assertHeader ( header, name, value )
15517	assertThat ( config. getBasePackages ( ), is ( new String [ ] { } ) )
15518	assertThat ( r. reduce ( Arrays. asList ( 1.0 ) ), equalTo ( 1.0 ) )
15519	assertTrue ( descriptor. isBeanConstrained ( ) )
15520	assertThat ( objectMapper. writeValueAsString ( dto ), equalTo ( "{\\"twoWords\\":\\"value\\"}" ) )
15521	assertEquals ( fileId, mFileSystemMaster. getFileInfo ( NESTED_FILE_URI, GET_STATUS_CONTEXT ). getFileId ( ) )
15522	assertTrue ( r1 instanceof PublicCloneable )
15523	assertEquals ( new BigInteger ( "1" ), bookCount )
15524	assertEquals ( expectedSqlForMathOperations7 ( ), result )
15525	assertEntityHasValue ( key, value )
15526	assertEquals ( "http://localhost:" + PORT + "/usermodel2/test/books", proxy. getBookStore ( ). getBookIds ( ). toString ( ) )
15527	assertEquals ( count, 2 )
15528	assertNull ( incompleteActivationRule )
15529	assertThat ( builder. toSettings ( ). isAllowRespondByVRK ( ), is ( true ) )
15530	assertEquals ( "Unknown edit type", FileElement. Type. EDIT, element. getType ( ) )
15531	assertEquals ( STEP_UP + "subFolder1/fileName1", relPath )
15532	assertEquals ( "AAPL", obj. getSymbol ( ) )
15533	assertRequest ( "POST", "Conference/%s/Member/%s/Speak/", confId, memberId )
15534	assertEquals ( - 1, victim. readLiteralEOF ( ) )
15535	assertEquals ( 200, containerResponse. getStatus ( ) )
15536	assertEquals ( res, 1 )
15537	assertMessage ( "<type>DELEGATED</type>", 4 )
15538	assertions. isNotGreaterThan ( ( short ) 2 )
15539	assertEquals ( 1, ksession. fireAllRules ( ) )
15540	assertEquals ( expectedRestriction, restriction )
15541	assertEquals ( "Inet mapper serialization is wrong", expected, actual )
15542	assertEquals ( expectedScriptNode, actualScriptNode )
15543	Assert. assertFalse ( hasIndexRangeKeyCondition )
15544	assertEquals ( GOOD_IP, credentials. getIp ( ) )
15545	assertEquals ( "message with 2 cookies and milk", logRecord. getMessage ( ) )
15546	assertTrue ( crsStore. getNTV2Enabled ( ) )
15547	assertEquals ( json, expectedJson )
15548	assertEquals ( "test.outcome = success", configuration. getString ( "include" ) )
15549	Assert. assertEquals ( Permission. YES, providerPermission )
15550	assertEquals ( cal. getTime ( ), d. getEnd ( ) )
15551	assertEquals ( "/a/b/c", path. toString ( ) )
15552	assertEquals ( value, things. getProperties ( ). get ( "testprop" ) )
15553	assertObjectEquals ( "[{f1:'x1'}]", p. run ( bs, in, sa ) )
15554	assertTrue ( ex. isPrime ( 10 ) )
15555	assertTrue ( resultFromJPQL. size ( ) == 1 )
15556	assertEquals ( allocator. wrap ( expect ), out )
15557	assertEquals ( "URI is not built correctly", "http://bar/", newUri. toString ( ) )
15558	assertThat ( result, is ( jsonBoolean ( false ) ) )
15559	assertEquals ( expected, result )
15560	assertEquals ( "dd-MMM-yyyy HH mm ss", format. format ( config. getValue ( StringDateTimeModel. DATETIME_FORMAT_CONFIG ) ) )
15561	Assert. assertTrue ( state [ i ] == expected )
15562	assertThat ( target. matchExactly ( ( FlowAction ) action ), is ( true ) )
15563	assertEquals ( "UVWXY", targetId. getOSuffix ( ) )
15564	assertEquals ( m1, m2 )
15565	Assert. assertTrue ( isEqual ( distance, 0 ) )
15566	Assert. assertFalse ( "SearchByTags returned no results", jsonList. isEmpty ( ) )
15567	Assert. assertEquals ( 1L, vm. getStack ( ). pop ( ) )
15568	assertThat ( token. getType ( ), is ( PCRELexer. POSIXNegatedNamedSet ) )
15569	assertEquals ( TestModel. class, model. getModelClass ( ) )
15570	assertFalse ( OpenmrsUtil. isInNormalNumericRange ( 5.64f, concept ) )
15571	assertEquals ( "0", result. toString ( ) )
15572	assertTrue ( p1. equals ( p2 ) )
15573	assertEquals ( expResult, result, 0.001F )
15574	assertTrue ( authorizer. isAuthorized ( MockWebContext. create ( ), profiles ) )
15575	assertNotEquals ( 0, tokenLists. size ( ) )
15576	assertThat ( t. getTitle ( ), notNullValue ( ) )
15577	assertEquals ( "Expected 0 results!", 0, n )
15578	assertEquals ( "Empty selection", "[]", IterableUtil. shallowCopy ( selection ). toString ( ) )
15579	assertTrue ( "p2 is assigned to g1 and g1 assigned to r2", roleService. principalHasRole ( "p2", roleIds, Collections. < String, String > emptyMap ( ) ) )
15580	assertEquals ( "dubbo://127.0.0.1:20887", result )
15581	Assert. assertEquals ( RheemCollections. asSet ( - 1 + expectedOffset, 1 + expectedOffset, 5 + expectedOffset ), RheemCollections. asSet ( result ) )
15582	assertEquals ( server. getStatus ( ), TestService. LIFECYCLE. get ( 0 ) )
15583	assertTrue ( instance. runCommand ( ) )
15584	assertEquals ( rootNode. getPermissionList ( ). size ( ), 4 )
15585	assertIndexContains ( 3, types )
15586	assertEquals ( "XML Equals", jdkXml, javolutionXml )
15587	assertEquals ( "Wrong number of tables", 3, tables. size ( ) )
15588	assertEquals ( "http://localhost:8080", client. getBasePath ( ) )
15589	assertEquals ( 1, stopTimes. size ( ) )
15590	assertEquals ( 0, peopleIds. size ( ) )
15591	Assert. assertEquals ( 1, count )
15592	assertEquals ( 1, new ArrayList < > ( results. values ( ) ). get ( 0 ). getWidgetUsages ( results. values ( ) ). size ( ) )
15593	assertEquals ( aNumber, - 1.0f, 1E-4 )
15594	assertUpdate ( result, 1 )
15595	assertNotNull ( response )
15596	assertAllTargetsCount ( 0 )
15597	assertTrue ( attributes. isNew ( ) )
15598	Assert. assertEquals ( 1, gid )
15599	assertThat ( Marktr. marktr ( TEST_STRING ), is ( TEST_STRING ) )
15600	assertEquals ( "Does not compare " + nv5 + " & " + nv7, NodeValue. CMP_LESS, NodeValue. compare ( nv5, nv7 ) )
15601	Assert. assertEquals ( 'C', decChar )
15602	Assert. assertEquals ( ANY, desc. getImplementation ( ) )
15603	assertEquals ( "b1", subChainSelector. getValue ( ) )
15604	assertEquals ( 2, userAddCL1. getArgs ( ). size ( ) )
15605	assertEquals ( "Uberfire should be able to create dock bars", 2, docksBars. getDockPositions ( ). size ( ) )
15606	assertEquals ( 0., violation, 0.01 )
15607	assertEquals ( "", "[one, 2, three, 4]", elr. getMessage ( ). toString ( ) )
15608	assertTrue ( m. isIsomorphicWith ( m2 ) )
15609	assertTrue ( actual. length == 100 )
15610	assertThat ( gson. fromJson ( gson. toJson ( ldt ), LocalDateTime. class ), is ( ldt ) )
15611	assertEquals ( expResult, result )
15612	assertTrue ( userCanBuildProject )
15613	assertEqualDoubleArrays ( pydiv, div, epsilon )
15614	Assert. fail ( "Should have thrown an exception" )
15615	assertEquals ( "The class has been serialized correctly", oc, oc2 )
15616	assertEquals ( "abcTest", result )
15617	Assert. assertSame ( o, p. getExpectedValue ( ) )
15618	assertEquals ( HttpStatus. SC_OK, response. getStatus ( ) )
15619	assertTrue ( b )
15620	Assert. assertTrue ( "Share button should be present", driver. findElement ( By. xpath ( "//*[@data-id='ShareButton']" ) ). isDisplayed ( ) )
15621	assertEquals ( "fre_01-01-13.xlsx", res )
15622	context. assertEquals ( Collections. emptyList ( ), candidates )
15623	Assert. assertEquals ( 2, terms. size ( ) )
15624	assertHelpLines ( "Option        Description                   ", "------        -----------                   ", "-d [Integer: double dizzle]   dizzle (default: [2, 3, 5, 7])", EMPTY )
15625	Assert. assertEquals ( 0, total )
15626	assertEquals ( "lesson_05/_json_configs/smooks-config-reader-only.xml", uri. toString ( ) )
15627	assertThat ( requestedShutdownCallable. call ( ), equalTo ( false ) )
15628	assertEquals ( 8, size )
15629	assertTrue ( manufacturerService. getManufacturerByName ( name ). size ( ) > 0 )
15630	JSONAssert. assertEquals ( "{a:[[9]]}", ARRAY_OF_JSONARRAYS, new CustomComparator ( JSONCompareMode. LENIENT, customization ) )
15631	assertEquals ( prefix_not_search_result, result )
15632	assertNotNull ( childProject. blockBuildWhenUpstreamBuilding )
15633	assertThat ( targetLocator. getUntargetedDriver ( ), instanceOf ( FirefoxDriver. class ) )
15634	assertEquals ( "V11N", v. getName ( ) )
15635	Assert. assertTrue ( result. isEmpty ( ) )
15636	assertEquals ( theme, sut. getTheme ( ) )
15637	Assert. assertNotNull ( PropertyUtils. getProperty ( newObs, "allergen" ) )
15638	assertEquals ( 200, page. getWebResponse ( ). getStatusCode ( ) )
15639	assertImage ( null, destImg, e )
15640	assertEquals ( c1, c2 )
15641	assertEquals ( expectBucketName, bucketName )
15642	assertEquals ( "1 second", testPage. newElement. getText ( ) )
15643	assertThat ( validator. validate ( parameters, "aaa" ), is ( "Aaa is not a string(####)." ) )
15644	assertEquals ( "Hello World", mvcResult. getResponse ( ). getContentAsString ( ) )
15645	assertEquals ( 2, statements. size ( ) )
15646	assertFalse ( one. equals ( two ) )
15647	Assert. assertEquals ( 1, patientCount )
15648	Assert. assertEquals ( "Hasan", person. getName ( ) )
15649	assertThat ( result, is ( notNullValue ( ) ) )
15650	assertEquals ( sentPayload, receivedPayload )
15651	assertEquals ( expResult, result )
15652	Assert. isTrue ( organizations. size ( ) > 0 )
15653	assertEquals ( "12", getAgeField ( ). getText ( ) )
15654	assertEquals ( expectedJson, actualJson )
15655	assertEquals ( expected, jsonString )
15656	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
15657	Assert. assertEquals ( expected, actual )
15658	Assert. assertTrue ( theFlows. isEmpty ( ) )
15659	assertEquals ( svn. getRevision ( ), 0 )
15660	assertThat ( count - 1, is ( 12 ) )
15661	assertThat ( "Testing a wrong order date", date, nullValue ( ) )
15662	assertEquals ( s, LittleEndianInputStream. wrap ( b ). readUnsignedShort ( ) )
15663	assertTrue ( group. isAssignedAsStudent ( student ) )
15664	assertEquals ( 200, result. getStatusCode ( ) )
15665	approver. assertApproved ( "banana" )
15666	assertFalse ( "Model should contain RDF types", rdfTypes. isEmpty ( ) )
15667	Assert. assertEquals ( 1L, ctx2. tQueryForLongValue ( "select count(*) from users where ${col}= [name] and address= [addr]", bind ( "name", "Tom" ), bind ( "addr", "China" ), bind ( "$col", "name" ) ) )
15668	assertEquals ( this. view, view )
15669	assertEquals ( "numhits is wrong", 399, res. getNumhits ( ). intValue ( ) )
15670	assertEquals ( "123", map. get ( "v" ) )
15671	assertPostFails ( added, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
15672	assertEntityHasValue ( key, value )
15673	assertSuggestions ( suggestions, "foo", "fooba" )
15674	assertSame ( defaultDurability, result )
15675	assertEquals ( 2, metaView3. getSd ( ). getColumns ( ). size ( ) )
15676	assertThrows ( InvalidMethodSignatureException. class, ( ) -> new JavaDefaultParameterTransformerDefinition ( threeArg, lookup ) )
15677	assertEquals ( "failed to generate array with initializations", "new String[][] {1, 2}", s )
15678	assertEquals ( 1, tags. size ( ) )
15679	assertEquals ( entityBundle, clone )
15680	assertTrue ( new Matcher ( ). matchRelationshipInstance ( output, input ) )
15681	assertTrue ( objmap. containsKey ( "field_priv" ) )
15682	assertTrue ( "expecting no start rules; found " + msg. getClass ( ). getName ( ), msg instanceof GrammarSemanticsMessage )
15683	Assert. assertTrue ( map. isEmpty ( ) )
15684	assertEquals ( "Running on control port " + port + " but responded with: \\"ok\\"", response )
15685	assertTrue ( ti. wasContainedIn ( uri ) )
15686	Assert. fail ( e. getMessage ( ) )
15687	Assert. assertTrue ( "test". equals ( generator. formatTableName ( "test" ) ) )
15688	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
15689	assertTokenStreamContents ( ts, new String [ ] { "hello", "Hello", "world", "World" }, new int [ ] { 0, 0, 10, 10 }, new int [ ] { 5, 5, 15, 15 }, null, new int [ ] { 1, 0, 2, 0 }, null, 15, null, true )
15690	assertEquals ( r1, r2 )
15691	Assert. assertEquals ( 2, buttons. size ( ) )
15692	Assert. assertTrue ( deal. isAccepted ( ) )
15693	Assert. assertNotSame ( exporter, exporter2 )
15694	assertEquals ( "Matching", VersionMatchResult. MATCHED, p. matches ( info ) )
15695	assertEquals ( 0x00, acia. read ( CMD_STAT_REG, true ) & 0x01 )
15696	Assert. assertEquals ( 3, count )
15697	Assert. assertEquals ( 1, issues. length )
15698	assertThatSelectedValueIs ( "z" )
15699	assertEquals ( SentryStore. SENTRY_VERSION_DEFAULT, sentryStore. getSentryVersion ( ) )
15700	assertEquals ( "test", echo. echo ( "test" ) )
15701	assertThat ( Moment. of ( LocalDateTime. of ( 2010, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
15702	assertNull ( lease. getTenancyDuration ( ) )
15703	assertEquals ( expected, x )
15704	assertTrue ( "the method \\"vote\\" must return ACCESS_GRANTED", voteGenericTest ( authorities, configAttributes, AccessDecisionVoter. ACCESS_GRANTED ) )
15705	assertEquals ( 4, traverseCount )
15706	assertEquals ( 0l, theValue. get ( ). longValue ( ) )
15707	assertNotNull ( DocumentPermission. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "DOCSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
15708	assertEquals ( new ComparisonExpression ( b ), orPredicate. getRhs ( ) )
15709	assertEquals ( modulus, clonedCertificate. getPublicKeyModulus ( ) )
15710	assertNull ( SG_SFC_UNBIND_DELETE_SFC. getNetworkElementId ( ) )
15711	assertTrue ( entity. getId ( ) > 0 && entity. getCity ( ) == null )
15712	assertNotNull ( target )
15713	assertFalse ( result. isSucceeded ( ) )
15714	assertNull ( query )
15715	assertEquals ( expected. substring ( 0, 5 ), sb. toString ( ) )
15716	Assert. assertNull ( changed. getReifier ( ) )
15717	assertEvalTrue ( new File ( "abssamples/backend/ExceptionTests/classRecover1.abs" ) )
15718	assertTrue ( System. currentTimeMillis ( ) - redis. objectIdletime ( key ) > 0 )
15719	assertTrue ( "content-type application/json; charset=wtf-8 should be valid", mediaTypeChecker. isContentTypeValid ( mockHeaders ) )
15720	assertEquals ( "{\\"resourceType\\":\\"Observation\\",\\"value\\":{\\"contentType\\":\\"text/plain\\",\\"data\\":\\"AAECAw==\\"}}}", encoded )
15721	assertEquals ( xs, ys )
15722	Assert. assertFalse ( bpInfo1. equals ( bpInfo2 ) )
15723	assertEquals ( 0, monthView. getDaysOfTheWeek ( ). length )
15724	assertThat ( comment, equalTo ( "Simple field comment from classpath" ) )
15725	assertThat ( info. isRequired ( ), is ( true ) )
15726	assertEquals ( BigInteger. valueOf ( 536879104L ), work )
15727	assertEquals ( same. sum ( 1 ), sum )
15728	assertEquals ( PrimitiveTypeProducer. class, typeProducer. getClass ( ) )
15729	Assert. assertEquals ( n, c. getRidCount ( ) )
15730	assertEquals ( VLWSentence. KM, empty. getTotalUnits ( ) )
15731	assertThat ( retry, is ( file ( first ) ) )
15732	assertTrue ( VectorizerUtils. isStable ( unk1, unk2 ) )
15733	assertEqualsJson ( expected, actual )
15734	assertThat ( res. toString ( ), is ( equalTo ( "my last response statusCode is: 200" ) ) )
15735	assertEquals ( "2011-10-10T12:00:00+0530", apacheCloudStackClient. getRequestExpiration ( ) )
15736	assertEquals ( expResult, result )
15737	assertFalse ( hasConfigurationChanged )
15738	assertThat ( target. getBodyAsMap ( String. class ), is ( nullValue ( ) ) )
15739	Assert. fail ( "Xfdf files are not equal" )
15740	assertEquals ( 1, result. getSize ( ) )
15741	assertThat ( dns, hasItems ( LdapConfiguration. OU_ROOT_OBJECT_DN ) )
15742	assertEquals ( "V", data. getUnit ( ) )
15743	assertDependencyWasResolved ( )
15744	assertEquals ( FAKE_REGION_1, rd. get ( 0 ) )
15745	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
15746	assertEquals ( string2, string1 )
15747	assertEquals ( Arrays. asList ( "INSERT INTO " + tableName ( "TableOne" ) + " (id, value) VALUES (3, 1, 2)" ), testDialect. convertStatementToSQL ( testStatement, schema, null ) )
15748	Assert. assertEquals ( expected, filterResult )
15749	assertTrue ( AcceptanceTestUtil. isInterested ( component, lwpcOID. getServiceID ( ) ) )
15750	Assert. assertEquals ( "", value )
15751	assertEquals ( 1, credit. getVoteCount ( ) )
15752	assertEquals ( ExpressionFactory. exp ( "path not in (1,2,3)" ), exp )
15753	assertEquals ( DEFAULT_NAME, createSchema ( map, 0 ). convert ( ). getName ( ) )
15754	assertEquals ( "admin", jsp )
15755	assertTrue ( code == 200 )
15756	Assert. assertEquals ( "SELECT '0' = 0;", text )
15757	assertEquals ( ProcessInstance. STATE_COMPLETED, processInstance. getState ( ) )
15758	assertEquals ( expected, actual )
15759	assertThat ( sslContextSelector. select ( httpContext ), is ( sslContext ) )
15760	assertEquals ( out, EncodingDetector. detectEncoding ( in ) )
15761	assertNotNull ( WorkerRealTimeStatistics. fetcher ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "WAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
15762	assertEquals ( 0, walEdit. size ( ) )
15763	assertServiceInstanceCreateRequest ( serviceInstance )
15764	assertMockEndpointsSatisfied ( )
15765	assertOut ( "function B(msg) {\\n\\tthis.msg = msg;\\n}" )
15766	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
15767	assertEquals ( m. getUpdates ( ). get ( 0 ). getValue ( ), metric2. getValue ( ) )
15768	assertThat ( normalize ( results ), is ( path ( "", "a", "b", "c", "a/a.csv", "b/b.csv", "c/c.csv" ) ) )
15769	assertThat ( DateUtil. clearDatePart ( date ), is ( cal. getTime ( ) ) )
15770	Assert. assertEquals ( expected, rewriter. rewriteCookie ( cookie ) )
15771	assertEquals ( 1, session. getGlobal ( "messages" ). size ( ) )
15772	assertNotNull ( actual )
15773	assertTrue ( error. getMessage ( ). contains ( "Missing" ) )
15774	assertEquals ( branches, Functions. getBranchesPageIsSharedWith ( PROJECT, BRANCH, PAGE ) )
15775	assertObjectEquals ( "{type:'array',items:{type:'object',properties:{f1:{type:'string'}}}}", s. getSchema ( BeanList. class ) )
15776	assertEquals ( expected, actual )
15777	assertEquals ( 4, doubler. doubleIt ( 2 ) )
15778	assertEquals ( "Serialized object should be the same", foo, deserialized )
15779	assertTrue ( "check lifetime after setting it", _haveLifetime )
15780	assertEquals ( 1, actualExpectedWorkerLinkCount )
15781	assertEquals ( "The query returned incorrect number of results.", 20, p. getTotalElements ( ) )
15782	Assert. assertTrue ( result. length == 1 )
15783	assertThat ( testFacade. getRecordedService ( domainPresenceInfo ), nullValue ( ) )
15784	assertEquals ( "Select with null clause", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
15785	assertEquals ( "define stream testStreamName(attrName1,attrName2);", siddhiStreamDef )
15786	assertSame ( first, second )
15787	assertFalse ( params. doesCodingListMatch ( codings ) )
15788	context. assertIsSatisfied ( )
15789	assertEquals ( - 1, t. indexOfUnquoted ( str, ">>" ) )
15790	assertEquals ( aNumber, result, 1E14 )
15791	assertThat ( document. containsKey ( "_id" ), is ( true ) )
15792	assertEquals ( 0, estimatedSizeBytes )
15793	assertEquals ( response, res )
15794	assertArrayEquals ( new double [ ] { 1.0, 2.0, 3.0 }, degToRads, 0.00001 )
15795	Assert. assertTrue ( cmd. apply ( bkFlags, new String [ ] { "-l", "1", "-f" } ) )
15796	assertTrue ( resourceBundle. getObject ( "fileType.Image" ) instanceof Image )
15797	assertEquals ( topics, topic. getChildren ( ) )
15798	Assert. assertTrue ( "RunJar failed", outFile. exists ( ) )
15799	assertThat ( ContractClass. privateNestedInstanceVariable, is ( true ) )
15800	assertEquals ( expectedBindingString, builder. toString ( ) )
15801	assertThat ( applicationSettings. getProjectCreationSetting ( ), is ( PROJECT_CREATION_NOT_ALLOWED ) )
15802	assertResults ( chain )
15803	assertEquals ( "test", databaseMeta2. getName ( ) )
15804	assertEquals ( "?a=b&c=d", qs. encode ( ). toQueryString ( ) )
15805	assertEquals ( json, out. toString ( ) )
15806	assertResult ( 1, - 1 )
15807	assertEquals ( "Expected 1 result!", 1, n )
15808	assertThat ( value. isPresent ( ), is ( false ) )
15809	assertEquals ( HttpStatus. BAD_REQUEST, response. getStatusCode ( ) )
15810	assertEquals ( 5, testDescriptor. getChildren ( ). size ( ) )
15811	assertNotNull ( hit )
15812	assertEquals ( "test (REG_SZ)", value. toString ( ) )
15813	assertFalse ( iter. hasNext ( ) )
15814	Truth. assert_ ( )
15815	assertNull ( result )
15816	assertThat ( driver. findElement ( By. xpath ( "//a" ) ). isDisplayed ( ), is ( true ) )
15817	assertRow5 ( )
15818	Assert. assertEquals ( tree. predict ( x [ loocv. test [ i ] ] ), evalPredict ( tree, x [ loocv. test [ i ] ] ) )
15819	assertTrue ( e instanceof E_NotEqual )
15820	assertThat ( "default 64Os", sut. getOs ( ), is ( equalTo ( VM. DEFAULT_64_OS ) ) )
15821	assertEquals ( 1, result. getEntry ( ). size ( ) )
15822	assertEquals ( types, expectedTypes )
15823	assertEquals ( "Learn. Eat. Code.", phraseDecodedToString )
15824	assertThat ( result. message ( ). get ( 0 ). getData ( ), CoreMatchers. containsString ( "<img src=\\"http://yuml.me/diagram/" ) )
15825	assertEquals ( "Expected 4 result!", 4, n )
15826	assertEquals ( date, result. getModified ( ) )
15827	CallTreeAssert. assertDepth ( "corrupted", callTree, expectResult )
15828	context. assertIsSatisfied ( )
15829	assertContainsOnly ( testee. getFileFilters ( ), filter1, filter2, filter3 )
15830	assertEquals ( "<y-axis><plot-lines><line><width>2</width></line></plot-lines></y-axis>", removeWhitespacesBetweenTags ( parent. child ( 0 ). toString ( ) ) )
15831	assertEquals ( "*/", scanner. next ( ). toString ( ) )
15832	assertThat ( whereClause, is ( equalTo ( FILTER_WHERE ) ) )
15833	Assert. assertEquals ( instancesCount, InstanceHelpers. getAllInstances ( this. app ). size ( ) )
15834	assertNotNull ( descuento. getId ( ) )
15835	assertAccessorsCorrect ( control, "delay", Boolean. FALSE, Boolean. FALSE, Boolean. FALSE )
15836	assertAccessorsCorrect ( table, "currentPage", 1, 10 )
15837	assertThat ( response. getStatus ( ), equalTo ( Response. Status. OK. getStatusCode ( ) ) )
15838	assertEquals ( "Invalid viewport", heading. getText ( ) )
15839	assertThat ( iter. hasNext ( ), is ( true ) )
15840	assertThatIsMaximized ( )
15841	assertTrue ( true )
15842	assertThat ( settings. get ( ), is ( equalTo ( "default" ) ) )
15843	Assert. assertEquals ( value + 1, value1 )
15844	Assert. assertTrue ( appTableColumnsMeta. indexOf ( "natural" )!= - 1 )
15845	assertTrue ( codeGenFailedEx. getMessage ( )!= null )
15846	assertThat ( credentials, is ( notNullValue ( ) ) )
15847	assertNotNull ( actual )
15848	assertEquals ( "Project from a resource file", mpp. getProject ( ). getName ( ) )
15849	assertTrue ( "Killed", System. currentTimeMillis ( ) - start < SHUTDOWN_KILL_WAIT )
15850	assertThat ( result, is ( alicia ) )
15851	assertNotNull ( sut. getName ( ) )
15852	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
15853	assertTrue ( ( fTime - sTime < 7000L ), "Immediate trigger did not fire within a reasonable amount of time." )
15854	Assert. assertTrue ( evaluator. evaluate ( offsets ) )
15855	assertEquals ( 0, x. size ( ) )
15856	assertNotNull ( "Skill is null", entity )
15857	Assert. assertEquals ( SingleValueAssignExtension. SingleValueAssignTag. class, assign. getTagActionClass ( ) )
15858	assertEquals ( "History filename provider", name )
15859	Assert. assertTrue ( ( max - min ) <= defaultCapacity / 100 )
15860	Assert. assertEquals ( 2, analysis. getWarnings ( ). size ( ) )
15861	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. AFFILIATIONS_UPDATE )
15862	assertEquals ( result, actual. unwrap ( String. class ) )
15863	assertThat ( validationErrors. size ( ), equalTo ( 0 ) )
15864	assertNull ( entity. getProperty ( "user" ) )
15865	assertSetDirty ( )
15866	assertThat ( action, is ( not ( new ProjectPrefixDeclarationsAction ( projectId, otherDecls ) ) ) )
15867	assertXmlExample ( definitions )
15868	assertEquals ( "Wrong number of unread messages", 3, checkNumberUnreadMessages )
15869	assertThatContainsOnly ( archive, scriptPath )
15870	assertEquals ( "Struct size should be equal", expectedSize, dcStructSize ( struct ) )
15871	assertEquals ( timeOut, mpd. getTimeout ( ) )
15872	assertEquals ( 0, t. getOutputError ( ). getTotalNetworkError ( ), 0.1 )
15873	assertTrue ( ex. isPrime ( 17 ) )
15874	assertEquals ( detailMethods, result )
15875	N4CliHelper. assertExpectedOutput ( expectedString, out )
15876	assertEquals ( HttpStatus. NO_CONTENT, responseEntity. getStatusCode ( ) )
15877	assertThat ( st. tagManager, instanceOf ( TagManager. class ) )
15878	assertEquals ( expectedResult, result )
15879	Assert. assertEquals ( 20, analyser. getLoadAtEnd ( route ). get ( 0 ), 0.01 )
15880	assertEquals ( URL + "?param+1=&param+2=%22", uri. toString ( ) )
15881	assertNotNull ( x509Attestation )
15882	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 3 ) ) )
15883	Assert. assertEquals ( Status. INTERNAL_SERVER_ERROR. getStatusCode ( ), resp. getStatus ( ) )
15884	assertThat ( windows. minus ( earlier ), is ( IntervalCollection. onDateAxis ( ) ) )
15885	Assert. assertNotSame ( connection, HConnectionManager. getConnection ( TEST_UTIL. getConfiguration ( ) ) )
15886	assertEquals ( value, result )
15887	assertTrue ( Arrays. equals ( result1, result2 ) )
15888	assertThat ( javaDocComment, not ( containsString ( "(Required)" ) ) )
15889	assertRange ( q, Long. class, time ( "2000-01-01" ), time ( "2010-02-04" ) )
15890	H2ConnectionStringAssert. assertThat ( H2_CONNECTION_STRING )
15891	assertEquals ( actual1, actual2 )
15892	assertEquals ( "Message should be received", messagesToSend, container. receive ( ) )
15893	Assert. assertEquals ( "simpleInteger", found. getName ( ) )
15894	Assert. assertEquals ( "UserId should be same as authenticated user:" + answer, userId, answer. getReturnVal ( ) )
15895	Assert. assertEquals ( Response. Status. BAD_REQUEST. getStatusCode ( ), response. getStatus ( ) )
15896	assertEquals ( v1. length, value. length )
15897	assertEquals ( "2007-12-03 - 10:15:30~~~", result )
15898	assertEquals ( 5, res. getInt ( "nbHits" ) )
15899	assertThat ( exitStatus. exitStatus ( ), is ( equalTo ( ( byte ) 0x1 ) ) )
15900	assertIncluded ( node )
15901	assertThat ( nextToken, is ( "from" ) )
15902	assertFailureValue ( "differs at index", "[0]" )
15903	assertEquals ( 1L, result )
15904	Assert. assertNotNull ( page. getPageTimings ( ) )
15905	Assert. assertNotNull ( xhtmlOptions )
15906	Assert. assertEquals ( "Wrong port", 0x00010203, out. readUnsignedInt ( ) )
15907	assertEquals ( 200, trigger. getLimit ( ) )
15908	assertEquals ( selectedInterval. getName ( ), "Engineering" )
15909	assertThat ( tester. response. getStatus ( ), is ( 200 ) )
15910	assertTrue ( msg, dynAny. equal ( dynAny2 ) )
15911	assertTaskEvents ( task, TaskListener. EVENTNAME_COMPLETE )
15912	assertEquals ( "Thank you.", email. getVisibleText ( ) )
15913	Assert. fail ( "MathIllegalArgumentException expected" )
15914	Assert. assertEquals ( Response. Status. NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
15915	assertTrue ( route. getActivities ( ). contains ( "1" ) )
15916	assertEquals ( 3, count )
15917	assertTrue ( Script. matchNamed ( MatchType. EQUALS, "bar", null, "{ hello: '#(foo.a)', world: '##(foo.b)'  }", ctx ). pass )
15918	Assert. assertTrue ( errors. hasFieldErrors ( "voidReason" ) )
15919	assertNotNull ( jobResult )
15920	Assert. assertTrue ( "XML are similar " + myDetailedDiff, myDetailedDiff. similar ( ) )
15921	assertFalse ( guangdong. notExisted ( ) )
15922	assertEquals ( expectedQuery, actualQuery )
15923	assertEquals ( null, annotation )
15924	arraysWithCustomComparisonStrategy. assertContainsSubsequence ( someInfo ( ), actual, sequence )
15925	assertTrue ( ( ( IMAPFolder ) test ). getUIDNotSticky ( ) )
15926	assertEquals ( singleQuotedString, ocsvTransformer. getCellContent ( singleQuotedString ) )
15927	assertThat ( result, is ( nullValue ( ) ) )
15928	assertEquals ( Arrays. asList ( "/parent/child", "/parent/child/descendant" ), parent. getNodes ( ) )
15929	assertEquals ( Location. LOCATION_LHS_INSIDE_CONDITION_START, getLastIntegerValue ( parser. getEditorInterface ( ). get ( 0 ). getContent ( ) ) )
15930	assertEquals ( 1.2, cs. getX ( 0 ), TOL )
15931	assertTrue ( notify. matches ( 10, TimeUnit. SECONDS ) )
15932	Assert. assertEquals ( "12345.6789", getCell ( 0, 10 ). getPureText ( ) )
15933	assertEquals ( "some dummy reason", conceptService. getDrug ( uuidOfDrugToCheck ). getName ( ) )
15934	Assert. assertEquals ( "[3, 2, 4, 1, 5]", result. toString ( ) )
15935	assertEquals ( "OK", reply )
15936	Assert. assertTrue ( mod. exists ( ) )
15937	assertNotNull ( sut. getFile ( ) )
15938	assertEquals ( "a,\\"b\\\\\\\\c\\"" + recordSeparator, sw. toString ( ) )
15939	assertEquals ( ActionOut. TYPE, actionOut. getType ( ) )
15940	assertEquals ( "https://127.0.0.1:6443", builder. getBasePath ( ) )
15941	assertMsg ( )
15942	assertEquals ( expectedArg, parsedArg )
15943	assertNull ( objmap. get ( "field_Unknown" ) )
15944	assertThat ( PrettyTime. of ( Locale. GERMANY ). withReferenceClock ( clock ). printRelative ( PlainTimestamp. of ( 2014, 9, 1, 14, 0 ). atUTC ( ), ZonalOffset. UTC ), is ( "������������������������������������������������������������������
15945	assertThat ( deletes, StreamMatchers. empty ( ) )
15946	assertEquals ( MultivariateDivision. divide ( dividend, dividend2 ), MultivariateDivision. divide ( dividend, dividend2 ) )
15947	assertTrue ( redisServer. isStarted ( ) )
15948	assertTrue ( writer instanceof SLDWriter )
15949	assertEquals ( "max time", result )
15950	assertAllCommandsUsed ( )
15951	assertEquals ( "car", car. getName ( ) )
15952	assertEquals ( cVector, normalizedCVector )
15953	assertNull ( myDtoInstance )
15954	assertEquals ( "", writer. toString ( ) )
15955	assertEquals ( "default method", PathJoint. DEFAULT_INDIRECT_METHOD, o. getDefaultMethod ( ) )
15956	assertThat ( representation. getString ( "display" ), is ( "44.56" ) )
15957	assertEquals ( ModelInterceptor. exists ( DummyModel. class. getMethod ( "exists", Serializable. class ), model2. getId ( ) ), model2 )
15958	Assert. assertEquals ( expected, actual )
15959	assertEquals ( Constants. FilterLevel. Medium, endpoint. getFilterLevel ( ) )
15960	assertMatch ( e, s )
15961	assertEquals ( 200, connection. getResponseCode ( ) )
15962	assertEquals ( expected, sql [ 0 ]. toSql ( ) )
15963	assertThat ( orderLine. getAdvancePercentage ( ), sameValueAs ( division. divide ( 100, 100 ) ) )
15964	assertEquals ( 1, cc. size ( ) )
15965	assertEquals ( builder. getMaxEvaluations ( ), 20000 )
15966	assertFalse ( accepted )
15967	assertTrue ( validationErrors. hasErrors ( ) )
15968	assertEquals ( "", doc. text ( ) )
15969	assertEquals ( actualMime, "bundle/mime-from-bundle" )
15970	assertEquals ( 2, results. size ( ) )
15971	assertEquals ( filter, config. getFilter ( ) )
15972	Assert. assertEquals ( Sets. newHashSet ( 1, 2 ), parser. getSecureResultIndices ( ) )
15973	assertEquals ( "foo", jc. get ( "51" ) )
15974	assertEquals ( true, result )
15975	assertTwoInstancesAreStarted ( firstProcessDefinition, secondProcessDefinition )
15976	assertEquals ( "An Uninitialized Value should return NaN on get().", NaN, victim. get ( ) )
15977	assertTrue ( plan. getRootNode ( ) instanceof ProjectNode )
15978	assertNull ( profile. validateToken ( idTokenString ) )
15979	Assert. assertEquals ( "lukas podolski", result )
15980	assertEquals ( 1, result )
15981	assertTrue ( expectedDirection. equals ( reflectedDirection ) )
15982	assertOut ( "var a:Boolean = isFinite(1000000.9)" )
15983	assertEquals ( FAILING, collector. getStatus ( ) )
15984	assertNull ( nullResourceComposite. getResource ( ) )
15985	assertTrue ( "Expected stop to be immediate. Actual: " + timeTaken, timeTaken >= shutdownMaxTimeout && timeTaken < shutdownMaxTimeout + 10 )
15986	assertEquals ( "Should have thrown an exception", Result. ERROR, result. assertAbsenceOfErrors ( ) )
15987	assertThat ( iframeStr. matches ( "<iframe>.*</iframe>" ), is ( true ) )
15988	Assert. assertEquals ( 202, response. getStatus ( ) )
15989	assertStat ( result )
15990	assertUrlProtected ( servletUrl )
15991	assertEquals ( "Should have not constraint violation", 0, validator. validate ( product ). size ( ) )
15992	assertTrue ( language. contains ( country ) )
15993	assertThat ( uri. getPath ( ), endsWith ( "testing" ) )
15994	assertEquals ( TEST_INITIAL_DFS_REPLICATION, testConfiguration. get ( "dfs.replication.initial" ) )
15995	Assert. assertEquals ( 0, patients. size ( ) )
15996	assertEquals ( 0, b. compareTo ( a ) )
15997	Assert. assertTrue ( pss. toString ( ). contains ( "true" ) )
15998	assertEquals ( expResult, result )
15999	assertNotEquals ( otherHashCode, foreignableFieldHashCode )
16000	assertThat ( step. getScreenshots ( ). size ( ), is ( 0 ) )
16001	assertFeatureValues ( expected, testQuery, testText, emptyChain )
16002	assertSame ( val, ConfigUtils. getObject ( config, null, "no-object", "some-object" ) )
16003	assertRemoveSubsystemResources ( servicesB )
16004	assertThat ( errors, not ( hasFieldErrors ( "familyName2" ) ) )
16005	assertTrue ( configurationDeserialized )
16006	assertEquals ( HTML, result )
16007	assertEquals ( s, klass. getField ( s ) )
16008	assertExceptionContainsCorrectMessage ( ( ) -> userTaskAdminClient. addPotentialOwners ( CONTAINER_ID, task. getId ( ), false, add ), "Container '" + CONTAINER_ID + "' is not associated with id '" + CONTAINER_ID + "'", "Container '" + CONTAINER_ID + "' is not associated with id '" + CONTAINER_ID + "'" )
16009	assertEquals ( "some", result )
16010	assertThat ( exitStatus. exitStatus ( ), is ( equalTo ( ( byte ) 0x0 ) ) )
16011	assertTrue ( passwordResetPage. checkPasswordReset ( ) )
16012	assertThat ( applied, is ( RuntimeContext. DEFAULT ) )
16013	assertEquals ( 2, deltas. size ( ) )
16014	assertEquals ( Lists. < DBDashboard > newArrayList ( ), dashboardService. insert ( dashboardCondition, dashboardCondition2 ) )
16015	assertNotEquals ( original, objectId ( "/dir" ) )
16016	assertEquals ( "select textcat('a', 'b'), textcat+('a', 'b')", result )
16017	assertEquals ( c. getLinks ( ). size ( ), 0 )
16018	assertEquals ( Status. NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
16019	assertTrue ( Arrays. equals ( new int [ ] { 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
16020	assertRequest ( "POST", "Message/" )
16021	assertEquals ( expected, actual )
16022	assertThat ( v2Schema. toString ( ), is ( "YType" ) )
16023	assertEquals ( "<#function name ></#function>", result )
16024	assertTrue ( transactionClosed. get ( ) )
16025	assertEquals ( "GET", r. getHeader ( "Allow" ) )
16026	assertEquals ( contents, "Hello World!" )
16027	Assert. assertEquals ( "4", head. getId ( ) )
16028	assertEquals ( 0, context. getAll ( request ). size ( ) )
16029	assertThat ( resources, contains ( patientId, orgId, parentOrgId, parentParentOrgId ) )
16030	assertEquals ( "test-123", val )
16031	assertThat ( list, contains ( "testa", "testb" ) )
16032	Assert. assertTrue (! set. equals ( expected ) )
16033	assertTrue ( cp. isSupported ( ) )
16034	assertNotNull ( cacheConfig )
16035	assertNull ( runtimeService. createProcessInstanceQuery ( ). processInstanceId ( processInstance. getId ( ) ). singleResult ( ) )
16036	assertEquals ( ( byte ) 34, s. m0_0 ( ) )
16037	assertEquals ( "128000", ph. getTpm2Burst ( ) )
16038	assertThat ( readEmailAddress, is ( emailAddress ) )
16039	assertEquals ( 3, interfaces. size ( ) )
16040	assertFalse ( result )
16041	assertEquals ( "TASKID IN (DEPLOYMENT1, DEPLOYMENT2)", dataSetLookup. getFirstFilterOp ( ). getColumnFilterList ( ). get ( 0 ). toString ( ) )
16042	assertEquals ( "Expected 1 results!", 1, n )
16043	assertEquals ( result, solution )
16044	assertExec ( "Methods defined in String", Classes. class, "listObject__Ljava_lang_String_2ZLjava_lang_String_2", methods, true, "toStr" )
16045	assertEquals ( "2013-03-01T10:00:00.000Z", revision. json ( ) )
16046	assertMockEndpointsSatisfied ( )
16047	assertEquals ( s, MurmurHash3. murmurhash3 ( s ) )
16048	assertTrue ( r. get ( String. class ). contains ( "Paul" ) )
16049	assertBoard ( "�尖�尖�尖��\\n" + "��*�衡�尖��\\n" + "��***��\\n" + "��*�衡�尖�尖�尖��\\n" )
16050	Assert. assertTrue ( contains )
16051	assertCompleted ( "fff" )
16052	assertTrue ( result )
16053	assertTrue ( dump. contains ( JP_TEXT ) )
16054	Assert. assertEquals ( 0, analyser. getLoadRightAfterActivity ( route. getEnd ( ), route ). get ( 0 ) )
16055	TestUtil. assertEquals ( exp, getSpans ( true, SpanQueryPositionFilter. Operation. AND, false ) )
16056	assertNotNull ( profile )
16057	assertOut ( "/**\\n * @export\\n */\\nfoo.bar.B.prototype.b = function() {\\n  var /** @type {custom.TestProxy} */ a = new custom.TestProxy();\\n  a.setProperty('foo', 'bar');\\n}" )
16058	assertThat ( ( double ) stopwatch. getMinimumDuration ( ). getDuration ( TimeUnit. MILLISECONDS ), is ( closeTo ( 50, 50 ) ) )
16059	assertTrue ( axioms. contains ( chain ) )
16060	assertEquals ( "Base for integers is wrong", Double. valueOf ( 3 ), parsed )
16061	assertEquals ( 2, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
16062	assertFalse ( handler. process ( null, consumer, Direction. In, null, null ) )
16063	assertEquals ( "title", toBeUpdated. getTitle ( ) )
16064	assertNotNull ( result )
16065	assertThat ( cursor. asListRemaining ( ), hasItems ( "actors/Keanu", "actors/Hugo", "actors/Emil", "actors/Carrie", "actors/Laurence" ) )
16066	assertTrue ( equals ( stat, nativeEntity ) )
16067	assertThat ( axioms. isEmpty ( ), is ( true ) )
16068	assertGridIndexes ( data, new boolean [ ] { true, true, true }, new boolean [ ] { false, false, false }, new Expected [ ] [ ] { { Expected. build ( true, 3, "(0, 0)" ), Expected. build ( false, 1, "(1, 0)" ) }, { Expected. build ( true, 0, "(0, 0)" ), Expected. build ( false, 1, "(1, 1)" ) }, { Expected. build ( true, 0, "(0, 0)" ), Expected. build ( false, 1, "(1, 2)" ) } } )
16069	assertEquals ( MediaType. TEXT_PLAIN_TYPE, d1. getMediaType ( ) )
16070	assertEquals ( TEST_LOCALE_COUNTRY, LocaleHelper. getLocaleOverride ( ). getCountry ( ) )
16071	assertThat ( now. getZone ( ), is ( DateTimeZone. forID ( "UTC" ) ) )
16072	assertEquals ( 1, one. getAsDouble ( ), 0 )
16073	assertFalse ( satisfiesPrecondition ( cu ) )
16074	assertEquals ( "number of pendingAddOps", 5, syncObj1. counter )
16075	assertEquals ( "Method #toString is wrong", "GeoDistanceCondition{boost=0.4, field=name, " + "minDistance=\\"1km\\", maxDistance=9.0}", condition. toString ( ) )
16076	assertEquals ( expResult, result )
16077	assertEquals ( 0, properties. getProperties ( ). size ( ) )
16078	assertThat ( config. getMaxFileSizeBytes ( ), equalTo ( maxFileSizeBytes ) )
16079	Assert. assertNull ( getReplHeader ( ) )
16080	assertTrue ( "Should have removed the accumulator after release", weakMap. isEmpty ( ) )
16081	assertArrayEquals ( expectedResult, output )
16082	Assert. assertEquals ( "[1, 2, 3, 4, 5]", result. toString ( ) )
16083	assertThat ( generatedReportText, containsString ( "sample.steps.FailingStep.failedWith(java.lang.IllegalArgumentException)" ) )
16084	assertEquals ( "Wrong number of results", 0, liveSearchDropDown. getSearchResults ( ). size ( ) )
16085	assertEquals ( 4, results. size ( ) )
16086	assertEquals ( test, expected )
16087	assertThat ( queryMapping. transformOutboundDatabaseName ( metaStoreMapping, query ), is ( "SELECT " + PREFIX + "bdp.hellobdp1(), " + PREFIX + "bdp.hellobdp2()" ) )
16088	Assert. assertEquals ( project. getShortName ( ), eventRepository. findById ( eventId ). getProjectShortName ( ) )
16089	this. assertLoadBlobViaTuples ( tuples, true, true )
16090	assertSqlCanBeParsedAndDeparsed ( stmt )
16091	assertEquals ( "Value: /say-query?a=b", resp. getResponseBody ( ). trim ( ) )
16092	assertEquals ( RDF. type. getId ( ), editor. getValue ( ) )
16093	assertTrue ( tpk. getWindowing ( ) instanceof Time )
16094	assertEquals ( TMP, A )
16095	assertEquals ( group, identity. getGroup ( ) )
16096	assertEquals ( 1, converters. size ( ) )
16097	tester. assertRenderedPage ( TestClient. class )
16098	assertEquals ( asList ( asList ( 1, 2, 3 ), asList ( 1, 2, 4 ), asList ( 1, 2, 5, 6 ) ), result )
16099	assertFalse ( property. isPersistent ( ) )
16100	assertNull ( log )
16101	Assert. assertEquals ( "Hello", cdiEjb. sayHello ( ) )
16102	assertOutput ( expected )
16103	assertTrue ( out. contains ( "User [owner] is not authorized to view the logs for entity" ) )
16104	assertStack ( new Object [ ] { null, null }, stack )
16105	Assert. assertTrue ( actualUrl. endsWith ( "/resetPassword" ) )
16106	assertEquals ( status, Docker18. getDigest ( digest ) )
16107	assertEquals ( 0, ( ( Service ) vrp. getJobs ( ). get ( "1" ) ). getReplicaCount ( ), 0.1 )
16108	assertEquals ( 2, result. size ( ) )
16109	assertEquals ( origItemsJson, outJson )
16110	assertTrue ( result )
16111	assertThat ( schema, hasSize ( 1 ) )
16112	Assert. assertEquals ( expected, f. value ( new CombinatoricsUtils. FactorialLog ( i ) ), 0.0 )
16113	assertThat ( targetSubdirectory, is ( expectedTargetSubDirectory ) )
16114	assertThat ( dummified. getAttributes ( ), containsInAnyOrder ( new RpslAttribute ( "inetnum", "193.0.0.0 - 193.0.7.255" ), new RpslAttribute ( "netname", "RIPE-NCC" ), new RpslAttribute ( "descr", "RIPE Network Coordination Centre" ), new RpslAttribute ( "remarks", "Used for RIPE Netherlands" ), new RpslAttribute ( "admin-c", "FB99999-RIPE" ), new RpslAttribute ( "tech-c", "FB99999-RIPE" ), new RpslAttribute ( "upd-to", "***@ripe.net" ), new RpslAttribute ( "status", "ASSIGNED PI" ), new RpslAttribute ( "source", "TEST" ), new RpslAttribute ( "mnt-by", "RIPE-NCC-MNT" ), new RpslAttribute ( "mnt-lower", "RIPE-NCC-MNT"
16115	assertTrue ( "No results expected.", set. isEmpty ( ) )
16116	assertTrue ( problemState )
16117	assertEquals ( 1, newSize - initialSize )
16118	assertEquals ( expectedResult, aClass. getCompilationUnitAsString ( ) )
16119	assertNull ( view )
16120	assertNotNull ( callingClass )
16121	Assert. assertTrue ( new LogAdapter ( "N/A", mockConfigThread ( ) ). isInfoEnabled ( ) )
16122	assertEquals ( 2, exampleTest. objectUnderTest. collectionOfCollaborators. size ( ) )
16123	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5, 6 ) ) )
16124	assertEquals ( 5, map. size ( ) )
16125	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 1, warnings. size ( ) )
16126	assertTrue ( rootDAO. existsDatabase ( DB_NAME ) )
16127	assertEquals ( "select entity_0 from Entity entity_0 where entity_0.code in ( select entity_1.code from Entity entity_1 )", select. getQuery ( ) )
16128	assertThat ( problems. size ( ), is ( 0 ) )
16129	assertEquals ( 10, count )
16130	assertEquals ( "", result )
16131	assertThat ( output. toString ( ), is ( "Error: unable to connect to the database.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database.\\n" + "This is a database.\\n" + "This is a database.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database error.\\n" + "This is a database.\\n" + "This is a database.\\n" + "This is a database.\\n" + "This is a database.\\n" + "This is a database
16132	Assert. assertEquals ( expect_sql, sql )
16133	assertThat ( cy. format ( ), is ( "2016-01-01" ) )
16134	assertEquals ( 0.0001, r, 0.0001 )
16135	assertThat ( out. toPlainString ( ), startsWith ( "0.05000000" ) )
16136	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC, ScopePathType. ACTIVITIES_READ_LIMITED, ScopePathType. AFFILIATIONS_READ_LIMITED, ScopePathType. FUNDING_READ_LIMITED, ScopePathType. ORCID_PATENTS_READ_LIMITED, ScopePathType. PEER_REVIEW_READ_LIMITED, ScopePathType. ORCID_WORKS_READ_LIMITED, ScopePathType. ORCID_BIO_READ_LIMITED, ScopePathType. PERSON_READ_LIMITED, ScopePathType. PERSON_READ_LIMITED, ScopePathType. READ_LIMITED, ScopePathType. ACTIVITIES_READ_LIMITED, ScopePathType. AFFILIATIONS_READ_LIMITED, ScopePathType. FUNDING_READ_LIMITED, ScopePathType. PERSON_READ_LIMITED, ScopePathType. ACTIVITIES_READ_LIMITED, ScopePathType. PERSON_READ_LIMITED, ScopePathType. READ_PUBLIC )
16137	assertEquals ( 4, actualEntries. size ( ) )
16138	assertNotNull ( methodInjectable. getInjectionTarget ( ) )
16139	assertEquals ( "OFF", level. toString ( ) )
16140	assertThatWritableIs ( false )
16141	assertTrue ( propertiesMatch ( dataFieldOriginal, dataFieldCopy ) )
16142	assertEquals ( test, mockTopicMapper. deleteByPrimaryKey ( id ) )
16143	JSONAssert. assertEquals ( expected, flowsJson, false )
16144	Assert. fail ( "InstanceNotFoundException expected" )
16145	assertEquals ( 5, firehoseItemCount )
16146	assertThat ( wrapped, is ( NoPrimeFacesPagedDataModel. class ) )
16147	assertNull ( "principal should not be found", principal )
16148	assertEquals ( 2, totalNumberOfLines )
16149	assertThat ( PlainTimestamp. of ( date, time ). getCalendarDate ( ), is ( date ) )
16150	assertEquals ( expectedKeys, globalTags. keySet ( ) )
16151	assertEquals ( "Value {0{1}", result )
16152	Assert. assertEquals ( "Incorrect condition", "((WTextField=\\"1\\" or WTextArea=\\"2\\" and WDropdown=\\"3\\" or WMultiSelect=\\"4\\"))", builder. build ( ). toString ( ) )
16153	assertEquals ( "1 minute", repairStatus. getDuration ( ) )
16154	assertEquals ( CONSTRUCOR_DECLARATION, sink. result ( ) )
16155	assertEquals ( cls. getNNF ( ), nnf )
16156	assertEquals ( ImmutableList. of ( idfac. createQuotedID ( "student", "student" ), idfac. createQuotedID ( "student", "student", "student" ), idfac. createQuotedID ( "student", "student", "student" ), idfac. createQuotedID ( "student", "student", "student" ), idfac. createQuotedID ( "student", "student", "student", "student", "student", "student", "student" ), idfac. createQuotedID ( "student", "student", "student", "student" ), idfac. createQuotedID ( "student", "student", "student" ), res )
16157	assertEquals ( threadName, doAsync. get ( ) )
16158	Assert. assertEquals ( 0, doc. getFirstPage ( ). getResources ( ). getPdfObject ( ). size ( ) )
16159	assertEquals ( "1.3.0", vers )
16160	assertEquals ( expectedValues, actualValues )
16161	assertEquals ( 10000, connStr )
16162	assertNotNull ( entryRelationship )
16163	assertTrue ( ref. requires ( ) )
16164	assertGenerators ( result, generator. getClass ( ), AnInt. class )
16165	assertEquals ( nrOfProcessInstances * 100, COUNTER. get ( ) )
16166	assertEquals ( "ODataDemo.ODataDemoWrongFunctionImport", fullyQualifiedFunctionImportName )
16167	assertEquals ( "9208675309", parsedTelePhoneNumber )
16168	assertEquals ( OperatingSystem. MAC_OSX, OperatingSystem. get ( ) )
16169	Assert. areEqual ( 1, rownum, "数据验证" )
16170	assertEquals ( "Expected 0 results!", 0, n )
16171	assertThat ( terminologyService. isSubclassOf ( c1, c2 ), is ( false ) )
16172	assertTrue ( fortyNinersSuck. after ( superBowlXLV ) )
16173	assertTrue ( output. startsWith ( "<!DOCTYPE html PUBLIC \\"-//W3C//DTD XHTML 1.0 Strict//EN\\" \\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\">" ) )
16174	assertEquals ( RequestParameter. create ( false ), validator. isValidCollection ( Arrays. asList ( "false" ) ) )
16175	assertEquals ( r1, r2 )
16176	assertTrue ( skillConstraint. fulfilled ( insertionContext ) )
16177	assertThat ( result, is ( false ) )
16178	assertThat ( isTransactionRelated, is ( false ) )
16179	assertMockEndpointsSatisfied ( )
16180	assertTrue ( prefs. matches ( t ) )
16181	Assert. assertArrayEquals ( expected, actualNames )
16182	Assert. assertTrue ( t instanceof RuntimeException )
16183	assertThat ( result. _id, equalTo ( object. _id ) )
16184	Assert. assertEquals ( "Value is incorrect", map ( OFFSET_0_STRING, "test" ), value )
16185	assertEquals ( Long. valueOf ( 1 ), printer. timestamp ( ) )
16186	assertResultSet ( res )
16187	assertEquals ( x, z )
16188	assertTrue ( mockedProvider. getExternal ( ) )
16189	assertEquals ( violations. size ( ), 0 )
16190	assertNotNull ( Worker. fetcher ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "WKXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
16191	assertEquals ( expResult, result )
16192	Assert. fail ( "Should throw IllegalStateException" )
16193	Assert. assertEquals ( "liangpengyv@fir.im", token )
16194	assertEquals ( 1.2, cs. getX ( 0 ), TOL )
16195	Assert. assertEquals ( 2, countNumberOfOccurence ( fullyQualifiedName, "adm1Name" ) )
16196	assertEquals ( ( short ) 3, mutNum. shortValue ( ) )
16197	assertEquals ( response, webRespose )
16198	assertTrue ( latch. await ( 4, SECONDS ) )
16199	assertEquals ( "test-app-1/src/test/resources/public-java/output/test-app-1.class", of )
16200	assertEquals ( "110", converter. getAsString ( testEntity ) )
16201	assertCapturedMessage ( eventMessage ( "sess1", "/topic", "eventMessage" ) )
16202	assertEquals ( 0, provenanceRepo. getEvents ( 0L, 100000 ). size ( ) )
16203	assertEquals ( SimpleScore. of ( 42 ), scoreDirector. calculateScore ( ) )
16204	assertEquals ( "bar", objectColumn. getSortProperty ( ) )
16205	Assert. assertEquals ( "�����������������������������������������������������������������������������������
16206	assertEquals ( "blob mapper serialization is wrong", expected, actual )
16207	assertOut ( "with (a)\\n  b;" )
16208	assertEquals ( "A", mat. group ( ) )
16209	assertEquals ( "Greetings Tenka to Rest endpoint.", response. body ( ). asString ( ) )
16210	assertTrue ( yt. hasCaptionsInLanguage ( "en" ) )
16211	assertTrue ( "Random braces - three", "Paired { begin an escaped sequence". equals ( result ) )
16212	Assert. assertTrue ( children. size ( ) > 0 )
16213	assertEquals ( "1 啶�啶� 啶�啷�", t. format ( then ) )
16214	Assert. assertEquals ( Integer. class, ( ( ParameterizedType ) con. getGenericParameterTypes ( ) [ 0 ] ). getActualTypeArguments ( ) [ 0 ] )
16215	Assert. assertEquals ( "The split should be skipped", 0, Files. size ( reconstructed ) )
16216	assertEquals ( Status. ERROR, jxm. getStatus ( ) )
16217	assertTrue ( ParseUtil. paramClassesMatch ( true, memberClassList, sigclassList, true ) )
16218	Assert. assertTrue ( uniqueUnits. size ( ) > 0 )
16219	assertEquals ( 200, response. getStatusCode ( ) )
16220	assertEquals ( s_expected_1, Hex. toHexString ( item1. getData ( ) ). toUpperCase ( ) )
16221	assertEquals ( "239 122 87 154 40 7 171 115 207 12 130 71 155 254 129 237", visualized )
16222	assertNull ( result )
16223	assertEquals ( ResultType. ERROR, result. getType ( ) )
16224	Assert. assertTrue ( this. ontologyServiceResult == 0 )
16225	assertEquals ( "eins", processInstance. getVariable ( "SampleTask.sampleValues" ) )
16226	assertTrue ( abc. size ( ) == 3 )
16227	assertMockEndpointsSatisfied ( )
16228	assertEquals ( wrappedTemplate + " BIND (? )", test. build ( ) )
16229	assertEquals ( parent, fixture. relativize ( parent ) )
16230	assertThat ( target, notNullValue ( ) )
16231	assertEquals ( cds, mRNAPos )
16232	assertNull ( myTestInstance. restart ( b ) )
16233	assertThat ( isPresent, is ( false ) )
16234	assertEquals ( data, change. getChangeData ( ) )
16235	assertFalse ( sortable )
16236	assertEquals ( response. getStatus ( ), Response. Status. NOT_FOUND. getStatusCode ( ) )
16237	Assert. assertEquals ( 2, testedStore. getFeatureCount ( ) )
16238	assertEquals ( consoleResult, "tajo.rootdir" )
16239	assertTrue ( "Credential store should be created", ops. exists ( TEST_CREDENTIAL_STORE_ADDRESS ) )
16240	assertEquals ( addonCount + 1, registry. getAddons ( ). size ( ) )
16241	assertEquals ( 2, c. getRowCount ( ) )
16242	assertions. containsOnly ( )
16243	assertTrue ( isDisabled )
16244	this. assertEquals ( instance ( ), response )
16245	Assert. assertEquals ( "some [img]text", formatter. format ( "some [img]text", defaultOptions ( ) ) )
16246	assertNotNull ( SigningKey. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "SKXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
16247	assertEquals ( "Expected 0 results!", 0, n )
16248	assertFalse ( entry. containsAttribute ( "administrativeRole" ) )
16249	assertEquals ( "application/json;odata.metadata=minimal", request. getResponseContentType ( ). toContentTypeString ( ) )
16250	assertEquals ( expectedDescription, description )
16251	Assert. assertEquals ( "DB number is not correct", 2, ( int ) redisURI. select ( ) )
16252	assertEquals ( in. value, out. value )
16253	assertTrue ( output. contains ( "<!DOCTYPE html PUBLIC \\"-//W3C//DTD XHTML Basic 1.1//EN\\">" ) )
16254	assertNull ( getFixture ( ). review ( null, master, slave ) )
16255	assertArrayEquals ( TEST_DATA, actualBytes )
16256	assertEquals ( Types. ARRAY, jmp. getType ( "array" ) )
16257	maps. assertHasEntrySatisfying ( info, actual, null, isNull )
16258	assertPutResult ( ResponseCode. MESSAGE_ILLEGAL )
16259	assertThat ( email. getSubject ( ), is ( "Error Mail" ) )
16260	assertEquals ( text, adapter. getStringAt ( 2, 2 ) )
16261	Assert. assertEquals ( 300, li. getValue ( 50 ), 1e-5 )
16262	assertArrayEquals ( array1, array )
16263	assertThat ( "A-Z", matches ( exp ) )
16264	assertDataFrame ( frame, streamId, true, Unpooled. EMPTY_BUFFER )
16265	Assert. assertEquals ( result, collector. output. get ( Utils. DEFAULT_STREAM_ID ) )
16266	assertEquals ( 83, x. value )
16267	assertThatLineHasBeenDisplayed ( "Nazwa: filename.txt" )
16268	Assert. assertEquals ( "Test of �械蟹 蟹邪谐谢邪胁懈�", actualResult )
16269	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Stream>" + "<genericTag key=\\"value\\">" + "someText" + "</genericTag>" + "</Stream>", elem. toXml ( ) )
16270	assertTrue ( impl. getStatus ( ) == BreakerStatus. BYPASS )
16271	assertNotNull ( fixture )
16272	Assert. assertTrue ( e. getDateChanged ( ). getTime ( ). getTime ( ). getTime ( ). getTime ( ). getTime ( ). getTime ( ). getTime ( ). getTime ( ). getTime ( ). getTime ( ) == 1000 )
16273	assertEquals ( localeImportHandler. loadPropertiesByXml ( repFileBundleMock ). size ( ), 0 )
16274	assertNotNull ( unlockKey )
16275	test. assertResult ( )
16276	assertThat ( z_F4JInternalParseUtil. getPrimitiveLong ( "long", json ), is ( - 1l ) )
16277	assertEqualLines ( "invalid renaming", getFileContents ( getOutputTestFileName ( type ) ), cu. getSource ( ) )
16278	assertThat ( testDataSourcePath. getInstanciatedPath ( "%USERDIR%/simple-semicolon-data.csv" ), is ( "/home/john/work/simple-semicolon-data.csv" ) )
16279	assertSame ( node, transform ( node ) )
16280	assertEquals ( fileRequest. getBytes ( ) [ ( int ) Files. size ( file ) - 1 ], gzRequest. getByte ( Files. size ( file ) - 1 ) )
16281	assertArrayEquals ( new Class [ ] { String. class }, c. getParameterTypes ( ) )
16282	assertEquals ( expResult, result )
16283	assertEquals ( asStatementList ( "\\"foo;\\\\; b  a r\\\\\\"\\"'foo;\\\\; \\\\'b  a r\\\\\\"'''\\"foxlov  e \\"" ), splitter. split ( expression ) )
16284	assertEquals ( "http://localhost/?foo=test", uri. toString ( ) )
16285	assertNotNull ( ShortCode. fetcher ( "KSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "SCXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
16286	Assert. assertEquals ( 403, response. getStatus ( ) )
16287	assertEquals ( 135, clonedAttr. getAnnotations ( ). size ( ) )
16288	assertEquals ( body. toString ( ), "hello" )
16289	assertTrue ( permitted )
16290	assertEquals ( Integer. MAX_VALUE, victim. readInt ( ) )
16291	assertEquals ( "Fragment selectors should be applied", selector. toString ( ), queriedAnnotation. getSelector ( ). toString ( ) )
16292	Assert. assertSame ( bitmap, ic. getBitmap ( ) )
16293	assertXMLEqual ( "Invalid WSDL returned", expectedDocument, result )
16294	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
16295	assertNotNull ( sourceLoader )
16296	assertEquals ( 4, count )
16297	assertEquals ( identifier1, "test" )
16298	assertObjectEquals ( "[1,true,{f:'a'}]", p. run ( bs, in, sa ) )
16299	assertThat ( underTest. shouldReportNoModifications ( artifacts ), is ( false ) )
16300	assertEquals ( Arrays. asList ( 5 ), procedureExecution. getOutputParameterValues ( ) )
16301	assertTrue ( found )
16302	assertTrue ( s1. equals ( s2 ) )
16303	assertArrayEquals ( d. toString ( ). getBytes ( ), d. asTextBytes ( ) )
16304	assertFalse ( rv. isEmpty ( ) )
16305	assertRequest ( "POST", "Call/%s/Play/", callId )
16306	assertThat ( ValidatorUtil. formatMessages ( validate ), validate. size ( ), is ( 1 ) )
16307	Assert. assertEquals ( v1, KCVSUtil. get ( store [ 0 ], k, c1, tx [ 0 ] [ 0 ] ) )
16308	assertEquals ( 1, session. from ( $ ( noteVar ) ). where ( where ). list ( $ ( noteVar ) ). size ( ) )
16309	assertNotNull ( result )
16310	assertEquals ( "Spacer should have been pushed down", oldTop + 100, newTop )
16311	assertFalse ( Files. isHidden ( path ) )
16312	assertEquals ( Math. sqrt ( 3 ), p1. distance ( r ), PRECISION )
16313	assertThat ( event, is ( expected ) )
16314	assertEquals ( "public field value", objmap. get ( "field_public" ) )
16315	assertEquals ( "#23C48E", widget. getColor ( ) )
16316	assertEquals ( expected, actual )
16317	assertEquals ( "Value Descriptor id not retured as expected", TEST_ID, controller. updateById ( TEST_ID ) )
16318	Assert. assertNotNull ( node )
16319	assertEquals ( p1, p2 )
16320	assertThat ( CompUInt128. extractValue ( actual ), Is. is ( expected ) )
16321	assertEquals ( "@Generated(type=com.fasterxml.jackson.core.types.SimpleSerializerConfig.DEFAULT,arrayField=[])", writer. toString ( ) )
16322	assertTrue ( correct. get ( namedEntity. getLabel ( ) ). equals ( disambiguatedURL ) )
16323	assertEquals ( expected, actual )
16324	Assert. assertThat ( e. getMessage ( ), containsString ( expected ) )
16325	assertEquals ( testStr, dpidStr )
16326	assertEquals ( "/lincoln/orders/24", path. build ( map ) )
16327	assertThat ( sheet. sheetName, is ( "���������������������������������������������������������������������������������
16328	assertEquals ( expected, actual )
16329	Assert. assertEquals ( warning, result. getFirstHeader ( "Warning" ). getValue ( ) )
16330	context. assertTrue ( gotit. get ( ) )
16331	assertTrue ( count > 0 )
16332	assertTrue (! _event. hasStartTime ( ) )
16333	assertEquals ( expected, actualQuery )
16334	assertEquals ( 0.5, Capacity. divide ( cap1, cap2 ), 0.001 )
16335	assertSeen ( visible )
16336	assertThat ( databaseHelper. lookupObject ( ObjectType. PERSON, "PP1-TEST" ). containsAttribute ( AttributeType. CHANGED ), is ( false ) )
16337	assertCapacityUnitEqual ( cu, new CapacityUnit ( 1, 0 ) )
16338	assertEquals ( new Date ( ), result )
16339	runner. assertAllFlowFilesTransferred ( PutHiveQL. REL_RETRY, 1 )
16340	assertEquals ( mockJaxbList, response )
16341	assertEquals ( expResult, result, 0.000001 )
16342	assertThat ( result. getValueForAttribute ( AttributeType. ROUTE ). toString ( ), is ( "212.166.64.0/19" ) )
16343	assertEquals ( fileNames, message )
16344	assertEquals ( "Values not equal: " + d, d. get ( new CellIndex ( 1, 1 ) ), 1.0, d. get ( new CellIndex ( 1, 1 ) ), 0.0 )
16345	assertNull ( encodedText. decode ( ) )
16346	assertNotNull ( "Social Profile list is null", profiles )
16347	assertThat ( appl, is ( JavaSignatureComparator. MATCH_UNBOXING ) )
16348	assertThat ( findFeature ( features, "StatusNotification" ), is ( instanceOf ( StatusNotificationFeature. class ) ) )
16349	assertThat ( isEquals, is ( true ) )
16350	assertTrue ( "Should have written the correct number of resources", dataBroker. getDataManager ( ). get ( DEEP_WILDCARDED_PATH ). size ( ) == 2 )
16351	assertEquals ( userKey1, userKey2 )
16352	assertThat ( reporters, is ( not ( equalTo ( reporters2 ) ) ) )
16353	assertThat ( option, is ( new IntOption ( ( int ) 100 ) ) )
16354	Assert. fail ( "Caught unexpected exception: " + e. getClass ( ). getSimpleName ( ) )
16355	assertEquals ( caseDefinition. getKey ( ), activity. getKey ( ) )
16356	assertEquals ( test, "http://www.taverna.com/services/rest/services/rest/services/test/issuetracker" )
16357	assertEquals ( expected, user )
16358	assertEquals ( child, mStore. getChild ( mRoot, child. getName ( ) ). get ( ) )
16359	Assert. assertEquals ( shifted. getPos ( ), 89 )
16360	assertNotNull ( result )
16361	assertEquals ( expectedQuery, actualQuery )
16362	assertThat ( description. toString ( ), is ( "a stage that completed to a value that was <2>" ) )
16363	assertEquals ( expect, src )
16364	assertTrue ( workTree. contains ( fi ) )
16365	assertEquals ( expectedQuery, actualQuery )
16366	assertEquals ( maxUpdates, files. length )
16367	assertMockEndpointsSatisfied ( )
16368	assertEquals ( expected, actual )
16369	assertNoProblems ( )
16370	assertFiles ( "audit", "audit.1970-01-7", "audit.1970-02-7" )
16371	assertions. containsSequence ( sequence )
16372	editor. assertProblems ( "bogus", "bogus", "server:\\n" + "  port: bork\\n" + "logging.level.org.springframework.kafka.listener.[KafkaMessageListenerContainer$ListenerConsumer]: INFO\\n" + "bogus: bad" )
16373	assertExpectedResponse ( r, Response. Status. OK. getStatusCode ( ), Boolean. FALSE. toString ( ) )
16374	assertNotNull ( result )
16375	assertNotNull ( header )
16376	assertThat ( rendered, is ( test [ 1 ] ) )
16377	Assert. assertNotNull ( dbRangerPolicyList )
16378	assertEquals ( 0, cap. get ( 0 ) )
16379	assertEquals ( obj. getNetName ( ), netName )
16380	assertEquals ( map, map2 )
16381	assertThat ( foundResources, contains ( p1id. getValue ( ) ) )
16382	assertTrue ( future. isCancelled ( ) )
16383	assertEquals ( "dump is complete", dumpException )
16384	assertEquals ( person, found )
16385	assertEquals ( j * ( long ) TIME - 1, fieldValueGenerator. generatePreviousValue ( value ) )
16386	assertEquals ( 0, messageLatch. getCount ( ) )
16387	assertTrue ( m. get ( "yes" ) )
16388	assertEquals ( "13.05.2014 23:52:28", dateAsString )
16389	Assert. assertEquals ( simpleModel, models. get ( SIMPLE_MODEL ) )
16390	assertEquals ( cp. snapshotState ( state, 0, 0 ), serialized )
16391	assertThat ( query. count ( ), is ( 3L ) )
16392	assertEquals ( expected, testCost, 0.01 )
16393	assertTrue ( contextMapRef. get ( ). isEmpty ( ) )
16394	assertEquals ( expected, query. export ( ) )
16395	assertMessage ( "<type>FORWARDED</type>", 4 )
16396	assertEquals ( 200, output. getStatusCode ( ) )
16397	assertTrue ( entity. getId ( ) > 0 && entity. getDistanceFromEarth ( ) == 2400000000000000L )
16398	assertEquals ( expectedQuery, actualQuery )
16399	assertTrue ( result )
16400	Assert. assertFalse ( StraightOrder. is ( p1, p2, p3, IntegerNumberSystem. getInstance ( ) ) )
16401	assertThat ( any. contains ( DAY_OF_QUARTER ), is ( true ) )
16402	assertEquals ( 255, result. getVoxel ( 0, 0, 0,.01 ),.01 )
16403	assertEquals ( "\\"tableName\\"", database. escapeTableName ( "reservedWord", null, "tableName" ) )
16404	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( 5L * 24L * 60L * 60L * 1000L ), mapper. readBitemporalDate ( columns, "ttFrom" ) )
16405	assertExplodeContent ( TEST_DEPLOYMENT_CONTENT )
16406	Assert. assertTrue ( optimum. getValue ( ) > 0.1 )
16407	assertTrue ( configuration. buildDownstream )
16408	assertPutFails ( occurrence, OntopiaRestErrors. MANDATORY_OBJECT_IS_NULL )
16409	Assert. assertEquals ( "{\\"statusCode\\":401,\\"code\\":\\"ERR10001\\",\\"message\\":\\"AUTH_TOKEN_EXPIRED\\",\\"description\\":\\"Jwt token in authorization header expired\\"}", status. toString ( ) )
16410	assertEquals ( "An &#128512;awesome &#128515;string with a few &#128521;emojis!", result )
16411	assertLog ( Log. VERBOSE, "test trace argument argument2" )
16412	assertEquals ( Months. of ( - 3 ), test12. dividedBy ( - 3 ) )
16413	assertEquals ( "value", requestImpl. cookie ( "key" ). getValue ( ) )
16414	assertTrue ( "scanResponseTable did not return true", true )
16415	assertEquals ( r. length, 0 )
16416	assertFalse ( result )
16417	assertEquals ( "http://example.com/test/headSub", uri. toString ( ) )
16418	assertEquals ( exp, arr2 )
16419	assertEquals ( expected, output )
16420	Assert. assertEquals ( car, received. getPayload ( ) )
16421	Assert. assertTrue ( ExpectedConditions. textToBePresentInElement ( By. id ( "indexPage" ), "You arrived at index page" ). apply ( driver ) )
16422	assertNotNull ( "missing handler: " + cmd, handler )
16423	assertEquals ( ( short ) 0x8000, result )
16424	assertEquals ( 1, constructors. length )
16425	assertEquals ( new BigDecimal ( "1234.45" ). toBigInteger ( ), bigD. toBigInteger ( ) )
16426	assertEquals ( String. format ( "%sabc%s", FILE_SEPATATOR, FILE_SEPATATOR ), result )
16427	assertEquals ( androidAppMetadata, ANDROID_APP_NO_DISPLAY_NAME_METADATA )
16428	Assert. assertEquals ( dataString, new String ( read ) )
16429	assertEquals ( true, result [ 0 ] )
16430	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
16431	assertEquals ( 1, count )
16432	assertThat ( subject. getResponseHeader ( ), is ( "Date/Time: Sun Mar 3 12:55:00 2013\\n" ) )
16433	assertSame ( context, resolver. callerContext ( ) )
16434	Assert. assertEquals ( legacyVariantString, variant. toLegacyString ( ) )
16435	assertThat ( target. parse ( ), is ( false ) )
16436	Assert. assertTrue ( errorMessage, checksReferencedInConfig. contains ( check ) )
16437	assertTrue ( "File handler should be created", ops. exists ( TEST_FILE_HANDLER_ADDRESS ) )
16438	assertEquals ( 4, fixture. mark ( ) )
16439	assertEquals ( "0123456789", builder. reverse ( ) )
16440	assertEquals ( 1, builder. getParallelism ( ) )
16441	assertSame ( fieldVar, result )
16442	Assert. assertTrue ( infEx. getCause ( ) instanceof FaultException )
16443	assertEquals ( expected, actualQuery )
16444	assertArrayEquals ( new Object [ ] { 5, "five" }, ( Object [ ] ) execution. next ( ). get ( 0 ) )
16445	assertThat ( checkFailed, is ( true ) )
16446	assertSame ( val, ConfigUtils. getMap ( config, null, "no-object", "some-map" ) )
16447	assertTrue ( r. isLastPublishedVersionPublic ( ) )
16448	assertEquals ( 5, httpIndexLoader. getDataCount ( ) )
16449	assertEquals ( "z", newVal. val. get ( ) )
16450	assertEquals ( "test", read. getString ( db. DATA. VALUE ) )
16451	Assert. fail ( "server-group has unrecognized property" )
16452	assertThat ( options. isMonochrome ( ), is ( true ) )
16453	assertEquals ( expResult, result )
16454	assertEquals ( "NaN", sb. toString ( ) )
16455	assertEquals ( 10, all. size ( ) )
16456	Assert. fail ( )
16457	assertThat ( db. findUserInfo ( orderby, i ). getId ( ), is ( i ) )
16458	assertEquals ( TransformingIterator. class, hibernateHandler. transform ( nativeQuery, projection ). getClass ( ) )
16459	assertEquals ( "This is <span class=\\"sparta\\">Sparta</span>\\n", renderer. render ( document ) )
16460	given ( ). when ( ). get ( resourcePrefix ). then ( ). statusCode ( 200 ). assertThat ( )
16461	assertTrue ( isReady )
16462	assertEquals ( "All threads were set", nrOfValueThreads, getActThreads ( ) )
16463	assertEquals ( Config. DEFAULTS, properties )
16464	assertTrue ( entity. isValid ( ) )
16465	assertResponseContainsModel ( "<img class=\\"componentIcon\\" src=\\"modelregistry/api/componenticon\\"/> error" )
16466	assertArrayEquals ( uncompressed, data )
16467	assertEquals ( "Rooted Android Data Collector", testResult )
16468	assertSame ( cause, CRestException. handle ( e ) )
16469	assertTrue ( result )
16470	Assert. assertEquals ( TxStatusMediaType. TX_CDELAY, content )
16471	assertThat ( delegate. getRight ( ), is ( multiplier ) )
16472	this. assertGet ( "servicetemplates/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fservicetemplates%252Ffruits/servicetemplates/http%253A%252Fwinery.opentosca.org%252Ftest%252Fservicetemplates%252Ffruits/servicetemplates/", "entitytemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates/servicetemplates
16473	assertEquals ( mp. getCount ( ), 2 )
16474	Assert. assertTrue ( new File ( tartest, "tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tartest/tart/tart/tart/tart/tart/tart/tart/tart/tart/tart/tart/
16475	assertEquals ( 0, exporter. getExportManifest ( ). getMetadata ( ). size ( ) )
16476	Assert. assertEquals ( boltSpec, deserializedSpec )
16477	arrays. assertContainsOnly ( description, new byte [ 1 ], new byte [ 0 ] )
16478	assertions. isNotLessThan ( expected )
16479	assertNotNull ( "Social Friends (JSON STRING)", friends )
16480	assertEquals ( "%F0%9F%98%83", Encoder. encode ( s ) )
16481	assertTrue ( inStatus. isDirectory ( ) && outStatus. isDirectory ( ) )
16482	assertEquals ( input, nodeToStringTransformer. transform ( ) )
16483	assertEquals ( windowSize, determiner. windowSize )
16484	assertNotNull ( "Messages are not null", messages )
16485	assertEquals ( schedulingIterations * noOfAlerts, list. size ( ) )
16486	Assert. assertFalse ( GeneralUtilities. safeEquals ( zero, null ) )
16487	assertSame ( sseq, manager. getSource ( message, inSid ) )
16488	Assert. assertEquals ( deserializedSpec. size ( ), sds. size ( ) )
16489	assertEquals ( ( short ) 8, ( short ) result. getShortWrapperValue ( ) )
16490	assertThat ( token. getType ( ), is ( PCRELexer. HorizontalWhiteSpace ) )
16491	assertEquals ( "http://example.com:signed:0:0:owner:0:0:0:0", builder. build ( ) )
16492	Assert. assertFalse ( isTmp )
16493	Assert. assertTrue ( out. contains ( "advanced custom handler:CustomException" ) )
16494	Assert. assertEquals ( chave, infoEventoManifestacaoDestinatario. getChave ( ) )
16495	assertThat ( actual, contains ( likeVertex ( ). withTimId ( "id3" ), likeVertex ( ). withTimId ( "id2" ) ) )
16496	assertThat ( result, contains ( 4, 4, 4, 3 ) )
16497	assertEquals ( 3100, timeout )
16498	assertFalse ( actualResult )
16499	assertEquals ( "wrong result", new BigDecimal ( "24" ), expression. getValue ( ). asNumber ( ) )
16500	assertNotSame ( result, arg )
16501	assertEquals ( "bar", result )
16502	TestCase. assertTrue ( result )
16503	assertEquals ( "aTestString", classUnderTest. getName ( ) )
16504	assertEquals ( 2, result. size ( ) )
16505	assertEquals ( 123, ssdbClient. incr ( "counter" ) )
16506	assertTrue ( sink. getInvalidConfiguration ( ) )
16507	assertEquals ( p1. getFirst ( ). subtract ( p2. getFirst ( ) ), p1. getSecond ( ). subtract ( p2. getSecond ( ) ), 0d )
16508	assertEquals ( ZonedDateTime. parse ( "2017-10-09T09:00-07:00" ), getNextExecutionTime ( myCron, time ) )
16509	assertEquals ( animal, deserialized )
16510	assertEquals ( 2, searcher. search ( q, 100 ). totalHits )
16511	assertNotNull ( "The connection exists", stubConnectionHandle. getConnection ( CLUSTER_NAME ) )
16512	assertThat ( rendered, is ( test [ 1 ] ) )
16513	assertEquals ( EnumField. Size. SMALL, entity. getSize ( ) )
16514	assertEquals ( result1, result2 )
16515	assertNotNull ( basicAccessAuthenticator. authenticate ( request ). get ( ) )
16516	assertThat ( inputStream, notNullValue ( ) )
16517	assertEquals ( 1, messageLatch. getCount ( ) )
16518	assertTrue ( "Button click should be logged", logContainsText ( "Button clicked!" ) )
16519	assertEquals ( "{\\"code\\":\\"public static void main(String[] args) {\\"}\\"", actualContent )
16520	assertNotNull ( item )
16521	assertNull ( identifiable )
16522	assertNotNull ( SyncList. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
16523	Assert. assertSame ( currentUser, currentUser2 )
16524	assertTrue ( member. isPresent ( ) )
16525	assertEquals ( forwardBlz, manager. getRule ( 0 ) )
16526	assertEquals ( "1", mustache. render ( Json. createReader ( new StringReader ( "[\\"1\\",true,null]" ) ). read ( ) ) )
16527	assertEquals ( "azureblob", ConnectionStringUtils. blobContainer ( connectionString ) )
16528	assertThat ( errors, not ( hasFieldErrors ( "name" ) ) )
16529	assertTrue ( entity. isValid ( ) )
16530	assertEquals ( "012", result. toString ( ) )
16531	assertEquals ( 0, violations. size ( ) )
16532	assertEquals ( "Wrong proxy returned", actual, proxy )
16533	assertEquals ( 200, resp. getStatusLine ( ). getStatusCode ( ) )
16534	assertChangeResultsPage ( changeResultsPage )
16535	assertEquals ( "https://api-fxtrade.oanda.com/v1/accounts/123456/trades/1800805337", service. getTradeForAccountUrl ( tradeId, OandaTestConstants. accountId ) )
16536	assertArrayEquals ( randBytes1, randBytes2 )
16537	assertThat ( list. size ( ), is ( not ( 0 ) ) )
16538	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5 ) ) )
16539	assertEquals ( 0, engineRule. getRuntimeService ( ). createVariableInstanceQuery ( ). count ( ) )
16540	assertThat ( result. size ( ), is ( 5 ) )
16541	assertThat ( log. toString ( ), containsString ( "Project version: out-of-the-box" ) )
16542	assertFalse ( validator. validate ( connectionLimits, PUT ). passedValidation ( ) )
16543	Assert. assertEquals ( "0", result. getReturnCode ( ) )
16544	Assert. assertEquals ( expected, quickTypeDependencyList )
16545	assertTrue ( hv >= 0.0 )
16546	assertArrayEquals ( refar, d. getResult ( ) )
16547	assertFalse ( instance. isBuilding ( event ) )
16548	assertBoard ( "�尖�尖�尖��\\n" + "��x��1��\\n" + "��x��1��\\n" + "��x���1��\\n" + "�尖�尖�尖��x ��\\n" + "�尖�尖�尖�尖��\\n" )
16549	assertEquals ( Arrays. asList ( null, NoteType. A, NoteType. B, NoteType. TYPE1 ), session. from ( $ ( n ) ). orderBy ( $ ( n. getType ( ) ). asc ( ) ). list ( $ ( n. getType ( ) ) ) )
16550	assertEquals ( "SELECT TO_DATE(TEST_HIST.CREATED_AT) DT, " + "COUNT(TEST_HIST.ID) NUM_QUERIES " + "FROM H2.PUBLIC.TEST_HIST " + "JOIN H2.PUBLIC.UINFO " + "ON TEST_HIST.QBOL_USER_ID = UINFO.QU_ID INNER JOIN H2.PUBLIC.ACC " + "ON UINFO.A_ID = ACC.ID " + "WHERE ACC.CUSTOMER_NAME LIKE 'amogh' AND " + "(TO_DATE(TEST_HIST.CREATED_AT) >= " + "DATE_SUB(FROM_UNIXTIME(UNIX_TIMESTAMP()), 30) " + "AND TEST_HIST.COMMAND_TYPE = 'HiveCommand' AND " + "(TO_DATE(TEST_HIST.CREATED_AT) >= " + "DATE_SUB(FROM_UNIXTIME(UNIX_TIMESTAMP()), 30) " + "AND TEST_HIST.COMMAND_TYPE = 'HiveCommand' AND " + "(TO_DATE(TEST_HIST.CREATED_AT) >=
16551	Assert. assertEquals ( 1, ret. getId ( ) )
16552	assertEquals ( expectedRemoteCallReturn, testRemoteCallReturn )
16553	assertEquals ( "subscriptionId1", app. getSubscriptionId ( ) )
16554	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
16555	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
16556	Assert. assertArrayEquals ( convert ( expected ), solution )
16557	assertEquals ( a, b )
16558	assertEquals ( 0, found )
16559	assertEquals ( "test", doc. getContentField ( "out" ) )
16560	assertTrue ( block. isProofOfWork ( ) )
16561	assertThat ( instance. counter, is ( 1 ) )
16562	assertEquals ( "Required profiles are not equal", "123", new KnopflerfishPlatformBuilderF300T315 ( m_bundleContext, "version" ). getRequiredProfile ( m_platformContext ) )
16563	assertTrue ( Graphene. waitGui ( ). until ( ExpectedConditions. textToBePresentInElementLocated ( By. id ( "message" ), UNAUTHORIZED ) ) )
16564	Assert. assertEquals ( 1, numericValue. intValue ( ) )
16565	Assert. assertEquals ( 0.0, diag. getEntry ( 1, 2 ), Precision. SAFE_MIN )
16566	assertScoreAndParse ( content, null, 6 )
16567	assertEquals ( "SELECT firstname, lastname UNION ALL SELECT a, b", statement. toString ( ) )
16568	assertTrue ( dbStopped )
16569	assertEquals ( "John", book. getTitle ( ) )
16570	assertThat ( result, is ( sameInstance ( primaryKeysRequest ) ) )
16571	Assert. assertEquals ( 2, tweetsByUser. count ( ) )
16572	assertEquals ( 0, argList. size ( ) )
16573	assertThat ( changes, contains ( "s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s10", "s11", "s12", "s13", "s14", "s15", "s16", "s16", "s17", "s18", "s19", "s19", "s20", "s21", "s22", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s23", "s
16574	assertTrue ( rowChange. compareTo ( rowChange2 ) == 0 )
16575	assertEquals ( 5, x )
16576	assertThat ( paginate, is ( not ( nullValue ( ) ) ) )
16577	assertEquals ( actualPrefs. toProperties ( ), prefs )
16578	assertEquals ( expected. getTime ( ), parsedDate. getTime ( ) )
16579	assertThat ( thread. getName ( ), is ( "prefix-test" ) )
16580	Assert. assertThat ( affordance. expand ( ), Matchers. containsString ( "id" ) )
16581	assertTrue ( result. contains ( expectedResult ) )
16582	assertEquals ( "Find by name and device not returning a list with one reading", 1, readings. size ( ) )
16583	assertEquals ( 2, jobCounters. size ( ) )
16584	Assert. assertEquals ( polygon, result. getValue ( ) )
16585	assertTrue ( response. succeeded ( ) )
16586	assertEquals ( 1, count )
16587	Assert. assertEquals ( "/wro4j/wro/path/to/", Context. get ( ). getAggregatedFolderPath ( ) )
16588	UmaTestUtil. assert_ ( authorization )
16589	assertEquals ( expected, actual, 0.0 )
16590	assertThat ( coll, equalTo ( reference ) )
16591	assertNotNull ( url )
16592	assertEquals ( ref. getUri ( ). toString ( ), obj. get ( "uri" ) )
16593	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoVolume ( ). toString ( ) )
16594	Assert. assertNotSame ( "Pass phrases should not match", phrase1, phrase2 )
16595	assertionHelper. assertLocalFileLengthEquals ( "file length does not match", testFileLength, destFile. length ( ) )
16596	assertThat ( meanTaxFactor, equalTo ( TAX_FACTOR ) )
16597	assertEquals ( - 1, list. size ( ) )
16598	assertThat ( result, is ( nullValue ( ) ) )
16599	assertEquals ( "<MongoDbDatastore name=\\"name\\">\\n" + "  <hostname>hostname</hostname>\\n" + "  <database>user</database>\\n" + "  <password>password</password>\\n" + "</MongoDbDatastore>", removeWhitespacesBetweenTags ( externalized. getContent ( ) ) )
16600	assertEquals ( expecting, found )
16601	assertEquals ( "c", result. toString ( ) )
16602	assertThat ( expected, equalTo ( actual ) )
16603	assertEquals ( out. get ( ), Math. ulp ( LARGE_NUM ), 0.0 )
16604	assertThat ( joynrVersionnAnnotation. major ( ), equalTo ( 1 ) )
16605	assertEquals ( parseCalendar ( "20131103-07:45:00", TimeZone. getTimeZone ( "UTC" ) ), dh. getCalendarAfter ( easternTime ) )
16606	assertEquals ( getFailureMessage ( ), assertion, slice )
16607	Assert. assertEquals ( bundle, ref. getBundle ( ) )
16608	assertTrue (! result )
16609	assertEquals ( "Simple{x=foo}", Simple. toString ( ) )
16610	assertEquals ( queries [ i ], explainPlan )
16611	assertTrue ( seq. getNumberOfSubSequences ( ) == 0 )
16612	assertEquals ( "Wrong boundaries", singletonList ( "abcdefghijklmnopqrstuvwxyz" ), boundaries )
16613	assertTrue ( q. contains ( "_sort=,b," ) )
16614	assertEquals ( testString. substring ( 1, 3 ), writer. toString ( ) )
16615	assertEqualHash ( byteBuffer, murmur3a )
16616	assertEquals ( "a4c4d4e4b9b9b9b9b9b9b9b9b9b9b9b9b9b9bbe5426d89dd3", classFile. getHash ( ) )
16617	assertEquals ( count, puts. size ( ) )
16618	BPartnerImportTestHelper. assertSingleBpartnerImported ( ibpartner )
16619	Assert. assertTrue ( "did not get empty set", instances. isEmpty ( ) )
16620	assertEquals ( sum, victim. getSum ( ), EPSILON )
16621	assertSqlCanBeParsedAndDeparsed ( stmt )
16622	assertCommandLineArgs ( "localhost", DEFAULT_PORT, "etc/jmxetric.xml", "multicast", "true", "ProcessName", "SpoofName" )
16623	assertEquals ( "a}\\n", found )
16624	assertMessageAndPath ( constraintViolationCreationContextList. get ( 0 ), message, pathWith ( ). property ( "foo" ). property ( "bar", true, "test", null ). property ( "fubar" ) )
16625	assertEquals ( "SIDTypeNode", testBinaryReaderBuilder. build ( ) )
16626	Assert. fail ( "Should have thrown a RuntimeException" )
16627	assertEquals ( "org.test.Hello2", new ImportsToFQCN ( imports ). resolveFQCN ( "Hello" ) )
16628	assertEquals ( 2d * Math. cos ( Math. E ), e. evaluate ( ), 0d )
16629	assertThat ( rows, is ( 1 ) )
16630	assertEquals ( "Incorrect number of transaction commands", 1, testCommands. size ( ) )
16631	assertThat ( test ( mock. getVerifier ( ), "Hello1", "Hello2", "Hello3" ), hasSize ( 1 ) )
16632	Assert. assertEquals ( expected, Strings. unCapitalizeFirstChar ( data ) )
16633	assertEquals ( obj. toString ( ), "LSAPR_POLICY_AUDIT_EVENTS_INFO{AuditEventCount:0, AuditTime:0, AuditTimeOffset:0, AuditTimeOffset:0, AuditTimeOffset:0, AuditTimeOffset:0, AuditTimeOffset:0, AuditTimeOffset:0, AuditTimeOffset:0, AuditTimeOffset:0, AuditTimeOffset:0, AuditTimeOffset:0, AuditTimeOffset:0, AuditDuration:0, Duration:0, Duration:0}" )
16634	Assert. assertEquals ( threadNum, res. size ( ) )
16635	Assert. assertEquals ( "", expected, actual, 0d )
16636	assertEquals ( LocalDate. of ( 2012, 7, 20 ), test )
16637	assertNull ( "2MB allocation shouldn't be satisfied by LAB.", alloc )
16638	assertTrue ( "Schemas", schemaHomology. schemasMatch ( schema1, schema2, exclusionRegex ) )
16639	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
16640	assertTrue ( "Output bytes are not the expected value", Arrays. equals ( new byte [ ] { 0x30, 0x20, 0x48, 0x45, 0x41, 0x44, 0x0D, 0x31, 0x20, 0x43, 0x48, 0x41, 0x52, 0x20, 0x41, 0x4E, 0x53, 0x45, 0x4C, 0x0D, 0x40, 0x20, 0x75, 0x6E, 0x6D, 0x61, 0x70, 0x61, 0x62, 0x6C, 0x65, 0x20, 0x69, 0x6E, 0x20, 0x69, 0x6C, 0x73, 0x65, 0x6C, 0x0D, 0x30, 0x20, 0x54, 0x52, 0x4C, 0x52, 0x0D }, out. toByteArray ( ) ) )
16641	assertEquals ( clean ( input ), output )
16642	assertNull ( route )
16643	assertThat ( logRecords, containsInfo ( CM_REPLACED ) )
16644	assertEquals ( expected, actual )
16645	assertFalse ( observer. accept ( path ) )
16646	Assert. assertEquals ( OVERRIDING_USERNAME, callIntermediateWhoAmI ( ) )
16647	Assert. assertEquals ( CatalogResponseMessage. INTERNAL_SERVER_ERROR, response. getCode ( ) )
16648	assertions. containsOnly ( values )
16649	assertSame ( op, new OperationBuilder ( op ). build ( ). getOperation ( ) )
16650	assertEquals ( this. multipleCom, result. getAttributes ( ) )
16651	Assert. assertEquals ( Explain. EXPLAIN_TYPE. EXPLAIN, o. explainType )
16652	assertNull ( "There should be no last unfixed alerts", lastUnfixed )
16653	Assert. assertEquals ( 1, n )
16654	assertMessageFound ( goodMessage )
16655	Assert. assertEquals ( idSet. size ( ), 16000 )
16656	assertEquals ( new File ( "file://c:/this/is/a/file.extension" ), result )
16657	assertEquals ( "{\\"version\\":10,\\"schema\\":\\"string\\",\\"id\\":100,\\"id\\":10}", request. toJson ( ) )
16658	Assert. fail ( "Missing source info allowed" )
16659	Assert. assertEquals ( Arrays. asList ( "1", "2" ), res. getValues ( ) )
16660	assertResultSet ( res )
16661	assertEquals ( mockCellWithTags, newCell )
16662	assertTrue ( authenticate ( ) )
16663	assertTrue ( exception. getMessage ( ). contains ( "must be a Collection" ) )
16664	assertEquals ( newValue, globalProperties. getProperty ( DEFAULT_PROPERTY_KEY ) )
16665	Assert. assertEquals ( "/album/" + funeral. getId ( ) + ".test", objectTree. get ( "href" ) )
16666	this. assertVerification ( )
16667	assertEquals ( "Base value is not properly parsed", Long. valueOf ( 3 ), parsed )
16668	assertEquals ( 0.5, comparator. getSimilarity ( cb1. getJCas ( ), cb2. getJCas ( ) ), epsilon )
16669	assertNotNull ( scriptStatement )
16670	assertEquals ( expected, actual )
16671	assertThat ( sampleEntities. getTotalElements ( ), is ( greaterThanOrEqualTo ( 1L ) ) )
16672	assertEquals ( expected, actual )
16673	assertEquals ( P, server. crackPassword ( ) )
16674	assertThat ( userCount, is ( 0 ) )
16675	assertNotNull ( locationManager )
16676	assertThat ( systemMessagesProvider, notNullValue ( ) )
16677	assertEquals ( 2, stack. size ( ) )
16678	assertEquals ( "Column width should be changed", w, table. getColumnCount ( ) )
16679	assertEquals ( encodedSignature, "BQwm1HCz0cjHYbulWMumkhZgyb2dD93uScXmC6Fv8Ik" )
16680	assertEquals ( pp. getValue ( ), new Payload < > ( "hello1" ). getValue ( ) )
16681	assertTrue ( found )
16682	Assert. assertEquals ( result, true )
16683	assertEquals ( moonsBefore - 1, moonsAfter )
16684	assertEquals ( org. drools. core. test. model. Person. Nested1. Nested2. class, resolver. resolveType ( "Person.Nested1.Nested2" ) )
16685	assertThat ( router. parse ( url, HttpMethod. POST, null ). getMethod ( ), is ( equalTo ( method ) ) )
16686	MatrixTestAbstract. assertMatrixEquals ( eI, c )
16687	InterpolationTest. assertArray2dEquals ( test, roundtrip, 0.01f )
16688	Assert. assertEquals ( expectedPorts, EC2NetworkValidator. getPortRangeFromAclEntry ( networkAclEntry ) )
16689	assertFalse ( "The same keys must not match:", key1. equals ( key2 ) )
16690	assertTokens ( Tokens. INT, Tokens. MUL, new IntValueToken ( 44 ) )
16691	assertEquals ( entitiesSet. size ( ) - playerOneBareEntitiesCount, result. size ( ) )
16692	Assert. assertEquals ( ef_logProb, logProb, 0.001 )
16693	assertEquals ( "http://example/s", x )
16694	assertTrue ( ord. isCaseInsensitive ( ) )
16695	assertEquals ( "A B C D E F G H I J K L M N O P", joined )
16696	assertNull ( cm )
16697	assertEquals ( i, result. get ( result. size ( ) - 1 ). longValue ( ) )
16698	assertEquals ( expected, actual )
16699	assertMockEndpointsSatisfied ( )
16700	assertThat ( ( Person ) oie. getValue ( ). getObject ( ), is ( person ) )
16701	assertEquals ( "output stream should be flushed", expectedOutput, outputStream. toString ( ) )
16702	assertTrue ( validator. validate ( EntityNames. SECTION, sectionIds ). equals ( sectionIds ) )
16703	Assert. assertEquals ( "Wrong number of records in join result.", NUM_KEYS * BUILD_VALS_PER_KEY * PROBE_VALS_PER_KEY, numRecordsInJoinResult )
16704	assertThat ( desc. toString ( ), is ( "a value less than <1> or a value greater than <5>" ) )
16705	assertEquals ( someKeyPath, actualPublicKeyCert )
16706	assertThat ( isValid, is ( false ) )
16707	Assert. assertEquals ( "2014:01:01", this. vocabulary. getVersion ( ) )
16708	Assert. assertEquals ( "Hello World!", sc. saySomething ( ) )
16709	Assert. assertNull ( tmp )
16710	assertEquals ( "[[s1, s2], [s3, s4, s5]]", toStringOf ( array ) )
16711	assertEquals ( witnessList, tokenList )
16712	assertNull ( dataset )
16713	assertTrue ( job. getConfiguration ( ). getBoolean ( AvroJob. INPUT_IS_GENERIC, false ) )
16714	Assert. assertTrue ( testMatcher. matches ( examplePath ) )
16715	Assert. assertEquals ( icmsSetado, icms. getIcms90 ( ) )
16716	assertUnderflow ( ( double ) x * ( double ) y, result, x * y )
16717	assertTrue ( filter. matches ( operation, poolInfoMap ) )
16718	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
16719	Assert. assertEquals ( ps1, ps2 )
16720	assertTrue ( "Latch not fired", cdl1. await ( 5000, TimeUnit. MILLISECONDS ) )
16721	assertEquals ( 0, blockers. size ( ) )
16722	floats. assertNotGreaterThan ( description, null, 8f )
16723	assertEquals ( mealCharge * tax * tip, TipUtils. calculateTotal ( mealCharge, tax, tip ), 0.01 )
16724	assertThat ( testOutcome. getTestSteps ( ). get ( 0 ). isApplicable ( ), is ( true ) )
16725	assertFalse ( listOutput. isEmpty ( ) )
16726	assertNotNull ( ksl. getResourceDocument ( new StringBufferInputStream ( xml ) ) )
16727	assertEquals ( 1, list. size ( ) )
16728	Assert. assertEquals ( userId. intValue ( ), 1 )
16729	assertNotNull ( projectionRef )
16730	assertEquals ( 5, client. getIdleConnections ( ) )
16731	assertEquals ( OK. getStatusCode ( ), changes. getStatus ( ) )
16732	Assert. assertTrue ( _c. canConvertTo ( Long. TYPE ) )
16733	assertEquals ( trueConcept. getUuid ( ), ObsResource1_8. getValue ( obs ) )
16734	assertThat ( ( Counter ) c1. delta ( c0 ), is ( new Counter ( 10L ) ) )
16735	assertNotNull ( prorroga. getId ( ) )
16736	assertSame ( a. getClass ( ), a. getClass ( ) )
16737	assertEquals ( actaul, group1 )
16738	assertTrue ( JobUtils. isJobExecutionAbandonable ( jobExecution ) )
16739	assertEquals ( 1, handlerContainer. onUnbindMethodCalled )
16740	assertEquals ( 0, elements. size ( ) )
16741	assertProcessInstanceCompleted ( processInstance )
16742	Assert. assertEquals ( 4, MathArrays. distanceInf ( p1, p2 ) )
16743	assertThat ( job. getIssues ( ), contains ( rogueAi ) )
16744	Assert. assertEquals ( "Password not set", passwordCallback. getPassword ( ), "12345678" )
16745	assertTrue ( closed. await ( 4, SECONDS ) )
16746	assertEquals ( false, result )
16747	assertEquals ( expected, actual )
16748	tester. assertRenderedPage ( page )
16749	assertEquals ( userGroupDao. selectUserGroupByUserGroupId ( "userGroup1" ). size ( ), 2 )
16750	assertEquals ( expected, actual, 0.0 )
16751	assertEquals ( 22, ret )
16752	assertFalse ( AuthzResolver. authorizedInternal ( session, "test_voadmin", Arrays. asList ( createdVo, createdGroup ) ) )
16753	assertEquals ( Long. valueOf ( 1L ), myTestInstance. updateAsync ( doc, update, Durability. ACK ). get ( ) )
16754	assertEquals ( "1", output. toString ( ) )
16755	assertEquals ( TypeInfoFactory. getUnionTypeInfo ( Arrays. asList ( TypeInfoCreator. createBoolean ( ), TypeInfoCreator. createNull ( ) ) ), orcType )
16756	Assert. assertTrue ( result )
16757	Assert. assertThat ( userStore. size ( ), is ( 1 ) )
16758	assertThat ( builder. getPatches ( ), arrayWithSize ( 1, 2, 3 ) )
16759	assertNull ( response )
16760	assertThat ( effect, is ( 2 ) )
16761	assertThat ( output, is ( equalTo ( "dq\\\\\\"a2b\\\\\\"dq\\\\\\"c3b\\\\\\"d2q\\\\\\"de\\\\\\"azv\\\\\\"aeae\\\\"aa\\\\\\"aa'aa\\\\\\"aa'xy" ) ) )
16762	assertEquals ( VendorOptionManager. getInstance ( ). getDefaultVendorOptionVersion ( ), field. getVendorOption ( ) )
16763	Assert. assertTrue ( output. exists ( ) == false )
16764	assertThat ( packet. getNumServers ( ), is ( 2 ) )
16765	Assert. assertNotNull ( new Bean80BindMap2 ( ) )
16766	assertEquals ( "{\\"error\\":{\\"code\\":null,\\"message\\":\\"ErrorMessage\\"},\\"details\\":[]}}", jsonString )
16767	assertEquals ( expectedString, formattedDate )
16768	assertEquals ( "", result )
16769	assertTrue ( result )
16770	assertFalse ( elPresent )
16771	assertArrayEquals ( new String [ ] { "leftChild", "child", "root" }, treeContent )
16772	Assert. assertEquals ( parentConfig. getUserID ( ), result. getUserID ( ) )
16773	assertFalse ( game. isGameOver ( ) )
16774	assertThat ( id. isPresent ( ), is ( true ) )
16775	assertNotNull ( store )
16776	mock. assertIsSatisfied ( )
16777	assertThat ( result, is ( equalTo ( newFile ) ) )
16778	assertNotNull ( result )
16779	assertThatWorkflowInstanceCompletedAfter ( workflowInstanceKey, "end-2" )
16780	assertEquals ( notAfter, clonedCertificate. getNotAfter ( ) )
16781	assertThat ( bodyElement. exists ( ), is ( true ) )
16782	assertExpression ( jc, "foo.bar", Boolean. TRUE )
16783	assertEquals ( 10.555, v, 0 )
16784	assertThat ( output, containsString ( "DICOM instance search results:" ) )
16785	assertEquals ( exp, z )
16786	assertEquals ( keyExpected, keyBuilt )
16787	assertThat ( subject. shouldProcess ( message ), is ( false ) )
16788	assertTrue ( getNoErrorMsg ( ), result )
16789	assertNull ( "Must be null", ovsdbBridgeAugmentation )
16790	assertSqlCanBeParsedAndDeparsed ( stmt )
16791	assertThat ( parse ( contents ), contains ( "a=\\"0a\\",b=\\"0b\\",c=\\"0c\\"" ) )
16792	assertTrue ( output. indexOf ( "sayHiArray" ) > - 1 )
16793	assertNotNull ( c )
16794	BeanAssert. assertBeanEquals ( bean, parsed )
16795	assertEquals ( map. get ( "child" ), child )
16796	assertEquals ( Sets. newHashSet ( "Kxf4", "Kxd4" ), moves )
16797	Assert. assertEquals ( expected, actual )
16798	assertFalse ( initiativeInfo. hasTotalSupportCountAtLeast ( 100 ) )
16799	assertThat ( result, is ( "Result From Target Endpoint" ) )
16800	assertEquals ( expected, clusters )
16801	assertEquals ( 0, data. getNumData ( ) )
16802	assertNull ( reader. overflowAtoms ( ) )
16803	assertNull ( graph )
16804	assertArrayEquals ( expected, check. getRequiredTokens ( ) )
16805	assertThat ( result. fullName ( ), is ( Object. class. getName ( ) ) )
16806	assertThat ( diff, contains ( "captured schema", "restored schema" ) )
16807	assertEquals ( 0, allViolations. size ( ) )
16808	assertEquals ( "", result )
16809	assertThat ( PrettyTime. of ( Locale. ENGLISH ). withZeroDigit ( '0' ). print ( duration, TextWidth. WIDE ), is ( "15 爻�丞� 3 兀卮�乇� 兀爻亘�毓� ��������������������������������������������������������
16810	assertThat ( outputDirectory. getPath ( ), is ( "target/reports/thucydides" ) )
16811	Assert. assertTrue ( fs. exists ( path1 ) )
16812	assertFalse ( "Unable to update non existing user", success )
16813	Assert. assertEquals ( 1, patients. size ( ) )
16814	assertEquals ( 2, endpointMapping. getOrder ( ) )
16815	assertEquals ( result. getStrategy ( ), DYNAMIC )
16816	Assert. assertEquals ( 0, cache. size ( ) )
16817	assertEquals ( "3 啶�啶苦く啷� 啷�", t. format ( new Date ( 0 ) ) )
16818	Assert. assertEquals ( 1L, count. longValue ( ) )
16819	Assert. assertTrue ( response. toString ( ), response. result ( ) )
16820	assertEquals ( dog, ExternalizableHelper. fromBinary ( binDog, v2 ) )
16821	Assert. assertEquals ( 70, analyser. getLoadDelivered ( route ). get ( 0 ), 0.01 )
16822	assertEquals ( childIdx, child. getPath ( ). length ( ) )
16823	Assert. assertEquals ( "f1", ret. getText ( ) )
16824	assertEquals ( 3, sum. get ( ) )
16825	assertEquals ( "Geometric mean not expected", 2.213364, u. getGeometricMean ( ), 0.00001 )
16826	assertEquals ( "test", visitor. visit ( sub ) )
16827	assertEquals ( ByteString. decodeHex ( "72616ec999" ), data. readByteString ( ) )
16828	assertThat ( action. action, is ( RetryPolicy. RetryAction. RetryDecision. FAIL ) )
16829	assertFalse ( result )
16830	assertEquals ( buf. toString ( ), expected )
16831	Assert. fail ( )
16832	assertThat ( dispatched, is ( ASYNC_PRIVATE_FLOW_MSG + ".main1@" + ASYNC_MAIN_FLOW_THREAD_NAME + "." + ASYNC_PRIVATE_FLOW_NAME + "@" + ASYNC_MAIN_FLOW_THREAD_NAME ) )
16833	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "gifImageTest05.pdf", sourceFolder + "cmp_gifImageTest05.pdf", destinationFolder, "diff_" ) )
16834	assertEquals ( expected, actualQuery )
16835	assertEquals ( actual. getUiLayoutClass ( ), "com.sldeditor.ui.layout.SLDEditorDefaultLayout" )
16836	assertNotNull ( "Should have thrown exception", ex )
16837	assertEquals ( "Date is not cacheable", now, headers. getExpires ( ) )
16838	Assert. assertEquals ( 0.0, diag. getEntry ( 1, 2 ), Precision. SAFE_MIN )
16839	assertEquals ( 10, task. join ( ) )
16840	assertEquals ( "Xpath analysis failed", "1", result. get ( ) )
16841	assertEquals ( "33", graph. get ( "Test" ). getValue ( ) )
16842	assertFalse ( topic. isPlugable ( ) )
16843	Assert. assertEquals ( descricaoEvento, eventoRetorno. getDescricaoEvento ( ) )
16844	assertThat ( description. toString ( ), is ( "a JSON string that matches any of the classes" ) )
16845	assertXpathNotExists ( "/a:feed/at:deleted-entry", xmlString )
16846	assertEquals ( Integer. toString ( val ), result )
16847	assertEquals ( 1, count )
16848	assertTrue ( wrapper. isRunInTx ( ) )
16849	assertTrue ( r1 instanceof PublicCloneable )
16850	assertEquals ( Result. PASS, name. apply ( item, - 1 ) )
16851	assertEquals ( "MyModule", dummy. getClass ( ). getCanonicalName ( ) )
16852	Assert. fail ( e. getMessage ( ) )
16853	assertTrue ( "Document deleted", result == 1 )
16854	assertEquals ( this. object, b. getObject ( ) )
16855	assertEquals ( value, bean. getIPad ( ) )
16856	assertThat ( record. getClassifier ( ), is ( equalTo ( Record. CLASSIFIER ) ) )
16857	assertNull ( namedConfig. get ( "key" ) )
16858	assertEquals ( expected, rewrite ( input ) )
16859	assertTrue ( output1. equals ( output2 ) )
16860	assertNotNull ( ucioLoaded )
16861	assertTrue ( entity. getVersion ( ) > 0 )
16862	assertEquals ( false, start )
16863	assertEquals ( expectedMap, map )
16864	assertEquals ( i, ret )
16865	Assert. assertEquals ( 0, patientCount )
16866	assertArrayEquals ( expectedResult, actualResult, 0.00001 )
16867	assertEquals ( expected, calc, 1e-5 )
16868	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff53_" ) )
16869	assertEquals ( "(NP (DT an) (-LRB- -LRB-) (VBG offending) (-RRB- -RRB-) (NN country) )", out. toString ( ) )
16870	Assert. assertEquals ( cana, notaInfo. getCana ( ) )
16871	assertChangeResultsPage ( changeResultsPage )
16872	assertEquals ( "Folder/", uriTools. relativePath ( base, uri ). toASCIIString ( ) )
16873	Assert. assertTrue ( validated, "Invalid params for pointcut TestRB - Invalid params type" )
16874	assertThat ( EventDispatcher. pending. get ( ), is ( empty ( ) ) )
16875	assertEquals ( "<html><body><h1>Hello World!</h1></body></html>", engine. compileMustache ( "minify_html", "<html><body><h1>Hello World!</h1></body></html>" ). render ( ImmutableMap. < String, Object > of ( "foo", "FOO" ) ) )
16876	assertEquals ( "foo, bar", result )
16877	assertTrue ( response. contains ( "No blueprint specified" ) )
16878	assertFalse ( "processor should not be complete", processor. isComplete ( ) )
16879	assertInvocations ( client. getTwoPhaseCommitInvocations ( ), "rollback" )
16880	assertEquals ( "(= 34 abc)\\n", found )
16881	assertNotNull ( certificate )
16882	assertEquals ( Integer. MAX_VALUE, result. get ( "id" ) )
16883	assertThat ( systemOutRule. getLog ( ), containsString ( "No Class!" ) )
16884	assertTrue ( testFailed. isEmpty ( ) )
16885	Assert. assertEquals ( expResult, result )
16886	assertNull ( response. getAppId ( ) )
16887	assertThat ( resizedImage. getHeight ( ), is ( equalTo ( image. getHeight ( ) ) ) )
16888	Assert. assertEquals ( description, value )
16889	assertEquals ( ( long ) 8, result. getLongValue ( ) )
16890	assertNotNull ( result )
16891	assertTrue ( params. hasValue ( "a" ) )
16892	assertEquals ( expected, actual )
16893	tester. assertCompleteMatch ( )
16894	assertThat ( testUriStr, is ( expectedUriStr ) )
16895	assertEquals ( sink, actualSink )
16896	assertTrue ( Wxs. check ( signature, timestamp, nonce, token ) )
16897	assertEquals ( - 28800000L, timestamp. getTime ( ) )
16898	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( tree ) instanceof WTreeRenderer )
16899	Assert. assertEquals ( valorTest, valor )
16900	assertTypeImportsAndSpellings ( types, "foo.bar", ImmutableList. of ( "java.util.List", "java.util.Map", "java.util.Timer", "java.util.regex.Matcher", "java.util.regex.Pattern", "java.math.BigInteger" ), ImmutableList. of ( "int", "Pattern", "Timer", "Map<Matcher, BigInteger>" ) )
16901	assertArgumentParserException ( args )
16902	assertSame ( gav5, ReleaseIdComparator. getEarliest ( list ) )
16903	assertEquals ( 44, model. getCount ( ) )
16904	files. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE )
16905	assertEquals ( "Merging of empty key tree maps should be the same", 0, otherKeyTreeMap. size ( ) )
16906	assertEquals ( "SELECT FROM V WHERE PARAMETER = 5", q. toString ( ) )
16907	assertThat ( model. size ( ), is ( 0 ) )
16908	assertThat ( result, is ( mockBundle ) )
16909	Assert. assertTrue ( success. get ( ) )
16910	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
16911	Assert. assertEquals ( format ( "Wrong best ask and bid order for LimitOrders %s, %s", a1, b1 ), BookSanityChecker. hasErrors ( book ) )
16912	assertThat ( message. toJSON ( ), is ( ( JsonElement ) json ) )
16913	assertThat ( request. getStagingDirectory ( "product-00" ), equalTo ( "systemUser/product-00" ) )
16914	assertThat ( families, arrayContaining ( "Business/JIRA" ) )
16915	assertEquals ( BASE_INT, roadMapping. roadBaseInt ( ) )
16916	assertDeploySucceeded ( build )
16917	assertThat ( matcher, notNullValue ( ) )
16918	assertRendering ( repeat ( "a**a", x ), "<p>" + repeat ( "a**a", x ) + "b" + repeat ( " a**a*", x ) + "</p>\\n" )
16919	assertEquals ( 2, tasks. size ( ) )
16920	assertNotNull ( model )
16921	assertTrue ( verifyRes )
16922	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"yes\\"?>" + "<test><date>20120101</date></test>", stringifiedTestObject )
16923	assertTrue ( e. getMessage ( ). contains ( badCell ) )
16924	assertThat ( outputDirectory, not ( containsText ( "javax.validation" ) ) )
16925	assertEquals ( 1, getReceivedMailMessages ( true ). size ( ) )
16926	assertTrue ( contentC. isVisible ( ) )
16927	assertEquals ( 401, response. getStatus ( ) )
16928	assertEquals ( "field.asInteger()", p. toString ( ) )
16929	Assert. assertEquals ( "Node{edge=FOO, value=-, edges=[]}", node. toString ( ) )
16930	assertEquals ( "OK\\n", writer. toString ( ) )
16931	assertServletWasInvokedWith ( entity )
16932	assertTrue ( log. contains ( "SQL query: sql\\n" + "parameters:\\n" + "1: [p1]\\n" + "2: [22]\\n" + "END" ) )
16933	assertTrue ( flag )
16934	assertStepTimeout ( "1m" )
16935	Assert. assertEquals ( response. getStatusLine ( ). getStatusCode ( ), HttpStatus. SC_BAD_REQUEST, "We should get http not found error" )
16936	assertThat ( response, is ( equalTo ( expected ) ) )
16937	assertThatIsAncestorOf ( oldAncestor )
16938	assertEquals ( "streamflow classpath config should match ConfigLoader streamflow config", classpathConfig, loadedConfig )
16939	assertEqualsEvenUnderWindows ( "{\\n" + "  \\"from\\" : 0,\\n" + "  \\"size\\" : 10,\\n" + "  \\"query\\" : {\\n" + "    \\"match_all\\" : { }\\n" + "  },\\n" + "  \\"aggregations\\" : {\\n" + "    \\"terms\\" : {\\n" + "      \\"terms\\" : {\\n" + "        \\"match_all\\" : { }\\n" + "      },\\n" + "      \\"aggregations\\" : {\\n" + "        \\"terms\\" : {\\n" + "          \\"terms\\" : {\\n" + "            \\"minDocCount\\" : 10\\n" + "              },\\n" + "              \\"include\\" : {\\n" + "              \\"bar\\" : {\\n" + "              \\"count\\" : 1\\n" + "              \\"_id\\" : 0\\n" + "              }\\n" + "              }\\n" + "              }
16940	assertEqualsStoreParams ( paramsExpected, paramsActual )
16941	assertDegenerate ( scan )
16942	Assert. assertEquals ( 5, loc )
16943	assertEquals ( "SELECT a,(SELECT a,b FROM d WHERE b=1 ORDER BY b) FROM c WHERE a=1 ORDER BY a ASC", QueryParser. getQueryParser ( ). parseCommand ( sql, new ParseInfo ( ) ). toString ( ) )
16944	TestUtil. assertSuccess ( testResultWriter )
16945	Assert. assertEquals ( "logger", pl. getPluginName ( ) )
16946	assertNotNull ( National. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "US" ). read ( ) )
16947	assertEquals ( expResult, result )
16948	assertThat ( formatter. format ( PlainDate. of ( 0, 1, 1 ) ), is ( "BC 0001-01-01 (Q1)" ) )
16949	assertEquals ( getExpectedSchemaAndValue ( Schema. OPTIONAL_BOOLEAN_SCHEMA, expectedValue, expectedName ), result )
16950	assertEquals ( post, posts [ 2 ] )
16951	assertNull ( output )
16952	assertEquals ( expected, actualQuery )
16953	assertEquals ( 1, ksession. fireAllRules ( ) )
16954	assertEquals ( PersonGenderCodeType. UNKNOWN, output. getRegularCPRPerson ( ). getPersonGenderCode ( ) )
16955	assertEquals ( "Hello World", basicBean. getName ( ) )
16956	assertNoCause ( "message" )
16957	AssertJUnit. assertEquals ( "\\"lijz\\"", ret )
16958	mockEndpoint. assertIsSatisfied ( )
16959	Assert. assertEquals ( "Hello World", ejbInstance. sayHello ( ) )
16960	TestCase. assertEquals ( 1, result )
16961	assertEquals ( "FRENCH", message )
16962	iterables. assertContainsExactlyInAnyOrder ( info, actual, expected )
16963	assertEquals ( typicalPrice, typicalPriceIndicator. getValue ( i ) )
16964	assertEquals ( "Base for strings is wrong", "192.168.000.001", parsed )
16965	assertThat ( actualExceptionLevel, is ( expectedExceptionLevel ) )
16966	assertEquals ( null, acualValue )
16967	assertEquals ( r1, r2 )
16968	assertTrue ( seen. isEmpty ( ) )
16969	assertEquals ( check. getValue ( ), actual )
16970	Assert. assertEquals ( "Hello", StateHolder. get ( ) )
16971	Assert. fail ( "createErrorProbabilities(null) expected IllegalArgumentException" )
16972	assertTrue ( output, output. matches ( "(?s).*Invalid object name.*" ) )
16973	assertEquals ( expectedAutoExpireDate, drugOrder. getAutoExpireDate ( ) )
16974	assertRoundtrip ( input )
16975	assertThat ( anyTS. isValid ( MILLI_OF_DAY, 86399999999L ), is ( true ) )
16976	assertToString ( fromExpr ( "Hello", f. newMethodInvocationExpression ( Models. toName ( f, "Arrays" ), Collections. emptyList ( ), f. newSimpleName ( "asList" ), Arrays. asList ( Models. toLiteral ( f, "Hello, world!" ) ) ) ), "Hello", "[Hello, world!]" )
16977	assertThat ( output, containsString ( "HL7v2 message created:" ) )
16978	assertEquals ( 1, ksession. fireAllRules ( ) )
16979	assertNull ( dao. find ( allergy. getId ( ) ) )
16980	assertEquals ( 204, result. getStatusCode ( ) )
16981	assertNotNull ( ple )
16982	assertThat ( values, is ( empty ( ) ) )
16983	Assert. assertEquals ( TestModuleFactory. class, moduleFactory. getClass ( ) )
16984	assertTrue ( strategy. isCrawable ( url, 10 ) )
16985	assertEquals ( true, CollectionUtils. isEmpty ( coll ) )
16986	assertEquals ( "Incorrect number of threads", numThreads, instance. getNumThreads ( ) )
16987	assertNull ( cause )
16988	assertEquals ( roleListWrapper, userRoleResource. getRoles ( ) )
16989	assertEquals ( "simple-distinct-name", ejbJarMetaData. getDistinctName ( ) )
16990	assertEquals ( "<p>Hello</p>", doc. getElementsByTag ( "div" ). get ( 0 ). html ( ) )
16991	assertEquals ( "{\\"100.0\\":10,\\"99.0\\":10,\\"90.0\\":10,\\"80.0\\":8,\\"75.0\\":8}", result. toString ( ) )
16992	assertFailureKeys ( "expected to be empty", "but was" )
16993	assertEquals ( frameData, frameData )
16994	assertEquals ( 1, newSize - initialSize )
16995	Assert. assertTrue ( res. booleanValue ( ) )
16996	assertEquals ( "------------ Request ------------\\n    null\\n\\n------------ Body ------------\\nnull\\n\\n", result )
16997	assertThat ( engine. evaluate ( TESTSUITE_RESULT_ATTRIBUTE, document ), equalTo ( "<story><title>all_successful.story</title></story></story>" ) )
16998	assertFalse ( d instanceof Cloneable )
16999	assertTrue ( e instanceof ExprList )
17000	assertTrue ( topic. isHasUpdates ( ) )
17001	assertEquals ( 200, status. getStatusLine ( ). getStatusCode ( ) )
17002	assertEquals ( Constants. DWC_ROWTYPE_TAXON, resource. getRowType ( ) )
17003	Assert. assertThat ( QueryBuilder. getInstance ( ). buildFilterQuery ( co, "", 1, 0, 0, 0, null ), equalTo ( expected ) )
17004	assertEquals ( revision, currentRevision )
17005	Assert. assertEquals ( extractor. generateKey ( host, req1 ), extractor. generateKey ( host, req2 ) )
17006	assertEquals ( "input file", System. getProperty ( "user.home" ) )
17007	assertEquals ( "<html><head><script></script><noscript></noscript></head><frameset><frame src=\\"foo\\" /><frame src=\\"foo\\" /></frameset></html>", TextUtil. stripNewlines ( doc. html ( ) ) )
17008	assertResultSet ( fc. getMembers ( filter, new TypedObjectNodeXPathEvaluator ( ) ), "PHILOSOPHER_1" )
17009	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
17010	assertEquals ( 0x7777777777, frame. getLong ( ) )
17011	assertTrue ( res )
17012	assertThat ( result. getId ( ), is ( notNullValue ( ) ) )
17013	assertTrue ( Arrays. equals ( expectedResult, encoded. array ( ) ) )
17014	assertThat ( rendered, is ( test [ 1 ] ) )
17015	assertThat ( hasJsonPath. matchesSafely ( json ), is ( true ) )
17016	assertEquals ( response. asString ( ), FAILED, response. get ( OUTCOME ). asString ( ) )
17017	assertEquals ( comment, newId3tag. getItunesComment ( ) )
17018	assertNoViolations ( constraintViolations )
17019	assertThat ( specificResourceAllocation. getAssignments ( ), haveHours ( 4, 8, 4, 8 ) )
17020	assertThat ( markedWord, is ( "louper" ) )
17021	assertEquals ( 1, observer. getCount ( ) )
17022	assertThat ( instance2. getNumActive ( ), is ( 0 ) )
17023	assertEquals ( VALUE, value )
17024	assertTrue ( "SecurityConstraint is expected to be deployed as provider", everrestApplication. getSingletons ( ). stream ( ). filter ( e -> e instanceof SecurityConstraint ). count ( ) == 1 )
17025	assertEquals ( mockAddress, cache. get ( ) )
17026	assertThat ( list, is ( notNullValue ( ) ) )
17027	Asserts. check ( targetHosts. size ( ) > 0, "fail test" )
17028	assertNotNull ( asset )
17029	assertTrue ( timestamp > 0 )
17030	Assert. assertEquals ( cpf, eventoRetorno. getCpf ( ) )
17031	Assert. assertFalse ( runs. isEmpty ( ) )
17032	assertEquals ( HTTP_CODE, response. getCode ( ) )
17033	assertNotNull ( auth. createSaslClient ( credential ) )
17034	assertEquals ( "abghabghcdef", builder. toString ( ) )
17035	Assert. assertFalse ( executed )
17036	assertThat ( t. getName ( ), is ( "maven-surefire-plugin@NotThreadSafe" ) )
17037	Assert. assertThat ( list, Is. is ( Arrays. asList ( "1", "1_1", "1_2", "1_3", "1_4", "2_1", "2_2", "2_3", "2_4", "3", "4", "5", "6", "7" ) ) )
17038	assertEquals ( 100, results. size ( ) )
17039	Assert. assertTrue ( result )
17040	assertThat ( content. hasContent ( ), is ( true ) )
17041	assertThat ( validator. validate ( parameters, "aaa" ), is ( "Aaa is not a string(####)." ) )
17042	assertTrue ( match == null )
17043	assertEquals ( 2, count )
17044	Assert. assertEquals ( testString, HtmlToXMLUtil. unescapeToXML ( testString ) )
17045	assertPlanMatches ( expected )
17046	assertEquals ( response. getStatus ( ), 500 )
17047	assertEquals ( 0.43, x. getValue ( ), 0.00001 )
17048	Assert. assertEquals ( "MyTinyTest", typeForTemplate. getName ( ) )
17049	assertEquals ( assertion, matrix )
17050	assertTrue ( redis. info ( ). contains ( msg ) )
17051	assertEquals ( "Number of records", 3, records. size ( ) )
17052	assertEquals ( "MMMM", month )
17053	assertEquals ( NullType. No_Nulls, db. getMetadataStore ( ). getDatatypes ( ). get ( "TEXT" ). getNullType ( ) )
17054	assertThat ( this. support. getAllSelectedOptions ( webElement ), is ( equalTo ( Arrays. asList ( "select1.getSelectedOption()", "select2.getSelectedOption()" ) ) ) )
17055	assertOnResponseAttachment ( f2, MAX_SIZE2, "Client3gbAttachment.txt" )
17056	assertEquals ( DateTimeUtils. getYearMonthDay ( new Date ( 2009, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
17057	assertTrue ( theSelectedPoolsWere ( allPoolsNotOnSameHostAsSource ( ) ) )
17058	assertEquals ( expected, actual )
17059	assertEquals ( "HTTP/1.1 100-continue", sb. toString ( ). trim ( ) )
17060	assertEquals ( true, bm. isBitSet ( bitNumber ) )
17061	assertThat ( steps, is ( notNullValue ( ) ) )
17062	assertEquals ( 2, persistence. getAllManagers ( ). size ( ) )
17063	assertEquals ( "infinispan-bom-8.2.0.Final.jar", deps. get ( "infinispan-bom-8.2.0.Final.jar" ). getArtifactId ( ) )
17064	assertEquals ( "{\\"address\\":{\\"type\\":\\"number\\",\\"properties\\":{\\"unboundedInteger\\":{\\"format\\":null,\\"example\\":4321}}}", rep. toString ( ) )
17065	assertEquals ( "Token[token, secret]", result )
17066	assertPostCodegenRules ( mojo )
17067	Assert. assertEquals ( 2, list. size ( ) )
17068	assertThat ( observations, hasSize ( 1 ) )
17069	assertTrue ( descriptor. isTypeConstrained ( ) )
17070	assertTrue ( plots. get ( 0 ) == plot1 )
17071	assertEquals ( "Jimmie", object. getString ( "firstname" ) )
17072	assertThat ( otherUser, is ( not ( this. subject ) ) )
17073	assertEquals ( "100000", String. valueOf ( Integer. parseInt ( result ) + rejected ) )
17074	assertIsAborted ( tx )
17075	assertEquals ( 1, command. getMcCounter ( ) )
17076	assertTrue ( uaiCriteria. count ( ) > 0 )
17077	Assert. assertEquals ( 100, generatedTests. size ( ) )
17078	assertEquals ( "1.0", queryVersion )
17079	assertEquals ( Arrays. asList ( "\\r\\n", "\\r\\n", "\\r\\n", "\\r\\n" ), lines )
17080	Assert. assertTrue ( "Menu bar should contain a seperator", menuBar. getMenuItems ( ). get ( 0 ) instanceof WSeparator )
17081	assertTrue ( "No top rated movies found",! results. isEmpty ( ) )
17082	assertEquals ( true, executeTestMethod ( test, Boolean. class, null, Boolean. valueOf ( true ) ). booleanValue ( ) )
17083	assertThat ( date. with ( YEAR_OF_WEEKDATE, 1996 ), is ( PlainDate. of ( 1996, 12, 30 ) ) )
17084	Assert. assertEquals ( new Long ( 0L ), sut. computeInterestingness ( activity ) )
17085	assertThat ( server. isRegisterCalls ( ), is ( false ) )
17086	assertEquals ( 1, count. get ( ) )
17087	assertEquals ( Arrays. asList ( "VALUE1", "VALUE2", "VALUE3", "VALUE4" ), values )
17088	Assert. assertFalse ( patientService. isIdentifierInUseByAnotherPatient ( patientIdentifier ) )
17089	Assert. assertEquals ( 1, map. size ( ) )
17090	assertTrue ( "locator not expired from cache",! locatorCache. isLocatorCurrentInBatchLayer ( LOCATOR ) )
17091	assertEquals ( "substring(cat.name,cat.name.indexOf("") + ")", serializer. toString ( ) )
17092	assertEquals ( "bandstop-objective-function-1-0.8-0.4-0.6", bo. toString ( ) )
17093	assertEquals ( 1, testResult )
17094	Assert. assertEquals ( 1, response. getTotalHits ( ). value )
17095	assertNotNull ( result )
17096	assertEquals ( 0x0000002d, s. m0_0 ( ) )
17097	Assert. assertNotNull ( vmComponent )
17098	assertEquals ( "next node must be node2", node2, currentRouter. getNextNode ( msg ) )
17099	assertEquals ( expectedEnv, env )
17100	assertSame ( expected, CRest. getOAuthInstanceWithRefresh ( builder ) )
17101	assertEquals ( expecting, result )
17102	assertEquals ( expectedManifest, actualManifest )
17103	assertThat ( "Width of color picker is overridden by " + "default caption feature", width, is ( lessThan ( 148 ) ) )
17104	assertNotNull ( room1. getId ( ) )
17105	assertEventsEquals ( expectedEvent, getOnlyElement ( events ) )
17106	assertEquals ( expected, bos. toString ( ) )
17107	assertTrue ( latch. await ( 5, TimeUnit. SECONDS ) )
17108	assertTrue ( session. markRecordAsRead ( epoch + 1, 2 ) )
17109	assertEquals ( SecurityStatus. NOT_FOUND, s )
17110	assertEquals ( "test", new String ( out. toByteArray ( ), "UTF-8" ) )
17111	assertNotNull ( Alert. fetcher ( "NOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
17112	assertTrue ( str. contains ( "Hello" ) )
17113	assertEquals ( 800000000, result )
17114	assertTrue ( e. getCause ( ) instanceof EntityProviderReadException )
17115	assertThat ( c. value, is ( "aaa" ) )
17116	assertEquals ( OMITTED_FOR_OPTIONAL, adapter. getResolution ( ) )
17117	assertEquals ( expected, output )
17118	Assert. assertEquals ( "Selected options should be empty", Arrays. asList ( OPTION_C ), multi. getUnselected ( ) )
17119	assertEquals ( Arrays. asList ( "a" ), list )
17120	assertEquals ( RESPONSE, r. json ( ) )
17121	assertThat ( validationList, is ( Collections. < String > emptyList ( ) ) )
17122	assertEquals ( 0, violations. size ( ) )
17123	assertEquals ( "[Test] expecting:\\n<['Yoda', 'Luke']> to start with:<['Han', 'Leia']>", message )
17124	Assert. assertEquals ( 204, status )
17125	assertTrue ( transform instanceof Modifier. Definr )
17126	assertEquals ( doubleQuotedString, ocsvTransformer. getCellContent ( doubleQuotedString ) )
17127	assertStat ( result )
17128	assertEquals ( 1403602429000L, getTimeWithoutZoneOffset ( format. parse ( "2014-06-24 09:33:49" ) ) )
17129	assertEquals ( 2, result )
17130	assertEquals ( profile. startPort, result. startPort )
17131	assertNull ( probe )
17132	assertEquals ( expResult, result )
17133	assertEquals ( 2, es1. count )
17134	assertEquals ( augmented. getRelationshipToPartial ( ), ordinary )
17135	assertThat ( given. getScreenshots ( ). size ( ), greaterThan ( 0 ) )
17136	assertEquals ( workflow. getID ( ), "selectSingleReviewer" )
17137	assertTrue ( uvp. getFirstData ( ) == 0.0 )
17138	assertEquals ( initialPatchData, jsonPatch. getJsonArray ( ) )
17139	assertEquals ( left. toString ( ), result. toString ( ) )
17140	assertEquals ( "Failed on iteration " + i, z1, z2 )
17141	Assert. assertEquals ( 2, distinct )
17142	assertEquals ( "hasJsonPath.foo", sd. toString ( ) )
17143	assertThat ( actualSubsets, IsIterableContainingInAnyOrder. containsInAnyOrder ( fixture. getExpectedExistingSubsets ( ) ) )
17144	assertEquals ( "cat -file1 -file2 -file3", cat )
17145	assertTrue ( bw > 0 )
17146	assertEquals ( expResult, result )
17147	assertTrue ( condition. matches ( testEvent ) )
17148	assertTrue ( incrementPoolOnTimeoutConnectionAcquiringStrategy. isConnectionAcquired ( connection ) )
17149	assertEquals ( "anonymous class", myColumn. toString ( ) )
17150	Assert. assertEquals ( "abc", stringAppender. getChars ( ) )
17151	assertNotNull ( result )
17152	assertEquals ( "a", book. getName ( ) )
17153	assertEquals ( src, dst )
17154	assertTrue ( langs. size ( ) > 0 )
17155	mongoDbChecker. assertThatConnectionIsPossible ( anyString ( ), anyList ( ) )
17156	assertArrayEquals ( NOT_ENCODED, binary, encode ( object ) )
17157	Assert. assertTrue ( lang1. getFileExtensions ( ). contains ( lang2. getFileExtensions ( ) ) )
17158	assertEquals ( "John", sut. execute ( "John" ) )
17159	assertEquals ( "", t )
17160	get ( "/exception" ). then ( ). assertThat ( )
17161	assertEquals ( actualDataFlavour. length, 0 )
17162	assertions. isNotEqualTo ( null )
17163	assertInsert ( INSERT_ARRAY_TYPES_STMT, 1, schemasAndValuesForArrayTypes ( ) )
17164	assertThat ( hijri. with ( CommonElements. weekOfYear ( HijriCalendar. family ( ), model ). floor ( ) ), is ( expected ) )
17165	assertNotNull ( request. getSession ( ). getAttribute ( Constants. PREFERRED_LOCALE_KEY ) )
17166	assertEquals ( merging, policy. merge ( "map", entryMerging, entryExisting ) )
17167	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><xxxxxx/>", result. getResult ( ) )
17168	assertEquals ( 0, node. size ( ) )
17169	assertTrue ( "The check box should be visible", botTestPage. checkBox2WebComponentExtended. getWrappedDriver ( ). isDisplayed ( ) )
17170	assertEquals ( true, result )
17171	assertThat ( findFeature ( features, "ClearCache" ), is ( instanceOf ( ClearCacheFeature. class ) ) )
17172	assertEquals ( expectedQuery, actualQuery )
17173	assertThat ( completedHistoricActivityInstances. size ( ), is ( 3 ) )
17174	assertEquals ( "aTestString", classUnderTest. getCatalogFilterInclude ( ) )
17175	assertEquals ( ROLE_EMPLOYEE, userAfter. getRole ( ) )
17176	Assert. fail ( "Expected ClassNotFoundException" )
17177	Assert. assertEquals ( "{\\"@odata.context\\":\\"$metadata#ESMixEnumDefCollComp/$entity\\"," + "\\"@odata.metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\"," + "\\"PropertyEnumString\\":\\"String2,String3\\"," + "\\"CollPropertyEnumString\\":[]," + "\\"PropertyDefString\\":\\"Test\\"," + "\\"CollPropertyDefString\\":[]," + "\\"PropertyCompMixedEnumDef\\":null," + "\\"CollPropertyCompMixedEnumDef\\":[]}", resultString )
17178	assertTrue ( latch. await ( 15, TimeUnit. SECONDS ) )
17179	assertTrue ( victim. isIncrementalBuild ( ) )
17180	assertThat ( testTx. isShortLived ( ), is ( false ) )
17181	Assert. assertEquals ( "Password is not correct", null, redisURI. password ( ) )
17182	assertEquals ( expectedValues, actualValues )
17183	assertNotNull ( result )
17184	Assert. assertEquals ( "<title>type name website</title>", title )
17185	assertThat ( target. parse ( ), is ( false ) )
17186	assertEquals ( "UserFeedData [id=, profilePictureUrl=, userName=, fullName=, website=]", result )
17187	assertThat ( count, is ( 4L ) )
17188	assertEquals ( set. size ( ), WORKER_NUMBER )
17189	assertTrue ( "Route Node fetched by name", rn!= null && rn. getRouteNodeName ( ). equals ( routeNodeId ) )
17190	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getPrivileges ( set ( "job1_2_operator" ), ActiveRoleSet. ALL ) ). toString ( ) )
17191	assertEquals ( 0, sparql. executeBatch ( ). size ( ) )
17192	assertTrue ( FileFilter. accepts ( file ) )
17193	assertThat ( the ( name, be ( equalTo ( "Alex" ) ). and ( be ( startsWith ( "B" ) ) ). or ( be ( anything ( ) ) ) ), is ( true ) )
17194	assertEquals ( lovedTracks, dbLovedTracks )
17195	Assert. assertEquals ( ( Integer ) 443, port )
17196	assertEquals ( 3, allServices. size ( ) )
17197	JsonPathAssert. assertThat ( doc )
17198	assertTrue ( result. get ( 0 ) )
17199	Assert. assertThat ( item. isNullValue ( "isNull" ), is ( false ) )
17200	assertTrue ( builder. build ( ). getAdaptationConfig ( ). isAdaptationEnabled ( ) )
17201	this. assertServiceInstanceHasLastOperation ( serviceInstance, "Finished", OperationState. IN_PROGRESS )
17202	assertEquals ( tknzn. getTokens ( ). length, 0 )
17203	Assert. assertEquals ( OBJECT, clone )
17204	assertEquals ( title, table. getTitle ( ) )
17205	assertEquals ( mTestDir1. getCapacityBytes ( ), mTestDir1. getAvailableBytes ( ) )
17206	assertEquals ( "Locally rewritten value", ( Integer ) 10, localState. commit ( globalState ). deref ( ) )
17207	assertThat ( after, is ( "2->3->3->4->5->8->NULL" ) )
17208	assertEquals ( 3, FastMath. exp ( chart. getLogPartitionFunction ( ) ), 1e-3 )
17209	Assert. assertEquals ( localDate. toString ( ddMMMyyyy, Locale. ENGLISH ), "25-Oct-2013" )
17210	Assert. assertTrue ( "Test isAttributePresent returns true", element. isAttributePresent ( "someAttribute" ) )
17211	assertEquals ( 0, list. size ( ) )
17212	Assert. assertArrayEquals ( ENCODED_VALUE, byteOutputStream. toByteArray ( ) )
17213	assertEquals ( response. getStatus ( ), 401 )
17214	Assert. assertEquals ( "[\\"\\",\\"abc\\",\\"\\\\b\\\\f\\\\n\\\\r\\\\t\\",\\"\\\\\\"\\",\\"\\\\\\\\\\",\\"\\\\\\\\\\\\u001f\\"]", writer. toString ( ) )
17215	assertTrue ( cleanupCalled [ 0 ] )
17216	assertEquals ( "unique", m_collection. getUnique ( col ) )
17217	Assert. assertEquals ( "org.wildfly.arquillian:wildfly-arquillian-container-domain-managed:2.2.0.Final", adapter. dependencies ( ) [ 0 ] )
17218	assertTrue ( authorizer. isAuthorized ( context, profiles ) )
17219	assertNull ( lock )
17220	assertEquals ( "http://localhost:" + ourPort + "/fhir/Patient?_revinclude=Provenance%3Atarget&_format=json", ourRequestUri )
17221	assertThat ( array2, nullValue ( ) )
17222	assertThat ( renderer. getShortForm ( entity ), is ( "xsd:unsignedByte" ) )
17223	assertTrue ( lineArgs. isClearCacheAfterRowWrite ( ) )
17224	assertThat ( jsonOutputStreamParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/jsonmarshallertest/testServerName.json" ) ) )
17225	assertEquals ( mockDatabaseObjectInfo, classUnderTest. getRelatedObjectInfo ( ) )
17226	assertEquals ( 608512271, checksum )
17227	assertEquals ( "<b></b><b>bbb</b><table><tbody><tr><td>aaa</td></tr></tbody></table><b>ccc</b>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
17228	assertEquals ( jsonResponse. getStatus ( ), JsonResponseStatus. SUCCESS )
17229	assertEquals ( expected, actual )
17230	assertNotNull ( requestToken )
17231	assertEquals ( "incorrect no of objects returned", 1, genericManager. deleteAllByPropertyValue ( property, value ) )
17232	assertThat ( releaseCandidateUpdateVersion. getPomXmlVersion ( ), equalTo ( "1.0.0" ) )
17233	assertThat ( confirmationCode, is ( equalTo ( "A2B3" ) ) )
17234	Assert. assertFalse ( signatureUtil. signatureCoversWholeDocument ( "Signature1" ) )
17235	assertSame ( expected, actual )
17236	assertNotNull ( certificate )
17237	Assert. assertEquals ( "(nt_string CGAT)", nt_string. toStringTree ( parser ) )
17238	Assert. assertEquals ( 0., analyser. getVariableTransportCostsAtActivity ( route. getEnd ( ), route ), 0.01 )
17239	assertEquals ( expected, actual )
17240	assertNotNull ( dsg )
17241	Assert. assertEquals ( expectedRanges, actualRanges )
17242	assertEquals ( 0, new ReadOnlyOneBitSet ( i ). cardinality ( ) )
17243	assertEquals ( "Change set number was incorrect", "12495", changesetNumber )
17244	assertTrue ( errors. equals ( noErrors ) )
17245	assertEquals ( dmatrix [ i ] [ j ], diag [ i ] [ 0 ], epsilon )
17246	assertFalse ( resource. canProvideResource ( modelAndView ) )
17247	assertEquals ( "token 1\\n", found )
17248	Assert. fail ( "Test should fail, user shouldn't be allowed to invoke that method" )
17249	assertEquals ( - 112344572362.33f, executeTestMethod ( test, Float. class, null, - 112344572362.33f ). floatValue ( ), 0.0f )
17250	assertEquals ( reference, output )
17251	assertTrue ( connectorAcceptsClientHelloVerifyRequest ( ) )
17252	assertEquals ( ( Character )'', extractedChar )
17253	Assert. assertArrayEquals ( result, expected, 1e-5 )
17254	assertEquals ( 1, list. size ( ) )
17255	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
17256	Assert. assertNotNull ( metadataElements )
17257	assertEquals ( 0, delete. execute ( ) )
17258	assertTrue ( obj instanceof String )
17259	context. assertIsSatisfied ( )
17260	assertEquals ( newArrayList ( new AcceptToken ( "*" ) ), charsetList )
17261	assertWindowSizeIsIdeal ( from, to, idealWindowSize )
17262	assertEquals ( expResult, result )
17263	assertEquals ( "12.0.1", result )
17264	assertEquals ( result, "jentrata/bin" )
17265	assertEquals ( val, read )
17266	assertEquals ( "SELECT E1 FROM SalesOrderHeader E1 WHERE E1.soID >= 1234", jpqlSelectStatementBuilder. build ( ). toString ( ) )
17267	assertEquals ( "123", converter. getAsString ( facesContext, new UIPanel ( ), null ) )
17268	assertEquals ( 0, song. getTrack ( ) )
17269	Assert. assertTrue ( children. size ( ) > 0 )
17270	assertEquals ( "Invalid random bytes", size, new Random ( ). randomBytes ( ). length )
17271	Assert. assertEquals ( expectedIds, actual )
17272	assertEquals ( "@tests.AnnotationBuilderTest.B(\\"strings\\",[\\"m\\",\\"n\\"])", builder. build ( ). toString ( ) )
17273	assertNull ( result )
17274	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). getAllConsentsForPatient ( "P0123456" ) )
17275	assertThat ( resource, is ( equalTo ( method ) ) )
17276	assertThat ( secondPage. getUrl ( ). toString ( ), endsWith ( "/page/foo%3Dbar&query=foo%3Dbar" ) )
17277	assertEquals ( "Mike Tesla", name )
17278	assertEquals ( threeTwoTwo, arr )
17279	Assert. assertFalse ( "no data read", dataRead )
17280	assertROIEquivalent ( g, shape, "Checkerboard" )
17281	assertEquals ( "http://ipt.gbif.org/resource?r=ants", cfg. getResourceLink ( "ants" ) )
17282	assertNull ( column )
17283	assertEquals ( document, mapper. readValue ( JSON_ITEM_STATEMENTS, ItemDocumentImpl. class ) )
17284	assertThat ( getServers ( ), containsInAnyOrder ( "wls1", "wls3" ) )
17285	assertEquals ( asSet ( "firstRegion" ), resolvedIds )
17286	assertEquals ( "1/1/1", calculator. getOutput ( ) )
17287	assertTrue ( Pattern. matches ( "(?s).*<input.*>.*", page. getBody ( ). asText ( ) ) )
17288	assertNotNull ( doc )
17289	assertEquals ( 1, v1. query ( ). has ( "edgeProp2" ). count ( ) )
17290	assertDelete ( newZipFile )
17291	assertNotNull ( response. getGetMediaMetadataResult ( ) )
17292	assertQuery ( "//*[@prop =~ 'aaaBoom' and (@prop =~ 'bbbBoom' and @prop =~ 'cccBoom')", "xpath", ImmutableList. of ( "/content/two", "/content/three" ) )
17293	assertEquals ( expected, TestUtils. getGeneratedOutput ( clz ) )
17294	assertEquals ( "extended-operation-type - _id=1 - Patient", captor. getValue ( ) )
17295	assertThat ( grid. getColumnById ( fooColumn. getId ( ) ), is ( nullValue ( ) ) )
17296	assertThat ( fieldError, is ( nullValue ( ) ) )
17297	assertNotNull ( result )
17298	assertEquals ( "REPLACE_BY_CRITERIA", result )
17299	assertFalse ( or. isDefined ( ) )
17300	assertEquals ( "Expected 0 results!", 0, n )
17301	Assert. fail ( "build listing failure" )
17302	assertTrue ( jobService. getExecutionStatus ( namespace, jobName ). isEmpty ( ) )
17303	assertThat ( unknownUser, is ( not ( present ( ) ) ) )
17304	assertEquals ( "server-name", response. getHeader ( "Server" ) )
17305	assertEquals ( inputWriteOperation, inputSink. getWriteOperation ( ) )
17306	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
17307	Assert. assertEquals ( "1 啶�啶�啷�", t. format ( c ) )
17308	assertThatTestCaseObeysOracle ( 16 )
17309	assertOut ( "/**\\n * @type {number}\\n */\\nRoyaleTest_A.prototype.a = Infinity" )
17310	assertEquals ( body. toString ( ), "123" )
17311	Assert. fail ( "IotHubNotFoundException expected" )
17312	validator. assertTestSuiteResults ( 5, 0, 0, 0 )
17313	Assert. assertEquals ( expected, builder. toString ( ). replaceAll ( "\\\\s+", "" ) )
17314	assertEquals ( this. urlConnection. getRealURL ( ). getPath ( ), "/rest/v1/" + this. sauceREST. getUsername ( ) + "/tunnels" )
17315	assertEquals ( Arrays. asList ( "http://somelink", "" ), new JsonLinkConsumer ( ). readLinks ( reader, null ) )
17316	assertTrue ( resultSq == Position. b1 )
17317	assertEquals ( "AGATATATCTTAAAGGGCAGTGACAATGGCTGGCTCGGTTAACGGGGGGTTTGGTTTGGTTTTGGGGTTGGGGTTGGGGTTGGGGTTGGGGTTGGGGTTGGGGTTGGGGTTGGGGTTGGGGTTGGTTGGTTGGTTGGTTGGTTGGTTGGTTGGTTGGTTGGTTGGTTGGTTGGTTGGTTGGGGGGGGGGGGGGGGGGGGGGGGGGGGCAACACCAACCAACCAACCAACCAACCAACCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCAAGCA
17318	assertTrue ( "the notification handler must receive the filtered out notification", handler. getNotifications ( ). isEmpty ( ) )
17319	assertEquals ( "a", toAndFromHtml ( stuff ) )
17320	assertTrue ( "Should have received confirmation message", latch. await ( 1, TimeUnit. SECONDS ) )
17321	assertEquals ( "key", result )
17322	assertEquals ( 1, count )
17323	assertThat ( target. parse ( ), is ( false ) )
17324	assertEquals ( "Found attributes", 0, iteratorSize ( it ) )
17325	assertEquals ( ace, parsed )
17326	assertEquals ( 0, jsonCategories. length ( ) )
17327	this. assertGet ( "entitytypes/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fentitytypes/entitytypes/kiwi_inheritance", "entitytypes/kiwi_inheritance.json" )
17328	Assert. assertEquals ( "Value", WebUtil. getContextPath ( ) )
17329	assertTrue ( messageProcessed. await ( 2, TimeUnit. SECONDS ) )
17330	assertEquals ( text, trie. toString ( ) )
17331	assertSame ( shouldFind, selection. radio ( By. id ( "test" ) ) )
17332	assertTrue ( results. get ( 0 ). getContentReference ( ). getSize ( ) > 10 )
17333	assertEquals ( "one", event. getField ( "$.arr" ) )
17334	Assert. assertTrue ( result )
17335	assertIterators ( allMatchingQueryParamsFilter, Collections. EMPTY_LIST )
17336	assertSqlCanBeParsedAndDeparsed ( stmt )
17337	assertThat ( configuration, is ( Optional. of ( expectedSelector ) ) )
17338	Assert. assertEquals ( "2001:4801:79f1:1:22d6:5749:0:3a", dMsg )
17339	assertEquals ( 1, vehicles. size ( ) )
17340	assertEquals ( Arrays. toString ( hexes. toArray ( ) ), Arrays. toString ( bites ) )
17341	assertEquals ( 2, query. getResultCount ( ) )
17342	Assert. assertArrayEquals ( encodedValue, byteOutputStream. toByteArray ( ) )
17343	assertThat ( f. format ( m ), is ( "Amete Mihret, 2008-03-09 09:45 pm +03:00" ) )
17344	assertSame ( validatedResponse, context. getSaajMessage ( ) )
17345	assertEquals ( "(((dependencyBuilder.input(\\"A\\").build() || dependencyBuilder.input(\\"B\\").build())" + " && (dependencyBuilder.input(\\"C\\").build() || dependencyBuilder.input(\\"D\\").build()))" + " && (dependencyBuilder.input(\\"E\\").build() && dependencyBuilder.input(\\"F\\").build()))", inputLogicParser. parse ( root ) )
17346	Assert. isTrue ( roles. size ( ) > 0 )
17347	assertEquals ( 20, maxResults )
17348	assertEquals ( "Parent should only have two mutation events (remove field and its caption)", 2, mutationEvents. intValue ( ) )
17349	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
17350	assertTrue ( verify )
17351	assertEventFired ( DeployDeployment. class, 0 )
17352	Assert. assertNull ( poolStatistics )
17353	assertTrue ( "should of thrown validation error for null address in Employee entity", constraintViolationException. getMessage ( ). contains ( "address must be null" ) )
17354	assertEquals ( 2, selectCovered ( mergeCAs. getCas ( ), type, 0, 0 ). size ( ) )
17355	assertNotNull ( mconn )
17356	assertEquals ( "Bar[a]", render )
17357	assertEquals ( "", builder. build ( ) )
17358	Assert. assertEquals ( sql, expected. replaceAll ( "#ALIAS#", EntityMetaDataCache. getMetaData ( RestrictionTestEntity. class ). getAlias ( ) ) )
17359	assertTrue ( classToTest. isAssignableFrom ( Seriazable. class ) )
17360	assertThat ( list. size ( ), is ( 0 ) )
17361	assertEquals ( getDate ( "2013-03-27 23:18:40.123456" ), jstOi. getPrimitiveJavaObject ( result. get ( "five" ) ) )
17362	assertNotFound ( client. executePost ( "/foo", "foo bar", ContentType. TEXT_PLAIN ) )
17363	assertEquals ( 2, va. toString ( ). length ( ) )
17364	assertTrue ( "syntaxChecker should still be in the registry after move failure", schemaManager. getSyntaxCheckerRegistry ( ). contains ( OID ) )
17365	tc. assertEquals ( "Hello World!", post1. getMessage ( ) )
17366	assertFalse ( statement. isOnlyUpdate ( ) )
17367	assertEquals ( 0, tasks. size ( ) )
17368	assertTrue ( page. asText ( ). contains ( "The test" ) )
17369	assertEquals ( 1, exts. size ( ) )
17370	assertEquals ( "The line numbers should be same", expectedLineNumber, result. indexOf ( "at line 1" ) )
17371	assertThat ( "default os", sut. getOS ( ), is ( equalTo ( VM. DEFAULT_OS ) ) )
17372	assertTrue ( true )
17373	assertEquals ( "Geoloc error visitor should be used", GeolocErrorVisitor. GEOLOCRESULTO, geolocErrorVisitor )
17374	assertThat ( minified, is ( equalTo ( css ) ) )
17375	assertFalse ( clientConnection2Closed. isDone ( ) || serverConnection2Closed. isDone ( ) )
17376	assertNotNull ( jobProperties )
17377	assertEquals ( "Clock should've returned fake time", fakeTime, clock )
17378	assertThat ( name. hashCode ( ), is ( other. hashCode ( ) ) )
17379	assertEquals ( "en", rc. getHeader ( "locale" ) )
17380	assertTrue ( result. contains ( "\\"1-0-v0\\":{\\"type\\":\\"LCD\\",\\"values\\":[\\"1\\"]}" ) )
17381	assertEquals ( V8Value. INT_8_ARRAY, array. getType ( ) )
17382	assertTrue ( resultComparator. compare ( od1, od2 ) == 0 )
17383	assertEquals ( "Message not found", "Please enter a value", driver. findElement ( By. cssSelector ( ".error" ) ). getText ( ) )
17384	assertEquals ( "Script", result )
17385	Assert. assertNotNull ( "No message context", messageContext )
17386	assertNotNull ( client )
17387	assertEquals ( point, roundtrip )
17388	Assert. assertEquals ( 2, result. size ( ) )
17389	assertTrue ( msg, dynAny. type ( ). equal ( tc ) )
17390	assertTrue ( success )
17391	assertFalse ( files. isEmpty ( ) )
17392	assertEquals ( templates, vals )
17393	assertEquals ( to1, to2 )
17394	assertEquals ( JSON_ARRAY, json )
17395	this. assertGet ( "policytypes/allvisualappearancesdata", "entitytypes/policytypes/allvisualappearances.json" )
17396	assertEquals ( Status. BACKOFF, status )
17397	assertTrue ( Pattern. matches ( "(?s).*/valueBinding06.jsp PASSED.*", page. asXml ( ) ) )
17398	Assert. assertEquals ( expectedResult, resultString )
17399	assertEquals ( 32, cn. getNumCells ( ) )
17400	assertThat ( builder. getDom ( "test-state" ), is ( "" ) )
17401	Assert. assertNull ( caixa )
17402	assertNotNull ( Query. reader ( "UAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
17403	Assert. assertTrue ( c_xml. createCoreXml ( new File ( "e:/core-context.xml" ) ) )
17404	assertThat ( new RsPrint ( response ). printBody ( ), is ( equalTo ( "identity was not found" ) ) )
17405	assertThat ( token. image, equalTo ( "user-agent" ) )
17406	assertEquals ( 50, reader. position ( ) )
17407	assertEquals ( "Levin", lastName )
17408	assertThat ( response, containsString ( "" + "% Note: tag filtering is disabled,\\n" + "%       Only showing objects WITH tag(s): incorrect" ) )
17409	assertEquals ( "[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
17410	Assert. assertEquals ( before + 1, Context. getProviderService ( ). getAllProviders ( ). size ( ) )
17411	assertTrue ( container. children. isEmpty ( ) )
17412	assertEquals ( "{\\"error\\":\\"CallError\\",\\"callId\\":\\"CallId\\",\\"errorCode\\":\\"ErrorCode\\",\\"errorDescription\\":\\"ErrorDescription\\",\\"errorDetails\\":\\"ErrorDetails\\"}", jsonMessage )
17413	assertThat ( converter. getClass ( ), is ( typeCompatibleWith ( ReflectionConverter. class ) ) )
17414	assertEquals ( MICRO ( MICRO ), u )
17415	assertEquals ( "renderer must not overwrite leaf icon", null, renderer. getLeafIcon ( ) )
17416	assertTrue ( result. getRightOnly ( ). contains ( "only.type2.value" ) )
17417	assertThat ( status, is ( 201 ) )
17418	assertEquals ( ptu, ptu. asPrimitiveTypeUsage ( ) )
17419	assertEquals ( 123L, book. getId ( ) )
17420	assertEquals ( "HI", result )
17421	assertEquals ( HomeController. HOME_VIEW, view )
17422	Assert. assertEquals ( "employee", tableName )
17423	assertEquals ( new RawSignResponse ( RawSignResponse. USER_PRESENT_FLAG, COUNTER_VALUE, SIGNATURE_SIGN ), rawSignResponse )
17424	assertNotNull ( testTx )
17425	Assert. assertEquals ( "(aa_change_extension (aa_point_location (aa_char Ala) 124) (aa_char Thrext) ext *?)", aa_change_extension. toStringTree ( parser ) )
17426	Assert. assertEquals ( hh. getUserName ( ), newHH. getUserName ( ) )
17427	context. assertIsSatisfied ( )
17428	assertEquals ( "a", i. next ( ) )
17429	Assert. assertEquals ( hash, checksum. getValue ( ) )
17430	Assert. assertEquals ( buffer. toString ( ), "(1, 2, 3)" )
17431	Assert. assertEquals ( expectedMethod, m )
17432	assertEquals ( "read - Patient/1 - RequestBodyFhir", captor. getValue ( ) )
17433	assertEquals ( expecting, found )
17434	assertNotNull ( TollFree. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "US" ). read ( ) )
17435	assertThat ( pong, containsString ( "OK" ) )
17436	assertEquals ( 0, janus. getServers ( ). size ( ) )
17437	assertEquals ( aux. getId ( ), USER_NAME )
17438	Assert. assertFalse ( result. isEmpty ( ) )
17439	assertEquals ( "ranzzz", Bytes. toString ( res ) )
17440	assertEquals ( true, getLoadLayerDefinitionAction ( ). isEnabled ( ) )
17441	Assert. assertEquals ( 1L, vm. getStack ( ). pop ( ) )
17442	assertThat ( rule. match ( sentence ). length, is ( 0 ) )
17443	assertTrue ( copy. getAreNodeLabelsAcceptedByRM ( ) )
17444	assertEquals ( "3 啶�啶苦く啷� 啷�啶距う", t. format ( new Date ( 1000 * 60 * 60 * 24 * 3 ) ) )
17445	assertEquals ( "1234567890123456700000000000100012345620002042009", formularioSondaReturn. getReturn ( ) )
17446	Assert. assertNull ( found )
17447	assertEquals ( "select subEntity_1 from Entity entity_0 inner join entity_0.subEntityMap subEntity_1", query )
17448	assertSame ( GBP_2_34, test )
17449	assertEquals ( "Response body is not correct.", USER_IN_REALM1, Utils. makeCallWithBasicAuthn ( principalServlet ( webAppURL ), USER_IN_REALM1, CORRECT_PASSWORD, SC_OK ) )
17450	assertThat ( options. getCannedAcl ( ), is ( ConfigurationVariable. CANNED_ACL. defaultStringValue ( ) ) )
17451	assertThat ( result, equalTo ( false ) )
17452	assertEquals ( nw. getScore ( ), alignment. getScore ( ), PRECISION )
17453	assertEquals ( "test", result. getString ( 0 ) )
17454	Assert. assertNotNull ( writer )
17455	assertEquals ( 1, count )
17456	assertEquals ( testStyle, classUnderTest. getIdentifierStyle ( ) )
17457	assertThat ( child. getAngle ( ), IsEqual. equalTo ( 25f ) )
17458	Assert. assertEquals ( "did not get expected data length", testLen, result. length ( ) )
17459	assertKernel ( kernel, RECT, e )
17460	assertTrue ( extender. getZoomLevel ( ) == zoomLevel )
17461	assertNull ( chain. getForwardURL ( ) )
17462	assertResultIs ( c )
17463	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
17464	assertNotNull ( AvailableAddOn. fetcher ( "XBXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
17465	assertEquals ( expResult, false )
17466	assertEquals ( "UTF-8", methodName )
17467	assertEquals ( "{\\"d\\":{\\"__metadata\\":{\\"id\\":\\"" + BASE_URI + "Rooms('1')\\"," + "\\"uri\\":\\"" + BASE_URI + "Rooms('1')\\",\\"type\\":\\"RefScenario.Building\\"}," + "\\"nr_Building\\":{\\"__metadata\\":{\\"id\\":\\"" + BASE_URI + "Rooms('1')\\"," + "\\"uri\\":\\"" + BASE_URI + "Rooms('1')\\",\\"type\\":\\"RefScenario.Building\\"}," + "\\"nr_Rooms\\":[{\\"__metadata\\":{\\"id\\":\\"" + BASE_URI + "Rooms('1')\\"," + "\\"uri\\":\\"" + BASE_URI + "Rooms('1')\\",\\"type\\":\\"RefScenario.Building\\"}," + "\\"nr_Building\\":{\\"__metadata\\":{\\"id\\":\\"" + BASE_URI + "Rooms('1')\\",\\"type\\":\\"RefScenario.Building\\"}," + "\\"nr_Room
17468	assertEquals ( previousNumberOfIndividuals - 1, size )
17469	assertEquals ( "[0.0, 2.0, 4.0, 6.0, 8.0]", IteratorToGeneratorAdapter. adapt ( range ). toCollection ( ). toString ( ) )
17470	assertThat ( path1. equals ( path2 ), is ( true ) )
17471	assertThat ( generatedType, is ( notNullValue ( ) ) )
17472	Assert. assertTrue ( "User should be logged in", gotException )
17473	assertNotNull ( scriptStatement )
17474	assertThat ( mock. get ( ), is ( "joo" ) )
17475	assertEquals ( EmployeeInt. class, results. get ( ). getDataType ( ) )
17476	assertEquals ( "um maxuto", actual )
17477	assertNull ( container. child. get ( ) )
17478	Assert. fail ( "Authorization failure expected" )
17479	assertEquals ( "org.talend.Driver1", properties. getDriverName ( ) )
17480	assertEquals ( "Address", nameStr )
17481	assertEquals ( "", result )
17482	assertEquals ( actualKeys, expectedKeys )
17483	assertEquals ( 404, resp. getStatusCode ( ) )
17484	assertThat ( validationList, is ( Collections. < String > emptyList ( ) ) )
17485	assertEquals ( "C:/usr/bin/c:/usr/bin/c:/usr/bin", entry. getName ( ) )
17486	assertThat ( i, equalTo ( 2 ) )
17487	assertMatchFailure ( result, MatchField. FieldType. HEADER, "Content-Type", "text/plain;.+", "application/json" )
17488	assertThat ( injectedObject, is ( notNullValue ( ) ) )
17489	assertEquals ( packet, p )
17490	assertCallTree ( callTree, callStack. getStackEvents ( ), true )
17491	assertEquals ( "filename.thumbnail", filename )
17492	assertEquals ( "foIndex", first, foIndex )
17493	assertThat ( allUsers, hasSize ( 0 ) )
17494	assertEquals ( slices [ 0 ], 1 )
17495	assertEquals ( "Expenses 9/12/2002\\n" + " \\tDinner\\t$10.00\\n" + " \\tBreakfast\\t$5.00\\n" + "\\n" + "Meal expenses $15.00\\n" + "Total $15.00", printer. getText ( ) )
17496	assertEquals ( 201, response. getStatusLine ( ). getStatusCode ( ) )
17497	assertEquals ( "some referer", mockResult. included ( "returnPath" ) )
17498	assertEquals ( 0, screenshotPlugin. getTheatreOfBloodNumber ( ) )
17499	assertThat ( clock. currentTime ( ). getNanosecond ( ) % 1000, is ( 0 ) )
17500	assertTrue ( "EntityGroupInfo.compare() did not return false", egic. compareTo ( egip ) == - 1 )
17501	Assert. assertEquals ( ImmutableMap. < String, Object > builder ( ). put ( "feed", "alerts" ). put ( "timestamp", event. getCreatedTime ( ). toString ( ) ). put ( "service", "test" ). put ( "host", "localhost" ). put ( "severity", "service-failure" ). put ( "description", "blargy" ). put ( "data", ImmutableMap. < String, Object > of ( "something1", "a", "something2", "b" ) ). build ( ), event. toMap ( ) )
17502	assertEquals ( e1, e2 )
17503	assertThat ( jsonCompressor. getCompressors ( ), hasSize ( 2 ) )
17504	assertThat ( "getValue", node. getValue ( ), is ( 0L ) )
17505	assertEquals ( property. getType ( ), String. class )
17506	assertThat ( target. TYPE, is ( "InPacketAdded" ) )
17507	assertThat ( method. propertyName ( ), is ( "name" ) )
17508	assertEquals ( "expected user should equal with result obtained from SCIM REST API", expectedResponse. getEntity ( ), result. getEntity ( ) )
17509	assertEquals ( "", res )
17510	assertPlanEquals ( expect, plan )
17511	assertions. isNotEqualTo ( actual )
17512	assertFalse ( proxyHttpHeader. isValid ( ) )
17513	assertNull ( nwIf. getFlowId ( ) )
17514	assertEquals ( error. getErrorType ( ), error. getArchetype ( ) )
17515	assertTrue ( getExpectedErrorMsg ( ), result )
17516	assertEquals ( "Should be a offset out of range", 0, reader. skip ( split, context ) )
17517	assertEquals ( ZippelGCD ( a, b ). monic ( ), EZGCD ( a, b ). monic ( ) )
17518	assertNotNull ( response )
17519	assertJson ( "{'value': 1.1}", serialize ( bean ) )
17520	assertEquals ( expectedResp, testResp )
17521	assertEquals ( "", result )
17522	assertTrue ( nicHandle. equals ( NicHandle. parse ( "DW", source, countryCodes ) ) )
17523	assertEquals ( expectedBindingString, relativizedVolumeString )
17524	assertEquals ( screens, url )
17525	assertTrue ( isEqual ( expectedStream, actualStream ) )
17526	Assert. assertEquals ( "did not get expected file size", 2, actual )
17527	Assert. assertTrue ( responseList. size ( ) < 2 )
17528	assertEquals ( explainUserKramer, explainUserKramerDuplicate )
17529	Assert. assertEquals ( null, actualValue )
17530	Assert. assertEquals ( expected, hexString )
17531	assertCount ( 0L, "set =?", Collections. emptySet ( ) )
17532	assertThat ( text, is ( "Batman" ) )
17533	Assert. assertEquals ( 1, jobs. size ( ) )
17534	assertThat ( this. graphBuilder, hasNodesAndEdges ( new String [ ] { "\\"groupId:parent:jar:version:compile\\"", "\\"groupId:child1-1:jar:version:compile\\"", "\\"groupId:child1-2:jar:version:compile\\"" }, new String [ ] { "\\"groupId:parent:jar:version:compile\\" -> \\"groupId:child1-2:jar:version:compile\\"[style=dotted]", "\\"groupId:parent:jar:version:compile\\" -> \\"groupId:child2-1:jar:version:compile\\"[style=dotted]", "\\"groupId:parent:jar:version:compile\\" -> \\"groupId:child2-2:jar:version:compile\\"[style=dotted]" } ) )
17535	assertEquals ( BigDecimal. ZERO, item. getQuantity ( ) )
17536	assertEquals ( 2, changes. size ( ) )
17537	assertThat ( "default image id", sut. getImageId ( ), is ( equalTo ( VM. DEFAULT_IMAGE_ID ) ) )
17538	assertTrue ( validator. validate ( sslTermination, PUT ). passedValidation ( ) )
17539	assertOut ( "/**\\n * @constructor\\n */\\norg.apache.royale.A = function() {\\n};" )
17540	Assert. assertEquals ( "1080::8:800:200c:417a", v )
17541	assertEquals ( 1, branch_conditions. size ( ) )
17542	assertEquals ( expResult, result )
17543	assertThat ( reference. getK8sMarkdownLink ( ), is ( "start.yaml" ) )
17544	assertSame ( 10, camelExchange. getOutputType ( ) )
17545	assertSame ( temporaryQueue, stompJmsSession. createTemporaryQueue ( ) )
17546	assertStat ( result )
17547	assertThat ( errors, hasFieldErrors ( "middleName", "MiddleName.invalid" ) )
17548	Assert. assertThat ( NumberProcessUtils. toUnsigned31bitsInteger ( i, j ), is ( j ) )
17549	assertEquals ( expResult, result )
17550	assertNotNull ( paquete. getId ( ) )
17551	assertEquals ( "no return type", 0, parsed. returnType. arrayDepth )
17552	assertEquals ( "echoPath/a1/b1/c1//'true'/'123'", r )
17553	Assert. assertFalse ( condition. evaluate ( new MockRewrite ( ), new MockEvaluationContext ( ) ) )
17554	assertEquals ( 10 + 100, c. renamedGetValue ( ) )
17555	assertNotNull ( ShortCode. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
17556	assertDecimalEquals ( sma. getValue ( 105 ), 10 )
17557	assertEquals ( 1.0, result, 0.1 )
17558	assertTrue ( pid > 0 )
17559	Assert. assertEquals ( "12 ����������������������������������������������������������������������������������
17560	assertEquals ( packed, sw. toString ( ) )
17561	Assert. assertNotNull ( "no uri", actual )
17562	assertEquals ( HttpResponse. SC_BAD_REQUEST, response. getHttpStatusCode ( ) )
17563	assertTrue ( true )
17564	Assert. assertEquals ( JavaConfigContainer. class, container. context. getBean ( "container" ). getClass ( ) )
17565	assertEquals ( "Tenant Id should be null", null, templateInfo. getTenantId ( ) )
17566	assertFalse ( displayable )
17567	assertThat ( domainName, is ( queriedResourceDomain ) )
17568	assertFalse ( evaluator. isLoggingScopedEnabled ( ) )
17569	assertArrayEquals ( PASSWORD_BYTE_ARRAY, credentials. getPassword ( ) )
17570	Assert. assertTrue ( pss. toString ( ). contains ( "123" ) )
17571	assertEquals ( concernedDPC. getConcernedDPC ( ), concernedDPC2. getConcernedDPC ( ) )
17572	assertThat ( cheeses, is ( equalTo ( Arrays. asList ( "Munster", "Swiss", "Sharp cheddar" ) ) ) )
17573	Assert. assertEquals ( attribute, 2L )
17574	assertTrue ( s1. equals ( s2 ) )
17575	assertNotNull ( flux )
17576	Assert. assertEquals ( "simpleType restricts name", restriction )
17577	assertEquals ( expected, actual, 0.0001 )
17578	assertEquals ( "SSS:1234trueW:5", x. toString ( ) )
17579	assertEquals ( " Echo Message = vasu", response )
17580	assertEquals ( result, "2007-12-03" )
17581	assertEquals ( "getApplicationManifest timeout", latch. getCount ( ), 0 )
17582	assertNotNull ( "daysOfTheWeek must not be null", monthView. getDaysOfTheWeek ( ) )
17583	assertEquals ( "&#x", writer. toString ( ) )
17584	assertEquals ( "3 ��������������������", t. format ( new Date ( 1000 * 60 * 60 * 3 ) ) )
17585	paths. assertIsEmptyDirectory ( INFO, actual )
17586	Assert. assertEquals ( d, a. select ( rowInd, colInd ) )
17587	assertThat ( tenantIdProvider. dmnParameters. size ( ), is ( 0 ) )
17588	assertThat ( differences, contains ( ciString ( "DEV-MNT-2" ) ) )
17589	assertThat ( readTag, is ( equalTo ( tag ) ) )
17590	assertTrue ( "Document should be in exception routing", document. isException ( ) )
17591	assertNotNull ( mh )
17592	assertEquals ( EdmSimpleTypeKind. TemporalNull, edmDateType )
17593	assertEquals ( expected, result )
17594	assertEquals ( expected, Year. parse ( "2016" ) )
17595	assertTrue ( basedir. exists ( ) )
17596	assertNotNull ( p2 )
17597	assertions. isEqualTo ( null )
17598	assertNotNull ( decryptor )
17599	mockEndpoint. assertIsSatisfied ( )
17600	assertEquals ( "UTF-8", response. getEscapedText ( ) )
17601	Assert. assertEquals ( uri, result )
17602	assertEquals ( "Patient 1", result )
17603	Assert. assertEquals ( CREATE_SIZE, response. getThreadDumpsSize ( ) )
17604	assertTrue ( keyDefinition. isDefaults ( ) )
17605	assertEquals ( "a 3", result )
17606	assertThat ( "static int value", obj, equalTo ( 5 ) )
17607	assertTrue ( rowChange. compareTo ( rowChange2 ) == 0 )
17608	assertPopupVisible ( )
17609	assertTrue ( sut. equals ( null ) )
17610	assertEquals ( 2, count )
17611	assertEquals ( "Address", nameStr )
17612	Assert. assertEquals ( dataInicioAtividade, retorno. getDataInicioAtividade ( ) )
17613	assertEquals ( 1, experiment. getConstraintCollections ( ). size ( ) )
17614	assertEquals ( new BigDecimal ( "-0.1" ), entity. getN73 ( ) )
17615	assertEquals ( actualJsonQuery, testJsonQuery )
17616	Assert. assertTrue ( ExpectedConditions. textToBePresentInElement ( By. id ( "overviewPage" ), "You arrived at overview page" ). apply ( driver ) )
17617	assertThat ( result, is ( false ) )
17618	Assert. assertTrue ( firstConceptSet. getSortWeight ( ) > secondConceptSet. getSortWeight ( ) )
17619	assertEquals ( "Config", caller. getResponseBody ( ) )
17620	assertThat ( result, is ( true ) )
17621	assertEquals ( "{ \\"fieldname\\" : { \\"$mod\\" : \\"?\\" } }", filterParameters. toString ( ) )
17622	Assert. assertEquals ( "PUT: Michael", result )
17623	assertEquals ( 5, value. asInt ( 10 ) )
17624	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
17625	assertEquals ( HOSTNAME, message )
17626	assertNameToken ( ast, "bwahaha" )
17627	assertEquals ( "urn:oid:0.1.2.3", parsed. getEntry ( ). get ( 0 ). getResource ( ). getId ( ). getValueAsString ( ) )
17628	assertEquals ( HttpStatusCode. INTERNAL_SERVER_ERROR. getStatusCode ( ), connection. getResponseCode ( ) )
17629	assertEquals ( 5, d. asByte ( ) )
17630	Assert. assertEquals ( "[\\"alice\\",[\\"bob\\",\\"charlie\\"]]", result. toString ( ) )
17631	assertEquals ( VALUE, value. get ( ) )
17632	assertEquals ( "dist job res is not 0:", 0, res )
17633	assertThat ( result, is ( notNullValue ( ) ) )
17634	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
17635	assertAllTargetsCount ( 0 )
17636	assertEquals ( 0, historicIncidents )
17637	assertIsAborted ( tx )
17638	assertThat ( cookieJar, instanceOf ( Generic. class ) )
17639	assertEquals ( 1, ksession. fireAllRules ( ) )
17640	Assert. assertEquals ( input, result )
17641	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
17642	Assert. assertEquals ( "000003", generated )
17643	assertTrue ( kb. getResults ( ). getMessages ( Message. Level. ERROR ). isEmpty ( ) )
17644	assertOut ( "a as b" )
17645	assertEquals ( Bar. class, test. getStatement ( 1 ). getReturnClass ( ) )
17646	assertThat ( result. getPayloadAsString ( ), equalTo ( "Message accepted." ) )
17647	Assert. assertEquals ( fakeResult, authentication )
17648	assertEquals ( "Invalid indicator pattern: " + matchingPattern, expectedValue, document. getValue ( expression ) )
17649	assertThat ( builder, hasToString ( "<a class=\\"flattr-badge-small\\">" + "<img src=\\"http://api.flattr.com/button/flattr-badge-small.png\\"" + " width=\\"93\\" height=\\"20\\" alt=\\"Flattr this\\" title=\\"Flattr this\\" border=\\"0\\" />" + "</a>" ) )
17650	assertProcessEnded ( processInstance. getId ( ) )
17651	Assert. assertEquals ( expectedId, id )
17652	Assert. assertEquals ( PropertyValue. create ( "Alice" ), result. get ( 0 ). getProperty ( 0 ) )
17653	assertEquals ( result, range. exclude ( other ) )
17654	assertThat ( filteredVersions, is ( new ArtifactVersion [ ] { version ( "1.1.1" ) } ) )
17655	assertArrayEquals ( new byte [ ] { '?', 0, 0, 0 }, value. getDataAsBinaryStr ( ) )
17656	Assert. assertEquals ( 3, a. getNumberOfFinalMethods ( ) )
17657	assertEquals ( "There should be no validation providers", 0, validationProviders. size ( ) )
17658	assertEquals ( "boolean mapper serialization is wrong", expected, actual )
17659	assertOut ( "baz: function baz(x) {\\n\\treturn x + 1;\\n}" )
17660	assertEquals ( "A Link1 (http://xyz/abc) B", result )
17661	assertEquals ( expResult, result )
17662	assertResultSet ( fc. getMembers ( filter, new TypedObjectNodeXPathEvaluator ( ) ), "PHILOSOPHER_1", "PHILOSOPHER_2" )
17663	assertEquals ( expectedDouble, executeAndReturnNumber ( FloatToInt. class ), 0 )
17664	assertEquals ( p1, p2 )
17665	assertEquals ( p4, p5 )
17666	assertThat ( result, is ( "Hello, world!" ) )
17667	assertThat ( event. getRelease ( ), equalTo ( expectedValue ) )
17668	assertTrue ( selector. evaluate ( source ) )
17669	assertEquals ( "hdfs://namenode1/user/test_user/app/", props. getAppPath ( ) )
17670	assertNotNull ( bss )
17671	assertTrue ( content. contains ( "Hello World" ) )
17672	assertNotNull ( union )
17673	assertNotNull ( homepage )
17674	assertEquals ( subscriptionName, editFilter. getSubscriptionName ( ) )
17675	Assert. fail ( "Expected to fail, but didn't" )
17676	assertEquals ( expectedQuery, actualQuery )
17677	assertEquals ( expResult, result )
17678	assertThat ( validationMessages. size ( ), is ( 0 ) )
17679	assertEquals ( EXPECTED. replace ( ODataHttpMethod. GET. name ( ), ODataHttpMethod. GET. name ( ) ). replace ( HttpHeaders. CONTENT_TYPE, Arrays. asList ( HttpContentType. APPLICATION_JSON ) ), entity )
17680	assertEquals ( "Native and term comparisons are different", nativeComparison, mapperComparison )
17681	assertEquals ( 0, cmd. args. size ( ) )
17682	this. assertAnalyzesTo ( _a, "\\"Test tesT2\\"@en", new String [ ] { "Test", "tesT2" }, new String [ ] { "word", "word" } )
17683	Assert. assertTrue ( allRight )
17684	assertEquals ( expectedNumEntries, actualNumEntries )
17685	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
17686	assertUnderflow ( ( double ) x - ( double ) y, result, x - y )
17687	assertThat ( field. getPropertyDataSource ( ), is ( notNullValue ( ) ) )
17688	assertThat ( issues, is ( empty ( ) ) )
17689	assertEquals ( "foo = bar", base. toString ( ) )
17690	assertTrue ( getNoErrorMsg ( ), result )
17691	assertTrue ( latch. await ( 10, TimeUnit. SECONDS ) )
17692	assertEquals ( expecting, found )
17693	Assert. assertEquals ( true, config. isDebug ( ) )
17694	assertTrue ( ( Boolean ) result )
17695	assertNotNull ( Challenge. fetcher ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "identity", "YFXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "sid" ). fetch ( ) )
17696	assertThat ( panel. getBackgroundPainter ( ), is ( notNullValue ( ) ) )
17697	assertThat ( "Expected the property to not be set", getSettings ( ). getString ( "key" ), nullValue ( ) )
17698	assertEqualsWithoutWhiteSpaces ( "cylinder(h=10, r=5, $fn=8, center=true);", prism )
17699	assertThat ( options. getUploadBufferSize ( ), is ( 0 ) )
17700	assertNotNull ( result )
17701	assertEquals ( 24, result )
17702	assertThat ( out. value, is ( new StringOption ( "Hello, world!". substring ( 0, 10 ) ) ) )
17703	assertNotNull ( openAPI )
17704	assertNull ( result )
17705	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + destPdf, sourceFolder + cmpPdf, destinationFolder ) )
17706	assertNotNull ( book )
17707	assertArrayEquals ( new String [ ] { }, command )
17708	Assert. assertEquals ( input, field. getValue ( ) )
17709	Assert. assertEquals ( expected, actual )
17710	assertEquals ( "property", property. toString ( ) )
17711	assertEquals ( CONTENT, action. getContent ( ) )
17712	assertOut ( "var a:Array = new Array('Hello', 'World')" )
17713	assertNull ( logEntries. get ( "testUser" ) )
17714	assertTrue ( upstreamCtx. isInvokable ( operatorDef, strategy ) )
17715	assertEquals ( expectedFilename, fileName )
17716	Assert. assertTrue ( result. isSetUnitOfMeasurement ( ) )
17717	Assert. assertTrue ( cover. getBoundaries ( ). getZ ( ). getMin ( ) < TEST_MODEL. getBoundaries ( ). getZ ( ). getMin ( ) )
17718	assertTrue ( "Failed authentication with wrong password was not logged", loggedFailedAuth ( AUDIT_LOG_FILE, USER ) )
17719	out. assertIsSatisfied ( )
17720	assertQ ( req, "//result[@name='response'][@numFound='1']", "//result[@name='response']/doc[1]/str[@name='id'][.='5']" )
17721	assertTrue ( instance. isBuilding ( event, project ) )
17722	Assert. assertEquals ( "(A124_C125del2)", del. toHGVSString ( AminoAcidCode. ONE_LETTER ) )
17723	assertEquals ( "allocation that filled the gap after allocate should have been merged with adjacent allocation", Lists. newArrayList ( new Allocation ( control, 0, 5 ), new Allocation ( withLogin, 15, 5 ) ), allocations. getAllocations ( ) )
17724	assertTrue ( action. isExecuted ( ) )
17725	Assert. assertTrue ( "Failed on iteration " + n, Util. isOrientationInverted ( vel, q ) )
17726	assertTrue ( arduino. detectAlreadySentReadyPaket ( ) )
17727	assertEquals ( true, result )
17728	assertEqualsIsTransitive ( child1, child2, child3 )
17729	assertEquals ( ElasticSearchIndexProvider. ES_KEYWORD_TYPE, type )
17730	assertEquals ( 0, app. executeApplication ( args ) )
17731	assertEquals ( expectedValue, propertyValue )
17732	assertEquals ( 0, userList. indexOf ( user ) )
17733	assertNotEquals ( playlist1, playlist2 )
17734	statusSupport. assertReloadOccured ( )
17735	assertThat ( impl. containsAxiomWithoutAnnotations ( axiom, ontologyId ), is ( false ) )
17736	assertEquals ( expected, actual )
17737	assertEquals ( "61 62 63 64 65 66 67 68 68 69 6a 6b 6c 6d 6e 6f 70 abcdefgh ijklmnop" + EOL, os. toString ( ) )
17738	assertEquals ( "TestValue", ( ( Context ) context. lookup ( "context" ) ). lookup ( "test" ) )
17739	assertEquals ( "bar", output )
17740	assertThat ( target. validate ( ), is ( true ) )
17741	assertEquals ( "DECIMAL(0,0)", definition )
17742	assertMappedFieldValueIs ( "CustomMappedValue" )
17743	TestCase. assertTrue ( result )
17744	Assert. assertNull ( testSubject. subModel ( new ScadGenerationContextFactory ( ). exclude ( 11 ). create ( ) ) )
17745	assertMetadata ( is )
17746	Assert. fail ( "create object with wrong MD5 should fail" )
17747	assertEquals ( arr, resultArr )
17748	assertTrue ( builder instanceof NamedClusterConfigBuilder )
17749	assertEquals ( one. hashCode ( ), two. hashCode ( ) )
17750	assertEquals ( expected, actual )
17751	assertNull ( result )
17752	assertNull ( client. lastBatch )
17753	assertEquals ( "3 啶�啶苦く啷� 啷�啶距う", t. format ( new Date ( 1000 * 60 * 60 * 24 * 3 ) ) )
17754	Assert. assertTrue ( isEqual ( distance, 0.269098 ) )
17755	assertNotEquals ( right, left )
17756	Assert. assertTrue ( "SifAgent should extend agent", agent instanceof Agent )
17757	assertEquals ( "abc\\n", found )
17758	assertEquals ( "", result )
17759	assertEquals ( 0, SnowcastSequenceUtils. compareTimestamp ( sequence1, sequence2 ) )
17760	assertThat ( toUnqualifiedVersionlessIdValues ( result ), containsInAnyOrder ( pt0id. getValue ( ) ) )
17761	assertNotNull ( c )
17762	editor. assertProblems ( "blah-blah|unknown 'Version'" )
17763	assertEquals ( "1234567890", actual )
17764	assertEquals ( "aTestString", classUnderTest. getClientName ( ) )
17765	assertEquals ( expectedFormKey, actualFormKey )
17766	assertEquals ( 90, ( ( Service ) vrp. getJobs ( ). get ( "2" ) ). getServiceDuration ( ), 0.1 )
17767	assertThat ( slice. events. get ( 0 ). event, equalTo ( events. get ( 7 ) ) )
17768	assertEquals ( relSet. size ( ), relIterable. size ( ) )
17769	assertTrue ( genericObjectPool. validate ( ) )
17770	assertThat ( session. getVersioningState ( ). getSuffix ( ), is ( nullValue ( ) ) )
17771	assertEquals ( "java.lang.annotation.Annotation", name. getImage ( ) )
17772	Assert. assertEquals ( 2, allMembers ( ) )
17773	assertions. endsWith ( )
17774	assertTrue ( content. contains ( "This is page foo" ) )
17775	Assert. assertEquals ( expected, actual )
17776	assertEquals ( "Only the excluded regions should be ignored", 0, changes. size ( ) )
17777	Assert. assertEquals ( "0", result. getReturnCode ( ) )
17778	assertEquals ( adaptee, target. adapt ( ) )
17779	assertNull ( agent. getClient ( ) )
17780	assertEquals ( true, result )
17781	Assert. assertEquals ( String. format ( msg, r, c ), expected, actual, 0. )
17782	assertEquals ( "https://github.com/john/test/issues/4", url )
17783	assertEquals ( "{\\"store\\":{\\"book\\":[{\\"category\\":\\"reference\\",\\"author\\":\\"Nigel Rees\\",\\"title\\":" + "\\"Sayings of the Century\\",\\"price\\":8.95},{\\"category\\":\\"fiction\\",\\"author\\":" + "\\"Evelyn Waugh\\",\\"title\\":\\"Sword of Honour\\",\\"price\\":12.99}],\\"bicycle\\":" + "{\\"color\\":\\"red\\",\\"price\\":19.95}},\\"arrayTest\\":\\"new Author value\\"}", result. get ( RETURN_RESULT ) )
17784	assertEquals ( expected, found )
17785	assertOutWithMetadata ( outTemplate. replaceAll ( "AppName", appName ) )
17786	assertEquals ( "The Decoded Data should be the same as the input Data", data, embedding. getDecodedData ( ) )
17787	Assert. assertEquals ( expected, actual )
17788	assertJsonEquals ( ImmutableMap. of ( "topic", "test-topic", "payload", data ), message )
17789	assertEquals ( 4, variableInstances. size ( ) )
17790	assertDocument ( session. getSessionFactory ( ), "Enterprise", "{ '_id' : 'enterprise-1', 'name' : 'TIMBER_TRASHING_INC', " + "'revenueByDepartment' : {" + "'sale' : 1000," + "'sawing' : 2000," + "'planting' : 3000," + "'revenue' : {" + "'sale' : 1000," + "'sawing' : 2000," + "'planting' : 3000" + "}" + "}" )
17791	assertEquals ( userCredentials. size ( ), 5 )
17792	assertThat ( connection2, not ( is ( connection ) ) )
17793	Assert. assertTrue ( score > 0 )
17794	assertFalse ( ss. validate ( ) )
17795	assertNotNull ( taskKey )
17796	assertEquals ( 200, c. getResponseCode ( ) )
17797	assertEquals ( policyName, policy. getName ( ) )
17798	assertEquals ( "Sales:Pattern", pattern. toString ( ) )
17799	assertThat ( javaSource, containsString ( "蝎些��懈��携" ) )
17800	assertThat ( rf. format ( result ), is ( sb. toString ( ) ) )
17801	assertArrayEquals ( expected, Samples. nextSample ( weights, 0 ) )
17802	assertEquals ( "Base value is not properly parsed", "0.9999", parsed )
17803	Assert. assertEquals ( "Soft line   =\\t\\r\\nHard line\\r\\n", readText ( decoder ) )
17804	arrays. assertDoesNotContain ( description, null, new short [ 2 ] )
17805	assertEquals ( expectedQuery, actualQuery )
17806	assertThat ( checkpoint. getCheckpoint ( shardId ), equalTo ( extendedSequenceNumber ) )
17807	assertEquals ( "Find by start and end time with none in that period is still returning a list with one event", 0, events. size ( ) )
17808	assertThat ( testInstance. toList ( ), sameInstance ( ( List < Document > ) testInstance ) )
17809	assertThat ( output. toString ( ), containsString ( "not found" ) )
17810	assertEquals ( expResult, result )
17811	assertEquals ( 1, fixture. readByte ( ) )
17812	assertEquals ( 6L, statistics. getQueryPlanCacheHitCount ( ) )
17813	arrays. assertDoesNotContain ( description, null, newArray ( true ) )
17814	Assert. assertEquals ( 8.0, y [ 0 ], 1.0e-12 )
17815	assertTimerWithDuration ( "catch", TIMER_DURATION )
17816	assertThat ( sub. shouldNotify ( dateTime ( "2011" ), AlertType. ERROR ), is ( false ) )
17817	Assert. assertTrue ( responseList. size ( ) == 1 )
17818	Assert. assertNotNull ( irodsFile )
17819	assertEquals ( "(2 1 a)\\n", found )
17820	assertThat ( reportEntries. size ( ), is ( 0L ) )
17821	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. REGEX, v, TERM_FACTORY. getConstantLiteral ( "^Ste(v|ph)en$" ), TERM_FACTORY. getConstantLiteral ( "" ), ExpressionOperation. STRING, TERM_FACTORY. getConstantLiteral ( "i" ) ), translation. get ( 0 ) )
17822	assertEquals ( 0.9, impl. getBackoffFactor ( ), 0.01 )
17823	assertThat ( testValue, is ( expectedValue ) )
17824	assertNotEquals ( firstUserWrapper. getName ( ), secondUserWrapper. getName ( ) )
17825	assertAnnotationCompletions ( "@Value(\\"#{345${data.prop2<*>}\\")", "@Value(\\"#{345${else.prop3<*>}\\")", "@Value(\\"#{345${spring.prop1<*>}\\")" )
17826	assertThat ( count, is ( 5L ) )
17827	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
17828	assertEquals ( testValue, outValue, 0.0 )
17829	assertTrue ( new File ( "target/test/remove/multi/header.txt" ). exists ( ) )
17830	Assert. assertEquals ( expectedMessage, createString ( out ) )
17831	assertThat ( query. isBrief ( ), is ( false ) )
17832	assertEquals ( totalStats. getSummary ( ), aggregatedStats, 10E-12 )
17833	Assert. assertTrue ( success )
17834	assertThat ( matcher. matches ( "foo" ), is ( true ) )
17835	assertArrayEquals ( expected, Proto. build_byte ( ( byte ) 0x00 ) )
17836	assertThat ( manager. getApplicationPreferences ( ), is ( notNullValue ( ) ) )
17837	assertParsingIsCorrect ( nativeQuery, expectedCacheName, expectedProjections )
17838	assertTrue ( payload. getThreadId ( ). get ( ). equals ( "woof" ) )
17839	assertEquals ( "<bar>foo_value</bar>", elt. getAttribute ( "bar" ) )
17840	assertEquals ( 72D, hours, 0 )
17841	assertEquals ( bolt. getColumnVisibility ( "bolt_column_1" ), vis )
17842	Assert. assertFalse ( result )
17843	assertTrue ( c1 instanceof PublicCloneable )
17844	assertEquals ( "Basic dXNlcjpwYXNzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
17845	assertEquals ( "TestA", name )
17846	Assert. assertEquals ( 0L, vm. getStack ( ). pop ( ) )
17847	assertEquals ( "Failed to generate foreach loop with list", FOREACH_LIST_WITH_LIST, foreachWithList )
17848	assertTokens ( new IdentifierToken ( "x" ), Tokens. LP_CALL, Tokens. RP, Tokens. FACTORIAL )
17849	assertTrue ( authorizer. isAuthorized ( context, profiles ) )
17850	assertTrue ( messageLatch. await ( 3, TimeUnit. SECONDS ) )
17851	assertEquals ( 1, is. available ( ) )
17852	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, testName + "_diff" ) )
17853	assertEquals ( 7, tuple. len ( ) )
17854	assertTrue ( isGood )
17855	Assert. fail ( "Should throw BadRequestException" )
17856	assertTrue ( page. getBody ( ). asText ( ). indexOf ( "Flash is not enabled" )!= - 1 )
17857	assertNoViewCalls ( )
17858	Assert. assertNotNull ( json. getString ( "uid" ) )
17859	assertEquals ( "A,B,C", s )
17860	assertThat ( request. equals ( request2 ), is ( false ) )
17861	assertEquals ( "", result )
17862	assertCanTake ( manager, 0, 1 )
17863	assertEquals ( new Integer ( 1 ), probe. count )
17864	assertEquals ( "Expected 0 results!", 0, n )
17865	assertEquals ( "<table><tbody><tr><td>aaa</td><td>bbb</td></tr></tbody></table>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
17866	assertEquals ( m1, m2 )
17867	assertEquals ( fileInfo. getFileId ( ), fileId )
17868	assertTrue ( f. getProperties ( ). containsKey ( "flipping" ) )
17869	assertEquals ( 0, resultSet. getColumnCount ( ) )
17870	assertEquals ( "test", t1. toString ( ) )
17871	assertNull ( idxConf. getRecordFilter ( ). getIndexCase ( "myrecordtable", record ) )
17872	assertEquals ( "String value does not match", bookmark. getDescription ( ), loadedBookmark. getDescription ( ) )
17873	assertTrue ( result. isSuccess ( ) )
17874	Assert. assertArrayEquals ( testData32bitFloat, result, 0.0f )
17875	Assert. assertEquals ( "HTML class should have been appended without a space separator", expected, comp. getHtmlClass ( ) )
17876	assertEquals ( "byte array from bytes", val, zl. getBI ( ) )
17877	assertEquals ( "logs", property )
17878	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
17879	assertEquals ( 0, historyService. createHistoricProcessInstanceQuery ( ). count ( ) )
17880	assertSame ( Byte. class, value. getValue ( ) )
17881	assertThat ( mySignalHandler. wasCalled, IsEqual. equalTo ( false ) )
17882	assertThat ( found, is ( false ) )
17883	assertArrayEquals ( new long [ ] { 1, 2 }, res. getShape ( ) )
17884	assertThat ( r, hasEntry ( "set", ( Object ) ImmutableList. of ( "cow", "dog", "fish" ) ) )
17885	assertFalse ( daemon. isAlive ( ) )
17886	assertEquals ( expected, victim. process ( prefix, nameRequest ( ). fileNumber ( fileNumber ) ) )
17887	Assert. assertEquals ( "Bill", cust. getName ( ) )
17888	Assert. assertEquals ( "2011021513", dateString )
17889	assertEquals ( "3 啶�啶�啷�", t. format ( new Date ( 0 ) ) )
17890	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff24_" ) )
17891	assertEquals ( expected, cls. getCodeBlock ( ) )
17892	assertThat ( getCreatedPod ( ). getSpec ( ). getVolumes ( ), allOf ( hasPvClaimVolume ( "volume-(SERVER_NAME)", "$(SERVER_NAME)-claim" ) ) )
17893	assertTrue ( cache. isCachedDb ( dbName ) )
17894	assertEquals ( ( long ) 8, ( long ) result. getLongWrapperValue ( ) )
17895	assertThat ( result. statusCode, is ( Response. ACCEPTED ) )
17896	assertTrue ( idxSet. contains ( column. getIndex ( ) ) )
17897	assertFeatureValues ( expected, queryText, Arrays. asList ( "single document test case", "new document", "another document" ), getChain ( new TFIDFFeatureExtractor ( ) ), 0 )
17898	assertEquals ( 312L, borrowOrderResult. getBorrowId ( ) )
17899	assertThat ( ( double ) stopwatch. getAverageDuration ( ). getDuration ( TimeUnit. MILLISECONDS ), is ( closeTo ( 100, 50 ) ) )
17900	assertEquals ( "name", service. getMutatorName ( col ) )
17901	assertEquals ( _expectedAddress, _frodo. getAddress ( ) )
17902	editor. assertContentAssist ( editor. positionOf ( "some-release" ), editor. rangeOf ( "releases:\\n" + "- name: some-release\\n", "some-release" ) )
17903	assertThat ( mfp. getProperty ( ), equalTo ( "private.properties" ) )
17904	assertEquals ( "Di Fusco", person. getLastName ( ) )
17905	Assert. assertEquals ( HttpStatus. SC_BAD_REQUEST, response. getStatusCode ( ) )
17906	assertNull ( component. resolve ( "en" ) )
17907	assertThat ( ( String ) c. value, is ( "ASCENDING" ) )
17908	assertEquals ( "{a=2, b=3, c=4}", union. toString ( ) )
17909	assertEquals ( "SELECT g1.e2 FROM g1 WHERE g1.e1 = 'a\\\\'b\\\\\\\\c'", sqlVisitor. toString ( ) )
17910	Assert. assertEquals ( 0644, FilePermissionHelper. toOctalFileMode ( perms ) )
17911	assertSame ( toTest, toTest. setParamsListSeparator ( "a" ) )
17912	assertNotNull ( entry )
17913	assertNotNull ( strategy )
17914	Assert. assertEquals ( 1, id )
17915	Assert. assertEquals ( expected, actual )
17916	assertMockEndpointsSatisfied ( )
17917	assertResultSet ( res )
17918	assertEquals ( 1, eventListener. getEvents ( ). size ( ) )
17919	assertNotNull ( adminUsersController )
17920	assertThat ( driver. findElement ( By. id ( "left.errors" ) ). getText ( ), is ( "invalid combination of left and right" ) )
17921	assertEquals ( "Calculated sum should match sum from test object.", sum, victim. getSum ( ), EPSILON )
17922	Assert. assertEquals ( infoCancelamento, cancelamento. getInfoCancelamento ( ) )
17923	Assert. assertEquals ( hash, 153691919 )
17924	assertTrue ( migrationCheckingState. getStateActionState ( ) instanceof Done )
17925	assertNull ( result )
17926	assertThat ( link, is ( notNullValue ( ) ) )
17927	assertNull ( referenceManager. removeReference ( "foo" ) )
17928	assertEquals ( "result count mismatch for: " + xquery. toString ( ), baseResult. size ( ), results. size ( ) )
17929	assertNotNull ( address )
17930	assertTrue ( quickViewComponent. isVisible ( ) )
17931	mockery. assertIsSatisfied ( )
17932	assertNull ( doc )
17933	assertEquals ( 3, notificationService. getCurrentFileTransferIds ( ). size ( ) )
17934	assertions. isNotNull ( )
17935	assertFalse ( rrc. matches ( context, metadata ) )
17936	Assert. assertEquals ( expected, calculated )
17937	assertEquals ( dt, dt2 )
17938	assertEquals ( "City", argumentCaptor. getValue ( ) )
17939	assertThat ( filters. getResponseFilters ( ). size ( ), is ( 1 ) )
17940	assertTrue ( selectedFile. exists ( ) )
17941	assertTrue ( threadB. isAlive ( ) )
17942	assertEquals ( "de", mapper. writeValueAsString ( new Enum ( "de" ) ) )
17943	assertEquals ( expResult, result )
17944	assertEquals ( "Invalid IP address", "256.256.256.256", plugin. getConfiguration ( ). getHost ( ) )
17945	assertEquals ( HttpStatusCode. OK_200, response. getStatus ( ) )
17946	assertSame ( littleEndianBytes. toByteArray ( ), bigEndianBytes. toByteArray ( ), "littleEndian", "bigEndian" )
17947	assertions. isNotLessThan ( null )
17948	assertEquals ( expResult, result )
17949	assertions. isNotLessThan ( expected )
17950	assertTrue ( pattern. matches ( "-.1" ) )
17951	assertEquals ( expectedUuid, actualUuid )
17952	assertEquals ( "1", result. toString ( ) )
17953	assertEquals ( "Expected 0 results!", 0, n )
17954	assertEquals ( 512L, result )
17955	assertEquals ( "failed to generate class definition implementing interface", CLASS_IMPLEMENTING_INTERFACE, cls )
17956	assertEquals ( "https://github.com/StashBot/StashBot/issues/456", url )
17957	Assert. assertTrue ( "Variant DocumentIF has " + fields. size ( ) + " fields", fields. size ( ) == 3 )
17958	assertEquals ( expectedAutoGeneratedAll, result. get ( "all" ). getMap ( ) )
17959	assertTrue ( vcfFile. exists ( ) )
17960	assertResponse ( response, 403, "[{\\"Forbidden\\": \\"QUERY API methods are disabled on this KairosDB instance.\\"}]\\n" )
17961	assertEquals ( expectedOrder, monitorings. values ( ) )
17962	assertEquals ( f1. hashCode ( ), f2. hashCode ( ) )
17963	assertEquals ( "Wrong result", Long. valueOf ( 1 ), calc. lastValue ( ) )
17964	assertEquals ( "<a href=\\"" + "https://github.com/danielflower/maven-gitlog-plugin/issues/10\\">#10</a> Some commit message", actual )
17965	Assert. fail ( "build listing failure" )
17966	assertTrue ( this. compressed. equals ( compressed ) )
17967	assertEquals ( 1, query ( ). from ( show ). select ( show. acts. count ( ) ). fetchCount ( ) )
17968	assertThat ( storedValue, is ( true ) )
17969	assertEquals ( "0.45", service. getOrderAmount ( "A-OK-223-45" ). toPlainString ( ) )
17970	assertEquals ( 0, messageLatch. getCount ( ) )
17971	assertEquals ( "Does not compare " + nv1 + " & " + nv2, NodeValue. CMP_LESS, NodeValue. compare ( nv1, nv2 ) )
17972	assertNotNull ( order )
17973	Assert. assertEquals ( 42, val )
17974	Assert. assertEquals ( 2, buffer. length ( ) )
17975	Assert. assertTrue ( "should exist", target. exists ( ) )
17976	assertTrue ( "Elytron admin config should be configured", CONTROLLER. isConfigured ( ) )
17977	Assert. assertTrue ( value )
17978	assertEquals ( 3, read )
17979	assertThat ( subject. location ( ), is ( nullValue ( ) ) )
17980	assertEquals ( expected, modelWriter. toString ( ) )
17981	assertThat ( a. isPresent ( ), is ( true ) )
17982	assertSame ( originalList, copy. getListProperty ( ) )
17983	assertThat ( browser. getCurrentUrl ( ), is ( expected ) )
17984	Assert. assertEquals ( numeroSequencialEvento, eventoRetorno. getNumeroSequencialEvento ( ), 0 )
17985	assertThatSql ( query, is ( "SELECT nodes.col1, nodes.col2 FROM table1 AS nodes UNION SELECT edges.col3, edges.col4 FROM table2 AS edges" ) )
17986	Assert. assertEquals ( "The dog ran a rateweiler.", this. realiser. realise ( _sent ). getRealisation ( ) )
17987	assertEquals ( rate, pop. getElitismRate ( ), 0.001 )
17988	assertThat ( sessionManager. getSessionData ( "1" ), nullValue ( ) )
17989	Assert. assertNull ( "No holePunchScheduler returned!", holePunchScheduler )
17990	Assert. assertTrue ( sut. isWeekday ( cal. getTime ( ) ) )
17991	assertTrue ( entity. getId ( ) > 0 && entity. getCount ( ) == 3456789 )
17992	assertThatSql ( query, is ( "SELECT [__ALLNODES__].col1, [__ALLNODES__].col2 FROM [__ALLNODES__]" ) )
17993	assertEquals ( 2, workspace. get ( ). stream ( ). filter ( p -> p instanceof ModelMapping ). collect ( Collectors. toList ( ) ). size ( ) )
17994	Assert. assertEquals ( "Hello World!", result. get ( 1, TimeUnit. SECONDS ) )
17995	assertEquals ( "Hello Alice", response. getMessage ( ) )
17996	assertEquals ( DB_NAME, HiveDatabase. create ( udbContext, new UdbConfiguration ( ImmutableMap. of ( ) ) ). getName ( ) )
17997	assertEquals ( "Expected 0 results!", 0, n )
17998	assertThat ( Sets. newHashSet ( viewAttributes ), equalTo ( Sets. < ViewAttributeBinder > newHashSet ( viewAttributeBinder, viewAttributeGroup ) ) )
17999	assertEquals ( 3, defaultConfig. getParameterNames ( ). size ( ) )
18000	assertThat ( fieldError, is ( nullValue ( ) ) )
18001	assertNotNull ( Credential. fetcher ( "CRXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
18002	assertEquals ( expecting, found )
18003	assertEquals ( "Unexpected item count", "2", actualCart. getItemTotal ( ) )
18004	assertEquals ( r, pos )
18005	assertEquals ( r1, r2 )
18006	assertThat ( handler. handle ( POST, request ), is ( responseEntity ) )
18007	assertEquals ( e1, e2 )
18008	assertSearchYields ( index, "author:Bob Marley", "author:Rose Jones", "author:Rose Trunk", "author:Tom Jones" )
18009	assertEquals ( "[5, 1, 22, 4, 8, 9, 3, 3, 989]", res. toString ( ) )
18010	assertEquals ( arr, arr3 )
18011	assertEquals ( "scoreHolder.addMultiConstraintMatch(kcontext, new int[] {-1, -2}, new int[] {-3, -4})", marshaledAction )
18012	assertEquals ( "3 啶�啶�啷�", t. format ( new Date ( 1000 * 60 * 60 * 24 * 3 ) ) )
18013	assertEquals ( HOST, uri. toString ( ) )
18014	assertEquals ( variableValue, typedValue )
18015	assertNotNull ( Country. fetcher ( "US" ). fetch ( ) )
18016	assertThat ( stream. count ( ), equalTo ( 1L ) )
18017	assertArrayEquals ( testAgents, buf )
18018	assertEquals ( "Deserialization failed", 0, buffer. readableBytes ( ) )
18019	assertEquals ( resultList. size ( ), 0 )
18020	assertThat ( fileConfig. getConfigProperties ( ), contains ( configProperty ( TAB_WIDTH, 8 ), configProperty ( CHARSET, "utf8" ) ) )
18021	assertEquals ( new BigInteger ( "0" ), actual )
18022	assertThat ( javaPage, is ( notNullValue ( ) ) )
18023	RandomAccessibleIntervalLib2Assert. assertImageEquals ( source, destination )
18024	assertNull ( column. getParent ( ) )
18025	assertEquals ( expectedPayloadTableRowKey, result )
18026	assertEquals ( expected, result )
18027	assertNotNull ( dsp )
18028	assertEquals ( "bar", array. get ( 0 ). getString ( 0 ) )
18029	Assert. assertEquals ( String. format ( msg, s, r, c ), expected, actual, 0. )
18030	assertEquals ( expected, result, FloatingAccuracy. ACCURACY )
18031	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
18032	Assert. assertEquals ( 1, result. intValue ( ) )
18033	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 8, warnings. size ( ) )
18034	Assert. assertEquals ( tree. ret. limit, 42 )
18035	assertEqualsIgnoreWhitespace ( expected, real )
18036	assertThat ( validationResult, is ( not ( notNullValue ( ) ) ) )
18037	Assert. assertEquals ( BitTag. SERVICENET_LB. tagValue ( ) + BitTag. SSL_MIXED_OFF. tagValue ( ), mappedUsage. getTagsBitmask ( ) )
18038	assertEquals ( Writables. strings ( ), t. getSubTypes ( ). get ( 0 ) )
18039	assertThat ( uri, is ( equalTo ( "/clients/" ) ) )
18040	assertThat ( statusCode, equalTo ( 500 ) )
18041	assertThat ( customerId, notNullValue ( ) )
18042	Assert. assertFalse ( result )
18043	assertEquals ( SCROLL_VALUE, getScrollLeftValue ( panel ) )
18044	assertThat ( action. action, is ( RetryPolicy. RetryAction. RetryDecision. FAIL ) )
18045	assertThat ( instanceOne. equals ( instanceTwo ), is ( false ) )
18046	assertArrayEquals ( new String [ ] { "High" }, ( String [ ] ) filterResult. getValue ( ) )
18047	assertEquals ( "123", ids )
18048	assertFalse ( result )
18049	Assert. assertEquals ( BooleanNode. FALSE, result )
18050	assertEquals ( 2, services. size ( ) )
18051	Assert. assertEquals ( "callback_value", o )
18052	Assert. fail ( )
18053	assertThat ( updatedItem. getQuantity ( ), is ( item. getQuantity ( ) - increment ) )
18054	assertEquals ( 5, newses. size ( ) )
18055	assertEquals ( "try(final java.io.OutputStream os = new java.io.ByteArrayOutputStream();" + CRLF + "final java.io.BufferedOutputStream bos = new java.io.BufferedOutputStream(os)) {" + CRLF + "    os.read();" + CRLF + "}" + CRLF, CodeModelTestsHelper. toString ( aTB ) )
18056	assertResultSet ( res )
18057	assertEquals ( expectedQuery, actualQuery )
18058	assertEquals ( "Wrong number of accounts", 2, accounts. size ( ) )
18059	assertNoViolations ( constraintViolations )
18060	assertEquals ( "<!DOCTYPE html PUBLIC \\"-//W3C//DTD HTML 4.01//EN\\" \\"http://www.w3.org/TR/html4/strict.dtd\\">", output )
18061	assertThat ( result. endsWith ( "[experimenterId=12345,body=[1,10]" ), is ( true ) )
18062	assertNull ( "result should be null", invoker. invoke ( sayHelloWithAnnotation, new Object [ ] { } ) )
18063	Assert. assertEquals ( expected, actual )
18064	assertOut ( "/**\\n * @export\\n */\\nfoo = function() {\\n  var self = this;\\n  function localFunction() {\\n  trace(bar);\\n  };\\n  function localFunction() {\\n  };\\n  localFunction();\\n}" )
18065	Assert. assertEquals ( to, actual )
18066	assertEquals ( "1.11", actual )
18067	assertThat ( filteredVersions, arrayContaining ( version ( "1.1.1.1-sp1" ), version ( "1.1.1.2" ), version ( "1.1.2.21" ), version ( "1.1.3.0" ), version ( "1.2.0" ), version ( "1.2.0.1" ), version ( "2.0.0-SNAPSHOT" ) ) )
18068	assertThat ( provider. getSubject ( axiom ), is ( iriOptional ) )
18069	Assert. assertEquals ( "french lexical value@fra", actualLabel )
18070	Assert. assertEquals ( true, isSuccess )
18071	assertTokensEqual ( Tokens. RP, focusedCell. children ( ) )
18072	Assert. assertTrue ( deal. isAccepted ( ) )
18073	assertFalse ( entity. isValid ( ) )
18074	assertEquivalentMutate ( Arrays. asList ( m1, m2 ) )
18075	assertEquals ( defaultSourceCodeNamesList, result )
18076	assertEquals ( splits, splits2 )
18077	assertEquals ( 1, allObjects. size ( ) )
18078	assertEquals ( "fcr:acl", relativizeSubpath ( rootObjectId, resourceId ) )
18079	assertEquals ( res, 1 )
18080	Assert. assertEquals ( descriptor, ss1. getDescriptor ( ) )
18081	assertEquals ( 0, borderNodes. size ( ) )
18082	assertTrue ( this. viewConfigResolverProducer. isValid ( ) )
18083	Assert. assertEquals ( "Unknown destination queue", MicroPipelineValidationResult. OK, new MicroPipelineValidator ( ). validateComponent ( cfg, queues, components ) )
18084	assertTrue ( redisServer. isActive ( ) )
18085	assertEquals ( 1, RecorderTaskListener. getEventCount ( TaskListener. EVENTNAME_UPDATE ) )
18086	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
18087	assertEquals ( "Should be a 201 Created!", CREATED. getStatusCode ( ), getStatus ( method ) )
18088	assertFalse ( metaInterface. isAssignableFrom ( metaObject ) )
18089	assertThat ( result, is ( true ) )
18090	assertEquals ( "no-cache", recorder. getHeader ( "Pragma" ) )
18091	assertNotNull ( conn )
18092	assertThat ( PlainDate. of ( 2000, 12, 2 ). with ( element. decremented ( ) ), is ( PlainDate. of ( 2000, 12, 9 ) ) )
18093	assertEquals ( "Number of registered identifiers is wrong", 2, numOfUnregisteredPI )
18094	Assert. assertEquals ( ambiente, protocoloInfo. getAmbiente ( ) )
18095	assertTrue ( result. length ( ) > 0 )
18096	Assert. assertTrue ( errors. isEmpty ( ) )
18097	assertEquals ( "Wrong number of results", 6, results. size ( ) )
18098	assertThat ( results, is ( Arrays. asList ( "hello-world", "hello,world" ) ) )
18099	assertEquals ( getItem. xmlText ( ), GetItemHelper. getGetItemsRequest ( ). xmlText ( ) )
18100	runner. assertAllFlowFilesTransferred ( SelectHive3QL. REL_FAILURE, 1 )
18101	assertArrayEquals ( new double [ ] { 1, 0, 0, 0 }, h. values, 0.001 )
18102	assertInstanceOf ( "Unexpected implementation.", AffineTransform2D. class, transform )
18103	assertTrue ( matches )
18104	assertEquals ( "foo", x. f1. get ( ) )
18105	assertEquals ( pubEvt. getMessageID ( ), m_pubRec. getMessageID ( ) )
18106	Assert. assertEquals ( expected, impl. getCurrentSize ( ) )
18107	assertEquals ( "Jan Rainfall (mm)", normalize ( text ) )
18108	assertTrue ( isFileTreeNode )
18109	assertNotNull ( command )
18110	assertNull ( c. consume ( ) )
18111	assertTrue ( 5.0d == d. asFloat8 ( ) )
18112	assertEquals ( "user1", echoValue )
18113	assertEquals ( "123", setting. getUniqueIDPrefix ( ) )
18114	assertNumberOfMappings ( )
18115	assertEqualsIgnoreWhitespace ( expected, real )
18116	assertEquals ( paths. get ( path ), acl. getPath ( ) )
18117	assertTrue ( testFacet. isInstalled ( ) )
18118	Assert. assertEquals ( 1L, this. sqlgGraph. traversal ( ). E ( friend ). count ( ). next ( ), 0 )
18119	assertSame ( conn, foundConnection )
18120	assertThat ( errors, is ( empty ( ) ) )
18121	assertEquals ( VALUE1, client. get ( KEY1 ). toCompletableFuture ( ). get ( ) )
18122	assertEquals ( expResult, result )
18123	assertOutputSameTextFile ( gen, "DefineEventMethods_PM.java.txt" )
18124	assertEquals ( "Should be OK", 200, statusCode )
18125	assertFalse ( t. get ( ) )
18126	assertTrue ( queryModel. getObject ( ). size ( ) == 1 )
18127	assertEquals ( "[1,3]", formatter. format ( change1, change3 ) )
18128	assertEquals ( "geDeviceId timeout", latch. getCount ( ), 0 )
18129	assertTrue ( containsSymbol ( symbols, "@/postData -- POST", docUri, 28, 1, 28, 28 ) )
18130	Assert. assertEquals ( 7, result. size ( ) )
18131	Assert. assertTrue ( response. getTotalCount ( ) > 0 )
18132	assertTrue ( set. contains ( any ( set ) ) )
18133	assertNotNull ( injector )
18134	Assert. assertEquals ( 0, result. getEntities ( ). size ( ) )
18135	Assert. assertNull ( result )
18136	assertSame ( StackLocatorUtilTest. class, reversed. pop ( ) )
18137	assertEquals ( 3.0, median, 0.0000001 )
18138	assertThat ( isTransactionRelated, is ( false ) )
18139	assertTrue ( ispcapng )
18140	assertThat ( actual, is ( expected ) )
18141	assertEquals ( 444L, WebClient. create ( address ). get ( Book. class ). getId ( ) )
18142	assertNotNull ( jobId )
18143	runner. assertAllFlowFilesTransferred ( PublishKafka_0_10. REL_SUCCESS, 3 )
18144	assertNotNull ( Activity. reader ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
18145	Assert. assertEquals ( "12 ����������������������������������������������������������������������������������
18146	assertSame ( "Additional header param should be ignored.", httpResponse, httpResponseProviderIgnoreAdditionalHeaders. getResponse ( requestCopy ) )
18147	assertEquals ( "������������������������������������������������������������������������������������
18148	assertEquals ( script, observedScript )
18149	assertEquals ( getMessage ( MessageKeys. E_TR_FW_0001 ), driver. findElement ( By. name ( "customerEmail" ) ). getText ( ) )
18150	assertJson ( "{'vaLUE': 'foo'}", serialize ( bean ) )
18151	assertEquals ( 1, LogUtil. findMessage ( "The service method com.alibaba.dubbo.rpc.support.DemoService.echo(String) is DEPRECATED" ) )
18152	Assert. assertEquals ( "(nt_change_misc spl?)", nt_change_misc. toStringTree ( parser ) )
18153	Assert. assertEquals ( 10, result. size ( ) )
18154	assertTrue ( "Expected " + N + " >= " + numResults, numResults <= N )
18155	assertMissingOneAndSet ( "one", "set", 6L )
18156	assertEquals ( SC_FORBIDDEN, response. getStatus ( ) )
18157	assertEquals ( 2, httpsUsageEntries. size ( ) )
18158	Assert. assertEquals ( Double. valueOf ( config. getDoubleValue ( ) ), Double. valueOf ( result. getDoubleValue ( ) ) )
18159	assertEquals ( expResult, result )
18160	assertEquals ( environmentModuleConfig, response )
18161	assertTrue ( ruleNames. remove ( "Wrong eval order 1" ) )
18162	assertArrayEquals ( expected, array )
18163	assertEquals ( 134, ( int ) ( EarthCalc. vincentyDistance ( buenosAires, kew ) / 1000 ) )
18164	assertExpectationsToDatabase ( apiConnectionThrottle, dbConnectionLimit )
18165	assertEquals ( view, response )
18166	dsUtil. assertTaskParamsMatchEntityProperties ( expectedParams, entity )
18167	Assert. assertEquals ( 1, compareResult )
18168	assertTrue ( "attempting to persist entity with transactional entity manager and no transaction, should fail with a TransactionRequiredException" + " but we instead got a " + error, error instanceof TransactionRequiredException )
18169	assertEquals ( sapper. getY ( ), oldYPosition + 1 )
18170	assertEquals ( "Test message {}a b", result )
18171	assertEquals ( expResult, result )
18172	Assert. assertEquals ( 10, o )
18173	assertEquals ( "Incorrect number of events. Expected 2, actual " + events. size ( ), 2, events. size ( ) )
18174	assertEquals ( 0, ls. getTotalNetworkError ( ), 0.1 )
18175	assertThat ( extractor. extract ( sheet. getRow ( 5 ) ), is ( "1" ) )
18176	assertPerm ( perms )
18177	Assert. assertEquals ( "Invalid result", Double. valueOf ( "123" ), result, 0.0 )
18178	Assert. assertEquals ( 2, consumerHolders. size ( ) )
18179	Assert. assertEquals ( "(aa_change_deletion (aa_point_location (aa_char Cys) 123) del)", aa_change_deletion. toStringTree ( parser ) )
18180	assertEquals ( expectedString, HtmlUtils. removeNewLines ( html ) )
18181	assertEquals ( "Expected 2 results!", 2, n )
18182	assertNotNull ( result )
18183	assertEquals ( "No regression here.", destination. getValue ( ) )
18184	assertEquals ( testObject. getObjectState ( ), "VALID" )
18185	assertEquals ( size + 1, notifierManager. internal. size ( ) )
18186	assertTrue ( getTaint ( d1. getSecret ( ) )!= 0 )
18187	assertQuery ( false, "declare namespace n = 'urn:blah'; declare namespace p = 'urn:foo'; declare namespace q = 'urn:blah'; deep-equal(//e1/@n:a, //e2/@p:a)" )
18188	assertNull ( res. getHeader ( "X-woop" ) )
18189	assertEquals ( "aVariable", entityState. getString ( "name" ) )
18190	assertEquals ( expectedDate, actualDate )
18191	assertEquals ( myMap, result )
18192	assertTrue ( TracingFilter. isTraced ( request ) )
18193	Assert. assertNotNull ( pack )
18194	Assert. assertTrue ( expect ( o, false ) )
18195	assertEquals ( new Double ( 20.5 ), request. getVisitorLongitude ( ) )
18196	assertAllCommandsUsed ( )
18197	Assert. assertEquals ( true, errors. hasFieldErrors ( "code" ) )
18198	Assert. fail ( "Expected IllegalArgumentException" )
18199	assertThat ( mojo. getArtifactFile ( ). toString ( ), is ( "foo-1.0-SNAPSHOT.woapplication" ) )
18200	Assert. assertEquals ( expected, resultString )
18201	Assert. assertTrue ( "XML are similar " + myDetailedDiff, myDetailedDiff. similar ( ) )
18202	Assert. assertEquals ( "SELECT DATE_ADD('2009-01-01', INTERVAL 6 / 4 MINUTE_SECOND);", text )
18203	assertTrue ( selectedCells. isEmpty ( ) )
18204	assertTokens ( Tokens. ID )
18205	Assert. assertEquals ( 40., route. getActivities ( ). get ( 0 ). getEndTime ( ), 0.01 )
18206	assertEquals ( 3, postCommentScores. size ( ) )
18207	assertEquals ( today, sinceGraduation )
18208	assertEquals ( "Wrong number of translations", 1, b. getTranslations ( ). size ( ) )
18209	files. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE_PATTERN )
18210	assertEquals ( 0, managementService. createJobQuery ( ). processInstanceId ( processInstance. getId ( ) ). count ( ) )
18211	assertEquals ( "--payload", props. get ( "expression" ) )
18212	assertEquals ( topic. getUnsubscribeLinkForSubscribersOf ( Branch. class ), "/branches/1/unsubscribe" )
18213	assertEquals ( path, DockerConnectorConfiguration. DEFAULT_DOCKER_MACHINE_CERTS_DIR )
18214	assertEquals ( "0F000000", value. getDataAsHexStr ( ) )
18215	assertEquals ( "something else", result )
18216	assertThat ( event. getInvalid ( ), is ( false ) )
18217	assertEquals ( wrappedTemplate + " <?", test. build ( ) )
18218	assertMockEndpointsSatisfied ( )
18219	assertTrue ( "Interceptor should apply", result )
18220	Assert. assertEquals ( message, o1. getResultQuality ( ), mapper. valueToTree ( found. getResultQuality ( ) ) )
18221	assertEquals ( expResult, result )
18222	assertEquals ( expected, parsed )
18223	Assert. assertEquals ( request. getUri ( baseURI ), expectedURI )
18224	assertEquals ( 1, exceptions. size ( ) )
18225	assertEquals ( "Submission should be cleaned", AnalysisCleanedState. ERROR, loadedSubmission2. getAnalysisCleanedState ( ) )
18226	assertNotNull ( action )
18227	assertEquals ( "object", r. invokeMethod ( "pool1", "name1" ) )
18228	assertTrue ( resourceExists ( resourceURI ) )
18229	assertEquals ( new Integer ( 10 ), MethodFixture. getArgNum ( ) )
18230	assertThat ( adds, StreamMatchers. empty ( ) )
18231	assertTrue ( "Incorrect statement in the Block", stmt. equals ( TestCommandStatement. sample2 ( ) ) )
18232	Assert. fail ( "Xfdf files are not equal" )
18233	assertEquals ( "Incorrect row count", 1, count )
18234	Assert. fail ( "Should have failed" )
18235	assertThat ( PrettyTime. of ( Locale. US ). print ( dur, TextWidth. WIDE ), is ( "124 milliseconds (1 second)" ) )
18236	Assert. assertTrue ( uploadedFile. exists ( ) )
18237	assertEquals ( "read=" + i, expected, read )
18238	assertEquals ( count, rows. size ( ) )
18239	assertTrue ( hashSet. contains ( p1 ) )
18240	assertEquals ( "Encoded bytes should be null", null, encoded )
18241	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
18242	assertEquals ( "concept", fb. getType ( ) )
18243	assertThat ( numFound ( query ( "q=10.0.0.0/24" ) ), is ( 1L ) )
18244	assertEquals ( 5, d. asInt4 ( ) )
18245	assertEquals ( "uk.ltd.getahead.setCharacterEncoding.Filter", result )
18246	Assert. assertEquals ( 0, result. size ( ) )
18247	assertEquals ( 0, instance. getNeuronsCount ( ) )
18248	assertFalse ( mock. booleanReturningMethod ( 12 ) )
18249	assertTrue ( "Authentication factory should be created", ops. exists ( TEST_AUTHENTICATION_FACTORY_ADDRESS ) )
18250	assertThatStepsInstancesAre ( builderAnnotated. buildCandidateSteps ( configuration ), FooSteps. class )
18251	assertNotNull ( result )
18252	assertEquals ( false, new String ( generatedfile. getContent ( ), "utf-8" ). contains ( "testEvent" ) )
18253	assertNotNull ( response )
18254	Assert. assertEquals ( ref, Preconditions. checkNotNull ( ref, "Reference should not be null" ) )
18255	assertEquals ( response, webRespose )
18256	Assert. assertEquals ( expectedResponse, proxy. sayHello ( message ) )
18257	Assert. assertEquals ( functionColumn, ( ( String [ ] ) result ) [ 0 ] )
18258	Assert. assertEquals ( expectedResult, resultString )
18259	assertEquals ( p1, p2 )
18260	assertEquals ( parent + File. separator + absChild, FileUtil. combine ( parent, absChild ) )
18261	assertNotNull ( con. nativeSQL ( "" ) )
18262	Assert. assertEquals ( "<br/>b", out. toString ( ) )
18263	assertMockEndpointsSatisfied ( )
18264	Assert. assertEquals ( "(aa_change_deletion (aa_range (aa_point_location (aa_char Cys) 123) _ (aa_point_location (aa_char Arg) 125)) del (aa_string Cys Cys Arg))", aa_change_deletion. toStringTree ( parser ) )
18265	Assert. assertTrue ( "TMRAP servlet accepted bad syntax", code == 400 )
18266	assertEquals ( 1L, r. getId ( ) )
18267	assertTrue ( response. getBody ( ). contains ( "<ns2:out>test</ns2:out>" ) )
18268	Assert. assertNull ( pdoc. get ( new Path ( "field7" ) ) )
18269	assertThat ( date. getDate ( ), is ( PlainDate. of ( 2015, 8, 24 ) ) )
18270	assertPostFails ( "4", variant, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
18271	assertNotNull ( TOKEN )
18272	assertEquals ( 4, packetIn. getCount ( ) )
18273	assertSame ( JXList. uiClassID, list. getUIClassID ( ) )
18274	assertEquals ( emptyList ( ), tags )
18275	assertEquals ( 6, generators. size ( ) )
18276	assertEquals ( expResult, result, 0.00001 )
18277	assertEquals ( pdop, instance. getPositionDOP ( ), 0.1 )
18278	Assert. fail ( "Failure expected on an unauthorized call" )
18279	assertNotNull ( s )
18280	assertQ ( req, "//result[@name='response'][@numFound='1']", "//result[@name='response']/doc[1]/str[@name='id'][.='1']" )
18281	assertThat ( versionedIdsOf ( units ), bagEquals ( versionedIdList ( ) ) )
18282	assertEquals ( "xxxxA", result )
18283	assertEquals ( "Service is not running", 200, response. getStatusCode ( ) )
18284	assertEquals ( 20, rowCount )
18285	assertThat ( other, LocalTimeMatchers. sameSecondOfMinute ( date ) )
18286	assertEquals ( "substringProp(offset, len)", new SubstringProp ( offset, length ). toString ( ) )
18287	assertPermanentCount ( playerA, "Treacherous Pit-Dweller", 1 )
18288	assertListTEquals ( listDot, 1, 2, 3, 4, 5 )
18289	assertEquals ( n1, e4. getTarget ( ) )
18290	assertEquals ( "test@elasticinbox.com:123", key )
18291	assertNull ( subset )
18292	assertEquals ( expected, stringUtils. capitalizedAsConstant ( "abCE" ) )
18293	assertThat ( id, equalTo ( tweet. getId ( ). toString ( ) ) )
18294	assertEquals ( d1, d2 )
18295	assertE ( "�尖�尖�尖��" + "��   ��" + "�尖��  ��" + "��   ��" + "�尖�尖�尖�尖��" )
18296	assertEquals ( "{\\"options\\":{}}", result )
18297	assertEquals ( matchingMtTableList. size ( ), mtTable1List. size ( ) )
18298	assertEquals ( new DirectPosition ( 0, - 2, 0 ), p )
18299	Assert. assertEquals ( "incorrect number of branches", 3, branchesData. size ( ) )
18300	assertTrue ( true )
18301	assertCandidateList ( expectedCandidates, actualCandidates )
18302	assertEquals ( isEqual, true )
18303	assertThat ( mergedCss, is ( equalTo ( fromTag ( "div" ) ) ) )
18304	assertEquals ( true, active )
18305	assertEquals ( 4.3, result )
18306	assertEquals ( "SELECT fname.concat(s( " ) ). concat ( s ( "lname" ) ). as ( "full_name" ), statement. toString ( ) )
18307	assertThat ( prefix, is ( "" ) )
18308	assertNotNull ( dealershipDocument. get ( ). getAutomobiles ( ) )
18309	assertEquals ( "<div xmlns=\\"http://www.w3.org/1999/xhtml\\">HELLO WORLD</div>", actual. getText ( ). getDiv ( ). getValueAsString ( ) )
18310	Assert. assertNull ( header )
18311	assertThat ( propertyGetter. propertyByType ( testInstance, Collection. class ), instanceOf ( Collection. class ) )
18312	assertResponseContainsModel ( "<img class=\\"componentIcon\\" src=\\"modelregistry/api/componenticon\\"/> " + "serviceuser:notfound", "no notification" )
18313	assertNull ( partitions )
18314	assertEquals ( record, updateRecord )
18315	assertEquals ( 3, graph. size ( ) )
18316	assertEquals ( Arrays. asList ( "test_fest", "test_pest" ), helper. getFriendsOf ( "test_fest" ) )
18317	assertEquals ( 7, result )
18318	assertThat ( iterateModel. getIncrement ( ), is ( 4 ) )
18319	assertEquals ( 0, stack. size ( ) )
18320	assertTrue ( inmemoryDOMDataTreeShardWriteTransaction. isClosed ( ) )
18321	assertSchema ( expected, plan. getOutSchema ( ) )
18322	assertTrue ( true )
18323	assertTrue (! nnList. isEmpty ( ) )
18324	assertThat ( allRootDescendants ( ), everyItem ( canBeUnScheduled ( ) ) )
18325	assertEquals ( "��   ��\\n" + "��   ��\\n" + "�尖�衡�� ��\\n" + "��   ��\\n" + "�� �� ��\\n" )
18326	assertEquals ( b, ( byte ) i )
18327	assertTrue ( out. equals ( "G0 A10.12" ) )
18328	assertEquals ( 0x80, code )
18329	assertNotNull ( result )
18330	assertNotNull ( kmodule )
18331	assertTrue ( softDrink instanceof SoftDrink )
18332	assertThat ( source. getDefaultModel ( ), is ( nullValue ( ) ) )
18333	assertTrue ( "Windows icon exists", icon. exists ( ) )
18334	assertEquals ( "a6f7c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8b6c8
18335	assertEquals ( actualBaseUri, servletWithParent. getBaseURIAsString ( ) )
18336	assertEquals ( "DATA" + i --, new String ( buffer, "UTF-8" ) )
18337	Assert. assertEquals ( 70, analyser. getLoadDelivered ( ). get ( 0 ), 0.01 )
18338	assertNotNull ( envelope )
18339	assertTrue ( content. contains ( "This is a test document" ) )
18340	assertEquals ( 1, handler. recover ( new Object [ ] { "a", "b" }, new RuntimeException ( "Planned" ) ) )
18341	assertEquals ( "default values in merge", t. toString ( s ) )
18342	assertThat ( "keywordProperties.size()", keywordProperties. size ( ), is ( 0 ) )
18343	assertEquals ( 3, albumsView. getAlbumCount ( ) )
18344	assertEquals ( "http://java.sun.com/j2se/1.3/taint", path )
18345	assertEquals ( options. toJSON ( ), json )
18346	assertTrue ( Ordering. natural ( ). isOrdered ( array ) )
18347	assertEquals ( "void foo ;\\n", found )
18348	assertTrue ( job. waitForCompletion ( true ) )
18349	Assert. assertEquals ( "Test", c. getName ( ) )
18350	assertEquals ( expResult, result, 0.0001 )
18351	assertThat ( existingProduct, is ( notNullValue ( ) ) )
18352	Assert. assertEquals ( "value1", pyObjectValue. get ( ) )
18353	Assert. assertNull ( userValidated )
18354	assertTrue ( diff. conflicts ( diff2 ) )
18355	assertTrue ( underTest. validate ( EntityNames. STUDENT_ID, Collections. emptySet ( ) ). isEmpty ( ) )
18356	assertTrue ( "bar". equals ( c. getValue ( ) ) && "foo". equals ( c. getName ( ) ) && 2 == c. getVersion ( ) && "path". equals ( c. getPath ( ) ) && "domain". equals ( c. getDomain ( ) ) )
18357	assertEquals ( "keyMiss1", result )
18358	assertEquals ( 1, count )
18359	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<complexType>\\n" + "<namespace>\\n" + "<name>ComplexType</name>\\n" + "</complexType>\\n" + "</abstractType>", output )
18360	assertMockEndpointsSatisfied ( )
18361	assertThat ( selected. entrySet ( ), is ( empty ( ) ) )
18362	Assert. fail ( "Should have Assert.failed on the first parameter to 'contains' not " + "being bound." )
18363	assertEquals ( "http://example.com/fhir/Patient?family=null&birdate=null&gender=code&orgId=null", capt. getAllValues ( ). get ( idx ). getURI ( ). toString ( ) )
18364	assertResultSet ( fc. getMembers ( filter, new TypedObjectNodeXPathEvaluator ( ) ), "PHILOSOPHER_1" )
18365	Assert. assertEquals ( date2. getTime ( ) - date3. getTime ( ), date. getTime ( ) )
18366	assertThat ( actual. get ( ), is ( "hello world!!" ) )
18367	assertNotNull ( writeOperation )
18368	assertThat ( result, is ( jsonNull ( ) ) )
18369	Assert. assertEquals ( 0, locations. getLocations ( ). size ( ) )
18370	Assert. assertEquals ( true, getValue ( map, "?t" ). booleanValue ( ) )
18371	assertEquals ( 25, execute ( Painting. class, parsed1 ). size ( ) )
18372	authRule. assertScenario ( scenario )
18373	assertEquals ( 482196050000L, date. getTime ( ) )
18374	assertEquals ( "0", out. toString ( ) )
18375	assertThat ( result, equalTo ( emailMessage ) )
18376	assertEquals ( "1970-01-01", year )
18377	assertThat ( command. accept ( state ), is ( true ) )
18378	assertEquals ( proxyPort, sut. getProxyPort ( ) )
18379	assertEquals ( "Hello World", response )
18380	assertEquals ( true, result )
18381	assertEquals ( expectedPatient, patient )
18382	assertTrue ( failure )
18383	assertNull ( "Last Task in the list should not have a 'next' task", nextTask )
18384	assertEquals ( route. getRouteType ( ), RouteType. ROUTE )
18385	assertEquals ( - 1, BufferTools. indexOfTerminator ( buffer, 0, 2 ) )
18386	assertDeleteUserAuthorizedToAdmin ( userB )
18387	assertThat ( statement. getColumns ( ), hasSize ( 1 ) )
18388	assertThat ( plugin. out, is ( equalTo ( new URI ( "http://halp/" ) ) ) )
18389	assertEquals ( Double. valueOf ( 5 ), Double. valueOf ( value. asDouble ( 10 ) ) )
18390	JsonAssert. assertJsonEquals ( "{id: 'id', result: {foo:'bar'}}", getOutput ( ) )
18391	assertFalse ( "Equivalent set criteria compare as equal: " + c1 + ", " + c2, c1. equals ( c2 ) )
18392	Assert. assertEquals ( notaInfo, nota. getInfo ( ) )
18393	assertEquals ( 123, m. get ( "p" ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( ). asNode ( )
18394	assertEquals ( "{\\"severity\\":\\"NORMAL\\"}", JsonUtils. toJSONString ( severity ) )
18395	assertEquals ( expected, TypeDefinition. getInferredGenericTypeArgumentClass ( superClass, argIndex ) )
18396	assertThat ( sublist, is ( emptyList ) )
18397	Assert. assertEquals ( 2, s. x )
18398	assertEquals ( expectedQuery, actualQuery )
18399	assertEquals ( 0, c1. bounds ( ). size ( ) )
18400	assertEquals ( 0, rpcsid. getSubAuthority ( ). length )
18401	assertXmlEquals ( "<cit:CI_WorldConstant xmlns:cit=\\"" + Namespaces. CIT + "\\">\\n" + "  <cit:CI_WorldConstant>\\n" + "    <cit:CI_WorldConstant>World constant</cit:CI_WorldConstant>\\n" + "  </cit:worldConstant>\\n" + "</cit:CI_WorldConstant>\\n", xml, "xmlns:*", "codeList", "codeSpace" )
18402	assertSame ( DefaultParamProcessor. INSTANCE, actual )
18403	Assert. assertEquals ( "doubleNestedString", found. getName ( ) )
18404	assertEquals ( LibUsb. SUCCESS, LibUsb. init ( null ) )
18405	assertEquals ( 3, counter. getBeforeFileTreeWalkCount ( ) )
18406	assertThat ( synonyms. size ( ), is ( _synonyms. size ( ) ) )
18407	assertTrue ( result. length ( ) > 0 )
18408	assertEquals ( testString, testObject. getLabel ( ) )
18409	assertThat ( query, is ( queryTmpl ) )
18410	mojos. assertBuildOutputs ( new File ( basedir, "target/generated-sources/resources" ), "proc/GeneratedSource.java", "proc/AnotherGeneratedSource.java" )
18411	assertEquals ( "test", echo. echo ( "test" ) )
18412	assertOut ( "/**\\n * @export\\n */\\nB.prototype.b = function() {\\n  var self = this;\\n  function c(s, f) {\\n  };\\n  function d() {\\n  };\\n  function c(s, f) {\\n  };\\n  function d() {\\n  };\\n  c('foo', d);\\n}" )
18413	assertThat ( target. readValue ( value ), is ( true ) )
18414	assertEquals ( 7100, ceosReader. readB4 ( ) )
18415	assertEquals ( expected, actual )
18416	Assert. assertEquals ( 3, new Calculator ( ). add ( 1, 2 ) )
18417	assertOut ( "goog.provide('foo.bar.baz.A');\\n\\n/**\\n * @constructor\\n */\\nfoo.bar.baz.A = function() {\\n};" )
18418	assertEquals ( 5, g. size ( ) )
18419	Assert. assertEquals ( toArray ( "json", "aaa" ), merged )
18420	assertEquals ( Avros. doubles ( ), t. getSubTypes ( ). get ( 0 ) )
18421	assertEquals ( expectedCount, EvaluationData. countEvaluationDatas ( ) )
18422	assertTrue ( configuration instanceof BaseConfiguration )
18423	assertNotNull ( ExecutionTime. forCron ( parser. parse ( "* * * * *" ) ) )
18424	assertEquals ( "3 �����������������������������������������������������������������������������������
18425	assertEquals ( auctionList, objectMapper. readValue ( outStream, MmxAuctionSummary. class ) )
18426	assertThat ( chargingSchedule. getDuration ( ), equalTo ( anInteger ) )
18427	assertEquals ( "MixedMode", param0. getOut ( ). get ( 0 ) )
18428	Assert. fail ( "Remote invocation on a local view " + LocalEcho. class. getName ( ) + " was expected to fail" )
18429	CompileUtils. assertCompiles ( "QEntity", writer. toString ( ) )
18430	assertThat ( testOutcome. getSuccessCount ( ), is ( 2 ) )
18431	assertEquals ( true, result )
18432	assertOut ( "switch (i) {\\n  case 1:\\n    break;\\n}" )
18433	assertTrue ( l0. isExclusiveTo ( l1 ) )
18434	assertEquals ( t1, UUIDUtils. min ( t1, null ) )
18435	assertOut ( "var /** @type {number} */ a = 1" )
18436	assertNthArgumentGeneratesXPath ( 0, nth0XPathExpression )
18437	assertMockEndpointsSatisfied ( )
18438	assertTrue ( isEqual ( d1, d2 ) )
18439	assertTrue ( appValidationService. validate ( "AAA", ApplicationType. task ) )
18440	assertFalse ( retryCommandSpy. shouldShowUsage ( ) )
18441	Assert. assertTrue ( "did not find null", foundNull )
18442	assertEquals ( numberOfExceptions, 4 )
18443	assertAnnotations ( 3, Quantity. class, new TestEntity < > ( 0, "300 m", "300 m" ), new TestEntity < > ( 1, "300 metres", "300meters" ), new TestEntity < > ( 2, "300 metres", "300meters" ) )
18444	Assert. assertEquals ( StringUtils. trimAllWhitespace ( result. toString ( ) ), "{\\"$or\\":[{\\"username\\":{\\"$regex\\":\\"^[a-zA-Z0-9_]+$\\"},\\"$options\\":\\"s\\"}}]}" )
18445	assertEquals ( params, repoType. marshallize ( ) )
18446	assertEquals ( "getSongs", Names. resourceMethodName ( resource, method ) )
18447	assertEquals ( 20.0, Solutions. bestOf ( solutions ). getCost ( ), 0.1 )
18448	Assert. assertFalse ( r. isSuccess ( ) )
18449	assertEquals ( result, subject. unmodifiableSet ( ) )
18450	assertEquals ( "{\\"d\\":{\\"isScrumTeam\\":false}}", StringHelper. inputStreamToString ( ( InputStream ) response. getEntity ( ) ) )
18451	assertEquals ( expected, output )
18452	assertNoDataValue ( targetPoduct. getBand ( FLOAT_BAND_NAME ), new PixelPos ( 23.5f, 13.5f ), 42.0, 42.0 )
18453	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE NAME(nodes) <= 'literal'" ) )
18454	assertFiltersDefined ( configurationUnit, filter ( "Name field filter", "name" ) )
18455	assertEquals ( person, findOne )
18456	Assert. assertEquals ( oid, commit. getId ( ) )
18457	assertEquals ( "456/i/have/spaces.log", tokenId )
18458	assertSerializedEquals ( c )
18459	assertEquals ( "S.b\\n", found )
18460	assertEquals ( "TestPassword", envVars. get ( "COVERITY_PASSPHRASE" ) )
18461	assertEquals ( expectedResult, entityParser. parseObservedProperty ( json ) )
18462	assertEquals ( "Conversion did not match", value, to )
18463	assertEquals ( dataString, outString )
18464	assertFalse ( ProtocolConstants. StatusCodes. Create. Follow. FOLLOWED_EXISTING. equals ( this. jsonResponse. get ( ProtocolConstants. STATUS_MESSAGE ) ) )
18465	assertEquals ( 4, fOk. get ( ) )
18466	assertEquals ( "(| (& [* fo.*] [*.*oo]) [= bar])", m. toString ( ) )
18467	assertNull ( array )
18468	arrays. assertDoesNotHaveDuplicates ( description, actual )
18469	assertEquals ( "https://api.github.com/repos/shuhn/repos/shuhn/clone", url )
18470	assertEquals ( 42, getNumberNode. getInputSideEffect ( ) )
18471	assertNull ( method )
18472	assertEquals ( "user", p. getUser ( ) )
18473	assertEquals ( 1, result )
18474	assertNotNull ( fixture )
18475	assertEquals ( "Hello World", response. getBody ( ) )
18476	assertThat ( TypeUtils. getTypes ( immutableTypes ), is ( immutableTypes ) )
18477	Assert. assertTrue ( cmd. apply ( bkFlags, new String [ ] { "" } ) )
18478	assertEquals ( expectedMap, map )
18479	Assert. assertEquals ( expected, actual )
18480	assertEquals ( HOLMES_HOME. getValue ( ), HOLMES_HOME. getSubDir ( ) )
18481	assertNull ( person. getPersonVoidReason ( ) )
18482	Assert. assertEquals ( true, tableColumnMeta. isAutoUpdated ( ) )
18483	Assert. assertArrayEquals ( VALUE. toArray ( ), dataItems. toArray ( ) )
18484	assertThat ( issues, is ( empty ( ) ) )
18485	Assert. assertThat ( runtimeInfo. getRuntimeClassName ( ), is ( "org.talend.components.processing.runtime.query.QueryRuntime" ) )
18486	assertTrue ( isDynamicCSVFormat )
18487	assertEquals ( this. distributedMap. size ( ), this. thirdMapChannel. size ( ) )
18488	assertEquals ( 78., violation, 0.01 )
18489	assertEquals ( extractedYAML, expectedYAML )
18490	assertFalse ( "our member-group shouldn't have set our attribute", retAttr. contains ( attributes. get ( 0 ) ) )
18491	Assert. assertEquals ( fieldsCountExpected. get ( clazz ). intValue ( ), fieldsMetadata. getFields ( ). size ( ) )
18492	assertThat ( links. size ( ), is ( 1 ) )
18493	assertOperationLog ( decisionDefinition )
18494	assertThat ( readString, is ( not ( nullValue ( ) ) ) )
18495	Assert. assertEquals ( "did not read the expected data", expectedReadData, readData )
18496	assertEquals ( map, map2 )
18497	assertionHelper. assertTwoFilesAreEqualByRecursiveTreeComparison ( localFile, targetFile )
18498	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
18499	assertNotNull ( adder )
18500	assertThat ( noOfSolutions, is ( 741642 ) )
18501	assertTrue ( Files. exists ( gfs. getPath ( "/test_file.txt" ) ) )
18502	assertEquals ( "_cat/segments/_all", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
18503	assertEquals ( 7, result )
18504	assertArrayEquals ( data, value. getData ( ) )
18505	assertEquals ( expectedSignature, signature )
18506	assertTrue ( "'destroy sub-branch' was configured to be accepted", filter. accept ( "destroy sub-branch \\"esmalling_branch\\" of branch", "/main/sit_r6a/11" ) )
18507	Assert. assertEquals ( actual, expected, "Returned an invalid property value." )
18508	assertEquals ( "did not get expected number of entitlements ", 4, list. size ( ) )
18509	Assert. assertEquals ( query, interpretedQuery )
18510	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
18511	assertEquals ( doc1, io. getDocument ( q1 ) )
18512	assertTrue ( result. isUndefined ( ) )
18513	Assert. assertNull ( entry )
18514	assertEquals ( "1", textualToken. getToken ( ) )
18515	assertNotNull ( x509Attestation. getCAReferencesFinal ( ) )
18516	assertThat ( expectedResult, is ( actualResult ) )
18517	assertEquals ( "GMT", iqEntityTimeHandler. getTimeZone ( ) )
18518	assertTrue ( constraintValidator. isValid ( Money. of ( 1, "EUR" ), null ) )
18519	assertTrue ( resultSq == Position. NOPOSITION )
18520	assertEquals ( "test_new@gmail.com", appClient1. getServer ( ) )
18521	maps. assertContainsOnly ( info, actual, expected )
18522	assertTrue ( impl. isApiToken ( ) )
18523	Assert. assertEquals ( 1, lifeMembers ( ) )
18524	assertEquals ( a1, a2 )
18525	assertSame ( shouldFind, selection. fileSelect ( By. id ( "test" ) ) )
18526	assertEquals ( 100, array. length )
18527	assertEqualsJson ( expected, actual )
18528	Assert. assertEquals ( expectedSpec, actualSpec )
18529	assertEquals ( "baz/\\n" + "  foo/\\n" + "    bar/\\n" + "      wooz/\\n" + "    rooz/\\n" + "    bar/\\n" + "      wooz/\\n", sw. toString ( ) )
18530	assertEquals ( ( double ) 8, result. getDoubleValue ( ), 0.0 )
18531	Assert. fail ( )
18532	assertThat ( out. toString ( ), is ( String. format ( "Same move of Bishop%s", sep ) ) )
18533	assertThatCellReaderWasCalled ( )
18534	assertMap ( expected, result )
18535	Assert. assertEquals ( "Num tasks not correct", 1, job. getTasks ( ). size ( ) )
18536	Assert. assertNotNull ( view )
18537	Assert. assertEquals ( 1, handler. getCounting ( ) )
18538	assertNotNull ( applicationContext. getBean ( "rewardNetwork" ) )
18539	Assert. assertTrue ( isDiscountApplied )
18540	Assert. assertEquals ( originStat + FILE_LEN, sStatistics. getBytesWritten ( ) )
18541	assertEquals ( "message", result )
18542	Assert. assertEquals ( outContent. toString ( ). trim ( ), "1.2.1" )
18543	assertEqualsIgnoreWhitespace ( expected, real )
18544	assertThat ( output, containsString ( "Dataset deleted:" ) )
18545	assertThat ( time. with ( PlainTime. COMPONENT. setToNextFullHour ( ) ), is ( PlainTime. of ( 0, 1 ) ) )
18546	Assert. assertArrayEquals ( EXPECTED, data )
18547	Assert. assertEquals ( expectedOne, actual )
18548	assertThat ( extension. getServerNames ( ). isEmpty ( ), is ( true ) )
18549	assertTrue ( info. isEmpty ( ) )
18550	assertNull ( changeEvent [ 0 ] )
18551	assertTrue ( psa. getLegend ( ) instanceof UniqueSymbolPoint )
18552	assertTrue ( futureDigest. digest ( ). keyDigest ( ). isEmpty ( ) )
18553	assertSame ( sampleTodolist, ret )
18554	assertFalse ( topic. hasTopic ( ) )
18555	assertThat ( list. size ( ), is ( 0 ) )
18556	Assert. assertEquals ( expectedMaxExpansionSize, actualDestLen )
18557	assertFalse ( hasPermission )
18558	assertNoViolations ( violations )
18559	assertEquals ( "", result )
18560	assertEquals ( "Invalid argument passed", value, exceptionArgument )
18561	assertEquals ( AnsiEscapeCode. values ( ). size ( ), codes. size ( ) )
18562	assertEquals ( "test", msg. getText ( ) )
18563	assertParseTree ( rootNode ( "hello world", stringNode ( "greeting", "hello", stringNode ( "hi", "hello" ) ) ), tree )
18564	assertEquals ( "something == x", result )
18565	assertArrayEquals ( refar, d. getResult ( ) )
18566	assertThat ( report, is ( not ( nullValue ( ) ) ) )
18567	assertEquals ( expected, actual )
18568	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Pause>" + "before" + "<Child>content</Child>" + "after" + "</Pause>", builder. build ( ). toXml ( ) )
18569	assertThat ( downstream, hasSize ( 0 ) )
18570	assertEquals ( "foo", sw. toString ( ) )
18571	Assert. fail ( )
18572	assertEquals ( createTopicBtnDto. getTopicName ( ), "new-question-btn" )
18573	assertEquals ( previous, classFile1 )
18574	assertEquals ( count, expectedCount )
18575	assertEquals ( program, block. basicBlock )
18576	Assert. assertNull ( header )
18577	Assert. assertFalse ( result )
18578	assertThat ( end, is ( 1.0 ) )
18579	assertEquals ( expected, actual )
18580	assertSame ( oldPipelineFactory, b. getPipelineFactory ( ) )
18581	assertEquals ( "? hello?", s. sql ( ) )
18582	assertTrue ( Arrays. equals ( getPacketData ( "34 00 10 00 F8 FF 3C 00 10 0E 08 08 00" ), request. serialize ( ) ) )
18583	assertEquals ( expected, actual )
18584	assertEquals ( "failed to generate variable declaration using a literal initialization and type inference", "String n = '10';", declaration )
18585	assertSchemaValue ( subject, version, 0, "{\\"type\\":\\"record\\",\\"name\\":\\"myrecord\\"," + "\\"fields\\":[{\\"name\\":\\"f1067572235\\",\\"type\\":\\"string\\"}]}", false, schemaValue )
18586	assertEquals ( original, converted )
18587	Assert. assertEquals ( 2, ddf2. getNumRows ( ) )
18588	Assert. assertEquals ( 10, controller. getCurrentRunLevel ( ) )
18589	assertDtos ( expected, actual )
18590	assertThat ( taskService. createTaskQuery ( ). taskId ( task. getId ( ) ). count ( ), is ( 1L ) )
18591	assertEquals ( "No errors detected", NO_ERRORS_STATUS, HttpStatus. SC_NOT_FOUND )
18592	assertEquals ( "java.lang.Object", t. fullName ( ) )
18593	Assert. assertEquals ( expected, actual )
18594	assertEquals ( 0, bus. getCount ( DeadMessagHandler. class ) )
18595	assertThat ( new SelectBest ( ). selectSolution ( Arrays. asList ( sol1, sol2 ) ), is ( sol2 ) )
18596	assertEquals ( expectedResult, actualResult )
18597	assertEquals ( rightsString, fr. getRights ( ) )
18598	assertEquals ( "<font size=-1>test</font>", largeSizeDecorator. toDisplay ( ) )
18599	Assert. assertNull ( valueWrapperResult )
18600	assertEquals ( datum. get ( ), fromJson. get ( ) )
18601	Assert. assertEquals ( 10, this. sqlgGraph. traversal ( ). V ( ). count ( ). next ( ), 0 )
18602	assertFileExists ( file )
18603	assertEquals ( expResult, result )
18604	Assert. assertEquals ( 1.5f, rad, EPSILON )
18605	test. assertResult ( )
18606	assertThat ( user, is ( notNullValue ( ) ) )
18607	assertEquals ( Status. ERROR, status )
18608	softly. assertThat ( skipInstallationChecker )
18609	assertEquals ( CSV_FILE, writer. toString ( ) )
18610	Assert. assertEquals ( "[1, 2, 3]", formatted )
18611	assertEquals ( "01", Hex. toHexString ( outputStream. toByteArray ( ) ). toUpperCase ( ) )
18612	assertEquals ( "output must be empty array", 0, output. length )
18613	assertEquals ( "echo:", result )
18614	assertEquals ( uri, f. getBaseUrl ( ) )
18615	Assert. assertEquals ( expectedNode. toString ( ), pdoc. toString ( ) )
18616	Assert. assertEquals ( config. getEnumValue ( ), result. getEnumValue ( ) )
18617	assertEquals ( "git upload-pack 'bob'", fc. getCommand ( ) )
18618	assertEquals ( "second messages", fsm. getLastMessage ( ). toString ( ) )
18619	assertEquals ( male, repository. getSingleResult ( query ) )
18620	assertTrue ( end - start > 1000 )
18621	assertEquals ( "^/cntrl/actn$", pattern )
18622	assertEquals ( form. getName ( ), formUpdate. getName ( ) )
18623	assertEquals ( "0074f303c0b50dcf4a0f8e48840c14af9dd5666f5a953b154b9d7d2549ea02f9", returnedValue. toString ( ) )
18624	assertEquals ( 60f, a. intersectionArea ( b ), 0.0001 )
18625	assertEquals ( cf. getClientProperties ( ). size ( ), 0 )
18626	assertThat ( jsonOut. getReceivedEvents ( ), contains ( jsonIn. getReceivedEvents ( ) ) )
18627	assertEquals ( "Pair " + i + " vs " + j + " is not equal to expected value " + expected, expected, Byte. get ( i, j ) )
18628	assertTrue ( personInformationStructure. size ( ) > 0 )
18629	assertThat ( request1, is ( not ( request2 ) ) )
18630	assertEquals ( newReplicaCount, distribution. getDistribution ( ). length )
18631	assertDrlHasCompilationError ( drl1, 1 )
18632	AssertionUtils. multiAssertEquals ( createAsDocument9, response5. getResponseObject ( ) )
18633	assertEquals ( 200, page. getWebResponse ( ). getStatusCode ( ) )
18634	Assert. assertEquals ( "Value is incorrect", map ( TIME_2_STRING, "test" ), value )
18635	assertions. isNullOrEmpty ( )
18636	assertTrue ( peerAcceptanceUtil. isPeerInterestedOnRemoteWorker ( remoteClientOID. getServiceID ( ) ) )
18637	UnitTestUtils. assertEquals ( new double [ ] { - 1, 1, 1 }, b. toArray ( ), 1.0e-12 )
18638	Assert. assertEquals ( 1, indexer. getErrors ( ). size ( ) )
18639	Assert. assertFalse ( config1. equals ( config2 ) )
18640	assertTrue ( result )
18641	assertTrue ( result1 == result2 )
18642	assertNull ( "Unexpected value in outputTriple: " + outputTriple, outputTriple )
18643	assertEquals ( "Count of customer", 2, res )
18644	Assert. assertEquals ( SECRET + "-test", secret. get ( "serverKeystorePass" ) )
18645	assertEquals ( "mystring", result )
18646	Assert. assertEquals ( "this test should execute based on Runner logic", "test", this. test )
18647	assertEquals ( 1, BufferTools. indexOfTerminator ( buffer, 0, 1 ) )
18648	assertAllCommandsUsed ( )
18649	Assert. assertEquals ( "travelInTime(0).travelInWorld(0).createNode().addToVar(root).createNode().addToVar(root).readVar(root).println('{{result}} avec echap \\\\'')", t. toString ( ) )
18650	assertEquals ( expected, actual )
18651	assertFlowState ( FAILED )
18652	Assert. assertEquals ( ServerParse. RENAME, sqlType )
18653	assertEquals ( "abcde", stringAppender. toString ( ) )
18654	assertEquals ( "Hello, World!", value. evaluateAttributeExpressions ( createFlowFile ( attributes ) ). getValue ( ) )
18655	assertMessagesEquals ( expected, actual )
18656	assertTrue ( verifyProps ( a, LIST_AB ) )
18657	Assert. assertTrue ( EqualsBuilder. reflectionEquals ( expected, store. findVirtualServer ( "www" ), true ) )
18658	assertXpathNotExists ( "/a:entry/m:properties", xmlString )
18659	assertTrue ( uuid. length ( ) == urlToken. length ( ) )
18660	assertEquals ( "gerrit approve --project projectname --message \\"Error message\\" --code-review -1 1,2", command )
18661	assertThat ( xmlResult, CompareMatcher. isSimilarTo ( out. toString ( ) ). ignoreWhitespace ( ). withNodeMatcher ( new DefaultNodeMatcher ( ElementSelectors. byNameAndText ) ) )
18662	assertEquals ( lastReadPostList. size ( ), 0, "Incorrect number of last read posts deleted." )
18663	assertEquals ( Arrays. asList ( p0, p1 ), ctx. getParameterDescriptors ( ) )
18664	Assert. assertEquals ( expectedRegex, pattern. compiled ( ). toString ( ) )
18665	assertThat ( rubyVersion, equalTo ( "1.9.3-p125" ) )
18666	Assert. assertArrayEquals ( new String [ ] { ".sql" }, language. getFileSuffixes ( ) )
18667	assertEquals ( "InputStreamTest", toString ( stream ) )
18668	assertEquals ( GitSCM. class, whitelist. getClassLoader ( fakeProject ). loadClass ( GitSCM. class. getName ( ) ) )
18669	assertEquals ( "from SURVEY SURVEY\\njoin table(functionCall()) as fc\\nwhere SURVEY.NAME is not null", query. toString ( ) )
18670	assertFalse ( constraint. fulfilled ( iContext ) )
18671	Assert. assertEquals ( "SELECT 'Monty!' REGEXP '.*';", text )
18672	assertEquals ( expectedValue, propertyValue )
18673	assertEquals ( "wrong number of enumerated values... test should be examined and updated", 7, ParseMessage. values ( ). length )
18674	assertEquals ( assertion, sigmoid )
18675	assertThatSql ( query, is ( "SELECT * FROM table AS nodes WHERE (nodes.col1 IS NOT NULL AND nodes.col2 IS NOT NULL)" ) )
18676	assertTrue ( readVrp. getJobs ( ). get ( "1" ). getRequiredSkills ( ). containsSkill ( "skill2" ) )
18677	assertions. hasSize ( 0 )
18678	assertOut ( "var /** @type {Array} */ a = new Array(30)" )
18679	Assert. assertEquals ( "(aa_change_deletion (aa_point_location (aa_char Cys) 123) del 1)", aa_change_deletion. toStringTree ( parser ) )
18680	assertEquals ( "GBP 5.83", test. toString ( ) )
18681	assertEquals ( count + 1, nowcount )
18682	assertClosed ( toClose )
18683	assertEquals ( entry. getValue ( ), actual )
18684	assertEquals ( expected, document )
18685	assertEquals ( vars, variablesTyped )
18686	assertNull ( e )
18687	Assert. assertTrue ( score > 0 )
18688	Assert. assertNotNull ( dbRangerPolicy )
18689	assertEquals ( "Accurev", descriptor. getDisplayName ( ) )
18690	assertTrue ( underTest. collectDefaultCollection ( futures, collector ). isEmpty ( ) )
18691	assertEquals ( 1, x )
18692	assertEquals ( ROUTE_KEY, instanceIdentifier. firstKeyOf ( L3vpnMcastRoute. class ) )
18693	Assert. assertNotNull ( resultEntity )
18694	assertNotNull ( modularLauncher. getInjector ( ) )
18695	Assert. assertEquals ( "Wrong toString()", "msgVersion: 4 objectClass: org.opendaylight.yang.gen.v1.urn" + ".opendaylight.openflow.oxm.rev150225.match.entries.grouping.MatchEntry" + " msgType: 32768 oxm_field: 42 experimenterID: null", key1. toString ( ) )
18696	assertEquals ( expectedUuid, datatype. serialize ( location ) )
18697	Assert. assertThat ( Foo. class. getDeclaredField ( "b" ), is ( true ) )
18698	assertEquals ( "package org.kissmda.test.junit;\\n" + "public class ClazzName {\\n" + "  public void doSomething(  Name values) {\\n" + "      assertNotNull(values);\\n" + "    } catch (org.kissmda.AException ex) {\\n" + "        assertNotNull(values);\\n" + "        }\\n" + "  }\\n", cu. toString ( ) )
18699	assertTrue ( subDao. contains ( co ) )
18700	assertEquals ( "test-instance", clientProps. getProperty ( ClientProperty. INSTANCE_NAME. getKey ( ) ) )
18701	assertEquals ( size, buffer. capacity ( ) )
18702	assertThat ( manager. evaluate ( selectorConfiguration, variableSource ), is ( false ) )
18703	Assert. assertEquals ( new URI ( "http://localhost:80?user=password" ), result )
18704	assertThat ( message, equalTo ( INTERPOLATED_EXAMPLE_MESSAGE ) )
18705	assertConnection ( sqlInputs, 1, "jdbc:oracle://localhost:30/dbName;prepareSQL=1;useLOBs=false;TDS=4.2;", null )
18706	assertTrue ( "Comparaison de fichier PDF en erreur", comparator. compare ( ) )
18707	assertNotNull ( solution )
18708	context. assertIsSatisfied ( )
18709	assertEquals ( timesToIterate, this. called )
18710	assertions. contains ( values )
18711	assertTrue ( result. getErrors ( ). size ( ) > 0 )
18712	assertNotNull ( codes )
18713	assertThat ( client. getNamesOfRepositories ( ), hasItems ( "Aircraft", "Cars", "Vehicles" ) )
18714	assertEquals ( "Incorrect add news", 3, news. size ( ) )
18715	assertEquals ( originalFetchCount, timeline. getFetchCount ( ) )
18716	assertSame ( "control", choice. get ( ) )
18717	assertEquals ( Lists. newArrayList ( "value1", "false", "1.02", "1,-1" ), Pql. getRowStringValues ( row ) )
18718	Assert. assertEquals ( "PK2222", result )
18719	assertEquals ( 0., absFixedCosts. getCosts ( context ) + relFixedCosts. getCosts ( context ), 0.01 )
18720	assertEquals ( 4, ex. getMax ( 4, 4 ) )
18721	assertEquals ( Arrays. asList ( p1, p2, p3, cheddar, p3 ), list )
18722	assertEquals ( expecting, found )
18723	assertNull ( mapping )
18724	assertEquals ( expResult, result )
18725	Assert. assertEquals ( "John,Doe", result. trim ( ) )
18726	this. assertGet ( "entitytypes/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fentitytypes/entitytypes/kiwi_inheritance", "entitytypes/kiwi_inheritance.json" )
18727	Assert. assertTrue ( command instanceof AuditEndpointCommand )
18728	assertFalse ( connectionManager. isConnected ( ) )
18729	assertEquals ( expectedEntry, result )
18730	Assert. assertNull ( jurl. getResponseJsonObject ( EatStreetEndpoint. class ) )
18731	Assert. assertTrue ( result )
18732	assertEquals ( "The return value is not correct.", Tag. EVAL_PAGE, this. tag. doEndTag ( ) )
18733	assertNotNull ( ip )
18734	assertFalse ( list. hasMore ( ) )
18735	assertEquals ( 2, container. size ( ) )
18736	assertNotNull ( error )
18737	assertEquals ( "bold text", label )
18738	assertEquals ( "abc, def\\n", found )
18739	assertTrue ( lhs. equals ( rhs ) )
18740	assertThat ( log, instanceOf ( Log4J2Impl. class ) )
18741	assertTotalDocs ( )
18742	assertThat ( verifyModelVersionsSaved ( ), is ( ImmutableMap. of ( "foo", "1.2", "bar", "1.1", "wibble", "2.0" ) ) )
18743	assertEquals ( "Failed at index " + i, assertions [ i ], arr )
18744	assertFalse ( violated )
18745	assertSame ( Object. class, converter. getClass ( ) )
18746	assertEquals ( valueOf ( v ), s. serialize ( ( HttpPartSchema ) null, v ) )
18747	assertEquals ( "Has one child with jssonns:ns", 1, numChilds )
18748	assertEquals ( expected, average, 0.001 )
18749	assertEquals ( 0, triggeredBy. size ( ) )
18750	assertEquals ( "", writer. toString ( ) )
18751	Assert. assertEquals ( "Invalid result", "text", result )
18752	Assert. assertFalse ( "Authenticated", authenticated )
18753	Assert. assertEquals ( true, errors. hasFieldErrors ( "states" ) )
18754	assertThat ( data, is ( test ) )
18755	assertTrue ( last. equals ( childLast [ 0 ] ) )
18756	Assert. assertNotNull ( tasks )
18757	assertThat ( studies. size ( ), is ( 1 ) )
18758	assertNotEquals ( array, result )
18759	assertEquals ( "Incorrect unsigned byte value", MAGIC, s. u8. shortValue ( ptr ) )
18760	context. assertIsSatisfied ( )
18761	assertEquals ( groups, a. getGroups ( ) )
18762	assertNull ( "Got an unexpected number of rows - no data should be returned with the NoDataFromScan coprocessor. Found: " + r, r. list ( ) )
18763	assertEquals ( Order. sellAt ( 0, Decimal. NaN, Decimal. NaN ), uncoveredTrade. getEntry ( ) )
18764	assertThat ( channelCaptor. getValue ( ), is ( "@" + SlackBot. class. getSimpleName ( ) + "@" + SlackBot. class. getSimpleName ( ) ) )
18765	assertAnnotations ( 2, MilitaryPlatform. class, new TestEntity < > ( 0, "HMJS Troutbridge", "HMJS Troutbridge" ), new TestEntity < > ( 1, "H.M.P.N.G.S. Hidden Dragon", "H.M.P.N.G.S. Hidden Dragon" ) )
18766	assertEquals ( request. toHexString ( ), "000000008e3039708fdd9f488f9665426d0d9c5702000000020000001a001a00000002001c001c00040002000d000000000000000d000000410064006d0069006e0069006e006900730074006f00720000000e000000000000000e000000410064006d0069006e006900730074006f00720000000e000000410064006d0069006e0069006f00610074006f007200610074006f007200320000000000000000000100000000000000" )
18767	assertEquals ( "FAIL:Failure Demonstration", result )
18768	assertNull ( at. convert ( null, null, "foo" ) )
18769	assertTrue ( loader. load ( "scrypt", false ) )
18770	assertIsEphemeral ( "ephemeral testChild", testVal )
18771	result. assertIsSatisfied ( )
18772	assertEquals ( "http://example.com:4510/my_db/my_doc?startKey=test&endKey=test", uri. toString ( ) )
18773	assertTrue ( Arrays. equals ( data, ( boolean [ ] ) deserialize. readObject ( ) ) )
18774	assertThat ( rows, hasItem ( row ( ordered_data ) ) )
18775	assertThat ( DateUtils. toDate ( cal ), is ( date ) )
18776	assertFalse ( match )
18777	assertEquals ( vr. getValidity ( ), Validity. INVALID )
18778	assertEquals ( 1, change1 )
18779	Assert. assertEquals ( Constants. GENERIC_SERIALIZATION_BEAN, url. getParameter ( Constants. GENERIC_KEY ) )
18780	assertEquals ( 4, route. getTourActivities ( ). getActivities ( ). size ( ) )
18781	assertTrue ( true )
18782	assertEquals ( - 2762, int0 )
18783	assertEquals ( str, "Hello World!" )
18784	assertThat ( list. toString ( ), is ( copy. toString ( ) ) )
18785	Assert. assertTrue ( success )
18786	Assert. assertEquals ( expected, actual )
18787	assertEcssEquals ( ".menu{background-position:\\"#{notemptya4jSkin.menu1?a4jSkin.menu2:''}\\";}", convertFragment ( xcss ) )
18788	assertEquals ( Task. COMPLETED, task. getCompletionStatus ( ) )
18789	Assert. assertTrue ( notification. isHasNotification ( ) )
18790	Assert. assertEquals ( expected, actual )
18791	arraysWithCustomComparisonStrategy. assertContainsExactlyInAnyOrder ( someInfo ( ), actual, expected )
18792	assertNodeTriggered ( processInstance. getId ( ), "Start", "User Task", "MyBoundaryErrorEvent" )
18793	Assert. assertEquals ( DefaultJobPriorityProvider. DEFAULT_PRIORITY_ON_RESOLUTION_FAILURE, job. getPriority ( ) )
18794	assertArrayEquals ( new int [ ] { 0 }, findFusionStartIndices ( schedulingStrategies ) )
18795	assertThat ( result, is ( lines ( new String [ ] [ ] { { "A", "B", "C" } } ) ) )
18796	assertEquals ( machine, MACHINE_NAME_USED. getValue ( ) )
18797	assertEquals ( "Got read size " + testData [ i ] + " instead of " + expectedResult, expectedResult, actualResult )
18798	assertEquals ( "Expected 5 results!", 5, n )
18799	assertEquals ( 0, map. size ( ) )
18800	assertEquals ( "Skip past the header", 0, stream. skip ( ) )
18801	assertEquals ( "20110105205442147801000000", d. getId ( ) )
18802	assertTrue ( "Timeout reached. Message latch value: " + messageLatch. getCount ( ), messageLatch. await ( 5, TimeUnit. SECONDS ) )
18803	assertEquals ( "test", htmlDriver. runOnly ( ) )
18804	Assert. assertEquals ( 1024.0, a. divide ( b ). doubleValue ( ), 1.0e-15 )
18805	assertEquals ( t, HttpURL. toAbsolute ( absURL, s ) )
18806	assertEquals ( "kHz", khz. toString ( ) )
18807	assertEquals ( " WHERE (\\"NAME\\" LIKE? OR \\"AGE\\" >?)", QueryBuilder. getWhereStringForFilters ( filters, sh ) )
18808	assertEquals ( post. getUnsubscribeLinkForSubscribersOf ( PostSubClass. class ), "/posts/1/unsubscribe" )
18809	assertEquals ( BatchStatus. FAILED, jobExecution. getBatchStatus ( ) )
18810	assertThat ( results. size ( ), is ( 1 ) )
18811	assertEquals ( ( long ) 8, result. getLongValue ( ) )
18812	assertTrue ( reset. await ( 10, TimeUnit. SECONDS ) )
18813	assertEquals ( "Expected that the voting has been terminated and has enough support votes", 2, initiativeInfo. getAcceptedInitiativesCount ( ) )
18814	assertEquals ( offset, options. getOffset ( ) )
18815	assertTrue ( page. asXml ( ). contains ( "java.lang.NullPointerException" ) )
18816	assertEquals ( "Failed to generate two dimensional array", "new Object[][] { { 1, 2 } }", s )
18817	assertThat ( plugin, instanceOf ( TimelinePlugin. class ) )
18818	assertEquals ( 255, m. mean ( ), 0.001 )
18819	Assert. assertEquals ( TOKEN, token )
18820	assertEquals ( concepts, Collections. emptyList ( ) )
18821	assertArrayEquals ( plaintext, correctPlaintext )
18822	assertEquals ( ValidationResult. Result. OK, result. getStatus ( ) )
18823	assertEquals ( 4, fixture. mark ( ) )
18824	assertContentEquals ( style, Arrays. asList ( "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" ) )
18825	assertTrue ( page. asXml ( ). contains ( "view" ) )
18826	assertEquals ( b1, b2 )
18827	assertThat ( termCollection, is ( empty ( ) ) )
18828	Assert. assertEquals ( orig, clone )
18829	Assert. assertEquals ( "9999999999.9999", cide. getValorAliquota ( ) )
18830	Assert. assertNotNull ( freeTaggingService )
18831	assertEquals ( "SELECT * FROM design.view ORDER BY foo DESC", query. toString ( ) )
18832	assertTrue ( LibUsb. getDeviceList ( context, deviceList ) >= 0 )
18833	assertEquals ( val, 9 )
18834	assertNull ( metadata. getEntityLocksMetadata ( ). getLocks ( ) )
18835	assertEquals ( "Test Document", result. getSize ( ). iterator ( ). next ( ). getValue ( ) )
18836	assertThat ( unit. shouldGenerateInvocationId ( ), is ( false ) )
18837	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm", result ) )
18838	assertTrue ( callback. convert ( reply ). toList ( ). isEmpty ( ) )
18839	assertEquals ( 0, profileEntries. size ( ) )
18840	assertEquals ( "\\"a,b,c\\"", ctxName )
18841	Assert. assertNotNull ( imposto. toString ( ) )
18842	assertSame ( test. with ( Month. JUNE ), test )
18843	Assert. assertTrue ( ctx. getResult ( ) )
18844	assertEquals ( nestedMap. get ( "key1" ), complexPojo. getNestedSimplePojo ( ). get ( "key1" ) )
18845	assertNotNull ( result )
18846	assertEquals ( "a", service. getNamespace ( "hell" ) )
18847	assertEquals ( Arrays. asList ( new GroupByExpression ( JoinType. DEFAULT, str ) ), metadata. getGroupByExpressions ( ) )
18848	assertNotNull ( result )
18849	assertNotNull ( engine )
18850	assertEquals ( expect, socketIoData )
18851	assertEquals ( "GET:testGetRequestWithParameters", responseBody )
18852	assertNotNull ( fieldInjectable. getInjectionTarget ( ) )
18853	assertEquals ( "Invalid query result", "SELECT * FROM vdb.PM1 WHERE $filter eq @p1 AND @p1 = 1", state. getQuery ( ) )
18854	assertEquals ( expResult, result )
18855	assertArrayEquals ( message, output )
18856	Assert. assertEquals ( 2, nbConceptsAlignedToMyThes. longValue ( ) )
18857	assertFalse ( fencer. fence ( MOCK_TARGET ) )
18858	assertIsOutputEqualTo ( "Using table annotated name 'name' for parameter position 0" )
18859	assertEquals ( 0., violation, 0.01 )
18860	Assert. assertFalse ( "Failure expected false", r. getLeft ( ) )
18861	this. assertGet ( "patternrefinementmodels/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fconcrete%252Fpatternrefinementmodels/first_patternrefinementmodel.json", "patternrefinementmodels/first_patternrefinementmodel.json" )
18862	Assert. assertEquals ( 0, analyser. getLoadAtBeginning ( ), 0.01 )
18863	assertTrue ( map. getTerrain ( ) instanceof DuneTerrain )
18864	assertEquals ( "hello", engine. compileMustache ( "overwrite_helper", "{{#each this}}hello{{/each}}" ). render ( Boolean. TRUE ) )
18865	Assert. assertArrayEquals ( "Wrong data", data, builtByFactory. getData ( ) )
18866	assertThat ( withResult ( TestResult. ERROR ). matches ( testOutcome ), is ( false ) )
18867	assertEquals ( "<html><head></head><body><span class=\\"foo\\">bar</span></body></html>", TextUtil. stripNewlines ( doc. html ( ) ) )
18868	assertNotNull ( ft )
18869	assertEquals ( Arrays. asList ( "myForm:outerOutput", "myForm:table:0:nestedOutput", "myForm:table:1:nestedOutput" ), trackingVisitCallback. getVisitedIds ( ) )
18870	assertTrue ( false )
18871	assertEquals ( messagePage. getContent ( ). size ( ), messageCount, "Incorrect message count" )
18872	assertFalse ( lockAquired )
18873	assertThat ( edges. size ( ), is ( 0 ) )
18874	assertE ( "----------" + "|        |" + "|        |" + "|        |" + "|        |" + "|        |" + "|        |" + "----------" )
18875	assertNotEquals ( column1, column2 )
18876	Assert. assertEquals ( clickMe. getText ( ), buttonText )
18877	assertEquals ( "test", persistentNameIdentifier )
18878	assertNotNull ( json )
18879	assertSimilarXml ( TestUtils. getResource ( "/org/sonar/plugins/groovy/codenarc/exportProfile/exportProfile.xml" ), writer. toString ( ) )
18880	assertEquals ( 2, mapper. get ( e ). other. size ( ) )
18881	assertEquals ( HttpMethod. GET, HttpMethod. of ( request ) )
18882	assertEquals ( 0, result. getNearestValue ( ), 0.001 )
18883	Assert. assertEquals ( "select SUM(STUDENT.ID) from student", getSql0 ( node ) )
18884	assertThat ( fetchCount ( ), is ( 1L ) )
18885	assertEquals ( "+a -a/b", s. getPattern ( ) )
18886	assertEquals ( Integer. valueOf ( 1 ), result )
18887	assertThat ( errorResponse1, is ( not ( errorResponse2 ) ) )
18888	assertPutFails ( name, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
18889	assertThat ( result. getName ( ), is ( "Mircosoft涓���" ) )
18890	assertEquals ( cause, err )
18891	assertEquals ( asList ( listener1, listener2 ), listeners )
18892	assertEquals ( "", result )
18893	assertEquals ( "3 啶�啶苦え 啷�啶距う", t. format ( new Date ( 2629743830L * 3L ) ) )
18894	assertThat ( results, is ( new String [ ] [ ] { { "A", "B", "C" } } ) )
18895	assertThat ( controller, is ( equalTo ( method ) ) )
18896	assertEquals ( "OK", x. getDescription ( ) )
18897	assertNotNull ( response )
18898	assertThat ( parameters, is ( "?searchView=own&orderBy=createdNewest&show=closeToTermination&minSupportCount=0" ) )
18899	assertEquals ( 1, results. length )
18900	context. assertIsSatisfied ( )
18901	assertThat ( applicationSettings. getAccountCreationSetting ( ), is ( ACCOUNT_CREATION_ALLOWED ) )
18902	assertThat ( pipelineCache. get ( ), is ( returnedPipeline ) )
18903	assertThat ( index, is ( 0 ) )
18904	assertThat ( planet. isPresent ( ), is ( false ) )
18905	assertContains ( "Footer is here", content )
18906	Assert. assertEquals ( 1, sut. getWeekdayCountBetweenDates ( start, end ) )
18907	assertEquals ( OffsetDate. of ( LocalDate. of ( 2007, 7, 15 ), OFFSET_PONE ), t )
18908	assertNotEquals ( left, right )
18909	assertThat ( result, is ( expected ) )
18910	assertEquals ( "bar", template. render ( new String [ ] { "lala" } ) )
18911	assertThat ( result, is ( equalTo ( expected ) ) )
18912	assertThat ( isValid, is ( true ) )
18913	assertThat ( geometry. getArea ( ), is ( - 25.0 ) )
18914	assertEquals ( 0, ImportImport. filterInvalid ( files ). size ( ) )
18915	assertTrue ( shifter. hasAttribute ( Attribute. DEFLECT ) )
18916	assertEquals ( expected, actual )
18917	assertThat ( plugin. isNoOutput ( ), equalTo ( false ) )
18918	assertNull ( "State returned is not null", state )
18919	Assert. assertSame ( sampleHandler, challengeHandler )
18920	assertAllCommandsUsed ( )
18921	assertEquals ( "total garbage", IOUtils. toString ( swapStore. openDownloadStream ( "proj" ) ) )
18922	assertThat ( "empty projects shall be forbidden", validation. hasErrorAbout ( "projects", "offers" ) )
18923	assertThat ( result, is ( packetStatus ) )
18924	assertEquals ( expected, actual )
18925	assertThat ( location, is ( "file:///static/config/default.properties" ) )
18926	assertTrue ( text. matches ( "(?s).*<head.*alert\\\\(\\\\'ok\\\\'\\\\);.*</head.*" ) )
18927	assertArrayEquals ( new String [ 0 ], args )
18928	assertTrue ( interval. isEmpty ( ) )
18929	assertEquals ( expected, actual, delta )
18930	assertThat ( "Should have failed to map", bcp. hasFailed ( ), is ( false ) )
18931	Assert. assertTrue ( response. contains ( blogTitle ) )
18932	assertEquals ( ctxVars. get ( "logLevel" ), node. getDictionary ( ). findValuesByID ( "logLevel" ). getValue ( ) )
18933	assertStat ( result )
18934	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
18935	assertTrue ( found )
18936	Assert. assertEquals ( m, support. convert ( m ) )
18937	assertEquals ( DecodeQualification. INTENDED, plugIn. getDecodeQualification ( path ) )
18938	assertEquals ( ints, ints2 )
18939	assertEquals ( "'&amp;&lt;&gt;&apos;&quot;'", query. execute ( ) )
18940	assertEquals ( NUM_TOP_LEVEL_DIRS / 2, mFsMaster. listStatus ( new AlluxioURI ( "/" ) ). size ( ) )
18941	Assert. assertEquals ( expected1, predicted )
18942	assertNull ( KeyValueStoreRW. get ( vutDiv, vutKey1 ) )
18943	assertNotNull ( ShortCode. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "SCXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
18944	assertNotNull ( Config. get ( request. getSession ( ), Config. FMT_LOCALE ) )
18945	Assert. assertEquals ( "Copy of Sample Sheet", sheets. getData ( ). get ( 0 ). getName ( ) )
18946	assertEquals ( previous, size )
18947	assertEquals ( expected, d_smd. getCohenVariance ( ), 0.0001 )
18948	Assert. assertEquals ( expResult, result )
18949	assertEquals ( "0a4c2b2c2b0c4b0e0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f", checksum )
18950	assertThat ( attributeValueNs, is ( "true" ) )
18951	assertPlaces ( places )
18952	Assert. assertEquals ( "{?var}", e. toString ( ) )
18953	assertEquals ( STRING, s )
18954	assertThat ( sampledValue. getContext ( ), equalTo ( readingContext ) )
18955	assertEquals ( expected, actual )
18956	assertEquals ( testString, avroField. convertToKettleValue ( map, schema, mock ( Schema. class ), false ) )
18957	Assert. assertEquals ( "\\"etag\\"", result. getFirstHeader ( "ETag" ). getValue ( ) )
18958	assertThat ( builder. getPatches ( ), arrayWithSize ( 0, 2 ) )
18959	assertEquals ( "<form id=\\"bar\\" name=\\"Name\\"><fieldset><legend>foo:</legend><input type=\\"text\\" name=\\"Email\\" value=\\"text\\" />\\n" + "  <label for=\\"X\\" value=\\"X\\" />\\n" + "  <input type=\\"text\\" name=\\"label\\" value=\\"X\\" />\\n" + "  <input type=\\"text\\" name=\\"Name\\" value=\\"Email\\" />\\n" + "</fieldset></form>", r )
18960	Assert. assertEquals ( dataHoraProcessamento, retornoConsultaCadastroDados. getDataHoraProcessamento ( ) )
18961	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5, 6 ) ) )
18962	assertEquals ( 0, cli. getProgramArguments ( ). size ( ) )
18963	assertTrue ( validator. validate ( EntityNames. STUDENT_SECTION_ASSOCIATION, associations ). equals ( associations ) )
18964	assertEquals ( "<shopping>\\n" + "    <category type=\\"groceries\\">\\n" + "        <item>Luxury Chocolate</item>\\n" + "        <item>Luxury Coffee</item>\\n" + "    </category>\\n" + "    <category type=\\"supplies\\">\\n" + "        <item>Paper</item>\\n" + "        <item quantity=\\"6\\" when=\\"Urgent\\">Pens</item>\\n" + "    </category>\\n" + "    <category type=\\"present\\">\\n" + "        \\n" + "    <item>Mum's Birthday</item><item when=\\"Oct 15\\">Monica's Birthday</item></category>\\n" + "</shopping>", result. getResult ( ) )
18965	assertEquals ( 2, numberUsersWithPreference )
18966	assertEquals ( size, valueModel. getSize ( ) )
18967	assertEquals ( expected, pu. getCharsetProperty ( "sun.stderr.encoding" ) )
18968	Assert. assertEquals ( 1, rs. getRowCount ( ) )
18969	assertEquals ( "", found )
18970	Assert. assertEquals ( jdkHands, acHands )
18971	assertTreeEquals ( top, result )
18972	assertEquals ( null, output )
18973	assertEquals ( "void dest7(int, @A @B @C int, @B @C @D int, @C @D @E int)", toString ( dest ) )
18974	assertTrue ( handler instanceof DisruptorBasedRoundRobinRelatedContentSearchRequestProcessorHandler )
18975	Assert. assertTrue ( tempFontFile. exists ( ) )
18976	assertResultSet ( res )
18977	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
18978	assertThat ( getRecordedDomain ( ), hasCondition ( Available ) )
18979	assertNull ( dataset. getDatacentre ( ) )
18980	context. assertTrue ( ex instanceof IllegalArgumentException )
18981	assertTrue ( result. getException ( ) instanceof FlowExecutionException )
18982	Assert. assertEquals ( 0, norm, 6.0e-13 )
18983	assertEquals ( newEndingDateTime, topic. getPoll ( ). getEndingDate ( ) )
18984	assertThat ( Type. getTypeDefaultValue ( args [ 0 ] ), is ( equalTo ( new Type ( "String" ) ) ) )
18985	assertEquals ( "3 ���� ��", t. format ( new Date ( 2629743830L * 12L * 3L ) ) )
18986	assertTrue ( translator. isMethodSupported ( "refreshServiceAcl" ) )
18987	Assert. fail ( "'MustUnderstand headers' exception should be thrown." )
18988	assertEquals ( "Wrong child index", 0, handler. indexOfChild ( parent, child ) )
18989	assertThat ( domain. isLogHomeEnabled ( ), is ( false ) )
18990	assertTrue ( errorsContainer. equals ( errors ) )
18991	assertTrue ( "static Base64.encodeBase64Chunked() test-" + i, b )
18992	assertEquals ( expectedLayer, actualLayer )
18993	assertFalse ( victim. accept ( request ) )
18994	assertThat ( result, is ( new String [ ] [ ] { { "Hello, world!" } } ) )
18995	assertEquals ( TEST_CLUSTER_NAME, hadoopFileOutputMeta. getNamedClusterURLMapping ( ). get ( TEST_FILE_NAME ) )
18996	assertEquals ( key. length, Sodium. crypto_aead_xchacha20poly1305_ietf_keybytes ( ) )
18997	assertEquals ( "a,b,c", actual )
18998	assertThat ( ruleManager. getAllGlobalsOfType ( "java.util.Random" ), is ( Arrays. asList ( "bla1", "bla2" ) ) )
18999	assertEquals ( ".ext", Util. stripFileExtension ( fullName ) )
19000	assertThat ( codedTextVOs, hasSize ( 2 ) )
19001	assertTrue ( futures [ 0 ]. isClosed ( ) )
19002	assertEquals ( actualAfterProcess, expectedAfterProcess )
19003	assertEquals ( before, update )
19004	assertEquals ( childName, mappedStart. getPath ( ). get ( 0 ). getStart ( ) )
19005	assertThat ( true, equalTo ( result ) )
19006	Assert. assertNotNull ( clientLayers )
19007	assertEquals ( "validating the bean", obj, new TestBean ( "" ) )
19008	assertEquals ( "1", output. toString ( ) )
19009	assertEquals ( edit, hadoopCluster. editNamedCluster ( iMetaStore, namedCluster, shell ) )
19010	assertEquals ( "http://example.com/fhir/Patient?name=james", capt. getValue ( ). getURI ( ). toString ( ) )
19011	assertEquals ( offset, offset + 1 )
19012	assertFalse ( result. passedValidation ( ) )
19013	assertNotNull ( injector )
19014	assertEquals ( uri, newUserLocation. toString ( ) )
19015	Assert. assertEquals ( userRepo, settings. getLocalRepository ( ) )
19016	assertEquals ( parent. models. size ( ), 1 )
19017	assertEquals ( 1, triangle. solution ( array ) )
19018	Assert. assertTrue ( "User should be logged in", gotException )
19019	assertEquals ( "user1", echoValue )
19020	assertEquals ( 2, pResult. getValues ( ). size ( ) )
19021	assertFalse ( result )
19022	assertEquals ( Status. NOT_FOUND, response. getClientResponseStatus ( ) )
19023	assertEquals ( "unexpected errors: " + equeue, 0, equeue. errors. size ( ) )
19024	assertFalse ( panelManager. mapPanelDefinitionToPresenter. containsKey ( customPanel ) )
19025	assertFalse ( "Inner transaction must not have transient state", flag )
19026	assertTrue ( victim. find ( ). isEmpty ( ) )
19027	assertEquals ( "helloWorld", result )
19028	assertEquals ( "Class", getLastIntegerValue ( parser. getEditorInterface ( ). get ( 0 ). getContent ( ) ) )
19029	assertEquals ( "Index is 3", "3", _index. toString ( ) )
19030	assertEquals ( "OTP is not properly printed", "OTP is not properly printed", otp, OTPUtil. unPrintableOTP ( otp ) )
19031	assertTrue ( mockListener. propertyChangedFired )
19032	Assert. assertFalse ( context. getResult ( ) )
19033	assertEquals ( gx. getPlaces ( ). size ( ), 1 )
19034	assertSelectResults ( results, one, two, three )
19035	Assert. assertEquals ( Long. valueOf ( "20100103000000" ), result )
19036	assertEquals ( "http://example.com/search?q=1&q=2&q=3&q=4&q=5&q=6&q=7&q=8&q=9&q=3&q=5&q=6&q=7&q=8&q=9&q=9&q=9&q=9&q=9&q=9&q=9&q=1&q=2&q=3&q=3&q=4&q=5&q=6&q=7&q=9&q=8&q=9&q=9&q=9&q=9&q=9&q=9&q=9&q=9&q=9&q=9&q=9&q=9&q=9&q=9&q=9&q=1&q=2&q=3&q=3&q=3&q=5&q=6&q=7&q=9&q=9&q=9&q=9&q=9&q=9&q=
19037	assertEquals ( "unable to fetch rule by name", mock, rs. getRuleByName ( "name" ) )
19038	assertThat ( action. remove ( server ), is ( true ) )
19039	assertThat ( "ssh key", sut. getSshKey ( ), is ( equalTo ( sshKey ) ) )
19040	assertEquals ( "Dest should have just the two fields altered", new FourLongs ( 1, 2, 3, 4 ), dest )
19041	assertThat ( PreV200HiveCliEmulator. INSTANCE. preProcessor ( ). script ( hiveSql ), is ( "set x=1;" ) )
19042	assertEquals ( 40, new AcceptsLambda < Integer > ( ). accept ( ( a, b ) -> x + a + b ). intValue ( ) )
19043	assertEquals ( firstInvocation, secondInvocation )
19044	assertEquals ( 4, adaptiveGrid. occupiedHypercubes ( ) )
19045	assertNull ( edmProvider. getEntityContainerInfo ( "Test.IllegalNamespace.entity" ) )
19046	Assert. assertEquals ( 29., analyser. getDistanceAtActivity ( route. getActivities ( ). get ( 2 ), route ), 0.01 )
19047	Assert. assertEquals ( "That monkey.", this. realiser. realiseSentence ( sentence_1 ) )
19048	assertEquals ( asList ( sampleShortAlbum, aLoveSupreme ), result )
19049	assertTrue ( "unknown ID should have no class", classdb. getClass ( "id3" ). isEmpty ( ) )
19050	assertThat ( argument. getValue ( ). getName ( ), is ( "step_with_parameters: <span class='step-parameter'>Joe</span>" ) )
19051	assertThat ( getWarningTimeout ( ), is ( 500L ) )
19052	assertTrue ( FileUtil. gitDirectoriesAreEqual ( getResource ( "/canCloneARepository/state/testproj" ), testprojDir. toPath ( ) ) )
19053	assertEquals ( "zhang", cache. get ( id ). getName ( ) )
19054	assertThat ( ( String ) FieldAccessUtil. getFieldVal ( interceptor, "profile" ), is ( "testProf" ) )
19055	assertEquals ( "result10", aspect. aroundFlippableMethods ( pjp, flipAnnotation ) )
19056	assertEquals ( myByte, adapter. getByte ( index ) )
19057	context. assertIsSatisfied ( )
19058	assertEquals ( skipLines, element. getSkipLines ( ) )
19059	assertEquals ( "1,2:3", engine. compileMustache ( "intArray", templateContents ). render ( data ) )
19060	assertEquals ( 1, list. size ( ) )
19061	assertEquals ( expected, elements )
19062	Assert. assertEquals ( codigoStatusReposta, eventoRetorno. getCodigoStatusReposta ( ), 0 )
19063	Assert. assertTrue ( myRecordV3. equals ( result ) )
19064	assertEquals ( 2, bucket. getTokenCount ( ) )
19065	assertEquals ( "on failure", pp. getValue ( ) )
19066	assertEquals ( "payload size", 156, payload. size ( ) )
19067	assertEquals ( 200, page. getWebResponse ( ). getStatusCode ( ) )
19068	assertEquals ( mockResponse, testResponse )
19069	Assert. assertEquals ( key1, key2 )
19070	assertEquals ( "John", query. getSingleResult ( ) )
19071	Assert. assertEquals ( "unexpected XML protocol result", sb. toString ( ), tagOut )
19072	Assert. assertFalse ( isActive )
19073	assertions. isNotLessThan ( expected )
19074	assertEquals ( crossoverProbability, crossover. getMutationProbability ( ), EPSILON )
19075	assertEquals ( "foo=bar", response. headers ( ). get ( "foo" ) )
19076	assertNotNull ( resp )
19077	assertEquals ( 4 * diffusioncoefficient * timelag, res, 0.01 )
19078	assertFalse ( matcher. matches ( mockElement ) )
19079	TestCase. assertTrue ( result )
19080	assertNull ( position )
19081	assertEquals ( Color. blue. getRGB ( ), thumbnail. getRGB ( 49, 99 ) )
19082	assertEquals ( expected, actual )
19083	assertTrue ( Arrays. equals ( password, entity. getPassword ( ) ) )
19084	Assert. assertTrue ( _c. canConvertTo ( Float. TYPE ) )
19085	assertEquals ( "intColumn:int,stringColumn:chararray,country:chararray", PigUtility. getColumns ( writable ) )
19086	Assert. assertEquals ( "\\"bob\\"", writer. toString ( ) )
19087	Assert. assertEquals ( 0, a. rank ( ) )
19088	Assert. assertEquals ( " VALUES (3, 'baby') ", sql )
19089	assertThat ( exit, is ( 0 ) )
19090	assertTrue ( json. contains ( "Organization" ) )
19091	assertEquals ( 2015, CalendarUtils. get ( midJune, CalendarUtils. YEAR_IN_DECADE ) )
19092	assertEquals ( result, query )
19093	assertThat ( request. getStatus ( ), equalTo ( chargePointStatus ) )
19094	assertThat ( target. delLink ( link ), is ( false ) )
19095	assertNotEquals ( instance, copy )
19096	assertTrue ( fired [ 0 ] )
19097	assertEquals ( 0, alice. getFriends ( ). size ( ) )
19098	assertTrue ( pathElement. isValid ( ) )
19099	assertThat ( ( Float ) converter. convert ( formattedValue, float. class, bundle ), is ( equalTo ( theValue ) ) )
19100	assertSame ( error, stream. getError ( ) )
19101	assertEquals ( ( double ) 8, result. getDoubleValue ( ), 0.0 )
19102	assertEquals ( dynamicProperties. size ( ), 1 )
19103	assertPagination ( ( page, pageSize ) -> caseClient. getCaseInstancesByData ( CONTAINER_ID, page, pageSize, statusFilter ), numberOfItems )
19104	assertTrue ( response!= null && CollectionUtils. isEmpty ( response. getObservations ( ) ) )
19105	assertEquals ( descriptor, content )
19106	assertEquals ( 2, list. size ( ) )
19107	assertEquals ( pp. getValue ( ), new Payload < > ( "error 4 test error" ). getValue ( ) )
19108	assertScore ( serviceDocumentRenderer, AbstractRenderer. MAXIMUM_FORMAT_SCORE )
19109	assertThat ( "Incorrect analysis value", analysis, is ( nullValue ( ) ) )
19110	assertThat ( getBranchInstrumentor ( ). getLinePosition ( gtNode ), equalTo ( 8 ) )
19111	assertFalse ( Files. exists ( root ) )
19112	Assert. assertEquals ( 0, list. size ( ) )
19113	assertEquals ( expected, actual )
19114	assertThat ( serverSocket. isBound ( ), is ( true ) )
19115	assertSame ( expectedOutput, result )
19116	assertEquals ( generatedJavascript, expectedJavascript )
19117	assertEquals ( exp, spans )
19118	Assert. assertSame ( component, table. getHeader ( ) )
19119	assertEquals ( new ModelId ( "Test", "com", "1.0.0" ), ModelId. fromPrettyFormat ( modelId ) )
19120	assertTrue ( statement. execute ( "showPrivileges" ) )
19121	assertTrue ( skills. containsSkill ( "skill1" ) )
19122	Assert. assertTrue ( "The file" + fileName + "doesn't contain expected content.", checkFileContains ( path, "Hello World" ) )
19123	assertNotNull ( food )
19124	assertStatementCanBeDeparsedAs ( select, statement )
19125	assertEquals ( relative, da. getDocType ( ) )
19126	assertNotNull ( rs )
19127	Assert. assertEquals ( "FROM Person T0 ORDER BY T0.lastName", query. toQuery ( ) )
19128	arrays. assertStartsWith ( description, null, sequence )
19129	Assert. assertFalse ( verifyTest ( builder ) )
19130	assertNull ( ServiceProviders. load ( ServiceProvidersTestAbstractProvider. class, NO_HARDCODED, cl, ACCESSOR ) )
19131	assertEquals ( 10, impl. getMaxSamples ( ) )
19132	assertThat ( target. getData ( ), is ( value ) )
19133	assertEquals ( expected, output )
19134	Assert. assertTrue ( Math. abs ( maxAbsDeviation ) < 1E-3 )
19135	assertArrayEquals ( bytes, field. getBytes ( ) )
19136	assertEquals ( "test", name )
19137	assertNotNull ( mpd. getMusicDatabase ( ) )
19138	assertFalse ( "equals(null)", a1. equals ( null ) )
19139	assertThat ( target. parse ( ), is ( false ) )
19140	assertEquals ( previousUsername, getAttribute ( "j_username" ) )
19141	Assert. assertEquals ( 0, sc. getAttribute ( "junit-exception" ) )
19142	assertNull ( new DefaultFieldSetterByField ( provider, target, FieldFixture. class, field ). getValue ( ) )
19143	assertEquals ( "https://us-phoenix-1.oraclecloud.com", endpoint )
19144	assertThat ( repairedRepositories, contains ( npmHosted, npmProxy, npmGroup, nonNpmFormat ) )
19145	Assert. assertEquals ( dRequest, eRequest )
19146	assertEquals ( expectedQuery, pairs. get ( "query" ) )
19147	assertEquals ( reader, readerResult )
19148	Assert. assertTrue ( allowedCRUDL )
19149	Assert. assertTrue ( fielderror. getErrorCode ( ). equals ( errorCode ) )
19150	assertEquals ( Math. max ( 1d, 2d ), e. evaluate ( ), 0.0 )
19151	assertNull ( routingResult )
19152	assertTrue ( tt2 == tt )
19153	assertEquals ( "Common exception", ms. getText ( ) )
19154	assertTrue ( isBundle )
19155	assertEquals ( mclass. toString ( ), 0.0, ref3. plus ( m3 ). getRMS ( ), TOLERANCE )
19156	assertEquals ( agentFcd2. sinkConfig, ans2 )
19157	assertFalse ( visitor. hasTestMethodKeyword ( parentNode ) )
19158	assertEquals ( true, result )
19159	Assert. assertNotNull ( entity )
19160	Assert. assertEquals ( "rows in db", 10, outputOperator. getNumOfEventsInStore ( TABLE_POJO_NAME ) )
19161	assertEquals ( item, point. getData ( ) )
19162	assertTrue ( "Precedence rules violated", content. getContent ( ). indexOf ( "default1osml2inline3external4" ) > 0 )
19163	Assert. fail ( "Expected WSSecurityException is not thrown" )
19164	assertTrue ( "header height must be > 0", xTable. getTableHeader ( ). getPreferredSize ( ). height > 0 )
19165	assertEquals ( "ti酶n.txt", objectMetadata. getFilename ( ) )
19166	assertArrayEquals ( expectedNumRows, queryId. getNumRows ( ) )
19167	Assert. assertEquals ( "" + "[{\\"type\\":\\"static\\",\\"name\\":\\"Java\\",\\"url\\":\\"https://www.java.com\\"}," + "{\\"type\\":\\"dynamic\\",\\"name\\":\\"Ruby\\",\\"url\\":\\"https://www.ruby-lang.org\\"}," + "{\\"type\\":\\"dynamic\\",\\"name\\":\\"Python\\",\\"url\\":\\"https://www.python.org\\"}]", result )
19168	Assert. assertEquals ( 10, resultList. size ( ) )
19169	Assert. assertEquals ( expResult, result )
19170	Assert. assertFalse ( englishTagFound )
19171	Assert. assertEquals ( this. list1Realisation, realised. getRealisation ( ) )
19172	assertThat ( result. properties ( ). size ( ), is ( 0 ) )
19173	assertEquals ( expected, actual )
19174	assertEquals ( "d'aqu铆 a 3", t. format ( new Date ( 6000 ) ) )
19175	assertEquals ( 1.0, x. dot ( y ), 0.00001 )
19176	assertEquals ( "Start console", true, config. startConsole ( ) )
19177	assertEquals ( "123", customDecimalFormat. format ( 123L ). toString ( ) )
19178	assertEquals ( "SampleTask", task. getKey ( ). getKind ( ) )
19179	assertEquals ( "\\"collection@" + pcollectionImpl. hashCode ( ) + "@" + jobPrototype. hashCode ( ) + "\\" [label=\\"collection\\" shape=\\"box\\"];", dotfileWriter. formatPCollection ( pcollectionImpl, jobPrototype ) )
19180	assertTrue ( store. confirmToken ( TEST_USERNAME, TEST_TOKEN ) )
19181	assertEquals ( 1, x. size ( ) )
19182	assertTrue ( binary. exists ( ) )
19183	assertEquals ( 1, a. lines. size ( ) )
19184	Assert. assertTrue ( result )
19185	assertThat ( request. equals ( request2 ), is ( false ) )
19186	assertEquals ( 0, tasks. size ( ) )
19187	assertFalse ( connectFuture. isConnected ( ) )
19188	assertEquals ( new Customer ( "Person", new BigDecimal ( 50 ) ), customer )
19189	assertTrue ( sprinkler. isOn ( ) )
19190	assertEquals ( "Should have 2 terms", 2, termCount )
19191	Assert. assertTrue ( components. isEmpty ( ) )
19192	assertEquals ( "result1", results. getResultName ( ) )
19193	Assert. assertEquals ( "澶����璇�锛�", sqltrue, sqlnew )
19194	assertEquals ( "Expected 0 results!", 0, count )
19195	Assert. assertTrue ( withSH > withoutSH )
19196	assertNull ( item. getList ( ) )
19197	assertEquals ( true, a. get ( "valor" ) )
19198	assertEquals ( "1&2", sbs. getSignature ( ) )
19199	assertFalse ( "Cache believes cache is up to date when a classpath file changed", reloadedCache. isUpToDate ( sourceFile ) )
19200	assertEquals ( "!Proxy!" + servletName + "JSESSIONID=1234;path=" + servletPath, rsp. getHeaderField ( "Set-Cookie" ) )
19201	assertEquals ( "TEST", object. content )
19202	assertEquals ( redirectUrl, "redirect:/topics/recent" )
19203	assertFalse ( strategy. isActive ( state, user ) )
19204	assertEqualsIgnoreWhitespace ( expected, drl )
19205	assertNotNull ( move )
19206	assertEquals ( expected, actual )
19207	assertEquals ( "One folder", 1, holder. sourcePath. size ( ) )
19208	assertEquals ( seconds, item. getSeconds ( ) )
19209	assertTrue ( "Cache believes a known, changed file is up to date", cache. isUpToDate ( sourceFile ) )
19210	assertEquals ( new HashSet < > ( Arrays. asList ( "a.b.c.op_01" ) ), result )
19211	assertTrue ( thrown )
19212	assertEquals ( "3e5f9e3f9f9f9f9f", payload. getParentSha ( ) )
19213	assertTrue ( res == true )
19214	assertTrue ( "Corrupted proto file instantiated as expected", generator == null )
19215	assertEquals ( 1, mapQuerySubQueries. size ( ) )
19216	assertArrayEquals ( data, ( long [ ] ) deserialize. readObject ( ) )
19217	assertNull ( Deencapsulation. getField ( deviceRegistrationState, "lastUpdatedDateTimeUtcDate" ) )
19218	assertNotNull ( service )
19219	assertEquals ( "{\\"queries\\":[{\\"name\\":\\"group1\\",\\"results\\":[{\\"name\\":\\"group1\\",\\"tags\\":{\\"tag1\\":\\"tag1Value\\",\\"tag2\\":\\"tag2Value\\"}," + "\\"group_by\\":{\\"foo\\":\\"bar\\"}," + "\\"tags\\":{\\"tag1\\":\\"tag1Value\\",\\"tag2\\":\\"tag2Value\\"}," + "\\"group_by\\":{\\"foo\\":\\"fo\\"}," + "\\"bar\\":\\"fo\\"}," + "\\"results\\":[{\\"name\\":\\"group1\\",\\"tags\\":{\\"tag1\\":\\"tag1Value\\",\\"tag2\\":\\"tag2Value\\"}," + "\\"tags\\":{\\"foo\\":\\"fi\\",\\"bar\\":\\"fo\\"}," + "\\"tag1\\":\\"tag1Value\\"}," + "\\"tag2\\":\\"tag2Value\\"}," + "\\"results\\":[{\\"name\\":\\"group1\\",\\"tags\\":{\\"foo\\":\\"
19220	assertThat ( bodyWriter. getValue ( ). objectsWriter, instanceOf ( SyncBodyObjectsWriter. class ) )
19221	assertEquals ( mockedProvisioningConnectionString, resultConnectionString )
19222	assertEquals ( "abc", b64. encode ( Base64. getEncoder ( ). encode ( new byte [ 0 ] ) ) )
19223	assertEquals ( networkView, ev3. getSource ( ) )
19224	Assert. assertEquals ( 1, result. getEntities ( ). size ( ) )
19225	Assert. assertFalse ( result )
19226	assertFalse ( result. passedValidation ( ) )
19227	assertEquals ( "CycleItselfInArr[c={CycleItselfInArr[this]}]@" + hash, logAdapter. asString ( value ) )
19228	assertNotNull ( method )
19229	Assert. assertEquals ( 1, routes. size ( ) )
19230	assertEquals ( one, two )
19231	assertEquals ( "GET /", captured. getRequestLine ( ) )
19232	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff44_" ) )
19233	assertEquals ( expected, actualQuery )
19234	assertEquals ( "Wrong number of tabs", 2, page. getTabs ( ). size ( ) )
19235	assertOut ( "this[new QName(new Namespace('ns'), 'knownMember')].objectAccessFormat()" )
19236	descriptor. assertValid ( )
19237	assertEquals ( "������������������������������������������������������������������������������������
19238	response. then ( ). log ( ). ifValidationFails ( ). assertThat ( )
19239	assertThat ( ids, is ( empty ( ) ) )
19240	assertSame ( "base", res )
19241	assertNotNull ( target. resourceManager )
19242	assertFalse ( ( Boolean ) result. get ( "successful" ) )
19243	assertEquals ( "Mismatched reported username: " + actual, expected, actual )
19244	Assert. assertEquals ( "Should be displaying the dialog", expectedText, testButton. getText ( ) )
19245	Assert. assertEquals ( getElement ( "PID.8" ), handler. getSendingApplication ( ) )
19246	Assert. assertNotNull ( schema )
19247	assertSearchYields ( barIndex, "foo:aaa", "bar" )
19248	assertThat ( HANode. sandbox ( HANode. FRAMEWORK_ID_NODE ), is ( "d8701508-41b7-471e-9b32-61cf824a660d-0000" ) )
19249	Assert. assertEquals ( expected, component )
19250	assertNotNullOrEmpty ( "Questions should never be null.", questions )
19251	assertEquals ( results. size ( ), 2 )
19252	Assert. assertEquals ( "", printCircular. printCircular ( array ) )
19253	Assert. assertTrue ( ( scopePath. findScopeByName ( CodeDefaultScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( CodeScopeDescriptor. NAME ). containsAllProperties ( properties ) ) )
19254	assertTrue ( extension. isActive ( ) )
19255	assertEquals ( expectedMap, map )
19256	assertEquals ( 1, list. size ( ) )
19257	assertTrue ( md. isCommitted ( emptyMetadata ) )
19258	assertEquals ( NOT_DECODED, color, object. getColor ( ) )
19259	assertEquals ( expResult, result )
19260	assertEquals ( minutes + ( ( hours * DateUtils. MILLIS_PER_HOUR ) + ( ( aCalendar. get ( Calendar. DAY_OF_MONTH ) - 1 ) * DateUtils. MILLIS_PER_DAY ) ) / DateUtils. MILLIS_PER_MINUTE, testResult )
19261	assertEquals ( highlightPhrase, "fox" )
19262	assertEquals ( "testApp", config. getAppName ( ) )
19263	assertNull ( entity )
19264	assertThat ( ifCounterDataIndexable. matchesPojo ( this. counterData ), is ( false ) )
19265	assertThat ( steps. getPages ( ), is ( pages ) )
19266	assertEquals ( "New name provided for insert action!", result. get ( RETURN_RESULT ) )
19267	assertObjectEquals ( "{f1:'f1b'}", bs. getClassMeta ( B2. class ). getExample ( bs ) )
19268	Assert. assertEquals ( "someTableName", overriddenTableName )
19269	assertEquals ( expResult, result )
19270	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Stream>" + "<Parameter name=\\"name\\" value=\\"value\\"/>" + "</Stream>", elem. toXml ( ) )
19271	assertTrue ( "multiLineSubstitutionFailure3", "prefix {PI} suffix". equals ( result ) )
19272	assertThat ( entities. getTotalElements ( ), equalTo ( 1L ) )
19273	Assert. assertEquals ( "employing", word. getLexFileName ( ) )
19274	rule. assertScenarioEnded ( )
19275	Assert. assertEquals ( expected, component )
19276	Assert. assertEquals ( "", mainAttributes. get ( new Attributes. Name ( "Import-Package" ) ) )
19277	Assert. assertEquals ( 0, count )
19278	assertFalse ( vs. exists ( ) )
19279	assertEquals ( resp, receivedResp. getBody ( ) )
19280	assertEquals ( expected, stashes. get ( 0 ) )
19281	assertNotNull ( validator )
19282	Assert. assertTrue ( exceptionMatches )
19283	assertEquals ( this, theProperty. getOwner ( ) )
19284	assertTrue ( resultMessage ( result, PUT ), result. passedValidation ( ) )
19285	assertEquals ( Lists. newArrayList ( "1", "2", "3", "4", "5" ), getStringsFromElements ( elements ) )
19286	assertTrue ( firstMessageFound && secondMessageFound )
19287	context. assertIsSatisfied ( )
19288	assertEquals ( expected, actual )
19289	arraysWithCustomComparisonStrategy. assertDoesNotContainSubsequence ( someInfo ( ), actual, subsequence )
19290	assertThat ( xray. getConstructors ( ). keySet ( ), hasSize ( UnlockedObject. class. getConstructors ( ). length ) )
19291	Assert. assertEquals ( 1, factory. getNumCarvedTestCases ( ) )
19292	assertEquals ( expected, actual )
19293	assertThat ( "getChildCount", node. getChildCount ( ), is ( 0 ) )
19294	assertTrue ( gw. lines. isEmpty ( ) )
19295	Assert. assertEquals ( "PhenoTips.XPhenotypeMapping", result. getPhenotypeMapping ( ) )
19296	assertNotNull ( prover )
19297	assertEquals ( "P2PK multiply 12", req. toString ( ) )
19298	assertTrue ( true )
19299	Assert. assertTrue ( leaderElector. isLeader ( ) )
19300	assertEquals ( result, expecting )
19301	assertEquals ( 2, forwhile )
19302	assertThat ( System. currentTimeMillis ( ) - start, is ( greaterThanOrEqualTo ( bodyCapture. getContent ( ). length ( ) ) ) )
19303	Assert. assertTrue ( clusterTbl. getClusterName ( ). equals ( clusterName ) )
19304	assertEquals ( "It shall return null value", CtxNames. VALUE_NULL, name. getValueAsString ( evalCtx ) )
19305	Assert. assertEquals ( tag. getType ( ), TagType. INT )
19306	assertEquals ( 209L, sum )
19307	assertTrue ( "Same cost solution (2.0 == 2.0) should not be accepted", schrimpfAcceptance. acceptSolution ( memory, createSolutionWithCost ( 2.0 ) ) )
19308	assertEquals ( 13, value )
19309	assertEquals ( "34 abc\\n", found )
19310	Assert. assertEquals ( sizeBefore + 1, dico. size ( ) )
19311	Assert. assertEquals ( Arrays. asList ( new String [ ] { } ), versionProperty. getPropertyNames ( ) )
19312	Assert. assertEquals ( "type=" + type, value, actual )
19313	assertEquals ( JobStatus. ACCEPTED, jobResultArgumentCaptor. getValue ( ). getStatus ( ) )
19314	assertThat ( ste, is ( not ( nullValue ( ) ) ) )
19315	assertEquals ( "novecentos e nove centavos", actual )
19316	assertEquals ( request, result )
19317	assertThat ( resource, is ( equalTo ( method ) ) )
19318	assertSame ( MyClock. class, ClockFactory. getClock ( ). getClass ( ) )
19319	assertEquals ( expected, actual )
19320	assertOut ( "\\"\\\\\\"" )
19321	assertEquals ( "http://example.com/", con. request ( ). url ( ). toExternalForm ( ) )
19322	Assert. assertEquals ( "SELECT DAYOFMONTH('2001-11-00', MONTH('2005-00-00');", text )
19323	assertTrue ( "name read from hibernate session associated with hibernate session factory after rollback is MADHUMITA", "MADHUMITA". equals ( st. getFirstName ( ) ) )
19324	Assert. assertNotEquals ( "Paths must be different!", mapOut. getParent ( ), mapOutIdx. getParent ( ) )
19325	assertMetric ( "mmv.v2.metric.that.is.longer.than.63.characters.v2.metric.that.is.longer.than.63.characters", is ( "10.000" ) )
19326	assertThat ( metrics. toString ( ), is ( "Hello, server1, world!" ) )
19327	assertEquals ( expectedTouchzs, attributes. getTouchzs ( ) )
19328	assertEquals ( expResult, result )
19329	assertEquals ( "hello % world", s )
19330	Assert. assertEquals ( inet, inet3 )
19331	Assert. assertTrue ( check. equals ( o ) )
19332	assertTrue ( found )
19333	assertTrue ( type. equals ( type2 ) )
19334	assertEquals ( 0, tokens. length )
19335	this. assertOneMatcher ( is ( instanceOf ( HeaderRequestMatcher. class ) ) )
19336	assertThat ( getHandlerFieldValue ( ), nullValue ( ) )
19337	assertEquals ( newSyncPoint, loadSyncPoint )
19338	assertThat ( ( String ) commands. get ( asList ( "test" ) ). getFullHelp ( PLAIN ), is ( "help" ) )
19339	assertEquals ( ValidateGBIDsEnum. INVALID, GcdUtilities. validateGbids ( invalidGbids, gcdGbId, validGbids ) )
19340	assertEquals ( "textt", textField. getValue ( ) )
19341	assertEquals ( actualAfterProcess, expectedAfterProcess )
19342	assertThat ( FullHalfPair1. equals ( FullHalfPair2 ), is ( false ) )
19343	assertThat ( foundItem, is ( this. existingItem ) )
19344	assertNull ( containerRequest. evaluatePreconditions ( now ) )
19345	assertThat ( mockLogger. isLogpCalled ( ), is ( false ) )
19346	assertThat ( actual, containsInAnyOrder ( expected. toArray ( ) ) )
19347	assertEquals ( s_expected_1, Hex. toHexString ( item1. getData ( ) ). toUpperCase ( ) )
19348	assertEquals ( d, result )
19349	assertEquals ( 0, records. size ( ) )
19350	assertExpectedMean ( )
19351	assertTrue ( actual )
19352	Assert. assertThat ( i, is ( 22 ) )
19353	assertEquals ( 15, atAct1. get ( 0 ) )
19354	Assert. assertEquals ( config. useSSL, false )
19355	assertEquals ( "de.test.Collection<de.test.Company>", tp. toString ( ) )
19356	assertFalse ( currentData. isPresent ( ) )
19357	Helpers. assertJson ( querySpecification. toJson ( ), "{\\"query\\":\\"select * from enrollments where validWhere and validGroupBy\\"}" )
19358	assertEquals ( 204, response. statusCode ( ) )
19359	assertSame ( "OutoutStream is not set correctly.", outputStream, entrancePi. getOutputStream ( ) )
19360	assertEquals ( - 2147483648L, result )
19361	assertEquals ( "bcd", new String ( out. toByteArray ( ) ) )
19362	assertEquals ( 0, commiters. size ( ) )
19363	assertEquals ( 1305, result )
19364	assertTrue ( isEqual ( distance, expected ) )
19365	Assert. assertTrue ( "The re-generated and the read record do not match.", k1. equals ( k2 ) && v1. equals ( v2 ) )
19366	assertEquals ( "file:/foo/bar/META-INF", moduleDir )
19367	assertEquals ( "PONG", response )
19368	assertTrue ( "Expected " + issueMethod + " to be used, but was " + storage. getIssueMethod ( ), storage. getIssueMethod ( ). equals ( issueMethod ) )
19369	assertEquals ( true, sut. isMale ( ) )
19370	Assert. assertEquals ( 2, restrictions. length )
19371	Assert. assertEquals ( "Session Application-Id should be the same as indicated.", SLh_APPID, sessionAppId )
19372	runner. assertTransferCount ( QueryRecord. REL_FAILURE, 1 )
19373	Assert. assertEquals ( "Field should have no text", "", diags. get ( 0 ). getDescription ( ) )
19374	assertThat ( newStart, equalTo ( IntraDayDate. create ( new LocalDate ( 2009, 1, 19 ), hours ( 2 ) ) ) )
19375	assertTrue ( fileExists )
19376	assertEquals ( Rect. centeredRect ( 10, 20, 30, 40 ), g. getBounds ( ) )
19377	assertThat ( isValid, is ( true ) )
19378	assertEquals ( UriStatus. VALID_UNVERSIONED, manager. validateRenderingUri ( uri ) )
19379	assertEquals ( expResult, result )
19380	assertNull ( tuple. getSet ( "field" ) )
19381	assertEquals ( "light-lux", exchange. getResponse ( ). getPayloadString ( ) )
19382	assertEquals ( "scenario name", runner. getDescription ( ). getChildName ( ) )
19383	assertEquals ( "Response components should be equal to the mocked components", mockedComponents, responseComponents )
19384	assertEquals ( expected, elements )
19385	assertNotNull ( mqttAsyncClient )
19386	assertEquals ( expected, actual )
19387	assertWindowUpdateFrame ( frame, streamId, windowSizeIncrement )
19388	Assert. assertEquals ( expectedNode. toString ( ), pdoc. toString ( ) )
19389	Assert. assertFalse ( new LogAdapter ( "N/A", mockConfigDefault ( ) ). isDebugEnabled ( ) )
19390	assertNotNull ( factory. newAsyncClient ( ) )
19391	assertEquals ( body. toString ( ), "error 4 test error" )
19392	assertEquals ( request, queue. peek ( ). getRequest ( ) )
19393	assertTrue ( writtenCount == TEST_SIZE )
19394	assertEquals ( "Invalid content type", "text/plain", request. getHeader ( "Content-Type" ) )
19395	assertEquals ( Status. WARN, jxm. getStatus ( ) )
19396	assertThat ( map. size ( ), is ( 0 ) )
19397	assertThat ( this. rbenvRuntimeLocatorService. isInstalled ( ), equalTo ( true ) )
19398	assertEquals ( "Property changed", 1, report. getEventCount ( "draggedDistance" ) )
19399	assertOut ( "a = '' + 2 + '' + '' * 4" )
19400	Assert. assertThat ( message, containsString ( "contained" ) )
19401	assertThat ( f. getAbsolutePath ( ), startsWith ( filter. getAbsolutePath ( ) ) )
19402	assertEquals ( State. UNCHECKED, result )
19403	assertEquals ( 0, result )
19404	assertThat ( "Expceted principal not found", mapped, is ( KERMIT_UID_PRINCIPAL ) )
19405	assertTrue ( "Lcmc GUI helper should be loaded", helperFie. isLoaded ( testFile ) )
19406	assertOut ( "var /** @type {string} */ a = escape('http://whatever.com')" )
19407	assertArrayEquals ( NOT_ENCODED, binary, encode ( object ) )
19408	assertEquals ( - 1234f, ConfigUtils. getFloat ( config, 0, "some-number" ), 0.1f )
19409	assertThat ( optionsByType. get ( Timeout. class ), is ( Timeout. of ( 5, TimeUnit. MINUTES ) ) )
19410	assertEquals ( javaOpts, expectedOpts )
19411	assertEquals ( 0, historicIncidents )
19412	assertTrue ( result, result. contains ( "\\nfieldName=basic\\nforeign=true\\n" ) )
19413	assertArrayEquals ( new String [ ] { "Big Data/MarkLogic" }, actual )
19414	assertEquals ( "Somethink", personName. getSomethink ( ) )
19415	assertEquals ( "Expected 0 results!", 0, n )
19416	assertSeen ( visible, s1, s2 )
19417	assertTrue ( matched )
19418	assertThat ( state. getExcludedScopes ( ), equalTo ( Collections. emptySet ( ) ) )
19419	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 10" ) )
19420	assertEquals ( isTouched, true )
19421	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC, ScopePathType. ACTIVITIES_UPDATE, ScopePathType. ACTIVITIES_UPDATE, ScopePathType. ORCID_WORKS_UPDATE, ScopePathType. ORCID_WORKS_CREATE, ScopePathType. FUNDING_UPDATE, ScopePathType. FUNDING_CREATE, ScopePathType. AFFILIATIONS_UPDATE, ScopePathType. AFFILIATIONS_CREATE, ScopePathType. ORCID_PATENTS_UPDATE, ScopePathType. ORCID_PATENTS_UPDATE, ScopePathType. ACTIVITIES_UPDATE, ScopePathType. ACTIVITIES_UPDATE, ScopePathType. ACTIVITIES_UPDATE )
19422	Assert. assertEquals ( sbWidthStart, sbWidthEnd )
19423	assertEquals ( 2, result )
19424	assertEquals ( upperLayer, np. getNetworkLayerDefault ( ) )
19425	assertEquals ( "Mismatched data", expected, res )
19426	assertNotNull ( DnsNameResolver. maybeChooseServiceConfig ( choice, new Random ( ), "localhost" ) )
19427	assertTrue ( TextFileUtils. fileEndsWithNewlineChar ( file0 ) )
19428	assertTrue ( "package not build", new File ( "target/test-classes/test.deb" ). exists ( ) )
19429	Assert. assertFalse ( res. isPresent ( ) )
19430	assertEquals ( expResult, result )
19431	assertEqualsIgnoreWhitespace ( expected, drl )
19432	assertThat ( count, is ( equalTo ( 2L ) ) )
19433	assertThat ( duration. dividedBy ( 2 ), equalTo ( TimeDuration. ofSeconds ( 0.2 ) ) )
19434	assertNotEquals ( ref, oid )
19435	assertEquals ( TargetType. PILLAR_PCRE, target. getType ( ) )
19436	Assert. assertEquals ( "Alignment 0 is not permuted.", afpChain, afpChain2 )
19437	assertFalse ( validator. validate ( "otherStudent", ids ). containsAll ( ids ) )
19438	assertEquals ( conf. getRest ( ). get ( 0 ). getResource ( ). get ( 0 ). getType ( ). toString ( ), "Patient" )
19439	Assert. assertEquals ( expectedResult, result )
19440	assertSnake ( "       \\n" + "       \\n" + "  ����   \\n" + "  ������������������������������������������������������������������������
19441	assertEquals ( expected, arguments. profilers )
19442	assertEquals ( expected, sortBy. sort ( ) )
19443	assertEquals ( "bean1", testMbs. queryForObject ( new ObjectName ( "test:name=bean1,type=TestJmx" ) ) )
19444	assertEquals ( "MMMM dd HH:mm", task. getDateFormat ( ) )
19445	assertDtos ( expected, actual )
19446	assertEquals ( ImmutableList. of ( 42.0, 42.0 ), renderNode ( node ) )
19447	assertTrue ( output. contains ( "'TIMEZONE'='GMT+1'" ) )
19448	Assert. assertEquals ( csvString, "\\"col1\\",\\"col2\\"\\n\\"val1\\",\\"val2\\"\\n\\"val3\\",\\"val4\\"\\n" )
19449	assertEquals ( 1, count )
19450	Assert. assertNotNull ( mat )
19451	assertTrue ( entity. getId ( ) > 0L &&! entity. isAwesome ( ) )
19452	Assert. assertEquals ( b, a. rotate ( ) )
19453	assertTrue ( validator. isValid ( integer ( min, max ) + "", null ) )
19454	Assert. assertEquals ( "/base/group_id,id/pages/page,lang?format,q", uri )
19455	assertEquals ( s, nl + "  \\"foo\\"" + nl + "    \\"bar\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\"" + nl + "    \\"baz\\
19456	Assert. assertNull ( actualNode )
19457	assertEquals ( parser. parse ( inputString ), expected )
19458	assertEquals ( "Results were not in the order of the provided keys", keys. get ( index ), bytes )
19459	assertEquals ( expected, bos. toString ( ) )
19460	assertTrue ( getString ( sw. toString ( ) ). contains ( needleToFind ) )
19461	assertFalse ( c. remove ( "sadsdf", null ) )
19462	assertThat ( method. invoke ( obj, new Object [ ] { } ), is ( ( Object ) "self" ) )
19463	assertEquals ( new String ( Base64. decodeBase64 ( ANDROID_CONFIG_CONTENT ), Charsets. UTF_8 ), content )
19464	assertEquals ( "provides X.Y with Z1.Z2, Z3.Z4", modelWriter. toString ( ) )
19465	assertEquals ( availableProperties. keySet ( ), new HashSet < String > ( ) )
19466	GwtAssertions. assertThat ( a )
19467	assertEquals ( "Person2", s )
19468	assertEquals ( violation. getMessage ( ), "Message is {escaped}" )
19469	assertTrue ( XMLUnit. compareXML ( result ( "xquery/string-q5.xml" ), zapResult ). similar ( ) )
19470	assertEquals ( field. getSqlName ( ), "field.Table" )
19471	assertThat ( result. size ( ), is ( 2 ) )
19472	assertTrue ( permissionEvaluator. hasAnyProjectPermission ( authentication, "project", Permission. EDIT_PAGE ) )
19473	assertArrayEquals ( data, zWaveRawSerialPort. readMessage ( port ) )
19474	assertEquals ( 20, cap. get ( 0 ) )
19475	assertEquals ( streamScopeId, getEntityManager ( ). createQuery ( "UPDATE Comment set timeSent = :date" ). setParameter ( "streamScopeId", streamScopeId ). getResultList ( ). iterator ( ). next ( ). getId ( ) )
19476	assertEquals ( expectedPlan, actualPlan )
19477	assertEquals ( test1. compareTo ( test2 ), 0 )
19478	assertThat ( combine ( recessive, dominant ), is ( equalTo ( result ) ) )
19479	assertNotNull ( assertionDocument )
19480	assertTrue ( actual. isEmpty ( ) )
19481	assertArrayEquals ( expShape, expOut. shape ( ) )
19482	assertEquals ( v21Educations1, v21Educations2 )
19483	assertArrayEquals ( expectedFamilies, actualFamilies )
19484	assertNotNull ( modelNominalLabelDTO )
19485	assertEquals ( 200, status. getStatusLine ( ). getStatusCode ( ) )
19486	assertTrue ( matches )
19487	assertEquals ( 200, response. getStatusCode ( ) )
19488	assertEquals ( 1, invalidValues. length )
19489	logSpy. assertLog ( "SomeMessage", new Exception ( ) )
19490	assertFalse ( TracingFilter. isTraced ( request ) )
19491	assertThat ( violations. size ( ), is ( 1 ) )
19492	assertEquals ( this. tlv, builder. getTlv ( ). get ( 0 ) )
19493	assertEquals ( "string 1", summaryString )
19494	assertEquals ( 20, found. getId ( ) )
19495	assertAllGoodAfterRemovePauses ( )
19496	assertTrue ( Cells. isEmpty ( cell ) )
19497	assertEquals ( expResult, result, 0.0001 )
19498	assertEquals ( expected. toString ( ), actual. toString ( ) )
19499	Assert. assertEquals ( 3, annots. size ( ) )
19500	assertThat ( output. readKeyValuesToMap ( ), equalTo ( expectedOutput ) )
19501	Assert. assertTrue ( processor. getSupportedAnnotationTypes ( ). contains ( AlexaIntentListener. class. getTypeName ( ) ) )
19502	assertThat ( errors, not ( hasFieldErrors ( "familyName" ) ) )
19503	assertEquals ( 0x00FFFF, result. getVoxel ( 5, 5, 5 ),.01 )
19504	assertTrue ( ml. isEmpty ( ) )
19505	assertEquals ( JreVersion. Unsupported, version )
19506	assertThat ( dest. get ( "aaa" ), is ( 1000 ) )
19507	assertEquals ( expected, actual )
19508	assertSame ( INITIATIVE_PUBLIC, result )
19509	assertEquals ( "test", recordListener. getMessage ( ) )
19510	assertTrue ( service. publish ( "message" ) )
19511	assertFalse ( solution. equals ( newSolution ) )
19512	assertFalse ( infoValidator. validate ( info ) )
19513	assertNonLLStar ( g, altsWithRecursion )
19514	assertEquals ( commands, catalog. getCommands ( ) )
19515	assertEquals ( "[* foo.*]", m. toString ( ) )
19516	assertTrue ( queue. isEmpty ( ) )
19517	assertTrue ( written. contains ( "DummyBasicMockRule" ) )
19518	assertScoreAndParse ( content, null, 2 )
19519	assertFalse ( "Unable to update non existing user", success )
19520	Assert. assertEquals ( "GET", s )
19521	assertThat ( WorkflowStatus. statusType ( stageInProgress ), is ( StatusType. NOT_BUILT ) )
19522	assertTrue ( BufferedImageComparer. isRGBSimilar ( sourceImage, img ) )
19523	assertTrue ( equals )
19524	assertEquals ( blogObject. getHandle ( ), handle )
19525	assertThat ( config. getUserAgent ( ), equalTo ( userAgent ) )
19526	assertThat ( result, is ( "GRS imported" ) )
19527	assertCallTree ( callTree, callStack. getStackEvents ( ), true )
19528	assertThat ( uri, equalTo ( url + "?media=json" ) )
19529	Assert. assertEquals ( icmsSetado, icms. getIcmsst ( ) )
19530	assertEquals ( millis, tracker. getOpened ( ) )
19531	assertEquals ( "Hello ^^ there", ResponseBodyInterpolator. interpolate ( "Hello ^^ there", req ) )
19532	assertThat ( stateStore. size ( ), equalTo ( 1L ) )
19533	arrays. assertIsSorted ( description, null )
19534	assertTrue ( checker. isFormat ( handle ) )
19535	assertEquals ( 2, lines. size ( ) )
19536	assertEquals ( expected, result )
19537	assertEquals ( "There should be no constraint violations", 0, constraintViolations. size ( ) )
19538	assertEquals ( "[1,2,null,null,'foo']", JsonUtils. arrayExposedAsString ( array ) )
19539	assertEquals ( checkList, CheckAttributeFactory. checkList )
19540	assertLogContains ( "Tests summary: 1 suite, 2 tests" )
19541	assertTrue ( reference instanceof SoftReference )
19542	assertEquals ( asList ( "crap", "bingo", "blah", "kingo" ), mp. getParameters ( ) )
19543	assertEquals ( sessionInfo. getIdentity ( ). getIdentifier ( ), username )
19544	assertEquals ( "X-NaN-02-01", dateSortString )
19545	assertThat ( result. size ( ), is ( 1 ) )
19546	assertEquals ( hashCode, "253ac1b8" )
19547	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, n ) + ", rmse = " + rmse, 0.0, rmse, EPS )
19548	assertE ( "    " + "    " + "    " + " 24 " )
19549	assertEquals ( assertion, base )
19550	assertTrue ( cb. isDisplayed ( ) )
19551	assertNull ( event. get ( ) )
19552	assertEquals ( - 10, testApp. executeApplication ( args ) )
19553	assertTrue ( result. hasErrors ( ) )
19554	assertEquals ( expected, new String ( actual ) )
19555	assertSame ( root, transform ( root ) )
19556	assertEquals ( ImmutableVariantScore. of ( ReadType. ALT, 30 ), SamRecordScoring. getVariantScore ( alt, SNV ) )
19557	assertEquals ( "Sort by data should be equal", surveyDatumList. size ( ), 2 )
19558	assertEquals ( "true is true", aviatorBoolean. add ( aviatorString, createEnvWith ( "s", " is true" ) ). getValue ( null ) )
19559	assertTrue ( "Path for added property is wrong: actual=" + listener. getEvents ( ). get ( 0 ). getPath ( ) + ", expected=" + propPath, containsPath ( listener, propPath ) )
19560	Assert. assertEquals ( numeroControleFCI, produto. getNumeroControleFCI ( ) )
19561	Assert. assertEquals ( Object. class, t. getType ( ) )
19562	assertEquals ( "null", formatWithNullString. getNullString ( ) )
19563	assertTrue ( propertiesManager. getPropertyChangeListeners ( ). isEmpty ( ) )
19564	Assert. assertEquals ( "newId", getEntity. getFieldValue ( "id" ) )
19565	assertEquals ( "", subject. getCurrentState ( ). getID ( ) )
19566	assertThat ( result, equalTo ( SUN. ordinal ( ) ) )
19567	assertPlanMatches ( expected )
19568	assertThatSql ( query, is ( "SELECT t1.c1, t2.c2 FROM table1 AS t1 JOIN table2 AS t2 ON t1.c0 = t2.c0" ) )
19569	assertArrayEquals ( ( "avalue-" + i ). getBytes ( ), value )
19570	assertNull ( reconnectCohort. getOldProxy ( ) )
19571	assertThat ( readElements, is ( new HashSet < User > ( new User ( "alex", "soto" ) ) ) )
19572	assertEquals ( "Input " + v + " does not match output " + o, v, o )
19573	assertEquals ( command1. hashCode ( ), command2. hashCode ( ) )
19574	assertMockEndpointsSatisfied ( )
19575	Assert. assertEquals ( 5, products. size ( ) )
19576	Assert. assertEquals ( expectedJsonString, actualJsonString )
19577	assertEquals ( other, file. getLastModified ( ) )
19578	assertEquals ( 2, s. getRequiredSkills ( ). values ( ). size ( ) )
19579	assertEquals ( "MER_RR__1POBCM20060718_091715_000001012049_00308_22907_0113.N1", archivePath )
19580	assertEquals ( statistic. toString ( ), expectedString1 + expectedString2 )
19581	assertThat ( step. getResult ( ), is ( TestResult. PENDING ) )
19582	assertNotNull ( result )
19583	assertThat ( result, is ( true ) )
19584	assertEquals ( "{a:[1,{b:[]},2]}", p )
19585	assertEquals ( "untyped", statistic. getName ( ) )
19586	assertTrue ( downloader. waitForReportReady ( ) )
19587	assertThat ( adapter. isClosing ( ), is ( false ) )
19588	runner. assertAllFlowFilesTransferred ( SolrUtils. REL_SUCCESS, 1 )
19589	assertEquals ( expected, this. output. toString ( ) )
19590	assertThat ( "Element has uncorrect value.", index. get ( 2L ), equalTo ( 2L ) )
19591	assertFalse ( messageSent )
19592	assertThat ( hybrid. hasProperty ( "uuid" ), is ( true ) )
19593	Assert. assertNotNull ( builderFactory. createArrayBuilder ( ) )
19594	assertEquals ( expected, actual )
19595	Assert. assertFalse ( artifactFilter. match ( getArtifact ( ) ) )
19596	assertEquals ( timeFrameEditor. isFirstMonthAvailable ( ), false )
19597	assertNotNull ( result )
19598	assertThat ( returned, is ( result ) )
19599	assertTrue ( peerAcceptanceUtil. isPeerInterestedOnRemoteWorker ( clientID. getServiceID ( ). toString ( ) ) )
19600	assertEquals ( "Failed Matching", VersionMatchResult. REJECTED, p. matches ( info ) )
19601	assertEquals ( "MOD_SS.MOD13A2", typeString )
19602	assertEquals ( 2, solution. getRoutes ( ). iterator ( ). next ( ). getActs ( ). size ( ) )
19603	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
19604	Assert. assertEquals ( actualDependencies, expectedDependencies, "Unexpected dependencies for process: " + outputFeedToTest )
19605	assertEquals ( "Ferdinand is trying to send you the file ��superkou.png�� (161.13KB)." + " Do you want to accept the file transfer?", shadowDialog. getIcon ( ) )
19606	assertEquals ( "rule-a", repository. getRoutingRuleId ( ) )
19607	Assert. assertEquals ( "http://example.com/{?foo*}", template. getTemplate ( ) )
19608	assertThat ( meta. getEntityUsingModelMetaAndVersion ( hoge ), is ( notNullValue ( ) ) )
19609	assertThat ( regionalBreweries, hasItems ( containsString ( "Brew" ), containsString ( "Inc." ) ) )
19610	assertTrue ( isPropertyValueSet )
19611	assertEquals ( 1, ksession. fireAllRules ( ) )
19612	assertNotNull ( informe. getId ( ) )
19613	assertEquals ( "Expected 0 results!", 0, count )
19614	assertTrue ( vRoute. getStart ( ). getLocation ( ). getId ( ). equals ( "start" ) )
19615	assertEcssEquals ( ".menu{left:\\"#{notemptyrichSkin.menu1?'10px':''}\\";}", convertFragment ( xcss ) )
19616	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
19617	assertEquals ( expected, elements )
19618	assertEquals ( 2 * Constants. KB, info. getLength ( ) )
19619	assertEquals ( "Java", orElseFramework. name )
19620	assertThat ( result, is ( "http://localhost:9999/test" ) )
19621	assertNotSame ( result, one )
19622	assertEquals ( 0, v. getSize ( ) )
19623	assertEquals ( "7WWD36NF4WCpPaYtK47mM4o0a5CCeOt01JXSuMayv5g", thumbprint )
19624	assertThat ( pattern. matchAsInclusive ( null, "test" ), is ( true ) )
19625	assertThat ( domain. getValidationFailures ( resourceLookup ), contains ( stringContainsInOrder ( "variable", "ADMIN_NAME", "spec.clusters[cluster1].serverPod.env", "is" ) ) )
19626	assertTrue ( sf. getSocketFactory ( ) instanceof SSLSocketFactory )
19627	statusChecker. assertContainsMatch ( Status. ERROR, "File property must be set before any triggeringPolicy " )
19628	assertNotNull ( Country. reader ( ). read ( ) )
19629	assertThat ( session. getUserInformation ( ). getUserID ( ), is ( SUPER_USER_INSTANCE. getUserID ( ) ) )
19630	Assert. assertNotNull ( object )
19631	assertEquals ( "index--", expr. getParameterValue ( ) )
19632	Assert. assertEquals ( 2, m2Fields. size ( ) )
19633	assertTrue ( validExtensionConfiguration. isValidXmlDoc ( ) )
19634	assertEquals ( country, request. getVisitorCountry ( ) )
19635	assertTrue ( cleanExit )
19636	assertTrue ( page. asText ( ). contains ( "decoration: false" ) )
19637	assertEqualDoubleVectors ( X [ 3 ], mo. mean ( X [ 3 ] ), epsilon )
19638	assertEquals ( expected, actual )
19639	assertThat ( BondBasedConfiguration. configurationOf ( g, 0, 1, 2, 3 ), is ( Configuration. DoubleBond. TOGETHER ) )
19640	assertNull ( deserializedDate )
19641	assertThat ( resultedQuery, is ( expectedQuery ) )
19642	assertThat ( transitioningEncryptor. checkPassword ( singleCharacterPwd, encryptedPasswordPass1 ), is ( true ) )
19643	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFInfoEventoCartaCorrecao ( ). toString ( ) )
19644	assertTrue ( testQueue. isEmpty ( ) )
19645	assertEquals ( map, map2 )
19646	assertThat ( this. resolver. resolve ( this. type, resolved ), is ( sameInstance ( resolved ) ) )
19647	assertThat ( g. atom ( 3 ). label ( ), is ( "a holo-[acyl-carrier protein]" ) )
19648	assertEquals ( C, bite )
19649	assertThat ( entities, is ( Arrays. asList ( instance ) ) )
19650	Assert. assertNotNull ( geocodingServlet )
19651	assertEquals ( expected, d_riskRatio. getError ( ), 0.00001 )
19652	assertThat ( this. start. plus ( period ), is ( this. end ) )
19653	assertTrue ( hasReset )
19654	assertEquals ( TestUtil. HTTP_TEST_PROXY, result. get ( 0 ) )
19655	assertSame ( shouldFind, selection. fileSelects ( By. id ( "test" ) ) )
19656	context. assertIsSatisfied ( )
19657	assertEquals ( "test message action1", action1. getMessage ( ) )
19658	assertEquals ( Integer. valueOf ( 67 ), resultMap. get ( "Age" ) )
19659	assertEquals ( 3000, res. getInt ( "port" ) )
19660	assertEquals ( "text/html; charset=Big5", headers. get ( "Content-Type" ). iterator ( ). next ( ) )
19661	assertEquals ( "user_id userId,user_name userName,pwd pwd", t. getColumnsSql ( ) )
19662	assertEquals ( 5, sum, 0.001 )
19663	assertEquals ( buildValue ( i ), new String ( value. getBytes ( ), 0, value. getLength ( ) ) )
19664	assertTrue ( formDataEntityProvider. isReadable ( type, genericType, new Annotation [ 0 ], null ) )
19665	assertEquals ( UNAUTHORIZED_401, response. getStatus ( ) )
19666	Assert. assertEquals ( value, writeTest ( kernelServices, "max-heap-size", value ) )
19667	assertEquals ( "failed with seed: " + seed, expected, actual )
19668	assertEquals ( "1.0", value )
19669	assertEquals ( "two", template. get ( "two" ) )
19670	assertNull ( TaskSpec. getEpilogue ( inputBlock, outputBlock ) )
19671	assertFalse ( new BytecodeAnnotationBuilder ( true ). sanityCheckInline ( instrAaload ) )
19672	assertEquals ( 0.5, comp. compare ( "41.5,27.2", "41.5127.21" ) )
19673	assertActive ( player1, player2, player3, player4, player5 )
19674	Assert. assertTrue ( "The list is not ordered ascending", sortedAges. equals ( ages ) )
19675	assertEquals ( 10, status. byteCount )
19676	Assert. assertNull ( retinaCookieValue )
19677	assertEquals ( Integer. MAX_VALUE, a. forVlues ( 1 ) )
19678	assertThat ( result. isEmpty ( ), is ( true ) )
19679	assertEquals ( expResult, result, 0.0001F )
19680	assertEquals ( 3, messageDao. findCount ( ) )
19681	assertions. isNotEqualTo ( actual )
19682	assertFalse ( result )
19683	assertCollection ( collection )
19684	Assert. assertTrue ( result == null )
19685	assertEquals ( 0, valueModel. size ( ) )
19686	assertTrue ( "Repository should contain newly added statement", testCon. hasStatement ( bob, name, nameBob, false ) )
19687	assertNull ( writer )
19688	assertNull ( loaded )
19689	assertEquals ( "test", new String ( result ) )
19690	assertEquals ( Math. cos ( Math. E ), e. evaluate ( ), 0d )
19691	assertThat ( RpslObjectFilter. diff ( original, updated ), is ( "@@ -1,2 +1,4 @@\\n" + " mntner:         UPD-MNT\\n" + "+description:    updated\\n" + "+mnt-by:         UPD-MNT2\\n" + " source:         TEST\\n" ) )
19692	assertTrue ( filter. allow ( event, listener ) )
19693	Assert. assertEquals ( "SELECT MID(YEARWEEK('2000-01-01'), 5, 2);", text )
19694	assertEquals ( expResult, result )
19695	assertEquals ( expected, stats )
19696	assertEquals ( ValidationResult. Result. OK, vr. getStatus ( ) )
19697	assertSame ( expected, result )
19698	Assert. assertEquals ( 2, result. size ( ) )
19699	compiler. assertErrorsOnLines ( "example/Test.java", diagnostics, 6 )
19700	assertNotNull ( "Sendout is null", entity )
19701	assertEquals ( startTime. toEpochMilli ( ), endTime. toEpochMilli ( ) )
19702	assertEquals ( 0, context. getNumUnclosedSpans ( ) )
19703	assertThat ( results. subList ( 0, 5 ), is ( Arrays. asList ( ProcessHadoopScriptHandler. CLEANUP_STAGE_CLASS, "tbatch", "tflow", "texec", context. getArgumentsAsString ( ) ) ) )
19704	Assert. assertEquals ( THIRTEEN_DOUBLE, pi. getThirteenDouble ( ), 0.00001 )
19705	assertEqualsQR ( Ar, qr. factor ( new DenseMatrix ( Ar ) ) )
19706	assertThat ( definition. getTenantId ( ), is ( TENANT_ONE ) )
19707	assertEquals ( uuid, instance. getUuid ( ) )
19708	assertNotNull ( oAuth2AccessToken )
19709	Assert. assertEquals ( expectedXML, actualXML )
19710	assertEquals ( 3, map. size ( ) )
19711	assertNotNull ( segmentMemory. getStagedLeftTuples ( ). getDeleteFirst ( ) )
19712	assertThat ( fromType, is ( equalTo ( new QName ( "java:java.lang.String" ) ) ) )
19713	assertNotNull ( waitOn ( browser, 6000 ). untilRemoved ( By. id ( "wait-if" ) ) )
19714	assertPermanentCount ( playerA, "Harvest Mage", 1 )
19715	assertRelativeEffectEqual ( expected, actual )
19716	assertEquals ( "foo=bar", capt. getAllValues ( ). get ( 0 ). getFirstHeader ( "Cookie" ). getValue ( ) )
19717	assertTrue ( violations. hasNext ( ) )
19718	assertTrue ( Arrays. equals ( getPacketData ( "AA 00 02 01 04 01 00 00 00 00 00 00 00 00 00 00" ), request. serialize ( ) ) )
19719	Assert. assertNull ( foo )
19720	assertThat ( processors, nullValue ( ) )
19721	assertEquals ( "8333", pa. toBytes ( ) )
19722	Assert. assertEquals ( "https://tfs2013.com:443/", actual )
19723	assertFalse ( ex. canBeDividedby3 ( "-" ) )
19724	assertEquals ( expected, sw. toString ( ) )
19725	assertEquals ( 30, points )
19726	assertNotNull ( provider )
19727	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5 ) ) )
19728	Assert. assertTrue ( isValid ( resp, FORMAT_STRING, true, 1 ), "Response is not valid" )
19729	assertEquals ( "expansion", pn. getSemantic ( ) )
19730	Assert. fail ( "Should have thrown an exception" )
19731	assertEquals ( expectedSchema, AvroTypeConverter. convertToAvro ( TalendType. DOUBLE, null ) )
19732	Assert. assertEquals ( 1, size )
19733	assertTrue ( tickler. isValid ( ) )
19734	Assert. assertEquals ( asDTO. getAnalyzedCount ( ), 500 )
19735	MatcherAssert. assertThat ( new AnBasic ( dude ). argument ( ), CoreMatchers. equalTo ( dude ) )
19736	assertEquals ( expected, computed )
19737	Assert. assertEquals ( "SELECT CHARSET('abc');", text )
19738	Assert. assertEquals ( TestHelper. getPoint ( 30, 10 ), result. getValue ( ) )
19739	assertNotNull ( r )
19740	assertEquals ( "Incorrect bytes written", fileString, new String ( rbytes, 0, fileString. length ( ) ) )
19741	assertTrue ( "ABCDEF". equals ( lambda. apply ( 0 ) ) )
19742	assertEquals ( "one,two,three,four,five,six", facets. get ( 0 ) )
19743	assertEquals ( new Values ( true, null, null, true, true, true, true, true, true, true, true, null ), v )
19744	assertTrue ( "Expected [" + expectedQuery1 + "] or [" + expectedQuery2 + "] but was " + newQuery, ( expectedQuery1. equals ( newQuery ) || expectedQuery2. equalsIgnoreCase ( newQuery ) ) )
19745	assertNotNull ( result )
19746	assertEquals ( "field.asSet()", p. toString ( ) )
19747	Assert. assertEquals ( beforeNumTasks, getDefaultQueue ( ). fetchStatistics ( ). getNumTasks ( ) )
19748	assertTrue ( d1 instanceof PublicCloneable )
19749	assertThat ( ByteUtil. toPrimitiveByte ( i ), is ( ( byte ) 1 ) )
19750	Assert. assertTrue ( Math. abs ( vega - vegaFiniteDiffAnalytic ) < 1E-02 )
19751	assertNotNull ( project )
19752	assertEquals ( "", result )
19753	assertThat ( parents, contains ( "Outer", "Nested", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner", "Inner"
19754	assertTrue ( exceptionThrown )
19755	assertNotNull ( entity. getId ( ) )
19756	assertTrue ( isValid )
19757	assertNull ( found )
19758	assertTrue ( EXPECTED_DS_INDEX_MSG + " instead got " + e. toString ( ), e instanceof DatastoreNeedIndexException )
19759	assertTrue ( cygnusGroupingRules == null )
19760	Assert. assertEquals ( null, ( Long ) a. v )
19761	assertThat ( result, equalTo ( v + "-" + s ) )
19762	assertEquals ( ordered, result )
19763	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"record\\":{\\"url\\":\\"http://sendme.com/tropo\\",\\"beep\\":true,\\"allowSignals\\":[\\"exit\\",\\"stopHold\\"]}}]}" )
19764	Assert. assertEquals ( "password/change", view )
19765	assertIs ( 4, count )
19766	assertTrue ( latch. await ( 2, SECONDS ) )
19767	assertEquals ( "Count of customer", 0, res )
19768	Assert. assertFalse ( this. manager. disconnectFromAll ( this. family1 ) )
19769	assertEquals ( "https://www.google.com", accClientConf. get ( "user.name" ) )
19770	assertMockEndpointsSatisfied ( )
19771	Assert. assertTrue ( result. getUserID ( ). isEmpty ( ) )
19772	assertThat ( tokens, equalTo ( Arrays. < Object > asList ( "One", "Two", "Three" ) ) )
19773	assertTrue ( kb. hasErrors ( ) )
19774	assertEquals ( "/mockResource?id=1", finalRedirectUrl )
19775	assertThat ( authorities. stream ( ). map ( a -> a. getAuthority ( ) ). collect ( Collectors. toList ( ) ), containsInAnyOrder ( WebSecurityConfiguration. EPERSON_GRANT, WebSecurityConfiguration. AUTHENTICATED_GRANT ) )
19776	assertEquals ( filter, CardAPI. filter ( testCard, filter ) )
19777	assertEquals ( "Latitude is not properly parsed", 5d, mapper. readLatitude ( columns ), 0 )
19778	assertThat ( foo. getBar ( ), sameInstance ( new Bar ( ) ) )
19779	Assert. assertFalse ( types. isEmpty ( ) )
19780	assertThatClassExpressionIsTranslatedAs ( classExpression, initialStateAsserted, expectedPropertyValue )
19781	assertEquals ( null, result )
19782	Assert. assertEquals ( projectorForward. getTranscriptStartingAtCDS ( ), resultTranscript )
19783	assertEquals ( g0, g1 )
19784	MatcherAssert. assertThat ( new FilledOutText ( one, two, ImmutableList. of ( ( ) -> "Hey", ( ) -> "dude" ) ). string ( ), CoreMatchers. equalTo ( "Hey dude" ) )
19785	assertAllTargetsCount ( 0 )
19786	assertEquals ( "brie", declaration. toString ( ) )
19787	assertThat ( httpGetRoot, isAllowed ( ) )
19788	assertFalse ( property. toStringValues ( ). isEmpty ( ) )
19789	assertEquals ( 0, array. size ( ) )
19790	assertTrue ( "MyApp.app folder is missing in AppstoreUploadFile.", files. length == 1 && files [ 0 ]. getName ( ). equals ( "MyApp.app" ) )
19791	assertFalse ( obs. isDirty ( ) )
19792	assertEquals ( "[1080:0:0:0:8:800:200c:417a]:0", StringUtils. formatSocketServer ( socket ) )
19793	assertThat ( log, instanceOf ( CommonsLoggingImpl. class ) )
19794	assertFalse ( "Title photo list is empty for " + imdbId, result. isEmpty ( ) )
19795	assertEquals ( 2, found. size ( ) )
19796	Assert. assertTrue ( kernelServices. isSuccessfulBoot ( ) )
19797	assertEquals ( "This test thing", out )
19798	assertEquals ( "{\\"placemarks\\":[{\\"type\\":\\"PointPlacemark\\",\\"name\\":\\"P1\\",\\"position\\":\\"L1\\",\\"position\\":\\"T1\\",\\"position\\":\\"8.5\\",\\"type\\":\\"P2\\",\\"position\\":\\"16.5\\",\\"type\\":\\"P3\\",\\"position\\":\\"L2\\",\\"position\\":\\"T2\\",\\"type\\":\\"P2\\",\\"position\\":\\"8.5\\",\\"type\\":\\"P3\\",\\"position\\":\\"L1\\",\\"position\\":\\"T1\\",\\"type\\":\\"T2\\",\\"position\\":\\"8.5\\",\\"type\\":\\"P2\\",\\"position\\":\\"16.5\\",\\"type\\":\\"P3\\",\\"position\\":\\"L2\\",\\"position\\":\\"L2\\",\\"type\\":\\"P2\\",\\"position\\":\\"8.5\\",\\"type\\":\\"P3\\",\\"position\\":\\"P2\\",\\"type
19799	assertEquals ( ChargingCapability. V_240V_3_PHASE_32A, ChargingCapability. fromConnector ( connector ) )
19800	assertOut ( "a.setSeconds(10)" )
19801	assertEquals ( register, newRegister )
19802	assertEquals ( "true", result. trim ( ) )
19803	Assert. assertEquals ( PdfFontFactory. createFont ( ), textArray. getFont ( string ) )
19804	assertEquals ( "{" + newLine ( ) + "    with ($p) { name = \\"Luca\\" };" + newLine ( ) + "}", printConstraint ( expression ) )
19805	Assert. assertEquals ( record. get ( "name" ). toString ( ), decoded. getName ( ) )
19806	assertEquals ( "test", echo. echo ( "test" ) )
19807	assertNull ( res )
19808	Assert. assertArrayEquals ( cmpAlignAndMeet, outAlignAndMeet )
19809	assertEquals ( "Buffer[size=10203040, contents=a1b2c3d4e5f61, contents=a2b3c4d5e6f10203040]", buffer. toString ( ) )
19810	Assert. assertEquals ( 0, count )
19811	assertThat ( mustache. render ( Collections. singletonMap ( "msg", "label.hello" ) ), is ( "Hello world!" ) )
19812	assertThat ( damageComponent. getDamage ( ), IsEqual. equalTo ( 560f ) )
19813	assertRecord ( record )
19814	editor. assertProblems ( "name", "resource_groups", "instance_groups", "name", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags", "tags",
19815	Assert. assertEquals ( "Drop what?!?!", responseResult. getText ( ) )
19816	assertTrue ( changeListBuilder. isEmpty ( ) )
19817	Assert. assertTrue ( "gpiano3.wav". equals ( ( ( JsonArray ) result ). get ( 0 ). get ( "name" ). getAsString ( ) ) )
19818	assertEquals ( expected, actual )
19819	assertNotEquals ( originalEdgeValue. hashCode ( ), decodedEdgeValue. hashCode ( ) )
19820	assertThat ( xmlResult, CompareMatcher. isSimilarTo ( out. toString ( ) ). ignoreWhitespace ( ). withNodeMatcher ( new DefaultNodeMatcher ( ElementSelectors. byNameAndText ) ) )
19821	assertEquals ( TankConstants. HTTP_CASE_PASS, result )
19822	assertTrue ( rootNode. exists ( ) )
19823	runner. assertValid ( )
19824	assertEquals ( "A", ArrayUtils. subtract ( items, 1 ) )
19825	assertThat ( inputsJson, contains ( expectedJson ) )
19826	assertEquals ( expected, actual )
19827	assertEquals ( 1, search. getSize ( ) )
19828	assertViewName ( mav, "redirect:/topics/1" )
19829	Assert. assertEquals ( - 1, first. compareTo ( second ) )
19830	assertThat ( "The wrong iterations count should not be validated",! validateStrongPasswordHash ( manipulatedIterationsHash, passwordHash ) )
19831	Assert. fail ( "Test encountered an unexpected exception." )
19832	assertTokenSurfacesEquals ( Arrays. asList ( "iPhone4 S" ), tokenizer. tokenize ( input ) )
19833	assertThat ( configuration. getThreads ( ), equalTo ( 7 ) )
19834	assertThat ( ListNumbers. binarySearchValueOrLower ( values, 2 ), equalTo ( 0 ) )
19835	assertNotNull ( driver )
19836	assertEquals ( "id", outputDrilldown. getLink ( ) )
19837	assertTrue ( resultMessage ( result, PUT ), result. passedValidation ( ) )
19838	assertSame ( expr. accept ( visitor ), visitResult )
19839	assertEquals ( 0, d. getTime ( ) )
19840	Assert. assertNotNull ( info )
19841	assertNotNull ( huSelectModel_SelectedWarehouse_ID. build ( ) )
19842	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( 5L ), mapper. readBitemporalDate ( columns, "vtTo" ) )
19843	assertNotNull ( result )
19844	Assert. assertEquals ( 1, events. size ( ) )
19845	assertThat ( d. getFamilies ( ), containsInAnyOrder ( Lists. newArrayList ( familyDefinition ) ) )
19846	assertThat ( control. matches ( "/clients/.*" ), is ( true ) )
19847	assertEquals ( Arrays. asList ( new DefaultArtifact ( "junit", "junit-dep", "jar", "4.10" ) ), deps )
19848	assertEquals ( 2, index. estimateTotalCount ( ) )
19849	assertTrue ( validator. validateNotEmpty ( os ) )
19850	assertOverflow ( new BigDecimal ( x ). divide ( new BigDecimal ( y ) ), result, x / y )
19851	assertRequest ( DataMockery. createOPTIONSRequest ( ), request )
19852	assertEquals ( "scoreHolder.addSoftConstraintMatch(kcontext, -1)", marshaledAction )
19853	assertEquals ( result. size ( ), 2 )
19854	assertEquals ( "EncodeConstants.OF10_VERSION_ID,Action,OutputActionCase", key1. toString ( ) )
19855	assertEquals ( 1, model. getObject ( ). getPerson ( ). getAdresses ( ). size ( ) )
19856	assertEquals ( "Helvetica", proxy. getData ( ) )
19857	assertThat ( resolved, contains ( "a:B", "c:C" ) )
19858	assertEquals ( howdy. name ( ), Greeting. howdy )
19859	assertNotNull ( ui. getErrorFrame ( new JPanel ( ) ) )
19860	assertEquals ( "34 + 2\\n", found )
19861	assertNull ( item. getItemProperty ( "other1" ) )
19862	assertEquals ( actualCountOfPosts, resultOfGetTopics )
19863	assertThat ( result, nullValue ( ) )
19864	assertEquals ( gcd, ZippelGCD ( a, b ) )
19865	assertEquals ( "abrakadabra", aspect. aroundFlippableMethods ( pjp, flipAnnotation ) )
19866	Assert. assertNull ( nullURL )
19867	assertLabelQueryResult ( query. toString ( ), both ( binds ( "p", URI. class ) ). and ( binds ( "pLabel", Literal. class ) ) )
19868	assertNotNull ( User. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
19869	assertEquals ( cpuOut. get ( 0 ), gpuOut. get ( 0 ), 0.0001 )
19870	Assert. assertEquals ( "Hallo 'German'", I18N. format ( "Hallo 'German'" ) )
19871	assertArrayEquals ( writeBytes, readBytes )
19872	assertEquals ( Response. Status. OK. getStatusCode ( ), target. request ( MediaType. APPLICATION_XML ). get ( ). getStatus ( ) )
19873	assertTrue ( cookieStore. isUseCookies ( ) )
19874	assertTaskEvents ( task, TaskListener. EVENTNAME_CREATE_WITH_ASSIGNMENT )
19875	assertEquals ( meta1, meta2 )
19876	assertEquals ( "{" + newLine ( ) + "    delete($person);" + newLine ( ) + "}", printConstraint ( expression ) )
19877	Assert. fail ( "Should have thrown an exception" )
19878	assertEquals ( "admin", adminObject1. getAdmin ( ) )
19879	Assert. assertEquals ( "a =b, ", KeyValueFormatter. format ( params, true ) )
19880	assertEquals ( SUCCESS_FACTORY_RESPONSE, handleResponse )
19881	AvroAssertTestUtil. assertEqualsWithJsonIgnoreOrder ( outputDirPath, jsonOutputFile, Document. class )
19882	assertEquals ( 1, result. size ( ) )
19883	assertEquals ( "Wrong # of differences", 2, diff. size ( ) )
19884	assertNotEquals ( command, new Object ( ) )
19885	Assert. assertEquals ( 2, terms. size ( ) )
19886	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
19887	assertEquals ( 0, result. size ( ) )
19888	assertEquals ( "Option value", "falseValue", commandLine. getOption ( "noSimpleOption" ) )
19889	assertArrayEquals ( new int [ ] { 1, 2, 3, 4, 5, 6 }, out. read ( queue, e ). getInts ( ) )
19890	assertEquals ( expected, drugList )
19891	authRule. assertScenario ( scenario )
19892	assertThat ( subject. getAgeOfExactOrNextExistingSerial ( 1 ), is ( - 1 ) )
19893	assertEquals ( "To is not properly parsed", new Date ( 5 ), mapper. readTo ( columns ) )
19894	Assert. assertEquals ( 6., analyser. getDistanceAtActivity ( route. getActivities ( ). get ( 0 ), route ), 0.01 )
19895	assertEquals ( Lists. newArrayList ( 1 ), listBad )
19896	assertTrue ( e instanceof E_Uri )
19897	assertSuccess ( validationResult )
19898	assertThat ( validationList, is ( Collections. < String > emptyList ( ) ) )
19899	Assert. assertEquals ( "<html><body><h1>XML</h1></body></html>", r. get ( String. class ) )
19900	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><alice xmlns=\\"http://some-namespace\\" $=\\"bob\\"/>", result. toString ( ) )
19901	Assert. assertTrue ( result. isEmpty ( ) )
19902	assertEquals ( 19641410518L, averageScore. getStandardDeviation ( ), 0.0001 )
19903	assertEquals ( expected, result )
19904	assertEquals ( expectedOffset, offset )
19905	Assert. assertEquals ( "<semData><tpData>1</tpData></semData>", entregaSemDataDefinida. toString ( ) )
19906	assertions. containsSequence ( sequence )
19907	assertDateEquals ( new DateTime ( 2013, 12, 31, 0, 0, 0, 0 ), date )
19908	assertAxisEquals ( - 10.0, - 1.0, new double [ ] { - 10.0, - 9.0, - 8.0, - 7.0, - 6.0, - 5.0, - 4.0, - 3.0, - 2.0, - 1.0, 0.0 }, new String [ ] { "-10", "-9", "-8", "-7", "-6", "-5", "-4", "-3", "-2", "-1", "0" }, axis )
19909	assertStatus ( 2, expectedNumRows, expectedNumBytes, expectedReadBytes )
19910	assertEquals ( OTHER_GRAPHITE_URL, backendAlarm. getGraphiteBaseUrl ( ) )
19911	assertEquals ( childProject1. getCustomWorkspace ( ), childWorkspace )
19912	assertEquals ( "3 啶�啶�啶� 啶�啶�", t. format ( new Date ( 0 ) ) )
19913	assertEquals ( ComponentElementGetValue. FIELD_VALUES [ 1 ], labelChangeValue. getText ( ) )
19914	assertThat ( testOutcome. getResult ( ), is ( TestResult. FAILURE ) )
19915	assertNotNull ( tile )
19916	Assert. assertTrue ( component. isValid ( ) )
19917	assertNull ( loadIO. stat ( new Path ( "zookeeper", "table" ) ) )
19918	Assert. assertNotNull ( "URL not null", resurl )
19919	assertEquals ( b1. hashCode ( ), b2. hashCode ( ) )
19920	assertEquals ( AuthenticationMechanismOutcome. AUTHENTICATED, outcome )
19921	assertEquals ( "a/b(@a!= 123)/c", SelectorStepBuilder. toString ( steps ) )
19922	assertEquals ( "[foo] did not satisfy [" + startsWith ( "d" ) + ']', expected. getMessage ( ) )
19923	assertEquals ( user. getUserName ( ), "admin" )
19924	assertNotNull ( "HousingComplex is null", entity )
19925	assertEquals ( ref, tokens )
19926	assertEquals ( e1. evaluate ( new Object ( ) ), e2. evaluate ( new Object ( ) ) )
19927	assertEquals ( 0.0f, entry. getEffectiveDurationHours ( ), Float. MIN_NORMAL )
19928	assertThat ( context, is ( notNullValue ( ) ) )
19929	assertTrue ( "Expected ttl to be greater than the configured one, but it was: " + actualTtl, actualTtl < ttlInSeconds )
19930	assertEquals ( files. size ( ), Iterables. size ( s ) )
19931	assertPermanentCount ( playerA, "Titanic Growth", 1 )
19932	assertEquals ( value1, value2 )
19933	assertEquals ( "text/html", get ( url ). contentType ( ) )
19934	assertEquals ( 0, extraArtifactRepositoryProperties. size ( ) )
19935	assertTrue ( Arrays. equals ( new int [ ] { - 1, 1 }, coordinate ) )
19936	assertEquals ( 2762, int0 )
19937	assertEquals ( "http://api.github.com/repos/cisco/master/projects/13", url. toString ( ) )
19938	assertEquals ( expectedQuery, actualQuery )
19939	Assert. assertEquals ( 500, balance, 0.0 )
19940	assertEquals ( "Hello World!", sample. helloWorld ( ) )
19941	assertTrue ( validator. supports ( resource ) )
19942	assertFalse ( result. passedValidation ( ) )
19943	Assert. assertTrue ( "Incorrect paint method supplied", WebXmlUtils. doPaint ( horizontalRule ) )
19944	assertThat ( codes, containsInAnyOrder ( "43343-4", "47239-9" ) )
19945	assertThat ( exclusions, contains ( "this key" ) )
19946	Assert. assertEquals ( retrievedContent, newContent )
19947	assertEquals ( "CN=server,O=OPS4J,C=PL", server. getName ( ) )
19948	assertEquals ( "aTestString", classUnderTest. getClientVersion ( ) )
19949	assertTrue ( new File ( "target/excludedClasses/com/querydsl/apt/domain/query/QAnimalTest_Animal.java" ). exists ( ) )
19950	assertEquals ( BOLD. foreground ( RED ), style )
19951	assertEquals ( "e", lineToBeCopied. getActualText ( 1, 2 ) )
19952	assertTrue ( analyser. getBlobs ( ). entrySet ( ). isEmpty ( ) )
19953	assertEquals ( new Integer ( 1 ), cf. getSegmentQuals ( ) )
19954	assertEquals ( "12:30:00", format )
19955	assertNotNull ( context )
19956	Assert. assertEquals ( 1, issues. length )
19957	Assert. assertEquals ( user, result )
19958	assertEquals ( "Hello", message. get ( ) )
19959	assertNotNull ( builder. getSecurityManager ( ) )
19960	Assert. assertEquals ( "x = " + x, FastMath. sin ( x ), actual [ i ], 0.0 )
19961	Assert. fail ( "Should have thrown exception" )
19962	assertEquals ( Collections. EMPTY_SET, nullFieldProblems )
19963	assertEquals ( times, victim. getTotalResources ( ) )
19964	assertNull ( profile. getTokenExpiration ( ) )
19965	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 2, warnings. size ( ) )
19966	assertEquals ( Color. blue. getRGB ( ), thumbnail. getRGB ( 49, 99 ) )
19967	assertTrue ( true )
19968	assertEquals ( tft, expected )
19969	assertEquals ( "zero", actual )
19970	assertNull ( table )
19971	Assert. assertEquals ( expected, actual )
19972	assertSame ( context. unwrap ( HibernateMessageInterpolatorContext. class ). getPropertyPath ( ), pathMock )
19973	assertEquals ( 0, x. size ( ) )
19974	assertEquals ( lines. size ( ), numLines )
19975	assertEquals ( "a", cache. get ( "a" ) )
19976	assertEquals ( 77, result )
19977	assertEquals ( 1, executor. run ( adultUnit ) )
19978	assertFalse ( "Should have failed to create a GroupBy command without a key function.", built )
19979	Assert. assertTrue ( sTagProcessor. errorCount == 0 )
19980	assertThat ( leftMost, equalTo ( asList ( statefulRegion2, statefulRegion5 ) ) )
19981	assertArrayEquals ( splitString, testString6ExpectedSplit )
19982	Assert. assertEquals ( "Hello World!", result )
19983	assertEquals ( 1, stringTokenizer. countWords ( ) )
19984	assertThat ( newCode, is ( equalTo ( code ) ) )
19985	assertEquals ( expected, actual )
19986	assertEquals ( DISABLED, status )
19987	assertTrue ( f. canWrite ( ) )
19988	assertNotNull ( entryRelationship )
19989	assertEqualsIgnoreWhitespace ( expected, drl )
19990	runner. assertNotValid ( )
19991	assertEquals ( expectedXml, actualXml )
19992	assertTrue ( a1 instanceof PublicCloneable )
19993	assertThat ( event. isCancelled ( ), equalTo ( true ) )
19994	assertThat ( algorithm. computeDigest ( ), is ( helloDigest ) )
19995	assertEquals ( mockEnc, uit. getEncoder ( ) )
19996	assertArrayEquals ( before, Arrays. slice ( after, 0, 0 ) )
19997	assertEquals ( "No test case should fail", 1, runTestsResults. getFailedTests ( ). size ( ) )
19998	Assert. assertEquals ( "userName1", userName )
19999	Assert. assertThat ( rec, Matchers. allOf ( LogMatchers. hasMatchingThrowable ( Matchers. arrayContaining ( ( Matcher ) Matchers. equalTo ( "My exception" ) ) ) ) )
20000	assertEquals ( expected, elements )
20001	assertTrue ( in. markSupported ( ) )
20002	assertVariable ( "character_set_client", "utf8" )
20003	assertNotNull ( entity. getId ( ) )
20004	assertThat ( rendering, is ( "AB" ) )
20005	assertThat ( isNotMatch, description ( theDescription ) )
20006	assertEquals ( 0, app. executeApplication ( args ) )
20007	assertNotNull ( response )
20008	assertTrue ( passwordEncoder. checkpw ( plaintext, encoded ) )
20009	Assert. assertNull ( RequestObjectHelper. getReturnKeys ( json ) )
20010	assertThatStepsInstancesAre ( builderAnnotated. buildCandidateSteps ( configuration ), FooSteps. class )
20011	assertEquals ( 1, chargeCount )
20012	assertEquals ( "%s", instance. formatMessage ( record ) )
20013	assertEquals ( expected, test. adjustInto ( base ) )
20014	assertEquals ( "Free Text", drugOrder. getDosingType ( ) )
20015	Assert. assertTrue ( fi1. sameFormatAs ( fi2 ) )
20016	assertThat ( co. getCachedSize ( ), is ( actualCachedSize ) )
20017	assertEquals ( "badUrl", latestRelease. getApiUrl ( ) )
20018	assertSame ( conf, table. getConfiguration ( ) )
20019	assertEquals ( "logo11w.png", fileName. toString ( ) )
20020	Assert. assertFalse ( errors. hasFieldErrors ( ) )
20021	Assert. assertEquals ( STRING, nextHop. getString ( ) )
20022	assertEquals ( "Invalid code for required binding", 400, myError. getCode ( ) )
20023	assertEquals ( defaultList. size ( ), 1 )
20024	assertEquals ( res [ i ], v )
20025	assertRowsEqual ( expected, primaryData )
20026	assertEquals ( 61750L, m. getLastMillisecond ( ) )
20027	assertTrue ( instance. getTotalNetworkError ( ) < maxError )
20028	assertSame ( "managedConnection must be retrievable after set", mockManagedConnection, handler. getData ( ). getManagedConnection ( ) )
20029	assertEquals ( copy ( value ), ra. get ( ). get ( ) )
20030	assertThat ( proxyUnderTest. isFeatureEnabled ( ), is ( equalTo ( true ) ) )
20031	assertTrue ( p. apply ( createWithProperty ( name, value ) ) )
20032	assertThat ( chargingProfile. getStackLevel ( ), equalTo ( zero ) )
20033	assertEquals ( k. getValue ( ). toString ( ), FILE_ABSOLUTE )
20034	assertEquals ( 0, hits. totalHits )
20035	assertEquals ( 0, coverage, 0.001 )
20036	assertNotNull ( entity. getId ( ) )
20037	assertEquals ( "No violations were found for " + value, 0, violations. size ( ) )
20038	AssertAnnotations. assertPOS ( posMapped, posOriginal, select ( jcas, POS. class ) )
20039	assertNull ( i. getParent ( ) )
20040	assertTrue ( "Got prefix lookups", interpolator. getPrefixLookups ( ). isEmpty ( ) )
20041	assertEquals ( cause, ex1. getCause ( ) )
20042	assertEquals ( expResult, result )
20043	Assert. assertEquals ( pis, imposto. getPis ( ) )
20044	assertEquals ( graduate, result )
20045	assertEquals ( byteBuffer0, byteBuffer1 )
20046	assertEquals ( 71, pathMap. size ( ) )
20047	Assert. assertEquals ( 0, mailbox. count ( ) )
20048	assertEquals ( "msg", sut. getMessage ( ) )
20049	assertSequence ( visitor. getNodes ( ), "a", "b", "c", "d", "e" )
20050	Assert. assertEquals ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( "test" ) ) ) ) ) ) ) ) ), example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( example. evaluate ( "test" ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
20051	assertEquals ( asList ( "/root[1]/node[1]", "/root[1]/node[1]/node[1]", "/root[1]/ns:node[1]", "/root[1]/ns:node[1]", "/root[1]/nested1[1]/node[1]", "/root[1]/nested1[1]/node[1]/ns:node[1]", "/root[1]/nested1[1]/node[1]/ns:node[1]", "/root[1]/nested1[1]/node[1]/ns:node[1]", "/root[1]/nested1[1]/ns:node[1]", "/root[1]/nested1[1]/node[1]/ns:node[1]", "/root[1]/nested1[1]/ns:node[1]", "/root[1]/nested1[1]/ns:node[1]", "/root[1]/nested1[1]/ns:node[1]", "/root[1]/nested1[1]/node[1]/ns:node[1]", "/root[1]/nested1[1]/ns:node
20052	assertEquals ( source, builder. getPropertyState ( ) )
20053	assertThat ( actual. getIdentifier ( ). getValue ( ), containsString ( "testSearchByResourceChain01" ) )
20054	assertThat ( editor. getValue ( ), is ( ( Object ) ReadPreference. preferSecondary ( ) ) )
20055	assertTrue ( calledExceptionHandler. isProtectedHandlerCalled ( ) )
20056	assertEquals ( strList, StringArrayUtils. toSet ( "1" ) )
20057	assertEquals ( getJson ( downloadDetails ), writer. toString ( ) )
20058	assertEquals ( "{\\"store\\":{\\"book\\":[{\\"category\\":\\"reference\\",\\"author\\":\\"Nigel Rees\\",\\"title\\":" + "\\"Sayings of the Century\\",\\"price\\":8.95},{\\"category\\":\\"fiction\\",\\"author\\":\\"Evelyn Waugh\\"," + "\\"title\\":\\"Sword of Honour\\",\\"price\\":12.99}],\\"bicycle\\":{\\"color\\":\\"red\\",\\"price\\":19.95}," + "\\"new Author\\":\\"new Author value\\"},\\"arrayTest\\":[1,2,3]}", result. get ( RETURN_RESULT ) )
20059	Assert. assertTrue ( sp. equals ( sp2 ) )
20060	assertThat ( bic1. hashCode ( ), is ( not ( equalTo ( bic2. hashCode ( ) ) ) ) )
20061	Assert. assertTrue ( got. contains ( "Created device: {" ) )
20062	assertThat ( repository. findOne ( id ), is ( notNullValue ( ) ) )
20063	assertEquals ( expected, contentSummary. toString ( true ) )
20064	assertResultSet ( res )
20065	assertEquals ( 1234, config. getTimeout ( ) )
20066	assertEquals ( TRANSACTIONTYPE_FAT_MONO, tx. transactionType )
20067	assertEquals ( "http://example.com/nested-query?nested=true&nested-query=true&nested-query-type=json", link. toString ( ) )
20068	Assert. assertTrue ( errors. hasFieldErrors ( "concept" ) )
20069	Assert. assertEquals ( "QueueInfo children weren't properly converted", returned. getQueueChildren ( ). size ( ), 1 )
20070	assertEquals ( dc. name ( ), cluster. name ( ) )
20071	Assert. assertEquals ( "\\"SELECT \\n  \\\\\\"mydatabase\\\\\\".\\\\\\"mydbschema\\\\\\".\\\\\\"mytable\\\\\\".\\\\\\"ID1\\\\\\", \\n  \\\\\\"mydatabase\\\\\\".\\\\\\"mydbschema\\\\\\".\\\\\\"mytable\\\\\\".\\\\\\"NAME1\\\\\\"\\nFROM \\\\\\"mydatabase\\\\\\".\\\\\\"mydbschema\\\\\\".\\\\\\"mytable\\\\\\"", result )
20072	assertTrue ( resMap. getResourcesReader ( )!= null )
20073	assertEquals ( expResult, result )
20074	assertEquals ( "00FF", Hex. toHexString ( outputStream. toByteArray ( ) ). toUpperCase ( ) )
20075	assertNotNull ( siteInfoData )
20076	assertTrue ( cs. isAccepted ( ) )
20077	assertEquals ( 0, nbResult ( gg ) )
20078	assertThat ( PathUtil. getRelativePath ( root, child ), is ( "/a" ) )
20079	assertEquals ( "IDX1", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
20080	assertTrue ( isEqual ( d1, d2 ) )
20081	Assert. assertEquals ( "The deviation of the AAD deviation is incorrect", deltaFiniteDifference, deltaAAD, 1E-6 )
20082	Assert. assertEquals ( "(aa_change_frameshift (aa_point_location (aa_char Ala) 124) (aa_char Thr) fs * 23)", aa_change_extension. toStringTree ( parser ) )
20083	Assert. assertEquals ( expected, actual )
20084	Assert. assertEquals ( expect, output. toString ( ) )
20085	assertTrue ( String. format ( "Expected error to contain string [%s]. Actual error: %s", expected, ex. getMessage ( ) ), ex. getMessage ( ). contains ( expected ) )
20086	assertThat ( "Failed to list resources: " + result, Operations. isSuccessfulOutcome ( result ), is ( true ) )
20087	Assert. assertTrue ( edOrgRights. isEmpty ( ) )
20088	assertEquals ( "Hello World", page. getText ( ) )
20089	assertNull ( action. getIconFileName ( ) )
20090	assertEquals ( "authId1", target. getAuthId ( ) )
20091	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( date ), mapper. readBitemporalDate ( columns, "vtFrom" ) )
20092	assertEquals ( "Response Processor " + ( i + 1 ) + " received wrong message content", "This is the status of /resource" + ( i + 1 ), coapResponse. getContent ( ). toString ( Charset. forName ( "UTF-8" ) ) )
20093	assertEquals ( true, ret )
20094	assertTrue ( "Undo should be removed after undo", defaultDispatchStackEdit. undo ( ) )
20095	assertTrue ( a == b )
20096	assertTrue ( sets. contains ( message1 ) )
20097	assertFalse ( branchFilterByRemote. isLinkedTo ( branch ) )
20098	assertFalse ( definedInContext )
20099	assertEquals ( artworkList. size ( ), 0 )
20100	assertEquals ( want, doc. body ( ). html ( ) )
20101	assertEquals ( 42, impl. getMedian ( ) )
20102	assertThat ( createdPlayer == defensivePlayerWithDjAndJavaDevSkills, is ( true ) )
20103	assertEquals ( "SyntaxError: Unexpected end of input", e. getJSMessage ( ) )
20104	assertEquals ( expected, real )
20105	Assert. assertArrayEquals ( expected, actual )
20106	assertEquals ( "FRA-AWS,UAT,FWS", result [ 0 ] )
20107	assertEquals ( 0, editingContext. getIgnoredObjects ( ). size ( ) )
20108	assertEquals ( expectedQuery, actualQuery )
20109	assertEquals ( BAD_REQUEST. getStatusCode ( ), response. getStatus ( ) )
20110	assertEquals ( expected, reference. get ( ) )
20111	assertEquals ( "test", this. parser. getResourceName ( ) )
20112	assertEquals ( expectedScriptNode, actualScriptNode )
20113	assertTrue ( "Group should not be removed", groupService. exists ( parentGroup. getID ( ), childGroup. getID ( ) ) )
20114	assertEquals ( 0L, result )
20115	assertEqualsIgnoreWhitespace ( expected, real )
20116	assertTrue ( syncClient instanceof ZooKeeperSyncClientImpl )
20117	assertObject ( args )
20118	assertEquals ( o, o )
20119	assertTrue ( cache. size ( ) > 0 )
20120	assertEquals ( "1010101", element. getValueAsString ( ) )
20121	Assert. assertEquals ( 0, errors. size ( ) )
20122	assertEquals ( 0, results. size ( ) )
20123	assertEquals ( expected, actualQuery )
20124	assertEquals ( 1, res. join ( ) )
20125	assertEquals ( 0, result )
20126	Assert. assertFalse ( mPos. has ( e ) )
20127	assertEquals ( 2, vrp. getJobs ( ). size ( ) )
20128	Assert. assertEquals ( filterName, victim. getName ( ) )
20129	assertThat ( b. getConsole ( ), Matchers. containsString ( "Running in user password" ) )
20130	assertTrue ( actualXml. contains ( "<status>" ) )
20131	assertThat ( byKey. toString ( ), is ( "" + "inet6num:        2001:658:021A::/48\\n" + "netname:         NETNAME\\n" + "source:          RIPE\\n" ) )
20132	assertThat ( ByteTypeValidator. INSTANCE. validate ( parameters, "aaa" ), is ( "Aaa must be a byte." ) )
20133	assertEquals ( "{\\"errorMessage\\":\\"Passwords are not correct.", output )
20134	assertOut ( "<Group id=\\"myGrp\\"><Label></Label></Group>" )
20135	assertMockEndpointsSatisfied ( )
20136	assertEquals ( 3, processorsFactory. getPostProcessors ( ). size ( ) )
20137	assertEqualsWithoutWhiteSpaces ( "translate([0, -30, 0]) (empty)", ts )
20138	assertTrue ( pos. index == calc. altIndex ( altIndex, pos. tag ) )
20139	assertThat ( output, containsString ( "DICOM store deleted:" ) )
20140	assertEquals ( 140 + ( 1 + 2 + 3 ) * winScore - loosePenalty, scores. getScore ( ) )
20141	Assert. assertEquals ( Integer. valueOf ( 0 ), result )
20142	assertEquals ( 1.0, Evaluator. evaluate ( ex ) )
20143	assertThat ( testValue. keywordName ( TestValueType. NAME ), equalTo ( "NAME" ) )
20144	assertEquals ( "6.10351563e+003", victim. readNumber ( ) )
20145	assertEquals ( Joiner. on ( "\\n" ). join ( expected ), result )
20146	assertThat ( classes. size ( ), Matchers. equalTo ( 2 ) )
20147	assertEquals ( ChatState. composing, stateHandler. getLastChatState ( ) )
20148	assertEquals ( expResult, result )
20149	assertThat ( result. getViewOriginalText ( ), is ( VIEW_EXPANDED_TEXT ) )
20150	assertEquals ( "FooBar", resultValue )
20151	Assert. assertEquals ( BitTag. SERVICENET_LB. tagValue ( ) + BitTag. SERVICENET_LB. tagValue ( ), mappedUsage. getTagsBitmask ( ) )
20152	assertTrue ( lines. contains ( "\\"country\\":\\"Equestria\\"" ) )
20153	Assert. assertTrue ( getSettings ( ). getSocketSettings ( ). getSocketTimeout ( TimeUnit. MILLISECONDS ) == 1100 )
20154	Assert. assertEquals ( 2, testPinpointClient1. handshake ( ) )
20155	assertThat ( pyPiRestoreBlobData. getVersion ( ), is ( PyPiRestoreUtil. extractVersionFromPath ( restoreBlobData. getBlobName ( ) ) ) )
20156	Assert. assertEquals ( jobParams, retrievedParams )
20157	Assert. assertEquals ( "Link: <http://example.com/things>; rel=\\"next\\"; thing", affordance. toString ( ) )
20158	assertThat ( rendered, is ( expected ) )
20159	assertNotNull ( text )
20160	assertThat ( result. isEmpty ( ), is ( true ) )
20161	assertEquals ( testneuron3, lst. get ( 1 ) )
20162	assertNotNull ( "Title Plot is empty for " + imdbId, result )
20163	assertTrue ( cmd instanceof CapEndCmd )
20164	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
20165	Assert. assertTrue ( permissions. toString ( ), permissions. size ( ) == 1 )
20166	assertNotNull ( percentage )
20167	assertEquals ( "some/path", result. toString ( ) )
20168	assertEquals ( serialize, ByteArray. wrap ( ImmutableMap. of ( "tag-a", "foo", "resource-a", "bar" ) ) )
20169	assertNull ( result )
20170	assertInterval ( 2, 3, 5, 8, 13, 21, bounds )
20171	assertTrue ( socket. isClosed ( ) )
20172	assertEquals ( expectedQuery, actualQuery )
20173	assertEquals ( "http://localhost:8080/events/" + "topic/cg/cid?filter=filter", url )
20174	assertTrue ( result )
20175	assertEquals ( 1, totalSchemas )
20176	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 03" ) )
20177	assertTrue ( "the artifact must be downloaded", new File ( localRepo, "ant/ant/1.5.1/ant-1.5.1.jar" ). exists ( ) )
20178	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( textField ) instanceof WTextFieldRenderer )
20179	assertThat ( iterationState. next ( ). getChangeType ( ), is ( UNCHANGED ) )
20180	assertNotNull ( parser )
20181	authRule. assertScenario ( scenario )
20182	assertNotNull ( smsd1. getFirstAtomMapping ( ) )
20183	assertEquals ( 3, Nd4j. getBlasWrapper ( ). iamax ( linspace ) )
20184	assertEquals ( expResult, result )
20185	Assert. assertNotNull ( c )
20186	assertEquals ( 2, titles. size ( ) )
20187	assertThat ( MomentInterval. parseISO ( "2012-092T14:15Z/2012-096T16:00" ), is ( expected ) )
20188	assertEquals ( product, loaded )
20189	assertNotNull ( skuWarehouseDTO )
20190	BeanAssert. assertBeanEquals ( bean, array )
20191	assertEquals ( anonymousID, authInfo. getUserID ( ) )
20192	assertTrue ( jsonNode. has ( "properties" ) )
20193	Assert. assertEquals ( 1l, handler. convertIdentifier ( v ) )
20194	assertEquals ( "param=value", response. getBody ( ) )
20195	assertThat ( anyTS. isValid ( NANO_OF_SECOND, null ), is ( false ) )
20196	assertEquals ( "ABC", buf. getPrefixedString ( decoder ) )
20197	assertTrue ( resultComparator. compare ( dc1, dc2 ) < 0 )
20198	assertEquals ( PARENS_STREET_NAME, step. streetNameNoParens ( ) )
20199	assertThat ( "system-input-def-objects.xml", systemInputDef, matches ( new SystemInputDefMatcher ( expected ) ) )
20200	assertThat ( underTest. execute ( underTest, null, null, new Object [ ] { assetDocument, "jexlexpression", "*", repoToContainedGroupMap }, null ), is ( true ) )
20201	assertSame ( inputPortBinding, scufl2Tools. processorPortBindingForPort ( port, profile ) )
20202	assertEquals ( expectedQuery, actualQuery )
20203	assertEquals ( Calendar. MONDAY, calendar. getInternalCalendar ( ). getFirstDayOfWeek ( ) )
20204	assertThat ( getterMethod. getReturnType ( ). getName ( ), is ( "java.lang.Object" ) )
20205	assertTrue ( collector. isFitting ( frag ) )
20206	assertThat ( specification. getUnits ( ), is ( MILLI ( SECOND ) ) )
20207	assertThat ( coverArt. getBackImage ( ), is ( nullValue ( ) ) )
20208	Assert. assertNotNull ( addressResultsDto )
20209	assertEquals ( componentLinks, application. tenantLinks )
20210	assertEquals ( test [ 2 ], dynamicResult, staticResult )
20211	assertEqualsWithoutWhiteSpaces ( "(model11)", testSubject. subModel ( new ScadGenerationContextFactory ( ). include ( 1 ). exclude ( 12 ). create ( ) ) )
20212	assertFalse ( commandsIterator. hasNext ( ) )
20213	given ( ). body ( delegate. toString ( ) ). put ( delegate1 ). then ( ). assertThat ( )
20214	assertTrue ( plot. getRangeMarkers ( 99, Layer. FOREGROUND ). contains ( yMarker1 ) )
20215	assertThat ( anyTS. isValid ( MICRO_OF_SECOND, 666000 ), is ( false ) )
20216	assertTrue ( compare ( p, above ) )
20217	assertEquals ( "/_search/_all", search. getURI ( ElasticsearchVersion. UNKNOWN ) )
20218	assertThat ( entity, notNullValue ( ) )
20219	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
20220	assertTrue ( Arrays. equals ( result, expectedOutput ) )
20221	assertThat ( "getValue", node. getValue ( ), is ( false ) )
20222	assertEquals ( script, observedScript )
20223	assertNotNull ( process )
20224	assertNoSpans ( )
20225	assertTrue ( result == 200 )
20226	assertEquals ( CENSOR_WORDS, client. getStringStack ( ) [ client. getStringStackSize ( ) - 1 ] )
20227	assertThatResultContainsCorrectClassesExactlyInOrder ( result, TestClass. class )
20228	ReaderAssert. assertThat ( TuebaDzReader. class, TuebaDzReader. PARAM_SOURCE_LOCATION, "src/test/resources/tuebadz/corpus-sample.txt", TuebaDzReader. PARAM_PATTERNS, new String [ ] { "[+]*.xml" } )
20229	assertMessage ( "<type>EXITED</type>", 2 )
20230	Assert. assertEquals ( 2, binaries. getBins ( ). size ( ) )
20231	assertEquals ( actualPage, expectedPage, "Service returned incorrect page" )
20232	Assert. assertEquals ( "Protocol was not registered", protocol, protocol )
20233	assertTrue ( content. contains ( "This is a test" ) )
20234	Assert. assertEquals ( expResult, result, 0.006 )
20235	assertEquals ( false, result )
20236	Assert. isTrue ( response )
20237	assertEquals ( 2, groupsView. getGroups ( ). size ( ) )
20238	assertTrue ( items. size ( ) > 0 )
20239	assertEquals ( expectedPath, actualPath )
20240	assertEquals ( 1, result. getXdmValue ( ). itemAt ( 0 ). intValue ( ) )
20241	assertOut ( "a(b.child('child')" )
20242	Assert. assertEquals ( 0, builder. akibanInformationSchema ( ). validate ( AISValidations. GROUP_COLUMN_DEFAULT_CHARSET_COLLATION ). failures ( ). size ( ) )
20243	assertEquals ( 1, updates. size ( ) )
20244	assertThat ( impl. isPermitted ( "repoName", "repoFormat", BreadActions. READ, variableSource ), is ( false ) )
20245	assertThat ( mdcValueStr, is ( userName ) )
20246	Assert. assertTrue ( publisher. checkUpdate ( new EndpointTitle ( testEndpoints. get ( 0 ), HUB_PUBLISHER_UPDATE_ENDPOINT_REMOVED ) ) )
20247	assertFalse ( glass. accept ( figure, WIDTH / 2, 2 ) )
20248	assertEquals ( user, action. getUser ( ) )
20249	assertEquals ( validationLogic, resourceEditProperty. getValidationLogic ( ) )
20250	Assert. assertEquals ( "Gen.1.1", unmap ( "Gen.1.1" ) )
20251	assertThat ( result, is ( new String [ ] [ ] { { "c" } } ) )
20252	assertTrue ( comparator instanceof UnsignedByteBuffer. LexicographicalComparatorHolder. PureJavaComparator )
20253	Assert. assertEquals ( 7, coveredGoals. size ( ) )
20254	Assert. assertEquals ( "Linux", conf. get ( KEY ) )
20255	assertEquals ( PASSWORD, result )
20256	assertEquals ( "/workflow.json", wf. toString ( ) )
20257	assertEquals ( 1, count )
20258	assertEquals ( "1. Selected: Item 5", getLogRow ( 0 ) )
20259	assertTrue ( delete. isSuccess ( ) )
20260	assertThat ( ( Integer ) ms. get ( "aaa" ), is ( 1 ) )
20261	assertEquals ( "%d{ISO8601} [%t][%c] %-5p %properties %ndc: %m%n", layout. getConversionPattern ( ) )
20262	assertEqualsIgnoreWhitespace ( expected, real )
20263	Assert. assertTrue ( value > 0 )
20264	assertEquals ( "This is an example of comment", result )
20265	assertTrue ( shutdown. get ( ), "Shutdown should have been called" )
20266	assertEquals ( expResult, result )
20267	assertEquals ( "Join_Column_Name", colName )
20268	assertJsonEqualsWithLinkResolving ( new JSONObject ( ), result. getMessages ( ). values ( ). iterator ( ). next ( ), mqttHelper. getTopic ( entityType, IDS. get ( entityType ) ) )
20269	assertEquals ( "_cat/shards/_all", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
20270	assertTrue ( "unexpected value", value )
20271	Assert. assertEquals ( "2017-09-20", dateStr )
20272	router. assertRoute ( a, "/a" )
20273	assertEquals ( 207, testResult. getError ( ). getCode ( ) )
20274	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
20275	Assert. assertTrue ( this. manager. connectFromAll ( this. family1, Arrays. asList ( this. person1, this. person2, this. person3 ) ) )
20276	assertLHSBoundFieldFor ( "$f" )
20277	Assert. assertNotNull ( geoserverCatalog )
20278	Assert. assertEquals ( "SimPle", filter. getAuthenticationHandlerClassName ( ) )
20279	assertTrue ( "", types!= null && types. size ( ) == 1 && types. contains ( ProfileType. INDUSTRY ) )
20280	assertEquals ( expected, errorCode. userMessage ( aParameter ) )
20281	context. assertIsSatisfied ( )
20282	assertEquals ( 0.0, diff. getValue ( METERS ), 500 )
20283	assertEquals ( "       _____       __     __ " + LINE_ENDING + "      (_)__ __ `/ /_/ /__ `/ / /_/ /__ `/ / /_/ /__ `/ / /_/ /__ `/ / /_/ /__ `/ / /_/ /__ `/ / /_/ /__ `/ / /_/ /__ `/ / _ \\\\/ __/" + LINE_ENDING + "    / / /_/ / /_/ /  __/ /_  " + LINE_ENDING + " __/ /_/ /_/ /_/ /_/  " + LINE_ENDING + " __/ /_/ /_/ /_/ /_/\\\\__, /_/\\\\___/\\\\__/  " + LINE_ENDING + "/___/      /____/              " + LINE_ENDING, asciiArt )
20284	assertEquals ( expectedParsedResult, actualParsedResult )
20285	assertTrue ( "Group empty", constraintViolations. size ( ) == 1 )
20286	assertEquals ( "12345678", value. getDataAsBinaryStr ( ) )
20287	assertThat ( irsApplicable, equalTo ( true ) )
20288	assertEquals ( "b", m. get ( "a" ) )
20289	assertEquals ( 0, packet. get ( ProcessingConstants. REMAINING_SERVERS_HEALTH_TO_READ ). intValue ( ) )
20290	Assert. assertEquals ( "x has the wrong value", new Integer ( 10 ), o )
20291	assertEquals ( 406, getStatus ( get ) )
20292	Assert. assertEquals ( IsolationLevels. READ_COMMITTED, connection. getIsolationLevel ( ) )
20293	Assert. assertNull ( this. component. requestTerm ( QUERY_STRING, null ) )
20294	assertSameFileContents ( reference, fileResult )
20295	assertTrue ( reactor. getReactor ( ). isEmpty ( ) )
20296	assertEquals ( expected, sb. toString ( ) )
20297	assertEquals ( expected, ArchiveUtil. classNames ( ArchiveUtil. class ) )
20298	assertThat ( result. getId ( ), is ( notNullValue ( ) ) )
20299	assertNotNull ( ImportSession. class, importSession )
20300	assertEquals ( "SELECT * FROM " + tableName + " WHERE \\"id\\" =?", parser. getQuery ( ) )
20301	Assert. assertEquals ( tableSize, size )
20302	assertFalse ( matchResult )
20303	Assert. assertEquals ( expected, HtmlSanitizerUtil. sanitize ( input ) )
20304	assertEquals ( "select entity_0.code, subEntity_1.name from Entity entity_0 inner join entity_0.subEntities subEntity_1", select. getQuery ( ) )
20305	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
20306	assertThat ( "generator-set-0.xml", generatorSet, is ( expected ) )
20307	assertThat ( dur. with ( Duration. timestampNormalizer ( ) ), is ( Duration. ofPositive ( ). years ( 2 ). months ( 2 ). days ( 4 ). build ( ) ) )
20308	assertEquals ( "SELECT count(*) FROM entity_set", builder. buildQuery ( uriInfo, UriInfoType. GetEntitySetCount ) )
20309	assertEquals ( javaTimestamp, DateTimeUtil. getMonth ( TEST_DATETIME ) )
20310	Assert. assertEquals ( infoManifestacaoDestinatario, infoEventoManifestacaoDestinatario. getManifestacaoDestinatario ( ) )
20311	Assert. assertNull ( getMetric ( ). calculate ( getSession ( ) ) )
20312	assertEqualHQL ( "allen  d", sb. toString ( ) )
20313	assertResultSet ( res )
20314	Assert. assertEquals ( "", link. getDescription ( ) )
20315	assertEquals ( 2, dbHandler. getDataElementCount ( ) )
20316	assertTrue ( organisationSupport. validateOrganisation ( ORGANISATION_KEY, VALID_ORGANISATION_PASSWORD ) )
20317	Assert. assertEquals ( new BigDecimal ( "12.3456" ), value )
20318	Assert. assertNotNull ( asientoRecibido )
20319	assertNotNull ( ( test. entry ). getDatabaseName ( ) )
20320	assertThat ( clientBackend. get ( HelloWorldTestService. TEST_KEY ), is ( "accepted" ) )
20321	assertTrue ( r. isResourceType ( DefaultResourceTypeDefinition. NODE ) )
20322	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
20323	assertNull ( new RequestImpl ( m ). selectVariant ( list ) )
20324	assertEquals ( aNumber, result, 1E14 )
20325	assertEquals ( supply1, supply2 )
20326	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC, ScopePathType. ORCID_PATENTS_CREATE )
20327	assertEquals ( expected, actual )
20328	assertEquals ( author, result. getCommit ( ). getAuthorIdent ( ) )
20329	assertEquals ( 0.0, model. getResult ( ), 0.1 )
20330	assertEquals ( "qwe", collector. getMessage ( ) )
20331	assertEquals ( "SELECT a FROM db.g1 JOIN db.g2 MAKEIND(MAX:300 no join) ON a = b", QueryParser. getQueryParser ( ). parseCommand ( sql ). toString ( ) )
20332	assertThat ( target. matchExactly ( action ), is ( true ) )
20333	assertFalse ( commandsIterator. hasNext ( ) )
20334	arrays. assertContains ( description, actual, value, Index. atIndex ( - 1 ) )
20335	assertThatTestCaseObeysOracle ( 0 )
20336	assertEquals ( results1. size ( ), results2. size ( ) )
20337	Assert. fail ( "Should have thrown exception" )
20338	assertTrue ( baseCalendars. baseCalendars. size ( ) == previous )
20339	assertFalse ( hasReset )
20340	assertEquals ( "Incorrect outputPeer", wsos, wsis. getOutputPeer ( ) )
20341	assertThat ( renderer. getShortForm ( entity ), is ( "rdf:PlainLiteral" ) )
20342	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
20343	assertEquals ( padded ( OBJECT_OVERHEAD + BYTE + BYTE + BYTE + BYTE + BYTE + BYTE + BYTE ), ThreadTrackingContext. getBytes ( ) )
20344	assertEquals ( expected, elements )
20345	assertEquals ( "OK", rc. put ( "/a02", "OK" ). run ( ). getBody ( ). asString ( ) )
20346	assertEquals ( "Village_pump_technical", output. get ( 0 ) )
20347	assertEquals ( "12 minutter siden", t. format ( new Date ( 0 ) ) )
20348	assertEquals ( expResult, actual )
20349	assertThat ( taskService. createTaskQuery ( ). taskDelegate ( "demo" ). count ( ), is ( 1L ) )
20350	assertEquals ( e1, e2 )
20351	Assert. assertArrayEquals ( expected, processed )
20352	assertEquals ( 0, timeouts. getTimeoutCount ( ) )
20353	assertEquals ( expected, actual )
20354	assertTrue ( zip. size ( ) == zip2. size ( ) )
20355	assertThat ( result, is ( nullValue ( ) ) )
20356	assertEquals ( 1, i )
20357	assertTrue ( r1 instanceof PublicCloneable )
20358	Assert. assertTrue ( result. isValid ( ) )
20359	assertThat ( exitStatus, is ( 42 ) )
20360	assertThat ( outcome. getStartTime ( ), is ( afterDate ) )
20361	Assert. assertFalse ( deal. isAccepted ( ) )
20362	Assert. assertFalse ( result )
20363	assertTrue ( actual. isEmpty ( ) )
20364	assertEquals ( "Timeout", http. getStatusLine ( ). getStatusCode ( ) )
20365	assertEquals ( diffusioncoefficient, result [ 0 ], 0.01 )
20366	assertEquals ( expected, result )
20367	Assert. assertTrue ( Math. abs ( maxAbsDeviation ) < 1E-3 )
20368	assertEquals ( expectedMessage, result )
20369	assertTrue ( saveFile. exists ( ) )
20370	assertEquals ( interactive, interactive1 )
20371	assertOut ( "var /** @type {RegExp} */ a = /test-\\\\d/i" )
20372	assertEquals ( "value", configSource. getProperty ( ) )
20373	assertTrue ( linkList. getLinkList ( )!= null )
20374	assertTaintHasOnlyLabel ( MultiTainter. getTaint ( y ), "testUnthrownExceptionStopsTaintingAtTry" )
20375	Assert. assertEquals ( 0, sut. getWeekdayCountBetweenDates ( start, end ) )
20376	assertEquals ( 5, result. getTotalCount ( ) )
20377	Assert. assertNotNull ( cdf )
20378	Assert. assertEquals ( 1, result )
20379	assertThat ( frontController. processTimeZone ( request ), is ( TimeZone. getDefault ( ) ) )
20380	assertOutputResult ( "testDump2.result", new String ( bos. toByteArray ( ) ), new String [ ] { "${table.timezone}" }, new String [ ] { testingCluster. getConfiguration ( ). getSystemTimezone ( ). getID ( ) } )
20381	Assert. assertEquals ( json, writer. toString ( ) )
20382	assertEquals ( 8, hyperLogLog. cardinality ( ) )
20383	assertThat ( target. equals ( obj ), is ( false ) )
20384	assertTrue ( ss. contains ( "123-abc" ) )
20385	assertThat ( actualResource, IsSame. sameInstance ( actualResource2 ) )
20386	Assert. assertEquals ( false, retval )
20387	assertNotNull ( in )
20388	Assert. fail ( ex. getMessage ( ) )
20389	assertNull ( file )
20390	assertFalse ( result. isPresent ( ) )
20391	assertThat ( domain. getSpec ( ). isLogHomeEnabled ( ), is ( false ) )
20392	assertThat ( fieldError, is ( nullValue ( ) ) )
20393	assertNotNull ( xml )
20394	assertEquals ( 2, z. getUlong ( ) )
20395	assertThat ( errors, hasFieldErrors ( "givenName" ) )
20396	assertEquals ( "___DRI", properties. getRepositoryLocation ( ) )
20397	assertEquals ( configuration. getProperty ( RobeHibernateBundle. CONFIG_PROPERTY_NAME ), RobeHibernateBundle. CONFIG_PROPERTY_NAME )
20398	assertEquals ( "The sequence number of the recoverd.edits and the current edit seq should be same", lastestSeqNumber, editCount )
20399	Assert. assertEquals ( products. size ( ), 5 )
20400	assertTrue ( expectedOrder. isOrdered ( toSort ) )
20401	assertEquals ( 11, rs. get ( 0 ) )
20402	assertEquals ( expectedQuery, actualQuery )
20403	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "xfdfAnnotationReplaceText.pdf", sourceFolder + "cmp_xfdfAnnotationReplaceText.pdf", destinationFolder, "diff_" ) )
20404	assertEquals ( s, sb. toString ( ) )
20405	assertBeanValidation ( json, "query.metric[0].start_time must be greater than or equal to 1" )
20406	assertTrue ( ci1. getValue ( series. getEndIndex ( ) ). doubleValue ( ) < LOW_CHOPPINESS_VALUE )
20407	assertEquals ( "Expected 0 results!", 0, count )
20408	assertEquals ( 2, builder. length ( ) )
20409	assertNotNull ( "Task is null", entity )
20410	context. assertIsSatisfied ( )
20411	assertThat ( predicate. test ( Integer. class ), is ( true ) )
20412	assertEquals ( ", ", string )
20413	assertDelivered ( q, 0 )
20414	assertThatNothingHappened ( jobExecution, lastCreatedJobId, 1 )
20415	Assert. assertEquals ( "include a\\n" + "include b\\n" + "include c\\n", html )
20416	assertTrue ( Float. isNaN ( value [ 0 ] ) )
20417	assertTrue ( Arrays. equals ( run1, run2 ) )
20418	assertThat ( gitClient. getRemoteSymbolicReferences ( repoRoot. getAbsolutePath ( ), Constants. HEAD ), hasEntry ( Constants. HEAD, "refs/heads/master" ) )
20419	assertEquals ( "Should be same", m, new PaintMap ( ) )
20420	assertEquals ( HttpStatusCode. INTERNAL_SERVER_ERROR. getStatusCode ( ), response. getStatusCode ( ) )
20421	assertEquals ( wayLessInEuros, actualValue )
20422	assertEquals ( "node", NodeType. fromGuid ( guid ) )
20423	assertTrue ( a1. compareTo ( a2 ) > 0 )
20424	assertEquals ( new NormalVersion ( new String [ ] { "1.0.0" } ), version )
20425	assertEquals ( "newLabel2", cloneRevisions. get ( 0 ). getVersionLabel ( ) )
20426	assertEquals ( allMethods, allMethods1 )
20427	assertEquals ( ZippelGCD ( a, b ). monic ( ), EZGCD ( a, b ). monic ( ) )
20428	assertNotNull ( context. getBean ( "snsOutboundGateway.snsExecutor", SnsExecutor. class ) )
20429	assertIsNotIdentity ( transform )
20430	assertEquals ( inMap, map )
20431	assertTrue ( success )
20432	Assert. assertEquals ( expectedURL, attr. get ( "xlink:href" ) )
20433	assertNull ( clazz )
20434	assertTrue ( "Single specification should be written", singleSpecification. exists ( ) )
20435	assertArrayEquals ( new int [ ] { 2, 0, 1, 1, 1 }, difference )
20436	assertEquals ( "Samsung Galaxy", galaxy. getPrefLabel ( ) )
20437	assertEquals ( linkName, volume. readLink ( userCredentials, fileName ) )
20438	assertEquals ( 2, object1. getItemName ( ). length ( ) )
20439	Assert. assertEquals ( solrResponseDto, actual )
20440	assertEquals ( expected, actual )
20441	assertEquals ( "folder1/folder2/resource-a8e8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8af8
20442	Assert. assertEquals ( 2, operation. operations. size )
20443	Assert. assertEquals ( violations. size ( ), 0 )
20444	Assert. assertFalse ( "The handler should not have been initialized", TestHandler. INITIALIZED )
20445	assertEquals ( expecetedTableName, builtTableName )
20446	assertEquals ( "<p>Hello <em>there</em> <em>now</em></p>", doc. body ( ). html ( ) )
20447	Assert. assertEquals ( expected, MustacheTemplatePrefixExpander. expand ( input ) )
20448	Assert. assertTrue ( result. getReturnCode ( ) == 200 )
20449	assertNoCause ( "message" )
20450	assertEquals ( EntityConfig. NOT_FOUND, ec )
20451	assertNotNull ( output )
20452	assertThat ( s. getValue ( ), is ( minValue ) )
20453	assertEquals ( 1, $ ( MyCustomLabelElement. class ). all ( ). size ( ) )
20454	context. assertIsSatisfied ( )
20455	assertEquals ( pp. getValue ( ), new Payload < > ( "2 final" ). getValue ( ) )
20456	assertTrue ( got. contains ( "Deleted service account:" ) )
20457	assertThat ( actual, is ( existingContent ) )
20458	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoFormaPagamento ( ). toString ( ) )
20459	context. assertEquals ( "€", buf. toString ( ) )
20460	assertThat ( cut. apply ( select ), is ( false ) )
20461	assertEquals ( "<!-- � � -->", doc. body ( ). html ( ) )
20462	assertEquals ( "the artifact must be downloaded", true, new File ( localRepo, "ant/ant/1.5.1/ant-1.5.1.jar" ). exists ( ) )
20463	assertTrue ( p. isWriteable ( Element. class, null, null, MediaType. valueOf ( "application/custom" ) ) )
20464	assertEquals ( list, result )
20465	assertTrue ( filter. isCalled ( ) )
20466	assertContains ( e. getMessage ( ), "'id'" )
20467	assertThat ( cut. apply ( pageObject ), is ( true ) )
20468	assertNull ( actualObj ( ). get ( "mykey" ) )
20469	assertNotNull ( "Valid class must be returned", factory. getSerializer ( Writable. class ) )
20470	assertEquals ( "http://www.user.com", user )
20471	assertEquals ( "openapi:3.0.0", result. getOpenAPI ( ). getAppVersion ( ) )
20472	assertNotNull ( grid )
20473	assertEquals ( expected, uri. getRawPath ( ) )
20474	Assert. assertEquals ( "P4ssW0rD", obj. getPassword ( ) )
20475	assertStreamEquals ( expectedBackoffs, backoffs )
20476	assertNotNull ( doc )
20477	Assert. assertEquals ( server, result. getFirstHeader ( "Server" ). getValue ( ) )
20478	assertTrue ( loadingTypes. test ( Triple. create ( "foo", "bar", "baz", "c", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz", "baz",
20479	assertTrue (! result )
20480	assertEquals ( sensorType, header. getSensorType ( ) )
20481	assertEquals ( "Incorrect number of analysis runs", 1, result. getRuns ( ). size ( ) )
20482	assertTrue ( true )
20483	assertTrue ( "no exception was thrown", exception )
20484	assertThat ( underTest. isSatisfied ( itemToMatchCondition ), is ( false ) )
20485	assertEquals ( "Wrong network returned", n1, net. initGetNestedNetwork ( ) )
20486	assertEquals ( 1, orgUnits. size ( ) )
20487	Assert. assertTrue ( s. startsWith ( "No message will be sent to " ) )
20488	assertThat ( definition. dataTableType ( ). transform ( emptyTable. asLists ( ) ), is ( asList ( "converts_table_cell_to_string=[]" ) ) )
20489	assertEquals ( expResult, result )
20490	assertEquals ( expected, actual )
20491	assertEquals ( "John", result )
20492	assertNotNull ( getRealm ( ) )
20493	Assert. assertEquals ( "<!--james-->", stringWriter. toString ( ) )
20494	assertEquals ( frameData. hashCode ( ), frameDataAgain. hashCode ( ) )
20495	assertHelpLines ( "Option    Description", "------    -----------", "--apple              ", EMPTY )
20496	assertTrue ( result )
20497	assertEquals ( false, result )
20498	assertEquals ( 0, coverage. getHashLength ( ) )
20499	Assert. assertEquals ( "test-path-includetest-path-include", value )
20500	assertEquals ( "token 2\\n", found )
20501	assertEquals ( value, actualValue )
20502	assertTrue ( "Incorrect mapping of variable property for Asterisk 1.6", actual. indexOf ( "variable: var1=value1\\r\\nvariable: var2=value2\\r\\n" ) >= 0 )
20503	assertEquals ( Arrays. asList ( "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com.", "com."
20504	assertEquals ( expected, members )
20505	TestUtil. assertSuccess ( result )
20506	Assert. assertTrue ( response. contains ( "Invalid content was found starting with element'siteId'" ) )
20507	assertEquals ( "{ \\"field name\\" : { \\"$bitsAllSet\\" : \\"?\\" } }", filterParameters. toString ( ) )
20508	Assert. assertNotNull ( addressResultsDto )
20509	assertEquals ( expResult, result )
20510	assertEquals ( "Stromgol", lastName )
20511	Assert. assertArrayEquals ( encodedValue, byteOutputStream. toByteArray ( ) )
20512	dataLoader. assertDataToJsonEqualsExpectedFileContent ( "shouldInPriceDescOrder.json", result )
20513	assertTrue ( page. asText ( ). contains ( "Invalid ELEvaluation" ) )
20514	assertFalse ( valid )
20515	assertEquals ( "1", o )
20516	assertTrue ( plot. getDomainMarkers ( 99, Layer. FOREGROUND ). contains ( xMarker1 ) )
20517	assertThat ( result. replaceAll ( "\\\\s+", "" ), equalTo ( expectedOutput. replaceAll ( "\\\\s+", "" ) ) )
20518	assertEquals ( new RetrieveImagingDocumentSet ( ), result )
20519	Assert. assertTrue ( urlResponse. status == 401 )
20520	assertEquals ( future, underTest. collect ( futures, collector ) )
20521	assertEquals ( expResult, result )
20522	assertEquals ( "Columns size is wrong", 2, columnList. size ( ) )
20523	assertEquals ( 4, ( ( Number ) equalsMethod. invokeExact ( mapBlock ) ). intValue ( ) )
20524	assertAllCommandsUsed ( )
20525	assertEquals ( 9, author. getId ( ) )
20526	assertMockEndpointsSatisfied ( )
20527	assertEquals ( "Expected 0 results!", 0, n )
20528	Assert. assertNotNull ( jis. getManifest ( ) )
20529	assertEquals ( "um mil e um", actual )
20530	assertTrue ( called. compareAndSet ( false, true ) )
20531	assertEquals ( "{a1:'v1',a2:'123',a3:'null',c1:'xtruex',c2:'x123x',c3:'xnull',c4:'xx'}", r )
20532	assertThat ( propsMap. size ( ), is ( 0 ) )
20533	assertNull ( value. getValue ( 99L ) )
20534	assertTrue ( "syntax should still be in the registry after delete failure", getSyntaxRegistry ( ). contains ( OID ) )
20535	assertEquals ( selector1. hashCode ( ), selector2. hashCode ( ) )
20536	assertEquals ( 1, docs ( ) )
20537	assertEquals ( 128, address )
20538	assertTrue ( result. length ( ) > 0 )
20539	assertThat ( array2, equalTo ( new long [ ] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 } ) )
20540	Assert. assertNotNull ( td )
20541	assertSame ( resultScanner, rowsRead. execute ( bigtableMock ) )
20542	assertEquals ( OTHER_GRAPHITE_URL, backendAlarm. getGraphiteBaseUrl ( ) )
20543	assertEquals ( expected, exts )
20544	assertEquals ( i, f. evaluate ( uf ) )
20545	assertEquals ( "test value", mongoStore. get ( name, sessionId, String. class ) )
20546	assertTrue ( "Incorrect string written", sw. toString ( ). equals ( "This is a test string" ) )
20547	assertEquals ( "failed to generate abstract class with abstract methods", ABSTRACT_CLASS_WITH_ABSTRACT_METHODS, cls )
20548	Assert. assertNull ( "Result is not null", o )
20549	assertTrue ( "Must have a writable ledgerDir", writeDirs. size ( ) > 0 )
20550	assertEquals ( pattern [ 1 ], result )
20551	assertEquals ( "3 啶�啶苦え 啷�啶距う", t. format ( new Date ( 1000 * 60 * 60 * 24 * 7 * 3 ) ) )
20552	assertEquals ( expected, array. toString ( ) )
20553	assertEquals ( sumLabel. getText ( ), String. valueOf ( number ) )
20554	assertThat ( value. getLeft ( ), is ( jsn ( "1800" ) ) )
20555	assertEquals ( "3 �����������������������������������������������������������������������������������
20556	assertEquals ( "incorrect number of mappings found for nhsno2", 2, userMappings. size ( ) )
20557	assertNotNull ( result )
20558	assertEquals ( 1, results. size ( ) )
20559	assertEquals ( - 1, t. indexOfUnquoted ( str, ">>" ) )
20560	arrays. assertContainsOnly ( description, actual, other )
20561	assertEquals ( "text", componentState. getFieldValue ( ) )
20562	assertTrue ( verifier. verify ( input ) )
20563	assertEquals ( r1, r2 )
20564	assertEquals ( origWriteSet, reorderSet )
20565	assertEquals ( "Hello", Util. quote ( o ) )
20566	maps. assertContainsOnly ( someInfo ( ), actual, new Object [ 0 ] )
20567	Assert. assertEquals ( expect_sql, sql )
20568	assertEquals ( "2011-02-23T14:35:42.005Z", parsed. getTime ( ) )
20569	assertThat ( ids, contains ( locId ) )
20570	assertEquals ( expected, actual )
20571	Assert. assertEquals ( l2Uuid, afterClusterUuid )
20572	assertEquals ( 0, clusters. size ( ) )
20573	assertThat ( toUnqualifiedVersionlessIdValues ( result ), containsInAnyOrder ( pt0id. getValue ( ) ) )
20574	assertEquals ( "{\\"foo\\":\\"bar\\",\\"grandchild\\":{\\"foo\\":\\"bar\\"}}}", result. toString ( ) )
20575	Assert. assertEquals ( uuid, uuid2 )
20576	assertTrue ( aNumber == Double. POSITIVE_INFINITY )
20577	assertEquals ( "java.lang.", t. getASTCompilationUnitPackage ( ) )
20578	assertEquals ( "True has to be returned in this case", 128 * 1024 * 1024, inf. getReplication ( ) )
20579	assertEquals ( seaCloudsApplicationData, seaCloudsApplicationDataById )
20580	assertEquals ( 1, ksession. fireAllRules ( ) )
20581	assertEquals ( expectedText, testText )
20582	assertNotNull ( clientSnapshot )
20583	assertThat ( answer, allOf ( containsString ( "Michail" ), endsWith ( "invocationId was 123" ) ) )
20584	assertEquals ( first, ( ( BasicMonthViewUI ) monthView. getUI ( ) ). getFirstDisplayedMonth ( ) )
20585	assertThat ( selectionModel. getSelectedClass ( ), is ( Optional. empty ( ) ) )
20586	assertViewIsNull ( )
20587	Assert. assertArrayEquals ( doubleArray, decompressedArray. array ( ), 0.00001 )
20588	assertEquals ( exp, zF )
20589	assertTrue ( authorizer. isAuthorized ( context, profiles ) )
20590	Assert. assertEquals ( Double. toString ( x ), expected, actual, tol )
20591	assertTrue ( configurationDeserialized )
20592	assertEquals ( 204, response. getStatus ( ) )
20593	Assert. assertEquals ( "password", codec. decode ( "cGFzc3dvcmQ=" ) )
20594	assertNotNull ( Reservation. reader ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "WTXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
20595	assertEquals ( 3, deleter. getDeletionCount ( ) )
20596	Assert. assertEquals ( 1, model. getId ( ). intValue ( ) )
20597	assertEquals ( 10L, impl. getMaxAge ( entry ) )
20598	arrays. assertStartsWith ( description, actual, newArray ( true, false, false, true ) )
20599	assertThat ( os, instanceOf ( Slf4jOutputOutputStream. class ) )
20600	Assert. isTrue ( parent. getChildrens ( ). size ( ) > 0 )
20601	assertThat ( violations. size ( ), is ( 1 ) )
20602	Assert. assertTrue ( item. matches ( divNode ) )
20603	Assert. assertTrue ( "no users returned", users. size ( ) > 0 )
20604	Assert. assertEquals ( retirada, notaInfo. getRetirada ( ) )
20605	assertEquals ( assertion, prepend )
20606	assertTrue ( wordLineCounts. get ( "." ). firstObject ( ) == 12 )
20607	assertEquals ( singletonList ( SimpleClass. class ), actual )
20608	assertEquals ( "[Object released]", v8Object. toString ( ) )
20609	assertEquals ( ace, parsed )
20610	assertTrue ( document. validate ( ) )
20611	assertEquals ( "id,name,isValid,percent,isValid", jsonString )
20612	assertEquals ( "", data )
20613	assertNull ( contextResult )
20614	assertEquals ( "42", method. invoke ( foo ) )
20615	assertEquals ( 2, memo. get ( 1 ) )
20616	assertNumberOfViolations ( constraintViolations, 0 )
20617	assertEquals ( value, testee. resolveRuntimeExpression ( value ) )
20618	assertTrue ( writeLatch. await ( 5, TimeUnit. SECONDS ) )
20619	assertThat ( result, is ( nullValue ( ) ) )
20620	assertEquals ( "ZZZZZZ", function. execute ( "zzzzzz" ) )
20621	assertThat ( sut. getTotalPrice ( ), is ( 4200 ) )
20622	assertThat ( HiveObjectUtils. getParameter ( table, AVRO_SCHEMA_URL_PARAMETER ), is ( "test" ) )
20623	assertEquals ( newHashSet ( "hello", "world" ), result )
20624	Assert. assertEquals ( 8, result )
20625	assertIdentical ( "/simple_core.owl", reasoned )
20626	assertEquals ( "Hello World", getStringFromInputStream ( in ) )
20627	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 2, warnings. size ( ) )
20628	assertEquals ( "123,456", response )
20629	assertThat ( IntegerUtil. toPrimitiveInt ( i ), is ( 1 ) )
20630	assertIsSatisfied ( 2L, TimeUnit. SECONDS, firstOutbound )
20631	assertEquals ( 5, i )
20632	TestCase. assertFalse ( result )
20633	assertEquals ( "The value is not correct.", Long. toString ( date. toEpochMilli ( ) ), value )
20634	assertProcessInstanceCompleted ( processInstance )
20635	assertEquals ( new Sequence ( 2015, 0, 0 ), sequence )
20636	assertEquals ( err. isPresent ( ), false )
20637	assertEvent ( "org/osgi/framework/ServiceEvent/REGISTERED", FilterUtils. eq ( "service.objectClass", "org.knowhowlab.osgi.testing.it.testbundle.service.Echo" ), 2, TimeUnit. SECONDS )
20638	assertThat ( appl, is ( JavaSignatureComparator. MATCH ) )
20639	assertEquals ( 0, descriptor. getParameters ( ). size ( ) )
20640	assertTrue ( "Should be a random branch name", branchManager. isRandomBranchNameAllowed ( randomBranchName ) )
20641	assertTrue ( isHoliday )
20642	assertEquals ( Arrays. asList ( "-v", "-s", "1.0", "-v", "1.1", "-s", "1.1", "-s", "1.1", "-s", "1.1", "-s", "1.1", "-s", "1.1", "-s", "1.1", "-s", "1.2", "1.2", "1.3", "1.4", "1.5", "1.5", "1.6", "1.7", "1.9", "1.9", "1.1", "1.0", "1.1", "1.1", "1.1", "1.1", "1.2", "1.0", "1.2", "1.3", "1.4", "1.5", "1.0", "1.0", "1.0", "1.0", "1.
20643	Assert. assertEquals ( "Preface", text )
20644	assertThat ( javaDocComment, not ( containsString ( "(Required)" ) ) )
20645	Assert. assertFalse ( isValid )
20646	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
20647	Assert. assertEquals ( expected, actual )
20648	Assert. assertEquals ( "stuff\\"more\\";stuff", result )
20649	assertEquals ( expected, result )
20650	Assert. assertEquals ( Permission. NO, providerPermission )
20651	assertTrue ( found )
20652	assertEquals ( OptionalLong. empty ( ), queue. checkTimeout ( ticker. read ( ) ) )
20653	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
20654	assertEquals ( "((hello =='stringgoodbye') and (key1 == 'boolean1'))", jexl )
20655	assertEquals ( Type2. class, init. getType ( ) )
20656	assertTrue ( reversedString. equals ( PHRASE ) )
20657	assertEquals ( 6.1234, mhu. getAbsoluteHumidity ( ), 0.1 )
20658	spliterators. assertHasOnlyCharacteristics ( INFO, actual, DISTINCT )
20659	assertEquals ( 0, lintresult. getIssues ( ). size ( ) )
20660	assertEquals ( dao. getTotalCountPostsToTopics ( user ). size ( ), 0, "Should not return actual count to topics in the first branch" )
20661	assertEquals ( ModelState. DRAFT. getName ( ), savedModel. getState ( ) )
20662	assertFalse ( frameData. equals ( "I" ) )
20663	assertEquals ( "wrong tree", expected, parser. getParseTree ( ) )
20664	assertEquals ( "notNull()", buffer. toString ( ) )
20665	assertEquals ( "stream: input", IOUtils. toString ( result ) )
20666	Assert. assertEquals ( i, obj )
20667	assertEquals ( "JSON serialization is wrong", json1, json2 )
20668	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
20669	assertEquals ( "[Test] expecting:\\n<['Yoda', 'Luke']> to start with:<['Han', 'Leia']>", message )
20670	assertTrue ( filter. allow ( event, listener ) )
20671	assertSingleNotificationType ( EventType. FAILED_AUTHENTICATION )
20672	Assert. assertEquals ( 0., analyser. getTimeWindowViolation ( route, route ), 0.01 )
20673	Assert. assertTrue ( content. contains ( "imports-cleaner" ) && content. contains ( "src" ) )
20674	assertTrue ( g1 instanceof PublicCloneable )
20675	assertThat ( unmarshal ( sb ), allOf ( hasEntry ( "retained explicit key", "retained explicit value" ), hasEntry ( "excluded explicit key", "excluded mdc value" ) ) )
20676	AssertionUtils. multiAssertEquals ( createAsDocument9, response5. getResponseObject ( ) )
20677	assertEquals ( expected, actual )
20678	assertEquals ( VisitStatus. RESERVE_TREE, visit ( node ) )
20679	Assert. fail ( "Exception should be Thrown" )
20680	assertFalse ( connection. isConnected ( ) )
20681	assertEquals ( kv1, kv2 )
20682	assertEquals ( Message. MAGIC, m. magic ( ) )
20683	Assert. assertTrue ( true )
20684	assertEquals ( after. toString ( ), result. toString ( ) )
20685	Assert. assertSame ( "Same request was not returned as expected.", request, request2 )
20686	assertTrue ( err. contains ( "No such user" ) )
20687	assertEquals ( "doc", result. getEntity ( ) )
20688	assertFalse ( timestamps. isEmpty ( ) )
20689	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 09" ) )
20690	Assert. assertEquals ( "Unexpected result: " + result, expectedResult, result )
20691	assertNotNull ( result )
20692	assertEquals ( DecisionTableInterpreter. class. getName ( ), LivingDoc. getInterpreter ( "Calculate" ). getClass ( ). getName ( ) )
20693	assertEquals ( "Unexpected response from " + typeUrl, discoveryResponse, response )
20694	assertEquals ( N, a. length ( ) )
20695	assertEquals ( new Date ( nowDate ), job. getNextRun ( ) )
20696	Assert. assertTrue ( downlodedFile. exists ( ) )
20697	assertCustomerWithLinksSample ( )
20698	assertSqlCanBeParsedAndDeparsed ( stmt )
20699	assertThat ( threads, hasItems ( thread ) )
20700	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"yes\\"?>" + "<fields templateEngineKind=\\"Velocity\\" >" + "<description><![CDATA[A description...]]></description>" + "<field name=\\"developers.Name\\" list=\\"false\\" imageName=\\"\\" syntaxKind=\\"\\">" + "<field name=\\"project.Name\\" list=\\"true\\" imageName=\\"\\" syntaxKind=\\"\\">" + "<description><![CDATA[A field description...]]></description>" + "</field>" + "</fields>", writer. toString ( ) )
20701	assertNotNull ( result )
20702	assertEquals ( total, MIN + MAX )
20703	assertEquals ( "Wrong class", CLS_NAME, ConfigurationUtils. loadClass ( CLS_NAME ). getName ( ) )
20704	assertEquals ( expectedTokens. get ( i ), token )
20705	assertThat ( systemOutRule. getLog ( ), containsString ( "test help" ) )
20706	assertSame ( EMPTY_BUFFER, ChannelBuffers. unmodifiableBuffer ( buf ) )
20707	assertTrue ( contentType. getValue ( ). contains ( expectedformat. getContentType ( ) ) )
20708	assertEquals ( "DotCi", username )
20709	assertOrder ( true, query ( ). sortAscending ( "one" ) )
20710	assertEquals ( "3 ������", t. format ( new Date ( 0 ) ) )
20711	assertThat ( unmarshal ( sb ), hasEntry ( HACK_ATTEMPT, "some value" ) )
20712	assertTrue ( data. isExceptionAtThisTime ( ) )
20713	Assert. assertNotNull ( order )
20714	assertThat ( dialect, instanceOf ( PostgresDialect. class ) )
20715	assertEquals ( expectedDateTime, parsedTime )
20716	assertThat ( objectNode. has ( "bootswatch" ), is ( false ) )
20717	assertEquals ( "http://example.com/300", result )
20718	Assert. assertEquals ( "<table><tr><th>Huge</th></tr></table>", result )
20719	assertEquals ( 257, result )
20720	assertEquals ( expResult, result, 0.0 )
20721	assertEquals ( "This  has some  name.pdf", new PrefixTypesChain ( prefix ). process ( prefix, nameRequest ( "bookmark_name" ). originalName ( "name.pdf" ). text ( "  This   has some $搂掳茅莽" ) ) )
20722	assertEquals ( "test", echo. echo ( "test" ) )
20723	assertArrayEquals ( packet, HandshakeResponse. loadFromPacket ( packet ). toPacket ( ) )
20724	Assert. assertEquals ( "correctreplacement.appendix", result )
20725	assertEquals ( "GBP 0.93", test. toString ( ) )
20726	assertEquals ( "transaction-100:sessionId:99:unique-qualifier", new String ( buf. array ( ) ) )
20727	assertEquals ( 2, players. size ( ) )
20728	assertEquals ( trueCount, trueCount )
20729	Assert. assertEquals ( 1, actionService. list ( ). size ( ) )
20730	assertEquals ( 5l, d. asInt8 ( ) )
20731	assertEquals ( expResult, result )
20732	assertEquals ( JulianDate. of ( 2012, 7, 27 ), test )
20733	assertEquals ( AgentHealthStateDto. STATUS_NOT_FOUND. getStatusCode ( ), result. getCode ( ) )
20734	assertNotNull ( test )
20735	assertEquals ( WebDriverTargets. window ( "test" ), targetLocator. getCurrentTarget ( ) )
20736	assertEquals ( "Mr.Mark.Brutus.Smith.Jr.Esq.", name. getFullName ( ) )
20737	assertTrue ( v1. compareTo ( v2 ) < 0 )
20738	assertEquals ( "http://example.com/fhir/Patient?name=james", capt. getValue ( ). getURI ( ). toString ( ) )
20739	assertResultSetEquals ( expectedRows, resultSet, connectionManager )
20740	Assert. assertEquals ( expected, s, 1e-15 )
20741	assertEquals ( "Unexpected primary style name", "v-form", state. primaryStyleName )
20742	assertFalse ( conv. canConvert ( TriggerContext. class, TriggerContext. class ) )
20743	assertArrayEquals ( expected, encoder. getEncoded ( ) )
20744	assertEquals ( expecteds, actuals )
20745	assertFalse ( service. publish ( "message" ) )
20746	assertEquals ( Math. sqrt ( 8 ), FrontUtils. distanceToClosestPoint ( point3, front ), EPSILON )
20747	assertEquals ( object. booleans, result. booleans )
20748	assertProcessInstanceFinished ( processInstance, ksession )
20749	assertTrue ( true )
20750	Assert. assertEquals ( "Go to <a href=\\"web:http://www.company.com/\\">http://www.company.com/</a> <br>Enjoy!", value )
20751	assertEquals ( expectedMul, multiplied )
20752	assertTrue ( comparePomFiles ( reactorProjects ) )
20753	assertEquals ( 2, result. getSize ( ) )
20754	Assert. assertEquals ( "test", field. getName ( ) )
20755	assertEquals ( expResult, result )
20756	assertThat ( runtimeInfo. getRuntimeClassName ( ), is ( "org.talend.components.simplefileio.runtime.SimpleFileIODatastoreRuntime" ) )
20757	assertThat ( responseWithPath, is ( EXPECTED_CONTENT ) )
20758	assertEquals ( snapshot, lastEscalation. getSnapshot ( ) )
20759	assertEquals ( "repoName", op. repoSpec )
20760	assertEquals ( "Calendar must be invariant to month view calendar", calendar, monthView. getCalendar ( ) )
20761	assertEquals ( Sets. newHashSet ( "ru.kfu.itis.cll.uima.commons.DocumentMetadata", "ru.kfu.itis.issst.evex.Person", "ru.kfu.itis.issst.evex.Organization", "ru.kfu.itis.issst.evex.Artifact", "ru.kfu.itis.issst.evex.Weapon", "ru.kfu.itis.issst.evex.Job", "ru.kfu.itis.issst.evex.Time", "ru.kfu.itis.issst.evex.Event", "ru.kfu.itis.issst.evex.Die", "ru.kfu.itis.issst.evex.StartPosition" ), typeNames )
20762	assertEquals ( "first", cb. getLabelElement ( ). getStyleName ( ) )
20763	assertDataFrame ( frame, streamId, false, data )
20764	assertTrue ( graphElementMock. getGraphIds ( ). isEmpty ( ) )
20765	assertEquals ( - 1, pradf. getNextLineOffset ( ) )
20766	assertFalse ( instance. validate ( file ) )
20767	Assert. assertEquals ( mockA, a1 )
20768	assertEquals ( 12, jpegBitsPerSample ( "test16signed-J2KI.dcm" ) )
20769	assertTrue ( Files. exists ( outFile ) )
20770	Assert. assertNotNull ( "null result from rule execution", result )
20771	assertThat ( rendering, is ( "Two days ago" ) )
20772	assertEquals ( "{\\"store\\":{\\"book\\":[{\\"category\\":\\"reference\\",\\"author\\":\\"Nigel Rees\\",\\"title\\":" + "\\"Sayings of the Century\\",\\"price\\":8.95},{\\"category\\":\\"fiction\\",\\"author\\":\\"Evelyn Waugh\\"," + "\\"title\\":\\"Sword of Honour\\",\\"price\\":12.99},{\\"category\\":\\"fiction\\",\\"author\\":\\"test1\\",\\"title\\":\\"title1\\",\\"price\\":13},{\\"category\\":\\"fiction\\",\\"author\\":\\"test1\\",\\"price\\":13}],\\"returnResult\\":{\\"store\\":{\\"book\\":[{\\"category\\":\\"reference\\",\\"author\\":\\"test1\\",\\"title\\":\\"title1\\",\\"price\\":13}],\\"returnResult\\":{\\"category\\":\\"fiction\\",\\"author\\":\\"test1\\",\\"price\\":13}],\\"returnResult\\":{\\"
20773	assertThat ( formatter. parse ( "April, 14, Heisei 29" ), is ( expected ) )
20774	assertStoppedEventOnValidValue ( table, 0, throwOnEmpty, false )
20775	assertTrue ( failure. cause ( ) instanceof LeadershipTransferFailedException )
20776	assertEquals ( post. getUnsubscribeLinkForSubscribersOf ( TopicSubClass. class ), "/posts/1/unsubscribe" )
20777	Assert. assertTrue ( copyFrom. equals ( builder. offset ( 11, 10 ). build ( ), EqualCondition. COLUMN_WIDTH ) )
20778	assertEquals ( new BigDecimal ( "19.00" ), maximum )
20779	assertBeanValidation ( json, "query.metric[0].aggregators[0].percentile may not be zero" )
20780	assertEquals ( CellImgFactory. class, imgFactory. getClass ( ) )
20781	assertEquals ( Arrays. asList ( mockPath ), modulePathIds )
20782	assertNotNull ( s )
20783	Assert. assertFalse ( ipList. isEmpty ( ) )
20784	assertEquals ( 4.0, dt. intValue ( ), 0.0001 )
20785	assertEquals ( 200, response. getStatusLine ( ). getStatusCode ( ) )
20786	assertEquals ( 2, two. intValue ( ) )
20787	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), not ( hasEnvVar ( "STARTUP_MODE", ADMIN_STATE ) ) )
20788	assertThat ( dialect. addOptimizerHints ( sql, hints ). toString ( ), is ( "SELECT /* SQL_ID */ /*+ INDEX (PUBLIC.TEST_1 test1_ix, test2_ix) */" + System. lineSeparator ( ) + " * FROM PUBLIC.TEST_1" ) )
20789	assertNotNull ( list )
20790	assertFalse ( cs. communicationAllowed ( ) )
20791	assertThat ( orders, is ( equalTo ( expected ) ) )
20792	assertEquals ( attr, mocked. getAttributes ( ) )
20793	Assert. assertTrue ( true )
20794	assertTrue ( "audit should contain change of institutionsCountries", msgs. get ( 0 ). getMessage ( ). contains ( "friendlyName=<institutionsCountries>" ) )
20795	assertEquals ( "Outer class instance variable is 779", 779, ret )
20796	assertSame ( expected, result )
20797	assertEqualsIgnoreWhitespace ( expected, drl )
20798	assertEquals ( expResult, result )
20799	assertThat ( query. tenantIdIn ( TENANT_ONE ). count ( ), is ( 1L ) )
20800	arrays. assertDoesNotContain ( description, actual, other )
20801	assertThat ( anyTS. getMinimum ( MILLI_OF_SECOND ), is ( 0 ) )
20802	Assert. assertEquals ( msg, expected, actual, delta )
20803	assertNull ( result )
20804	assertEquals ( "predicate names not recorded properly in grammar", expectedPreds, preds )
20805	assertTrue ( matcher. find ( ) )
20806	assertThat ( driver. findElement ( By. xpath ( "//script[contains(normalize-space(@id), 'x')]" ) ). getText ( ), is ( "a" ) )
20807	assertEditorClosed ( )
20808	assertFalse ( branch. getSubscribers ( ). contains ( user ) )
20809	assertEquals ( 1, executeSolrQuery ( "firstname_s:John lastname_s:Doe" ). size ( ) )
20810	assertFalse ( validator. validate ( Meta, PUT ). passedValidation ( ) )
20811	assertEquals ( 0, esperEventProcessor. getEventTypeAttributes ( "EventTypeAvg" ). size ( ) )
20812	Assert. assertNotNull ( result )
20813	assertEquals ( true, deadClient. getClient ( ). isBroken ( ) )
20814	assertEquals ( String. valueOf ( i ), masterJedis. get ( key ) )
20815	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
20816	assertEquals ( "Bypass Security", captor. getValue ( ). getName ( ) )
20817	assertEquals ( highest, ( byte ) 0 )
20818	Assert. assertEquals ( pbs, pbs2 )
20819	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
20820	assertEquals ( "2012-08-09 00:00:00", runtime )
20821	assertTrue ( getNoErrorMsg ( ), result )
20822	Assert. assertTrue ( errors. hasGlobalErrors ( ) && errors. getGlobalError ( ). getCode ( ). equals ( PermissionsValidator. ERROR_CODE_EMPTY_SELECTED_IDS ) )
20823	Assert. assertNotNull ( addressResultsDto )
20824	assertEquals ( 3456.098F * 1F, r )
20825	Assert. assertNotNull ( dbRangerServiceList )
20826	assertNotNull ( exception )
20827	assertEquals ( 0, imports. size ( ) )
20828	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPath, cmpPath, destinationFolder, diff ) )
20829	assertThat ( notifier. notify ( notice ), is ( 200 ) )
20830	assertEquals ( Sets. newHashSet ( role1, role2 ), sentryStore. getRolesByGroups ( SEARCH, twoGroups ) )
20831	assertThat ( issues, is ( empty ( ) ) )
20832	assertEquals ( "hello", filterResult. getValue ( ) )
20833	assertEquals ( FilterReply. NEUTRAL, filter. decide ( event ) )
20834	assertTrue ( "Handler wasn't run", ran. get ( ) )
20835	assertThat ( references. size ( ), equalTo ( 0 ) )
20836	assertEquals ( "Streams should be returned", streams. size ( ), 1 )
20837	assertTrue ( envVars. size ( ) == 0 )
20838	assertThat ( table. toString ( ), is ( "TinyTables[value=false, width=3, height=3, width=4, height=4, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, width=0, height=0, width=0, height=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, border=0, width=0, height=0, width=0, height=0, border=0, border=0, border=0, border=
20839	assertEquals ( context, classLoaderContextStr. get ( ) )
20840	assertEquals ( exp, "superInterface" )
20841	assertEquals ( 1, result )
20842	assertEquals ( 100L, proxy. toString ( ) )
20843	assertThat ( goModFromProject, equalTo ( goModAsString ) )
20844	Assert. assertEquals ( 24, targetHours. longValue ( ) )
20845	assertEquals ( Arrays. asList ( testWriters. toArray ( ) ). toString ( ), Arrays. asList ( Arrays. copyOf ( movie. getWriters ( ). toArray ( ), 1 ) ). toString ( ) )
20846	assertEquals ( alpha, res, 0.01 )
20847	Assert. assertTrue ( "did not find expected output in output", false )
20848	assertTrue ( response. contains ( "ServerTemplate is not fully configured as expected" ) )
20849	assertEquals ( map1, map2 )
20850	assertNotNull ( javaxSchema )
20851	assertThat ( result, is ( "def" ) )
20852	Assert. assertFalse ( compare. doCompare ( trigger ) )
20853	assertNotNull ( ethNshRsp. getFlowRspId ( ) )
20854	assertEquals ( firstWord, futureWord. get ( ) )
20855	assertEquals ( expected, actual )
20856	assertEquals ( "getTableNames", testFixture. beforeTableName ( "test" ) )
20857	assertEquals ( 404, response. getStatus ( ) )
20858	assertEquals ( 2147483647L, h )
20859	assertTrue ( keyValueTableView. getItems ( ). size ( ) == 3 && keyValueTableView. getValueMaxWidth ( ) == 20.0 && keyValueTableView. getKeyMaxWidth ( ) == 20.0 )
20860	context. assertIsSatisfied ( )
20861	assertThat ( result. getType ( ), is ( type ) )
20862	assertEquals ( expected, result )
20863	assertEquals ( page1, wizard. navigateToFirst ( ) )
20864	assertEquals ( expected, actual )
20865	assertNull ( subscriptionService. deleteSubscriptions ( unsubscribeContext ) )
20866	assertMockEndpointsSatisfied ( )
20867	assertThat ( querys, is ( contains ( Arrays. asList ( "SELECT /* sqlid_test/select_product_custom */", "\\t*", "FROM", "\\tPRODUCT", "WHERE 1 = 1", "ORDER BY PRODUCT_ID" ) ) ) )
20868	assertEquals ( "////! \\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", encodeStr )
20869	assertThat ( routing. route ( request, "/abc/part1/part2" ), is ( "/abc?path=" + URLEncoder. encode ( "part1/part2/partN", "UTF-8" ) ) )
20870	assertEquals ( 200, response. getStatus ( ) )
20871	assertEquals ( 3, artifact. getComment ( ). size ( ) )
20872	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 01" ) )
20873	mockery. assertIsSatisfied ( )
20874	assertNotNull ( Sim. reader ( ). read ( ) )
20875	assertEquals ( expectatedMessage. trim ( ), e. getMessage ( ). trim ( ) )
20876	assertEquals ( "prefix_1_suffix", template. format ( getResolver ( ) ) )
20877	assertThat ( page2, is ( page1 ) )
20878	Assert. assertTrue ( pss. toString ( ). contains ( "12.3" ) )
20879	assertThat ( base. thenApplyFailed ( failedFn, other ), is ( new ImmediateFailed < > ( caller, other ) ) )
20880	Assert. assertEquals ( "Expected HTTP 404 to be returned as process instance doesn't exist.", Response. Status. NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
20881	assertFalse ( isMappingModelExists ( ) )
20882	assertEquals ( expResult, result )
20883	assertEquals ( maxSize, cacheManager. getMaximumSizeMB ( ) )
20884	Assert. assertFalse ( json. has ( DATA_NAME ) )
20885	assertFalse ( constraintValidator. isValid ( Money. of ( 0, "EUR" ), null ) )
20886	assertEquals ( exp, act )
20887	assertFalse ( lhs. equals ( rhs ) )
20888	assertNull ( graph )
20889	assertEquals ( 4, classes. length )
20890	assertResult ( "checking multiple-root branches with no skip" )
20891	assertThat ( result, is ( nullValue ( ) ) )
20892	Assert. assertThat ( t, matchesKey ( "INT" ) )
20893	assertEquals ( token. serialise ( ), result. serialise ( ) )
20894	assertEquals ( true, result )
20895	assertEquals ( url, dataURL. toString ( ) )
20896	UnitTestUtils. assertEquals ( "preMultiply(Vector) returns wrong result", diagResult, denseResult, 0d )
20897	assertThat ( e. hasMoreElements ( ), is ( false ) )
20898	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
20899	assertEquals ( expected, result )
20900	assertEquals ( Status. SUCCESS, status )
20901	assertThat ( jsonOutputStreamParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/jsonmarshallertest/testTags.json" ) ) )
20902	assertEquals ( Join. Type. WINDOWING, join. getType ( ) )
20903	assertEquals ( val. getDiscountRate ( ), Rate. of ( 0.03 ) )
20904	Assert. assertEquals ( expected, actual )
20905	assertEquals ( tempFileName, appender. getFileName ( ) )
20906	assertEquals ( 1, ourUpdatedObservations. size ( ) )
20907	assertEquals ( expected, actual )
20908	assertEquals ( "Date parsed by DateParser(\\"timestamp\\") wrong parsed", dateToCompare, date )
20909	assertEquals ( dataQuality. get ( p2 ), params. get ( p1 ), 0.05 )
20910	assertListTEquals ( listT, 42, 24 )
20911	assertNotNull ( tf )
20912	assertThat ( encoded, stringContainsInOrder ( "{", "\\"resourceType\\": \\"Patient\\",", "\\"contained\\": [", "{", "\\"resourceType\\": \\"Condition\\",", "\\"id\\": \\"1\\"", "}", "],", "\\"extension\\": [", "{", "\\"url\\": \\"test\\",", "\\"valueReference\\": {", "\\"reference\\": \\"#1\\"", "}", "}", "],", "\\"birthDate\\": \\"2016-04-05\\"", "}" ) )
20913	assertMockEndpointsSatisfied ( )
20914	assertEquals ( expected, UssdStreamEvent. buildUssdStreamEvent ( ) )
20915	assertEquals ( null, def )
20916	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5, 6 ) ) )
20917	assertEquals ( 5, tuple. len ( ) )
20918	editor. assertProblems ( "my-repo|Unused", "uri|Unused", "my-repo|Unused", "uri|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo|Unused", "my-repo
20919	assertEquals ( new Date ( 2009 ), toml. getDate ( "d", new Date ( 2009 ) ) )
20920	Assert. assertEquals ( ImmutableList. of ( ThresholdFilterHeaderExtender. FILTER_GT_MIN_GQ ), annotator. getFiltersFor ( gt ) )
20921	assertEquals ( "Wrong number of unread messages", 3, messages. size ( ) )
20922	assertEquals ( 500, page. getWebResponse ( ). getStatusCode ( ) )
20923	assertThat ( request, is ( request2 ) )
20924	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
20925	assertEquals ( getClass ( ). getPackage ( ). getName ( ), packageName )
20926	assertFalse ( next )
20927	assertEquals ( "bar", options. syntaxModule ( ) )
20928	assertUpdatedVasyaAndPetya ( all )
20929	assertTrue ( domain, domain. contains ( "EPSG:4326" ) )
20930	Assert. assertTrue ( resources. getResourceNames ( ). isEmpty ( ) )
20931	assertEquals ( "parent for modes", listing. getChildren ( ). get ( 0 ). getValue ( ) )
20932	assertEquals ( "a composer", id3v2Tag. getComposer ( ) )
20933	assertTrue ( secondPolyElement. hasCommonNode ( testNode1 ) )
20934	assertFalse ( HttpMessageUtils. isJson ( message ) )
20935	assertEquals ( 0, simpleTable. getColumnCount ( ) )
20936	assertEquals ( 1, list. size ( ) )
20937	assertEquals ( expectedInstanceTypes, instanceTypes )
20938	assertTrue ( h == null )
20939	assertEquals ( HttpStatus. SC_BAD_REQUEST, responseEntity. getStatusCode ( ) )
20940	Assert. assertEquals ( "MDC is wrong", "bar", mdc. get ( "foo" ) )
20941	assertTrue ( response. isSuccess ( ) )
20942	assertEquals ( "Hello World", games. getProperty ( "500006.name", "Hello World" ) )
20943	assertEquals ( 0, scope. size ( ) )
20944	assertEquals ( InterpreterResult. Code. SUCCESS, ret. getCode ( ) )
20945	Assert. fail ( "An InterceptionException should have been thrown" )
20946	assertEquals ( Sets. newHashSet ( "server=server1->db=customers->table=purchases->select", "server=server1->db=analyst1", "server=server1->db=jranalyst1->table=*->select", "server=server1->functions" ), backend. getPrivileges ( Sets. newHashSet ( "manager" ), ActiveRoleSet. ALL ) )
20947	Assert. assertEquals ( PersistenceState. NOT_PERSISTED. toString ( ), fileInfo. getPersistenceState ( ) )
20948	assertNotNull ( authorModel )
20949	assertFalse ( sf. getCache ( ). containsEntity ( AnnotatedEntity. class, 0L ) )
20950	assertNull ( myDtoClass )
20951	assertTrue ( newBehavior. isElectionScheduled ( ) )
20952	assertNotNull ( result )
20953	Assert. assertTrue ( sparkRestClient. killJob ( ). withSubmissionId ( submissionId ). isSuccessful ( ) )
20954	assertThat ( NoReasonsAllowed. noReasonsAllowed ( ), not ( allows ( reason ) ) )
20955	assertThat ( result, is ( jsonString ( "office" ) ) )
20956	assertEquals ( "?p2=v2", query. toString ( ) )
20957	assertEquals ( expected, output. toString ( ). trim ( ) )
20958	assertEquals ( Result. FAIL, ok. apply ( item ) )
20959	assertEquals ( "REALLY_labelled", mm. get ( m. expandPrefix ( "p:thing" ) ) )
20960	TestUtils. assertEquals ( new Array2DRowFieldMatrix < > ( testDataPlus2 ), m. scalarAdd ( new Dfp ( 2 ) ) )
20961	assertEquals ( new String [ ] { "root" }, treeContent )
20962	assertTrue ( cluster. isMaster ( ) )
20963	assertEquals ( 2, list. size ( ) )
20964	assertNull ( x. getValue ( ) )
20965	assertThat ( estimator. getCardinality ( ), is ( 16L ) )
20966	assertEquals ( ( Byte ) Byte. MAX_VALUE, extractedByte )
20967	Assert. assertEquals ( "A 11.", output )
20968	assertEquals ( "<p><del>123</del></p>", result )
20969	assertEquals ( insets, classUnderTest. getBorderInsets ( mockComponent ) )
20970	rule. assertScenarioEnded ( )
20971	assertEquals ( V8_ARRAY, v8Object. getType ( "key" ) )
20972	assertThat ( queriesString, is ( "type=BasicFlow" ) )
20973	assertThat ( rasterNames, equalTo ( expected ) )
20974	assertThat ( fieldError, is ( nullValue ( ) ) )
20975	assertEquals ( expected, actual )
20976	assertSignalEventDefinition ( "end", "signal" )
20977	assertEquals ( 6, g. getTopologies ( ). size ( ) )
20978	assertThat ( hourToRollup. compareTo ( hourToStop ), is ( - 1 ) )
20979	AssertAnnotations. assertToken ( tokens, select ( jcas, Token. class ) )
20980	assertEquals ( 1, result. getFailures ( ). size ( ) )
20981	assertEquals ( TEST_BLOCK_SIZE, buf. readableBytes ( ) )
20982	assertEquals ( "/topic", anotherClient. getTopic ( ) )
20983	assertTrue ( resultFuture. get ( 10, TimeUnit. SECONDS ) )
20984	assertEquals ( "Stratio Decision", name )
20985	Assert. assertEquals ( 2, numUdocs )
20986	assertTrue ( "Iframe should be opened in non-ios tab, but it is not", containsFileIframe )
20987	assertTrue ( log. contains ( logMessage ) )
20988	assertStreamOpenedExactlyOnce ( )
20989	assertContentEquals ( style, Arrays. asList ( "MessagePresenter", "MessagePresenter" ) )
20990	Assert. assertTrue ( "Expected: 'Hello John Doe' Actual: " + hi. getName ( ), "Hello John Doe". equals ( hi. getName ( ) ) )
20991	assertOut ( "var /** @type {string} */ a" )
20992	Assert. assertTrue ( servlet. isDebugMode ( ) )
20993	assertEquals ( null, actionProgress. getActionName ( ) )
20994	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
20995	assertEquals ( 1, issueTrackerService. getIssueTrackerDao ( ). getIssueTrackerTasksCount ( ) )
20996	assertEquals ( suggestedName, hiveDatabaseMeta. generateColumnAlias ( columnIndex, suggestedName ) )
20997	assertEquals ( 2, fields. size ( ) )
20998	assertTrue ( detail )
20999	assertEquals ( true, cluster. getDataNodes ( ). get ( 0 ). isBPServiceAlive ( cluster. getNamesystem ( ). getBlockPoolId ( ) ) )
21000	assertIsSatisfied ( 2L, TimeUnit. SECONDS, secondOutbound )
21001	assertEquals ( VersionState. UNCHANGED, toscaDiff. getState ( ) )
21002	assertTrue ( validScrollRange. contains ( getGridVerticalScrollPos ( ) ) )
21003	Assert. assertEquals ( Sets. newHashSet ( "testing-reference-counting" ), takenEvents )
21004	assertEquals ( 0, branch_conditions. size ( ) )
21005	Assert. assertEquals ( expected, actual )
21006	Assert. assertEquals ( HttpStatus. SC_NOT_FOUND, result. getCode ( ) )
21007	assertSame ( resolvedContextActivity, myContextActivity )
21008	assertNonAccessibleDefaultAccessControl ( result )
21009	assertTrue ( testFailed. isEmpty ( ) )
21010	Assert. assertEquals ( expected, actual )
21011	assertEquals ( "/", r. matches ( Collections. < String, String > emptyMap ( ) ). render ( ) )
21012	assertNotNull ( result )
21013	assertTrue ( result )
21014	assertEquals ( 4., pickup. getArrTime ( ), 0.01 )
21015	assertEquals ( ( ( ObjectWithOptions ) options. optOp ). required, 10101 )
21016	Assert. assertEquals ( createEmbedding ( v0, e0, v1, e1, v2, e2, e3, v4 ), result. get ( 0 ) )
21017	assertEquals ( 0.5f, w. getValue ( ), 0.01 )
21018	assertEquals ( tstName, rel. getName ( ) )
21019	assertEquals ( numOutputs, 3 )
21020	assertEquals ( points, arm. getPopNoeuds ( ) )
21021	assertTrue ( millisWithNoWait > millisWithWait )
21022	assertServiceResource ( resource )
21023	assertThat ( component. execute ( ), is ( expected ) )
21024	assertions. doesNotContain ( ( short ) 4, index )
21025	assertThat ( arguments. get ( 0 ). getValue ( ), is ( equalTo ( nullValue ( ) ) ) )
21026	assertEquals ( expResult, result )
21027	assertEquals ( record. getId ( ), vlr. getVehicleId ( ) )
21028	Assert. assertEquals ( "First Tab\\nSecond Tab", resultPage. getText ( ) )
21029	assertTrue ( cause instanceof SocketTimeoutException )
21030	assertTrue ( Futures. getUnchecked ( collector ) )
21031	assertEquals ( jaasConfigService, inputMeta. getJaasConfigService ( ) )
21032	assertEquals ( t, new HttpURL ( s ). toString ( ) )
21033	assertEquals ( "1", mustache. render ( Gson. fromJson ( new StringReader ( "[\\"1\\",true,null]" ) ) ) )
21034	assertEquals ( "a", object. getStringValue ( ) )
21035	Assert. assertEquals ( hmacExpected, hmac )
21036	assertThat ( other, LocalDateTimeMatchers. sameSecondOfMinute ( date ) )
21037	assertEquals ( "2012-09-01T10:00:00Z", Deencapsulation. getField ( jobsParser, "startTime" ) )
21038	assertTrue ( this. reconnectManager. isValidTask ( task ) )
21039	assertEquals ( asList ( 100, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, -
21040	assertThat ( server1, not ( equalTo ( server2 ) ) )
21041	assertEquals ( code, actualContent )
21042	assertEquals ( "foo", occ. getFullyQualifiedName ( ) )
21043	assertTrue ( messageLatch. await ( 1, TimeUnit. SECONDS ) )
21044	Assert. assertEquals ( "b", input. getName ( ) )
21045	assertEquals ( Integer. valueOf ( 2 ), parseResults. get ( FILE_PATH ). getHitsByLine ( ). get ( BRANCH_LINE ) )
21046	assertEquals ( "涓�����������������������������������������������������������������������������������
21047	assertNull ( e. getRenderingEngine ( ) )
21048	assertEquals ( expected, actual )
21049	Assert. assertEquals ( "[1, 2, 3, 4, 6, 7, 5]", result. toString ( ) )
21050	assertTrue ( new File ( stitchedProductFile, "F1_BT_io.nc" ). exists ( ) )
21051	assertEquals ( newFileBackedCache. getCacheSize ( ), 100 )
21052	assertEquals ( "test", regExp )
21053	assertEquals ( callbackCaptor. getValue ( ). getClass ( ), ValueBoxEditor. FileUploadEditorCallback. class )
21054	assertEquals ( "Usage: java -jar java.io.File", lineArgs. getRequestsHelp ( ) )
21055	Assert. assertEquals ( key4, actual )
21056	assertNull ( nbr1 )
21057	assertEquals ( Boolean. TRUE, result )
21058	assertFalse ( filter. isDetected ( ) )
21059	assertTrue ( result. succeeded ( ) )
21060	assertTrue ( "Chars not written", new String ( buf, 0, testString. length ( ) ). equals ( testString ) )
21061	assertLife ( playerA, ANY_LIFE_TOTAL )
21062	assertThat ( decodedValue, is ( actualValue ) )
21063	assertTrue ( logger. isInfoEnabled ( ) )
21064	assertThat ( this. appRegistryService. find ( "sink", ApplicationType. sink ). getApps ( ), hasItem ( "sink.foo" ) )
21065	assertTrue ( result )
21066	assertEquals ( expected, result,.000001 )
21067	assertThat ( list, ( Matcher ) contains ( new Object [ ] { "1", "1" }, new Object [ ] { "1", "1" } ) )
21068	assertEquals ( "bar", result )
21069	assertEquals ( extractedYAML, expectedYAML )
21070	assertArrayEquals ( new String [ ] { "value1", "value2" }, strings )
21071	assertEquals ( "[[Matt]]", results. toString ( ) )
21072	assertEquals ( Tuple3. of ( 1, "abc", 1.0f ), xtriple ( sf, xint ( ), xstring ( ), xfloat ( ) ). extract ( "foo;1;17;abc;1.0" ) )
21073	assertNode ( "/", "mode:root" )
21074	assertEquals ( expectValue, actualValue )
21075	assertEquals ( "BEGIN\\n" + "UPDATE table1\\n" + "SET a = 'xx' WHERE b = 'condition1';\\n" + "SET a = 'xx' WHERE b = 'condition2';\\n" + "END;", stmts. toString ( ) )
21076	assertEquals ( "&amp;", unescaped )
21077	Assert. fail ( "IllegalStateException should have been thrown" )
21078	assertEquals ( "New Test room", room. getName ( ) )
21079	assertEquals ( "http://localhost:8080/throwmeyling", response. getURI ( ) )
21080	assertEquals ( expr, printConstraint ( expression ) )
21081	Assert. assertEquals ( Status. OK. getStatusCode ( ), resp. getStatus ( ) )
21082	Assert. assertEquals ( result_backward_with_cats_and_prefix, result )
21083	assertTrue ( "result=" + result, result )
21084	assertTokens ( Tokens. RP, Tokens. RP, new IntValueToken ( 1 ) )
21085	assertThat ( axioms. isEmpty ( ), is ( true ) )
21086	assertTrue ( arbitratorField. get ( subject ) instanceof Arbitrator )
21087	assertNotNull ( role )
21088	assertThat ( Util. intValue ( "foo", scope ), is ( 42 ) )
21089	assertEquals ( TEST_2007_07_16_PONE, t )
21090	Assert. assertEquals ( expected, filterResult )
21091	assertThat ( target, is ( notNullValue ( ) ) )
21092	assertEquals ( 0, consumerPrefetch. retriesAttempted )
21093	assertThat ( keyspace. getCql ( ), is ( equalTo ( "CREATE KEYSPACE IF DURABLE WRITES OFF" ) ) )
21094	assertThat ( results, is ( Arrays. asList ( "Hello, world!" ) ) )
21095	assertEquals ( arr, dup )
21096	assertNotSame ( filterOriginal, filterable. getFilter ( ) )
21097	assertThat ( "generator-set-2.xml", generatorSet, is ( expected ) )
21098	assertEquals ( 1d / ( 100d / 95 ), numberOfTicks. calculate ( series, t ), TATestsUtils. TA_OFFSET )
21099	Assert. assertTrue ( version1. equals ( version2 ) )
21100	assertEquals ( false, result )
21101	assertThat ( scoping. getScoping ( ), is ( instanceOf ( EagerSingleton. class ) ) )
21102	assertEquals ( "baz/\\n" + "  foo/\\n" + "    bar/\\n" + "      wooz/\\n" + "    rooz/\\n" + "    bar/\\n" + "      wooz/\\n", sw. toString ( ) )
21103	assertEquals ( NodeValue. FALSE, r )
21104	assertThat ( driver ( ). context ( ), is ( equalTo ( WEBVIEW ) ) )
21105	assertTrue ( executor instanceof SequentialTaskExecutor )
21106	assertEquals ( 0, properties. getProperties ( ). size ( ) )
21107	assertEquals ( "Expected 0 results!", 0, n )
21108	assertEquals ( "Registered alias should be found.", "/testAlias", OSGiCleanMapper. map ( "/testAlias/index.html", true ) )
21109	assertEquals ( - 10., c, 0.01 )
21110	assertArrayEquals ( new String [ ] { "Amnicon Falls State Park", "Big Foot Beach State Park", "Mill Bluff State Park", "Roche-A-Cri State Park", "Willow River State Park", "Wyalusing State Park" }, wiStateParks )
21111	Assert. assertEquals ( expected, actual )
21112	assertEquals ( BAD_REQUEST. getStatusCode ( ), response. getStatus ( ) )
21113	assertNotNull ( t )
21114	assertThat ( fe, notNullValue ( ) )
21115	assertThat ( "String schema", combined, matches ( new SchemaMatcher ( expected ) ) )
21116	assertEquals ( playlist1, playlist2 )
21117	assertEquals ( 1, pagedResult. getTotalPages ( ) )
21118	assertEquals ( 2, tasks. size ( ) )
21119	assertTrue ( Initialize. checkInit ( fs, sconf, conf ) )
21120	assertFalse ( interfaceType. isPrimitive ( ) )
21121	assertEquals ( "SELECT Account.Id, (SELECT Account.Id FROM ParentAccounts) FROM Account WHERE Account.Id = 'x'", visitor. getQuery ( ). toString ( ). trim ( ) )
21122	assertEquals ( element. skipLines ( ), 0 )
21123	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoItemProduto ( ). toString ( ) )
21124	TestCase. assertFalse ( attribute. match ( t ) )
21125	Assert. assertNotNull ( appStatsCenter )
21126	assertEquals ( "Expected response not seen.", "NOAPP", response )
21127	Assert. assertNull ( "Value should not be found.", value )
21128	assertEquals ( Lists. newArrayList ( Interval. of ( 1, 2 ), Interval. of ( 8, 10 ), Interval. of ( 15, 18 ) ), intervals )
21129	assertThat ( read ( format, written ), contains ( 3.14d ) )
21130	Assert. assertEquals ( String. class, clazz )
21131	assertThat ( "registered", monitor. isRegistered ( ), is ( true ) )
21132	assertThat ( allDbs. size ( ), is ( 10 ) )
21133	assertEquals ( "attribute not found", newValue, nsae. getAttribute ( ) )
21134	assertTrue ( checkPoint )
21135	Assert. assertEquals ( StatusCodes. NOT_FOUND, result. getStatusLine ( ). getStatusCode ( ) )
21136	assertEquals ( "with SURVEY (ID, NAME) as (select survey2.ID, survey2.NAME\\n" + "from SURVEY survey2)\\n\\n" + "from dual", q. toString ( ) )
21137	assertThat ( other, DateMatchers. sameSecondOfMinute ( date ) )
21138	assertEquals ( expResult, result )
21139	assertNotNull ( User. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
21140	assertEquals ( 50, wnd. getAvg ( ), 0 )
21141	assertThat ( target. matchExactly ( match ), is ( false ) )
21142	assertThat ( cache. reload ( loader ), is ( true ) )
21143	assertEquals ( "test-index-pattern", defaultPattern )
21144	assertRequest ( "POST", "Verification/Subaccounts/" )
21145	assertEquals ( 0, a. length )
21146	Assert. assertEquals ( "Invalid conditions returned", Arrays. asList ( condTrue1, condTrue2 ), orTest. getConditions ( ) )
21147	assertTrue ( Vec. isVec ( aSub, bSub ) )
21148	assertThat ( unitsIn ( result ). size ( ), is ( 0 ) )
21149	assertEquals ( results. size ( ), 2 )
21150	assertEquals ( expectedResult, reinforcement. invoke ( audit ) )
21151	assertEquals ( objects, root )
21152	assertEquals ( "Should return FAILURE", "failure", jsonObj. get ( "status" ). getAsString ( ) )
21153	assertTrue ( tag )
21154	testContext. assertNull ( returnedExpireValue )
21155	assertEquals ( "tomorrow", result. getParameters ( ). get ( "date" ). getAsString ( ) )
21156	assertCorrectVariableInitialisation ( new long [ ] { length }, array )
21157	Assert. assertEquals ( a * FastMath. cosh ( w * v + p ), f. value ( v ), 0 )
21158	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. REPLACE, v, TERM_FACTORY. getConstantLiteral ( "^Ste(v|ph)en$" ), TERM_FACTORY. getConstantLiteral ( "" ) ), translation )
21159	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
21160	assertEquals ( "select * from pg_catalog.pg_catalog", executeSqlCommand )
21161	assertThat ( value, contains ( remoteRepository ) )
21162	assertThat ( this. url, is ( equalTo ( "/context/dispatcher/method" ) ) )
21163	assertEquals ( IOTester. VALUE_OUT_PAYLOAD, buf. toString ( ) )
21164	assertEquals ( expected, result )
21165	assertEquals ( s3, unassigned. iterator ( ). next ( ) )
21166	Assert. assertEquals ( Constants. GENERIC_SERIALIZATION_BEAN, url. getParameter ( Constants. GENERIC_KEY ) )
21167	Assert. assertEquals ( Sets. newHashSet ( 1 ), parser. getSecureBindIndices ( ) )
21168	assertEquals ( "SELECT * FROM recordA " + "WHERE id = 1 AND name = 'Jim' AND value = 'val1' AND meta2 = [], meta = [] WHERE id = 1 AND name = 'Beam' AND meta2 = [] ORDER BY id asc", result )
21169	assertThat ( view. url ( ), is ( expectedUrl ) )
21170	assertSqlCanBeParsedAndDeparsed ( stmt )
21171	assertEquals ( "Basic dXNlcjpwYXNzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
21172	Assert. assertNotNull ( object )
21173	assertEquals ( "Result", 2, map. size ( ) )
21174	assertTrue ( hasGzippedFile. matches ( files ) )
21175	assertEquals ( "service", actual )
21176	assertTrue ( builder == newBuilder )
21177	assertEquals ( "PolicyDomainInfo{SID=1, byte[][0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
21178	Assert. assertEquals ( expected, actual )
21179	assertEquals ( "Status code should be OK", Response. Status. OK. getStatusCode ( ), response. getStatus ( ) )
21180	assertEquals ( HttpStatusCode. INTERNAL_SERVER_ERROR. code, response. getStatus ( ) )
21181	DelegationTestUtil. assertDelegationToSpy ( queueSender )
21182	assertHeader ( header, name, value )
21183	assertEquals ( ChrisProductReaderPlugIn. class, plugIn. getClass ( ) )
21184	assertEquals ( 2, context. getTableCount ( ) )
21185	Assert. assertEquals ( 1, resultsSize ( rc ) )
21186	assertEquals ( 0, runtimeService. createProcessInstanceQuery ( ). processDefinitionKey ( processInstance. getId ( ) ). count ( ) )
21187	assertEquals ( markerName, value )
21188	assertEquals ( expectedExecutionTime, actual )
21189	assertEquals ( string, new String ( IOUtils. toByteArray ( new ByteArrayInputStream ( string. getBytes ( ) ) ) ) )
21190	assertEquals ( searchSupportRest, searchSupportResource. getContent ( ) )
21191	assertNull ( activity. getParent ( ) )
21192	assertEquals ( "sekrit", c. get ( Property. INSTANCE_SECRET ) )
21193	assertThat ( result, equalTo ( false ) )
21194	assertTrue ( elementsEqual ( aEdges, expected ) )
21195	assertEquals ( expected, generator )
21196	assertThat ( resp. statusCode, is ( Response. BAD_REQUEST ) )
21197	assertThat ( description. getTitle ( ), is ( "A step" ) )
21198	assertEquals ( "Wrong mapper found for RuntimeException2", RuntimeExceptionMapper2. class, exceptionMapper. getClass ( ) )
21199	assertFalse ( iter. hasNext ( ) )
21200	assertThat ( result, nullValue ( ) )
21201	Assert. assertNotNull ( app )
21202	assertEquals ( 3, chain. getNumGroups ( ) )
21203	assertNull ( result )
21204	Assert. assertEquals ( null, p. getValue ( ) )
21205	Assert. assertEquals ( "�肩��|灏辫�|��|浜�", words )
21206	assertEquals ( "$${test}", p. getCurrentValue ( ) )
21207	assertThat ( targetType, is ( instanceOf ( MyFactory. class ) ) )
21208	assertEquals
21209	assertEquals ( "Base value is not properly parsed", Long. valueOf ( 3 ), parsed )
21210	assertEquals ( expectedParsedResult, actualParsedResult )
21211	assertNotNull ( "JobSubmission is null", entity )
21212	assertEquals ( original, ArrayUtils. nullToEmpty ( original ) )
21213	assertResponse ( DataMockery. createREQMODWithGetRequestNoBodyResponse ( ), response )
21214	Assert. assertTrue ( originalId. equals ( packetExternal. getID ( ) ) )
21215	assertTrue ( BitsInt. test ( v, 0, 0, 32 ) )
21216	Assert. areEqual ( "1", hs. get ( "count" ). toString ( ), "select count(*) as count from test1 where test1.clum <= 199 " )
21217	assertTrue ( getNoErrorMsg ( ), result )
21218	Assert. assertEquals ( "a{\\n" + "  width: 2px;\\n" + "}\\n", compilation. getValue ( ) )
21219	assertTrue ( AcceptanceTestUtil. isInterested ( component, remoteWorkerStub. getDeploymentID ( ). getServiceID ( ) ) )
21220	Assert. assertEquals ( "(nt_change_substitution (nt_point_location (nt_char C) 123) (nt_char A))", nt_change_substitution. toStringTree ( parser ) )
21221	assertEquals ( vr. getValidity ( ), Validity. INVALID )
21222	assertArrayEquals ( new long [ ] { 5 }, result )
21223	assertEquals ( "myTestId", history. getIdElement ( ). getIdPart ( ) )
21224	assertTrue ( latch. await ( 4, SECONDS ) )
21225	assertEquals ( "Wrong class", MATCH_CLASS, provider. determineConfigurationClass ( decl, Collections. singleton ( params ) ) )
21226	assertEquals ( name. getName ( ), request. getLogName ( ). getName ( ) )
21227	Assert. assertEquals ( 1, ( int ) person. getPersonAttributeId ( ) )
21228	assertMockEndpointsSatisfied ( )
21229	assertEquals ( assertion, viewTest )
21230	assertEquals ( "</6>,</6/0>,</6/0/0>,</6/0/1>,</6/0/2>,</6/0/3>,</6/0/4>,</6/0/5>,</6/0/6>", strLinks )
21231	assertThat ( Util. booleanValue ( "ok", scope ), is ( true ) )
21232	assertPermanentCount ( playerA, mimic, 1 )
21233	assertTrue ( UrlUtils. isMatch ( consumerUrl, providerUrl ) )
21234	assertEquals ( "Wrong number of accounts", 2, accounts. size ( ) )
21235	assertNotNull ( builder )
21236	assertArrayEquals ( splitString, testString3ExpectedSplit )
21237	assertThat ( PrettyTime. of ( Locale. GERMANY ). withReferenceClock ( clock ). printRelative ( PlainTimestamp. of ( 2014, 9, 4, 1, 0 ). atUTC ( ), Timezone. of ( ZonalOffset. UTC ), TimeUnit. HOURS ), is ( "jetzt" ) )
21238	assertEquals ( 30, age )
21239	assertNull ( next )
21240	assertEquals ( "1", e. eval ( ). toPlainString ( ) )
21241	assertEquals ( "a", lc. getLoginIPHeadLikeOr ( ) )
21242	assertNotNull ( result. getRows ( ) )
21243	assertTrue ( r1 instanceof PublicCloneable )
21244	Assert. assertEquals ( 0.0, error, 1.0e-6 )
21245	assertEscalationEventDefinition ( "subProcessStart", "myEscalationCode" )
21246	assertSame ( GBP_2_34, test )
21247	assertEquals ( "Num rows wrong", expectedRows, succeedRows. get ( ) )
21248	assertEquals ( ( byte ) 8, ( byte ) result. getByteWrapperValue ( ) )
21249	Assert. fail ( "Did not throw expected exception for " + o )
21250	assertEquals ( "HTTP/1.1 200 OK", conn2. getHeaderField ( 0 ) )
21251	assertNotNull ( module )
21252	assertEquals ( test1. hashCode ( ), test2. hashCode ( ) )
21253	assertCollectionSerialization ( expected, collection )
21254	assertTrue ( Files. isSameFile ( p1, p2 ) )
21255	assertTrue ( page. asXml ( ). contains ( "com.sun.faces.test.WebConfiguration" ) )
21256	assertThat ( response. getWhoisObjects ( ), is ( empty ( ) ) )
21257	assertEquals ( "8", result )
21258	assertEquals ( aMessage, res )
21259	assertEquals ( 2, postDTOs. size ( ) )
21260	assertAuthenticationResult ( getCurrentTestName ( ), s. auth ( ), false )
21261	assertEquals ( 0, GlobalTransaction. getCurrentTransactionStack ( ). size ( ) )
21262	assertEquals ( "value", config. getString ( "key" ) )
21263	assertEquals ( GROUPS [ 0 ], getSubject ( ). getEnabledGroup ( ) )
21264	assertArrayEquals ( "Default visible columns, " + 3 + " alignments set", defaultAlignments, t. getColumnAlignments ( ) )
21265	Assert. assertEquals ( versao, protocolo. getVersao ( ) )
21266	assertEquals ( expectedNode, actualNode )
21267	assertEquals ( 0, hits. totalHits )
21268	assertNull ( output )
21269	assertEquals ( "Privacy policy generated not equal to the original policy", cisPolicy. toXMLString ( ). replaceAll ( "[\\n\\t]", "" ), privacyPolicy. replaceAll ( "[\\n\\t]", "" ) )
21270	assertNotNull ( provider )
21271	assertThat ( host, is ( equalTo ( "2001:638:700:20d6::1:3a" ) ) )
21272	assertEquals ( "user", node. getProperty ( "user" ) )
21273	assertEquals ( exception, exceptionArgumentCaptor. getValue ( ) )
21274	assertThat ( eqler. queryCnt ( ), is ( 33 ) )
21275	Assert. assertEquals ( expected, s, 1e-15 )
21276	Assert. assertSame ( managerFactory, victim. getManagerFactory ( ) )
21277	assertMeasure ( measure, CommitsPerClockHourMeasure. class, 8 )
21278	assertEquals ( testSesameTripleSubjectObjectBNode, tripleAsStatement )
21279	assertTrue ( "Instruction " + i + " does not match expected template " + template, instructionTextTemplate. matcher ( template ). matches ( ) )
21280	assertEquals ( expResult, result )
21281	assertEquals ( "h2", actual )
21282	assertEquals ( HttpStatusCodes. UNSUPPORTED_MEDIA_TYPE. getStatusCode ( ), response. getStatusLine ( ). getStatusCode ( ) )
21283	assertEquals ( 1024, cli. getOptionValue ( "block size" ) )
21284	assertEquals ( "0: General use CPU\\n" + "1: CPU not available\\n" + "2: Thread[engine,5,main] alive=true\\n" + "3: Thread[main,5,main] alive=true\\n", actual )
21285	assertEquals ( "Incorrect qualifyFreq", 6000, ( int ) response. getQualifyFreq ( ) )
21286	assertEquals ( 0, vid. get ( ). size ( ) )
21287	assertNull ( presenter. identifier )
21288	Assert. assertEquals ( 2, retireable. getRetiredBy ( ). getId ( ). intValue ( ) )
21289	assertEquals ( "From Server 30", client. testPrimitiveTypes ( request ). getOut ( ) )
21290	assertFalse ( "adapter supports unsupported return type", result )
21291	assertSame ( a1, a2 )
21292	files. assertHasDigest ( INFO, actual, algorithm, expected )
21293	assertEquals ( DecodeQualification. SUITABLE, decodeQualification )
21294	assertEquals ( message. toString ( ), sb. toString ( ) )
21295	assertThat ( result, instanceOf ( type ) )
21296	assertNotNull ( crs )
21297	assertThat ( env. mapSize ( ), is ( ( 1_024 * 1_024 ) ) )
21298	assertThat ( response. getContentAsString ( ), is ( equalTo ( update ) ) )
21299	assertThat ( count, is ( 1L ) )
21300	assertThat ( result, is ( instanceOf ( DerivedAllocation. class ) ) )
21301	assertEquals ( i, num )
21302	assertThat ( view. elementIsDisplayed ( By. id ( "some-element" ) ), is ( false ) )
21303	assertTrue ( true )
21304	assertEquals ( 1, ticket. getId ( ) )
21305	Assert. assertEquals ( ValidationResult. Result. ERROR, sink. validate ( null ). getStatus ( ) )
21306	assertArrayEquals ( new byte [ ] { ( byte ) 0x1F, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0
21307	assertEqualsIgnoreWhitespace ( expected, real )
21308	Assert. assertEquals ( 1, result. getEntities ( ). size ( ) )
21309	assertEquals ( "one", fixture. getHeaders ( ). get ( "header1" ) )
21310	assertEquals ( webSocketHandler. calculateHeaderSize ( WebSocketHeader. PAYLOAD_SMALL_MAX ), WebSocketHeader. MIN_HEADER_LENGTH_MASKED )
21311	assertTrue ( washingMachine. isWashing ( ) )
21312	Assert. fail ( )
21313	assertNotNull ( appContext. getResourceDocument ( new StringBufferInputStream ( xml ) ) )
21314	assertTrue ( params. isEmpty ( ) )
21315	assertEquals ( expResult, result, 0.00001 )
21316	assertNotNull ( result )
21317	assertResultsEqual ( net, 100.0, 100.0, 100.0 )
21318	assertThat ( b, is ( true ) )
21319	assertThat ( supported, is ( false ) )
21320	assertThat ( cursor. proceedTo ( 'a' ), is ( true ) )
21321	assertTrue ( capabilities. hasLayer ( "Layer" ) )
21322	assertEquals ( 3, item. getInt ( ) )
21323	assertTrue ( result. size ( ) == 1 )
21324	Assert. assertEquals ( "[6, 2, 8, 1, 4, 3, 5]", values. toString ( ) )
21325	assertNull ( out )
21326	assertEquals ( "2", jv2. toString ( ) )
21327	assertEquals ( "Expected 0 results!", 0, n )
21328	assertEquals ( "test13", handler. getOperationId ( ) )
21329	assertEquals ( "rf-dg-body", ( ( HtmlElement ) dataGrid. getFirstByXPath ( "tbody[@id='dataGrid2:dgb']" ) ). getAttribute ( "class" ) )
21330	assertThat ( objectMessages. getMessages ( ), hasSize ( 0 ) )
21331	assertNotNull ( path )
21332	assertNotNull ( result )
21333	assertErrorEventDefinition ( "end", "myErrorCode", null )
21334	assertEquals ( expected, actual )
21335	assertElementNotPresent ( By. className ( "v-datefield-popup" ) )
21336	assertEquals ( "OK", result. getResult ( ) )
21337	assertSame ( p3, result )
21338	assertSame ( stringMessageBodyWriter, applicationProviders. getMessageBodyWriter ( String. class, null, null, TEXT_PLAIN_TYPE ) )
21339	Assert. assertTrue ( uploadResult. isUploaded ( ) )
21340	assertThat ( students, hasSize ( 0 ) )
21341	assertThat ( underTest. mapArray ( parser, context ), nullValue ( ) )
21342	assertThat ( axioms, hasItem ( axiom ) )
21343	assertArrayEquals ( "Arguments", null, new ConciergePlatformBuilder ( m_bundleContext, "version" ). getArguments ( m_platformContext ) )
21344	Assert. assertNotNull ( addressResultsDto )
21345	Assert. assertEquals ( "SELECT something\\nFROM tbl_name\\nWHERE DATE_SUB(CURDATE(), INTERVAL 30 DAY) <= date_col;", text )
21346	assertEquals ( current. < Long > getAs ( field. name ( ) ), currentTimeMillis )
21347	assertEquals ( "void dest1()", toString ( dest ) )
21348	assertEquals ( BigInteger. class, typeMapping. getType ( 19, 0 ) )
21349	assertEquals ( "b", commandInvocation. args ( ) [ 1 ] )
21350	assertThat ( errors. getAllErrors ( ), hasSize ( 0 ) )
21351	assertEquals ( 2, sensor. getCount ( new MetricName ( "test1.total", "grp1" ) ) )
21352	assertEquals ( before, after )
21353	assertEquals ( testString, outputStream. toString ( ) )
21354	assertEquals ( Direction. RIGHT, processor. next ( board ) )
21355	Assert. assertTrue ( row. matches ( guess ) )
21356	assertThat ( actual, is ( equalToIgnoringWhiteSpace ( expected ) ) )
21357	assertEquals ( file. getName ( ), expected, html. trim ( ) )
21358	Assert. assertEquals ( "36374423", customerprofileId )
21359	assertEquals ( expected, asmResult )
21360	assertEquals ( 1, processorsFactory. getPreProcessors ( ). size ( ) )
21361	assertTrue ( page. asXml ( ). contains ( "Great! You are now in the correct destination view." ) )
21362	assertFuzzy ( min, result, createFromGiven ( 42.0 ) )
21363	assertEquals ( connMock, connection )
21364	assertTrue ( className. equalsIgnoreCase ( Number. class. getSimpleName ( ) ) )
21365	Assert. assertNotNull ( testSession )
21366	assertNull ( fileInfo )
21367	assertFalse ( "unexpected value", value )
21368	assertTrue ( job. getConfiguration ( ). getBoolean ( "mapreduce.framework.name" ) )
21369	assertEquals ( logLine, "log line" )
21370	Assert. assertNotNull ( c )
21371	assertFalse ( taskService. isTaskRan ( ) )
21372	assertProcessInstanceAborted ( processInstance )
21373	Assert. assertNotNull ( tested. prepareESBulkRequestBuilder ( ) )
21374	assertEquals ( player. getHero ( ). getHp ( ), 10 )
21375	assertEquals ( expected, links )
21376	Assert. assertTrue ( success )
21377	assertThat ( option. isNull ( ), is ( true ) )
21378	Assert. assertNull ( identifierType )
21379	Assert. assertEquals ( ste. toString ( ), frame. toString ( ) )
21380	assertEquals ( expected, actual )
21381	Assert. assertEquals ( "THE REASON", retireable. getRetireReason ( ) )
21382	assertEquals ( "From is not properly parsed", new Short ( "2015-02-28" ), mapper. readFrom ( columns ) )
21383	Assert. assertTrue ( maxError > 0.0 )
21384	Assert. assertEquals ( "m2.test.com", hostname )
21385	assertThat ( main. getMarkdownFile ( ), nullValue ( ) )
21386	assertEquals ( expecting, result )
21387	assertEquals ( 0, ids. size ( ) )
21388	assertNull ( p2 )
21389	assertThat ( InterfaceWrapperHelper. getModelTableNameOrNull ( testModelRef ), is ( nullValue ( ) ) )
21390	assertTrue ( ns. isNameOp ( ) )
21391	assertThat ( e. hasMoreElements ( ), is ( false ) )
21392	Assert. assertNotNull ( "The TestRun should not be null", actualTestRun )
21393	assertEquals ( compare. compareType ( ), CompareType. EQUAL )
21394	assertEquals ( 5L, count )
21395	assertEquals ( expected, result )
21396	Assert. assertTrue ( docIn == docOut )
21397	assertThat ( boundSql. getSql ( ), Matchers. equalTo ( "select  ok " ) )
21398	assertEquals ( "the_string", obj )
21399	Assert. assertFalse ( result. isEmpty ( ) )
21400	Assert. assertEquals ( 3, resourceList. size ( ) )
21401	assertTrue (! result )
21402	assertEquals ( "llvalue1", result )
21403	assertEquals ( 1, rulesFired )
21404	assertFalse ( prefs. matches ( t ) )
21405	assertOut ( "var /** @type {URIError} */ a = new URIError()" )
21406	assertTrue ( history. isStepBackAllowed ( ) )
21407	assertThat ( this. shop. getProducts ( ). get ( 0 ), is ( bread ) )
21408	assertEquals ( 0, ns. size ( ) )
21409	assertEquals ( ( ( ObjectWithOptions ) options. optOp ). required, 10101 )
21410	assertThat ( response. getBody ( ), containsString ( "Hello World, Buddy" ) )
21411	assertThat ( description. toString ( ), is ( "got <2> row(s) on sheet <3> expected <3> sheet \\"Sheet1\\"" ) )
21412	assertNotNull ( pwd )
21413	assertEquals ( "John Smith", built. getValue ( ) )
21414	assertEquals ( expected, sb. toString ( ) )
21415	AssertionUtils. multiAssertEquals ( createAsDocument10, response5. getResponseObject ( ) )
21416	assertThat ( response. getStatus ( ), equalTo ( 201 ) )
21417	assertEquals ( result, "John,Jane,Adam,Tom" )
21418	assertEquals ( server. getStatus ( ), TestService. LIFECYCLE. get ( 0 ) )
21419	assertThat ( list. size ( ), is ( 1 ) )
21420	assertEquals ( "V2 Comment", wrapper. getComment ( ) )
21421	assertThat ( encodedURL, equalTo ( URL_ENCODED_URL_VALUE ) )
21422	assertEquals ( "bar", cl. getOptionValue ( "foo" ) )
21423	assertEquals ( padded ( OBJECT_OVERHEAD + OBJECT_REF ) + padded ( ARRAY_OVERHEAD + 7 * CHAR ) + padded ( ARRAY_OVERHEAD + 10 * CHAR ), ThreadTrackingContext. getBytes ( ) )
21424	assertEquals ( expecting, found )
21425	assertThat ( response. getBody ( ), containsString ( "Hello World" ) )
21426	Assert. assertNull ( devBean )
21427	assertEquals ( "rgba(255, 235, 156, 1)", FormulaUtils. parse ( value ) )
21428	assertEquals ( "two dollars", actual )
21429	assertOut ( "<Button />" )
21430	assertEquals ( "submission was not properly returned", 0.0f, percentageComplete, DELTA )
21431	assertNull ( r )
21432	assertFalse ( "result should be false", result )
21433	assertEquals ( "LIMIT 5", statement. toString ( ) )
21434	assertEquals ( Result. FAIL, userGroup. apply ( item ) )
21435	assertEquals ( "<p>This is a paragraph</p>\\n" + "--------------------------\\n" + "This is a paragraph after a horizontal rule</p>\\n", result )
21436	Assert. assertEquals ( 500, statusCode )
21437	assertEquals ( 0, visitedInstructions. size ( ) )
21438	assertEquals ( 0, grid. getSelectedRows ( ). size ( ) )
21439	assertTrue ( pi. isIntercepting ( ) )
21440	Assert. assertEquals ( 2, nics. size ( ) )
21441	Assert. assertThat ( "response.statusCode", version, is ( 200 ) )
21442	assertEquals ( toPercentage ( scale + ZOOM_INCREMENT ), zoomUI. getPercentageZoom ( ) )
21443	Assert. assertNull ( this. manager. get ( this. person1 ) )
21444	assertEquals ( renderGroupIdArtifactIdVersionOptionalResult ( ), result )
21445	assertNotNull ( result )
21446	Assert. assertEquals ( "Container content should be deleted", 0, containerResource. getContents ( ). getContainer ( ). size ( ) )
21447	assertJustDelta ( alpha )
21448	Assert. assertEquals ( "40 minutes ago", prettyTime. format ( prettyTime. calculatePreciseDuration ( new Date ( new Date ( ). getTime ( ) - 40 * 60 * 1000 - 40 * 1000 ) ) ) )
21449	assertNotNull ( dataCollectionState )
21450	assertEquals ( 3, vowelCount )
21451	assertEquals ( base, decomposition. monic ( ) )
21452	assertNotNull ( ref. get ( ) )
21453	assertThat ( actual, is ( equalTo ( expected ) ) )
21454	assertThat ( books, hasItems ( new Book ( "New Book #1", 1 ), new Book ( "New Book #2", 2 ), new Book ( "New Book #3", 3 ), new Book ( "New Book #4", 4 ) ) )
21455	assertThat ( actual, equalTo ( expected ) )
21456	assertEquals ( expecting, found )
21457	assertEquals ( 40, new AcceptsLambda < Integer > ( ). accept ( l ). intValue ( ) )
21458	assertEquals ( RIB_NOT_FOUND, this. output. toString ( ) )
21459	assertTrue ( result >= 33f && result <= 42f )
21460	assertTrue ( event. isPresent ( ) )
21461	assertTrue ( entity. getId ( ) > 0 && entity. getDate ( ) == null )
21462	assertEquals ( 4321L, rep. getInteger64 ( ). longValue ( ) )
21463	assertThat ( result, isFailedCommand ( ) )
21464	Assert. assertThat ( i, is ( 6 ) )
21465	assertTrue ( aNumber == result )
21466	assertEquals ( new Float ( 0 ), minPreference )
21467	assertOut ( "var /** @type {number} */ a = parseInt(\\"666\\", 10)" )
21468	Assert. assertEquals ( configNew, configOld )
21469	assertEquals ( HttpStatusCode. NO_CONTENT. code, response. getStatus ( ) )
21470	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
21471	given ( ). port ( jettyPort ). log ( ). all ( ). when ( ). get ( "/openapi.json" ). then ( ). log ( ). all ( ). assertThat ( )
21472	assertEquals ( "<a>One</a> Two Three <i>Four</i> Fix <i>Six</i>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
21473	assertEquals ( r. size ( ), 0 )
21474	assertEquals ( LockMode. WRITE, mComposite. getLockMode ( ) )
21475	assertEquals ( "no-transform", cc. toString ( ) )
21476	assertEquals ( "Different base hosts", choice1, choice2 )
21477	assertEquals ( var, fr2. getSource ( ). getVariableClass ( ) )
21478	assertThat ( page. getTextValue ( ), is ( "Hello World" ) )
21479	assertEquals ( "0.1", scanner. parse ( "1.23" ) )
21480	assertEquals ( "hdfs://uri1:8200/blah", uri. getName ( ) )
21481	assertEquals ( "california street, ca", real )
21482	assertEquals ( originalFetchCount, timeline. getFetchCount ( ) )
21483	assertTrue ( true )
21484	assertSame ( platformTransactionManager, configuration. getTransactionManager ( ) )
21485	assertEquals ( pp. getValue ( ), new Payload < > ( "error 4 test error" ). getValue ( ) )
21486	assertEquals ( NAME_NODE, action. getNameNode ( ) )
21487	Assert. assertFalse ( policy. isResponseCacheable ( "GET", response ) )
21488	assertTrue ( "Chars not written", new String ( buf, 0, buf. length ). equals ( testString ) )
21489	assertDirectoryNotEmpty ( CSS_LOCATION )
21490	assertEquals ( splits. size ( ), allRecordNum )
21491	assertEquals ( "[x=10.0][y=0.0]", s. getDeliveryLocation ( ). getId ( ) )
21492	FactorDecompositionTest. assertFactorization ( lPoly, decomposition )
21493	assertCursor ( meta. pofClassAttribute, 1, 1, 10, 17 )
21494	Assert. assertEquals ( expectedLoginId, loginId )
21495	assertEquals ( "Must return self", editor, result )
21496	assertEquals ( "Wrong relationship type.", f. getRelationshipType ( ), "knows" )
21497	assertE ( "         " + "         " + "         " + "         " + "         " + "         " + "    xxx   " + "  oxoox  " + "oxooooox " )
21498	assertEquals ( "bar", result )
21499	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
21500	Assert. assertNotNull ( personStructure )
21501	assertEquals ( "test(from getter)", beanWrapper. getPropertyValue ( "hiddenProperty" ) )
21502	assertEquals ( "[{\\"groupName\\":\\"SomeCounterGroupName1\\",\\"counters\\":[{\\"counterNam" + "e\\":\\"AnotherCounterName\\",\\"value\\":4},{\\"counterNam" + "e\\":\\"SomeCounterName2\\",\\"value\\":5},{\\"counterNam" + "e\\":\\"SomeCounterName3\\",\\"value\\":6},{\\"counterNam" + "e\\":\\"SomeCounterName1\\",\\"value\\":7},{\\"counterNam" + "e\\":\\"SomeCounterName2\\",\\"value\\":8},{\\"counterNam" + "e\\":\\"SomeCounterName3\\",\\"value\\":9},{\\"counterNam" + "e\\":\\"SomeCounterName1\\",\\"value\\":10},{\\"counterNam" + "e\\":\\"SomeCounterName3\\",\\"value\\":11},{\\"counterNam" + "e\\":\\"SomeCounterName1\\",\\"value\\":9},{\\"counterNam" + "e\\":\\"SomeCounterName3
21503	assertEquals ( exp, "org.apache.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.commons.common
21504	Assert. assertTrue ( readable )
21505	assertThat ( messageIdLocalPart, is ( "No-Message-Id." + dateTimeProvider. getElapsedTime ( ) ) )
21506	assertTrue ( broker. isPresent ( ) )
21507	assertEquals ( 404, response. getStatus ( ) )
21508	assertEquals ( "(SOURCEFIELD =='sourceValue' AND TARGETFIELD == 'targetValue' AND ENRICHFIELD == 'enrichValue')", transformed )
21509	assertTrue ( false )
21510	assertFalse ( ca. isStrokeEnabled ( ) )
21511	assertTrue ( bpt. getEpochs ( ) > 0 )
21512	assertNotNull ( processesList )
21513	context. assertIsSatisfied ( )
21514	assertEquals ( response. asString ( ), SUCCESS, response. get ( OUTCOME ). asString ( ) )
21515	assertThat ( editor. getValue ( ), is ( ( Object ) ReadPreference. preferSecondary ( new RootDocument ( Arrays. asList ( new DocumentElement ( "a", 1 ) ) ) ) ) )
21516	assertOut ( "var a:Number = 0, b:Number = 0, c:Number = 0" )
21517	assertArrayEquals ( expected, set. toArray ( ) )
21518	assertEquals ( 6, services. size ( ) )
21519	Assert. assertFalse ( verifyTest ( builder ) )
21520	assertPlanMatches ( sort )
21521	assertEquals ( ImmutableList. of ( $2 ( 4, "foot" ), $2 ( 4, "ball" ), $2 ( 6, "bazzar" ) ), Lists. newArrayList ( out. materialize ( ) ) )
21522	Assert. fail ( "build listing failure" )
21523	Assert. assertEquals ( testDN, actual. getUserDN ( ) )
21524	assertEquals ( "ORACLE", rootNode. getProperty ( StandardDdlLexicon. PARSER_ID ) )
21525	assertNull ( count )
21526	Assert. assertTrue ( marshalled. contains ( Namespace. JMX_1_0. getUriString ( ) ) )
21527	assertEquals ( expectedCsr, actualCsr )
21528	assertFalse ( alive )
21529	assertEquals ( content, result )
21530	assertEquals ( "Should get a 404 response", HttpStatus. NOT_FOUND, mongodbFeedSource. getFeed ( getFeedRequest ). getResponseStatus ( ) )
21531	Assert. assertTrue ( salBulkFlowService. flowRpcAddMultiple ( flowRpcAddMultipleInput ). isSuccessful ( ) )
21532	assertEquals ( format ( "%s should have been valid=%s but was valid=%s", name, expectedResult, result ), expectedResult, result )
21533	Assert. fail ( "Should have thrown a ProtocolException" )
21534	Assert. assertNull ( "Should be null, as it is also null in the original process instance on the server.", returnedProcessInstanceId )
21535	assertEquals ( "Expected 0 results!", 0, n )
21536	assertions. isEqualTo ( expected )
21537	assertThat ( result, is ( parse ( "[1, 2, 3, \\"foo\\", [\\"bar\\", {\\"baz\\": 42}]]" ) ) )
21538	assertThat ( subject. toFilterExpression ( ), is ( "(osgi.os=macosx)" ) )
21539	assertNotNull ( "Configuration for todo REST must not be null.", configuration )
21540	assertEquals ( "Read lock should be upgraded to write lock", cause. getMessage ( ) )
21541	assertEquals ( "contextPath", actual )
21542	assertEquals ( "1", list. get ( 0 ). get ( "lgName" ) )
21543	rule. assertScenarioEnded ( )
21544	Assert. assertFalse ( ldap. authenticate ( "ou=system", "uid=user" ) )
21545	assertEquals ( expected, actual )
21546	assertEquals ( "aaa", NamespaceManager. get ( ) )
21547	assertEquals ( "PT14M", microdata. getFirstProperty ( "cookTimeValue" ) )
21548	assertEquals ( expected, producer. produce ( testSet ) )
21549	assertEquals ( ONT2, shortForm )
21550	assertEquals ( "Successfully registered applications: [source.foo, sink.bar]", result )
21551	Assert. assertEquals ( "did not get expected packing instruction", expected, copy. getParsedTags ( ) )
21552	Assert. assertEquals ( DistCpUtils. getRelativePath ( root, child ), "/a" )
21553	assertEquals ( now, then )
21554	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Leave/>", elem. toXml ( ) )
21555	assertPotentialOwnerIsPresent ( )
21556	assertThat ( actionUrl, is ( equalTo ( "/anything/self" ) ) )
21557	assertThat ( actual, is ( expected ) )
21558	assertEquals ( 1, r )
21559	assertThat ( request, instanceOf ( VaadinHttpServletRequest. class ) )
21560	assertTrue ( examples. exists ( ) )
21561	assertEquals ( documento, documentoModificado )
21562	assertEquals ( Integer. parseInt ( EVSE_ID. getId ( ) ), unlockConnectorArgument. getValue ( ). getConnectorId ( ) )
21563	assertEquals ( "alex", user. getRoles ( ) )
21564	assertEquals ( "There should be at least 1 feature", 1, resources. size ( ) )
21565	assertEquals ( "1. Enter button pressed", getLogRow ( 0 ) )
21566	assertSqlCanBeParsedAndDeparsed ( stmt )
21567	Assert. assertEquals ( "answer=42", actual )
21568	assertEquals ( 90, ( ( Service ) vrp. getJobs ( ). get ( "2" ) ). getServiceDuration ( ), 0.1 )
21569	assertEquals ( ImmutableMap. of ( "foo", newArrayList ( "bar" ) ), response. getStringHeaders ( ) )
21570	assertEquals ( expected, actual )
21571	Assert. assertEquals ( elements. size ( ), dto. getElements ( ). size ( ) )
21572	assertEquals ( Integer. valueOf ( HttpServletResponse. SC_OK ), status. get ( ) )
21573	assertThat ( newerBundleInfo. isNewerVersionThan ( olderBundleInfo ), is ( true ) )
21574	Assert. assertEquals ( 0, lines. length )
21575	Assert. assertTrue ( response. getStatus ( ) == NO_CONTENT. getStatusCode ( ) )
21576	Assert. assertNull ( new CompareTool ( ). compareByContent ( filename, sourceFolder + "cmp_" + file, destinationFolder, "diff_" ) )
21577	assertEquals ( 2, list. size ( ) )
21578	Assert. assertEquals ( "", result )
21579	assertEquals ( 1, testMap. keySet ( ). size ( ) )
21580	assertThat ( result, is ( equalTo ( location. toString ( ) ) ) )
21581	assertEquals ( HttpStatus. SC_MOVED_PERMANENTLY, response. getStatusLine ( ). getStatusCode ( ) )
21582	assertEquals ( path, Paths. get ( conf, "circus-train-copy-listing.root.path" ) )
21583	assertEquals ( "[{\\"name\\":\\"table 1\\",\\"pkPolicy\\":\\"user_generated_value\\",\\"fields\\":[{\\"name\\":\\"id\\",\\"type\\":\\"string\\",\\"isPrimaryKey\\":true},{\\"name\\":\\"column 1\\",\\"type\\":\\"convertedType\\",\\"nullable\\":true,\\"defaultValue\\":\\"default\\"}]}]", content )
21584	assertEquals ( newMessage, announcementMessage )
21585	assertEquals ( "3", cell. get ( "3" ) )
21586	assertThat ( "shall have a default provider", sut. getProvider ( ), is ( not ( nullValue ( ) ) ) )
21587	assertTrue ( wsdls. contains ( new Document ( "xsd:schemaLocation", Constants. URI_2001_SCHEMA_XSD ) ) )
21588	assertEquals ( ConfigurationField. Optional. OPTIONAL, f. getFieldType ( ) )
21589	assertEquals ( expected, actual )
21590	assertTrue ( strategy. isReloadingRequired ( ) )
21591	assertTrue ( pages. contains ( gwtPagePresenter ) )
21592	assertThat ( urlParser. parse ( invalidUrl ), is ( nullValue ( ) ) )
21593	assertEquals ( "UPDATE person SET first_name =?, favourite_number =?, last_name =?, first_name LIKE? WHERE last_name <>?", sql. trim ( ) )
21594	assertEquals ( 100L, frame. getLong ( ) )
21595	Assert. assertEquals ( input, HtmlSanitizerUtil. sanitize ( input ) )
21596	assertNotNull ( result )
21597	assertThat ( renderer. getShortForm ( entity ), is ( "rdfs:isDefinedBy" ) )
21598	assertEquals ( 2, keys. length )
21599	ModelTestBase. assertIsoModels ( expected, y )
21600	a. assertXPath ( "//sos:Observation", a. asNode ( ) )
21601	assertTrue ( fieldDefinitionName. isUnique ( ) )
21602	assertDateEquals ( new DateTime ( 2013, 5, 20, 15, 30, 20, 999 ), date )
21603	assertOut ( "/**\\n * @interface\\n */\\nIA = function() {\\n};\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\n};\\nIA.prototype.royaleInterface();\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor';\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, 'constructor');\\nIA.base(this, '
21604	assertEquals ( "abc\\n", found )
21605	assertEquals ( oldManager, manager )
21606	$ ( "#seleniumQue" ). assertThat ( )
21607	assertTrue ( comparePomFiles ( reactorProjects ) )
21608	rule. assertScenarioEnded ( )
21609	assertFalse ( containsJob ( vrp. getJobs ( ). get ( "1" ), getRoute ( "21", Solutions. bestOf ( solutions ) ) ) )
21610	Assert. assertTrue ( "should have gotten an error", gotError )
21611	assertEquals ( 0, runtimeService. createEventSubscriptionQuery ( ). count ( ) )
21612	assertEquals ( ",1.1", decoder. encode ( BigDecimal. valueOf ( 11, 1 ), COMMA_DEC_DELIMITERS ) )
21613	assertEquals ( "_cat/allocation/testNode", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
21614	assertThat ( output. getValue ( ), equalTo ( "This is a test!\\n" ) )
21615	assertThat ( Files. exists ( Paths. get ( stringFromStdout ) ) )
21616	assertArrayEquals ( expectedMasterSecret, result )
21617	Assert. assertEquals ( 1, result )
21618	assertEquals ( bytesString, bodyString )
21619	assertNotEquals ( firstConfig, secondConfig )
21620	Assert. assertNotNull ( translatedQuery )
21621	Assert. assertEquals ( "There should be a complete header detected", bufPos, - 1 )
21622	Assert. assertEquals ( - 1L, ( long ) response. getBodySize ( ) )
21623	assertEquals ( witness, node )
21624	Assert. assertEquals ( expectedPath, normalizedPath )
21625	child. getSubProjectValidator ( "child" ). getTargetFile ( "out.txt" ). assertTestSuiteResults ( 1, 0, 0, 0 )
21626	assertEquals ( snapshot, bufferB. snapshot ( ) )
21627	assertThat ( condition. isSatisfied ( ), is ( true ) )
21628	assertEquals ( mockHexBinaryValue, result )
21629	assertNotNull ( testResult )
21630	assertEquals ( 14, metrics. size ( ) )
21631	assertThat ( value, equalTo ( "VALUE" ) )
21632	assertThat ( $. url ( ), endsWith ( "WithoutJSTest_2.html?aName=aValue" ) )
21633	assertThat ( data. getMessage ( ), is ( "unknown_prefix1.ttl" ) )
21634	assertEquals ( hsr1, hsr2 )
21635	arrays. assertDoesNotContain ( description, actual, values )
21636	assertEquals ( "select length(trim(entity_0.code) from Entity entity_0", select. getQuery ( ) )
21637	assertEquals ( fieldDefinition, res )
21638	Assert. assertEquals ( sampleSize, rg. nextDouble ( ), 0.01 )
21639	assertEquals ( projectName, newName )
21640	Assert. assertEquals ( generatedStrPath, expectedStrPath )
21641	assertTrue ( impl. isApiToken ( ) )
21642	assertEquals ( "test", echo. echo ( "test" ) )
21643	assertNull ( array )
21644	assertTrue ( rt. getEventType ( ). equals ( EventType. FSERVER_ZK_ENTITYGROUP_CLOSED ) )
21645	assertTrue ( nullCap == null )
21646	assertDelete ( )
21647	assertThat ( PlainTime. axis ( ). getBaseUnit ( DIGITAL_HOUR_OF_DAY ), is ( unit ) )
21648	assertEquals ( expectedValue, this. fsParser. extractFlowspec ( entry. build ( ) ) )
21649	assertEquals ( 4, sum. get ( ) )
21650	assertNotNull ( loop )
21651	assertThat ( command. accept ( state ), is ( true ) )
21652	assertTrue ( actual. isEmpty ( ) )
21653	assertLog ( Log. DEBUG, "test debug" )
21654	assertFalse ( "Data was not removed", appDataTestInstanceRemoved. getValues ( ). containsKey ( "viewcount" ) )
21655	assertThat ( ints. length, is ( 10 ) )
21656	assertThat ( parameters, is ( "?searchView=own&offset=5&limit=10&orderBy=leastTimeLeft&show=running&minSupportCount=50" ) )
21657	assertEquals ( sa, result )
21658	assertEquals ( Arrays. asList ( v1, v2 ), path )
21659	Assert. assertTrue ( intersect instanceof EmptyRange )
21660	Assert. assertTrue ( "Timer did not fire", schedulerLatch. await ( DELAY_MS, TimeUnit. MILLISECONDS ) )
21661	assertTrue ( Pattern. matches ( "(?s).*<table>.*<tr>.*<th>Name</th>.*</tr>.*", page. asXml ( ) ) )
21662	assertThat ( ctrl. createMock ( ToMock. class ), is ( ToMock. class ) )
21663	assertTrue ( incrementalReasoner. isComplete ( ) )
21664	assertThat ( properties. size ( ), is ( 0 ) )
21665	assertEquals ( 0.5, m, 1e-3 )
21666	assertNotNull ( httpStack )
21667	assertTrue ( i1. contains ( new DiscreteInterval ( 2, 7 ) ) )
21668	Assert. assertEquals ( new URI ( url + "/" + suffix ), UriUtils. buildNewURI ( new URI ( url ), suffix ) )
21669	assertEquals ( result, range. exclude ( other ) )
21670	assertEquals ( 4, BufferTools. indexOfTerminator ( buffer, 0, 1 ) )
21671	assertEquals ( expectedReference, summary. getReference ( ) )
21672	assertNotNull ( result )
21673	assertTrue ( p. matcher ( tags ). matches ( ) )
21674	assertNotNull ( jobResult )
21675	assertNotNull ( result )
21676	assertThat ( tupleComparator. compare ( new Tuple ( 1, 1 ), new Tuple ( - 1, 1 ) ), is ( - 1 ) )
21677	assertEquals ( BuilderFactory. start ( ). addMinKey ( "a" ). build ( ), doc )
21678	assertObjectEquals ( "[null,null,{f:'a'},{f:'b'},{f:'c'}]", p. run ( bs, in, sa ) )
21679	assertThat ( caughtException ( ), instanceOf ( TaxServiceUnavailableException. class ) )
21680	assertTrue ( provided instanceof HTableFactory. HTableFactoryImpl )
21681	assertEquals ( expected, built )
21682	runner. assertNotValid ( serviceImpl )
21683	assertNotNull ( op )
21684	assertNotNull ( injector )
21685	Assert. assertEquals ( "URI don't match and Hnadshake  exception is not thrown", true, exThrown )
21686	assertEquals ( Code. INTERNAL, statusCaptor. getValue ( ). getCode ( ) )
21687	assertInState ( STATE. STOPPED, services )
21688	assertEquals ( expResult, result )
21689	assertTrue ( lastRefLog. getComment ( ). startsWith ( "branch: Created from branch" ) )
21690	Assert. isTrue ( orders. get ( 0 ). getOrderId ( ). equals ( 50000280834672L ) )
21691	assertEquals ( "(1,2,3,4,5)", asSequenceStr ( result ) )
21692	Assert. assertEquals ( false, dataModelLoadBalancer. getHalfClosed ( ) )
21693	assertTrue ( satisfiesPrecondition ( cu ) )
21694	assertThat ( domain. getValidationFailures ( resourceLookup ), empty ( ) )
21695	assertTrue ( i + ", " + file. getAbsolutePath ( ), file. delete ( ) )
21696	assertEquals ( 0, count )
21697	assertNull ( mdxBaseComponent. prepareQuery ( "select * from table" ) )
21698	Assert. fail ( "IndexOutOfBoundsException expected" )
21699	quote. assertIsSatisfied ( )
21700	assertThat ( target, is ( values ) )
21701	Assert. assertTrue ( "Queue name not encoded correctly into job history file", jobHistoryFile. contains ( QUEUE_NAME_WITH_DELIMITER_ESCAPE ) )
21702	assertThat ( builderAnnotated. picoContainer ( ), sameInstance ( picoContainer ) )
21703	Assert. assertEquals ( expected, actual )
21704	assertNotNull ( result )
21705	assertThat ( info. getServerService ( SERVER ), nullValue ( ) )
21706	assertEquals ( 0, findings. size ( ) )
21707	assertEquals ( "Simple option", "-Dhttp.port=80 -Dhttp.port.secure=443", commandLine. getOption ( "simpleOption" ) )
21708	Assert. assertEquals ( expectedCarIds, actualCarIds )
21709	assertEquals ( "USER", dataSet. applyCaseInsensitivity ( "uSeR" ) )
21710	assertOut ( "var /** @type {Object} */ a = function(foo, bar) {\\n  bar = typeof bar!== 'undefined'? bar : 'goo';\\n  return -1;\\n}" )
21711	assertEquals ( parentFirstStepPosition, runEnv. getParentFlowStack ( ). peekParentFlowData ( ). getNextStepPosition ( ) )
21712	assertContains ( indels, 100, "C", "GGAT" )
21713	assertFalse ( problem )
21714	assertEquals ( "sayHi", sayHi. getLocalPart ( ) )
21715	Assert. assertNotNull ( is )
21716	assertEquals ( SetsFromVarargs. create ( 1, 2, 3, 4, 5, 6 ), intersection )
21717	assertArrayEquals ( expected, AnnotationUtils. getAnnotatedAnnotationsForElement ( testElement ) )
21718	assertEquals ( EX_10_OUTPUT, set2. padPkcsN7 ( EX_10_INPUT, EX_10_BLOCK_LENGTH ) )
21719	assertThat ( afterStartAction, instanceOf ( CustomAfterStartActionInstantiator. class ) )
21720	assertArrayEquals ( expectedFileModes, fileModesFromString )
21721	assertEquals ( 1, model. getObject ( ). getAdresses ( ). size ( ) )
21722	assertVersionAndValue ( ref, initialVersion, initialValue )
21723	assertDirectories ( "directories", "foo", "bar" )
21724	assertNull ( fieldName )
21725	assertFalse ( proxyHttpHeader. isValid ( ) )
21726	assertEquals ( "Should not throw exception with null ID", AwsClientException. class, e. getClass ( ) )
21727	Assert. assertEquals ( xmlEsperado, medicamento. toString ( ) )
21728	assertEquals ( "LocalizableValidationException.message", le. getMessage ( ) )
21729	assertThat ( result, is ( lines ( new String [ ] [ ] { { "\\\\t" } } ) ) )
21730	Assert. assertEquals ( 404, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
21731	assertEquals ( this. textEditor, defaultEditorAdapter. getUndoRedo ( ) )
21732	assertEquals ( EXPECT. getAbsolutePath ( ), value )
21733	Assert. assertEquals ( 1, subscriptions. get ( ) )
21734	assertEquals ( "4", result )
21735	assertNull ( result )
21736	assertArrayEquals ( sourceData, destination. get ( ), DELTA )
21737	resp. assertContentEquals ( "�����������������������������������������������������������������������������������
21738	assertEquals ( HTTP, epp. getTransport ( ) )
21739	assertNotNull ( "Unread Messages are not null", messages )
21740	assertEquals ( size, deerletRedisClient. size ( ) )
21741	assertNotNull ( projectId )
21742	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Refer>" + "<genericTag key=\\"value\\">" + "someText" + "</genericTag>" + "</Refer>", elem. toXml ( ) )
21743	assertTrue ( graphics. getColor ( ). equals ( Color. BLACK ) )
21744	assertEquals ( "SQL query does not match", result, test )
21745	assertEquals ( "sky", sky. getType ( ) )
21746	assertNotNull ( firstTask )
21747	assertThrows ( IndexOutOfBoundsException. class, ( ) -> strings. set ( 3, "out of bounds" ) )
21748	assertEquals ( copy. get ( Calendar. HOUR_OF_DAY ), 1 )
21749	assertEquals ( 1, rules )
21750	assertTrue ( "Component should be focused", isFocused ( ) )
21751	Assert. assertEquals ( "12 ����������������������������������������������������������������������������������
21752	assertThat ( Functions. blobstoreUrl ( url ), is ( notNullValue ( ) ) )
21753	assertTrue ( wc. get ( Boolean. class ) )
21754	assertEquals ( 1, ksession. fireAllRules ( ) )
21755	assertNotNull ( "No configuration", config. getConfigurationByName ( "test" ) )
21756	assertEquals ( "a comment", testSet. getPlan ( ). getComment ( ) )
21757	assertNotNull ( group20 )
21758	Assert. assertEquals ( 2, resultNotes. size ( ) )
21759	assertNotNull ( expr )
21760	assertFalse ( peek. hasNext ( ) )
21761	assertEquals ( testResult, result )
21762	assertEquals ( expectedSplits, new TreeSet < > ( createdSplits ) )
21763	assertEquals ( expecteds, actuals )
21764	assertSame ( exIn, exOut )
21765	Assert. assertEquals ( "Double decode brackets not correct", out, WebUtilities. doubleDecodeBrackets ( in ) )
21766	assertSame ( results, uriTools. resolveUri ( HELLOWORLD_URI. resolve ( "out/results" ), wfBundle ) )
21767	assertTrue ( m. nextShort ( ) > - 1 )
21768	assertEquals ( "SQL query does not match", result, test )
21769	assertEquals ( out. get ( ), LARGE_NUM + 1 )
21770	assertEquals ( "ec2.amazonaws.com.cn", awsClient. getHostHeader ( ) )
21771	Assert. assertFalse ( errors. hasFieldErrors ( ) )
21772	assertEquals ( "testurl", doc. getContentField ( "url" ) )
21773	assertThat ( equal, equalTo ( true ) )
21774	assertArrayEquals ( expected, actual, 0.0 )
21775	assertFalse ( result )
21776	assertEquals ( "http://java.example.com:8080/foo/bar/qux/quux", got. toString ( ) )
21777	assertThat ( columns, is ( expected ) )
21778	assertEquals ( newName, instrument. getFriendlyName ( ) )
21779	assertEquals ( "Wrong external id returned", test. getExternalId ( ), result )
21780	Assert. assertEquals ( 1, factory. getNumCarvedTestCases ( ) )
21781	assertEquals ( "CONSUME", s. history. get ( 0 ) )
21782	assertEquals ( foo1, foo2 )
21783	assertEquals ( "OK", reply )
21784	assertTrue ( converter. canConvert ( IndexQuote. class ) )
21785	assertEquals ( result, one )
21786	assertEquals ( "SELECT Contacts.Name FROM Contacts WHERE Contacts.Name IN ('x', 'y')", visitor. getQuery ( ). toString ( ). trim ( ) )
21787	assertEquals ( 4, instance. getFeatures ( ). size ( ) )
21788	Assert. assertNotNull ( str )
21789	assertArrayEquals ( expectedCreateSchemaStmts, statements. getLockCreateSchemaStatements ( 2 ) )
21790	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE LOCALNAME(nodes) LIKE $literal" ) )
21791	assertThat ( ff. parse ( "20160504" ), is ( PlainDate. of ( 2016, 5, 4 ) ) )
21792	Assert. assertFalse ( exclusion1. equals ( exclusion2 ) )
21793	Assert. assertEquals ( expected, actual )
21794	Assert. assertEquals ( "myInvisibleButton.cssValue", element. getCssValue ( ) )
21795	assertions. doesNotContain ( false )
21796	assertEquals ( CloseReason. NO_ACCEPTABLE_VERSION, pair. clientRecorder. q. take ( ) )
21797	assertEquals ( 6. * 3600. + 12. * 3600., sec, 0.01 )
21798	Assert. assertEquals ( "John", nameOfCustomer1 )
21799	assertNotNull ( metricsInString )
21800	Assert. assertTrue ( readable )
21801	assertEquals ( out, frame2 )
21802	assertEquals ( 0, runtimeService. createProcessInstanceQuery ( ). processInstanceId ( processInstance. getId ( ) ). count ( ) )
21803	assertEquals ( "C", letterGrade )
21804	assertTrue ( attributeDesc. isVersion ( ) )
21805	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5 ) ) )
21806	Assert. assertEqualsIgnoreWhitespace ( expectedRuleModelDrl, actualRuleModelDrl )
21807	Assert. assertTrue ( sql. contains ( "SELECT id, name, name FROM test_set_based_entity WHERE id =?" ) )
21808	assertEquals ( expResult, result )
21809	assertEquals ( newValue, wrapped. get ( key ) )
21810	assertEquals ( 0, paths. size ( ) )
21811	assertThat ( mt. minus ( - 999999999, SI. NANOSECONDS ), is ( MachineTime. ofSIUnits ( 4, 0 ) ) )
21812	Assert. assertEquals ( 1, mapper. updateByPrimaryKeyAll ( new Country ( ) ) )
21813	assertEquals ( "idResultName", filter. getIdResultName ( ) )
21814	Assert. assertTrue ( "Adaptive regularization test failed", loss_adareg > loss )
21815	assertFalse ( selected )
21816	assertEquals ( parse ( "1694989 + 336131*a + 4996260*a^2 + 91*a^3 + a^4", domain, LEX, vars ), r )
21817	assertThat ( this. state. getSortColumn ( ), is ( equalTo ( sortColumn ) ) )
21818	Assert. assertEquals ( expected, result )
21819	assertFalse ( evaluator. shouldProxyHost ( "0000:0000:0000:0000:0000:0000:0000:0000:0001" ) )
21820	assertThat ( restored. get ( ), is ( option. get ( ) ) )
21821	assertEquals ( count ++, gt. count ( ). next ( ). intValue ( ) )
21822	assertThat ( PlainDate. of ( 2000, 12, 2 ). with ( model. weekOfMonth ( ). incremented ( ) ), is ( PlainDate. of ( 2000, 12, 9 ) ) )
21823	assertEquals ( "TypeStrategy should be used", TypeStrategy. class, strategy. getTypeStrategy ( ) )
21824	assertEquals ( "Conversion did not match", value, to )
21825	assertComparisonFailure ( "Fichier produit en erreur : " + toFilePath ( "FileAssertWithMergeRegion_expected.xls" ) )
21826	assertEquals ( "com.hortonworks.streamline.Floor(100.5,2.5)\\n", stormSqlExpression. getSql ( ) )
21827	Assert. assertEquals ( token, RequesterContextHolder. getContext ( ). getToken ( ) )
21828	Assert. assertEquals ( "��", result. toStringUtf8 ( ) )
21829	assertEquals ( 2, post. getComments ( ). size ( ) )
21830	assertTrue ( comparePomFiles ( reactorProjects ) )
21831	assertThrows ( ( ) -> instance. matcherFor ( matcher ) )
21832	assertEquals ( expected, actual )
21833	Assert. assertNotNull ( this. userService )
21834	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"ask\\":{\\"choices\\":{\\"value\\":\\"[1 DIGIT]\\"},\\"say\\":[{\\"value\\":\\"Please say a digit\\"}],\\"bargein\\":true,\\"timeout\\":30.0,\\"required\\":true}}]}" )
21835	Assert. assertEquals ( 1, orders. size ( ) )
21836	assertSame ( val, ConfigUtils. getMap ( config, val, "no-value" ) )
21837	assertTrue ( rule. getCondition ( ). matches ( event ) )
21838	assertEquals ( expected, ColumnRanges. rangeAtNode ( compare ) )
21839	assertThat ( byValue. getSingleResult ( ). getF ( ), equalTo ( f1 ) )
21840	assertThat ( id, is ( greaterThan ( 0 ) ) )
21841	assertEquals ( "(| [= foo] [= bar] [= baz])", m. toString ( ) )
21842	editor. assertNoHover ( "@PutMapping(\\"/greetings\\")" )
21843	assertEquals ( "NULLABLE", classUnderTest. getColumnName ( 7 ) )
21844	Assert. assertEquals ( "Injection points are equal", dronePoint, dronePoint1 )
21845	assertEquals ( CambriaConstants. kBasePath + "topic/cg/cid?timeout=100", url )
21846	assertEquals ( "<html><head></head><body></body></html>", doc. html ( ) )
21847	assertThat ( comment, equalTo ( "Parameter comment on class C" ) )
21848	assertThat ( modified, is ( expectedResult ) )
21849	assertNull ( cursor. next ( ) )
21850	Assert. assertEquals ( message, B. getContent ( ) )
21851	assertEquals ( "-- delete ", sort. getOrder ( ) )
21852	child. getSubProjectValidator ( "child" ). getTargetFile ( "out.txt" ). assertTestSuiteResults ( 1, 0, 0, 0 )
21853	assertEquals ( 2, lines. size ( ) )
21854	Assert. assertEquals ( jsonString, JsonUtil. toJsonString ( aclStatusBuilder. build ( ) ) )
21855	assertEquals ( false, result )
21856	Assert. assertEquals ( 2.2, MathUtils. calcSampleVariance ( x, 0.01 ), 0.01 )
21857	assertThat ( reader. readThing ( ), is ( notNullValue ( ) ) )
21858	assertEquals ( 1, count )
21859	assertEquals ( request. getRequestHeaders ( ), headers )
21860	Assert. assertEquals ( - 1.0, correlation. correlation ( xArray, yArray ), Double. MIN_VALUE )
21861	Assert. assertEquals ( "...(3)", result )
21862	assertTrue ( PatchUtils. match ( p, "the quick brown fox jumps over the lazy dog." ) )
21863	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
21864	assertEquals ( OK, updateResponse. getStatus ( ) )
21865	assertSame ( copied, obj )
21866	assertTrue ( exportedFile. exists ( ) )
21867	Assert. assertEquals ( option1, option2 )
21868	assertEquals ( "3 啶�啶苦く啷� 啷�", t. format ( new Date ( 0 ) ) )
21869	Assert. assertEquals ( result, cohort )
21870	assertTrue ( String. format ( "[%s] should be valid.", coord ), validator. isValid ( coord, null ) )
21871	Assert. assertEquals ( endereco, retorno. getEndereco ( ) )
21872	assertEquals ( 6, context. getTableCount ( ) )
21873	assertEquals ( id, builder. getMessageId ( ) )
21874	assertTrue ( Pattern. matches ( "(?s).*.html\\\\s+body\\\\s+<p>\\\\s*<strong>\\\\s*<i>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*
21875	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
21876	assertEquals ( res. getStatus ( ), Response. Status. CONFLICT. getStatusCode ( ) )
21877	assertEquals ( resource, mockHttpRequestBuilder. build ( ). getResource ( ) )
21878	assertThat ( readBytes ( testee, 4 ), is ( "Hello|World|" ) )
21879	assertEquals ( 7, count )
21880	Assert. assertSame ( managerFactory, victim. getManagerFactory ( ) )
21881	Assert. assertEquals ( 4., analyser. getServiceTime ( route ), 0.01 )
21882	Assert. assertTrue ( dao. insert ( person ) )
21883	assertNotNull ( profileSpec. getEntry ( ) )
21884	assertEquals ( resolvedClassPaths, Collections. singleton ( wildcard ) )
21885	assertEquals ( count, task. getCount ( ) )
21886	assertFalse ( result. passedValidation ( ) )
21887	assertEquals ( masterRoot, rootDir )
21888	assertTriggered ( messageCountAlertCondition, result )
21889	Assert. fail ( "should have thrown SQLFeatureNotSupportedException" )
21890	assertAnnotations ( 1, Quantity. class, new TestQuantity ( 0, "4.3 million tonnes", 4.3, "mi", 4.3 * Area. MULTIPLIER_TO_M2, "m^2", "area" ) )
21891	assertTokensEqual ( new Tokens ( Arrays. asList ( "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "foo", "foo", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "foo", "foo", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "bar", "foo", "foo"
21892	Assert. assertEquals ( expResult, result )
21893	assertEquals ( "Static field _staticAssVal equals 3.", 3, unAssVar )
21894	assertions. isNotEqualTo ( actual )
21895	assertEquals ( chaincodeCollectionConfiguration, chaincodeCollectionConfigurationFromProto )
21896	assertEquals ( expected, result )
21897	Assert. assertEquals ( "Intvar", actual )
21898	Assert. assertEquals ( expected, rows. next ( ). toString ( ) )
21899	editor. assertProblems ( "sts4|Duplicate resource name", "sts4|Duplicate resource name" )
21900	Assert. assertFalse ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, this. right, this. documentReference ) )
21901	assertEquals ( found. size ( ), 3 )
21902	assertEquals ( 0, results. size ( ) )
21903	Assert. assertEquals ( "Test this string", stringConstant. evaluate ( null ) )
21904	Assert. assertFalse ( json. has ( DATA_NAME ) )
21905	longs. assertNotLessThan ( description, actual, expected )
21906	assertEquals ( 0x77777777, frame. getInt ( ) )
21907	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( dropdown ) instanceof WMultiDropdownRenderer )
21908	assertThat ( sut. getIndexOfCode ( 30 ), is ( 1 ) )
21909	Assert. assertTrue ( ShareUserSearchPage. checkSearchResultsWithRetry ( drone, ADV_FOLDER_SEARCH, searchText, true ) )
21910	assertEquals ( 10, content. split ( "\\n" ). length )
21911	Assert. assertEquals ( 0, i )
21912	Assert. assertEquals ( scorer. scoreSplit ( a, b ), 0.0, 1E-7 )
21913	assertTrue ( d. isUsingStatisticsManager ( ) )
21914	assertEquals ( commit. getId ( ), gfs. getStatusProvider ( ). getRevision ( ) )
21915	assertTrue ( hv > 0.64 )
21916	assertThat ( xoManager. find ( D. class, "1" ). iterator ( ). next ( ), equalTo ( a1 ) )
21917	assertOut ( "public final class A extends B implements IA, IB, IC {\\n}" )
21918	assertTrue ( peerAcceptanceUtil. isPeerInterestedOnRemoteWorker ( consumer1ID. getServiceID ( ) ) )
21919	assertTrue ( componentSet. size ( ) == componentList. size ( ) )
21920	assertEquals ( encoded1, encoded2 )
21921	assertEquals ( "{\\"number\\":null,\\"string\\":null,\\"raw\\":null}", writer. toString ( ) )
21922	assertEquals ( "Failed to generate do while loop with chained lhs", DOWHILE_WITH_RHS, s )
21923	assertEquals ( "Base value is not properly parsed", "f1a2b3", parsed )
21924	Assert. assertEquals ( 1, violations. size ( ) )
21925	assertThat ( tags, contains ( TAG1, TAG2 ) )
21926	assertEquals ( 2, v. size ( ) )
21927	assertEquals ( true, bm. isBitSet ( bitNumber ) )
21928	assertEquals ( "{\\"sub1\\":\\"sub2\\",\\"sub1a\\":\\"avalue\\"}", JsonUtils. toJson ( node ) )
21929	assertTrue ( params. hasValue ( "a" ) )
21930	assertTrue ( String. format ( "[%s] should be valid.", coord ), validator. isValid ( coord, null ) )
21931	assertEquals ( content. length, file. getSize ( ) )
21932	Assert. fail ( "Connection succeeded, but impersonation should be disabled." )
21933	assertEquals ( "GS", child. getName ( ) )
21934	assertEquals ( "{message=Hello Spring MVC}", response. getContent ( ) )
21935	Assert. assertEquals ( sorted, sortedRules )
21936	assertOut ( "width=\\"1.5\\"" )
21937	assertInvocations ( invocations )
21938	assertEquals ( expectForbid, newForbid )
21939	assertTrue ( "Time should be less than 1000ms, but was " + time1 + " and was " + time2, time1 >= 1000 && time2 >= 1000 )
21940	Assert. assertEquals ( "SHOW GLOBAL STATUS LIKE 'Key%';", text )
21941	assertSame ( camundaDatasourceMock, getDataSourceFromConfiguration ( ) )
21942	assertEquals ( address, dest. getAddress ( ) )
21943	assertNull ( messageOut. getType ( ) )
21944	assertThat ( vi. getValue ( ), is ( interval ) )
21945	assertEquals ( sanitized, rewrite ( gadget, markup, set ( "img" ), set ( "src" ) ) )
21946	assertTrue ( "Value change provider should be fired", isValueChangeListenerFired ( "null" ) )
21947	assertThat ( values, containsInAnyOrder ( "example.test1", "example.test2" ) )
21948	Assert. assertEquals ( 250 + 4 * bonusScore, scores. getScore ( ) )
21949	runner. assertValid ( service )
21950	assertEquals ( button. getText ( ), "Compute Sum" )
21951	assertEquals ( "<TimePosition/>", xmlWriter. getOutput ( ) )
21952	Assert. assertNull ( reified )
21953	assertThat ( conversionService. getConverter ( targetType ), is ( notNullValue ( ) ) )
21954	assertMsg ( )
21955	assertTrue ( "Expected the DependencyCheck report to be generated", report. exists ( ) )
21956	assertTrue ( cause. getMessage ( ). startsWith ( "No key found in" ) )
21957	assertEquals ( "aTestString", classUnderTest. getVersion ( ) )
21958	assertEquals ( expected, buf )
21959	assertEquals ( VALUE, secondVictim. getValue ( KEY ) )
21960	assertEquals ( value, maxByColumns [ 0 ], LARGEST_MIN_MAX_ERROR )
21961	assertEquals ( "Updated instructions", getEntity ( ). getProperty ( "instructions" ) )
21962	assertTrue ( validator. isNullOrEmpty ( message ) )
21963	assertEquals ( "Wrong property", "I'm complex!", checkConfig. getString ( "element2.subelement" ) )
21964	assertEquals ( 15, atAct1. get ( 0 ) )
21965	assertEquals ( 10, distincted. size ( ) )
21966	assertNotNull ( user )
21967	Assert. assertEquals ( 0, trimmed. size ( ) )
21968	assertEquals ( hashCode1, hashCode2 )
21969	assertEquals ( 0, metadata. getPatientBirthDate ( ) )
21970	assertNotEquals ( 0, tokenLists. size ( ) )
21971	assertTrue ( xml. contains ( expected ) )
21972	AssertAnnotations. assertLemma ( lemmas, select ( jcas, Lemma. class ) )
21973	assertTrue ( metaUncle. isAssignableFrom ( metaChild ) )
21974	assertThat ( description. toString ( ), is ( "SomeClass {\\n" + "  baz(): SomeClass {\\n" + "    foo(): was <43>\\n" + "  }\\n" + " ...\\n" + "}" ) )
21975	assertEquals ( entry. getValue ( ), DBValue )
21976	assertions. containsSequence ( sequence )
21977	assertEquals ( "Correct Platform is not fetched by service", pValue, testPlatform )
21978	assertEquals ( "rubbish", test. getMessage ( ) )
21979	Assert. assertEquals ( sampleSize, result. size ( ) )
21980	Assert. assertEquals ( "first 0:a 1:b 2:c last", html )
21981	assertFalse ( ns. isAnyUpdate ( ) )
21982	assertThat ( target, is ( instanceOf ( FlowAction. class ) ) )
21983	assertEquals ( renderWithConflictShowingVersionResult ( ), result )
21984	assertTrue ( detector. isKnsEnabled ( ) )
21985	assertNotNull ( taskTO )
21986	assertEquals ( "Line1Line2Line3", stringBuilder. toString ( ) )
21987	assertEquals ( "onTargetsChanged should have updated targets list", createUrlFromTargetName ( healthInfoInstances. get ( 0 ). Service. Address ), targetProvider. provideTarget ( ) )
21988	Assert. assertEquals ( 204, status )
21989	assertEquals ( "A1=a, A2=b", selectionValue )
21990	assertEquals ( exp, res. getRow ( i ). getDouble ( 0 ), 0.01 )
21991	Assert. assertEquals ( new URI ( "http://stuff@localhost:80/stuff?param=stuff" ), result )
21992	assertNotNull ( order )
21993	assertArrayEquals ( array ('','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
21994	assertEquals ( "Hello", ( ( BizExceptionNoDefaultConstructor ) read ). getMessage ( ) )
21995	assertEquals ( "text/plain", contentType ( resp ) )
21996	assertEquals ( storageClass, options. getStorageClass ( ) )
21997	assertEquals ( headers, newHeaders )
21998	assertXpathExists ( "Absent SAML Assertion element", "/SOAP-ENV:Envelope/SOAP-ENV:Header/wsse:Security/saml:Certificate", document )
21999	assertTrue ( result )
22000	assertEquals ( 0, tasks. size ( ) )
22001	assertEquals ( "No distinct name", "No distinct name", ejbJarMetaData. getDistinctName ( ) )
22002	assertNotNull ( extUserDetails. getOpenSocialId ( ) )
22003	assertNotNull ( in )
22004	assertTrue ( easyCriteria. count ( ) > 0 )
22005	Assert. assertNull ( "No se deber�a haber encontrado la aplicaci�n", aplicacion )
22006	assertThat ( subjectOf ( axiom ), isOptionalOf ( individual ) )
22007	Assert. assertEquals ( "xxx", name )
22008	Assert. assertEquals ( "Date " + date + " was not correctly truncated to hours", dateTruncExpected, dateTruncActual )
22009	Assert. assertNull ( job )
22010	assertOut ( "a(true)" )
22011	assertEquals ( Status. NOT_FINISHED. getCode ( ), listener. status. getCode ( ) )
22012	Assert. assertSame ( cfg, newCfg )
22013	assertEquals ( 6, parsers. size ( ) )
22014	Assert. assertEquals ( "text;stuff", writer. toString ( ) )
22015	assertEquals ( o1, o2 )
22016	Assert. assertTrue ( provider. isKeyword ( "SELECT" ) )
22017	assertEquals ( 1599, result )
22018	assertTrue ( result1 == result2 )
22019	assertTrue ( expectedDirection. equals ( reflectedDirection ) )
22020	assertNotNull ( actual )
22021	assertEquals ( MAX_FETCH_SIZE, videoCapture. getiExceptionCount ( ) )
22022	assertThat ( content, containsString ( "1 + 1 = 1" ) )
22023	assertEquals ( "true", actual )
22024	assertEquals ( Order. sellAt ( 1, Decimal. NaN, Decimal. NaN ), newTrade. getExit ( ) )
22025	Assert. assertEquals ( testConfig. getPartitionWeightMap ( ), Collections. emptyMap ( ) )
22026	assertTrue ( ontology. containsAxiom ( OWL2Datatype. XSD_STRING ) )
22027	assertNotNull ( writer )
22028	assertThat ( testUriStr, is ( expectedUriStr ) )
22029	assertTrue ( rec_cnt == 1 )
22030	org. junit. Assert. assertEquals ( expected, actual )
22031	assertThat ( model. getSource ( ), is ( source ) )
22032	assertEquals ( 2, users. size ( ) )
22033	assertNotNull ( "The list of DataObject2 should not have been nulled out", dataObject. getDataObject2s ( ) )
22034	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
22035	assertEquals ( 0, result. size ( ) )
22036	assertEquals ( stepType, actualType )
22037	Assert. assertNull ( to )
22038	assertEquals ( 400, clientResponse. getStatus ( ) )
22039	assertEquals ( tz, ade. getAde ( ). getConfigProperties ( ). getInputTimeZone ( ) )
22040	assertFalse ( SpriteUtils. isAliasSprite ( sprite1, sprite2 ) )
22041	assertThat ( builder. getPatches ( ), hasItemsInOrder ( "REMOVE /status/conditions/0", "ADD /status/conditions/- {'message':'Almost','reason':'available','type':'Progressing','message':'hello'}" ) )
22042	assertTrue ( Arrays. equals ( s, multiEntry ) )
22043	assertTrue ( str. equals ( content ) )
22044	softly. assertAll ( )
22045	assertThat ( driver. findElement ( By. id ( "item1" ) ). getText ( ), is ( "" ) )
22046	assertEquals ( expectedMap, iteratedMap )
22047	assertThat ( stems, is ( empty ( ) ) )
22048	BufferedImageAssert. assertMatches ( result, new float [ ] { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 } )
22049	assertEquals ( "dist job res is not 0:", 0, res )
22050	assertThat ( optionsByType. get ( Timeout. class ), is ( fiveMinutes ) )
22051	assertFalse ( result )
22052	assertEquals ( ids. getExternalIdentifier ( ). get ( 0 ). getNormalized ( ). getValue ( ), "normalized-value" )
22053	Assert. assertNotNull ( camelctx )
22054	assertEquals ( true, outcome. isFound ( ) )
22055	assertEquals ( expectedQuery, actualQuery )
22056	assertFalse ( property. toStringValues ( ). isEmpty ( ) )
22057	assertThat ( result, is ( 3 ) )
22058	assertEquals ( result, "John,Jane,Adam,Tom" )
22059	assertEquals ( "Expected another stopwords", TurkishAnalyzer. getDefaultStopSet ( ), stopwords )
22060	assertEquals ( "foo", row. getItemProperty ( "TEXT" ). getValue ( ) )
22061	assertThat ( ex, not ( nullValue ( ) ) )
22062	Assert. assertSame ( account1. toString ( ), account2. toString ( ) )
22063	assertTrue ( "Content-Type is not correct", contentType. contains ( "image/png" ) )
22064	Assert. assertEquals ( "RAND", actual )
22065	assertEquals ( 3.5F, strategy. getMedian ( evenNumberOfFloatBandValues ), 0.0001 )
22066	Assert. assertFalse ( result )
22067	assertThat ( status. getStoragePolicy ( ), is ( LAZY_PERSIST_POLICY_ID ) )
22068	Assert. assertThat ( i, is ( 6 ) )
22069	assertEquals ( "There should be only 1 attempt rule", 1, attemptRulesByActionName. size ( ) )
22070	mini. assertReadFile ( mini. getLocalFs ( ), fileSpec, "1;one", "2;two" )
22071	assertions. doesNotContain ( value, index )
22072	assertSkipped ( myTasks, 2, 3 )
22073	Assert. assertEquals ( "Not null string", expectedBinaryString, bitmaskInBinaryString )
22074	assertEquals ( 0, results. size ( ) )
22075	assertThat ( info. getServerService ( SERVER ), sameInstance ( currentService ) )
22076	assertEquals ( Integer. of ( 1 ), result )
22077	assertEquals ( "code", response. getResponseCode ( ) )
22078	assertTokens ( new IdentifierToken ( "x" ), Tokens. LP_CALL, Tokens. RP, comment ( "test" ) )
22079	assertEquals ( "testing", removeSentenceDecorator. toDisplay ( ) )
22080	assertEquals ( false, result )
22081	assertFalse ( isEnabled )
22082	assertEquals ( exp, TokenProvider. DEFAULT_EXPIRATION )
22083	Assert. assertFalse ( Arrays. equals ( cmpAlignAndMeet, outAlignAndMeet ) )
22084	assertFalse ( subject. getForceAll ( ). isPresent ( ) )
22085	assertThat ( new String ( baos. toByteArray ( ) ), equalTo ( data ) )
22086	assertThat ( tuple. getCollection ( "field" ), equalTo ( value ) )
22087	assertThat ( "Returned value is sum of provided ones, not sum of values defined in deactivated code.", response, containsString ( expected ) )
22088	assertTrue ( "The identity realm should be created", ops. exists ( TEST_IDENTITY_REALM_ADDRESS ) )
22089	Assert. assertTrue ( deterministicId. equals ( deterministicId2 ) )
22090	assertEquals ( expected, baseString )
22091	assertThat ( emailAddress, matchesRegularExpression ( "^[a-zA-Z0-9]{32}@[a-zA-Z0-9]{32}@[a-zA-Z0-9]{32}@[a-zA-Z0-9]{32}@[a-zA-Z0-9]{32}@[a-zA-Z0-9]{32}@[a-zA-Z0-9]{32}\\\\.[a-zA-Z0-9]{32}@[a-zA-Z0-9]{32}@[a-zA-Z0-9]{32}@[a-zA-Z0-9]{32}@[a-zA-Z0-9]{32}@[a-zA-Z0-9]{32}@[a-zA-Z]{32}@[a-zA-Z]{32}@[a-zA-Z]{32}\\\\.[a-zA-Z0-9]{32}@[a-zA-Z]{32}@[a-zA-Z]{32}@[a-zA-Z]{32}@
22092	Assert. fail ( "Missing required input" )
22093	Assert. assertEquals ( "SELECT `user_id` FROM `user` WHERE `user_name` = 'test'", ctx. getSqlStatement ( ) )
22094	assertThat ( s, equalTo ( ( r ) ) )
22095	assertNotNull ( target )
22096	Assert. assertEquals ( state, actualState )
22097	assertEquals ( "8 ��� ��", t. format ( new Date ( 0 ) ) )
22098	assertThat ( client. getGrantTypes ( ). contains ( "refresh_token" ), is ( equalTo ( true ) ) )
22099	assertEquals ( Router. DEFAULT_RESULT_TYPE, router. getResultType ( ) )
22100	assertEquals ( "b", CollectionUtils. getByPath ( input, "-1" ) )
22101	assertTrue ( isPersistent )
22102	Assert. fail ( "Should have thrown an exception" )
22103	assertTrue ( closed. await ( 2, SECONDS ) )
22104	assertEquals ( sentiloDateFormatter, service. getFormatter ( sentiloDateFormatter ) )
22105	assertEquals ( Type. High, filterResult. getValue ( ) )
22106	assertEquals ( AbstractPanel. class, renderer. getComponentClass ( ) )
22107	assertEquals ( 2, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
22108	assertEquals ( LocalDate. of ( 1971, Month. OCTOBER, 31 ), firstDayOfMonth )
22109	assertNotNull ( result )
22110	TestCase. assertTrue ( matcher. match ( new C ( 2, 3, 4 ) ) )
22111	log. assertContent ( "" )
22112	assertEquals ( 0L, query ( ). from ( employee ). where ( where ). fetchCount ( ) )
22113	assertTrue ( op. quiet )
22114	Assertion. assertEquals ( loadedDataSet, actualDataSet )
22115	assertFalse ( v1. equals ( v2 ) )
22116	assertThat ( cls, is ( nullValue ( ) ) )
22117	assertTrue ( startsWithHttp )
22118	assertEquals ( "(& [= fo*] [= *oo] [= foo])", m. toString ( ) )
22119	assertEquals ( 0L, volumeStates. documentCount. longValue ( ) )
22120	assertTrue ( connection. toString ( ) + " is not transaction aware", connection. toString ( ). startsWith ( "Transaction-aware proxy for target Connection  from DataSource [Mock for DataSource" ) )
22121	Assert. assertEquals ( revisions. get ( 0 ). getRevision ( ). getId ( ), "2" )
22122	assertNull ( "No listener was found", listener. listener )
22123	Assert. assertFalse ( accept )
22124	Assert. assertEquals ( message, 0.0, error, 1E-10 )
22125	assertEquals ( "Both filters should be used", 1, sizeWithUnfilteredQuery ( ) )
22126	assertThat ( client. getHost ( ), equalTo ( "localhost" ) )
22127	assertThat ( client. getBasePath ( ), is ( "http://localhost/" ) )
22128	assertEquals ( 265463 & 342, executeTestMethod ( test, Integer. class, null, 265463 ). intValue ( ) )
22129	assertEquals ( 1, deleteCount )
22130	assertEquals ( "v;lt;p /&gt;;;\\n", writer. toString ( ) )
22131	assertScoreAndParse ( content, null, 1 )
22132	assertTrue ( squaresCache. containsKey ( 6 ) )
22133	assertEquals ( 0, list. size ( ) )
22134	assertThat ( f. apply ( good_uris ), equalTo ( asList ( new URL ( "http://example.com/example_a" ), new URL ( "http://example.com/example_b" ), new URL ( "http://example.com/example_c" ) ) ) )
22135	comparator. assertLinesMatch ( )
22136	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
22137	Assert. assertEquals ( want, sql )
22138	assertEquals ( "ext", sub. getExtension ( ) )
22139	assertThat ( result, is ( notNullValue ( ) ) )
22140	assertEquals ( ImmutableList. of ( category1, category2 ), categories. getValues ( ) )
22141	Assert. assertEquals ( "Wrong number of results", 2, results. length )
22142	assertEquals ( 2, tasks. size ( ) )
22143	assertTrue ( dtoProductTypeAttr. getProductTypeId ( ) > 0 )
22144	Assert. assertEquals ( "Some Privilege", privilege. getPrivilege ( ) )
22145	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 03" ) )
22146	assertEquals ( "fra 1 hari", t. format ( new Date ( 1000 * 60 * 60 * 1 ) ) )
22147	assertThat ( headlineOf ( view ), is ( "1 builds have failed since Ben, Connor committed their changes" ) )
22148	assertEquals ( read ( pom ), "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<project>\\n" + "    <!-- Repositories --> \\n" + "    <repositories>\\n" + "        <repository>\\n" + "            <id>central</id>\\n" + "            <name>Central Repository</name>\\n" + "            <url>http://repo.maven.apache.org/maven2</url>\\n" + "            <layout>default</layout>\\n" + "            <releases>\\n" + "                <updatePolicy>monthly</updatePolicy>\\n" + "                <snapshots>\\n" + "                <checksumPolicy>fail</checksumPolicy>\\n" + "            </snapshots>\\n" + "        </repository>\\n" + "    </repositories>\\n" + "</project>" )
22149	assertNull ( value )
22150	editor. assertProblems ( "name|Duplicate", "some.color|Duplicate", "red|Unknown property", "green|Unknown property" )
22151	assertEquals ( 2, context. getTableCount ( ) )
22152	assertThat ( commercialFeaturesArgument, is ( nullValue ( ) ) )
22153	Assert. assertEquals ( 65., tdCosts. getBackwardTransportTime ( loc ( "from" ), loc ( "to" ), 100., null, null ), 0.01 )
22154	assertEquals ( "Unexpected server selection timeout", expectedTimeout, clientOptions. getServerSelectionTimeout ( ) )
22155	assertFalse ( valid )
22156	assertEquals ( BuildState. SUCCESS, state )
22157	assertThat ( result. toString ( ), is ( equalTo ( "HELLO" ) ) )
22158	Assert. assertEquals ( 200, resp. getStatus ( ) )
22159	assertEquals ( result, expecting )
22160	assertTrue ( "permission should be granted.", updateUserPermission. isAllowed ( auth, 1L ) )
22161	assertEquals ( "val1", m. get ( key ) )
22162	assertFalse ( mainServices. isSuccessfulBoot ( ) )
22163	assertTrue ( "Hash is invalid", Arrays. equals ( SHA256_DIGEST. getBytes ( ), result. getBytes ( ) ) )
22164	assertEquals ( "test", sn. getSourceDestination ( ) )
22165	assertEquals ( perims. length, 8, perims. length )
22166	assertEquals ( 404, response. getStatus ( ) )
22167	assertEquals ( 1, results. length )
22168	Assert. assertNull ( objStat )
22169	assertEquals ( parent. models. size ( ), 1 )
22170	assertTrue ( validator. validate ( EntityNames. STUDENT, studentIds ). size ( ) == studentIds. size ( ) )
22171	assertEquals ( map. size ( ), 1 )
22172	assertNull ( recb. getValue ( ) )
22173	Assert. assertEquals ( 2, network. getInputsCount ( ) )
22174	assertDegenerate ( scan )
22175	assertEquals ( exp, array1 )
22176	Assert. assertEquals ( "{}", result )
22177	assertEquals ( expectedQuery, actualQuery )
22178	assertEquals ( "Unexpected size observed", 0, fail. value )
22179	assertEquals ( javaTimestamp, DateTimeUtil. getUTCDateTime ( datum ) )
22180	assertEquals ( expectedValue, value. getValue ( 101L ) )
22181	assertEquals ( 0., calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
22182	assertThat ( nameCollection. size ( ), is ( 0 ) )
22183	assertNotEquals ( aNumber, bNumber )
22184	assertTrue ( connection. isClosed ( ) )
22185	Assert. assertEquals ( 2, countNumberOfOccurence ( fullyQualifiedName, "code" ) )
22186	Assert. assertEquals ( reply, receivedReply )
22187	assertEquals ( nodeName, node. getName ( ) )
22188	assertEquals ( null, val )
22189	assertThat ( configuration, notNullValue ( ) )
22190	assertEquals ( "\\t\\t// e.g. : EasyMock.expect(mocked.called()).andReturn(1);", buf. toString ( ) )
22191	assertEquals ( service. getSize ( new String [ ] { "", "", "" } ), 3 )
22192	Assert. assertEquals ( 5, index )
22193	assertEquals ( "Unexpected locale from component", COMPONENT_LOCALE, locale )
22194	assertThat ( banco. getAgenciaECodigoBeneficiario ( beneficiario ), is ( "1234/12345678" ) )
22195	assertEquals ( "DUMMY", PageWithParameterizedURL. class. getName ( ) )
22196	assertEquals ( expected, actual )
22197	assertEquals ( 8, size )
22198	assertThat ( result. size ( ), is ( 0 ) )
22199	assertEquals ( 5, paragraphElement. getElementCount ( ) )
22200	assertThat ( cursor. asListRemaining ( ), hasItems ( "actors/Keanu" ) )
22201	assertEquals ( "Value not set", VALUE, config. getString ( testKey ) )
22202	Assert. fail ( "SocketException expected" )
22203	assertThat ( KeyFactory. stringToKey ( encodedKey ), is ( key ) )
22204	assertNotNull ( renderEngine )
22205	assertTrue ( "marker is replaceable when it when timestamp after expiry", marker. isReplaceableBy ( 101L, null, null ) )
22206	assertEquals ( HttpStatus. BAD_REQUEST, result. getStatusCode ( ) )
22207	assertEquals ( "4,2,6,1,3,5,7", TreeNodeHelper. inorderTraversal ( root ). toString ( ) )
22208	Assert. assertEquals ( "should have added user", testUser, actualUser. getName ( ) )
22209	assertPermanentCount ( playerA, "Eternalize {5}{U}{U}", 1 )
22210	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC, ScopePathType. PEER_REVIEW_READ_LIMITED )
22211	assertArrayEquals ( data, value. getData ( ) )
22212	assertTrue ( file. exists ( ) )
22213	assertEquals ( count. longValue ( ), 0 )
22214	assertEquals ( cfProvider. getConfiguredProperties ( ), ImmutableMap. of ( "serverUrl", MULTIPLE_ACTIVEMQ_BROKERS ) )
22215	assertEquals ( IsolationLevel. TRANSACTION, defaultIsolationLevel )
22216	assertEquals ( 0, result )
22217	assertOut ( "var a:* = (a + b)" )
22218	assertEquals ( 0, fetcher. getInstancesCount ( ) )
22219	assertEquals ( "Barry", id )
22220	assertEquals ( new ExtendedPanId ( "123456789abcdef" ), dongle. getZigBeeExtendedPanId ( ) )
22221	assertTrue ( result instanceof V8Function )
22222	assertNotNull ( account )
22223	assertIntersect ( ranges, "b", "l", "j" )
22224	assertEquals ( "[true,1.0,1.0f,1,1,123,1,2,3,{\\"abc\\":123}]", a. toString ( ) )
22225	assertTrue ( list instanceof LinkedList )
22226	Assert. assertEquals ( "1", att )
22227	assertEquals ( "test", empty. getMessageType ( ) )
22228	Assert. assertEquals ( 0, a. getCbo ( ) )
22229	assertEquals ( "1", idCaptor. getValue ( ). getIdPart ( ) )
22230	assertTrue ( validation. isSuccessful ( ) )
22231	assertEquals ( geo, expResult )
22232	Assert. assertEquals ( monitor1, monitor2 )
22233	assertEquals ( "First Value After Reset Is e", 'e', ( char ) _textReader. read ( ) )
22234	assertTrue ( runtimeTestComparator. compare ( runtimeTest1, runtimeTest2 ) < 0 )
22235	assertEquals ( expected, actual )
22236	AssertionUtils. multiAssertEquals ( createAsDocument10, response6. getResponseObject ( ) )
22237	Assert. assertFalse ( matcher. acceptAll ( ) )
22238	assertEquals ( "id", portResult. getComponent ( ). getId ( ) )
22239	Assert. assertEquals ( "password/change", view )
22240	assertThat ( table. asString ( ), equalTo ( untrimmedTableAsString ) )
22241	assertTrue ( future. get ( ) )
22242	assertEquals ( o, mockUser )
22243	assertThat ( numbers, arrayContaining ( 10, 15, 20 ) )
22244	assertEquals ( toString ( expected ), toString ( actual ) )
22245	Assert. assertTrue ( runner. contains ( task ) )
22246	assertThat ( renderedProjectName, startsWith ( "test_prefix_master" ) )
22247	Assert. assertEquals ( result. size ( ), str. length ( ) )
22248	assertPaths ( executionPaths, executionPath ( JCSwitch. class, JCBlock. class, JCBlock. class, JCBlock. class, JCCatch. class, JCReturn. class ) )
22249	paths. assertDoesNotContainFile ( INFO, actual, file )
22250	assertEquals ( "slaveName", helper. nextFreeIdentifierForResourceEditRelations ( relations, 21, StringUtils. EMPTY ) )
22251	assertFalse ( service. publish ( "message" ) )
22252	assertNotFound ( client. executePost ( "/foo", "{\\"key_a\\":\\"incorrect\\", \\"key_b\\":\\"value_b\\"}", ContentType. APPLICATION_JSON ) )
22253	assertEquals ( "tableName", database. escapeTableName ( null, null, "tableName" ) )
22254	context. assertTrue ( result. isEmpty ( ) )
22255	Assert. assertEquals ( Connection. TRANSACTION_READ_COMMITTED, connection. getTransactionIsolation ( ) )
22256	assertEquals ( 10, value )
22257	runner. assertTransferCount ( SplitText. REL_FAILURE, 1 )
22258	assertOut ( "var /** @type {string} */ a = escape('http://whatever.com')" )
22259	assertThat ( option, is ( new IntOption ( ( int ) 100 ) ) )
22260	assertEquals ( 98.7, empty. getHeadingToDestionation ( ), 0.1 )
22261	assertThat ( errors, not ( hasFieldErrors ( "middleName" ) ) )
22262	assertEquals ( "Incorrect version", version + 1, jobExecution. getVersion ( ) )
22263	assertTrue ( containsJob ( vrp. getJobs ( ). get ( "2" ), getRoute ( "19", Solutions. bestOf ( solutions ) ) ) )
22264	assertEquals ( 1, result )
22265	assertThat ( cb. getForwardCallback ( ), nullValue ( ) )
22266	assertNull ( context )
22267	Assert. assertEquals ( "The response status to a reqeuest with 'if-non-match=*' header should be NOT_MODIFIED(304), if the file exists", 304, response. getStatusLine ( ). getStatusCode ( ) )
22268	Assert. assertSame ( this. edit, this. mocker. getComponentUnderTest ( ). resolveAccessLevel ( "edit" ) )
22269	assertThat ( method. propertyName ( ), is ( "isATestMethod" ) )
22270	Assert. assertEquals ( 0.0d, singletest, 0 )
22271	assertEquals ( HawkError. EXPIRED, h. getError ( ) )
22272	assertThat ( falsePositiveCount < 5, is ( true ) )
22273	assertEquals ( 0, rotation )
22274	assertEquals ( ft. get ( j ), al. get ( j ) )
22275	assertEquals ( "modify$1stream", output )
22276	assertEquals ( true, out. firstElement ( ). get ( ) )
22277	assertNotNull ( entity. getId ( ) )
22278	assertEquals ( expected, elements )
22279	assertTrue ( ARQ. isTrueOrUndef ( ARQ. optTopNSorting ) )
22280	assertEquals ( expectedUsernamePasswordString, SecurityUtils. getUsernamePasswordDomainString ( username, password, domain ) )
22281	assertEquals ( "abc_2 OR abc_3", sb. toString ( ) )
22282	assertThat ( NF. booleanNode ( true ), is ( sut ) )
22283	assertThat ( results. hasNext ( ), equalTo ( false ) )
22284	assertTrue ( errors. isEmpty ( ) )
22285	assertEquals ( "Should not be able to execute a query with bad input", 0, sut. execute ( "select count(*) from shared_resource_by_unique_key" ) )
22286	assertTrue ( rf. supportsMultiSpop ( ) )
22287	Assert. assertEquals ( "{\\"@context\\":\\"../$metadata#ESAllPrim(4242)/PropertyString\\"," + "\\"@metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\",\\"value\\":null}", resultString )
22288	assertTrue ( p. isReadable ( Element. class, null, null, MediaType. valueOf ( "text/xml" ) ) )
22289	Assert. assertEquals ( tree. getSize ( ), 1 )
22290	assertEquals ( LazyInitRegistration. APPLICATION_CONTEXT, applicationContextMock )
22291	Assert. assertTrue ( new JSONObject ( PEDIGREE_2_MIGRATED_DATA ). similar ( new JSONObject ( captured ) ) )
22292	assertTrue ( entry. getValue ( ) )
22293	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
22294	assertEquals ( Arrays. asList ( "activated" ), list )
22295	assertEquals ( "whip", client. getStringStack ( ) [ client. getIntStackSize ( ) - 1 ] )
22296	assertEquals ( "123451234512345", entity. getId ( ) )
22297	assertEquals ( "select * from pet where pet.petId = 5", sql )
22298	assertTrue ( "Server should be able to connect to another server", server. canConnectToOtherServer ( new InetSocketAddress ( "127.0.0.1", now + 2000 ) ) )
22299	assertNotNull ( notebook )
22300	assertEquals ( 30.0, y. get ( InsideOutsideDepParse. ROOT_IDX, 0, 0 ), 0.01 )
22301	assertEquals ( utf8, bos. toString ( "UTF-8" ) )
22302	assertNotNull ( foundVarArgsMethod )
22303	assertThat ( writer. get ( ), is ( 2d ) )
22304	assertTrue ( output. startsWith ( "<!DOCTYPE html>" ) )
22305	assertEquals ( expected, actual )
22306	assertTrue ( "Challenges with same id can't be equal", challenge1. equals ( challenge2 ) )
22307	assertEquals ( 6, result. size ( ) )
22308	assertEquals ( "Wrong number of annotations", 2, results. size ( ) )
22309	Assert. assertEquals ( driver ( ). getTitle ( ), "We Arrive Here" )
22310	Assert. assertEquals ( id, infoEventoManifestacaoDestinatario. getId ( ) )
22311	assertEquals ( "Message: [ [request.body]] [ ]", ResponseBodyInterpolator. interpolate ( "Message: [ [request.body]] [ ]", req ) )
22312	assertArrayEquals ( new char [ ] {'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','', ', ', ', ', ', ', ',
22313	Assert. assertTrue ( false )
22314	assertEquals ( DATE_VAL_b, p. getDate ( ) )
22315	assertThat ( type, is ( DatabaseType. OTHER ) )
22316	assertResultSet ( res, "testDistinctAggregation_case3.result" )
22317	assertThat ( converter. toJavaObject ( new IntWritable ( 1 ) ), is ( ( Object ) 1 ) )
22318	assertEquals ( dto, dto2 )
22319	assertEquals ( "Base for strings is wrong", Integer. valueOf ( 3 ), parsed )
22320	assertStoreContainsAll ( entities )
22321	assertEquals ( expectedStringRepresentation, ind. toString ( ) )
22322	arrays. assertIsSubsetOf ( someInfo ( ), actual, newArrayList ( "Yoda", "Yoda", "Yoda" ) )
22323	assertFalse ( matcher. match ( rule ) )
22324	assertEquals ( "HelloWorldPortTypeImpl not properly saying hi", "Hello Sam", response )
22325	assertEquals ( expResult, result )
22326	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3 ) ) )
22327	assertEquals ( value, propertiesConfigurationProperties. getString ( key ) )
22328	assertEquals ( "test_run", HtmlUtils. parseHashtag ( html ) )
22329	assertFalse ( dss. hasJs ( ) )
22330	Assert. assertEquals ( "1", result )
22331	assertSamples ( )
22332	assertObjectEquals ( "{f1:'x1'}", p. run ( bs, in, sa ) )
22333	Assert. assertEquals ( 2, result. size ( ) )
22334	assertEquals ( expected, actual )
22335	assertThat ( className, is ( "org.adrianwalker.multilinestring.EcjMultilineProcessor" ) )
22336	assertEquals ( expected, actual )
22337	assertThat ( unix ( instance, strategy ), equalTo ( "0.0.0.0" ) )
22338	Assert. fail ( "an exception should have been thrown" )
22339	assertEquals ( "one -- two -- three -- four -- five -- six --", actualResult )
22340	assertEquals ( messagePage. getTotalPages ( ), pageCount, "Incorrect count of pages." )
22341	assertEquals ( value, client. get ( KEY1 ). toCompletableFuture ( ). get ( ) )
22342	assertEquals ( "1/m", u. toString ( ) )
22343	assertEquals ( "https://sentilo.domain.org:8080/mockResource?id=1", finalRedirectUrl )
22344	assertEquals ( "{\\"some\\":\\"data\\"}", playerGames. get ( "player" ). getGame ( ). getSave ( ). toString ( ) )
22345	assertEquals ( "test", n. getName ( ) )
22346	assertEquals ( BatchStatus. FAILED, jobExecution. getBatchStatus ( ) )
22347	assertEquals ( partitioner. getPartition ( key1, null, numPartitions ), partitioner. getPartition ( key2, null, numPartitions ) )
22348	assertNotNull ( conn )
22349	assertEquals ( testValue, actual )
22350	Assert. assertEquals ( expected, actual )
22351	assertThat ( vdl, is ( nullValue ( ) ) )
22352	assertEquals ( all, sm. getAll ( ) )
22353	assertThat ( result, is ( empty ( ) ) )
22354	assertThat ( user. getPassword ( ), is ( "encrypted" ) )
22355	assertEquals ( expectedBody, consulResponse. getBody ( ) )
22356	assertNull ( ContentType. getContentType ( param ) )
22357	assertEquals ( "", 0, info. size ( ) )
22358	assertEquals ( Arrays. asList ( new Category ( ) ), mockResult. included ( "categories" ) )
22359	assertThat ( new PdfTextExtractorByArea ( ). extractFooterText ( page ), containsString ( withBadCharacter ) )
22360	Assert. assertEquals ( widgetSize + 1, jq ( ".zswidget" ). length ( ) )
22361	assertEquals ( expected, actualQuery )
22362	assertEquals ( gfs. getPath ( ), path )
22363	assertEquals ( response. getStatus ( ), 200 )
22364	assertEquals ( expected, actual )
22365	assertEquals ( TRACKLED_PAWN_HANDICAP - ROOK_FILE_PASSED_PAWN_BOOST, score )
22366	assertEquals ( Type. CHAR, d. type ( ) )
22367	assertNotEquals ( insertAction, retractAction )
22368	assertTrue ( response. contains ( "Order Status" ) )
22369	assertNotNull ( solver )
22370	assertTrue ( resultMessage ( result, POST ), result. passedValidation ( ) )
22371	assertThat ( target. parse ( ), is ( false ) )
22372	assertEquals ( VerifyFailType. SORT, pluginParameters. verifyFailType )
22373	assertThat ( jsonGeneratorParser. toString ( ), is ( equalTo ( "\\"inAppModule\\"" ) ) )
22374	Assert. assertEquals ( 3, simulation. getPercentiles ( ). size ( ) )
22375	assertTrue ( Pattern. matches ( "(?s).*First0.*First1.*First2.*First3.*First4.*Last4.*", page. asXml ( ) ) )
22376	assertNotNull ( resolved )
22377	Assert. assertEquals ( 16, es. size ( ) )
22378	assertEquals ( "hi %s", instance. formatMessage ( record ) )
22379	assertEquals ( 1.0, result. getOccurrenceRatio ( ), 0.0 )
22380	assertTrue ( syncWorker. isAlive ( ) )
22381	assertEquals ( ShardConsumerState. INITIALIZING. consumerState ( ). state ( ), consumer. currentState ( ). state ( ) )
22382	Assert. assertEquals ( "some [b]bold[b] text", formatter. format ( "some [b]bold[b] text", defaultOptions ( ) ) )
22383	assertThat ( target. addLink ( link ), is ( true ) )
22384	assertEquals ( "January", translation )
22385	assertSynchAll ( picker, date )
22386	Assert. assertFalse ( validator. isValid ( "123456789", context ) )
22387	assertEquals ( expect, pred )
22388	assertEquals ( expectedRestriction, restriction )
22389	assertEquals ( "XML Equals", jdkXml, javolutionXml )
22390	assertTrue ( image. contains ( "Hello World!" ) )
22391	assertEquals ( expected, ld. getContentField ( "date" ) )
22392	Assert. assertEquals ( "SELECT " + fixedColumns + ",`foo.bar` FROM v WHERE _user_ ='me' GROUP BY `foo.bar`", sql )
22393	assertFalse ( niciraActionDeserializerKey. equals ( obj ) )
22394	assertEquals ( 201, getStatus ( post ) )
22395	assertTrue ( registry. contains ( "foo" ) )
22396	assertEquals ( "md5-f9c9e5-4d9e9b9d0e0f", computeTMTextUnitMD5 )
22397	assertEquals ( expected, actual )
22398	assertEquals ( expectedResult, result )
22399	assertFalse ( parsed. hasQuery ( ) )
22400	assertEquals ( count, 3 )
22401	assertEquals ( "((key!='stringhello'))", jexl )
22402	Assert. assertTrue ( scriptFile. exists ( ) )
22403	assertThat ( subject. supports ( update ), is ( true ) )
22404	assertThat ( job. getDuedate ( ), is ( removalTime ) )
22405	assertNotNull ( response )
22406	assertEquals ( getMessage ( MessageKeys. E_TR_TOKEN_VALID ), driver. findElement ( By. name ( "customerEmail" ) ). getText ( ) )
22407	Assert. assertEquals ( THIRTEEN_INTEGER, pi. getThirteenInteger ( ) )
22408	assertThat ( backend. isEmpty ( ), is ( true ) )
22409	assertThat ( address2. equalsContent ( address1 ), is ( false ) )
22410	assertEquals ( "a4c4d4e2b2b2c2d0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4b0e4
22411	Assert. assertTrue ( matches )
22412	assertEquals ( expected, actual )
22413	Assert. assertTrue ( "Failure - expected to be OK", status == 404 )
22414	Assert. assertTrue ( service. getUserInfo ( ) instanceof CustomUserInfoImpl )
22415	XmlAssert. assertEquals ( EXPECTED_XML_RESPONSE, xmlResponse )
22416	assertEquals ( 0, builder. getErrors ( ). size ( ) )
22417	assertEquals ( tuple, deserializedTuple )
22418	assertEquals ( "1 & 2 & 3", generate )
22419	assertThat ( entity. getLastModified ( ), is ( nullValue ( ) ) )
22420	assertFalse ( lock. lock ( ) )
22421	assertEquals ( hasNextField. get ( reader ), true, "hasNext field should be set to TRUE" )
22422	assertEquals ( "my-very-first-param and second_param_123 or something", result )
22423	assertRequest ( "DELETE", "Conference/" )
22424	Assert. assertEquals ( 0, t1. compareTo ( null ) )
22425	assertEquals ( "Cancelled default service com.alibaba.dubbo.rpc.protocol.dubbo.support.DemoService.", result )
22426	assertThat ( restored. get ( ), is ( option. get ( ) ) )
22427	assertThat ( axioms. isEmpty ( ), is ( true ) )
22428	assertTrue ( result. isSuccess ( ) )
22429	assertEquals ( version, semver. toString ( ) )
22430	Assert. assertFalse ( offsetwaiter. tryWaitfor ( new HostPort ( host, port ), masterInfo, executionLog ) )
22431	assertEquals ( multicron, cron. asString ( ) )
22432	Assert. assertEquals ( 1, result. getEntities ( ). size ( ) )
22433	assertEquals ( 86399., Time. parseTimeToSeconds ( time ), 0.01 )
22434	assertEquals ( fieldComparators, OrderedCollections. fieldComparators ( a, b ) )
22435	Assert. assertEquals ( config. getHashAlgorithm ( ), newVal )
22436	Assert. assertEquals ( new DoubleMatrix ( SOL_33_EXPECTED ), SOL_33_ACTUAL_ABS )
22437	assertFalse ( result )
22438	assertEquals ( childProject1. getCombinationFilter ( ), childCombinationFilter )
22439	Assert. assertNull ( pojo. testManager )
22440	Assert. assertSame ( TableTestUtils. ACTUAL_2, actual )
22441	assertEquals ( "Hello ^there", ResponseBodyInterpolator. interpolate ( "Hello ^there", req ) )
22442	assertEquals ( true, selector. isCountable ( ) )
22443	assertEquals ( "baz - baz", spec. getModulePrefs ( ). getTitle ( ) )
22444	assertEquals ( "", encryption )
22445	Assert. assertEquals ( "Incorrect heading returned", heading, group. getHeading ( ) )
22446	assertEquals ( "Expected 2 results!", 2, n )
22447	assertEquals ( "1/kg", u. toString ( ) )
22448	assertEquals ( 0, impl. getArgumentIndex ( ) )
22449	assertThat ( result, is ( empty ( ) ) )
22450	assertEquals ( 0, empty. getCategoryCount ( ) )
22451	assertFalse ( result )
22452	assertEquals ( 2, hitCount )
22453	assertEquals ( "x containsKey 'name'", c. toString ( ) )
22454	assertArrayEquals ( plaintext, result )
22455	assertTrue ( result. isLeft ( ) )
22456	assertFalse ( tQuery. containsRowWithKey ( 0 ) )
22457	assertEquals ( wrappedTemplate + " LIKE?", test. build ( ) )
22458	Assert. assertEquals ( actualMav, null )
22459	Assert. assertTrue ( list. size ( ) > 0 )
22460	assertEquals ( LOGIN_URL, response. getRedirectedUrl ( ) )
22461	assertEquals ( 10, reportsCount. get ( ) )
22462	assertEquals ( 0, figure. getRowCodes ( ). size ( ) )
22463	assertEquals ( EntityNameCharType. BOUNDARY, type )
22464	Assert. assertEquals ( "string", an. getCustom ( "custom_field_string" ) )
22465	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4 ) ) )
22466	assertEquals ( "1,2,3", ExpressionFieldAction. process ( action, Arrays. asList ( 1, 2, 3 ) ) )
22467	Assert. assertEquals ( "200", capturaReturn. getReturn ( ). getCaptura ( ) )
22468	assertEquals ( "17880100dc880b", address. toString ( ) )
22469	assertTrue ( res. next ( ) )
22470	assertEquals ( "filename.middle.thumbnail.jpg", filename )
22471	assertTrue ( report. getReportLines ( ). isEmpty ( ) )
22472	Assert. assertEquals ( xmlEsperado, icmsst. toString ( ) )
22473	assertThat ( returnedStatement, is ( equalTo ( base ) ) )
22474	assertEquals ( "Wrong content", CONTENT, content. getContent ( ) )
22475	Assert. assertNotNull ( jis. getManifest ( ) )
22476	assertSame ( expr. accept ( visitor ), visitResult )
22477	assertEquals ( asList ( new File ( "/opt" ), new File ( "/var" ) ), nonOptions. values ( options ) )
22478	assertThat ( Visitors. readable ( query ), is ( "SELECT selector1.* FROM nt:unstructured WHERE selector1.jcr:uuid IS NOT NULL ORDER BY NAME(selector1) ASC NULLS LAST" ) )
22479	assertEquals ( 2, g. getLength ( ) )
22480	Assert. assertEquals ( "import org.talend.talend.utils.Language.Person;", output. trim ( ) )
22481	Assert. assertEquals ( path, ".." + File. separatorChar + ".." )
22482	assertEquals ( result, "" )
22483	assertFalse ( "No Longer Contains Test1", _fastTable. contains ( "Test1" ) )
22484	assertEquals ( newArrayList ( conditions ), join. conditions )
22485	assertTrue ( got. contains ( "Enabled service account:" ) )
22486	Assert. assertTrue ( instantiatorResource. meetsQuantitativeRequirements ( request ) )
22487	assertEquals ( "com.test.Presenter", e. getClassName ( ) )
22488	assertEquals ( 404, responseGet. getStatus ( ) )
22489	assertThatEditorHasValue ( comboBox, 20 )
22490	Assert. assertTrue ( json. contains ( "counter=5" ) )
22491	assertEquals ( 40, p. getAge ( ) )
22492	assertThat ( project. version ( ), is ( "TESTING" ) )
22493	assertThat ( seleniumQueryObject. toString ( ), is ( format ( "$(\\"%s\\").filter(\\"%s\\").toString()", selector ) ) )
22494	assertValidReplaceKind ( repositoryRoot, revision, SVNNodeKind. DIRECTORY )
22495	Assert. assertEquals ( 2, Context. getSearchIndex ( ). getPatients ( ). size ( ) )
22496	assertEquals ( str, str2 )
22497	assertEquals ( "Locations should be the same even though they were expressed differently", l, r )
22498	assertContains ( "<p class=\\"slide-autodate\\"></b>", result. xml )
22499	mock. assertIsSatisfied ( )
22500	assertEquals ( "http://www.eu.com", asyncClient. getBaseUri ( ) )
22501	Assert. assertEquals ( numeroNFInicial, dados. getNumeroNFInicial ( ) )
22502	Assert. assertEquals ( 200, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
22503	assertThat ( actual, is ( equalTo ( "custom-schema-description=descr-custom" ) ) )
22504	Assert. assertEquals ( Integer. valueOf ( 128 ), iStack. pop ( ) )
22505	assertNull ( "The appender should be null.", appender )
22506	ConcurrentTestUtil. assertConcurrent ( "", runnables, TEST_TIMEOUT )
22507	assertEquals ( new BigDecimal ( "0.00" ), accountBalance. getBalance ( ) )
22508	assertEquals ( 0, results. getMessages ( ). size ( ) )
22509	assertArrayEquals ( expected, actual )
22510	assertArrayEquals ( original, ArrayUtils. nullToEmpty ( original ) )
22511	assertEquals ( Collections. emptyList ( ), dto. getUserContacts ( ) )
22512	assertEquals ( Arrays. asList ( parent1, parent2 ), instance. getParents ( ) )
22513	Assert. assertEquals ( "handle = MethodHandles.foldArguments(handle, " + Fold. FOLD_FUNCTION_JAVA + ");", toJava )
22514	assertEquals ( "a", provider. getOther ( new Request ( ) ) )
22515	assertEquals ( - 1, ret )
22516	assertThat ( milestoneTracker. isInSyncTestScanIncomplete ( ), is ( false ) )
22517	assertEquals ( sv. getString ( context. getValue ( ) ), provider. getString ( context. getValue ( ) ) )
22518	assertEquals ( exp, matrix )
22519	assertFalse ( action. canHandle ( flaggable ) )
22520	assertEquals ( "Observation types should be empty", 0, list. size ( ) )
22521	assertEquals ( expResult, result )
22522	assertEquals ( expectedQuery, actualQuery )
22523	assertEquals ( orginalCollection, set. get ( ) )
22524	Assert. assertTrue ( evictor instanceof DefaultEvictor )
22525	assertEquals ( expectedMap, map )
22526	Assert. fail ( "Should have thrown exception" )
22527	assertEquals ( "SimplestFlowPath", lineage. getPath ( ) )
22528	assertRowCount ( results, 1 )
22529	PSLTest. assertRule ( dataStore, rule, "Single(A) / 0 + Single(B) = 0.0.", "2 / (2 - 2) * Single(A) + Single(B) = 0.0.", "Single(A) / @Min[0, 1] + Single(B) = 0.0.", "Single(A) / @Min[0, 1] + Single(B) = 0.0.", "Single(A) / @Min[0, 1] + Single(B) = 0.0.", "Single(A) / @Min[0, 1] + Single(B) = 0.0.", "Single(A) / @Min[0, 1] + Single(B) = 0.0.", "Single(A) / @Min[0, 1] + Single(B) = 0.0.", "Single(A) / @Min[0, 1] + Single(B) = 0.0.", "Single(B) / @Min[0, 1] + Single(B) = 0.0."
22530	assertNotNull ( object )
22531	assertEquals ( 1, rpt. size ( ) )
22532	assertEquals ( "<p><a rel=\\"nofollow\\">Dodgy</a> <a href=\\"http://nice.com\\" rel=\\"nofollow\\">Nice</a></p><blockquote>Hello</blockquote>", TextUtil. stripNewlines ( cleanHtml ) )
22533	assertNotNull ( streamable )
22534	assertEquals ( Arrays. asList ( "D", "A", "C", "BA", "BB", "C", "D" ), result )
22535	assertEquals ( expected. toString ( ), actual )
22536	assertEquals ( optionsComputed, optionsGiven )
22537	assertThat ( actual. getExtra ( ), is ( empty ( ) ) )
22538	assertEquals ( "Nummisuutarit", document. get ( "title" ) )
22539	assertEquals ( stage, c. completable. whenFailed ( consumer ) )
22540	Assert. assertTrue ( false )
22541	assertThat ( options. getCredentialsProvider ( ), is ( URI. create ( "https://api.digitalocean.com" ) ) )
22542	Assert. assertEquals ( "Should have found 2 jobs", 2, jobs. size ( ) )
22543	assertThat ( mock. initialDelay, is ( 0L ) )
22544	assertEquals ( "1", result )
22545	assertOut ( "/**\\n * @constructor\\n */\\nB = function() {\\n};\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('B', B);\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('B', B);\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('B', B);\\n\\n\\n/**\\n * @export\\n * @type {Object}\\n */\\nB.prototype.foo1 = function() {\\n  return null;\\n  return bar1();\\n};\\n\\nB.prototype.foo2 = function(param1) {\\n  return bar2('foo');\\n};\\n\\n\\n\\n/**\\n * @export\\n * @type {string}\\n */\\nB.prototype.foo2 = function() {\\n  return null;\\n};\\nB
22546	assertThat ( "Amber alert strip should be shown", Robolectric. shadowOf ( activity ). getLastShownDialogId ( ), equalTo ( R. id. ign_amber_alert_strip ) )
22547	assertEquals ( new Integer ( "2147483647" ), result )
22548	assertEquals ( "I hear you: Camel Rocks", out. toString ( ) )
22549	assertSame ( logger1, logger2 )
22550	assertTrue ( root. isHandled ( "/aa" ) )
22551	assertTrue ( STRATEGY. shouldTerminate ( context ) )
22552	assertSame ( entityA. getEnumProperty ( ), copy. getEnumProperty ( ) )
22553	assertEquals ( hll. cardinality ( ), hll2. cardinality ( ) )
22554	assertEquals ( expectedId, dbms. getId ( ) )
22555	assertEquals ( response, actualResponse )
22556	assertTrue ( failedAsExpected )
22557	assertNull ( id )
22558	objects. assertHasAllNullFieldsOrPropertiesExcept ( someInfo ( ), jedi, "name" )
22559	assertThat ( location, is ( nullValue ( ) ) )
22560	assertEquals ( "IdentifierLabel", resource. getIdentifier ( ). get ( 0 ). getValue ( ) )
22561	assertThat ( read ( format, written ), contains ( true ) )
22562	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getAllPrivileges ( set ( "other_group" ), ActiveRoleSet. ALL ) ). toString ( ) )
22563	assertDefaults ( targetProduct, false )
22564	assertChildrenInclude ( branches, "origin" )
22565	Assert. assertEquals ( 1, result. size ( ) )
22566	assertTrue ( classesPassedToFactory. contains ( config. getBeanClass ( ) ) )
22567	Assert. assertFalse ( "Invalid result", result )
22568	assertEquals ( MockHttpServletResponse. SC_OK, response. getStatus ( ) )
22569	assertEquals ( "", "" + swct )
22570	assertEquals ( "cde", test. getBuffer ( ) )
22571	assertEquals ( Boolean. TRUE, e. getEnableCounting ( ) )
22572	Assert. assertTrue ( this. manager. delete ( this. doc ) )
22573	assertThat ( CorcInputFormat. toKryo ( kryo ), is ( searchArgument ) )
22574	assertTrue ( res. equals ( result. toString ( ) ) )
22575	assertEquals ( expected. getSequenceNumber ( ), nextSubscribeCaptor. getValue ( ). getSequenceNumber ( ) )
22576	assertEquals ( expected, new Body ( new StringReader ( expected ) ) )
22577	assertEquals ( BuilderFactory. start ( ). addNumberLong ( "a", 123456789L ). build ( ), doc )
22578	assertThat ( confirmation. getConfigurationKey ( ), equalTo ( keyValueType ) )
22579	assertEquals ( childProject1. getTouchStoneCombinationFilter ( ), childCombinationFilter )
22580	assertEquals ( expResult, result )
22581	assertEquals ( "TitleToIgnore", metadata. get ( Metadata. TITLE ) )
22582	assertEquals ( jobTrackerPort, namedClusterBridge. getJobTrackerPort ( ) )
22583	TestCase. assertEquals ( 403, response. getStatusLine ( ). getStatusCode ( ) )
22584	Assert. assertEquals ( cDate, eDate )
22585	Assert. assertTrue ( "Best point not reported", f. value ( sol ) <= f. value ( expected ) )
22586	rule. assertScenarioEnded ( )
22587	assertFalse ( order. hasSameOrderableAs ( otherOrder ) )
22588	assertEquals ( "Hello World", translate. execute ( "Hello World", Language. FRENCH, Language. ENGLISH ) )
22589	assertTrue ( resultMessage ( result, POST ), result. passedValidation ( ) )
22590	Assert. assertEquals ( 1, set. size ( ) )
22591	assertions. isNotLessThan ( new Short ( ( short ) 10 ) )
22592	assertTrue ( activityBeanDefinitionService. isAValidPerspectiveDefinition ( activityDefinition ) )
22593	Assert. assertEquals ( "Update_rows_v1", actual )
22594	assertEqualsIgnoreWhitespace ( drl, actualDrl )
22595	assertEquals ( "Editable owner ACE for UID1 should be equal to expectedOwnerAccessControlEntry", expectedOwnerAccessControlEntry, store. getEditableOwnerAccessControlEntries ( UID1 ). get ( 0 ) )
22596	assertEquals ( "The job has been failed", LauncherStatus. COMPLETED, AddVectorET. runAddVector ( args ) )
22597	assertEquals ( reqTotal, grpcServerMetrics. getRequestsTotal ( ) )
22598	assertThat ( CompUInt128. extractValue ( actual ), Is. is ( expected ) )
22599	assertEquals ( 400, status. getStatusLine ( ). getStatusCode ( ) )
22600	assertEquals ( expected, msg )
22601	assertTrue ( list. equals ( plist ) )
22602	assertTrue ( showView. isShow ( ) )
22603	assertTrue ( dependentService. getValue ( ) == null )
22604	assertEquals ( sampleEntities. size ( ), results. getTotalElements ( ) )
22605	assertThat ( matcher. matches ( list ), is ( true ) )
22606	assertEquals ( g1, g2 )
22607	assertEquals ( 2, i )
22608	assertFalse ( matches )
22609	assertIsSatisfied ( 2L, TimeUnit. SECONDS, out )
22610	assertNotNull ( post )
22611	assertEquals ( 84.0, r. getUpperBound ( ), 0.00001 )
22612	arrays. assertDoesNotContain ( description, actual, value, index )
22613	assertEquals ( "close", sqsConnection. getState ( ) )
22614	assertEquals ( 2, messages. size ( ) )
22615	assertFalse ( set1. equals ( set2 ) )
22616	assertNotNull ( nacionalidad. getId ( ) )
22617	assertEquals ( "a<V>\\n", found )
22618	assertNotEqualsBothWays ( one, two )
22619	assertThat ( catalogue. allAttributes ( ). keySet ( ), hasItems ( "getField", "setField" ) )
22620	assertThat ( PrettyTime. of ( Locale. US ). withDefaultListSeparator ( " | " ). withLastListSeparator ( " + " ). print ( duration, TextWidth. WIDE ), is ( "1 year | 2 months + 3 days" ) )
22621	assertTrue ( "The subject should have retain all the fetched values", result1 )
22622	assertTrue ( process. isExitOnStandardFault ( ) )
22623	assertEquals ( ExpressionFactory. dbPathExp ( "paintingArray.toArtist.artistExhibitArray.toExhibit" ), translatedExpression )
22624	assertOut ( "var a:XML = XML('@')" )
22625	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), hasItem ( createConfigMapKeyRefEnvVar ( "VARIABLE1", "my-env", "VAR1" ) ), hasItem ( createSecretKeyRefEnvVar ( "VARIABLE2", "my-secret", "VAR2" ) ), hasItem ( createFieldRefEnvVar ( "MY_NODE_IP", "status.hostIP" ) ) )
22626	assertTrue ( bugs. toString ( ), bugs. isEmpty ( ) )
22627	assertEquals ( "Expected that a @Stateful proxy reference doesn't change bean target, ", report. beanId1, report. beanId2 )
22628	Assert. assertEquals ( expected, widgetFromService )
22629	Assert. assertEquals ( Arrays. asList ( "4" ), b. getStrings ( ) )
22630	assertTrue ( eq. interpret ( Version. valueOf ( "1.2.3" ) ) )
22631	Assert. assertEquals ( "Secure Hello World!", proxy. sayHello ( ) )
22632	assertTrue ( actual. isBoolean ( ) )
22633	assertEquals ( expResult, result )
22634	assertEquals ( NOT_DECODED, 1, object. getIdentifier ( ) )
22635	assertEquals ( 15, atAct2. get ( 0 ) )
22636	TestUtil. assertEquals ( exp, spans )
22637	assertTrue ( width == 200 )
22638	assertEquals ( HttpResponseStatus. FORBIDDEN, requestImpl. status ( ) )
22639	assertEquals ( actual, expected )
22640	assertEquals ( 1, savedRow )
22641	assertNull ( deliverer )
22642	Assert. assertTrue ( cover. getBoundaries ( ). getX ( ). getMax ( ) > TEST_MODEL. getBoundaries ( ). getX ( ). getMax ( ) )
22643	assertEquals ( text, message. asTextMessage ( ) )
22644	Assert. assertNotNull ( product )
22645	assertFalse ( "Rules with different priority cannot be equal", r1. equals ( r2 ) )
22646	assertEquals ( expected, result )
22647	assertArrayEquals ( BufferUtils. getIncreasingByteArray ( ( int ) BLOCK_LENGTH, 0 ), b )
22648	assertEquals ( new Integer ( 15 ), age )
22649	assertTrue ( latch. await ( 5, TimeUnit. MILLISECONDS ) )
22650	Assert. assertEquals ( resourceContent, writer. toString ( ) )
22651	assertEquals ( 2, invokedTimes. get ( ) )
22652	Assert. assertTrue ( queryResult. getSize ( ) >= 1 )
22653	assertThat ( NF. textNode ( "foo" ), is ( sut ) )
22654	assertEquals ( "GBP 1.11", test. toString ( ) )
22655	arrays. assertIsSubsetOf ( someInfo ( ), actual, newArrayList ( "Luke", "Yoda" ) )
22656	assertEquals ( 0, bpt. getOutputError ( ). getTotalNetworkError ( ), 0.1 )
22657	assertMessages ( "read", 3, "readCbuf" )
22658	assertEquals ( "full, 3/4 5/6 7/8 9/2 10/2? 2017", descriptor. describe ( cron ) )
22659	assertEquals ( SchemaFromInd1OrIf7FromSubfield2. class, field. getDefinition ( ). getFieldIndexer ( ). getClass ( ) )
22660	assertThat ( crawlRules. getWaitAfterReload ( ), is ( 123L ) )
22661	Assert. assertEquals ( 6, response. getTotalHits ( ). value )
22662	assertEquals ( "Expected 0 results!", 0, count )
22663	assertResult ( testSubject. findAnnotatedModel ( "one" ), ONE, "asd" )
22664	assertEquals ( expected, replaceAclEntries ( existing, aclSpec ) )
22665	assertEquals ( OP_PROP_VALUE, parsed. getOperationName ( ) )
22666	assertEquals ( expected, actual )
22667	Assert. assertEquals ( 4., analyser. getWaitingTime ( route ), 0.01 )
22668	assertEquals ( p1, p2 )
22669	Assert. assertTrue ( "Fraction for " + i + " is " + daycountFractionICMA + " instead of " + daycountFractionISDA, daycountFractionICMA >= daycountFractionISDA )
22670	assertEquals ( "test", profileProperties. getProperty ( "test" ) )
22671	assertFalse ( alive )
22672	assertEquals ( 1, commission, 0 )
22673	assertInstanceOf ( SwapMoveSelector. class, moveSelector )
22674	assertEquals ( asList ( error ( mdcValues, marker, throwable, message ) ), testLogger. getLoggingEvents ( ) )
22675	assertThat ( content. getTitle ( ), equalTo ( "http://www.example.com" ) )
22676	Assert. assertNotNull ( controllerResponse )
22677	Assert. assertEquals ( state, updates. getSyncState ( userName, folderId ) )
22678	assertThat ( backtrace, hasItem ( "at airbrake.Exceptions.newException:in `newException'" ) )
22679	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
22680	Assert. assertEquals ( true, agent. detectIpod ( ) )
22681	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
22682	Assert. assertEquals ( count / 2, ctr. getCount ( ) )
22683	assertFalse ( output, output. contains ( uuid ) )
22684	assertEquals ( expected, ex. getMessage ( ) )
22685	assertEquals ( new org. apache. http. client. utils. URIBuilder ( SERVICE_ROOT + "/Products(5)" ). addParameter ( "$expand", "ProductDetails($expand=ProductInfo;$select=Price)" ). build ( ), uri )
22686	assertEquals ( 0, reporter. problemOccurrences ( ) )
22687	assertEquals ( 1, events. size ( ) )
22688	throwables. assertHasMessageMatching ( info, actual, MESSAGE )
22689	Assert. assertEquals ( 24, concept. getId ( ). intValue ( ) )
22690	assertEquals ( 2, tdefsRes. getBody ( ). length )
22691	assertTrue ( page. asText ( ). contains ( "myDescription" ) )
22692	assertEquals ( expResult, result )
22693	assertEquals ( value, result )
22694	Assert. assertTrue ( true )
22695	assertEquals ( expectedAst, ast. dump ( "" ) + "\\n" )
22696	assertEquals ( "Find by UOM label not returning a list with one reading", 1, readings. size ( ) )
22697	assertOut ( "RoyaleTest_A.prototype.foo = function() {\\n  this.apply(this, [a, b, c]);\\n};" )
22698	assertNotNull ( stream )
22699	assertThat ( qualityResult. getMeasurement ( coverageMeasure ), is ( notNullValue ( ) ) )
22700	assertEquals ( "fail", thrown. getMessage ( ) )
22701	assertEquals ( propMatch, properties )
22702	assertEquals ( CONTENT_TYPE_PNG, httpResponse. getHeader ( CONTENT_TYPE_HEADER ) )
22703	Assert. assertEquals ( "/test/resource=name", s )
22704	assertEquals ( expectedForceObject, tree. get ( 0 ) )
22705	Assert. assertEquals ( 2, fromDependencies. size ( ) )
22706	assertEquals ( "819: invokevirtual #38                 // Method org/adoptopenjdk/jitwatch/model/Tag.getName:()Ljava/lang/String;", result )
22707	assertEquals ( METHOD_COUNT, functionImportList. size ( ) )
22708	assertEquals ( ansi ( ). bold ( ). fg ( Color. GREEN ). toString ( ), str )
22709	assertTrue ( s. isSentToRawPubKey ( ) )
22710	assertNotNull ( jobsResponseParser. updateTwin )
22711	assertThat ( ( TraceeBackend ) FieldAccessUtil. getFieldVal ( interceptor, "backend" ), is ( Tracee. getBackend ( ) ) )
22712	assertEquals ( expected, actual )
22713	Assert. assertTrue ( handle )
22714	assertEquals ( 1, tableDesc. getPrimaryKeyDescList ( ). size ( ) )
22715	assertTrue ( voter. voteMatch ( affiliation, organization ) )
22716	Assert. assertEquals ( 51.0, activityState, 0.01 )
22717	Assert. assertEquals ( expectedString, resultString )
22718	Assert. assertEquals ( "order", created. get ( "type" ) )
22719	assertNotNull ( reportExecTO )
22720	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
22721	assertLinkWithPoolgroupsOk ( poolgroups )
22722	assertEquals ( id3v1Tag, wrapper. getId3v1Tag ( ) )
22723	assertNull ( classUnderTest. getStatusBarFontInfo ( ) )
22724	assertNotNull ( bar )
22725	assertThat ( issue. toString ( ), is ( "foo.js:1,1,1,you broke it" ) )
22726	assertThat ( result, is ( nullValue ( ) ) )
22727	Assert. assertEquals ( "�����������������������������������������������������������������������������������
22728	assertEqualsSet ( "DataOneOf.rdf", ax, Declaration ( DP ) )
22729	assertFalse ( result )
22730	assertEquals ( "!y\\n", sWriter. toString ( ) )
22731	assertThat ( factory. buildConfiguration ( ), is ( notNullValue ( ) ) )
22732	assertEquals ( Status. DEADLINE_EXCEEDED. getCode ( ), status. getCode ( ) )
22733	assertNotNull ( result )
22734	assertNotNull ( "WorkersCompensationRate is null", entity )
22735	assertNotNull ( Mobile. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
22736	assertFalse ( d_pm. getCriterionEnabledModel ( ExampleData. buildEndpointHamd ( ) ). getValue ( ) )
22737	assertThat ( result, is ( nullValue ( ) ) )
22738	assertEquals ( expecteds, actuals )
22739	assertEquals ( AuthorizationResult. Decision. PERMIT, result. getDecision ( ) )
22740	assertions. isNotLessThan ( expected )
22741	assertEquals ( "Expecting empty list when no task available!", 0, tasks. size ( ) )
22742	assertSerializedEquals ( c )
22743	assertEquals ( "3 啶�啶�啷�", t. format ( new Date ( 1000 * 60 * 60 * 24 * 3 ) ) )
22744	Assert. assertEquals ( "", result )
22745	assertEquals ( s_expected_1, Hex. toHexString ( item1. getData ( ) ). toUpperCase ( ) )
22746	Assert. assertEquals ( "someMethodFromParent", testBean. someMethodFromParent ( ) )
22747	assertEquals ( exp, act )
22748	assertions. isNotEqualTo ( actual )
22749	assertNotNull ( AvailableAddOnExtension. reader ( "XBXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
22750	assertEquals ( componentName, "${componentNameClass}Output" )
22751	assertTrue ( e. getMessage ( ). contains ( badCell ) )
22752	assertThat ( isValid, is ( true ) )
22753	assertTrue ( mutationsOccurred. get ( ) )
22754	Assert. assertTrue ( convert ( path, namespace, files ). isEmpty ( ) )
22755	assertEquals ( expected, result )
22756	assertEquals ( HttpStatusCode. NOT_FOUND_404, response. getStatusLine ( ). getStatusCode ( ) )
22757	assertEquals ( expected, actual )
22758	assertEquals ( Status. INTERNAL_SERVER_ERROR, status )
22759	assertEquals ( subsection, section. getConfigurationSection ( key ) )
22760	assertTrue ( result. size ( ) >= 1 )
22761	assertEquals ( 1, statisticsController. player1winnings )
22762	assertEquals ( "", result )
22763	assertEquals ( out. readableBytes ( ), 0 )
22764	assertEquals ( 174, readValue )
22765	assertThat ( sampleEntity1. id, is ( documentId ) )
22766	assertCharsets ( JodaBeanSer. PRETTY, json, bean, Address. class )
22767	assertEquals ( "Good Morning!", hello. sayHello ( ) )
22768	assertEquals ( 1, testApp. executeApplication ( args ) )
22769	assertEquals ( 1, places. size ( ) )
22770	assertTrue ( "Error occurred during test load: " + errors, errors. isEmpty ( ) )
22771	Assert. assertEquals ( "Number of blocks is not correct", TEST_BLOCK_COUNT, number )
22772	assertEquals ( "this", global. getString ( "hashCode" ) )
22773	assertTrue ( cassandraService. isStopped ( ) )
22774	assertEquals ( "璁＄����璇�", 1, rs )
22775	assertEquals ( ( short ) 255, buffer. getShort ( 0 ) )
22776	assertEquals ( 2, instance. getFeatures ( ). size ( ) )
22777	assertEquals ( expResults, results )
22778	assertEquals ( expected, test )
22779	assertEquals ( expected, actual )
22780	assertEquals ( "S3A_OL_1_EFR_20181001T022958_20181001T023258_20181002T090807_0179_036_203_1980_MAR_O_NT_002.SEN3", name )
22781	Assert. assertTrue ( errors. hasFieldErrors ( "name" ) )
22782	SqlScriptDescriptorAssert. assertThat ( scriptDescriptors )
22783	assertTrue ( foundDOI )
22784	assertEquals ( propertyValue, resultMap. get ( "Name" ) )
22785	Assert. assertEquals ( 2, encounters. size ( ) )
22786	assertEquals ( expecting, found )
22787	assertThat ( references. size ( ), is ( 0 ) )
22788	assertEquals ( "0.0.0.0", Hex. toHexString ( addr ) )
22789	visitor. assertSatisfied ( "checking state contains two branches", _rootComposite )
22790	assertEquals ( numMessagesFirstPass, numMessagesSecondPass )
22791	assertTrue ( "size must be more than 0, but it is - " + queryModel. size ( ), queryModel. size ( ) > 0 )
22792	assertEquals ( normalized, i, 0 )
22793	assertEquals ( "", lijst. getLast ( ) )
22794	Assert. assertNotEquals ( first, second )
22795	assertFileContentIsMatching ( result )
22796	assertEquals ( "x", x )
22797	assertThat ( resultSet, hasSize ( 1 ) )
22798	assertEquals ( "EPSG:4326", pj. getDatumType ( ) )
22799	assertModelIsEmptyList ( )
22800	assertEquals ( limit, total. sum ( ) )
22801	assertParseTree ( rootNode ( "12", node ( "digits", Arrays. asList ( "1", "2" ), "12", stringNode ( "d", "1" ), stringNode ( "d", "2" ) ) ), tree )
22802	assertEquals ( expResult, result, 0.0001 )
22803	assertMessage ( ":1 You haven't specified the command output.", response )
22804	assertEquals ( 1, findings. size ( ) )
22805	assertNull ( reader. overflowAtoms ( ) )
22806	assertEquals ( "Hash is invalid", SHA256_DIGEST_EMPTY_STRING, result )
22807	assertEquals ( cr. getStatus ( ), STATUS200 )
22808	assertEquals ( 1, findAll. size ( ) )
22809	assertMockEndpointsSatisfied ( )
22810	assertFalse ( result )
22811	assertThat ( result, is ( "OrderServiceImpl: function(): Static RuntimeException: staticFunction" ) )
22812	assertTrue ( service. existsPermissionGroup ( "test pg" ) )
22813	assertThat ( commands [ 0 ], is ( "echo hello\\necho world" ) )
22814	assertEquals ( "(foo void ;)\\n", found )
22815	assertThat ( configuration, notNullValue ( ) )
22816	assertEquals ( "The output peer is not the same as the input peer", "output peer", wsis. getPeer ( ) )
22817	assertThat ( mailerFactory. create ( env ), is ( instanceOf ( MockMailer. class ) ) )
22818	assertThat ( patientResource. getProfile ( ), containsString ( PATIENT_SUB ) )
22819	Assert. assertThat ( actual, CoreMatchers. is ( expected ) )
22820	assertNotNull ( "invalid irida workflow", iridaWorkflowLoaderService. loadIridaWorkflow ( workflowDescriptionPath ) )
22821	assertThat ( contentType. toString ( ), is ( contentTypeString ) )
22822	Assert. assertNotNull ( "Expected to be able to get MeteredClassInterface by interface and not by class.", mi )
22823	assertEquals ( "Message not found", "Please enter a value", driver. findElement ( By. cssSelector ( ".error" ) ). getText ( ) )
22824	assertThat ( result, is ( false ) )
22825	assertEquals ( expectedSplits, new TreeSet < > ( createdSplits ) )
22826	assertEquals ( MinaTransporter. class, ExtensionLoader. getExtensionLoader ( Transporter. class ). getExtension ( name ). getClass ( ) )
22827	assertThat ( result. size ( ), is ( 0 ) )
22828	assertEquals ( false, rm. incomingServerRequestMatchesMethod ( withResourceAndParams ( "Patient", RequestTypeEnum. GET, inputParams ) ) )
22829	assertThat ( imageName, is ( defaultImages. getDefaultBaseImage ( Application. class ) ) )
22830	assertThat ( underTest. isSatisfied ( ), is ( true ) )
22831	assertEquals ( "h-na-alice-wa-suki-desu-ka-do-you-like-alice-when_321609", ripper. getGID ( url ) )
22832	assertEquals ( ( short ) 8, ( short ) result. getShortWrapperValue ( ) )
22833	assertEquals ( "novecentos e noventa e nove trilh玫es, " + "novecentos e noventa e nove bilh玫es, " + "novecentos e noventa e nove milh玫es, " + "novecentos e noventa e nove mil e, " + "novecentos e noventa e nove reais", words )
22834	mock. assertIsNotSatisfied ( )
22835	assertThat ( found, equalTo ( expected ) )
22836	assertEquals ( member, returnedMember )
22837	context. assertIsSatisfied ( )
22838	assertIsErrorWithoutStacktrace ( "Method 'notTheMethod' was not found in class 'com.fnproject.fn.runtime.testfns.ErrorMessages.OneMethodClass'. Available functions were: []" )
22839	assertCity ( docs, "Erlangen" )
22840	assertTrue ( "http://foo.bar.com/fubar?a=d&e=f". equals ( newEu ) || "http://foo.bar.com/fubar?e=f&a=d". equals ( newEu ) )
22841	Assert. assertTrue ( "Expected aKRB5 cipher suites, got null", resolved!= null && resolved. size ( )!= 0 )
22842	assertThat ( integerProperty, is ( equalTo ( 42 ) ) )
22843	assertEquals ( "V2 GenreDescription", wrapper. getGenreDescription ( ) )
22844	assertEquals ( response. getStatus ( ), HttpServletResponse. SC_NOT_MODIFIED )
22845	assertThat ( screenshotDirectory, endsWith ( "screenshots" + separator + anyFileName + ".png" ) )
22846	assertEquals ( "Encoded array should be null", null, encoded )
22847	assertEquals ( "Destriction", entity. getDescription ( ) )
22848	assertMockEndpointsSatisfied ( )
22849	assertTrue ( skillConstraint. fulfilled ( insertionContext ) )
22850	Assert. assertTrue ( this. bean. resourceExists ( ) )
22851	assertEquals ( "Hello World", server. read ( ) )
22852	assertEquals ( expected, TypeDefinition. getInstance ( Qux. class ). getAllGetters ( ) )
22853	Assert. assertEquals ( numero, importacaoAdicao. getNumero ( ) )
22854	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, testName + "_diff" ) )
22855	assertNotSame ( result, one )
22856	assertTrue ( true )
22857	assertEquals ( 1, service. prepare ( query ). count ( ) )
22858	assertEquals ( expResult, result )
22859	assertNull ( RenderKitUtils. decodeBehaviors ( facesContext, component ) )
22860	Assert. assertTrue ( notify. matches ( 30, TimeUnit. SECONDS ) )
22861	Assert. assertTrue ( read. contains ( str ) )
22862	assertEquals ( HttpStatusCodes. OK. getStatusCode ( ), response. getStatusLine ( ). getStatusCode ( ) )
22863	Assert. assertEquals ( 0, instance. list. size ( ) )
22864	assertEquals ( MD5HashStrategy. class, actual. getClass ( ) )
22865	assertEquals ( "Incorrect Short Reason", "Platform Down leela.local Baseline", alertManager. getShortReason ( testPlatformAlert ) )
22866	Assert. assertEquals ( numeroPedidoItemCliente, produto. getNumeroPedidoItemCliente ( ) )
22867	Assert. assertEquals ( "apk.version", "1.0", apk. getVersion ( ) )
22868	assertSame ( s, StringDistances. create ( s ) )
22869	assertEquals ( poly, parsed )
22870	assertFalse ( containsAll )
22871	assertEquals ( c1, c2 )
22872	assertThat ( mergedExplicitSchema, is ( expectedMergedSchema ) )
22873	assertEquals ( 2, array. size ( ) )
22874	assertEquals ( "3 啶�啶苦え 啷�啶距う", t. format ( new Date ( 1000 * 60 * 60 * 24 * 7 * 3 ) ) )
22875	assertEquals ( "default-url", configuration. evaluateToString ( "url" ) )
22876	assertThat ( highAvailabilitySupportChecker. isSupported ( FORMAT_NAME ), is ( true ) )
22877	assertTrue ( ( brokenSchemaEx. getMessage ( )!= null ) && ( brokenSchemaEx. getCause ( )!= null ) )
22878	assertEquals ( new HashSet < Integer > ( asList ( new Integer ( 1 ), new Integer ( 3 ), new Integer ( 4 ) ) ), probe. values )
22879	assertNotNull ( request. getSession ( ). getAttribute ( Constants. PREFERRED_LOCALE_KEY ) )
22880	assertEquals ( "Wrong ID URL", expResult, result. toString ( ) )
22881	assertEquals ( false, bm. isBitSet ( bitNumber ) )
22882	assertNotNull ( cert )
22883	Assert. assertTrue ( "Incorrect message text", message. contains ( "Access denied." ) )
22884	assertNotNull ( result )
22885	Assert. assertEquals ( false, actual )
22886	assertArrayEquals ( new int [ ] { 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0x00, 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF }, key. toArray ( ) )
22887	assertThat ( user. getValue ( ). getEmail ( ), is ( "user@codenvy.com" ) )
22888	assertEquals ( 0, errors. size ( ) )
22889	assertThat ( actual, is ( object ) )
22890	assertNotNull ( portal. getPage ( new PageId ( "get-page", "bar" ) ) )
22891	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
22892	Assert. assertEquals ( IOUtil. toString ( new FileInputStream ( new File ( "src/test/resources/versionInfoFileRewritten-alpha-20.xml" ). getAbsoluteFile ( ) ), "UTF-8" ), IOUtil. toString ( os. toByteArray ( ), "UTF-8" ) )
22893	assertEquals ( 2, readLayout. getRows ( ) )
22894	assertEquals ( "License", licenseContent )
22895	assertNotNull ( "User cannot be null or empty.", user )
22896	assertPhotoPerms ( perms )
22897	Assert. fail ( "Test should fail, user shouldn't be allowed to invoke that method" )
22898	assertEquals ( 2000, result )
22899	assertThat ( feature. getName ( ), Is. is ( "test.feature" ) )
22900	assertTrue ( tt2 == tt )
22901	assertMappedFieldValueIs ( "CustomMappedValue" )
22902	assertNull ( future )
22903	assertEquals ( model, RdfTestHelpers. parseRdf ( RdfTestHelpers. getResourceFromFile ( "QuantityValue.rdf" ) ) )
22904	Assert. assertEquals ( 3, bitmap. size ( ) )
22905	assertSame ( ret, projectItem )
22906	Assert. assertEquals ( p4, p3 )
22907	assertNotNull ( iotHubServiceClient )
22908	assertEquals ( "Wrong result", CsvEncoder. DEFAULT_ENCODING, encoder. encode ( context ) )
22909	Assert. assertEquals ( "{\\"email\\":\\"test@email.com\\",\\"birthday\\":\\"2012-11-23 00:00:00\\"}", json )
22910	assertFalse ( "Values should not be equal", equals )
22911	assertThat ( actual, is ( expected ) )
22912	assertEquals ( control, key )
22913	assertNull ( result )
22914	assertEquals ( out, builder. toString ( ) )
22915	assertTrue ( query1. equals ( query ) )
22916	assertEquals ( "GET_some_path_testOperationIdResolver", serviceId )
22917	context. assertEquals ( Arrays. asList ( "a", "b", "c" ), list )
22918	assertEquals ( "Conversion did not match", value, to )
22919	assertEquals ( "<order><id>123/id><customerId>4444/customerId><date>20170810</date>" + "<item><id>222</id><amount>1</amount></itemn></order>", xml )
22920	assertEquals ( 0, dbHandler. getGpsStrackCount ( ) )
22921	Assert. assertTrue ( check. equals ( o ) )
22922	assertThat ( underTest. createDataSource ( ref ), is ( notNullValue ( ) ) )
22923	assertThat ( comparator. compare ( projectChange1, projectChange2 ), is ( - 1 ) )
22924	Assert. assertEquals ( 4, result. getTotalHits ( ) )
22925	assertEquals ( expectedArg, parsedArg )
22926	assertTrue ( getExpectedErrorMsg ( ), result )
22927	assertEquals ( "GBP 2.34", test. toString ( ) )
22928	assertEquals ( expected, result )
22929	assertOnResponseAttachment ( f3gb, MAX_SIZE2, "Client3gbAttachment.txt" )
22930	Assert. assertNotNull ( String. valueOf ( obj ), obj )
22931	Assert. assertTrue ( dsDao. getDSInfo ( dsOD. getDeploymentID ( ). getServiceID ( ). toString ( ) ). isUp ( ) )
22932	assertNotNull ( UserChannel. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "USXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
22933	assertEquals ( "!yi1\\n", sWriter. toString ( ) )
22934	assertFrameHex ( "Lax Text Frame with RSV3", expected, actual )
22935	assertTrue ( "New Behavior : " + newBehavior, newBehavior instanceof Follower )
22936	assertThat ( unmarshalledQFS, is ( equalTo ( expectedQueryFilterSpec ) ) )
22937	assertThat ( results, samePaths ( new File ( a, "f.txt" ), new File ( b, "f.txt" ), new File ( c, "f.txt" ) ) )
22938	assertEquals ( 1, ksession1. fireAllRules ( ) )
22939	assertEquals ( 0, events. size ( ) )
22940	Assert. assertFalse ( duplicateWorkComparator. isDuplicate ( doc1, doc2, null ) )
22941	assertEquals ( "Wrong property value (path=" + path + ")", "Assignment 1 Description", property. getRealValue ( ). toString ( ) )
22942	assertEquals ( "SELECT * WHERE {?user?_c2?_c3 ;?_c4?user_name. FILTER(?user_name =?_c6) }" )
22943	assertNull ( "Found non-existant file member", in )
22944	assertTestRunFails ( testPlan )
22945	assertEquals ( expectedSize, event. size ( ) )
22946	Assert. assertEquals ( "OK", httpResponse. getResponse ( ) )
22947	assertObjectEquals ( "{}", e )
22948	assertOut ( "/**\\n * @export\\n * @param {string} bar\\n * @param {number=} baz\\n * @return {number}\\n */\\nRoyaleTest_A.prototype.foo = function(bar, baz) {\\n  baz = typeof baz!== 'undefined'? baz : null;\\n  return -1;\\n}" )
22949	assertThat ( formatter. isStrict ( ), is ( true ) )
22950	assertEquals ( expResult, result )
22951	assertEquals ( "https://sun9-65.userapi.com/c857520/v857520962/10e249/dUDeuY10s0A/EsDDQA36qKI", ripper. getBestSourceUrl ( json ) )
22952	assertNotNull ( nonce )
22953	assertTrue ( instanceConstraintViolationsList. toString ( ), instanceConstraintViolationsList. size ( ) == 1 )
22954	assertThat ( result, is ( new String [ ] [ ] { { "this", "is", "na", "test" } } ) )
22955	assertEquals ( "EUR", accountMap. get ( "currency" ) )
22956	assertEquals ( "[{\\"name\\":\\"A\\"},{\\"name\\":\\"B\\"},{\\"name\\":\\"C\\"},{\\"name\\":\\"D\\"},{\\"name\\":\\"E\\"},{\\"name\\":\\"F\\"},{\\"name\\":\\"D\\"},{\\"name\\":\\"D\\"},{\\"name\\":\\"D\\"},{\\"name\\":\\"D\\"},{\\"name\\":\\"D\\"}]]", toJson )
22957	AssertionUtils. multiAssertEquals ( createAsDocument9, response5. getResponseObject ( ) )
22958	assertObjectEquals ( "{type:'object',properties:{f1:{type:'string'}},'x-example':{f1:'foobar'}}", s. getSchema ( SimpleBean. class ) )
22959	assertEquals ( destination, JsonValue. NULL )
22960	assertExpectedPreprocessingResult ( expectedResultLocation, includeReader )
22961	assertTrue ( smileys. isEmpty ( ) )
22962	assertEquals ( "from config pojo", mojo. getConfigPojo ( ). getName ( ) )
22963	assertTrue ( response. getNumberOfFeatures ( ). intValue ( ) == 2 )
22964	assertTrue ( hasImage ( IMAGE_TAG ) )
22965	assertEquals ( null, request. getCharacterEncoding ( ) )
22966	assertEquals ( null + '@' + DOMAIN, bareJID )
22967	Assert. assertEquals ( "cGFzc3dvcmQ=", codec. encode ( "password" ) )
22968	assertThat ( jsonAsMap. get ( "enum" ), is ( equalTo ( enumType. getEnumConstants ( ) [ 3 ] ) ) )
22969	assertThat ( impl. getOntologyIds ( ), containsInAnyOrder ( rootOntologyId ) )
22970	assertNotNull ( "converter must not be null", s )
22971	assertEquals ( "Test2", gbpNetworkServicePolicy. getName ( ) )
22972	assertTrue ( suffix1. equals ( suffix2 ) )
22973	assertArrayEquals ( expected, fileArray )
22974	assertThat ( result, is ( CodePoints. NOT_FOUND ) )
22975	assertTrue ( isEqual ( mockStopPoint, actualStopPoint ) )
22976	assertEquals ( uploadLocation + FileUtils. toDir ( stateToken ) + filename + pngExtension, absFile )
22977	assertEquals ( ( float ) 8, result. getFloatValue ( ), 0.0 )
22978	Assert. assertEquals ( "john", actual )
22979	assertEquals ( expResult, result )
22980	assertEquals ( "cre", s )
22981	assertThat ( roundtrippedRecord, equalTo ( record ) )
22982	assertEquals ( "hello", result )
22983	assertEquals ( HttpStatus. NO_CONTENT_204, resp. getStatus ( ) )
22984	assertEquals ( "Invalid version extracted", expVersion, result. getParentVersion ( ) )
22985	excelApplicationManager. assertContent ( new File ( getClass ( ). getResource ( "expected_ok_style.xls" ). toURI ( ) ), "Ok", EMPTY_LIST )
22986	assertThat ( artifact. getId ( ), is ( job. getId ( ) ) )
22987	Assert. assertTrue ( os. toString ( "UTF-8" ). contains ( "Unknown target" ) )
22988	assertEquals ( expResult, result )
22989	assertThat ( extractMonitorables ( adapter ). get ( MEAN ). get ( ), Matchers. < Object > is ( newMean ) )
22990	assertThat ( runs, is ( empty ( ) ) )
22991	assertEquals ( completeBalanceResults, new BalanceResultMapper ( ). mapCompleteBalanceResultForCurrency ( currencyType ) )
22992	assertEquals ( dbf2, dbf1 )
22993	assertThat ( representation. getInteger ( "size" ), is ( 20 ) )
22994	assertEquals ( null, avg )
22995	assertTrue ( "Should have connected to the server.", ourServer. waitForClient ( TimeUnit. SECONDS. toMillis ( 10 ) ) )
22996	assertEquals ( "<img alt=\\"hey\\" test=\\"hey\\" />", rendered )
22997	Assert. assertEquals ( 1, result. getEntities ( ). size ( ) )
22998	assertEquals ( "Check principal has correct FQAN string", TEST_FQAN_STRING, principal. getFqan ( ) )
22999	Assert. assertEquals ( "Wrong toString()", "msgVersion: 1 objectClass: org.opendaylight.yang.gen.v1.urn.opendaylight" + ".openflow.common.instruction.rev130731.instructions.grouping.Instruction msgType: 11" + " experimenterID: null", key1. toString ( ) )
23000	assertThat ( DonutUtils. getTopDonuts ( null, null, null, expected ), is ( expected ) )
23001	assertEquals ( 1, listener. getNumberOfTimesInvoked ( ) )
23002	assertThat ( caughtException ( ), instanceOf ( CustomException. class ) )
23003	Assert. assertEquals ( actual, expected, "Returned an invalid property value." )
23004	assertEquals ( unused, h. getUnused ( ) )
23005	assertEquals ( "(* (* (a 34) b 9) c)\\n", found )
23006	assertServerAncestry ( trace )
23007	assertFalse ( "The getChanges() method reported a change", hasChange )
23008	Assert. assertEquals ( 8, tools. size ( ) )
23009	assertFalse ( authorizer. isAuthorized ( context, profiles ) )
23010	assertEquals ( expected, new WritablesToNDArrayFunction ( ). apply ( l ) )
23011	assertNumEquals ( 1, profit. calculate ( series, new BaseTradingRecord ( ) ) )
23012	assertEquals ( new ArrayList < PostReport > ( ), mockResult. included ( "reports" ) )
23013	Assert. assertTrue ( result. isEmpty ( ) )
23014	Assert. assertEquals ( 1, count )
23015	assertFalse ( "property not cleared", config. containsKey ( "key1" ) )
23016	assertEquals ( 1, ksession. fireAllRules ( ) )
23017	assertEquals ( actual, expected, "Method with zero parameters does not match expected" )
23018	Assert. fail ( "Should have thrown SQLFeatureNotSupportedException" )
23019	Assert. assertTrue ( "Wrong canonicalization using external mapping file", TestFileUtils. compareFileToResource ( out, base ) )
23020	assertEquals ( 20000L, testLong )
23021	assertEquals ( expected, ColumnRanges. rangeAtNode ( isNull ) )
23022	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoItemImpostoPISOutrasOperacoes ( ). toString ( ) )
23023	Assert. assertEquals ( extractor. generateKey ( host, req1 ), extractor. generateKey ( host, req2 ) )
23024	assertEquals ( string, new String ( IOUtils. toByteArray ( new ByteArrayInputStream ( string. getBytes ( UTF_8 ) ) ) ) )
23025	Assert. assertEquals ( zero. getReal ( ), 0, 3.0e-16 )
23026	assertEquals ( "CLIENT PARALLEL 1-WAY RANGE SCAN OVER _IDX_T ['me',-32767,'a'] - ['me',-32767,*]", QueryUtil. getExplainPlan ( rs ) )
23027	assertFalse ( episode. isHasImage ( ) )
23028	assertEquals ( "Simple,Hello,world
23029	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
23030	assertEquals ( "{\\"someString\\":\\"string\\",\\"someStringValue\\":\\"someStringValue\\",\\"someDate\\":\\"2019\\"}", encoded )
23031	Assert. fail ( "Expecting MathIllegalStateException" )
23032	assertJsonIs ( "{\\"helloWorld\\":\\"Hello, world\\",\\"lazy\\":\\"Lazy value\\"}" )
23033	assertEquals ( parseCalendar ( "20131028-00:00:00", TimeZone. getTimeZone ( "Europe/Amsterdam" ) ), dh. getCalendarAfter ( testingClock. getCurrentCalendar ( ) ) )
23034	assertArrayEquals ( completeExtension, serializer. serialize ( ) )
23035	responseAsserter. assertRegisterResponse ( )
23036	assertThat ( parameters. size ( ), is ( 0 ) )
23037	assertEquals ( "Wrong number of keys", 6, keys. size ( ) )
23038	assertNotNull ( "precondition was supposed to fail", result )
23039	assertTrue ( survey. isStarted ( ) )
23040	assertNull ( s )
23041	Assert. assertNull ( "should not be a description", actualDescription )
23042	assertEquals ( 0, wlsDomainConfig. getServerConfigs ( ). size ( ) )
23043	assertEquals ( g1, g2 )
23044	assertEquals ( "1-2,3-4,5-9", content )
23045	assertEquals ( expected, customLogger. toString ( ) )
23046	assertThat ( result, is ( "hello world" ) )
23047	Assert. fail ( "NullPointerException should have been thrown" )
23048	assertThat ( values. getWeblogicOperatorImage ( ), equalTo ( stringValue ) )
23049	assertNull ( found )
23050	assertTrue ( Arrays. equals ( new int [ ] { 0, 4, 8, 0, 72, 86, 89 }, command. serialize ( ) ) )
23051	assertEquals ( null, result )
23052	assertEquals ( String. format ( "Expected [%s] but got [%s]", expected1, mapping ), expected1, mapping )
23053	assertThat ( target. getEthType ( ), is ( new Integer ( OFPFlowActionPopMpls. MPLS_MULTICAST ) ) )
23054	assertThat ( createdOrUpdated. getStatusInfo ( ). getFamily ( ), is ( Response. Status. Family. SUCCESSFUL ) )
23055	assertThat ( reply ( ), is ( anAppendReply ( ). withResult ( true ) ) )
23056	assertThat ( text ( contents ), is ( "1-A\\t2-B\\n" ) )
23057	assertEquals ( FEEDBACK_MESSAGE, feedbackMessage )
23058	assertThat ( movementLine. getC_ActivityFrom_ID ( ), is ( sameInstance ( productActivity. getId ( ) ) ) )
23059	assertThat ( availablePackages, hasItem ( "org.eclipse.junit" ) )
23060	assertSpecialServletWasInvokedWith ( entity )
23061	assertMockEndpointsSatisfied ( )
23062	assertEquals ( expResult, result )
23063	assertEquals ( OffsetDate. of ( LocalDate. of ( 2007, 7, 31 ), OFFSET_PONE ), t )
23064	assertEquals ( "120.9", df. format ( blackFridayTVDeal ) )
23065	assertNotNull ( commonSchema )
23066	Assert. fail ( "Exception should have been thrown" )
23067	Assert. assertEquals ( stId. compareTo ( otherStId ), serviceTemplate. compareTo ( otherServiceTemplate ) )
23068	assertResultSet ( res )
23069	assertEquals ( "foo", returnData )
23070	assertEquals ( 0, r. iterator ( ). hasNext ( ) )
23071	assertEquals ( TestUtil. LOCAL_TEST_PROXY, result. get ( 0 ) )
23072	Assert. assertFalse ( iterator. hasNext ( ) )
23073	assertEquals ( "24:00:00", v. getStringValue ( ) )
23074	Assert. assertFalse ( tt. isPrematureBreak ( null ) )
23075	assertEquals ( "Main class name", "org.apache.felix.main.Main", new FelixPlatformBuilderF100T122 ( m_bundleContext, "version" ). getMainClassName ( ) )
23076	assertThat ( sampledValue. getMeasurand ( ), equalTo ( measurand ) )
23077	assertTrue ( tbce. compareScreen ( "foo" ) )
23078	assertThat ( result, is ( "\\"" + USER_ID + "\\"" ) )
23079	assertEquals ( "�尖�尖�尖�尖��\\n" + "��x�� $��\\n" + "�尖��   ��\\n" + "�� ��  ��\\n" + "��    ��\\n" + "�尖�尖�尖�尖�尖�尖��\\n" + "��X  $��\\n" + "��   ��\\n" + "�� ��  ��\\n" + "��
23080	assertTrue ( true )
23081	assertTrue ( log. getClass ( ). getName ( ). startsWith ( "org.ops4j.pax.logging.JBossLoggerFactory" ) )
23082	assertEquals ( "a", aCredentials. getKey ( ) )
23083	assertEquals ( 18, result )
23084	Assert. assertNull ( changed. getDataType ( ) )
23085	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
23086	assertThat ( result, equalTo ( v + ns ) )
23087	assertTrue ( exceptionCaught )
23088	assertEquals ( a1, a2 )
23089	assertEquals ( 28, term. evalI ( env ) )
23090	assertEquals ( "Herbert", vcard. getName ( ) )
23091	assertThat ( tags, hasItem ( "abc" ) )
23092	assertTrue ( glass. isOver ( ) )
23093	assertEquals ( 1, servers. size ( ) )
23094	assertFalse ( fileDescriptorChecker. isDetected ( ) )
23095	Assert. assertTrue ( time < randomQueryTimeLimitInMillis )
23096	assertEqualsIgnoreWhitespace ( original, result )
23097	assertDROOLS2286 ( context )
23098	assertThat ( secondPage. getUrl ( ). toString ( ), endsWith ( "/view-hardcoded-params" ) )
23099	assertEquals ( 201, status. getStatusLine ( ). getStatusCode ( ) )
23100	Assert. assertTrue ( queriedEntities. size ( ) > 0 )
23101	assertRowsEqual ( expected, primaryData )
23102	assertNull ( v. get ( ) )
23103	Assert. fail ( "Should have thrown SQLFeatureNotSupportedException" )
23104	assertFalse ( Pattern. matches ( Re. number ( ), s ) )
23105	assertEquals ( "Date should be formatted as: \\"d-MM-yyyy\\"", writer. toString ( ) )
23106	assertException ( "FEEL-01017", "false", "12", "< 12", "'Hello'" )
23107	assertEquals ( arr, arr2 )
23108	assertEquals ( expectedJson, actualJson )
23109	assertEquals ( "Base value is not properly parsed", "true", parsed )
23110	assertEquals ( "HTTP/1.1 417 Expectation Failed", sb. toString ( ). trim ( ) )
23111	assertEquals ( "Project_Default(Field(0))\\n" + "  Insert_Returning(INTO c)\\n" + "    Project_Default(_SEQ_NEXT(test, c_cid_seq), NULL)\\n" + "      ValuesScan_Default([])", getExplain ( insert, table. getSchemaName ( ) ) )
23112	assertArrayEquals ( new Class [ ] { long. class }, c. getParameterTypes ( ) )
23113	assertThat ( result. size ( ), is ( not ( result2. size ( ) ) ) )
23114	assertTrue ( ws. isClosed ( ) )
23115	assertEquals ( 42, tf. getConvertedValue ( ) )
23116	Assert. assertEquals ( sp, sp2 )
23117	assertMockEndpointsSatisfied ( )
23118	assertNull ( bidService. getBid ( 1L ) )
23119	assertEquals ( SUPPRESSABLE, strategyName )
23120	assertTrue ( headings. get ( 1 ). text ( ). equals ( "H1" ) )
23121	assertEquals ( "void dest8(@A @B @C int, @B @C @D int, int, @C @D @E int)", toString ( dest ) )
23122	assertThat ( c. compute ( ), is ( 3 - 2 + 1 ) )
23123	assertNotNull ( readUrlContents )
23124	assertEquals ( - 1, PartitionUtils. getRecommendedPartitions ( pcollection ) )
23125	assertTrue ( failListener. isFailed ( ) )
23126	assertEquals ( 1, regionInfoList. size ( ) )
23127	assertTrue ( peerAcceptanceUtil. isPeerInterestedOnRemoteWorker ( clientID. getServiceID ( ) ) )
23128	assertArrayEquals ( tag_orig, tag )
23129	assertNotNull ( op )
23130	Assert. assertEquals ( expectedProjectionBean, computedProjectionBean )
23131	Assert. assertEquals ( currentYear - birthYear, AgeUtils. getFullAge ( birthDate ) )
23132	assertEquals ( prettyPrintXml ( readContent ( EXPECTED_ABSTRACT_COMPLEX_TYPE_LIST_PATH ) ), prettyPrintXml ( xml ) )
23133	assertListTEquals ( listT, 12, 13, 14 )
23134	assertThat ( currentBuildsOf ( view ). url ( ), is ( "job/project-name/22/" ) )
23135	assertEquals ( "^/protected/(.*)$", pattern )
23136	Assert. assertTrue ( json. getAsString ( "getInReplyToId" ). contains ( activityNodeType. getActivityNodeUuid ( ) ) )
23137	assertEquals ( expectedHashCode, is. readInt ( ) )
23138	assertEquals ( "Wrong propert value", " [test@cmd ~]$ ", config. getString ( "CmdPrompt" ) )
23139	assertFalse ( range1. equals ( range2 ) )
23140	assertEquals ( Rational. valueOf ( - 1 ), result )
23141	assertEquals ( "Check that task ran", 1, ran )
23142	assertEquals ( id, embedding. getIdOfProjectionEntry ( PropertyValue. create ( "String" ), PropertyValue. create ( 42 ) ) )
23143	assertEquals ( expecting, found )
23144	assertEquals ( expResult, result )
23145	assertTrue ( reporterFactory instanceof DefaultScheduledReporterFactory )
23146	assertThat ( result, equalTo ( false ) )
23147	assertThat ( result, is ( expected ) )
23148	assertEquals ( unused, h. getUnused ( ) )
23149	assertThat ( rowsModified, is ( 0 ) )
23150	assertEquals ( "a", mock. get ( 1 ) )
23151	assertNotNull ( foo. field )
23152	assertEquals ( testKeySize, tlsToolkitStandaloneCommandLine. createConfig ( ). getKeySize ( ) )
23153	assertArrayEquals ( d. asDouble ( ), d2. asDouble ( ), 0.001 )
23154	assertThat ( result, is ( true ) )
23155	assertThat ( ontology, is ( equalTo ( ontologyC ) ) )
23156	assertTrue ( true )
23157	assertNull ( job )
23158	assertThat ( result, is ( nullValue ( ) ) )
23159	Assert. assertEquals ( expected, testIndex. findConc ( "a:[] 'aap' b:[] :: a.word = b.lemma" ) )
23160	assertEquals ( model, actual )
23161	assertThat ( StubWatchFactory. receivedEvents, hasSize ( 2 ) )
23162	assertTrue ( definedInContext )
23163	assertEquals ( "ko", exp )
23164	assertEquals ( "Wrong number of parameters", 0, builder. getParameters ( ). size ( ) )
23165	assertThat ( thrown, instanceOf ( ShardConfigStaleException. class ) )
23166	assertNotNull ( UserChannel. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "USXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
23167	Assert. assertEquals ( "assertElementNotPresent(\\"link=my_link\\", \\"\\");", result )
23168	assertEquals ( t1, t2 )
23169	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5, 6 ) ) )
23170	assertEquals ( DistCpCopier. class, copier. getClass ( ) )
23171	expect. assertThat ( collection. size ( ), is ( 10 ) )
23172	assertResult ( 0 )
23173	assertTrue ( config. isPresent ( ) )
23174	assertSame ( Integer. class, value. getValue ( ) )
23175	assertEquals ( this. multipleExtCom, result. getAttributes ( ) )
23176	assertEquals ( "package org.kissmda.test.junit;\\n" + "public class ClazzName {\\n" + "  public void doSomething(  Name values){\\n" + "     java.lang.Integer count = null;\\n" + "     java.util.List<java.lang.String> list = new LinkedList<>();\\n" + "  }\\n" + "}", cu. toString ( ). trim ( ) )
23177	assertEquals ( "ABN is required.", violations. iterator ( ). next ( ). getMessage ( ) )
23178	Assert. assertEquals ( "[1, 3]", s. toString ( ) )
23179	assertEquals ( 1, db. getDB ( ). size ( ) )
23180	assertNotNull ( df )
23181	assertThat ( formatter. parse ( "2011-01-30T09:00" ), is ( PlainDate. of ( 2014, 1, 30 ) ) )
23182	assertEquals ( expected, actual )
23183	assertIdentical ( "/simple.owl", filtered )
23184	assertEquals ( "hi", twice. apply ( 1 ) )
23185	assertTrue ( connectFuture. isConnected ( ) )
23186	assertEquals ( 1, result. getFailedJobs ( ). size ( ) )
23187	assertEquals ( origWriteSet, reorderSet )
23188	assertThatStepsInstancesAre ( builderAnnotated. buildCandidateSteps ( configuration ), WeldSteps. class )
23189	assertEquals ( expected, actual )
23190	assertNotEquals ( "incorrect value", aNumber. hashCode ( ), bNumber. hashCode ( ) )
23191	assertEquals ( 0, list. size ( ) )
23192	assertTrue ( "installed jar should exist", destinationJar. exists ( ) )
23193	assertNotNull ( permissionService. getPermissionsMapFor ( component ) )
23194	SelendroidAssert. assertResponseIsResourceNotFound ( response )
23195	assertEquals ( serializedYaml, yaml )
23196	assertSame ( result, this. logger )
23197	assertFalse ( user1. equals ( user2 ) )
23198	assertEquals ( "(DUH a (DUH 1)) (DUH b (DUH 2))\\n", found )
23199	assertEquals ( 1, count )
23200	assertEquals ( prevValue, currentValue )
23201	assertTrue ( rootNode. getPrimaryNodeType ( ). isNodeType ( JcrMixLexicon. REFERENCEABLE. getString ( session. namespaces ( ) ) ) )
23202	assertArrayEquals ( new byte [ ] { 42 }, Files. readAllBytes ( withDot ) )
23203	AssertAnnotations. assertPOS ( posMapped, posOriginal, select ( jcas, POS. class ) )
23204	assertNodeDoesNotHaveCorrectPriority ( compoundWrite, NodeUtilities. NodeFromJSON ( "prio" ) )
23205	assertNodesIn ( expected, y1Fun, Optional. of ( y1Fun ) )
23206	assertThat ( hijri. with ( CommonElements. weekOfYear ( HijriCalendar. family ( ), model ). incremented ( ) ), is ( hijri. with ( HijriCalendar. DAY_OF_MONTH, 2 ) ) )
23207	assertEquals ( true, bm. isBitSet ( bitNumber ) )
23208	assertEquals ( TestModel. class, field. getType ( ) )
23209	assertEquals ( "0: General use CPU\\n" + "1: Thread[engine,5,main] alive=true\\n", actual )
23210	assertEquals ( 5, searchEngineMarketShareArray. length )
23211	assertions. containsOnly ( ( short ) 2, ( short ) 4 )
23212	assertEquals ( expected, actual )
23213	assertThat ( scc, is ( toPartition ( expect ) ) )
23214	assertEquals ( result. get ( RETURN_RESULT ), String. format ( EXCEPTION_UNAUTHORIZED_USER, "usser" ) )
23215	assertThat ( quantity, is ( existingItem. getQuantity ( ) ) )
23216	assertEquals ( Optional. of ( "A" ), r )
23217	assertEquals ( this. neListCaptor. getValue ( ). getNetworkElementId ( ), "UPDATED_SFC_ID" )
23218	assertEquals ( 1000000, tokens )
23219	assertStepsFound ( steps )
23220	assertNotNull ( create )
23221	assertFalse ( queryRunner. runQuery ( null, null ) )
23222	assertEquals ( 0, result. size ( ) )
23223	assertTrue ( of ( "AAAA" ). toString ( ). equals ( "AAAAA" ) )
23224	context. assertIsSatisfied ( )
23225	assertThat ( sorted. size ( ), is ( 0 ) )
23226	assertNotNull ( result )
23227	Assert. assertNotSame ( "Different event bus instances", eventBus, eventBus2 )
23228	assertEquals ( 201, response. getStatus ( ) )
23229	Assert. fail ( "exception expected" )
23230	assertOut ( "" )
23231	Assert. assertEquals ( "443/MyProject", connectionString )
23232	Assert. assertTrue ( TestUtils. attributeEquals ( expectedResults, exactResults, attributeNames ) )
23233	assertEquals ( 1234.56, empty. getRPM ( ), 0.1 )
23234	assertEquals ( json, expected )
23235	Assert. assertEquals ( cnpj, dados. getCnpj ( ) )
23236	assertEquals ( "Scroll to row 25", getSidebarPopup ( ). findElements ( By. tagName ( "td" ) ). get ( 0 ). getText ( ) )
23237	assertEquals ( 0, result. getTypes ( ). size ( ) )
23238	assertTrue ( matcher. match ( kmfSamples. getProviderA ( ), actual ) )
23239	Assert. assertEquals ( 2, tools. size ( ) )
23240	assertEquals ( expectedTypes, playerTypeDAO. getTypes ( TENANT_ID ) )
23241	Assert. assertNull ( noBean )
23242	Assert. assertTrue ( "Property values not dereferenced when overriding bean list property as CSV list. Expected " + expected + ", but was " + trim ( testComponent. getListPlaceholder1 ( ) ), Arrays. equals ( expected, testComponent. getListPlaceholder1 ( ) ) )
23243	assertThrows ( InvalidMethodSignatureException. class, ( ) -> new JavaDataTableTypeDefinition ( method, lookup, new String [ 0 ] ) )
23244	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
23245	assertEquals ( "me/baz", provider. getRelativePath ( projectBasedir, repoRoot ) )
23246	XMLAssert. assertXMLEqual ( new InputStreamReader ( getClass ( ). getResourceAsStream ( "v13/csv-config-03.xml" ) ), new StringReader ( modelWriter. toString ( ) ) )
23247	assertEquals ( "The ttl should be 50", 50, iSpec. getTTL ( ) )
23248	Assert. assertEquals ( "bob", token. getUserName ( ) )
23249	assertThat ( match, is ( BestTypeMatch. T2 ) )
23250	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPath, cmpPath, destinationFolder, diff ) )
23251	assertThat ( dest. bbb, is ( nullValue ( ) ) )
23252	assertThat ( manager. getRandomStrategy ( ), is ( mockedStrat1 ) )
23253	assertTrue ( theFood ( ). isAlive ( ) )
23254	assertEquals ( "Expected 5 results!", 5, n )
23255	assertEquals ( Nd4j. create ( new double [ ] { 1, 2 } ), matrix )
23256	assertEquals ( "192.168.0.123/24", ip )
23257	Assert. assertEquals ( "<?joe?>", reader. nextEvent ( ). getEventType ( ) )
23258	assertPermanentCount ( playerA, bear1G, 1 )
23259	assertEquals ( 0, query. size ( ) )
23260	assertArrayEquals ( expected, actual )
23261	Assert. assertTrue ( bean. getMap ( )!= null &&! bean. getMap ( ). isEmpty ( ) )
23262	assertFalse ( iter. hasNext ( ) )
23263	Assert. assertEquals ( slice. toString ( ), 0, SlicerUtil. countNormals ( slice ) )
23264	Assert. assertEquals ( 0, analyser. getLoadAtBeginning ( route ), 0.01 )
23265	assertEquals ( expecteds, actuals )
23266	assertEquals ( Version. valueOf ( "1.0.0+alpha" ), builder. build ( ) )
23267	Assert. assertEquals ( 200, response. getStatus ( ) )
23268	assertValuesEqualsResultSet ( rs, expectedResults )
23269	assertEquals ( "5", stringWriter. toString ( ) )
23270	assertContainsPlot ( 0, 0, PlotColor. BLUE, plots. get ( 0 ) )
23271	assertEquals ( "resultxx", aspect. aroundFlippableMethods ( pjp, flipAnnotation ) )
23272	assertResult ( 1 )
23273	Assert. assertEquals ( WEBHDFS_URI, fs. getUri ( ) )
23274	Assert. fail ( "expected exception for bad query." )
23275	assertUpdateRecord ( "*.c1.addresses.second.number", objId, obj, updateObj, PATCH, expected )
23276	Assert. assertTrue ( "Capabilities should match", matcher. matches ( nodeCapability, testCapability ) )
23277	assertEquals ( "OK", qp. resolve ( "x.xq" ) )
23278	Assert. assertEquals ( "Drop what?!?!", responseResult. getText ( ) )
23279	assertEquals ( "bar", event. getField ( "foo" ) )
23280	assertEquals ( expectedEventTypesInOrder, actualEventTypesInOrder )
23281	assertEquals ( 0, ( int ) captured. getValue ( ) )
23282	assertTrue ( "Should not disconnect when the sequence number is too high", responder. disconnectCalled )
23283	assertThat ( dropdown. getText ( ), is ( "Remove all selected" ) )
23284	assertThat ( mapper, is ( notNullValue ( ) ) )
23285	assertOrder ( true, query ( ). sortFarthest ( "one" ) )
23286	Assert. assertArrayEquals ( jceResult, utilsResult )
23287	assertTrue ( helper. shouldBeStored ( new HTTPResponse ( Status. OK, headers ) ) )
23288	assertThat ( operatorValues. createMap ( ), hasEntry ( "internalDebugHttpPort", intValue ) )
23289	assertTrue ( criteria. equals ( criteria2 ) )
23290	assertTrue ( used. contains ( "foo.txt" ) )
23291	assertEquals ( 1, this. chartChangeEvents. size ( ) )
23292	assertEquals ( expected, actual )
23293	assertThat ( bindings, is ( notNullValue ( ) ) )
23294	assertInvocations ( client. getBusinessActivityInvocations ( ), "complete", "confirmCompleted", "close" )
23295	assertEquals ( "<chart><background-color><linear-gradient x1=\\"black\\" y1=\\"white\\" stop-color=\\"black\\"/>\\n" + "</gradient>", removeWhitespacesBetweenTags ( parent. child ( 0 ). getText ( ) ) )
23296	assertEquals ( 42, config. answerToLifeUniverseAndEverything ( ) )
23297	assertEquals ( components. size ( ), 1 )
23298	Assert. assertEquals ( unidadeFederativa, servicoConsulta. getUf ( ) )
23299	assertEquals ( 100, v )
23300	assertEquals ( 1000, value, 0 )
23301	assertEquals ( LIST_VAL_a, p. getList ( ) )
23302	assertNotNull ( license )
23303	assertEquals ( response. getStatus ( ), STATUS201 )
23304	assertEquals ( true, out. firstElement ( ). get ( ) )
23305	Assert. assertEquals ( "--- a/" + projectSourcePath + "/Bar.java\\n" + "+++ b/" + projectSourcePath + "/Bar.java\\n" + "+++ b/" + projectSourcePath + "/Bar.java\\n" + "+++ c/" + projectSourcePath + "/Bar.java\\n" + "+++ b/" + projectSourcePath + "/Bar.java\\n" + "+++ c/" + projectSourcePath + "/Bar.java\\n" + "+++ b/" + projectSourcePath + "/Bar.java\\n" + "+++ b/" + projectSourcePath + "/Bar.java\\n" + "+++ b/" + projectSourcePath + "/Bar.java\\n" + "+++ c/" + projectSourcePath + "/Bar.java\\n" + "+++ b/" + projectSourcePath + "/Bar.java\\n" + "+++ c/" + projectSourcePath + "/Bar.java\\n" + "+++ b/" + projectSourcePath + "/Bar.java\\n" + "+++ b/" + projectSourcePath + "/Bar.java\\n
23306	assertEquals ( 200, action. getCode ( ) )
23307	assertEquals ( Acquisition. FAILURE, acq. result )
23308	assertTrue ( Iterables. all ( evenNumbers, acceptOddNumber ) )
23309	testRunner. assertAllFlowFilesTransferred ( WriteTask. REL_SUCCESS, 1 )
23310	assertOut ( "/**\\n * @constructor\\n */\\norg.apache.royale.A = function() {\\n};\\n\\n/**\\n * @protected\\n * @type {Object}\\n */\\norg.apache.royale.A.prototype.foo1;\\n\\nObject.defineProperty(\\n\\torg.apache.royale.A.prototype, \\n\\t'foo1', \\n\\t{get:function() {\\n\\t\\tvar self = this;\\n\\t\\treturn null;\\n\\t}, configurable:true}\\n);\\n\\nObject.defineProperty(\\n\\torg.apache.royale.A.prototype, \\n\\t'foo1', \\n\\t{set:function(value) {\\n\\t}, configurable:true}\\n);\\n\\nObject.defineProperty(\\n\\torg.apache.royale.A.prototype, \\n\\t'foo2', \\n\\t{get:function() {\\n\\t\\tvar self = this;\\n\\t\\treturn
23311	assertSame ( expected, actual )
23312	assertThat ( PlainDate. of ( 2000, 12, 2 ). with ( model. weekOfYear ( ). minimized ( ) ), is ( PlainDate. of ( 2000, 12, 2 ) ) )
23313	assertCollectionCanNotBeSerialised ( collection, TreSource. ExtendedHeaderData )
23314	Assert. assertEquals ( 0, analyser. getLoadRightAfterActivity ( route. getEnd ( ), route ). get ( 0 ) )
23315	assertEqualHQL ( "allen hi dandan ", sb. toString ( ) )
23316	VertxAssert. assertEquals ( "The graph operation resulted in an error: " + response. getString ( "message" ), "ok", response. getString ( "status" ) )
23317	assertNotNull ( extractElementDataModifier. getElementIdAttribute ( ) )
23318	assertXmlEquals ( xml, "<serviceParameter/>" )
23319	assertEquals ( expected, got )
23320	assertTrue ( Files. exists ( dest ) )
23321	Assert. assertNotNull ( connection )
23322	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED, status )
23323	assertThat ( terminalStep. wasRun ( ), is ( true ) )
23324	assertEquals ( VALUE, victim. getValue ( KEY ) )
23325	assertEquals ( "org.junit.portlet.Portlet", s )
23326	assertEqualsWithoutWhiteSpaces ( "translate([-5,-5,-5]) (model)", testSubject. toScad ( ) )
23327	assertEquals ( required, iterateBFS )
23328	assertEquals ( 42, x )
23329	assertNull ( focused )
23330	assertTrue ( results. toString ( ), results. indexOf ( "Responses invalid: 0 out of " + ( cycles * tracks ) ) >= 0 )
23331	assertFalse ( deviceIO. isOpen ( ) )
23332	Assert. assertEquals ( Utils. createParameterizedType ( String. class, String. class ), type )
23333	assertTokensEqual ( of ( integer ( 10 ), integer ( 5 ), text ( 1 ), text ( 2 ) ), tokens )
23334	assertEquals ( html, sanitized )
23335	assertNoViolations ( constraintViolations )
23336	assertEquals ( TimeUtil. parseTime ( time ), "2014-11-11 10:11:11" )
23337	assertEquals ( averageDegree, 0.5 )
23338	assertThat ( client, notNullValue ( ) )
23339	Assert. assertEquals ( set. iterator ( ). next ( ), "c" )
23340	Assert. assertThat ( uri, CoreMatchers. equalTo ( URI. create ( "http://example.com/mypath" ) ) )
23341	Assert. assertNull ( actual )
23342	assertThat ( ret, is ( "myprocedure" ) )
23343	assertEquals ( "<div id=\\"1\\"></div><div id=\\"2\\"><img /><img /></div><a id=\\"3\\"></a><i></i><foo /><foo>One</foo> <hr /> hr text <hr /> hr text two", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
23344	assertEquals ( doc. getContentField ( "rawcontent" ), "<p>min fina <b>text</b> komemr h�陇r. Den har en <a href=\\"http://hej.se <http://hej.se/> \\">l�陇nk</a> i ocks�楼</b>" )
23345	assertEquals ( expected, actual )
23346	assertParams ( captured. getValue ( ), A_PARAM_NAMES, true, true )
23347	assertEquals ( expected, actual. materializeToMap ( ) )
23348	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
23349	assertEquals ( "y.C", clz. getAnnotation ( C. class ). value ( ) )
23350	assertEquals ( PropUtil. getBooleanProperty ( props, "test", true ), true )
23351	assertEquals ( "4 juillet 2001 12:08:56 EEST", dateTime. toString ( ) )
23352	assertTrue ( "Better cost solution (1.9 < 2.0) should not be accepted since the better cost is still below the threshold", schrimpfAcceptance. acceptSolution ( memory, createSolutionWithCost ( 1.9 ) ) )
23353	assertEquals ( new Long ( 2 ), response )
23354	assertEquals ( "mes  |Thr  ", result )
23355	Assert. assertEquals ( Short. valueOf ( ( short ) 11 ), res )
23356	assertThat ( params. isMonochrome ( ), equalTo ( true ) )
23357	assertThat ( operations. find ( query ( byExample ( example ) ), Person. class ), hasItems ( flynn, walter ) )
23358	assertNullOrEquals ( "id", "NAD83��", crs. getId ( ) )
23359	assertTrue ( "Linker functionality should be enabled for project", page. isLinkerFunctionalityEnabledForProject ( ) )
23360	assertThat ( runtimeClassName, equalTo ( "org.talend.components.marklogic.runtime.output.MarkLogicOutputSink" ) )
23361	assertThat ( target. getDoG ( ), JUnitMatchers. hasItems ( TestUtils. equalTo ( new Image ( new float [ ] [ ] { { 1 } } ), 1E-4f ), TestUtils. equalTo ( new Image ( new float [ ] [ ] { { 2 } } ), 1E-4f ), TestUtils. equalTo ( new Image ( new float [ ] [ ] { { 3 } } ), 1E-4f ), TestUtils. equalTo ( new Image ( new float [ ] [ ] { { 4 } } ), 1E-4f ) ) )
23362	assertTrue ( book. getIsbn ( ). startsWith ( "13" ) )
23363	assertTrue ( c. size ( ) == 1 )
23364	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
23365	assertNotNull ( dataBinding )
23366	assertTrue ( getNoErrorMsg ( ), result )
23367	assertEquals ( "GitHub", ghlogout. getGitHubText ( ) )
23368	assertTrue ( ExpressionUtil. evalCondition ( context, cachedAnnoConfig ) )
23369	arrays. assertContainsOnlyOnce ( someInfo ( ), actual, IntArrays. emptyArray ( ) )
23370	Assert. assertEquals ( "12345:30 PM", getCell ( 0, 10 ). getPureText ( ) )
23371	assertEquals ( 0, nameIdData. size ( ) )
23372	assertDegenerate ( scan )
23373	Assert. assertEquals ( expect_sql, sql )
23374	Assert. assertEquals ( "", readS )
23375	assertOk ( d. doCheckExample ( BLOCK_PREPARE_EXAMPLE, BLOCK_REGEXP, readScript ( ) ) )
23376	assertEquals ( "No exception thrown!", true, result )
23377	assertThat ( Functions. getPath ( request ), is ( "/aaa" ) )
23378	assertEquals ( "Wrong number of violations.", 1, violations. size ( ) )
23379	assertEquals ( "Field-Name: value1\\n value2\\n.\\n value3\\n", field. format ( "value1\\nvalue2\\n\\nvalue3" ) )
23380	assertEquals ( expectedText, writer. toString ( ). replace ( "\\n", "" ). replace ( "\\r", "" ) )
23381	Assert. assertEquals ( "3 ����� 15 砖注�转 38 ������������������������������������������������������������������������
23382	assertEquals ( "abc", output. toString ( ) )
23383	assertEquals ( expected, actual )
23384	assertEquals ( "Hello me", call. getResult ( ) )
23385	assertEquals ( 17, instance. evaluations )
23386	assertEquals ( arr, resultArr )
23387	assertEquals ( dataflowInputPort, edit. getSubject ( ) )
23388	assertEquals ( expectedQuery, actualQuery )
23389	assertSpanChunk ( spanChunkBo )
23390	assertImage ( srcImg, destImg, e )
23391	assertThat ( subject. supports ( update ), is ( false ) )
23392	assertEquals ( expected, actual )
23393	assertSame ( node, transform ( node ) )
23394	Assert. assertEquals ( "Wrong toString()", "msgVersion: 1 objectClass: org.opendaylight.yang.gen.v1.urn.opendaylight" + ".openflow.protocol.rev130731.BarrierInput msgType: 4 msgType2: 8", key1. toString ( ) )
23395	assertThat ( TestLoggerFactory. getLoggingEvents ( ), is ( empty ( ) ) )
23396	assertEquals ( 1, queries. size ( ) )
23397	assertEquals ( expectedResult, actualResult )
23398	assertEquals ( expected, cluster )
23399	assertEquals ( expected, actual )
23400	assertNull ( result )
23401	assertSorted ( )
23402	assertNotNull ( pageEntity. getContent ( ) )
23403	Assert. assertEquals ( childConfig. getUserID ( ), result. getUserID ( ) )
23404	assertEquals ( 1, process. getLoggingCounter ( ) )
23405	assertEquals ( gbids, newGbids )
23406	Assert. assertEquals ( 7, ( ( VersionMessageWrapper ) list. get ( 0 ) ). getMessageBuffer ( ). readableBytes ( ) )
23407	assertEquals ( HttpStatus. SC_BAD_REQUEST, response1. getCode ( ) )
23408	assertEquals ( expectedMap, map )
23409	assertThat ( dao. getLongId ( id ), equalTo ( id ) )
23410	assertions. containsSequence ( sequence )
23411	assertTrue ( vRoute. getStart ( ). getLocation ( ). getId ( ). equals ( "start" ) )
23412	assertThat ( output, containsString ( "FHIR store deleted:" ) )
23413	assertEquals ( "concepts = [" + buildTestMap_2 ( ) + ",connections = [" + buildTestMap_3 ( ) + "," + buildTestMap_4 ( ) + "], connections = [" + buildTestMap_5 ( ) + "]," + "concepts = [" + buildTestMap_6 ( ) + "," + buildTestMap_7 ( ) + "]," + "connections = [" + buildTestMap_8 ( ) + "]," + "connections = [" + buildTestMap_9 ( ) + "]," + buildTestMap_10 ( ) + "]," + buildTestMap_11 ( ) + "]," + buildTestMap_12 ( ) + "]," + buildTestMap_15 ( ) + "]," + buildTestMap_16 ( ) + "]," + "concepts = [" + buildTestMap_7 ( ) + "]," + buildTestMap_8 ( ) + "]," + "connections = [" + buildTestMap_9 ( ) + "]," + "concepts = [" + buildTestMap_11 ( ) + "]," + "connections = [" + buildTest
23414	assertSame ( expected, actual )
23415	assertNotNull ( xacmlStatement )
23416	assertTrue ( solrCounter > 0 )
23417	assertEquals ( ValidationResult. Result. ERROR, validationResult. getStatus ( ) )
23418	assertEquals ( name, ship. getName ( ) )
23419	assertFalse ( types. isEmpty ( ) )
23420	Assert. assertEquals ( 1, mainTag. size ( ) )
23421	Assert. assertTrue ( thirdConceptSet. getSortWeight ( ) > newThirdSetMember. getSortWeight ( ) )
23422	assertTrue ( localFileSys. mkdirs ( dir ) )
23423	assertEquals ( ANSWER_BODY, createdTopic. getBody ( ) )
23424	assertEquals ( "{\\"messageType\\":\\"CALL_RESULT\\",\\"callId\\":\\"thisIsThePayload\\",\\"payload\\":payload}", jsonMessage )
23425	assertEquals ( Lists. newArrayList ( "-o", projectPath. append ( outputPath ). toOSString ( ), "-listener", "-package", "-encoding", "UTF-8" ), options. command ( file ) )
23426	Assert. assertTrue ( "canonicalizing the xtm file is not the same as the baseline", TestFileUtils. compareFileToResource ( out, baseline ) )
23427	assertEquals ( 2, lists. size ( ) )
23428	assertTrue ( new File ( folder. getRoot ( ), "test/expected/public/test.sql" ). exists ( ) )
23429	assertEquals ( "{\\"b\\": 2}", dbr. query ( "SELECT * FROM CC_TEST WHERE ID = 1" ). at ( 0 ). get ( "js", Json. class ). json )
23430	assertTrue ( testMojo. shouldSkip ( ) )
23431	assertFalse ( new DefaultSecurityContext ( p, s ). isUserInRole ( "friend" ) )
23432	assertThat ( measure. getPayload ( ), is ( equalTo ( "105" ) ) )
23433	Assert. assertTrue ( "Memory stability check failed", percentageMemory < 1.0 )
23434	org. junit. Assert. assertEquals ( 0, fxForm. getElements ( ). size ( ) )
23435	assertEquals ( "42", response. body ( ) )
23436	assertThrows ( ( ) -> instance. matcherFor ( matcher ) )
23437	Assert. assertEquals ( expected, actual )
23438	assertThat ( productResultUrls. size ( ), is ( 0 ) )
23439	assertEquals ( "Wrong list property", list, conf2. getList ( prop ) )
23440	assertEquals ( 401, r. getStatus ( ) )
23441	assertEquals ( x, v )
23442	assertFalse ( db. collectionExists ( methodName ) )
23443	assertSame ( Writables. records ( TestWritable. class ), wt )
23444	this. assertGet ( "artifacttemplates/http%253A%252F%252Fopentosca.org%252Fartifacttemplates/MyTinyTest/files/zip", "entitytemplates/artifacttemplates/MyTinyTest_files.zip" )
23445	assertEquals ( "20110103201412297032000000", d. getId ( ) )
23446	assertEquals ( list ( "2", "3" ), redis. brpop ( "two" ) )
23447	assertFalse ( "Unexpected messages are present.", page. isAnyMessagesPresent ( ) )
23448	assertEquals ( 1, map. size ( ) )
23449	assertNotNull ( strategy )
23450	assertPermanentCount ( playerA, "Scion of Ugin", 0 )
23451	assertThat ( jsonOutputStreamParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/jsonmarshallertest/testMessage.json" ) ) )
23452	Assert. assertTrue ( new LogAdapter ( "N/A", mockConfigDefault ( ) ). isDebugEnabled ( ) )
23453	assertEquals ( "()", query. toString ( ) )
23454	assertSame ( GBP_2_34, test )
23455	assertThat ( getCreatedPod ( ). getEnv ( ), hasEnvVar ( "item1", itemRawValue ) )
23456	assertEquals ( expected, resultOut )
23457	assertThat ( result, is ( RpslObject. parse ( "irt:DEV-IRT" ) ) )
23458	assertEquals ( ONE_TWO_THREE, buf. readableBytes ( ) )
23459	assertEquals ( "�峰����版�绋�瀹�涔�澶辫触", "�峰�����版�绋�瀹�涔�澶辫触", result )
23460	assertThat ( testPath, is ( expectedPath ) )
23461	Assert. fail ( "an exception should have been thrown" )
23462	assertEquals ( "The user name was incorrect", "RNO_MCLWEB", changeset. getUserName ( ) )
23463	assertEquals ( false, modifiedAction. isPropagatingConfiguration ( ) )
23464	assertThat ( info. getClusterService ( CLUSTER ), sameInstance ( newService ) )
23465	assertEquals ( service. getPresentableDistance ( distances ), "approaching" )
23466	assertThat ( collect, not ( hasItem ( IS_CLEAN_HANDLER. getValue ( ) ) ) )
23467	assertEquals ( "GBP 2.34", test. toString ( ) )
23468	assertTrue ( originalMap. isEmpty ( ) )
23469	assertTrue ( "Agent-based allocation should have failed", plan. getAllReservations ( ). size ( ) == numJobsInScenario )
23470	assertArrayEquals ( data, Files. readAllBytes ( file ) )
23471	assertEqualsJson ( expected, json )
23472	Assert. assertTrue ( contentAsString. contains ( "archive.zip" ) )
23473	assertEquals ( HttpServletResponse. SC_UNAUTHORIZED, response. getStatus ( ) )
23474	assertOutput ( hbs. benchmark ( ) )
23475	Assert. assertTrue ( single. isPresent ( ) )
23476	assertEquals ( properties. length, fr. getProperties ( ). length )
23477	Assert. assertTrue ( testApiVerticleFile. exists ( ) )
23478	assertThat ( hBaseConfiguration. getConfiguration ( ), is ( configuration ) )
23479	assertThat ( testUriStr, is ( expectedUriStr ) )
23480	assertTrue ( session. has ( SESSION_TOKEN_LABEL ) )
23481	assertThat ( duration. plus ( ClockUnit. ZERO ), is ( Duration. ofClockUnits ( 0, 0, 0 ) ) )
23482	assertEquals ( "null", stringStringMap. get ( "name" ) )
23483	Assert. assertEquals ( AccessMode. INHERITED, sr. getSerializableAccess ( ) )
23484	assertObjectEquals ( "{type:'array',items:{type:'object',properties:{f1:{type:'string'}}},'x-example':[[{f1:'foobar'}]]}", s. getSchema ( BeanList. class ) )
23485	assertEquals ( rendered, secondPass )
23486	assertEquals ( expected3, actual3 )
23487	assertTrue ( result. length == 1 )
23488	assertEquals ( amendedCommit, getHeadCommit ( TEST_BRANCH, repo ) )
23489	assertTrue ( Script. matchNamed ( MatchType. EQUALS, "res", null, "[1, 2, 3]", ctx ). pass )
23490	assertSseResponse ( sseResponse, "event:eventName", "data:payload" )
23491	assertTrue ( ex. isPrime ( 31 ) )
23492	assertEquals ( 0, files. length )
23493	assertEquals ( "collection1", coll. getName ( ) )
23494	assertEquals ( 1000, urlConn. getResponseCode ( ) )
23495	assertEquals ( 200, response. getStatus ( ) )
23496	assertEquals ( expectedBill, bill. doubleValue ( ), 0.01 )
23497	assertOut ( "this.b = 10 + 'px'" )
23498	assertValues ( presentFieldList, actual )
23499	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Pay/>", elem. toXml ( ) )
23500	authRule. assertScenario ( scenario )
23501	assertEquals ( expected, result. getArr ( ) )
23502	assertTrue ( "bar". equals ( c. getValue ( ) ) && "foo". equals ( c. getName ( ) ) && 1 == c. getVersion ( ) && "path". equals ( c. getPath ( ) ) && "domain". equals ( c. getDomain ( ) ) && "comment". equals ( c. getComment ( ) ) && 10 == c. getMaxAge ( ) )
23503	assertParser ( twig )
23504	assertEquals ( expectedVersionString, versionData1. toString ( ) )
23505	assertThat ( time, equalTo ( dateFormat. parse ( "2013-Jan-22 4:59:12.22" ). getTime ( ) ) )
23506	assertEquals ( expected, actual )
23507	assertEquals ( expecting, found )
23508	assertTrue ( resultComparator. compare ( cucc1, cucc2 ) > 0 )
23509	assertEquals ( "The value is not correct.", date, value )
23510	assertTrue ( Arrays. stream ( itia. getValues ( ) ). allMatch ( v -> key == v / 2 ) )
23511	assertEquals ( "Escape shortcut not handled", Keys. ESCAPE, driver. findElement ( By. cssSelector ( ".v-window-contents.v-scrollable" ) ). getText ( ) )
23512	assertThat ( result. statusCode, is ( Response. OK ) )
23513	assertEquals ( Hours. of ( - 4 ), test5. multipliedBy ( - 3 ) )
23514	assertFalse ( validator. validate ( EntityNames. GRADE, grades ). equals ( grades ) )
23515	assertEquals ( "foo:bar", uri. getLabel ( ) )
23516	assertEquals ( "Time to upgrade...", result )
23517	assertEquals ( "org.eclipse.vorto/1.0.0/Location.java", modelId. getFileName ( ) )
23518	assertNotNull ( importer )
23519	Assert. assertEquals ( IntNode. valueOf ( 1 ), result )
23520	assertEquals ( "a20", comboBoxElement. getText ( ) )
23521	Assert. fail ( )
23522	assertNotNull ( queryFactory3. delete ( QAnimal. animal ) )
23523	assertEquals ( expecting, t. toStringTree ( ) )
23524	assertEquals ( id, entity. getId ( ) )
23525	assertEquals ( new BigDecimal ( 123 ), arrayFirst )
23526	assertNotNull ( wflows )
23527	assertTrue ( providerAInvoked )
23528	assertEquals ( "invoice.toJson('fetchPlan:customer:1,fetchPlan:orders:2')", p. toString ( ) )
23529	assertThat ( issues, is ( empty ( ) ) )
23530	Assert. assertTrue ( "Authenticated", authenticated )
23531	assertEquals ( OK, response. getStatus ( ) )
23532	assertEquals ( 0, scores. getScore ( ) )
23533	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, expectedQuery ) )
23534	assertTrue ( sim )
23535	assertEquals ( DOUBLE, v8Object. getType ( "key" ) )
23536	assertEquals ( "ProcessorName=ProcessorName;CurrentFileName=CurrentFileName;CurrentLine=Line;NumberOfLineToProcess=LineToProcess;NumberOfLineProcessed=LineToRead;StatusMessage=Processing", CSV )
23537	assertEquals ( 1, this. chartChangeEvents. size ( ) )
23538	assertEquals ( calendar. getTimeInMillis ( ), aiResponse. getTimestamp ( ) )
23539	assertThat ( options. isStrict ( ), is ( false ) )
23540	org. junit. Assert. assertEquals ( expected, actual )
23541	assertPermanentCount ( playerA, "Silvercoat Lion", 1 )
23542	assertEquals ( 0, graph. shortestPathCount ( a, e ) )
23543	assertEquals ( "Wrong number of urls", 2, urls. size ( ) )
23544	Assert. assertEquals ( "queueInfo translation didn't work.", returned. getState ( ). toString ( ), StringUtils. toLowerCase ( queueInfo. getQueueState ( ). toString ( ) ) )
23545	assertNotNull ( simpleComponent )
23546	assertEquals ( "x", fieldsCaptor. getValue ( ). getName ( ) )
23547	assertEquals ( 3, acc. get ( ) )
23548	assertEquals ( "1234567", sb. toString ( ) )
23549	assertArrayEquals ( result, CompactEncoder. binToNibbles ( test ) )
23550	assertNotNull ( processInstance. getId ( ) )
23551	assertNull ( "Expected null privacy policy, but it is not.", TestCase. privacyPolicyManager )
23552	assertEquals ( filename, instance. getFilename ( ) )
23553	assertNotNull ( securityContext )
23554	assertEquals ( "SELECT * FROM Class", q. toString ( ) )
23555	Assert. assertEquals ( driver ( ). getTitle ( ), "We Arrive Here" )
23556	assertNotEquals ( frameData1, frameData2 )
23557	assertBatchletCompleted ( )
23558	assertEquals ( "a/b/c", resolved. toString ( ) )
23559	assertTrue ( hand. getClassifier ( ) == HandClassifier. TWO_PAIR )
23560	Assert. assertEquals ( 1, model. getValidationItems ( ). size ( ) )
23561	assertThat ( description. toString ( ), is ( "a JSON array node with value that is ANYTHING" ) )
23562	assertEquals ( 204, resp. getStatus ( ) )
23563	assertEquals ( expected, actual )
23564	assertTrue ( Pattern. matches ( "(?s).*<td>\\\\s*<th>\\\\s*<span>\\\\s*<i>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*<u>\\\\s*</u>\\\\s*</u>\\\\s*</u>\\\\s*</span>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>\\\\s*</td>
23565	assertThat ( prepare, CoreMatchers. instanceOf ( ProfiledPreparedStatement. class ) )
23566	assertNotNull ( result )
23567	assertTrue ( point. equals ( point ) )
23568	assertEquals ( expResult, result )
23569	assertSame ( toTest, toTest. setType ( ParamType. getDefault ( ) ) )
23570	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
23571	assertThat ( getterMethod. getReturnType ( ). getName ( ), is ( "com.example.ImpliedObjectProperty" ) )
23572	assertThat ( inputStream, notNullValue ( ) )
23573	assertTrue ( signatureValid )
23574	AssertJUnit. assertFalse ( "filter matches object, but it should not", match )
23575	assertEquals ( "one", fixture. getHeaders ( ). get ( "header1" ) )
23576	assertEquals ( expect, pred )
23577	assertEquals ( Color. blue. getRGB ( ), thumbnail. getRGB ( 49, 99 ) )
23578	assertEquals ( 0.0d, mock. doubleReturningMethod ( 12 ), 0.0d )
23579	assertEquals ( "alt2\\n", found )
23580	assertThat ( result, is ( expct ) )
23581	assertEquals ( "-server:https://tfs02.codeplex.com", builder. toString ( ) )
23582	assertEquals ( EmailRecipientUtils. BCC, analyser. getType ( new InternetAddress ( "mickey@disney.com" ) ) )
23583	assertDurationEquals ( dv3, dv1. minus ( dv2 ) )
23584	assertTrue ( second1. equals ( second2 ) )
23585	assertThat ( impl. getOntologyClasses ( ontologyId ). count ( ), is ( 0L ) )
23586	assertOut ( "/**\\n * @const\\n * @type {*}\\n */\\nRoyaleTest_A.foo" )
23587	Assert. fail ( "Test should not go here - invalid deployment (invalid value of resteasy.scan.providers)!" )
23588	assertThat ( result, nullValue ( ) )
23589	assertEquals ( 0.0, config. worldDistance ( ), 0.001 )
23590	assertNotNull ( instance )
23591	assertNotNull ( wsdl1 )
23592	assertFalse ( lock2. tryLock ( ) )
23593	Assert. assertFalse ( sampling )
23594	assertEquals ( imports. size ( ), tree. getModelObject ( ). getChildCount ( tree. getModelObject ( ). getRoot ( ) ) )
23595	assertEquals ( "Unexpected state class", FormLayoutState. class, state. getClass ( ) )
23596	assertEquals ( buf. toString ( ), result )
23597	observer. assertObservations ( "22", PhaseId. APPLY_REQUEST_VALUES, PhaseId. INVOKE_APPLICATION, PhaseId. PROCESS_VALIDATIONS, PhaseId. RENDER_RESPONSE, PhaseId. RESTORE_VIEW, PhaseId. UPDATE_MODEL_VALUES, PhaseId. APPLY_REQUEST_VALUES, PhaseId. INVOKE_APPLICATION, PhaseId. PROCESS_VALIDATIONS, PhaseId. RENDER_RESPONSE, PhaseId. RESTORE_VIEW, PhaseId. UPDATE_MODEL_VALUES )
23598	assertEquals ( 3, groups. size ( ) )
23599	assertNotNull ( actAa )
23600	Assert. assertEquals ( pn. getFullName ( ), "Sr. Taylor" )
23601	Assert. assertEquals ( "3 啶�啶苦え啷� 啷�啶苦え啷�", t. format ( new Date ( 0 ) ) )
23602	assertThat ( results, is ( Collections. emptyList ( ) ) )
23603	assertSame ( config, result )
23604	assertEquals ( "Double-It not doubling positive numbers", 20, resp )
23605	assertThat ( uri, is ( new URI ( base + "?port=COM3&nameWithSpaces=value with spaces" ) ) )
23606	N4CliHelper. assertExpectedOutput ( expectedString, out )
23607	Assert. assertTrue ( lastElementIsSame ( store, new WeightedObservedPoint ( w, x, y ) ) )
23608	assertTrue ( user1Leaf. isChildOfGroup ( "primaryGroup" ) )
23609	assertTrue ( gw. lines. isEmpty ( ) )
23610	assertEquals ( 400, fail )
23611	assertEquals ( 100, ( ( Integer ) proxy ). intValue ( ) )
23612	assertNotNull ( model )
23613	assertEquals ( true, parsedTypes. get ( 0 ) instanceof RedditSubreddit )
23614	assertTrue ( expectedDirection. equals ( reflectedDirection ) )
23615	assertEquals ( expected, value )
23616	assertEquals ( "try", result )
23617	assertEquals ( 3, response. getDistances ( ). size ( ) )
23618	assertTrue ( Year. isLeap ( year ) )
23619	Assert. assertTrue ( Precision. equals ( 7.0, MathArrays. distance1 ( p1, p2 ), 1 ) )
23620	assertTrue ( xml. contains ( "Eph 2:4-5" ) )
23621	assertEquals ( expectedApiVersion, Deencapsulation. getField ( httpHsmSignatureProvider, "apiVersion" ) )
23622	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
23623	assertTrue ( mse. getTotalError ( ) < maxError )
23624	assertEquals ( "{\\"key\\":null,\\"key2\\":null,\\"value\\":null}", writer. toString ( ) )
23625	assertEquals ( "/%C4%8D", encoded. toURL ( ) )
23626	assertNull ( auth. authenticate ( USERNAME, PASSWORD, mockServerSession ) )
23627	assertEquals ( expected, output )
23628	assertEquals ( "Expected 0 results!", 0, n )
23629	Assert. assertTrue ( protectedPage. getTitleText ( ). contains ( "Protected Page" ) )
23630	assertEquals ( "testFunctionName", test. getFunctionName ( ) )
23631	Assert. assertEquals ( date, scheduling. getStartupTime ( ) )
23632	assertAnnotations ( 2, Coordinate. class, new TestCoordinate ( 0, "51.507, -0.125", "dd", TYPE_POINT_COORDINATES_0_125_51_507 ), new TestCoordinate ( 1, "-3.188,55.953", "dd", TYPE_POINT_COORDINATES_55_953_3_2 ) )
23633	assertEquals ( "<html><head><noscript></noscript></head><body><img src=\\"foo\\" /><p>Hello</p></body></html>", TextUtil. stripNewlines ( doc. html ( ) ) )
23634	assertEquals ( result, expecting )
23635	assertMissing ( "list", 1L )
23636	assertEquals ( "foo", s )
23637	assertEquals ( 1, patient. getCustomId ( ). getUndeclaredExtensions ( ). size ( ) )
23638	assertEquals ( txt, normalizer. normalize ( txt ) )
23639	assertThat ( chain, is ( sameInstance ( builder ) ) )
23640	assertEquals ( "ID3v2ChapterTOCFrameData [id=null, startTime=0, endTime=0, startOffset=0, endOffset=0, subframes=[]]", frameData. toString ( ) )
23641	assertEquals ( "test", obj. toString ( ) )
23642	assertEquals ( "DynCf2", cfid2 )
23643	assertEquals ( "bcse", e1, e2 )
23644	assertEquals ( "(34 abc)\\n", found )
23645	assertTrue ( runtime instanceof MockIndirectBaseClass )
23646	assertThat ( byValue. getSingleResult ( ). getF ( ), equalTo ( f1 ) )
23647	testRunner. assertAllFlowFilesTransferred ( PutORC. REL_FAILURE, 1 )
23648	assertThat ( this. capistranoCommandBuilder. build ( ), hasItem ( "--verbose" ) )
23649	assertEquals ( "chocolate", res. getArgument ( "foo" ) )
23650	Assert. assertFalse ( nodes. isEmpty ( ) )
23651	assertEquals ( 42, Files. read ( link ) )
23652	assertTrue ( desc. isEmpty ( ) )
23653	assertEquals ( expectedQuery, actualQuery )
23654	assertEquals ( expectedResult, result )
23655	assertThat ( result, is ( jsonArrayOfStrings ( "Alice", "Bob", "Alice" ) ) )
23656	assertEquals ( "3 啶�啶苦く啷� 啷�啶距う", t. format ( new Date ( 2629743830L * 12L * 3L ) ) )
23657	runner. assertNotValid ( credentialsService )
23658	assertEquals ( "Test if sparse from file equals stored array", mlArray, mlArrayRetrieved )
23659	assertEquals ( "Testing Course", courses. get ( 0 ). getName ( ) )
23660	assertFalse ( satisfiesPrecondition ( cu ) )
23661	assertTrue ( transform instanceof Modifier. Defaultr )
23662	assertEquals ( "x", ex1. getKey ( ) )
23663	assertEquals ( "Unable to find the specified file transfer request.", shadowDialog. getIcon ( ) )
23664	assertEquals ( "SELECT a AS A1, b AS A2, c AS A3 FROM test", select. toString ( ) )
23665	assertEquals ( instance, AbstractEntity. load ( MyEntity. class, 3L ) )
23666	assertEquals ( "", result )
23667	assertEquals ( null, task )
23668	assertEquals ( getLabel ( ), 0.0, eye. minus ( m3 ). getEuklideanValue ( ), TOLERANCE )
23669	assertTrue ( results. containsAll ( Arrays. asList ( male, undergraduate, graduate, associate ) ) )
23670	assertEquals ( 0.5, result. getUniquenessRatio ( ), 0.0 )
23671	assertSame ( value, bound. type ( ) )
23672	Assert. assertEquals ( 0.0, DoubleArrays. sum ( props ), 1e-13 )
23673	Assert. assertNull ( caixa )
23674	assertEquals ( "1.2\\t2.3\\t3.4\\n" + "4.5\\t5.6\\t6.7\\n", out. toString ( ) )
23675	assertEquals ( result, "link" )
23676	assertSame ( "Wrong message", message, this. tag. getMessage ( ) )
23677	Assert. assertTrue ( ping )
23678	assertEquals ( inc. get ( ). get ( ), outRA. get ( ). get ( ) )
23679	assertArrayEquals ( data, getInputStream ( ). readPackedFloats ( data. length / 3, 3 ), 0.00001f )
23680	assertEquals ( new Double ( 123 ), arrayFirst )
23681	assertEquals ( "admin", nodeName )
23682	runner. assertAllFlowFilesTransferred ( SelectHiveQL. REL_FAILURE, 1 )
23683	assertNotNull ( endpoint. session )
23684	assertEquals ( 0.000001, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
23685	Assert. assertEquals ( "3 ����������������������������������������������������������������������������������
23686	assertEquals ( 1, x. size ( ) )
23687	Assert. assertEquals ( 1, inserted. intValue ( ) )
23688	assertTrue ( hasAttachmentType )
23689	assertEquals ( doc. getContent ( ), "some data\\r\\n" )
23690	assertSQLException ( ( ) -> metadata. getParameterClassName ( 2 ) )
23691	assertThat ( xmlResult, CompareMatcher. isSimilarTo ( out. toString ( ) ). ignoreWhitespace ( ). withNodeMatcher ( new DefaultNodeMatcher ( ElementSelectors. byNameAndText ) ) )
23692	assertEquals ( 1, constraintViolations. size ( ) )
23693	assertNotNull ( method. toString ( ), m )
23694	Assert. assertEquals ( result, byteArrayInputStream )
23695	assertTrue ( copy. exists ( ) )
23696	assertNotNull ( result )
23697	assertEquals ( "method value", PropertyUtils. getValue ( object, "item" ) )
23698	assertNotNull ( service )
23699	assertRowMetaIsFilledWithFields ( )
23700	assertThat ( isExpectedData, is ( true ) )
23701	assertEquals ( original, newone )
23702	assertEquals ( 5, d, 0 )
23703	Assert. assertEquals ( "com.examples", data. getLocalHistory ( ). getLastTest ( ) )
23704	assertThat ( instance. getManager ( ), is ( sameInstance ( manager ) ) )
23705	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Record/>", elem. toXml ( ) )
23706	assertFalse ( incorrect. isValid ( status ) )
23707	assertEquals ( Collections. singletonList ( new InetSocketAddress ( "1.2.3.4", 1080 ) ), arguments. getLocalAddress ( ) )
23708	assertEquals ( expected, javaSource. getEscalSourceCode ( ) )
23709	assertEquals ( radius, 0.0 )
23710	assertTrue ( "Found correct results", resultsFound. size ( ) == MULTIPLE_INPUT_RESULTS. size ( ) )
23711	assertTrue ( result instanceof Time )
23712	assertEquals ( "null is 'this-is-null-value'", newText )
23713	assertThat ( results, containsInAnyOrder ( ( Matcher ) hasEntry ( "code", "127689" ), hasEntry ( "code", "127689" ) ) )
23714	assertEquals ( Status. NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
23715	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
23716	Assert. assertTrue ( e. toString ( ). contains ( "Not found: Table measurement-lab:m_lab.2010_01" ) )
23717	assertThat ( greetings, Matchers. < String > hasItems ( is ( "Hello, Peter" ), is ( "Hello, Paul" ), is ( "Hello, Mary" ) ) )
23718	assertTrue ( cygnusGroupingRules. getFields ( ). isEmpty ( ) )
23719	assertEquals ( expected, sumErrorSquares, 0.01 )
23720	assertEquals ( testStr, new String ( result ) )
23721	assertEquals ( Constants. ACCESS_TOKEN_ENDPOINT, result )
23722	assertEquals ( "reboot", jobsResponseParser. cloudToDeviceMethod. getMethodName ( ) )
23723	assertEquals ( false, start )
23724	context. assertEquals ( 500, res. statusCode ( ) )
23725	assertEquals ( String. class, type )
23726	assertEquals ( "1234.5", result )
23727	Assert. assertEquals ( 0.0, optimizer. getRootMeanSquaredError ( ), 2E-4 )
23728	mockery. assertIsSatisfied ( )
23729	Assert. assertEquals ( "Hello World", outStream. toString ( ) )
23730	assertTrue ( landsatMetadata instanceof Landsat8Metadata )
23731	assertEquals ( contentBytes. length, content. length )
23732	assertFalse ( GitFileUtils. isFile ( "/test_file.sh", commit. getName ( ), repo ) )
23733	assertEquals ( 2, appClient. getRegistrationCount ( ) )
23734	assertThat ( result, equalTo ( Charsets. UTF_8 ) )
23735	assertEquals ( "<<font point-size=\\"null\\">text</font>>", label )
23736	assertTrue ( "Date is not after base date", ExtDateTimeUtils. dateIsAfter ( baseDate, afterDate ) )
23737	context. assertEquals ( "Squid", handler. body ( ) )
23738	assertEquals ( "value 1", sel. getValue ( ) )
23739	assertEquals ( "HELLO", buffer. toString ( UTF_8 ) )
23740	assertEquals ( filterView, filterEditor. view )
23741	Assert. assertNull ( spanCache. getSourceInfo ( serverSpan ) )
23742	assertEquals ( str11, se. toString ( ) )
23743	Assert. assertEquals ( primaryPrin1, primaryPrin2 )
23744	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
23745	Assert. assertTrue ( p. f ( 3 ) < 7 )
23746	assertEquals ( 0, result )
23747	assertNotNull ( dataBinding )
23748	assertTrue ( "Not isomorphic", b )
23749	assertThat ( scope, equalTo ( new SciTokenScope ( QUEUE, "/" ) ) )
23750	assertValueEqualsResultSet ( rs, Arrays. < Object > asList ( ROW1, ROW2, ROW3 ) )
23751	assertFalse ( replaced )
23752	assertEquals ( "Clusterid should not match with the existing one", "wrong-cid", storage. getClusterID ( ) )
23753	assertTrue ( CertificateUtilExtended. isSelfSignedCertificate ( certPem ) )
23754	assertEquals ( expectedTransportCosts + expectedActivityCosts, iCosts, 0.01 )
23755	assertSame ( ThreadNameCachingStrategy. UNCACHED, tns )
23756	assertTrue ( p. getStatusSimple ( ). toString ( ). equals ( "active" ) )
23757	assertEquals ( windowWidth, generator. getWindowWidth ( ) )
23758	assertTrue ( ex. isPrime ( 31 ) )
23759	assertThat ( result, is ( true ) )
23760	assertEquals ( deleteTemplate1, deleteTemplate1Duplicate )
23761	assertNull ( s )
23762	assertXMLSimilar ( "Invalid message", expected, message )
23763	assertTrue ( compare < 0 )
23764	assertThat ( "Wrong type of myTestFactory.", myTestFactory. getDelegate ( ), CoreMatchers. instanceOf ( StandaloneConnectionFactory. class ) )
23765	assertEquals ( 1, ksession. fireAllRules ( ) )
23766	assertEquals ( "Should return FAILURE", "failure", jsonObj. get ( "status" ). getAsString ( ) )
23767	assertEquals ( timestamp. getTime ( ), buttonFunctionblockData. getStatusProperty ( "sensor_value" ). get ( ). getValue ( ) )
23768	assertTrue ( "sin() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP )
23769	assertEquals ( "aTestString", classUnderTest. getFieldLength ( ) )
23770	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 3, warnings. size ( ) )
23771	assertEquals ( lastValue, "EndNode8" )
23772	assertThat ( pageable, is ( nullValue ( ) ) )
23773	assertEquals ( "http://somens.org:8080/type1/geometry/Geometry:srid=4326,pop:java.lang.Long,when:Date,whennot:Date,pid:String", type. getTypeDescriptor ( ) )
23774	assertArrayEquals ( refar, d. getResult ( ) )
23775	Assert. assertEquals ( 10000, count )
23776	assertEquals ( RequestResult. FAILURE, requestResult )
23777	assertEquals ( 0, Context. countActive ( ) )
23778	assertThat ( formatterOutput, containsString ( "" + "  " + AnsiEscapes. GREEN + "Given " + AnsiEscapes. RESET + AnsiEscapes. GREEN + "first step" + AnsiEscapes. RESET ) )
23779	assertEquals ( args. getArgument ( "var1" ), "val0" )
23780	assertTrue ( connected )
23781	login. assertIsConnectedAs ( "nouser@localhost" )
23782	assertEquals ( p. format ( new Date ( 1 ) ), "���" )
23783	assertTrue ( filter. matches ( operation, poolInfoMap ) )
23784	Assert. assertEquals ( dialect. getURL ( conn ), "jdbc:hive://null:null/null" )
23785	assertThat ( getPodSpec ( jobSpec ). getRuntimeClassName ( ), nullValue ( ) )
23786	testTwo. assertIsSatisfied ( )
23787	Assert. assertNull ( busca )
23788	Assert. assertEquals ( "did not get expected number of resources", 2, resources. size ( ) )
23789	Assert. assertEquals ( 5, operation. operations. size )
23790	assertThat ( ts, not ( nullValue ( ) ) )
23791	assertEquals ( "Wrong number of columns", COLUMNS. size ( ), columns. size ( ) )
23792	Assert. assertTrue ( Arrays. equals ( data, xdata ) )
23793	assertThat ( jsonViewAnnotation. value ( ) [ 0 ]. getSimpleName ( ), equalTo ( "MyJsonViewClass" ) )
23794	Assert. assertEquals ( IrodsRuleInvocationTypeEnum. IRODS, actual )
23795	AssertionUtils. multiAssertEquals ( createAsDocument11, response6. getResponseObject ( ) )
23796	assertEquals ( mockedContractState, invoke ( testResponseData, "getContractState" ) )
23797	assertLine ( "dessicated dog droppings", b, false )
23798	assertEquals ( 403, r. getStatus ( ) )
23799	assertEquals ( expectedQuery, actualQuery )
23800	assertTrue ( thrown )
23801	assertEquals ( expected, actual )
23802	assertEquals ( - 123456789012L, ConfigUtils. getLong ( config, 0, "some-long" ) )
23803	Assert. assertEquals ( expected, actual )
23804	assertEquals ( result, event )
23805	assertEquals ( HttpStatus. SC_NOT_FOUND, r. getStatus ( ) )
23806	assertTemplateEvaluatesTo ( "Hi" )
23807	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( component ) instanceof WStyledTextRenderer )
23808	assertNotNull ( file )
23809	Assert. assertEquals ( new DateTime ( 0 ), spec. extractTimestamp ( ImmutableMap. < String, Object > of ( "TIMEstamp", "2014-03-01" ) ) )
23810	assertEquals ( insertPerson, insertSamePerson )
23811	assertEquals ( true, classUnderTest. getSQLShareHistory ( ) )
23812	Assert. assertEquals ( "randomUser", UserGroupInformation. getLoginUser ( ). getUserName ( ) )
23813	assertArrayEquals ( correctStringSet, randomPurmutationSet )
23814	assertTrue ( "1.2.0.0 <= 1.2.0", ruleEvaluator. evaluateBooleanRule ( rule, values ) )
23815	Assert. assertEquals ( 0, instance. getOverLaps ( ). size ( ) )
23816	assertTrue ( BufferedImageComparer. isSame ( originalImage, copyImage ) )
23817	assertPermanentCount ( playerA, "Smuggler's Copter", 1 )
23818	assertFalse ( sameElts ( x1, x2 ) )
23819	assertThat ( getCreatedPodSpecContainer ( ). getVolumes ( ), allOf ( hasVolume ( "volume1", "/domain-path1" ), hasVolume ( "volume2", "/server-path" ) ) )
23820	Assert. fail ( )
23821	assertEquals ( "Hello world", result [ 0 ] )
23822	Assert. assertEquals ( "moduleC", foundModule )
23823	assertEquals ( "1.0.0", m. getPayload ( ) )
23824	assertThat ( encryptor. checkPassword ( testPassword, null ), is ( false ) )
23825	assertSame ( bfi, interceptor. getBindingFaultInfo ( boi, ex ) )
23826	Assert. assertEquals ( "Key:Val", firstLine )
23827	assertNotNull ( result )
23828	assertArrayEquals ( NOT_DECODED, data, object. getData ( ) )
23829	assertThat ( this. userProfileManager. getProfile ( username ), is ( nullValue ( ) ) )
23830	Assert. assertEquals ( "Fail find by FirstName", userExist. getFirstName ( ), list. get ( 0 ). getFirstName ( ) )
23831	assertions. isNotLessThan ( null )
23832	assertEquals ( theOwner. getClassInformation ( ), theInstance. getClassInformation ( ) )
23833	assertTrue ( foundChars )
23834	assertFalse ( etlKeyA. equals ( etlKeyB ) )
23835	assertEquals ( arrayBuffer, v8ArrayBuffer )
23836	assertThat ( generatedReportText, isSimilarTo ( expectedReport, "timestamp" ) )
23837	assertEquals ( expectedDependencies, dependencies )
23838	assertThat ( outputDirectory. getPath ( ), is ( changeSeparatorIfRequired ( "custom-reports-directory/thucydides" ) ) )
23839	assertEquals ( 0, result. size ( ) )
23840	assertEquals ( id, "1" )
23841	assertEquals ( idWithSlash, responseRemove. getId ( ) )
23842	assertThat ( thrown, instanceOf ( MaximumTimeLimitExceededException. class ) )
23843	assertFalse ( skillConstraint. fulfilled ( insertionContext ) )
23844	assertTrue ( processedResponse )
23845	assertEquals ( expected, sql [ 0 ]. toSql ( ) )
23846	assertThat ( newShare. getHours ( ), equalTo ( 15 ) )
23847	Assert. assertEquals ( tree. aliasVars. get ( "a" ). get ( 0 ). getName ( ), "a.firstName" )
23848	assertTrue ( s. isSentToRawPubKey ( ) )
23849	assertNotNull ( "Social Profile (JSON):\\n", profile )
23850	assertResourceTargetedByMappingIs ( "/child" )
23851	assertNumberOfViolations ( constraintViolations, 2 )
23852	assertEquals ( "Multiple simple parameters: [Simple 0], Simple 1, Simple 2] and also %", f. format ( ) )
23853	assertEquals ( m1, m2 )
23854	assertEquals ( DiscordianDate. of ( 2012, 2, 23 ), test )
23855	assertEquals ( expectedSource, instrumentedSource )
23856	assertEquals ( 10, counter. getCount ( ) )
23857	assertFalse ( "disabled row should not be selected", row. isSelected ( ) )
23858	assertThatAcceptorWasNotStarted ( )
23859	Assert. assertEquals ( "port should be set", portError. getDescription ( ) )
23860	assertThat ( CollectionNumbers. doubleArrayCopyOf ( rescaled ), equalTo ( new double [ ] { 0, 1, 0, 1, 1, 1 } ) )
23861	assertSkipped ( myTasks, 2, 3 )
23862	assertEquals ( 1, candidates. size ( ) )
23863	assertEquals ( "</6>,</6/0>,</6/0/0>,</6/0/1>,</6/0/2>,</6/0/3>,</6/0/4>,</6/0/5>,</6/0/6>", strLinks )
23864	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED, status )
23865	assertEquals ( adminProperties. getRefresh ( ), commandArgumentCaptor. getValue ( ) )
23866	Assert. assertEquals ( Integer. valueOf ( 1 ), result )
23867	Assert. assertEquals ( 0, loggerCount. getErrorCount ( ) )
23868	assertThat ( conflicts, contains ( myDeleteInterceptor. deleteConflictOutcome ( patient ) ) )
23869	assertFalse ( out1 instanceof Serializable )
23870	assertNull ( content )
23871	assertTarget ( "[['a'], ['b'], ['c']]" )
23872	assertTrue ( latch. await ( 4, SECONDS ) )
23873	assertNotEquals ( searchScroll1, searchScroll2 )
23874	assertThat ( students, hasSize ( 6 ) )
23875	assertEquals ( "123", this. result. included ( "hash" ) )
23876	assertEquals ( "1", result. getXdmValue ( ). asXdmValue ( ) )
23877	assertContentSame ( rs, rc, columnParam1 )
23878	Assert. assertFalse ( isAdmin )
23879	Verify. assertSize ( 1, dogLovers )
23880	assertTrue ( "No RuntimeException", ex )
23881	assertEquals ( threadsSchedule, result. getString ( ) )
23882	assertEquals ( 60, max )
23883	assertThat ( result, is ( outbound ) )
23884	assertEquals ( "Invalid type", Schema. Type. NULL, schema. getType ( ) )
23885	Assert. assertTrue ( returnedLevels. isEmpty ( ) )
23886	assertEquals ( "5c4d8c8a4e7b9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f", Hex. encodeHexString ( hashed ) )
23887	Assert. assertEquals ( 1, violations. size ( ) )
23888	assertTrue ( res. isSuccessful ( ) )
23889	ImgLib2Assert. assertIntervalEquals ( expected, result )
23890	assertFalse ( object. isReleased ( ) )
23891	Assert. assertEquals ( "test", tagManager. findEntityByTag ( e. tag ( "test" ) ) )
23892	assertEquals ( expected, ContentUtils. getContent ( content ) )
23893	assertEquals ( 100 * 1000, results. size ( ) )
23894	assertNotNull ( nn1 )
23895	context. assertIsSatisfied ( )
23896	Assert. assertFalse ( secure )
23897	assertTrue ( CompilationUtil. memberMatchesMethodID ( member, 831, parseDictionary ) )
23898	assertDefaultContactPoints ( "hello" )
23899	assertThat ( report, is ( not ( nullValue ( ) ) ) )
23900	assertThat ( Functions. bondBasedDBStereo ( g ). toSmiles ( ), is ( "F/N=N/F" ) )
23901	assertNotNull ( member )
23902	objectsWithCustomComparisonStrategy. assertIsIn ( info, "Luke", values )
23903	Assert. assertEquals ( 1, TestHelpers. getOkCount ( this. getNewDbSession ( ) ) )
23904	assertEquals ( "column 0", getGridElement ( ). getHeaderCell ( 0, 0 ). getText ( ). toLowerCase ( Locale. ROOT ) )
23905	assertThat ( actual, is ( equalTo ( expected ) ) )
23906	assertEquals ( argumentCaptor. getValue ( ). getLabels ( ), expectedLabels )
23907	assertArrayEquals ( expectedPq, pq, delta )
23908	assertEquals ( result, registry. getDerivingMetrics ( DerivingMeter. class, filter ) )
23909	assertThat ( partitionKeyValue. toJson ( ), equalTo ( mapper. writeValueAsString ( Collections. singletonList ( Collections. EMPTY_MAP ) ) ) )
23910	assertTrue ( "Column 0 has max width of 30px", logContainsText ( "Exception occurred" ) )
23911	assertSame ( fn. getClass ( ), ClassHelper. getRealClassFromClass ( fn. getClass ( ) ) )
23912	Assert. assertNotNull ( result )
23913	Assert. assertEquals ( driver ( ). getTitle ( ), "We Arrive Here" )
23914	assertEquals ( config. getReceiveBufferSize ( ), acceptedConfig. getReceiveBufferSize ( ) )
23915	assertEquals ( DataTypeManager. DefaultDataClasses. XML, xs. getType ( ) )
23916	assertEquals ( 30112, person. get ( "id" ) )
23917	assertNotNull ( action )
23918	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoICMSTotal ( ). toString ( ) )
23919	Assert. assertThat ( "ReponseList.size", responseList. size ( ), lessThan ( 2 ) )
23920	Assert. fail ( "IllegalArgumentException should occur but didn't!" )
23921	Assert. assertEquals ( false, fastqBuilder. sequenceAndQualityLengthsMatch ( ) )
23922	Asserts. check ( headerKeySize > 0, " Fail to extract http header" )
23923	assertNull ( g. getSR ( ) )
23924	assertTrue ( ferp. isReadable ( Form. class, null, null, null ) )
23925	assertEquals ( "Only two sets of metrics should be visible.", 1, httpOutput. getResults ( ). size ( ) )
23926	assertNoSpans ( )
23927	assertNotNull ( accounts )
23928	assertEquals ( expResult, result )
23929	assertEquals ( "(a = 1) and (b = 2) and (c = \\"C\\")", e. toString ( ) )
23930	assertEquals ( NOT_DECODED, METADATA, object. getMetaData ( ) )
23931	assertTrue ( ExceptionTestUtility. sameMembers ( expectedRep, Collections. EMPTY_SET, unitAnalysis. mightThrow ( s ) ) )
23932	assertEquals ( false, result )
23933	assertEquals ( false, result )
23934	assertEquals ( 0.0, value, EPSILON )
23935	assertEquals ( "Wrong schedule order", ask1. size ( ), scheduler. getAttemptCount ( fsAppAttempt ) )
23936	assertEquals ( 99.0, series. getY ( 1 ) )
23937	assertEquals ( "hello" + lineSeparator, new String ( data ) )
23938	assertEquals ( 2, names. size ( ) )
23939	assertFeatureValues ( expected, testQuery, testText, EXTRACTOR )
23940	assertSame ( test, base )
23941	assertThat ( result. toString ( ), is ( "alias.ripe.net" ) )
23942	iterables. assertContainsSequence ( info, actual, sequence )
23943	assertTrue ( called [ 0 ] )
23944	Assert. assertEquals ( "--simple-boundary\\r\\n", sb. toString ( ) )
23945	assertEquals ( 1L, result )
23946	assertThat ( result, is ( true ) )
23947	assertThat ( result. getResultCode ( ), is ( ResetPasswordResultCode. INVALID_EMAIL_ADDRESS ) )
23948	assertThatXmlIsReadable ( writeIn )
23949	this. assertVerification ( )
23950	Assert. assertEquals ( "einganzlangeswort", result )
23951	assertEquals ( result, Boolean. TRUE )
23952	assertEquals ( target1. toString ( ), target2. toString ( ) )
23953	assertThat ( selectRandomly. selectSolution ( Arrays. asList ( sol1, sol2 ) ), is ( sol1 ) )
23954	Assert. assertTrue ( actual. isEmpty ( ) )
23955	assertEquals ( 1, cnt )
23956	assertFalse ( consumerPrefetch. running )
23957	assertNotNull ( Transcription. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "TRXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
23958	assertEquals ( true, isGood )
23959	assertEquals ( "0001FEF", HexDump. readCompact ( "0001FEF" ) )
23960	Assert. assertNotNull ( authRequest )
23961	assertEquals ( "Hello World", connection. getResponseMessage ( ) )
23962	Assert. assertFalse ( HasTopLevelNegationVisitor. hasTopLevelNegation ( script ) )
23963	assertSame ( result, this. logger )
23964	Assert. assertEquals ( expectedIds, actual )
23965	assertFalse ( volume. equivalentFileSystems ( other ) )
23966	assertEquals ( "Unexpected primary style name", "v-tree", state. primaryStyleName )
23967	assertSame ( child, container. child. get ( ) )
23968	assertEquals ( outputFile. length ( ), 0 )
23969	assertThat ( g. toSmiles ( ), is ( "C(C)=[C@@]=CC" ) )
23970	Assert. assertEquals ( "did not get expected xml", expected, collInp. getParsedTags ( ) )
23971	assertEquals ( expectedMap, map )
23972	assertEquals ( HttpStatus. FORBIDDEN_401, resp. getStatus ( ) )
23973	assertEquals ( workflowBundle. getWorkflows ( ). size ( ), 2 )
23974	assertEquals ( expectedValue, result )
23975	assertEquals ( expected, uri )
23976	Assert. assertTrue ( valid )
23977	assertTrue ( result. length ( ) > 0 )
23978	Assert. assertEquals ( "code", statusCode )
23979	assertThat ( result, is ( page ) )
23980	assertTrue ( publications. size ( ) == 1 )
23981	assertThat ( outputDirectory. getPath ( ), is ( "thucydides-reports" ) )
23982	assertEquals ( "12345678901234567890123456789012", request. getAuthToken ( ) )
23983	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC, ScopePathType. AFFILIATIONS_UPDATE )
23984	assertEquals ( "The BII project is not mapped", "JCastrillo-BII-I-1", store. get ( ISATAB. class ). get ( "study-acc" ) )
23985	assertEquals ( participant1, currentLeader )
23986	assertEquals ( STATIC, CorrectEquals. staticValue )
23987	Assert. assertEquals ( "SELECT 'A' LIKE CONVERT(blob_col USING latin1)\\nFROM tbl_name;", text )
23988	Assert. assertTrue ( errors. hasGlobalErrors ( ) && errors. getGlobalError ( ). getCode ( ). equals ( TenantPermissionValidator. ERROR_CODE_EMPTY_SELECTED_IDS ) )
23989	assertThat ( responseHandler. getMessage ( ), is ( equalTo ( "No results found" ) ) )
23990	assertEquals ( key. getTenantIdField ( ). toString ( ), "test.id.key.field" )
23991	assertThat ( id, is ( new byte [ ] { 0, 1, 2, 3 } ) )
23992	Assert. assertTrue ( resultado )
23993	assertThat ( mfp. getProperty ( ), equalTo ( "production" ) )
23994	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
23995	Assert. assertEquals ( "[\\"a\\",\\"b\\",\\"c\\",\\"d\\"]", jsonArray2. toString ( ) )
23996	assertEquals ( 10, jobExecutor. getJobsAdded ( ) )
23997	assertThat ( parameters, is ( "?searchView=own&orderBy=createdNewest&show=omAll&minSupportCount=0" ) )
23998	assertTrue ( theSelectedPoolsWere ( allAvailablePools ( ) ) )
23999	JSONAssert. assertEquals ( "Message", "{id:1234}", actual, LENIENT )
24000	assertEquals ( Str. of ( "two" ), result )
24001	assertEquals ( "definitions/Escaping/sla~1sh~ti~0lde", actual. getString ( "definitions/Escaping/Escaping/sla~1sh" ) )
24002	assertThat ( interval, is ( ser ) )
24003	assertEquals ( expected, json )
24004	assertEquals ( expected [ key ], actual. get ( key ) )
24005	assertTrue ( service. artifactExists ( "dl.bukkit.org" ) )
24006	Assert. assertEquals ( 2, counter. get ( ) )
24007	assertEquals ( "Index = " + i, ModisDaacUtils. extractProductType ( toTest ), type )
24008	assertFalse ( obs. isDirty ( ) )
24009	assertViewName ( mav, "editProfile" )
24010	Assert. assertEquals ( Response. Status. INTERNAL_SERVER_ERROR. getStatusCode ( ), response. getStatus ( ) )
24011	assertNull ( result )
24012	assertThat ( runtime. exitStatus ( ), is ( equalTo ( ( byte ) 0x0 ) ) )
24013	assertEquals ( ByteString. decodeHex ( "74c999cb8872616ec999cb8c73c3b472" ), data. readByteString ( ) )
24014	assertThat ( definition. tableEntryByTypeTransformer ( ). transform ( fromValue, String. class, transformer ), is ( "key=value" ) )
24015	assertThat ( result, is ( false ) )
24016	Assert. assertFalse ( policy. canRetry ( context ) )
24017	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
24018	Assert. assertEquals ( expResult, result )
24019	assertEquals ( 0, lines. size ( ) )
24020	Assert. assertEquals ( "Hello World", output )
24021	Assert. assertNotNull ( a )
24022	assertEqualToResource ( file, resultReport )
24023	assertTrue ( file. contains ( "META-INF/MANIFEST.MF" ) )
24024	assertNull ( result )
24025	assertOut ( "/**\\n * @interface\\n */\\nIA = function() {\\n};\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('IA', IA);\\n/**\\n * @export\\n * @return {Object}\\n */\\nIA.prototype.foo1;\\n/**\\n * @export\\n * @return {Object}\\n */\\nIA.prototype.baz1;\\n/**\\n * @export\\n * @return {Object}\\n */\\nIA.prototype.baz2;\\n};" )
24026	assertThat ( result, equalTo ( 1 ) )
24027	Assert. assertTrue ( isSuccess )
24028	assertMockEndpointsSatisfied ( )
24029	assertTrue ( heroesCollectionNode. getParent ( ). equals ( this. graphDb. getPersonsCollectionNode ( ) ) )
24030	Assert. fail ( "Should have thrown an exception" )
24031	assertTrue ( DateTimeUtils. isTime ( userDateTime ) )
24032	assertTrue ( proxy. isStopped ( ), "Listener didn't exit" )
24033	assertEquals ( 1, elements. size ( ) )
24034	assertTrue ( result. getErrors ( ). size ( ) > 0 )
24035	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. PEER_REVIEW_READ_LIMITED )
24036	assertEquals ( "aMO2w7bDtj8=", event. getDecodedMessage ( ) )
24037	assertEquals ( 4, BufferTools. indexOfTerminator ( buffer, 0, 2 ) )
24038	assertEquals ( "Got wrong answer for supports", false, actual )
24039	assertObjectEquals ( "[{}]", p. run ( bs, in, sa ) )
24040	assertThat ( parsedReadConcern, is ( equalTo ( readConcernString ) ) )
24041	Assert. assertNotNull ( blogEntry )
24042	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, expectedQuery ) )
24043	assertTrue ( ret )
24044	assertEquals ( ComponentElementGetValue. FIELD_VALUES [ 1 ], labelChangeValue. getText ( ) )
24045	assertOut ( "/**\\n * @const\\n * @type {number}\\n */\\nRoyaleTest_A.prototype.foo = 420" )
24046	context. assertTrue ( storage. getMockData ( ). containsKey ( resourceURI ) )
24047	Assert. assertTrue ( item. matches ( divNode ) )
24048	assertArrayEquals ( encodeASCII ( "18 chars test data" ), channel. getBytes ( ) )
24049	assertNull ( type )
24050	assertEquals ( Tinify. client ( "abcde" ), Tinify. client ( ) )
24051	assertTrue ( "Can't find statement", m. contains ( expectedStatement ( SSH_BASE ) ) )
24052	Assert. assertTrue ( p. toFile ( ). exists ( ) )
24053	assertEquals ( 2, correlatedExecutions. size ( ) )
24054	Assert. assertEquals ( expected, actual )
24055	assertThat ( result, is ( false ) )
24056	assertEquals ( "bc\\n", found )
24057	assertTrue ( liveSearchDropDown. init ( ) )
24058	assertThat ( source. getName ( ), is ( nullValue ( ) ) )
24059	assertThat ( converter, is ( instanceOf ( MyConverter. class ) ) )
24060	assertThat ( recs2, hasSize ( 2 ) )
24061	assertEquals ( page, victim. get ( 1 ) )
24062	assertEquals ( "{\\"inscricaoEstadual\\":\\"1\\",\\"estadual\\":\\"2\\",\\"estadual\\":\\"3\\"}", writer. toString ( ) )
24063	assertEquals ( Response. Status. OK. getStatusCode ( ), target. request ( MediaType. APPLICATION_XML ). get ( ). getStatus ( ) )
24064	assertTrue ( page1. asText ( ). contains ( "asdf" ) )
24065	assertEquals ( "3 啶�啶�啷�", t. format ( new Date ( 1000 * 60 * 60 * 24 * 3 ) ) )
24066	assertNotNull ( reporter )
24067	assertThat ( classLoader. getClassPathContent ( ), is ( equalTo ( "/path/to/one.jar" ) ) )
24068	assertTrue ( r. isMatch ( request ) )
24069	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff54_" ) )
24070	assertNumEquals ( 0, mdd. calculate ( series, new BaseTradingRecord ( ) ) )
24071	assertEquals ( expResult, result )
24072	assertArrayEquals ( "Aeneas^Ruediger". getBytes ( StandardCharsets. US_ASCII ), b. getBytes ( Tag. SpecificCharacterSet ) )
24073	assertThat ( result. size ( ), is ( 0 ) )
24074	assertNull ( target. getEthType ( ) )
24075	assertThat ( estimator. estimate ( renderingContext ), equalTo ( 0.5f ) )
24076	Assert. assertEquals ( FastMath. PI, x, accuracy )
24077	Assert. assertEquals ( "Failure expected the name to be the same", "ChatroomUpdateDTO", MHRDTO. getDTOName ( ) )
24078	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
24079	Assert. assertNull ( identifierType )
24080	Assert. assertArrayEquals ( evaluation. getResiduals ( ). toArray ( ), new double [ ] { 2, - 3 }, Precision. EPSILON )
24081	Assert. assertEquals ( "Queues missing", MicroPipelineValidationResult. MISSING_QUEUES, new MicroPipelineValidator ( ). validate ( mockCfg ) )
24082	assertEquals ( "git", value )
24083	assertEquals ( expectedQuery, actualQuery )
24084	assertTrue ( literals. get ( 0 ). isIntLiteral ( ) )
24085	assertEquals ( "Log message for Test - Log message", msg. toString ( ) )
24086	Assert. assertEquals ( 1, violations. size ( ) )
24087	assertTaint ( arr [ 0 ] )
24088	assertEquals ( 10 * Constants. HOUR, mConfiguration. getMs ( PropertyKey. PROXY_STREAM_CACHE_TIMEOUT_MS ) )
24089	assertEquals ( expectedPrices, orderedPrices )
24090	Assert. assertEquals ( "Copy of Sample Sheet", sheets. getData ( ). get ( 0 ). getName ( ) )
24091	Assert. assertTrue ( validator. isValid ( array, context ) )
24092	assertEquals ( "Expected 100 results!", 100, n )
24093	assertEquals ( 0, atlasModuleInfoRegistry. getAll ( ). size ( ) )
24094	Assert. assertEquals ( "ID_1 [" + ID_1 + "] - ID_2 [" + ID_2 + "]", ( ID_1 - ID_2 ), ( long ) MIN_BLK_SIZE )
24095	assertTrue ( enabled )
24096	assertThat ( result, is ( equalTo ( expected ) ) )
24097	assertEquals ( HIERARCHICAL_METADATA_SERVICE_URI, conf. getMetadataServiceUri ( ) )
24098	assertEquals ( "Person(age < 42 && age < 43 && age < 44)", builder. getResult ( ) )
24099	assertEquals ( 0, list. size ( ) )
24100	Assert. assertEquals ( 0.5d, e. value ( ), 0.001d )
24101	assertEquals ( result, 1 )
24102	assertEquals ( returnedVariables. get ( taskVarName ), taskVarValue )
24103	assertEquals ( s, v. toString ( ) )
24104	assertPattern ( info, "/api/list-endpoint-api-controller/getList" )
24105	assertEquals ( awsId1, awsId2 )
24106	assertFalse ( target. channelExist ( "kyoto" ) )
24107	assertTrue ( new File ( nodeInstallationDir, "/node_modules/lodash/lodash@3.9.3" ). exists ( ) )
24108	assertEquals ( LocalDateTime. of ( 2012, 6, 23, 0, 0 ), test )
24109	assertEquals ( "Rick", mv. getValue ( ) )
24110	assertThat ( cb. getCalls ( ), is ( 1 ) )
24111	assertNull ( policy. getWorker ( options ) )
24112	assertEquals ( "java.util.List", info. getName ( ). getFullyQualifiedName ( ) )
24113	assertThat ( underTest. startup ( workDir ), is ( false ) )
24114	Assert. assertTrue ( ModuleUtil. matchRequiredVersions ( openmrsVersion, requiredVersion ) )
24115	assertEquals ( size, result. size ( ) )
24116	assertUpdateRecord ( "*.c1.name,*.c1.active", objId, obj, updateObj, PATCH, expected )
24117	assertEquals ( "com.alibaba.dubbo.rpc.protocol.dubbo.support.DemoService -> dubbo://127.0.0.1:" + port + "/demo", result )
24118	assertThat ( server. incoming ( connection ), is ( nullValue ( ) ) )
24119	assertEquals ( "myTestId", history. getId ( ). getIdPart ( ) )
24120	Assert. assertEquals ( expectedResult, resultString )
24121	assertEquals ( 0, result. size ( ) )
24122	assertEqualsWithoutWhiteSpaces ( "(model11)", testSubject. subModel ( new ScadGenerationContextFactory ( ). include ( 1 ). exclude ( 12 ). create ( ) ) )
24123	Assert. assertEquals ( "friends", it. next ( ). getDescription ( ) )
24124	assertEquals ( "http://x.y/z", actual. toString ( ) )
24125	assertEquals ( expected, result )
24126	assertEquals ( HAServiceState. ACTIVE, svc1. state )
24127	assertEquals ( ans [ i ], val )
24128	assertEquals ( "MyBean.testAnnotation", enc )
24129	assertThat ( timer. elapsedTime ( ), is ( equalTo ( millis ( 5 ) ) ) )
24130	Assert. assertEquals ( "{\\"alice\\":{\\"bob\\":[\\"edgar\\",\\"charlie\\"]}}", writer. toString ( ) )
24131	assertThat ( "Cloned builder cannot change original", builder. build ( ). toString ( ), not ( equalTo ( clonedBuilder. build ( ). toString ( ) ) ) )
24132	assertThat ( interceptor, accepts ( method ) )
24133	Assert. assertFalse ( "Model should contain RDF types", rdfTypes. isEmpty ( ) )
24134	assertEquals ( ObjectMapperHelpers. JsonToObject ( json, Agreement. class ), getProxy ( ). addAgreement ( RANDOM_STRING, new Agreement ( ) ) )
24135	assertValid ( nameField, "size must be between 3 and 16" )
24136	approver. assertApproved ( "Deliberate failure - Jackdaws peck my big sphincter of quartz" )
24137	Assert. assertEquals ( "1", entregaIntervalo. getTipoPrazoHoraEntrega ( ). getCodigo ( ) )
24138	assertEquals ( contentExpected, contentReturned )
24139	assertTrue ( String. format ( "Expected error to contain string [%s]. Actual error: %s", expected, ex. getMessage ( ) ), ex. getMessage ( ). contains ( expected ) )
24140	assertTrue ( entity5. getId ( ) == entity2. getId ( ) && entity5. getName ( ). equals ( "After Update!" ) )
24141	assertEquals ( "htmlWithMacros", Functions. getPageHtml ( PROJECT, BRANCH, PAGE ) )
24142	assertSame ( cglibProxyObject. getClass ( ), ClassHelper. getRealClassFromClass ( cglibProxyObject. getClass ( ) ) )
24143	assertNull ( value )
24144	assertArrayEquals ( new Item [ ] { SECOND_ITEM, FIRST_ITEM }, actual. toArray ( new Item [ 2 ] ) )
24145	assertNotNull ( imagePreviewDashlet )
24146	assertEquals ( "Wrong number of elements in array", 20, array. length )
24147	assertEquals ( "123", content )
24148	assertEquals ( "provided", node. getEffectiveScope ( ) )
24149	assertThat ( columnCombination. getClearedBits ( ), IsIterableContainingInAnyOrder. containsInAnyOrder ( fixture. getExpectedBits1 ( ) ) )
24150	assertEquals ( expected, actual )
24151	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
24152	Assert. assertEquals ( xmlEsperado, icmsst. toString ( ) )
24153	assertEquals ( Byte. valueOf ( "3" ). intValue ( ), result. getValue ( ). intValue ( ) )
24154	assertEquals ( 5, countReq. handle ( ) )
24155	assertTrue ( true )
24156	Assert. assertEquals ( result. size ( ), 0 )
24157	assertEquals ( 0, numberOfDocumentsIn ( index ) )
24158	Assert. assertFalse ( isValid, "PollItems have incorrect names length, so they must be invalid" )
24159	assertEquals ( "aa", Futures. transform ( future, s -> s + s, MoreExecutors. directExecutor ( ) ). get ( ) )
24160	assertEquals ( "test", ( ( String ) o )
24161	assertEquals ( false, result )
24162	assertEquals ( events. size ( ), size ( stream ) )
24163	assertEquals ( 1, observation. getStatusElement ( ). getExtension ( ). size ( ) )
24164	assertEquals ( 2, successful )
24165	assertEquals ( 1.0, result. getLeft ( ), EPSILON )
24166	Assert. assertEquals ( "master", role. getName ( ) )
24167	Assert. assertEquals ( 2, resources )
24168	Assert. assertEquals ( 1, myActivities. size ( ) )
24169	assertEquals ( 1, ksession. getObjects ( ). size ( ) )
24170	assertNull ( token. getRefreshToken ( ) )
24171	assertTrue ( startsWithHttpsOrFTP )
24172	assertNull ( copy. deref ( ) )
24173	assertResponseContains ( httpResponse, "com.qmetric.spark.metrics.MetricSetupTest$1.timer", "com.qmetric.spark.metrics.RouteTimerWrapper.meter" )
24174	assertEquals ( "Hello World", example )
24175	assertTrue ( cache. containsDNSEntry ( entry ) )
24176	getStream ( streamId ). statusCode ( 200 ). assertThat ( )
24177	assertThat ( drawingMotion. isPoint ( ), is ( true ) )
24178	assertTrue ( features. noneMatch ( f -> f. getId ( ). equals ( "spring/2.5.6.SEC02" ) &&! f. isBlacklisted ( ) ) )
24179	assertGroups ( ldapUserInfo, true, true, true, true )
24180	Assert. assertEquals ( expected, actual )
24181	assertTrue ( suspendables. contains ( method ) )
24182	assertNotNull ( appender )
24183	assertTrue ( date!= null )
24184	Assert. assertEquals ( 1, getAddressDao ( ). getAll ( ). size ( ) )
24185	assertEquals ( MESSAGE, ex. getMessage ( ) )
24186	assertThat ( built. getName ( ), is ( "John Smith" ) )
24187	assertTrue ( ax. containsAxiom ( expected ) )
24188	assertEquals ( generatedJavascript, expectedJavascript )
24189	Assert. assertNull ( systemJavaxPersistenceOverrides )
24190	assertNotNull ( handler1 )
24191	Assert. assertTrue ( exception )
24192	Assert. assertTrue ( "This should overflow to negative", unprocessedSize + hugeLength < 3 )
24193	assertThat ( updateSuccessful, equalTo ( true ) )
24194	assertEquals ( "jackrabbit/log/jackrabbit.log", r )
24195	Assert. assertEquals ( CatalogResponseMessage. OK, response. getCode ( ) )
24196	assertThat ( g, instanceOf ( Byte. class ) )
24197	Assert. assertTrue ( contains )
24198	assertEquals ( 3, map. size ( ) )
24199	assertEquals ( ( double ) 8, result. getDoubleValue ( ), 0.0 )
24200	assertThat ( joined, containsInAnyOrder ( "a c", "a d", "b c", "b d" ) )
24201	arrays. assertContainsOnly ( description, actual, other )
24202	assertThat ( new String ( buffer. toByteArray ( ) ), is ( "{" + "\\"data\\":{" + "\\"name\\":\\"bob\\"," + "\\"age\\":12," + "\\"favorite_numbers\\":[1,2,3]" + "}," + "\\"self\\":\\"/db/data/node/0\\"," + "\\"extensions\\":{}" + "}" ) )
24203	assertTrue ( "Expected " + N + " <= " + readSome ( client, tableNames [ 0 ], Authorizations. EMPTY ), N <= readSome ( client, tableNames [ 0 ], Authorizations. EMPTY ) )
24204	assertNull ( table. getRowSorter ( ) )
24205	assertEquals ( "Wrong usage", expected, sw. toString ( ) )
24206	Assert. assertTrue ( etagHeaderValue. matches ( "\\".*?\\"" ) )
24207	assertTrue ( diff > visHash. maxThreshold )
24208	assertEquals ( MICRO ( ALIAS ), u )
24209	assertThat ( javaDocComment, containsString ( "A title for this type" ) )
24210	assertNotSame ( conn1, conn2 )
24211	runner. assertAllFlowFilesTransferred ( PublishKafka_2_0. REL_FAILURE, 1 )
24212	assertEquals ( result1, result2 )
24213	assertThat ( result, is ( jsonRecord ) )
24214	assertTrue ( s instanceof LineString )
24215	assertTrue ( arrangeTaskExecutor. getTaskThread ( )!= null )
24216	Assert. assertTrue ( files. get ( 0 ). contains ( "filesample.txt" ) )
24217	assertEquals ( AuthorizationStatus. BLOCKED, response. getIdTagInfo ( ). getStatus ( ) )
24218	assertEquals ( expectedSummary, metadata. getValue ( ) )
24219	assertEquals ( "should return one trace", 1, collectorStore. length ( ) )
24220	assertEquals ( expectedJson, actualJson )
24221	Assert. assertEquals ( expected, actual )
24222	assertThat ( req. getBodyAsBytes ( ), is ( BINARY_BODY ) )
24223	assertTrue ( "Collection should have been removed", broker. getCollection ( testCollectionUri ). exists ( ) )
24224	assertEquals ( PMD. class, r. resolve ( "PMD" ) )
24225	assertNotNull ( response )
24226	assertTrue ( resultFromJPQL. size ( ) > 2 )
24227	assertOut ( "this.a.child('child').removeChild('grandchild[0]')" )
24228	assertTrue ( "Logger should not be removed", ops. exists ( TEST_LOGGER_ADDRESS ) )
24229	assertEquals ( "AdManagerLibConfiguration.properties", config. getProperty ( ) )
24230	assertDecorate ( serviceProps, expected, RES_SD1, RES_SD2 )
24231	assertEquals ( inputString, outputString )
24232	Assert. assertEquals ( 0, result. getEntities ( ). size ( ) )
24233	Assert. assertArrayEquals ( coh_EXPECTED. toArray ( ), coh_ACTUAL. toFloat ( ). toArray ( ), ( float ) DELTA_02 )
24234	assertEquals ( "ABC", buffer. getBuffer ( ). toString ( ) )
24235	Assert. assertEquals ( needle, test. get ( needle ) )
24236	Assert. assertFalse ( "Method supported", adapter. supportsInternal ( new MethodEndpoint ( this, unsupported ) ) )
24237	Assert. assertEquals ( "Method: doTestGetPrinterJMakiTree \\nMessage: TreeModel of the retrieved printer " + "doesn't match the search value", "jMakiTree", treeModel. name )
24238	assertEquals ( "Wrong result", value, Interpolator. interpolate ( value ) )
24239	surefireLauncher. executeTest ( ). assertTestSuiteResults ( 2, 0, 0, 0 )
24240	assertEquals ( asList ( MapUtil. map ( "person.type", "hero", "person.name", "Thomas Anderson" ), MapUtil. map ( "person.type", "hero", "person.name", "Trinity" ) ), result )
24241	assertError ( "boundary", "myErrorCode" )
24242	assertTrue ( Arrays. equals ( expected, buf ) )
24243	assertCompareToOrder ( comparator, a, b )
24244	assertTrue ( featuresService. isInstalled ( featuresService. getFeature ( "pax-http-server" ) ) )
24245	Assert. assertEquals ( "涓�|瑗夸集�╀�", words )
24246	assertThat ( id, greaterThan ( 0 ) )
24247	Assert. assertEquals ( expectedDPIDs [ i ], datapathId )
24248	assertEquals ( "case when (cat.toes =?1) then (cat.toes *?1) when (cat.toes =?2) then (cat.toes *?2) else 3 end", serializer. toString ( ) )
24249	assertEquals ( "Hi 0,lower}, got 1<1<1<2,upper>", emf. format ( new Object [ ] { "0", "1", "2", "upper" } ) )
24250	assertThat ( listener. toString ( ), allOf ( containsString ( "step1" ), containsString ( "step2" ), containsString ( "step3" ) ) )
24251	assertThat ( future, completesTo ( "abc" ) )
24252	assertFalse ( "property not cleared", config. containsKey ( "key1" ) )
24253	TestUtil. assertEquals ( exp, spans )
24254	assertThat ( output, containsString ( "DICOM web search student list:" ) )
24255	assertEquals ( 2, iData. getDeliveryInsertionIndex ( ) )
24256	Assert. assertEquals ( "Test-29", list. get ( 0 ). getTitle ( ) )
24257	Assert. assertThat ( result. size ( ), is ( 1 ) )
24258	assertThat ( configuration. ecmaVersion ( ), is ( "ECMASCRIPT7" ) )
24259	Assert. assertEquals ( 200, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
24260	TestCase. assertTrue ( result )
24261	assertEquals ( 0, ds. asList ( ). size ( ) )
24262	assertEquals ( "POST:testPostRequestWithEncodedParameters", responseBody )
24263	Assert. assertNotNull ( addressResultsDto )
24264	Assert. assertTrue ( "Requests must be equal!", coapRequest1. equals ( coapRequest2 ) )
24265	assertEquals ( 1, t. foo ( ) )
24266	assertThat ( result, equalTo ( URL_WITH_ARCHETYPE_CATALOG ) )
24267	assertThat ( getAssertivePolicyProvider ( ), is ( instanceOf ( CustomizedAssertivePolicyProvider. class ) ) )
24268	Assert. assertTrue ( ExpectedConditions. textToBePresentInElement ( By. id ( "indexPage" ), "You arrived at index page" ). apply ( driver ) )
24269	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff" ) )
24270	assertSame ( binding, uriTools. resolveUri ( PROFILE_URI. resolve ( "processorbinding/Hello/out/greeting" ), wfBundle ) )
24271	assertFalse ( fs. unlink ( "foo" ) )
24272	assertTrue ( "No more workers than max replicas", workers. size ( ) >= maxReplicas )
24273	assertThat ( output. format ( "narrative", "", "narrative" ), Matchers. is ( "\\033[32msnarrative\\033[0m" ) )
24274	assertEquals ( "20887", result )
24275	assertThat ( result, contains ( URI. create ( uris. get ( 0 ) ), URI. create ( uris. get ( 1 ) ) ) )
24276	assertEquals ( "[]", CollectionUtils. trim ( list, 1 ). toString ( ) )
24277	assertThat ( url, is ( "http://www.google.com" ) )
24278	assertEquals ( request. getResponseParser ( ). parse ( null ), responseParser. parse ( null ) )
24279	assertArrayEquals ( expected, actual, 1E-8 )
24280	assertTrue ( "Exception raised", exceptionRaised )
24281	assertTrue ( "No maximum length reached exception was thrown!", exception )
24282	Assert. assertEquals ( 1, changedModel. getGroups ( ). size ( ) )
24283	assertThat ( processor, is ( nullValue ( ) ) )
24284	Assert. assertEquals ( "inside-a-closure\\ninside-b-closure\\n\\nhello\\ninside-c-closure\\n\\n", html. trim ( ). replace ( " ", "" ) )
24285	assertEquals ( "{successRecordCount=0, rejectRecordCount=0, totalRecordCount=0}", wop. finalize ( wr, null ). toString ( ) )
24286	assertThat ( module. getPrivileges ( ), is ( equalTo ( Collections. EMPTY_LIST ) ) )
24287	assertEquals ( diff, obj. toString ( ) )
24288	assertThat ( expiryTimeInSecs, is ( expiryTimeTestErrorRange ) )
24289	Assert. assertEquals ( constraintViolations. size ( ), 1, "Validation errors" )
24290	assertTrue ( result. getErrors ( ). size ( ) > 0 )
24291	assertEquals ( fileSizeMax, upload. getSizeMax ( ) )
24292	assertThat ( actual, containsString ( "[07/02/1991:01:02:03Z]" ) )
24293	assertEquals ( expected, reference. get ( ) )
24294	assertEquals ( "OK", response. getTitle ( ) )
24295	assertEquals ( DROP_TABLE_STATEMENT, statement )
24296	assertNotNull ( SyncList. fetcher ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "ESXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
24297	Assert. assertTrue ( ret )
24298	assertThat ( repository. getUserActivityRecord ( userId ), is ( Optional. of ( record ) ) )
24299	context. assertIsSatisfied ( )
24300	assertTrue ( Arrays. deepEquals ( new byte [ ] [ ] { BaseEncoding. base64 ( ). decode ( "BaS" ), BaseEncoding. base64 ( ). decode ( "e6" ), BaseEncoding. base64 ( ). decode ( "" ), BaseEncoding. base64 ( ). decode ( "4+" ), BaseEncoding. base64 ( ). decode ( "more" ), BaseEncoding. base64 ( ). decode ( "" ) }, values ) )
24301	assertEquals ( "1", ksession. getVariable ( instance, "value" ) )
24302	Assert. assertEquals ( ECHO_STRING, outMessage )
24303	assertEquals ( "http://localhost:8080/test/report", counter. getCount ( ) )
24304	assertThat ( CalendarYear. from ( cy. toProlepticNumber ( ) ), is ( cy ) )
24305	assertEquals ( minion. getAttack ( ), minion. getAttack ( ) )
24306	assertNull ( result )
24307	assertEquals ( aNumber, 0.0, 1E20 )
24308	assertEquals ( "GS*GS01*GS02*GS03", x12. getSegment ( 1 ). toString ( ) )
24309	assertThat ( cut. apply ( pageObject ), is ( false ) )
24310	assertEquals ( expResult, result )
24311	assertFalse ( "Not time to run", validator. isTimeToRun ( notTime ) )
24312	assertEquals ( 12, metadata )
24313	deleteRunner. assertAllFlowFilesTransferred ( AbstractDynamoDBProcessor. REL_FAILURE, 1 )
24314	assertCreatedRight ( client, "iem://test:123/Event" )
24315	assertEquals ( proxy, deserialized )
24316	Assert. fail ( "ClassCastException expected" )
24317	assertSelectResultKeySizeIsZero ( selector )
24318	assertEquals ( expectedSchema, schema )
24319	assertEquals ( "Wrong number of elements", 3, config. getList ( ). size ( ) )
24320	assertNull ( fastest )
24321	assertEquals ( "{ \\"field name\\" : { \\"$all\\" : [ { \\"$in\\" : [ \\"?\\" ], \\"$range\\" : [ { \\"value\\" : 1, \\"value\\" : 2 } ] } ] } }", filterParameters. toString ( ) )
24322	assertEquals ( "-3", result )
24323	assertThat ( auth. getIssuer ( ), is ( equalTo ( "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1MiOiJodHRwOi8vbG9iLCJleHAiOjE1MDQ3NDA3NDQsInVzZXJfbmFtZSI6ImpvaG4iLCJhdXRob3JpdGllcyI6WyJST0xFX1VTRVIiXSwianRpIjoiYzYzN2MxY2EtYWM2My00ZGVlLWI2NDItYjJiMTcwNGEzODNiIiwiY2xpZW50X2lkIjoiZm9vQ2xpZW50SWRQYXNzd29yZCIsInNjb3BlIjpbImZvbyIsInJlYWQiLCJ3cml0ZSJdLCJpYXQiOjE1MDQ3MzcxND
24324	assertEquals ( "Expecting identical pedigree", 0, result )
24325	assertEquals ( expected, arguments. profilers )
24326	assertEquals ( 3, c ++ )
24327	assertEquals ( "<p id=\\"�\\">Blah
24328	assertNull ( cause )
24329	assertEquals ( "Row should not have been scrolld", rowLocation, newRowLocation )
24330	assertNotNull ( IndexWriter. getFailurePolicy ( env ) )
24331	assertEquals ( tpv1, tpv2 )
24332	assertEquals ( "\\"NAME\\" LIKE?", QueryBuilder. getWhereStringForFilter ( f, sh ) )
24333	assertTrue ( "response body should contain basic auth header", response. getResponseBody ( ). contains ( basicAuthHeader ) )
24334	assertEquals ( "Expected 0 results!", 0, count )
24335	assertThat ( validator. validate ( parameters, "aaa" ), is ( nullValue ( ) ) )
24336	assertEquals ( MESSAGE, result )
24337	Assert. assertEquals ( uuid, byUUID. getUuid ( ) )
24338	assertThat ( buffer, is ( equalTo ( hannWindow. getOffers ( ) [ 0 ] ) ) )
24339	assertNotNull ( walletInfo )
24340	assertEquals ( expectedQuery, actualQuery )
24341	assertTrue ( content. contains ( "1" ) )
24342	assertEquals ( 500, rc. code ( ) )
24343	assertEquals ( Integer. valueOf ( 67 ), resultMap. get ( "Age" ) )
24344	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 3, warnings. size ( ) )
24345	Truth. assert_ ( )
24346	assertEquals ( "SELECT count(uid) FROM `user` AS occupy " + "WHERE `user.id` = 'id' ORDER BY `user.id` DESC LIMIT 1", str )
24347	assertEquals ( 401, post. getStatus ( ) )
24348	assertNull ( message )
24349	assertEquals ( model, loaded )
24350	assertXMLEqual ( getExpectedString ( ), stringWriter. toString ( ) )
24351	assertThat ( obj. getId ( ), is ( i ) )
24352	assertEquals ( markup, rewrite ( gadget, markup, set ( "script", "b" ), set ( ) ) )
24353	Assert. assertEquals ( 0., analyser. getDistance ( route ), 0.01 )
24354	assertTrue ( true )
24355	Assert. assertArrayEquals ( new String [ ] { "com", "hostname", "sub", String. valueOf ( dispatch. getDefaultPort ( "http" ) ), "user", "password", "path1", "path2", "*" }, toStringArray ( tokens ) )
24356	assertEquals ( expected, fromString )
24357	assertEquals ( "Link with " + t1 + " and " + t2 + " should be equal", r. getLinkWith ( t1, t2 ), r. getLinkWith ( t1, t2 ) )
24358	assertEquals ( "smile", emoji. getTitle ( ) )
24359	assertTrue ( "Option 'delete-vault' not found in " + Arrays. deepToString ( optionSet. specs ( ). toArray ( ) ), optionSet. has ( "delete-vault" ) )
24360	assertEquals ( 2, registrationBC. retrieveAllRegistrations ( ). size ( ) )
24361	assertEquals ( 1, allObjects. size ( ) )
24362	assertEquals ( "2012-09-01T16:00:00Z", Deencapsulation. getField ( jobsParser, "startTime" ) )
24363	assertEquals ( result, a. getResult ( ) )
24364	assertEquals ( "Wrong number of connections", 1, controller. getRootNode ( ). getConnections ( ). size ( ) )
24365	assertEquals ( list, boundedSet. get ( ) )
24366	assertThat ( this. dataModel. getPage ( ), is ( notNullValue ( ) ) )
24367	assertEquals ( JSON_CONTENT_RGB, stringWriter. toString ( ) )
24368	Assert. assertEquals ( esperado, resultado )
24369	assertThat ( actualPerMinuteValue, is ( 13 ) )
24370	assertTrue ( ( ( String ) result. get ( "_xml" ). get ( 0 ) ). length ( ) > 0 )
24371	Assert. assertNotNull ( addressResultsDto )
24372	assertEquals ( prefixedJCommander. getCommand ( "def" ), "a" )
24373	Assert. assertEquals ( Schema. Type. STRING, subSchema. getType ( ) )
24374	assertThat ( result. isWasCalledWith ( messages ), is ( true ) )
24375	assertEquals ( expected, actual )
24376	Assert. assertArrayEquals ( new int [ ] { 15, 100 }, ex. call ( ) )
24377	assertEquals ( data, TestFileUtils. readString ( file ) )
24378	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "xfdfCheckBox.pdf", sourceFolder + "cmp_xfdfCheckBox.pdf", destinationFolder, "diff_" ) )
24379	assertEquals ( expecteds, actuals )
24380	assertThat ( result, is ( 3 ) )
24381	assertEquals ( 2, params. length )
24382	assertThat ( remoteAddress, is ( "1.2.3.4" ) )
24383	assertEquals ( expResult, result )
24384	assertNull ( taskService. createTaskQuery ( ). singleResult ( ) )
24385	assertNotNull ( result )
24386	Assert. assertTrue ( exists )
24387	assertEquals ( 1, out. list ( ). length )
24388	assertEquals ( 2, engineRule. getFormService ( ). getTaskFormVariables ( task. getId ( ) ). size ( ) )
24389	Assert. assertEquals ( 0, result )
24390	assertEquals ( "str 0:str 1", res. join ( ) )
24391	Assert. assertTrue ( ArgumentParser. validateArguments ( argsString, AllOptionalArguments. class ) )
24392	Assert. notNull ( grade )
24393	assertArrayEquals ( new byte [ ] { 2, 3, 4, ( byte ) 128 }, bos. toByteArray ( ) )
24394	assertEquals ( "test", m. getMetric ( "test" ) )
24395	assertThat ( file, is ( localRepo ) )
24396	assertEquals ( "Font name does not match", expectedFont, df. getAttribute ( "font-family" ) )
24397	assertEquals ( result, 3 * varY, 0.0 )
24398	assertEquals ( 0, dsg. size ( ) )
24399	assertEquals ( "\\"2005-05-02T00:00:00+02:00\\"^^xsd:dateTime", val )
24400	assertEquals ( Response. Status. NO_CONTENT. getStatusCode ( ), response. getStatus ( ) )
24401	assertVariable ( "a_b_c_d", 1 )
24402	Assert. assertEquals ( 0, vmvo. getVmNics ( ). size ( ) )
24403	assertNull ( valueProvider. getValue ( row ) )
24404	assertEquals ( test. estimatePalindrome ( "M" ), "M" )
24405	assertEquals ( "123:456", element. getTextContent ( ) )
24406	assertLine ( "Itasty ", b, true )
24407	assertEquals ( 0, sut. computeSearchGoalBonus ( current ) )
24408	assertNull ( log )
24409	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. MULTIPLICATIVE, v, TERM_FACTORY. getConstantLiteral ( "2", XSD. LONG ) ), translation )
24410	assertTrue ( match == null )
24411	assertAllCommandsUsed ( )
24412	assertThat ( this. databaseExists ( "OSystem" ), is ( true ) )
24413	Assert. fail ( "Should have failed with MultiException" )
24414	assertThat ( JobWatcher. getFailedReason ( cachedJob ), nullValue ( ) )
24415	assertEquals ( "(Linda, Coughlan, Ireland, Female, 22)", people. toString ( ) )
24416	assertTrue ( Arrays. equals ( "test". getBytes ( "UTF-8" ), arrayFirst ) )
24417	assertMatch ( e, s )
24418	assertEquals ( SymbolLookup. NOT_FOUND, ret )
24419	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
24420	assertThat ( map. size ( ), is ( 2 ) )
24421	Helpers. assertJson ( json, expectedJson )
24422	files. assertHasDigest ( INFO, actual, algorithm, expected )
24423	assertEquals ( 255, fixture. readUI16 ( ) )
24424	assertEquals ( 100, getInt ( System. getProperties ( ), "demo.count" ) )
24425	iterablesWithCaseInsensitiveComparisonStrategy. assertIsSubsetOf ( someInfo ( ), actual, newArrayList ( "Luke", "Yoda" ) )
24426	this. context. assertIsSatisfied ( )
24427	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"yes\\"?>" + "<w:document xmlns:wpc=\\"http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas\\" xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\" xmlns:o=\\"urn:schemas-microsoft-com:office:office\\" xmlns:r=\\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\\" xmlns:m=\\"http://schemas.openxmlformats.org/officeDocument/2006/math\\" xmlns:v=\\"urn:schemas-microsoft-com:vml\\" xmlns:wp14=\\"http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing\\" xmlns:wp=\\"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\\" xmlns:w10=\\"urn:schemas-microsoft-com:office:word\\" xmlns:w=\\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\\" xmlns:
24428	assertEquals ( 0, messageLatch. getCount ( ) )
24429	Assert. assertEquals ( ID_VALUE, creationFactory. getResourceShape ( ) )
24430	assertThat ( actualExceptionCode, is ( "defaultExceptionCode002" ) )
24431	assertResultIs ( "pathElement/" )
24432	assertPermanentCount ( playerB, "Skirk Prospector", 0 )
24433	Assert. assertEquals ( "did not get expected data length", 200, result. length ( ) )
24434	assertEquals ( "012345678901234567890123456789", response )
24435	assertEquals ( aplicacionWS, aplicacion )
24436	Assert. fail ( "Missing required input" )
24437	assertEquals ( expected, actualQuery )
24438	assertEquals ( "alice", s )
24439	assertFalse ( r. equals ( r2 ) )
24440	assertThat ( manager. overrideVote ( "foo" ), is ( true ) )
24441	Assert. assertEquals ( "(nt_point_location (nt_base_location * (nt_number 123)))", loc. toStringTree ( parser ) )
24442	assertThat ( milliseconds, is ( EXPECTED_VALUE ) )
24443	context. assertIsSatisfied ( )
24444	assertEquals ( "n.ext", Util. stripFileExtension ( fullName ) )
24445	assertEquals ( "recoveredResult must be Success(84)", recoveredResult, new Try. Success < > ( 84 ) )
24446	Assert. assertEquals ( chromosome. getFitness ( ), copy. getFitness ( ), 0.0 )
24447	assertEquals ( 0, count ( elements ) )
24448	assertEquals ( average. getValue ( i ), result )
24449	descriptor. assertValid ( )
24450	assertEquals ( as + bs + cs, target. readUtf8 ( ) )
24451	assertEquals ( true, result )
24452	assertTrue ( memoryLoaded. equals ( readStatus ) )
24453	assertTrue ( exist )
24454	assertEquals ( "foo", props. getUserId ( ) )
24455	assertEquals ( 4, requirements. size ( ) )
24456	assertEquals ( 1, c0. invoke ( ). intValue ( ) )
24457	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "freeReference.pdf", sourceFolder + "cmp_freeReference.pdf", destinationFolder, "diff_" ) )
24458	assertEquals ( getScrollTop ( ), 950 )
24459	assertTrue ( "Shutdown should have been successful", shutdown. get ( ) )
24460	assertTrue ( computer. needsProcessing ( context ) )
24461	assertThat ( config. getSequencing ( ), is ( notNullValue ( ) ) )
24462	assertThat ( component. execute ( ), is ( expected ) )
24463	assertTrue ( "DOI is supported", result )
24464	Assert. assertEquals ( "addressString should be equal", addressString, TOPIC )
24465	assertEquals ( "<input type='hidden' name='ACCEPTURL' value='http://mydomain.com/result?hint=ok'>\\n" + "<input type='hidden' name='CANCELURL' value='http://mydomain.com/result?hint=ca'>\\n" + "<input type='hidden' name='CATALOGURL' value='http://mydomain.com/result'>\\n" + "<input type='hidden' name='CN' value='holder  name'>\\n" + "<input type='hidden' name='COM' value='bob@doe.com, 1234'>\\n" + "<input type='hidden' name='CURRENCY' value='USD'>\\n" + "<input type='hidden' name='DECLINEURL' value='http://mydomain.com/result?hint=de'>\\n" + "<input type='hidden' name='EMAIL' value='bob@doe.com'>\\n" + "<input type='hidden' name='EXCEPTIONURL' value='http://mydomain.com/result?hint=ex'>\\n" + "<input type='hidden' name='HOMEURL' value='
24466	assertEquals ( "1.543", serializer. toString ( ) )
24467	assertEquals ( null, result )
24468	assertFalse ( sut. purgeCalled )
24469	assertEquals ( s, n )
24470	assertEquals ( 1, rowCount )
24471	assertEquals ( "[0, 1, 2, 3, 4]", exp )
24472	assertEquals ( value, evaluated )
24473	assertFalse ( "Accepted value outside range of int", accepted )
24474	Assert. assertEquals ( cmdBase. getQueue ( ), this. mockQueueService. getQueue ( "test-zone-1" ) )
24475	Assert. assertTrue ( ( ( BasicDecider ) instance ). isToRunContained ( metadata. getWorkflowRun ( workflowRunAcc ). getInputFileAccessions ( ), filesToRun ) )
24476	assertEquals ( "foo", expression. getValue ( elContext ) )
24477	assertAllGuardsExists ( )
24478	Assert. assertEquals ( "test", var. toString ( ) )
24479	assertReference ( reference, "referent", "attachment", null )
24480	assertThat ( description. toString ( ), is ( "to have global errors" ) )
24481	assertNull ( data )
24482	assertEquals ( "foo.org", context. getHost ( ) )
24483	assertEquals ( input, txt )
24484	assertTrue ( "permission was not granted to admin.", readProjectPermission. isAllowed ( auth, 1L ) )
24485	assertFalse ( result )
24486	Assert. fail ( "IdUsedException expected" )
24487	Assert. assertEquals ( testString, HtmlToXMLUtil. unescapeToXML ( testString ) )
24488	assertThat ( actual, is ( notNullValue ( ) ) )
24489	assertEvidence ( evidence, 1, 1, 1, 1, 1 )
24490	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
24491	assertTrue ( result. contains ( expectedWkt ) )
24492	assertTrue ( ext instanceof HasAdaptiveExt_ManualAdaptive )
24493	assertGenerators ( result, AnInt. class, ZilchGenerator. class )
24494	assertThat ( response, containsString ( "AS103" ) )
24495	assertThat ( converter. toJavaObject ( new DoubleWritable ( 1.0 ) ), is ( ( Object ) 1.0 ) )
24496	assertEquals ( leaseCopy, lease )
24497	assertEquals ( expected, bytesUsed )
24498	assertFalse ( sta. validateStrokeAndFill ( new EmptyStroke ( ), null ) )
24499	assertEquals ( testUrlTransformed, namedClusterBridge. processURLsubstitution ( testUrl, null, null ) )
24500	assertTrue ( "The recreated syntax-tree did not match the input syntax-tree.", pennOriginal. equals ( pennFromRecreatedTree ) )
24501	assertAllCommandsUsed ( )
24502	assertEquals ( "[message: hello0, message: hello1]", broadcasts. toString ( ) )
24503	assertEquals ( "value", store. get ( "key" ) )
24504	assertEquals ( "Number of grains is wrong", 14, table. getRowCount ( ) )
24505	assertSqlCanBeParsedAndDeparsed ( stmt )
24506	assertEquals ( "incorrect value", result, aNumber. longValue ( ) )
24507	assertThat ( description. toString ( ), is ( "<3> rows" ) )
24508	assertEquals ( Paths. get ( "/some/folder/file.txt" ), result )
24509	assertEquals ( "TagMediaFeed [data=[], meta=Meta [code=0, errorMessage=null, errorType=null], pagination=Pagination [depreciationWarning=null, minTagId=null, nextMaxId=null, nextMaxTagId=null, nextMinId=null, nextUrl=null]]", result )
24510	assertThat ( originalSession, not ( equalTo ( newSession ) ) )
24511	assertTrue ( res )
24512	Assert. assertEquals ( DFUnidadeFederativa. SC, retornoConsultaCadastroDados. getUf ( ) )
24513	Assert. assertEquals ( 12, psRes. length ( ) )
24514	assertTrue ( updates. isEmpty ( ) )
24515	assertNotNull ( consumable )
24516	assertEquals ( "{\\"test\\":[{\\"OK\\":\\"200\\"},{\\"REDIREDT\\":[{\\"CREATED\\":\\"201\\"}]}]}", result. toString ( ) )
24517	assertEquals ( 10, success [ 0 ] )
24518	assertEquals ( "%d{ISO8601} [%t][%c] %-5p: %m%n", layout. getConversionPattern ( ) )
24519	assertEquals ( "0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-
24520	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
24521	assertEquals ( ConnectionSchema. DEFAULT_MAX_WORK_QUEUE_DATA_SIZE, createSchema ( map, 0 ). convert ( ). getMaxWorkQueueDataSize ( ) )
24522	assertThat ( any. contains ( SECOND_OF_MINUTE ), is ( true ) )
24523	assertEquals ( "bsq", header. getInterleave ( ) )
24524	assertEquals ( htmlCharsetUTF8, doc. html ( ) )
24525	assertEquals ( 10., stateManager. getRouteState ( route, vehicle, id, Double. class ), 0.01 )
24526	Assert. assertEquals ( "consumerKey", consumer. getConsumerKey ( ) )
24527	assertThat ( new PushGHEventSubscriber ( ). getTrigger ( prj ), is ( nullValue ( ) ) )
24528	assertShapeCoordinates ( boundaryEventBounds, 218, 140 )
24529	assertTrue ( found )
24530	Assert. assertTrue ( s )
24531	assertEquals ( "[inFLectedFOrm121, inFLectedFOrm122]", Arrays. toString ( state. toFinalString ( null ) ) )
24532	assertLife ( playerB, 18 )
24533	assertEquals ( domain, gson. toJson ( domain ) )
24534	assertNotEquals ( insertPerson, insertDifferentPerson )
24535	assertEquals ( Arrays. asList ( 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16 ), lambda. apply ( 2, 3, 4, 15, 16 ). toArray ( ) )
24536	assertEquals ( 0, attr. size ( ) )
24537	assertEquals ( "[2147483644, 2147483645, 2147483646]", IteratorToGeneratorAdapter. adapt ( range ). toCollection ( ). toString ( ) )
24538	assertThat ( result, is ( false ) )
24539	assertTrue ( contextResolver. isEmpty ( ) )
24540	assertEquals ( "public static final ListProperty<TargetEntity> LIST_REL = PropertyFactory.createList(\\"list_rel\\", TargetEntity.class);", definition )
24541	Assert. assertEquals ( infoForward. getSequence ( ), resultTranscript )
24542	assertEquals ( BaseAction. INPUT, action. doDefault ( ) )
24543	assertThat ( $. url ( ), endsWith ( "WithoutJSTest_3.html?bName=bValue" ) )
24544	assertNull ( testResult )
24545	Assert. assertEquals ( Score. POSITIVE, score )
24546	Assert. assertEquals ( localDate. toString ( ddMMMyyyy, Locale. ENGLISH ), "12-MAR-2013" )
24547	assertEquals ( 123.45, hdt. getHeading ( ), 0.0001 )
24548	assertTrue (! nnList. isEmpty ( ) )
24549	assertTrue ( driver. findElement ( By. name ( "_TRANSACTION_TOKEN" ) ). getAttribute ( "value" ). matches ( "transactiontoken~[0-9a-z]{32}~[0-9a-z]{32}" ) )
24550	assertTrue ( "Header on exchange should indicate success", exchange. getIn ( ). getBody ( WorkNote. class ). hasErrors ( ) )
24551	assertEquals ( exp, act )
24552	assertEquals ( 1000, query. getStartRange ( ). size ( ) )
24553	assertEquals ( 401, response. getStatus ( ) )
24554	assertEquals ( "Unexpected exception was thrown.", ae, e )
24555	assertFalse ( printer. toString ( ). isEmpty ( ) )
24556	assertThat ( service. getUnrestricted ( ), equalTo ( unrestricted ) )
24557	Assert. assertEquals ( expResult, result )
24558	assertEquals ( 100, i )
24559	assertEquals ( mockResponse, testResponse )
24560	assertEquals ( "Incorrect value", map ( DATE_STRING, "test" ), value )
24561	assertThat ( codes, containsInAnyOrder ( "43343-4", "43343-3" ) )
24562	Assert. assertNotNull ( cu )
24563	assertThat ( keys. size ( ), is ( 1 ) )
24564	assertOut ( "goog.provide('com.example.components.TestInterface');\\n\\n/**\\n * @interface\\n */\\ncom.example.components.TestInterface = function() {\\n};" )
24565	assertThatNothingHappened ( jobExecution, lastCreatedJobId, 1 )
24566	assertEquals ( 40., solution. getCost ( ), 0.01 )
24567	assertEquals ( 0, issues. length )
24568	assertEquals ( "hello world", list. get ( 0 ) )
24569	TestCase. assertTrue ( matcher. match ( "Hello, World" ) )
24570	assertThat ( response, is ( HttpStatus. SC_BAD_REQUEST ) )
24571	assertEquals ( new BigInteger ( 1, input ), Base58. decodeToBigInteger ( "129" ) )
24572	assertThat ( rendered, is ( test [ 1 ] ) )
24573	assertThat ( testOutcome. isPresent ( ), is ( true ) )
24574	assertEquals ( "J13", rangeA. getCellData ( ). getCell ( ) )
24575	Assert. assertEquals ( newSubscription. getInvitedBy ( ), membership. getInvitedBy ( ) )
24576	assertEquals ( "", sw. toString ( ) )
24577	Assert. assertEquals ( "Link: <http://example.com/things>; rel=\\"next\\"; hreflang=\\"en-us\\"", affordance. toString ( ) )
24578	assertEquals ( expected, baos. toString ( ) )
24579	assertEquals ( 12345, settings. getOwnColor ( ) )
24580	Assert. assertEquals ( 1, count. size ( ) )
24581	Assert. assertEquals ( 0L, actualResult )
24582	TestCase. assertEquals ( 200, response. getStatusLine ( ). getStatusCode ( ) )
24583	assertTrue ( "Parameter was " + result + " instead of username", "username". equals ( result ) )
24584	assertEquals ( HttpStatus. SC_OK, returnResponse. getStatusLine ( ). getStatusCode ( ) )
24585	assertEquals ( HttpStatusCodes. NOT_ACCEPTABLE. getStatusCode ( ), response. getStatusLine ( ). getStatusCode ( ) )
24586	validator. assertValid ( value )
24587	assertEquals ( expected, e. evaluate ( ), 0.0 )
24588	assertTrue ( result. equals ( Arrays. asList ( "a", "b", "c", "d", "e" ) ) || result. equals ( Arrays. asList ( "a", "e", "d", "e", "e" ) ) )
24589	assertEquals ( ( short ) 8, result. getShortValue ( ) )
24590	Assert. assertEquals ( "clicked", ( new Element ( "//button[@id='myButton']" ) ). getText ( ) )
24591	Assert. assertTrue ( JexlASTHelper. equals ( one, two ) )
24592	assertTrue ( acl. hasPermission ( authenticationToken, Item. CREATE ) )
24593	assertEquals ( hash, murmur3F. getValueHexString ( ) )
24594	assertEquals ( "<a><b><c>1</c><c>2</c><c>3</c></b></a>", projector. asString ( emptyProjection ) )
24595	assertEquals ( access. getAccessDefinition ( ), ruleMapping )
24596	assertEquals (.9d, mdd. calculate ( series, tradingRecord ), TATestsUtils. TA_OFFSET )
24597	assertEquals ( result. getContent ( ), Unsubscribe_msg )
24598	assertEquals ( "{\\"d\\":{\\"__metadata\\":{\\"id\\":\\"" + getEndpoint ( ) + "Employees('3')\\"," + "\\"uri\\":\\"" + getEndpoint ( ) + "Employees('3')\\",\\"type\\":\\"RefScenario.Employee\\"," + "\\"content_type\\":\\"image/jpeg\\",\\"media_src\\":\\"Employees('3')/$value\\"," + "\\"edit_media\\":\\"" + getEndpoint ( ) + "Employees('3')/$value\\"}," + "\\"Age\\":56,\\"EntryDate\\":null," + "\\"ne_Team\\":{\\"__deferred\\":{\\"uri\\":\\"" + getEndpoint ( ) + "Employees('3')/ne_Team\\"}}}}", getBody ( response ) )
24599	assertEquals ( "testId", Tracee. getBackend ( ). get ( "testId" ) )
24600	assertEquals ( getFormatter ( ). toString ( ), "Pad('Y',5,' ')" )
24601	this. assertGet ( "policytypes/allvisualappearancedata/visualappearancedata.json", "entitytypes/policytypes/allvisualappearancedata.json" )
24602	assertTrue ( anc. isEmpty ( ) )
24603	assertMatchIs ( matcher, false )
24604	assertThat ( result, is ( Optional. empty ( ) ) )
24605	assertTrue ( page. getBody ( ). asText ( ). indexOf ( "EL value" )!= - 1 )
24606	assertEquals ( Character. valueOf ( '"' ), formatWithQuoteChar. getQuoteChar ( ) )
24607	Assert. assertNull ( result )
24608	assertions. isNotGreaterThan ( new Short ( ( short ) 2 ) )
24609	assertThat ( text ( contents ), is ( "\\"a\\",\\"b\\",\\"A\\",\\"B\\r\\n" ) )
24610	assertEquals ( " AND fieldName IN (IN (fieldValue1,fieldValue2,fieldValue3))", filterClause )
24611	assertEquals ( Json. createObjectBuilder ( ). add ( jsonObject ). build ( ), BsonCodec. bsonObjectToJsonObject ( bsonObject ) )
24612	assertNotNull ( entity. getId ( ) )
24613	Assert. assertEquals ( "SELECT year, SUM(profit)\\nFROM sales GROUP BY year WITH ROLLUP;", text )
24614	assertFalse ( cli. isConnected ( ) )
24615	assertNotNull ( registry. createConsumer ( i ) )
24616	Assert. assertEquals ( subject, service. getAuthenticationFromToken ( privateKeyJWT. getClientAssertion ( ). serialize ( ) ) )
24617	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, testName + "_diff" ) )
24618	Assert. assertEquals ( rLB. getStatus ( ), mLB. getStatus ( ) )
24619	assertEquals ( new FilterCoefficients ( pythonB, pythonA ), coeffs, 1e-3 )
24620	assertThat ( conn. isAutoCommit ( ), is ( false ) )
24621	assertEquals ( "(int a 3)\\n", found )
24622	assertEquals ( expected, x )
24623	assertEqualsWithoutWhiteSpaces ( "difference() {move([10,20,30]) difference() {(model1) (model2)} (model3)}", difference )
24624	assertTrue ( f. isHalf ( ) )
24625	assertEquals ( Collections. singleton ( david ), group. getPersons ( ) )
24626	Assert. assertEquals ( 3, size )
24627	assertEquals ( 0.0, c. getFitness ( ), 0.001 )
24628	assertEquals ( "hello", response )
24629	assertEquals ( 0, bytes. readRemaining ( ) )
24630	Assert. assertEquals ( "${missing}", readProperties ( basedir ). get ( "custom" ) )
24631	assertEquals ( "void f(void* target, void* p0) {\\n" + "    struct f_0001_0001 {int m0;};\\n" + "    struct f_0001_0000 {int m0;};\\n" + "    struct f_0001 {struct f_0001_0000 m0;struct f_0001_0001 m1;};\\n" + "    ((void (*)(struct f_0001)) target)(*((struct f_0001*)p0));\\n" + "}\\n", BridgeMethodCompiler. createBridgeCWrapper ( functionType. getReturnType ( ), functionType. getParameterTypes ( ), functionType. getParameterTypes ( ), "f" ) )
24632	assertFalse ( file. contains ( "group" ) )
24633	Assert. assertEquals ( 1, dependents. size ( ) )
24634	assertTrue ( Arrays. equals ( s, multiEntry ) )
24635	assertThat ( pgpSignedMessage. getKeyId ( ), is ( notNullValue ( ) ) )
24636	assertEquals ( "read_string of size 0", "", stream. read_string ( ) )
24637	assertEquals ( "Processed: " + message, out )
24638	assertThat ( result, is ( nullValue ( ) ) )
24639	assertThat ( serverHelper. establishedServerSession. getCipherSuite ( ), is ( CipherSuite. TLS_ECDHE_ECDSA_WITH_AES_128_CCM ) )
24640	assertEquals ( "[{\\"name\\":\\"table 1\\",\\"foreignKeys\\":[{\\"name\\":\\"tableNameOrigin\\",\\"name\\":\\"tableNameTarget\\",\\"nullable\\":true}]}]", content )
24641	assertNotNull ( request. getSession ( ). getAttribute ( Constants. PREFERRED_LOCALE_KEY ) )
24642	Assert. assertEquals ( "Charset " + entry. getKey ( ) + " impl broken", expectedString, sb. toString ( ) )
24643	assertEquals ( expectedMessage, actualMessage )
24644	assertTrue ( pointSymbolizer. getGraphic ( )!= null )
24645	assertEquals ( 0, target. length )
24646	assertTrue ( isValid )
24647	assertNotNull ( result )
24648	paths. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE_PATTERN )
24649	assertThat ( total, is ( 12 ) )
24650	assertThat ( axioms. isEmpty ( ), is ( true ) )
24651	assertThat ( connection. getConnectTimeout ( ), is ( 456 ) )
24652	assertThat ( decorated, is ( nullValue ( ) ) )
24653	assertNotNull ( c )
24654	Assert. assertNull ( cookie. getExpiryDate ( ) )
24655	assertEquals ( expected, query. n1ql ( ) )
24656	assertEquals ( "String", decl. getTypeImage ( ) )
24657	connection. assertBufferEndsWith ( "NotFound handler should have been called" + Config. getLineSeparator ( ) )
24658	assertTrue ( validator. isValid ( ) )
24659	assertThat ( capacity. allowsWorking ( ), is ( true ) )
24660	Assert. assertEquals ( d2, d, 0 )
24661	assertEquals ( expectedValue, expression. evaluate ( record ) )
24662	assertEquals ( lastValue, "EndNode8" )
24663	assertTrue ( 2 == connection. createChannel ( ). getChannelNumber ( ) )
24664	assertThat ( crateTemplate. findById ( entity. id ), is ( nullValue ( ) ) )
24665	assertThat ( frankResponse, is ( equalTo ( endpointResponseBody ) ) )
24666	assertEquals ( "Hello World", gaz. getAdditionalData ( ) )
24667	assertEquals ( "", x )
24668	assertEquals ( TranspositionTableStatus. sufficientTerminalNode, eval. status )
24669	assertEquals ( money. getAmount ( ), 10 )
24670	assertThat ( eventTriggered [ 0 ], is ( true ) )
24671	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
24672	assertGallery ( gallery )
24673	assertEquals ( ImportConfirmAction. SUCCESS, action. execute ( ) )
24674	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, expectedQuery ) )
24675	assertThat ( caveat, is ( "2;3;4;paul" ) )
24676	assertThat ( "response contains a non-empty fullName", StringUtils. isNotBlank ( response. getFullName ( ) ) )
24677	assertEquals ( 2, matchingIndexes )
24678	assertThat ( target. parse ( ), is ( false ) )
24679	assertThatSql ( query, is ( "SELECT nodes.col1, nodes.col2 FROM table1 AS nodes INTERSECT ALL SELECT edges.col3, edges.col4 FROM table2 AS edges" ) )
24680	Assert. assertEquals ( value, Math. abs ( 1415590100000.0 - 1415590000000.0 ), 0.00001 )
24681	assertTrue ( sw3. containsKey ( "createRequestBodies" ) )
24682	Assert. assertEquals ( new Long ( Long. MIN_VALUE ), _c. convert ( "-2147483648" ) )
24683	assertEquals ( expected, actual )
24684	assertThat ( fetchedUuid, is ( equalTo ( uuid ) ) )
24685	assertNotNull ( handler. getSchemaLocation ( "http://cxf.apache.org/simple/namespace" ) )
24686	assertOut ( "do\\n\\n  a++;\\nwhile (a > b);" )
24687	assertFalse ( valid )
24688	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
24689	assertEquals ( "userService", userServiceLink. getText ( ) )
24690	assertOut ( "var /** @type {Array.<string>} */ a = org.apache.royale.utils.Language.synthVector('String'))('Hello', 'World')" )
24691	assertEquals ( 2, fileCtr )
24692	assertEquals ( expected, sendAndCaptureBatch ( batch ). getPoints ( ). get ( 0 ) )
24693	Assert. assertEquals ( "SELECT CEILING(1.23);", text )
24694	assertEquals ( expected, actual )
24695	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( component ) instanceof WAjaxControlRenderer )
24696	assertEquals ( "Message: [Tim]", ResponseBodyInterpolator. interpolate ( "Message: [request.body]", req ) )
24697	Assert. assertEquals ( protocolo, consultaRetorno. getProtocolo ( ) )
24698	assertEquals ( "bla", ( new ProjectCouch ( "1", "1-234", "bla" ) ). getName ( ) )
24699	assertTrue ( result. length ( ) > 0 )
24700	assertEquals ( nvSep + entrySep, repr )
24701	assertEquals ( "Generated inclusion term should match 'term'", inclusionTerms. get ( 0 ), "term" )
24702	assertNotNull ( node )
24703	Assert. assertTrue ( validator. validSequence ( 1, inputSequence, outcomesSequence, outcome ) )
24704	assertEquals ( "RL_mKk0GQ==", KeyPairUtil. hexEncode ( data ) )
24705	assertRoundtrip ( document )
24706	assertThat ( subStr. contains ( testString, testSubString ), is ( true ) )
24707	assertFalse ( equal )
24708	assertTrue ( subject. isExportForcedSubtitlesOnly ( ). isPresent ( ) )
24709	assertEquals ( 4, ksession. fireAllRules ( ) )
24710	assertThat ( "cron is not null", cron!= null )
24711	assertThat ( result, hasSize ( 0 ) )
24712	arrays. assertContainsSequence ( description, actual, null )
24713	assertEquals ( scope. getMetricsLevel ( ), MetricsLevel. DETAILED )
24714	assertEquals ( NoProcessorsWroManagerFactory. class, actual. getClass ( ) )
24715	assertEquals ( data, new String ( IOUtils. toByteArray ( new ByteArrayInputStream ( bytes ) ) ) )
24716	assertEquals ( 204, response. getStatus ( ) )
24717	assertTrue ( isEqual )
24718	assertEquals ( "Hello", ( ( BizExceptionNoDefaultConstructor ) read ). getMessage ( ) )
24719	assertEquals ( 3.14, result, 0.00001 )
24720	assertThat ( b. getValue ( ), equalTo ( "Value" ) )
24721	Assert. assertEquals ( 0., analyser. getTimeWindowViolationAtActivity ( route. getStart ( ), route ), 0.01 )
24722	assertEquals ( end, cache. drainStatus )
24723	assertDefaultPorts ( DEFAULT_COMMAND_API_PORT + offset, DEFAULT_INTERNAL_API_PORT + offset, DEFAULT_MONITORING_API_PORT + offset )
24724	Assert. assertFalse ( ret. isEmpty ( ) )
24725	Assert. assertFalse ( "Authenticated", authenticated )
24726	assertEquals ( message, endpoint. getRequestToken ( ), receivedMessage. getToken ( ) )
24727	assertEquals ( "foo bar", eventClass. getSimpleName ( ) )
24728	assertEquals ( 4, count )
24729	assertThat ( errors, hasSize ( 2 ) )
24730	assertSame ( expected, config )
24731	assertDirectories ( fsRootPath, new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "rem
24732	assertEqualHQL ( "allen AND MARRIED", sb. toString ( ) )
24733	assertEquals ( 3, entriesBeforeRemove. size ( ) )
24734	assertNotNull ( result )
24735	assertEquals ( 13, fmt. toBytes ( e ). length )
24736	assertEquals ( displayer. isRefreshOn ( ), false )
24737	assertEquals ( "Translation failed", ProtocolException. class, pelopsException. getClass ( ) )
24738	assertEquals ( 200, page. getWebResponse ( ). getStatusCode ( ) )
24739	assertTrue ( voter. voteMatch ( affiliation, organization ) )
24740	assertThat ( secretKeySpec. getPublicKey ( ), is ( secretKey ) )
24741	assertEquals ( "dois decilh玫es", actual )
24742	assertIsOnlyOneElementWithDetails ( elements, "div", "d1", "div" )
24743	assertThat ( actual, is ( equalTo ( expected ) ) )
24744	Assert. assertEquals ( "success", commandFuture. result ( ) )
24745	assertEquals ( "OID", internalResultSet. getString ( 1 ) )
24746	context. assertEquals ( ERROR, replyBody. getString ( ERROR ) )
24747	Assert. assertEquals ( "hdfs://namenode1,hdfs://namenode2,hdfs://namenode3", actionConf. get ( MRJobConfig. JOB_NAMENODES ) )
24748	assertEquals ( "No NMEA is present", false, service. isNMEAPresent ( ) )
24749	assertSame ( copy, copy )
24750	assertNonNullTaint ( taintedInt )
24751	assertEquals ( "Should be 1 booster", 1, booster. size ( ) )
24752	assertNotNull ( getLoggingContextHostnameProperty ( ) )
24753	assertEquals ( "Hello Camel Rocks", response )
24754	assertFalse ( fixture. hasSubscriptionId ( ) )
24755	assertFalse ( matcher. match ( msg, rule ) )
24756	assertEquals ( expecting, found )
24757	assertEquals ( "geo point mapper serialization is wrong", expected, actual )
24758	assertArrayEquals ( in, out )
24759	assertTrue ( v instanceof PactInteger )
24760	Assert. assertEquals ( 6, doc. get ( new Path ( "arr" ) ). size ( ) )
24761	assertNotNull ( object )
24762	assertThat ( filled, is ( "/clients/my/path/to/file" ) )
24763	Assert. assertEquals ( word, d_dict. sequence ( i ) )
24764	assertResult ( 0 )
24765	assertThat ( markdown, containsString ( tableEntry ( "`myList`", "array of " + linkTo ( "List", "#list" ), "A list of strings" ) ) )
24766	assertThat ( cut. apply ( pageObject ), is ( false ) )
24767	assertEquals ( Status. FAILED, result. getStatus ( ) )
24768	assertThat ( "null should be replaced", result, is ( true ) )
24769	Assert. assertFalse ( checkForSymbolicLink ( target ) )
24770	Assert. assertEquals ( CheckResult. PENDING, checkResult )
24771	assertEquals ( "limit=10", query. toQueryString ( ) )
24772	Assert. assertEquals ( expectedPeriod, period )
24773	Assert. assertEquals ( expirationSec, relExp )
24774	assertTrue ( GenericTypeReflector. equals ( expected, inferred ) )
24775	assertNotNull ( cl )
24776	assertEquals ( "[INFLECTEDFORM121, INFLECTEDFORM122]", Arrays. toString ( state. toFinalString ( null ) ) )
24777	assertThat ( calvalusProcessor. getName ( ), equalTo ( "Idepix.Water" ) )
24778	assertFalse ( hasPermission )
24779	assertTrue ( result instanceof OracleConnection )
24780	context. assertNotNull ( ip )
24781	assertTrue ( loader. load ( "scrypt", false ) )
24782	assertEquals ( 200, response. getStatusLine ( ). getStatusCode ( ) )
24783	assertEquals ( bytes, down. getBytesWritten ( ) )
24784	assertEquals ( "Deltas do not match", deltaBefore, deltaAfter )
24785	Assert. assertFalse ( dataVersion. equals ( other ) )
24786	assertAnnotationCompletions ( "@Value(\\"${spring.prop1}<*>}\\")", "@Value(\\"${data.prop2}<*>}\\")", "@Value(\\"${else.prop3}<*>\\")" )
24787	assertEquals ( 123, testClass. getValue ( ) )
24788	assertEquals ( expResult, result )
24789	assertEquals ( 1, filteredTables. size ( ) )
24790	assertThat ( digits, matchesRegularExpression ( "[0-9]+" ) )
24791	assertNull ( result )
24792	assertEquals ( "tcp", acceptor. getTransportName ( ) )
24793	assertEquals ( "1\\n", drl )
24794	assertThat ( arguments. getResources ( ), contains ( expectedResource ) )
24795	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
24796	Assert. assertEquals ( 0, this. sqlgGraph. traversal ( ). E ( ). count ( ). next ( ). intValue ( ) )
24797	Assert. assertNull ( userId )
24798	Assert. assertEquals ( "Pull Request: ", Iterables. get ( branches, 0 ) )
24799	assertThat ( errors, hasFieldErrors ( "givenName" ) )
24800	assertEquals ( translation, result )
24801	assertTrue ( StoreParams. sameValues ( p, pLoc ) )
24802	assertEquals ( 1, list. size ( ) )
24803	assertTrue ( response. getGeneratedKeys ( ). size ( ) == 5 )
24804	assertEquals ( 5, saga. getState ( ) )
24805	assertFalse ( server. isAlive ( ) )
24806	assertNotNull ( cf )
24807	arrays. assertStartsWith ( description, actual, sequence )
24808	assertThat ( "pattern=" + pattern + " matches string=" + string, pattern. matches ( string ), is ( true ) )
24809	AssertUtil. assertNoJSError ( )
24810	assertions. doesNotContain ( value, index )
24811	assertEquals ( combinationsExpected, result )
24812	Assert. assertNotNull ( testBean )
24813	assertEquals ( VALID_BLOB_URI, fileUploadTask. getBlobURI ( ) )
24814	Assert. assertTrue ( Math. abs ( now. getTime ( ) - n. getTime ( ) ) < 500 * 1000 )
24815	assertEquals ( text, male. getText ( ) )
24816	Assert. assertNotNull ( list )
24817	assertEquals ( "test1", parser. getDocumentText ( ) )
24818	TestUtils. assertEquals ( anexo, anexoModificado )
24819	Assert. assertEquals ( Integer. class, clazz )
24820	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 3, warnings. size ( ) )
24821	assertEquals ( 0, tasks. size ( ) )
24822	assertTrue ( checkpoint. isFailed ( ) )
24823	assertThat ( "event with unknown header", event, nullValue ( ) )
24824	Assert. assertFalse ( errors. hasErrors ( ) )
24825	assertThat ( transformed, equalTo ( unformattedTableAsString ) )
24826	assertEquals ( expected, actual )
24827	assertOutput ( "a" )
24828	assertEquals ( value, returned )
24829	assertTrue ( matcher. matches ( context ) )
24830	assertEquals ( "slow", object. asIs ( ) )
24831	compiler. assertErrorsOnLines ( "example/Test.java", diagnostics, 6, 7 )
24832	assertEquals ( expected, actual )
24833	assertTrue ( setCommands. pop ( NAMESPACE1, key1 ). equals ( message1 ) )
24834	Assert. assertTrue ( responses. size ( ) == 20 )
24835	assertEquals ( "valueObject", bean. getValueObject ( ) )
24836	assertEquals ( input, output )
24837	assertEquals ( "浣�濂�", firstStatus. getText ( ) )
24838	assertTrue ( drl. contains ( "this > 10" ) )
24839	assertThat ( xmlResult, CompareMatcher. isSimilarTo ( out. toString ( ) ). ignoreWhitespace ( ). withNodeMatcher ( new DefaultNodeMatcher ( ElementSelectors. byNameAndText ) ) )
24840	assertTrue ( "Failed to match both compatible IPv6 addresses.", match )
24841	assertEquals ( Collections. singletonList ( author3 ), submissionSet. getAuthors ( ) )
24842	assertNotNull ( info )
24843	assertEquals ( newLabel, withLabel. getLabels ( ). get ( "fr" ) )
24844	assertTrue ( Files. exists ( other ) )
24845	assertEquals ( expected, result )
24846	assertThat ( duration. toNanos ( ), is ( 10000000L ) )
24847	Assert. assertTrue ( "Should be focused", driver. findElement ( ByWComponentPath ( path ) ). isDisplayed ( ) )
24848	assertNotEquals ( b3a, b3b )
24849	assertEquals ( 0, tags. size ( ) )
24850	assertTrue ( listsAreEqual ( brandsIterative, brands ) )
24851	assertEquals ( DataStatus. VOID, empty. getSternGroundSpeedStatus ( ) )
24852	assertTrue ( visitor. matching )
24853	assertEquals ( "a        - desc" + System. lineSeparator ( ) + "b        - desc", output. toString ( ). trim ( ) )
24854	assertEquals ( "test", binary. extractBinary ( ) )
24855	assertTrue ( hrip. compareTo ( hric ) > 0 )
24856	assertEquals ( PHRASE, reversedString )
24857	assertNotNull ( "First transcript exists and it must be returned", transcript )
24858	assertThat ( result, is ( "123" ) )
24859	assertSame ( row, rowSet. getRowWait ( 1, TimeUnit. SECONDS ) )
24860	assertEquals ( 1, repositoryService. createSignalEventQuery ( ). count ( ) )
24861	assertSame ( url2, url1 )
24862	assertEquals ( "000", this. banco. geraCodigoDeBarrasPara ( this. boleto ). substring ( 0, 3 ) )
24863	runner. assertValid ( service )
24864	assertEquals ( "2013-02-01", formatted )
24865	Assert. assertTrue ( cmd. apply ( bkFlags, new String [ ] { "" } ) )
24866	assertNotNull ( containerDetail )
24867	assertEquals ( factor - index, sum )
24868	assertObjectEquals ( "{type:'array',items:{type:'array',items:{type:'object',properties:{f1:{type:'string'}}}}}", s. getSchema ( BeanList2d. class ) )
24869	assertSame ( fieldVar, result )
24870	assertEquals ( false, result )
24871	assertEquals ( "6 ���� ��", t. format ( new Date ( 0 ) ) )
24872	Assert. assertNotNull ( asiento )
24873	assertThat ( products. size ( ), is ( 2 ) )
24874	assertTrue ( tasks. size ( ) == 10 && tasks. get ( 0 ). getId ( ) == 13 && tasks. get ( tasks. size ( ) - 1 ). getId ( ) == 50 )
24875	Assert. assertEquals ( "didn't get expected int", writtenInt, readBackInt )
24876	Assert. assertEquals ( "hello", result )
24877	assertEquals ( mockedIotHubListener, listener )
24878	assertTrue ( defaultInstance == ValidationBatchSummaryImpl. DEFAULT )
24879	assertTrue ( model. getGroups ( ). isEmpty ( ) )
24880	assertEquals ( "Should not be able to use incompatible class equals", false, reflectionHelper. isIncompatibleClassEquals ( Simple1. class, Simple2. class ) )
24881	assertEquals ( entry. getValue ( ), expectedMatches. get ( entry ), 0.01 )
24882	assertEquals ( path, "/Users/anyang/Desktop/jacoco/sum/jboss-5.0.1.GA\\\\rasp\\\\..\\\\bin\\\\run.bat" )
24883	assertNotNull ( solver )
24884	assertEquals ( i, p. sample ( ) )
24885	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Parameter name=\\"name\\" value=\\"value\\"/>", elem. toXml ( ) )
24886	assertTrue ( response. getPersonInformationStructure ( ). isEmpty ( ) )
24887	assertEquals ( 1, sum )
24888	assertEquals ( "someMessage", result. getContent ( ) )
24889	Assert. assertEquals ( "selenium.assertText(\\"xpath=//div[@id='header-login']/text()", result )
24890	assertEquals ( 0, numbers. size ( ) )
24891	assertEquals ( hash, base64_md5 )
24892	assertThat ( testOutcome. getResult ( ), is ( PENDING ) )
24893	assertEquals ( "propertyNames", actual. getPropertyNames ( ) )
24894	assertEquals ( svgImage, defaultEditorAdapter. decorateIcon ( inputSvgImage ) )
24895	assertEquals ( false, getAnimationBrowserPanel ( ). isMoveDownEnabled ( ) )
24896	assertEquals ( pc, chip8. getPC ( ) )
24897	assertEquals ( uri. toString ( ), expected )
24898	assertThat ( repo, is ( instanceOf ( BareRepository. class ) ) )
24899	assertions. isNotLessThan ( expected )
24900	assertEquals ( expectedScript, observedScript )
24901	assertNotNull ( taskService. createTaskQuery ( ). taskDefinitionKey ( "userTask2" ). singleResult ( ) )
24902	assertThat ( share. hasProperty ( "4" ), is ( true ) )
24903	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 09" ) )
24904	assertEquals ( 28, cal. get ( Calendar. DATE ) )
24905	assertNotNull ( user )
24906	assertEquals ( 1000.0, vRoute. getDepartureTime ( ), 0.01 )
24907	assertThat ( violations. size ( ), is ( 0 ) )
24908	Assert. assertEquals ( mysqlAffectRow, andorAffectRow )
24909	Assert. assertEquals ( Boolean. FALSE, JsfUtils. isNewMessage ( existingFacesMessage, messageToCheck ) )
24910	Assert. assertEquals ( "[city, country]", resultList. toString ( ) )
24911	assertEquals ( goldenResponse, responseObserver. firstValue ( ). get ( ) )
24912	assertEquals ( "someDevice", actual. getDisplayName ( ) )
24913	assertEquals ( "true", r )
24914	context. assertIsSatisfied ( )
24915	Assert. assertTrue ( FastMath. abs ( error ) > 0.1 )
24916	assertEquals ( NOT_DECODED, object, new CoordTransform ( decoder ) )
24917	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
24918	assertEquals ( expected, actual )
24919	assertEquals ( expected, key. toString ( ) )
24920	assertInRange ( b, BigInteger. ZERO, limit )
24921	assertEquals ( 0, aNumber. bitLength ( ) )
24922	assertThat ( restService. getSearchHandler ( "v1/concept", parameters ), is ( nullValue ( ) ) )
24923	assertMessages ( "println", 1, "print_printf_locale" )
24924	assertEquals ( key. length, 32 )
24925	assertTrue ( "Directory should be empty", f. exists ( ) )
24926	assertEquals ( RemoteAPIController. PARENT_FRAME_RELOAD_PAGE, connectToAPI )
24927	assertNotNull ( savedSearchDashlet )
24928	Assert. assertEquals ( "Account.Name", qei. getQuery ( ) )
24929	assertDatasetOk ( ds )
24930	assertTrue ( ex. equals ( ex2 ) )
24931	assertTrue ( "basicInterval1 should be less than basicInterval2.", bstc. compare ( basicInterval1, basicInterval2 ) < 0 )
24932	assertEquals ( 200, response. getStatus ( ) )
24933	assertEquals ( ECHO_STRING, outMessage )
24934	assertArrayEquals ( objects, recordList. toArray ( ) )
24935	assertEquals ( expected, result,.000001 )
24936	assertTrue ( requestOk )
24937	assertTrue (! v8. getBoolean ( "caught" ) )
24938	assertThat ( sentGetRequest ( "http://127.0.0.1:19000/api/job/events/status_statuses" ), is ( GsonFactory. getGson ( ). toJson ( new JobEventRdbSearch. Result < > ( 0, Collections. < JobStatusTraceEvent > emptyList ( ) ) ) ) )
24939	assertNull ( dw. getAndTag ( mongoQuery ) )
24940	Assert. assertEquals ( "Value is incorrect", map ( TIME_1_STRING, "test" ), value )
24941	Assert. assertEquals ( "SELECT ACOS(1.0001);", text )
24942	assertions. isNotEqualTo ( actual )
24943	assertEquals ( 0, findings. size ( ) )
24944	assertEquals ( "Different file locator", locator, locator2 )
24945	assertEquals ( "Insert from select statement with explicit fields", expectedSql, testDialect. convertStatementToSQL ( insert ) )
24946	assertTrue ( copy. equals ( original ) )
24947	assertEquals ( expectedJavaCommand, actualJavaCommand )
24948	assertOneSpan ( )
24949	assertEquals ( tail. getMissing ( 3 ), Collections. < Long > emptySet ( ) )
24950	assertEquals ( 0, app. executeApplication ( args ) )
24951	assertEquals ( "Index was not deleted by primary key", null, actualReturnValue )
24952	assertEquals ( new BigDecimal ( "123" ). toString ( ), obj. getJSONNumber ( "numberDefault" ). toString ( ) )
24953	assertEquals ( msg. getDeviceOperationType ( ), DeviceOperations. DEVICE_OPERATION_TWIN_UPDATE_REPORTED_PROPERTIES_RESPONSE )
24954	assertEquals ( "select cat\\nfrom Cat cat\\n", serializer. toString ( ) )
24955	assertNotEquals ( getSettings1, getSettings2 )
24956	assertEquals ( "path", locator. locate ( ) )
24957	Assert. assertEquals ( resultExpected, result )
24958	Assert. assertEquals ( 10, result. size ( ) )
24959	arrays. assertContainsExactlyInAnyOrder ( info, actual, arrayOf ( 6, 10, 8 ) )
24960	assertResultSet ( res )
24961	assertSame ( expected, actual )
24962	assertThat ( representation. getString ( "content-type" ), is ( "application/pdf" ) )
24963	Assert. assertEquals ( "select STUDENT.ID,STUDENT.NAME,STUDENT.SCHOOL from student order by STUDENT.NAME asc,STUDENT.ID asc ", getSql0 ( node ) )
24964	assertEquals ( "", result )
24965	assertThat ( PrettyTime. of ( Locale. ENGLISH ). print ( dur, TextWidth. WIDE, true, 6 ), is ( "3 years, 1 days, 123 minutes, 0 seconde et 4 microsecondes" ) )
24966	assertEquals ( p. parse ( "1/2*3/5*9*9/3^2/4/6*7 + 1^2/3 - 3 - 2*3*5/8*9/6*9/3^2/4*7*6^2" ), new Rational < > ( Z, Z. valueOf ( - 85879 ), Z. valueOf ( 240 ) ) )
24967	assertEquals ( "\\"\\t\\r value \\\\\\\\\b\\\\b\\\\c\\\\d\\\\e\\\\f\\\\r\\\\f\\\\n\\\\t\\\\r\\\\f\\\\r\\\\f\\\\n\\\\t\\\\r\\\\f\\\\n\\\\t\\\\r\\\\f\\\\n\\\\t\\\\n\\\\t\\\\r\\\\f\\\\n\\\\t\\\\n\\\\t\\\\r\\\\f\\\\n\\\\t\\\\n\\\\t\\\\n\\\\t\\\\n\\\\t\\\\n\\\\r\\\\f\\\\n\\\\r\\\\f\\\\n\\\\r\\\\f\\\\n\\\\t\\\\n\\\\r\\\\f\\\\r\\\\f\\\\n\\\\t\\\\n\\\\t\\\\r\\\\f\\\\n\\\\t\\\\n\\\\t\\\\r\\\\f\\\\n\\\\t\\\\n\\\\t\\\\n\\\\t\\\\n\\\\t\\\\n\\\\t\\\\n\\\\r\\\\f\\\\n\\\\t\\\\n\\\\t\\\\n\\\\r\\\\f\\\\n\\\\t\\\\n\\\\r\\\\f\\\\n\\\\t\\\\n\\\\r\\\\f\\\\n\\\\r\\\\f\\\\n\\\\t\\\\n\\\\r\\\\f\\\\n\\\\t\\\\n\\\\t\\\\n\\\\t\\\\n\\\\t\\\\n\\\\t\\\\n\\\\
24968	assertTrue ( UrlUtils. isMatch ( consumerUrl, providerUrl ) )
24969	Assert. assertEquals ( 31, i )
24970	assertThat ( result, is ( jsonBoolean ( true ) ) )
24971	assertEquals ( DummyDrawHandler. drawCircleToString ( 1, 2, 3, null, null, null, null, null ), drawHandler. getLastDrawCall ( ) )
24972	assertFalse ( acl. usersOrRolesExist ( "Owner" ) )
24973	assertEquals ( events, storedEvents )
24974	assertEquals ( externalTasks. size ( ), 1 )
24975	assertEquals ( "at 16:00:00pm, every month in the 15th day", descriptor. describe ( cron ) )
24976	assertEquals ( "", settings. getBaseDirectory ( ) )
24977	assertThat ( retrieveSize, is ( numberOfPipelines ) )
24978	Assert. assertEquals ( "stuff and some more stuff", result )
24979	assertTrue ( actual. isEmpty ( ) )
24980	assertEquals ( "Failed to generate if-else-if-block using no rhs", IF_ELSEIF_BLOCK_NO_RHS_NESTED, s )
24981	Assert. assertTrue ( exceptionCaught )
24982	assertNull ( sliName )
24983	assertEquals ( expected, actual )
24984	assertMockEndpointsSatisfied ( )
24985	Assert. assertEquals ( "secret", evaluatedPassword )
24986	assertEquals ( expectedResult, result )
24987	mock. assertIsNotSatisfied ( )
24988	assertEquals ( 6, content. size ( ) )
24989	assertEquals ( val, "catched" )
24990	assertThat ( bundle. getResources ( ), contains ( myResourceList ) )
24991	Assert. assertTrue ( isEqual ( d1, d2 ) )
24992	assertNull ( object )
24993	assertEquals ( "ACCEPT", house. getFilterReply ( ) )
24994	assertEquals ( testCase. mExpected, o. toString ( ) )
24995	assertOut ( "/**\\n * @param {number} p1\\n * @param {number} p2\\n * @param {number=} p3\\n * @param {number=} p4\\n * @return {number}\\n */\\n" + "foo.bar.RoyaleTest_A.prototype.method1 = function(p1, p2, p3, p4) {\\n  p3 = typeof p3!== 'undefined'? p3 : 3;\\n  p4 = typeof p4!== 'undefined'? p4 : 4;\\n  return p1 + p2 + p3 + p4;\\n}" )
24996	assertThat ( db1, is ( not ( sameInstance ( db2 ) ) ) )
24997	assertTrue ( res. isEmpty ( ) )
24998	assertions. containsSequence ( sequence )
24999	assertPresent ( session, label )
25000	assertEquals ( "param1=", encodedParams )
25001	assertEquals ( Boolean. TRUE, result )
25002	Assert. assertEquals ( "2008|骞�|搴�|��|浜�|璧���|��", words )
25003	assertTrue ( rule. matches ( "a" ) )
25004	assertThat ( found, equalTo ( expected ) )
25005	assertEquals ( "http://foo.com/Patient/123/_history/2333/_etag=9999", capt. getValue ( ). getURI ( ). toString ( ) )
25006	assertEquals ( 1, Owner. count ( ) )
25007	assertTrue ( shootist. callerSendsBye )
25008	assertThat ( ( Long ) ms. get ( "aaa" ), is ( 1L ) )
25009	Assert. assertTrue ( lastElementIsSame ( store, new WeightedObservedPoint ( w, x, y ) ) )
25010	assertNotNull ( password )
25011	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Enqueue>" + "<Task priority=\\"1\\" timeout=\\"1\\"/>" + "</Enqueue>", elem. toXml ( ) )
25012	assertEquals ( e, db. build ( ) )
25013	Assert. assertEquals ( "The ${hiveconf:origin} fox", shell. expandVariableSubstitutes ( "The ${hiveconf:origin} fox" ) )
25014	JSONAssert. assertEquals ( expected, result. getResponse ( ). getContentAsString ( ), false )
25015	Assert. assertEquals ( expected, udf. evaluate ( args ) )
25016	Assert. assertEquals ( gen. generateInchi ( ac ). getInChI ( ), "InChI=1S/Li/i1+2" )
25017	Assert. assertTrue ( returnT. getCode ( ) == ReturnT. SUCCESS_CODE )
25018	Assert. assertNotNull ( trainer. train ( eventStream ) )
25019	assertEquals ( book, otherBook )
25020	Assert. assertNotNull ( registerResponse )
25021	Assert. assertEquals ( defaultProducts. length - 1, selector. getProductCount ( ) )
25022	assertPathMatchForExpected ( expected )
25023	assertNotNull ( resultMap )
25024	Assert. fail ( "GMException should have been thrown." )
25025	assertAccessorsCorrect ( collapsible, "headingLevel", null, new HeadingLevel ( 1 ), new HeadingLevel ( 2 ) )
25026	assertThat ( defaultName, is ( "Zuid-Holland (region, Netherlands)" ) )
25027	assertEditorClosed ( )
25028	assertTrue ( Arrays. equals ( protocols, configurable. getEnabledProtocols ( ) ) )
25029	assertEqualDoubleArrays ( pyplus, plus, epsilon )
25030	assertEquals ( "straks", t. format ( date ) )
25031	assertTrue ( bucketContent. isEmpty ( ) )
25032	assertThat ( output, containsString ( "Created template:" ) )
25033	assertEquals ( CodeableConcept. class, roleField. getClass ( ) )
25034	Assert. assertEquals ( job, RandomUtils. nextItem ( jobs, RandomNumberGeneration. getRandom ( ) ) )
25035	assertEquals ( "", result )
25036	assertEquals ( 2, books. size ( ) )
25037	assertTrue ( true )
25038	assertMediaFolderEquals ( mediaFolder, newMediaFolder )
25039	assertEqualsWithoutWhiteSpaces ( "(model11)", testSubject. subModel ( new ScadGenerationContextFactory ( ). exclude ( 2 ). create ( ) ) )
25040	assertThat ( converter. toWritableObject ( "hello" ), is ( ( Object ) new StringWritable ( "hello" ) ) )
25041	assertEquals ( client. getId ( ), assignedClientId )
25042	assertSame ( GBP_2_34, test )
25043	assertEquals ( "", parameterName )
25044	assertEquals ( "annotation:hello", hello )
25045	assertNotNull ( ep. getBinding ( ) )
25046	assertTrue ( onCloseLatch. await ( 1, TimeUnit. SECONDS ) )
25047	assertNotNull ( colegio )
25048	assertOut ( "return true" )
25049	assertEquals ( "https://www.facebook.com/hashtag/TravelPics", httpRequest. getURI ( ) )
25050	assertIsAborted ( tx )
25051	assertResultsEqual ( results, Arrays. asList ( 1, 2, 3 ) )
25052	assertXMLEqual ( new ResourceUtil ( UNSTAR ). getContent ( ), sw. getBuffer ( ). toString ( ) )
25053	Assert. assertNull ( result )
25054	assertThat ( countRowsInTable ( "PERSON" ), is ( before + 1 ) )
25055	assertEquals ( 0, mask [ indY ] [ indX ] )
25056	assertThat ( sut. getImage ( ), equalTo ( "bar@sha256:12345" ) )
25057	assertEquals ( 0, indexEntries. size ( ) )
25058	assertThat ( lastEntry. isAlarm ( ), is ( true ) )
25059	assertNull ( principal )
25060	Assert. assertEquals ( "�戒�灞�", words )
25061	assertEquals ( "test", testContext. get ( ). body ( ) )
25062	assertEquals ( WRONG_NUMBER_OF_ANNOTATIONS_PARSED, 15, annotations. size ( ) )
25063	assertThat ( qualifier, is ( "Joe" ) )
25064	assertThat ( time. getTimeRelativeTo ( timeRelativeTo ), equalTo ( dateFormat. parse ( "2013-Jan-18 4:55:12.27" ). getTime ( ) ) )
25065	Assert. assertEquals ( SIMPLE_RETURN_CODE. SUCCESS, check. getErrorType ( ) )
25066	assertDateEquals ( r, t. plus ( d ) )
25067	assertThat ( result, contains ( "Hel", "lo ", "wor", "ld" ) )
25068	assertTrue ( underTest. validate ( "student", idsToValidate ). containsAll ( idsToValidate ) )
25069	assertSame ( belongsToEntity, returnedEntity )
25070	assertEquals ( "User", model. getPropertyDesc ( ) )
25071	assertTrue ( "Included JARs as native dependencies, but should", nativeDependencies. contains ( new File ( apklibDir. getRoot ( ), "some-apklib/libs/some.so" ) ) )
25072	Assert. isTrue ( true )
25073	assertOut ( "/**\\n * @export\\n */\\nfoo.bar.B.b = function() {\\n  function c(f) {\\n  };\\n  var /** @type {Function} */ f = this.custom_namespace::b;\\n  c(f);\\n}" )
25074	Assert. assertEquals ( 12. * 2., analyser. getVariableTransportCostsAtActivity ( route. getActivities ( ). get ( 1 ), route ), 0.01 )
25075	assertEquals ( 401, resGetAll. getStatus ( ) )
25076	assertEquals ( expected, result )
25077	assertEquals ( 1, testParseJsonObject. getValue ( context ) )
25078	assertTrue ( m. matches ( ) )
25079	assertEquals ( Arrays. asList ( "VALUE1", "VALUE2", "VALUE3", "VALUE4" ), values )
25080	assertEquals ( 1, results. length )
25081	assertTrue ( true )
25082	assertThat ( slider. getValue ( ), is ( 1.2345 ) )
25083	assertTrue ( "The first component of the split panel should be a button containing the text" + " 'Button 1.1'. Actual text: " + buttonText, "Button 1.1". equals ( buttonText ) )
25084	Assert. assertEquals ( "[{\\"name\\":\\"name1\\",\\"age\\":1},{\\"name\\":\\"name2\\",\\"age\\":2}]", str )
25085	assertArrayEquals ( expected, encoder. getEncoded ( ) )
25086	assertEquals ( expResult, result )
25087	assertTrue ( "child is visitable", _guide. isVisitable ( child ) )
25088	assertTrue ( underTest. validate ( "repository1", config ) )
25089	assertTrue ( "Entries found: " + entries, entries. isEmpty ( ) )
25090	assertThat ( toUnqualifiedVersionlessIds ( myAppointmentDao. search ( params ) ), containsInAnyOrder ( patId, apptId ) )
25091	assertEquals ( "doc", result. getContent ( ) )
25092	assertRequest ( "POST", "Conference/%s/Member/%s/Play/", confId, memberId )
25093	assertExcludedImplicitly ( node )
25094	assertEquals ( mailboxSize, testResults. highest. get ( ) )
25095	assertThat ( dur. toString ( ), is ( "P4{YEARS}1M2W" ) )
25096	assertEquals ( "anonymous", con. getHeaderField ( "User-Agent" ) )
25097	assertTrue ( voter. voteMatch ( affiliation, organization ) )
25098	assertThat ( actual, is ( "ABC" ) )
25099	assertFalse ( SpriteUtils. isAliasSprite ( sprite1, sprite2 ) )
25100	assertThat ( cell. body ( ), is ( equalTo ( "<a href='http://localhost'>linked</a>" ) ) )
25101	assertEquals ( 3, position )
25102	Assert. assertTrue ( pss. toString ( ). contains ( "<http://example>" ) )
25103	assertEquals ( true, dt. intValue ( ) == 30 )
25104	assertEquals ( result. getAttributes ( ). get ( "name" ), "newValue" )
25105	runner. assertAllFlowFilesTransferred ( PutHBaseJSON. REL_FAILURE, 1 )
25106	Assert. assertEquals ( dim. getNumDimensions ( ), 1 )
25107	Assert. assertEquals ( OBJECT, clone )
25108	assertThat ( sampledValue. getMeasurand ( ), equalTo ( measurand ) )
25109	assertEquals ( true, actual )
25110	Assert. assertEquals ( "1.0.0", patch. getVersion ( ) )
25111	assertEquals ( testData, result )
25112	assertFalse ( violation )
25113	assertTrue ( message!= null )
25114	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + fileName, sourceFolder + "cmp_" + fileName, destinationFolder, "diff_" ) )
25115	assertThat ( output, is ( "" ) )
25116	assertNotNull ( result )
25117	assertOut ( "var /** @type {boolean} */ a = false" )
25118	assertThat ( target. matchExactly ( flow ), is ( true ) )
25119	assertEquals ( 10, pageService. findMaxApiPageOrderByApi ( API_ID ) )
25120	assertNull ( MultiParts. getFileName ( param ) )
25121	assertNotNull ( result )
25122	assertEquals ( 1.0, Capacity. divide ( cap1, cap2 ), 0.001 )
25123	testRunner. assertAllFlowFilesTransferred ( PutParquet. REL_RETRY, 1 )
25124	Assert. assertEquals ( 1, ksession. fireAllRules ( ) )
25125	assertThat ( response. toString ( ), is ( "" + "inet6num:        ::0\\n" + "abuse-mailbox:  abuse@me.now\\n" ) )
25126	assertEquals ( 0.0, p, 0.001 )
25127	assertTrue ( result. getErrorMessage ( ), result. isSucceeded ( ) )
25128	assertSame ( authenticated, helperSpy. getAuthObj ( ) )
25129	assertEquals ( "ATS03F=0\\r\\n", intArrayToString ( command. serialize ( ) ) )
25130	assertPermanentCount ( playerA, "One with the Machine", 0 )
25131	assertEquals ( Arrays. asList ( "A", "B", "C", "D" ), results )
25132	assertEquals ( "http://pac4j.com/cas/login", result )
25133	assertNotNull ( result )
25134	assertTrue ( Arrays. equals ( expected, actual ) )
25135	assertEquals ( ImmutableMap. of ( "priority", "9" ), actualConfig. getExecutionHints ( ) )
25136	Assert. fail ( "Xfdf files are not equal" )
25137	assertEquals ( "bar", bar. get ( ) )
25138	assertFalse ( watch. hasChanges ( ) )
25139	Assert. assertTrue ( "canonicalizing the test file " + filename + " gives a different result than canonicalizing the tmxml export of " + out + " " + baseline, TestFileUtils. compareFileToResource ( out, baseline ) )
25140	assertThat ( query. encodedFilter ( ), is ( encodedFilter ) )
25141	assertNull ( match )
25142	Assert. assertNotNull ( chf1 )
25143	assertArrayEquals ( expected, IOUtils. toByteArray ( new ARC4Engine ( ). encryptBytes ( new ByteArrayInputStream ( "ChuckNorris". getBytes ( StandardCharsets. UTF_8 ) ), "ABCDE". getBytes ( StandardCharsets. UTF_8 ) ) ) )
25144	assertObjects ( RoleType. class, NUMBER_OF_EMPTY_ROLES + NUMBER_OF_DUMMY_ROLES + NUMBER_OF_ORDINARY_ROLES )
25145	assertNotNull ( result )
25146	assertNotNull ( result )
25147	Helpers. assertJson ( json. toString ( ), "{\\"key1\\":\\"value1\\",\\"key2\\":null,\\"key3\\":\\"value3\\"}" )
25148	Assert. assertTrue ( fileInfoResult )
25149	assertTrue ( myDetailedDiff. toString ( ), myDetailedDiff. similar ( ) )
25150	assertFalse ( user. isPresent ( ) )
25151	assertEquals ( "xindex", output )
25152	assertTrue ( tenantService. getAutoLoadFiles ( tenant, lzPath1 ). isEmpty ( ) )
25153	assertDtoAndMapConstructorAreSame ( 0 )
25154	assertSame ( t. toLocalTime ( ), LocalTime. NOON )
25155	assertEquals ( "https://api.test.com/myapi/customer?issue_id=1337&location=LUND%2FB&enterprise=false", expanded. toString ( ) )
25156	assertEquals ( "test", echo. echo ( "test" ) )
25157	Assert. assertEquals ( CatalogResponseMessage. OK, response. getCode ( ) )
25158	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
25159	assertNull ( result )
25160	assertEquals ( 0, getConsentRecord ( ). getConsentCount ( ) )
25161	assertThat ( classes. size ( ), is ( 1 ) )
25162	assertEquals ( 12, jpegBitsPerSample ( "MR2_UNC-J2KR.dcm" ) )
25163	assertThat ( new PullRequestApproval ( Config. builder ( ). requiredReviewers ( newArrayList ( "user1", "user2" ) ). requiredReviews ( 1 ). build ( ), utils ). isPullRequestApproved ( pr ), is ( false ) )
25164	assertEquals ( "Agents Rebooted", result )
25165	assertThat ( domain. endsWithDomain ( ciString ( "n.s.0.200.193.193.in-addr.arpa" ) ), is ( false ) )
25166	assertThat ( converter, instanceOf ( EnumConverter. class ) )
25167	assertEquals ( 4, ex. getMax ( 4, 4 ) )
25168	assertEquals ( Content. COMPANY, menuStore. getContent ( ) )
25169	assertEquals ( CALLS, names. size ( ) )
25170	Assert. assertNotNull ( antennae )
25171	assertEquals ( expecting, found )
25172	assertEquals ( prettyPrintJson ( readContent ( EXPECTED_ERROR_RESPONSE_PATH ) ), prettyPrintJson ( json ) )
25173	assertEquals ( "Teams weren't equal.", organizationResponse. object. getId ( ), teamId )
25174	assertEquals ( 2, dashboardHistories. size ( ) )
25175	assertNotNull ( connection )
25176	assertFalse ( userCanBuildProject )
25177	assertThat ( randomProxy, instanceOf ( ProxyObject. class ) )
25178	assertEquals ( false, bm. isBitSet ( bitNumber ) )
25179	assertTrue ( tchh. isWriteable ( ) )
25180	Assert. assertTrue ( "Stopping a run should have failed", pcClient. stopRun ( Integer. parseInt ( PcTestBase. RUN_ID ) ) )
25181	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
25182	assertEquals ( assertion, test )
25183	assertThat ( subject. shouldProcess ( message ), is ( false ) )
25184	assertEquals ( "(12 (abc 34))\\n", found )
25185	assertEquals ( "Items should be generated", PERSON, grid. getItems ( ) )
25186	assertFalse ( filter. shouldInclude ( source, "some.property" ) )
25187	assertEquals ( expected, mergeAclEntries ( existing, aclSpec ) )
25188	ctx. assertEquals ( "Database \\"blah_db\\"", conn. getMessage ( ) )
25189	assertNull ( descriptor. getConstraintsForMethod ( "zap" ) )
25190	assertNotNullOrEmpty ( "Questions should never be null.", questions )
25191	assertEquals ( Response. Status. NOT_MODIFIED. getStatusCode ( ), resource. deleteConnection ( "Name" ). getStatus ( ) )
25192	assertEquals ( "Failed to get the url", "http://www.google.com", iface. wd. getTitle ( ) )
25193	assertThat ( enc, containsString ( "\\"tags\\": [" ) )
25194	Assert. assertEquals ( 4, nbrOfStores )
25195	Assert. assertThat ( "response.statusCode", response. getStatusCode ( ), is ( 200 ) )
25196	assertEquals ( "string", something )
25197	assertFalse ( topic. getSubscribers ( ). contains ( user ) )
25198	assertTrue ( existentFile. exists ( ) )
25199	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
25200	assertEquals ( Types. INTEGER, cInfo. getType ( ) )
25201	assertThat ( cut. getItems ( ), is ( Arrays. asList ( item1, item2 ) ) )
25202	assertThat ( instance. matches ( message, matchers ), is ( false ) )
25203	assertThat ( other, LocalTimeMatchers. sameMinuteOfHour ( date ) )
25204	Truth. assert_ ( )
25205	assertTrue ( polygonSymbolizer. getFill ( )!= null )
25206	assertThat ( output ( outputDirectory, outputPath ), equalTo ( resource ( outputPath ) ) )
25207	assertEquals ( 4, size )
25208	Assert. assertEquals ( 0, actual )
25209	assertEquals ( expected, actual )
25210	assertThat ( getterMethod. getReturnType ( ). getName ( ), is ( "java.lang.Integer" ) )
25211	assertEquals ( "A1", dataCharacter. getName ( ) )
25212	assertSame ( name + " - mismatched enum values", expected, actual )
25213	assertEquals ( "(table (bindings?a))", x )
25214	assertEquals ( direct. length ( ), proxied. length ( ) )
25215	Assert. assertTrue ( person. getPersonDateVoided ( ). getTime ( ) < d. getTime ( ) )
25216	assertNotNull ( httpStack )
25217	assertThat ( webServer. getAddress ( ). getHostName ( ), equalTo ( "localhost" ) )
25218	assertFalse ( capabilityMatcher. matches ( nodeCapabilities, requestedCapabilities ) )
25219	assertEquals ( text, reply )
25220	assertTrue ( contains ( "jcr:read", permissions ) )
25221	assertEquals ( "<h1>Head</h1><table><tr><td>One</td><td>Two</td></tr></table>", cleanHtml )
25222	assertEmptyLinksOk ( linkNames )
25223	assertEquals ( "Not NodeValue.makeInteger()", v1, v2 )
25224	assertEquals ( node, r. get ( "node" ) )
25225	assertEquals ( "Novy|Nova|home,mobile|home", mustache. render ( loadJsonData ( ) ) )
25226	assertEquals ( OutputChangeEvent. OUTPUT_EVENT. OUTPUT_ADDED, outputEvent [ 0 ]. getEvent ( ) )
25227	ctx. assertTrue ( ex instanceof InterruptedException, "Exception should have been thrown" )
25228	assertThat ( renderKitCaptor. getValue ( ). getClass ( ), is ( sameInstance ( SpringRenderKit. class ) ) )
25229	assertEquals ( "Popular wordsEstimator", sparkModel, "Popular wordsEstimator" )
25230	Assert. assertNull ( testSubject. subModel ( new ScadGenerationContextFactory ( ). exclude ( 12 ). create ( ) ) )
25231	assertThat ( "should get interested event", subscriber. lastEvent ( ), equalTo ( GHEvent. ISSUES ) )
25232	assertTrue ( "Project name was not recognized.", jiraTracker. isValidProjectName ( ) )
25233	assertNotNull ( MessagingConfiguration. fetcher ( "VAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "MGXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
25234	assertEquals ( response. getStatus ( ), STATUS200 )
25235	assertSame ( element, node. getElement ( ) )
25236	assertEquals ( "Expected 0 results!", 0, count )
25237	Assert. assertNull ( new CompareTool ( ). compareByContent ( destFilename, sourceFolder + "cmp_copyFields06.pdf", destinationFolder, "diff_" ) )
25238	assertEquals ( "Grux", Albums. lookupAlbum ( spec ) )
25239	assertNotNull ( PhoneNumber. reader ( "TRXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
25240	Assert. assertTrue ( response. getAttachments ( ). hasNext ( ) )
25241	Assert. assertFalse ( isElementConsented )
25242	assertEquals ( Either. right ( ), res )
25243	assertEquals ( "src/test/resources/existing-readable.file", result. getName ( ) )
25244	assertEquals ( "1", id. toString ( ) )
25245	Assert. fail ( )
25246	assertThat ( fetchCount ( ), is ( 1L ) )
25247	assertThat ( StringUtils. trimToEmpty ( response. getPayloadAsString ( ) ), is ( "TEST PAYLOAD" ) )
25248	assertThat ( rendered, is ( "a..\\r\\nb\\r\\n..c" ) )
25249	assertTrue ( errMsgs. contains ( String. format ( coreBundle. getString ( "option.unexpected.parameters" ), "--diffTypes=data" ) ) )
25250	assertEquals ( route, routingTable. find ( new CellAddressCore ( "cell-A" ), Optional. empty ( ), true ) )
25251	assertThat ( plugin. arg, is ( equalTo ( "hello" ) ) )
25252	assertFalse ( detector. isReloadingRequiredFileDoesNotExist ( ) )
25253	Assert. assertFalse ( InstanceValidationUtil. hasValidConfig ( mock. dataAccessor, TEST_CLUSTER, TEST_INSTANCE ) )
25254	assertFalse ( diskInfo. isPresent ( ) )
25255	assertEquals ( Status. OK, result )
25256	inputStreams. assertHasContent ( someInfo ( ), actual, expected )
25257	Assert. assertEquals ( expectedRhoTwoStep, rho, 0.01 )
25258	assertThat ( pickupTruck1, is ( not ( pickupTruck2 ) ) )
25259	assertThat ( StreamUtils. read ( stream ), is ( empty ( ) ) )
25260	assertThat ( actual, is ( expected ) )
25261	assertEquals ( "CarType is not null", CarType. AUDI, carType )
25262	assertEquals ( "test/repo", metadatas. get ( "/test/repo.metadata" ). getName ( ) )
25263	assertFalse ( isModifiable )
25264	assertEquals ( String. class, schemaManager. getPropertyDefinition ( ElementType. VERTEX, "property" ). getPropertyType ( ) )
25265	assertEquals ( "Output order: " + outputOrder, exp, out )
25266	assertEquals ( expectedAddress, gotAddress )
25267	assertFalse ( Bytes. equals ( bytes1, bytes2 ) )
25268	assertEquals ( SampleLocations. MELBOURNE, cargo. getLastKnownLocation ( ) )
25269	assertThat ( actual. get ( "latest" ), containsString ( "1.0.0" ) )
25270	assertTrue ( 5.0f == d. asFloat4 ( ) )
25271	assertEquals ( "", result )
25272	assertEquals ( "SQL92", rootNode. getProperty ( StandardDdlLexicon. PARSER_ID ) )
25273	assertFalse ( validator. validate ( certificateMapping, POST ). passedValidation ( ) )
25274	assertEquals ( "Wrong node key", "name", engine. nodeKey ( root, "name", handler ) )
25275	assertResultSet ( res )
25276	assertEquals ( template, test. build ( ) )
25277	assertThat ( persons, equalTo ( expectedPersons ) )
25278	Assert. assertEquals ( set, otherSet )
25279	assertTrue ( job. waitForCompletion ( true ) )
25280	assertThat ( examplesTable. asString ( ), equalTo ( TABLE_AS_STRING ) )
25281	assertEquals ( klass, ObjectNode. class )
25282	assertFalse ( UrlUtils. isMatch ( consumerUrl, providerUrl ) )
25283	Assert. assertEquals ( 1, fact. getValidators ( fooset ). size ( ) )
25284	assertEquals ( "Wrong size of transform pool", 600, maxSize )
25285	assertEquals ( "ff4j", jdbcStore2. getName ( ) )
25286	assertThat ( result. replaceAll ( "\\\\s+", "" ), equalTo ( expectedOutput. replaceAll ( "\\\\s+", "" ) ) )
25287	assertEquals ( "Parsing of double option does not match expected result.", PROPERTY_DOUBLE_EXPECTED, parseResult, 0.000001 )
25288	ReaderAssert. assertThat ( Conll2006Reader. class, Conll2006Reader. PARAM_SOURCE_LOCATION, "src/test/resources/conll/2006/fi-ref.conll", Conll2006Reader. PARAM_POS_TAG_SET, "stts", Conll2006Reader. PARAM_LANGUAGE, "de" )
25289	assertEquals ( 3, missingNumber. missingNumber ( array ) )
25290	assertEquals ( expected, actual )
25291	assertThat ( auth. clone ( ), is ( auth ) )
25292	assertThat ( whoisObject. getAttributes ( ), hasItems ( new Attribute ( "auth", "MD5-PW $1$d9fKeTr2$Si7YudNf4rUGmR71n/cqk/", "test", null, null, null ), new Attribute ( "auth", "SSO person@net.net" ), new Attribute ( "source", "TEST" ) ) )
25293	assertFalse ( processor. process ( entry ) )
25294	assertThat ( activity. isFinishing ( ), equalTo ( true ) )
25295	assertEquals ( nativeToAscii ( nvDecoded ), nativeToAscii ( javaDecoded ) )
25296	assertEquals ( documentId, options. documentId ( ) )
25297	assertEquals ( expectedFeatures, tokens. get ( 0 ). getAllFeatures ( ) )
25298	Assert. assertEquals ( hash, 0 )
25299	assertEquals ( message, handler. getLastMessage ( ) )
25300	assertThat ( testCallback, is ( expectedCallback ) )
25301	assertEquals ( "goo x, y", result )
25302	Assert. assertEquals ( "{\\"PropertyInt16\\":111,\\"PropertyString\\":\\"TEST A\\"}", resultString )
25303	assertEquals ( 14, test. sumAllowed ( 5, 9 ) )
25304	Assert. fail ( "Cannot create metablocks with the same name." )
25305	assertEquals ( "Wrong number of values", 2, values. size ( ) )
25306	Assert. assertEquals ( count + 1, conectores. size ( ) )
25307	assertTrue ( kbuilder. hasErrors ( ) )
25308	assertEquals ( query1, query2 )
25309	arrays. assertDoesNotContain ( description, null, array ( "Yoda" ) )
25310	Assert. assertEquals ( new int [ ] { 2, 4, 6 }, result )
25311	assertEquals ( "Wrong number of classes.", 2, countClasses ( ) )
25312	assertEquals ( columnInfoActualValue. toString ( ), columnInfo. toString ( ) )
25313	assertThat ( Visitors. readable ( query ), is ( "SELECT * FROM A EXCEPT ALL SELECT * FROM B" ) )
25314	assertEquals ( "Base value is not properly parsed", Long. valueOf ( 2010 ), parsed )
25315	Assert. fail ( "Should have thrown exception" )
25316	assertStatus ( 3, expectedNumRows, expectedNumBytes, expectedReadBytes, queryId )
25317	assertFalse ( rule. isVersionValid ( null ) )
25318	assertEquals ( entry, result )
25319	assertThat ( rs, equalTo ( expected ) )
25320	assertOkAndNotNullResult ( resp )
25321	assertTrue ( b )
25322	assertRefinedObjectClass ( objectClass, RESOURCE_DUMMY_PRIVILEGE_OBJECTCLASS_QNAME, ShadowKindType. ENTITLEMENT, "privilege" )
25323	assertEquals ( ReportFormat. PDF, result. format )
25324	assertFalse ( androidImpl. isSDCardEnoughSpace ( device ) )
25325	validator. assertTestSuiteResults ( 5, 0, 0, 0 )
25326	assertThat ( CountingJob. ourCount, lessThan ( 3 ) )
25327	assertHelpLines ( "Option        Description", "------        -----------", "-a <String>              ", EMPTY )
25328	assertResultIs ( 1L )
25329	assertTrue ( "Path for removed property is wrong: actual=" + listener. getEvents ( ). get ( 0 ). getPath ( ) + ", expected=" + propPath, containsPath ( listener, propPath ) )
25330	assertEquals ( "void blah(int count, MyThing t) throws FishException, FruitException", signature )
25331	assertThat ( clause. toString ( ), is ( "(person)<-[:members]-(group)" ) )
25332	Assert. assertTrue ( "Stub exception was not forwarded.", stubFailed )
25333	Assert. assertTrue ( result. next ( ) )
25334	Assert. assertEquals ( 1, count )
25335	assertThat ( found, hasSize ( 0 ) )
25336	assertEquals ( factIdentifier. getPackageWithoutClassName ( ), null )
25337	assertThat ( path. getString ( NO_OP_ENCODER ), is ( "/{http://www.modeshape.org/1.0}a/{}b/{http://www.modeshape.org/1.0}c/../{}d/./{http://www.modeshape.org/1.0}e/../.." ) )
25338	assertEquals ( count + 2, session. from ( restriction ). list ( restriction ). size ( ) )
25339	assertThat ( tokens, equalTo ( Arrays. < Object > asList ( "1", 2, 3, 4 ) ) )
25340	assertArrayEquals ( data, bb )
25341	assertTrue ( ref. get ( ). isInterrupted ( ) )
25342	assertEquals ( t, new MyRuntimeException ( ) )
25343	assertOut ( "var /** @type {Object} */ a = Object(\\"1\\")" )
25344	assertTrue ( serializedDevice. contains ( symmetricKeySecuredDeviceAuthenticationJson ) )
25345	assertTrue ( widget instanceof Button )
25346	assertEquals ( "Rollup count mismatch", 500, bb. getInt ( ) )
25347	assertThat ( NullNode. getInstance ( ), is ( sut ) )
25348	assertEquals ( BUNDLE_URI + "profile/profile/Hello/", uri. toASCIIString ( ) )
25349	assertEquals ( resolvedAlerts. size ( ), numAlerts )
25350	Assert. assertEquals ( 1, lambda. testCatchingException ( ) )
25351	assertEquals ( expected, requestBody )
25352	assertEquals ( "Check if stuff are equal if template.createNodeAs: ", 1, template. count ( Stuff. class ) )
25353	assertThat ( yamlSource. toString ( ), is ( testUrl ) )
25354	Assert. assertEquals ( count, countStructure. get ( ) )
25355	assertResult ( session )
25356	assertFalse ( returnedValue )
25357	assertTrue ( container. children. isEmpty ( ) )
25358	assertTrue ( pa. isOptionSelected ( ) )
25359	assertEquals ( assertion, log )
25360	assertEquals ( 209L, sum )
25361	assertFound ( iterator, child )
25362	assertThat ( contentString, containsString ( "HUMAN" ) )
25363	assertEquals ( configMap, result )
25364	assertThat ( underTest. passwordsMatch ( password, shiro1Hash ), is ( true ) )
25365	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
25366	assertEquals ( expected, actual )
25367	assertSame ( dataSource, factory. getDataSource ( descriptor ) )
25368	assertEquals ( "1.23", rp. toNumberParam ( ourCtx ). getValue ( ) )
25369	assertTrue ( p. getTotalElements ( ) > 0 )
25370	assertTrue ( getNoErrorMsg ( ), result )
25371	assertEquals ( service. postProcess ( "<pre>int good=2;[-code][-code]</pre>" ), "<pre>int good=2;[-code][-code]</pre>" )
25372	assertEquals ( multiKVFilter ( columnComparison ( CompareOp. EQUAL, A_STRING, B_STRING ), TWO_BYTE_QUALIFIERS ), filter )
25373	assertEquals ( expected, result )
25374	Assert. assertTrue ( "did not get expected time", timeVal > 0 )
25375	assertThat ( "Color", nodeData. getValue ( TermColor. class, "background" ), is ( tf. createColor ( 0, 128, 0 ) ) )
25376	Assert. assertEquals ( "cleaned offset not found", new String ( b ), cleanedOffset )
25377	assertIndexedRecord ( typeDesc, indexedRecord )
25378	assertEquals ( "������������������������������������������������������������������������������������
25379	Assert. assertTrue ( clientBoList. size ( ) > 0 )
25380	Assert. assertTrue ( childRenderer instanceof DummyProcessableSvgNodeRenderer )
25381	assertNull ( FreeStyleProject. findFreeStyleProject ( projectA, projectB ) )
25382	assertThat ( verifyModelVersionsSaved ( ), is ( ImmutableMap. of ( "foo", "1.1", "bar", "1.1" ) ) )
25383	assertEquals ( "1", result )
25384	assertEquals ( expected, e. evaluate ( ), 0.0 )
25385	assertThat ( out. toString ( ), equalTo ( "|one|two|\\n|11|12|\\n|21|22|\\n" ) )
25386	assertEquals ( inputString, outputString )
25387	assertEqualsNonTransient ( code, clone, SchemaCache. getSchema ( code ) )
25388	assertEquals ( expResults, results )
25389	assertEquals ( "Map.toString() returned an error", "ERROR", result )
25390	Assert. assertEquals ( 0, norm, 1.0e-15 )
25391	assertEquals ( 10, content. split ( "\\n" ). length )
25392	Assert. assertNotNull ( addressResultsDto )
25393	Assert. assertEquals ( Arrays. asList ( "1", "2", "3" ), res )
25394	assertEquals ( "The strings should be equal", "English Sentence", diacriticsString )
25395	Assert. assertEquals ( MessageFormat. format ( "double d_0, number, #}", repetitions - 1 ), res )
25396	assertEquals ( 0, byteBufResultCaptor. getResult ( ). refCnt ( ) )
25397	assertThat ( runs, contains ( asList ( 1, 2 ), asList ( 2, 3 ), asList ( 3, 4 ), asList ( 4, 5 ) ) )
25398	assertThat ( objectMapper. fromJson ( objectMapper. toJson ( map ) ), is ( objectMapper. fromJson ( "{\\"typeName\\":\\"Processes\\",\\"fields\\":[{\\"name\\":\\"process\\",\\"type\\":\\"ConversionRateProcess[]\\",\\"properties\\":[\\"REQUIRED\\"]}]}" ) ) )
25399	assertEquals ( "Wrong number of arguments", 1, commandLine. getArgs ( ). size ( ) )
25400	assertThat ( result, equalTo ( false ) )
25401	assertEquals ( "8567877120", buffer. toString ( ) )
25402	assertEquals ( controllerName, "io.swagger.oas.sample.controllers.MyTag" )
25403	Assert. assertEquals ( 204, res. getStatus ( ) )
25404	assertEquals ( timeInstant. getIntervalType ( ), DateIntervalType. HOUR )
25405	Assert. assertEquals ( message, receivedMessage )
25406	assertTrue ( resource + " is not valid", result. isValid ( ) )
25407	assertThat ( person, hasToString ( "Person {first name: 'John'" ) )
25408	assertTrue ( jarRuntimeInfo. isClassLoaderReusable ( ) )
25409	assertEquals ( "B", cell. text ( ). get ( ) )
25410	assertEquals ( "<script>\\n" + "  <!--\\n" + "    document.write('</scr' + 'ipt>');\\n" + "  // -->\\n" + "</script>", node. body ( ). html ( ) )
25411	assertEquals ( Permission. Type. MENU, entity. getType ( ) )
25412	Assert. assertTrue ( matcher. match ( rule, testNode2, parent ) )
25413	assertEquals ( 0, appNodes. size ( ) )
25414	FixtureAsserts. assertStringMatchesJsonFixture ( "DeleteUser by admin response render to HAL+JSON", actualResponse, "/fixtures/hal/user/expected-admin-delete-user.json" )
25415	assertFalse ( "BloomFilter#not should have inverted all bits", bf. bits. intersects ( origBitSet ) )
25416	assertEquals ( 0, betweenTwoSets. solution ( A, B ) )
25417	assertTrue ( start. success ( ) )
25418	assertIAEWhenAccessingResult ( service. prepare ( query ) )
25419	assertEquals ( 200, response. getStatus ( ) )
25420	assertEquals ( stringLine, sut )
25421	assertVersions ( ctx, "9" )
25422	assertEquals ( 69, result )
25423	assertEquals ( "Conversion did not match", value, to )
25424	assertThat ( component. lastUpdated ( ), is ( expected ) )
25425	Assert. assertTrue ( "Incorrect file written: " + i, outStream. isOpen ( ) )
25426	shorts. assertNotLessThan ( description, null, ( short ) 6 )
25427	assertEquals ( "", result )
25428	assertTrue ( saveOntology ( o ). contains ( i ) )
25429	assertEquals ( 1, lst. size ( ) )
25430	Assert. assertEquals ( rtpPacket. getTimestamp ( ), 0xFFFFFFFF, "Timestamp should be 0xFFFFFFFF." )
25431	assertThat ( iconCaptor. getValue ( ), is ( ":ghost:" ) )
25432	assertArrayEquals ( new double [ ] { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
25433	assertTrue ( player. isOnline ( ) )
25434	assertEquals ( "A1", a. getId ( ) )
25435	assertThat ( uris, is ( asList ( new URI ( "http://baseurl/static/rapture/baseapp-debug.js" ), new URI ( "http://baseurl/static/rapture/extdirect-debug.js" ), new URI ( "http://baseurl/static/rapture/bootstrap.js" ), new URI ( "http://baseurl/static/rapture/d3.v4.min.js" ), new URI ( "http://baseurl/extjs-script-1-test-1.js" ), new URI ( "http://baseurl/extjs-script-1-test-2.js" ), new URI ( "http://baseurl/extjs-script-2-test-2.js" ), new URI ( "http://baseurl/static/rapture/test-1-debug.js" ), new URI ( "http://baseurl/static/rapture/test-2-debug.js" ), new URI ( "http://baseurl/static/rapture/app.js" ) ) )
25436	Assert. assertNotNull ( addressResultsDto )
25437	assertEquals ( expected, actual )
25438	assertThat ( period, equalTo ( new TimePeriod ( SECOND, 61.0 ) ) )
25439	assertions. doesNotContainKey ( key )
25440	assertEquals ( Nd4j. ones ( 1, 10 ), aDeserialized )
25441	assertEquals ( "", html )
25442	assertArrayEquals ( a. toArray ( ), A. toArray ( ), 0.01 )
25443	assertTrue ( "Table " + tableName + " does not exist",! tableName. isEmpty ( ) )
25444	assertThat ( supported, is ( true ) )
25445	assertEquals ( forumObject. getForumUuid ( ), forumUuid )
25446	assertEquals ( expectedURI, request. getUri ( baseURI ) )
25447	assertThat ( Certificates. getOperatorInternalCertificateData ( ), nullValue ( ) )
25448	assertEquals ( fakeContent, content )
25449	assertNull ( props. toString ( ), props. getProperty ( "old" ) )
25450	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
25451	Assert. assertTrue ( _c. canConvertTo ( Float. class ) )
25452	assertThat ( references. size ( ), is ( 0 ) )
25453	Assert. assertNotNull ( classUnderTest. getTitle ( ) )
25454	assertEquals ( 2, retDepartments. size ( ) )
25455	assertThat ( zhong, not ( hasKey ( firstName ) ) )
25456	assertEquals ( TestClass1. class. getName ( ), service. injectedLogger. getName ( ) )
25457	assertEquals ( testexpect, JsonbUtils. combine ( test, testparam ) )
25458	assertThat ( clock. startsAt ( date ), is ( true ) )
25459	assertThat ( match, is ( "lite-1" ) )
25460	assertTrue ( isEqual ( mockStopPoint, actualStopPoint ) )
25461	assertThat ( address, hasKey ( countryCode ) )
25462	assertEquals ( Status. NOT_FOUND, response. getClientResponseStatus ( ) )
25463	Asserts. check ( targetHosts. size ( ) > 0, "fail test" )
25464	Assert. assertEquals ( 2, map. size ( ) )
25465	Assert. fail ( "createDNASequenceWithQualityScores(null) expected IllegalArgumentException" )
25466	Assert. assertNotNull ( "No se ha generado el CSV", infoDocumento )
25467	assertEquals ( frameData1, frameData2 )
25468	assertEquals ( R. style. Theme_Default_Dialog, themeResId )
25469	Assert. assertEquals ( "SELECT INTERVAL '123-2' YEAR(3)\\nTO MONTH\\nFROM DUAL;\\n", text )
25470	assertEquals ( truncated. size ( ), pvArray. length )
25471	assertEquals ( 5, missingElem. solution ( array ) )
25472	assertEquals ( expectedFilteredRecommendedItems, actualFilteredRecommendedItems )
25473	assertEquals ( asList ( trace ( mdcValues, message, args ) ), testLogger. getLoggingEvents ( ) )
25474	assertEquals ( 0, parameters. size ( ) )
25475	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Parameter/>", elem. toXml ( ) )
25476	assertFalse ( SUT. isQuiescent ( ) )
25477	assertEquals ( Result. FAIL, type. apply ( item ) )
25478	assertTrue ( params == null )
25479	assertSame ( value, bound. value ( ) )
25480	assertThat ( jsonGeneratorParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/Exception2.json" ) ) )
25481	assertEquals ( model, RdfTestHelpers. parseRdf ( RdfSerializer. TASK_SIMPLE_STATEMENTS. rdf ) )
25482	this. assertTokenizesTo ( _t, json, jsonGen. images. toArray ( new String [ jsonGen. images. size ( ) ] ), jsonGen. types. toArray ( new String [ jsonGen. types. size ( ) ] ), jsonGen. datatypes. toArray ( new String [ jsonGen. datatypes. size ( ) ] ), jsonGen. nodes. toArray ( new IntsRef [ jsonGen. nodes. size ( ) ] ), incr, jsonGen. shouldFail )
25483	assertEquals ( response. getContentAsByteArray ( ), validImage )
25484	assertArrayEquals ( new Item [ ] { FOURTH_ITEM, THIRD_ITEM }, actual. toArray ( new Item [ 2 ] ) )
25485	assertCentroid ( polyline, new Point2D ( 153, 28 ) )
25486	Assert. assertEquals ( "file is not in new resource", testingProperties. getProperty ( TestingPropertiesHelper. IRODS_SECONDARY_RESOURCE_KEY ), actual. getResourceName ( ) )
25487	assertThat ( ids, containsInAnyOrder ( patId, medId, moId ) )
25488	this. assertAnalyzesTo ( _a, "<http://dbpedia.org/resource/The_Kingston_Trio>", new String [ ] { "kingston", "trio", "the_kingston_trio", "http://dbpedia.org/resource/the_kingston_trio" }, new String [ ] { "word", "word", "word", "word" }, new int [ ] { 2, 1, 0, 0 } )
25489	assertNull ( selector. getProxy ( repo ) )
25490	assertThat ( driver. findElement ( By. cssSelector ( "h2" ) ). getText ( ), is ( "Error..." ) )
25491	assertArrayEquals ( getPixels ( expected, 0, 0, expected. getWidth ( ), expected. getHeight ( ), null ), getPixels ( actual, 0, 0, actual. getWidth ( ), actual. getHeight ( ), null ) )
25492	assertThat ( status, is ( 204 ) )
25493	assertThat ( XMLAdapter. XML_TIME. translate ( cal ), is ( expected ) )
25494	assertTrue ( stack2. isEmpty ( ) )
25495	assertEquals ( MinaTransporter. class, ExtensionLoader. getExtensionLoader ( Transporter. class ). getExtension ( name ). getClass ( ) )
25496	assertEquals ( "test", result. getName ( ) )
25497	assertEquals ( anotherEntity, copy. getEntityAProperty ( ) )
25498	Assert. assertNotNull ( result )
25499	assertEquals ( playerProperties. getNext ( ), stringArgumentCaptor. getValue ( ) )
25500	Assert. fail ( "AllocateRequest failed as expected because AM was not registered" )
25501	assertEquals ( np. getNumberOfRoutes ( lowerLayer ), 2 )
25502	assertEquals ( "Expected at least 2 items", 2, items. size ( ) )
25503	Assert. assertEquals ( newMaster, currentMaster )
25504	assertEquals ( PROJECT_ID, options. projectId ( ) )
25505	assertEquals ( listSize, result. size ( ) )
25506	assertSame ( "Flag not set", f, wrapper. flags )
25507	assertEquals ( noException, 0 )
25508	assertThat ( name. getSegments ( ), contains ( "lower" ) )
25509	assertThat ( javaDocComment, not ( containsString ( "(Required)" ) ) )
25510	Assert. assertEquals ( 2, result. size ( ) )
25511	assertThat ( graphQlSchemaBuilder. build ( ), is ( notNullValue ( ) ) )
25512	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPdf, cmpPdf, destinationFolder, "diff_" ) )
25513	assertTrue ( "getMetric should return the metric value passed in.", Objects. equal ( basicMetric, victim. getMetric ( ) ) )
25514	assertTrue ( organizationalUnitController. canDeleteOrgUnit ( mock ( OrganizationalUnit. class ) ) )
25515	Assert. assertEquals ( 0, sync ( cache. size ( ) ). intValue ( ) )
25516	Assert. assertEquals ( ColorConstants. RED, p. getRenderer ( ). < TransparentColor > getProperty ( Property. FONT_COLOR ). getColor ( ) )
25517	assertNull ( incompleteActivationRule )
25518	Assert. assertTrue ( fsView. getFileStatus ( new Path ( "/" ) ). isDirectory ( ) )
25519	assertEquals ( "urn:nfc:example.com", uriRecord. getUri ( ) )
25520	assertEquals ( 1, countValue )
25521	assertions. containsOnly ( values )
25522	assertThat ( text, is ( "label" ) )
25523	assertOut ( "x=100" )
25524	assertParseTree ( rootNode ( "", node ( "digits", Arrays. < String > asList ( ), "", stringNode ( "d", "" ) ) ), tree )
25525	assertEquals ( nParquetRecords, nAvroRecord )
25526	assertThat ( "when allowed", withUserRestriction ( tlRule. getListener ( ), uRestr ). apply ( new GHPullRequest ( ) ), is ( true ) )
25527	Assert. assertNotNull ( doc )
25528	assertEquals ( expResult, result )
25529	assertSame ( locale, response. getContentLanguage ( ) )
25530	assertLookup ( breaks, values, srcImg, DataBuffer. TYPE_DOUBLE )
25531	assertTrue ( wi. waitForCreation ( ) )
25532	assertEquals ( 10.78f, doc. field ( "firstNumber" ) )
25533	outputValidator. assertTestSuiteResults ( 1, 0, 0, 0 )
25534	assertPersonProfile ( person )
25535	assertThat ( changeScript. getContent ( ), is ( "Hello\\nThere!\\n" ) )
25536	assertEquals ( expectedFiles, files )
25537	assertFalse ( tuple. delete ( "field" ) )
25538	Assert. fail ( "No Service1 was generated" )
25539	assertTrue ( query. getIndexConstraints ( SPATIAL_TEMPORAL_INDEX ). isEmpty ( ) )
25540	assertThat ( results, contains ( ( Matcher ) hasEntry ( "code", "WGT234" ) ) )
25541	assertTrue ( stmt instanceof DropTableNode )
25542	assertTrue ( rewrittenXml. contains ( "http://127.0.0.1:2000/wsa/wsa/wsa/express/endpoint/1" ) )
25543	assertAplicacion ( aplicacion )
25544	assertEquals ( ARGS_TO_STRING, sink. result ( ) )
25545	assertEquals ( "GREENWICH", MarshallingUtils. marshall ( pm ) )
25546	assertThat ( target. parse ( ), is ( false ) )
25547	assertEquals ( "Hi " + name, result )
25548	assertThat ( result, is ( "abc" ) )
25549	assertThat ( the ( name, be ( equalTo ( "Alex" ) ). or ( be ( startsWith ( "B" ) ) ) ), is ( false ) )
25550	assertThat ( partition, is ( newPartition ( ) ) )
25551	assertEquals ( "test", map. get ( "test" ) )
25552	assertEquals ( "Hello World!", response. getMessage ( ) )
25553	Assert. assertEquals ( 1, s, Math. ulp ( 1d ) )
25554	assertThrows ( ( ) -> instance. matcherFor ( matcher ) )
25555	assertThat ( ( double ) stopwatch. getMinimumDuration ( ). getDuration ( TimeUnit. MILLISECONDS ), is ( closeTo ( 50, 50 ) ) )
25556	Assert. assertTrue ( tempFontFile. exists ( ) )
25557	assertThat ( Modifier. isPrivate ( constructor. getModifiers ( ) ), is ( false ) )
25558	Assert. assertEquals ( "MNOPRSTUVWXYZ", text )
25559	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Enqueue>" + "<genericTag>" + "Some text" + "</genericTag>" + "</Enqueue>", elem. toXml ( ) )
25560	assertEquals ( 2, statisticsManager. getUpdatesCount ( ) )
25561	assertEquals ( 2, list. size ( ) )
25562	assertNotNull ( "State is null", entity )
25563	assertTrue ( "there are scenario failures", results. getFailCount ( ) == 0 )
25564	assertTrue ( processor. isValid ( new UnchainedTransform ( ) ) )
25565	assertOut ( "var /** @type {Array} */ a = org.apache.royale.utils.Language.arrayAsVector(['Hello', 'World'], 'String')" )
25566	assertEquals ( FUND_A_VALUE + FUND_B_VALUE, client. getTotalValue ( ), 0.001 )
25567	assertEquals ( 0, map. size ( ) )
25568	assertEquals ( false, result )
25569	assertArrayEquals ( TestVectors. REGISTRATION_RESPONSE_DATA, encodedBytes )
25570	assertThat ( isExpectedData, is ( true ) )
25571	assertEquals ( io. motown. domain. api. chargingstation. ReservationStatus. UNAVAILABLE, reservationStatus )
25572	assertFalse ( stringBuffer. toString ( ). equals ( "" ) )
25573	assertEquals ( 1234, executeTestMethod ( test, Integer. class, null, 1234 ). intValue ( ) )
25574	assertTrue ( copy. getAreNodeLabelsAcceptedByRM ( ) )
25575	assertEquals ( count_addresses, results. size ( ) )
25576	assertTrue ( connection. createChannel ( 1 ). isClosed ( ) )
25577	assertEquals ( z, instance. z )
25578	assertEquals ( "Expected 0 results!", 0, n )
25579	assertSame ( DUMMY, SegmentRegistry. get ( ID ) )
25580	assertEquals ( 2, post. getComments ( ). size ( ) )
25581	Assert. assertEquals ( 5.0, a. manhattanNorm ( ), Matrices. EPS )
25582	assertTrue ( future. isDone ( ) )
25583	Assert. assertEquals ( configuration. getIntField ( ), result. getIntField ( ) )
25584	assertEquals ( data, decryptedBytes. getString ( ) )
25585	assertNull ( results )
25586	assertNull ( resolved )
25587	assertTrue ( sipPhoneSender. register ( requestURI, "no_user", "no_password", "sip:sender@127.0.0.1:5080;transport=tcp;lr", TIMEOUT, TIMEOUT ) )
25588	assertArrayEquals ( data, ( double [ ] ) deserialize. readObject ( double [ ]. class ), 0.0001 )
25589	assertThat ( keys, is ( Arrays. asList ( keys ) ) )
25590	assertions. isNotLessThan ( expected )
25591	assertNotNull ( result )
25592	Assert. assertTrue ( myRecordList. size ( ) == 0 )
25593	subscriber. assertUpdates ( expectUpdates )
25594	assertEquals ( 106, buffer. get ( ) )
25595	Assert. assertFalse ( ModuleUtil. matchRequiredVersions ( openmrsVersion, requiredOpenmrsVersion ) )
25596	assertEquals ( 0, eventRealPaths. size ( ) )
25597	assertEquals ( expectedName, generated )
25598	assertEquals ( TaxonomyPrinter. getHashString ( taxonomy1 ), TaxonomyPrinter. getHashString ( taxonomy2 ) )
25599	assertThat ( repository, notNullValue ( ) )
25600	assertThat ( getValues ( query ( "mntner:        test-mnt", "source" ), "key" ), contains ( "mntner:        test-mnt" ) )
25601	assertEquals ( "value", value )
25602	assertEquals ( "remote-node-id", eventCaptor. getValue ( ). getRemoteNodeId ( ) )
25603	assertEquals ( accountListToPersist. size ( ), accountFromDatastoreList. size ( ) )
25604	Assert. assertEquals ( 1, statementList. size ( ) )
25605	assertThat ( replication, is ( instanceOf ( PartitionedTableReplication. class ) ) )
25606	assertNull ( options. objectFactory ( ) )
25607	assertEquals ( 5, value. asInt ( 10 ) )
25608	assertEquals ( body. toString ( ), "operation _timeout" )
25609	assertEquals ( BigInteger. valueOf ( 5000L + 5000 ), readPoint. getId ( ) )
25610	assertEquals ( 1, observer. getCountingMessages ( ) )
25611	assertEquals ( 200, response. getStatus ( ) )
25612	assertNotNull ( personDemographics )
25613	assertFalse ( "Did not create DatagramSocket", socket == null || socket instanceof Socket )
25614	assertEquals ( 2, postComments. size ( ) )
25615	assertEquals ( "did not get expected number of rows", NB_ROWS, results. length )
25616	assertEquals ( String. valueOf ( ReturnCode. DIGITS_NOT_FOUND. code ( ) ), eventCaptor. getValue ( ). getParameter ( "rc" ) )
25617	assertThat ( errors. getMessages ( ), empty ( ) )
25618	assertions. containsSequence ( sequence )
25619	assertNotNull ( inputStream )
25620	assertTrue ( ca. getFallbackParameters ( ). equals ( ap2 ) )
25621	assertEquals ( 0, branch_conditions. size ( ) )
25622	assertNotNull ( session )
25623	assertThat ( info. getServerPod ( SERVER ), sameInstance ( pod ) )
25624	Assert. assertTrue ( "world,peace". equals ( join ) )
25625	Assert. assertEquals ( JSONNegativeInfinity, result )
25626	assertTrue ( d1 instanceof PublicCloneable )
25627	assertionErrorCreator. multipleAssertionsError ( errors, description )
25628	assertEquals ( "{\\"version\\": \\"3.0.0\\", \\"gauges\\": {}, \\"counters\\": {}, \\"histograms\\": {}, \\"meters\\": {}, \\"timers\\": {}}", bson. toJson ( writerSettings ) )
25629	assertEquals ( "void f(void* target, void* p0) {\\n" + "    struct f_0001 {int m1;};\\n" + "    ((void (*)(struct f_0001)) target)(*((struct f_0001*)p0));\\n" + "}\\n", BridgeMethodCompiler. createBridgeCWrapper ( functionType. getReturnType ( ), functionType. getParameterTypes ( ), functionType. getParameterTypes ( ), "f" ) )
25630	assertThat ( "Output model created", outFile. exists ( ), is ( true ) )
25631	assertEquals ( 7, encounters. size ( ) )
25632	Assert. assertEquals ( json, writer. toString ( ) )
25633	assertEquals ( expectedDetail, e. getDetail ( ) )
25634	assertFalse ( question. isSolvedBy ( answer ) )
25635	assertFalse ( c. isValidForSqlQuery ( ) )
25636	Assert. fail ( "Should have thrown an exception" )
25637	assertEquals ( "private", entity. getModifiers ( ). get ( 0 ) )
25638	assertNull ( exception )
25639	Assert. assertEquals ( "OK", result )
25640	assertThat ( testStatus, is ( expectedStatus ) )
25641	assertNotNull ( jmxServer )
25642	assertFalse ( cnpjValidator. isEligible ( null ) )
25643	assertNotNull ( Aws. reader ( ). read ( ) )
25644	Assert. assertNull ( actual )
25645	assertEquals ( Arrays. asList ( "A", "B", "C", "D" ), results )
25646	assertNotNull ( entity. getId ( ) )
25647	Assert. assertEquals ( ServerParse. ROLLBACK, sqlType )
25648	Assert. assertFalse ( "Unexpected acquired read lock", readLockAcquired )
25649	assertEquals ( object3, actualObjects. get ( 0 ) )
25650	assertEquals ( expected, actualQuery )
25651	assertThat ( module. getRequiredModulesMap ( ), is ( equalTo ( Collections. EMPTY_MAP ) ) )
25652	Assert. assertEquals ( "Hello Kermit!", response. getOut ( ). getBody ( String. class ) )
25653	assertEquals ( System. currentTimeMillis ( ) / 1000 + 500, subscription. getExpirationTime ( ), 10.0 )
25654	assertThat ( formatter. format ( PlainDate. of ( 1711, 1, 30 ) ), is ( "AD-1711/13" ) )
25655	assertEquals ( 1, response. getBody ( ). getEntities ( ). size ( ) )
25656	assertThat ( flights, hasSize ( 0 ) )
25657	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPath, cmpPath, destinationFolder, diff ) )
25658	assertUserPropertyFile ( USER_NAME )
25659	Assert. assertEquals ( expected, actual )
25660	Assert. assertEquals ( expectedNode. toString ( ), pdoc. toString ( ) )
25661	assertEquals ( 0, aiEvent. getData ( ). size ( ) )
25662	assertEquals ( valorTest, valor )
25663	assertTrue ( "Trust manager should be created", ops. exists ( TRUST_MNGR_ADDRESS ) )
25664	assertResultSet ( res )
25665	assertEquals ( "unexpected errors: " + equeue, 0, equeue. errors. size ( ) )
25666	assertResult ( session )
25667	assertEquals ( "8e7d8e-5e9d-43e9-8d8e7b9", orderId )
25668	assertEquals ( Arrays. asList ( p1, p2, p3, p4 ), list )
25669	assertThat ( result. size ( ), is ( 0 ) )
25670	observer. assertObservations ( "@Initialized HttpSession", session )
25671	Assert. assertEquals ( "collaborator: edit", c. toString ( ) )
25672	assertEqualsLQ ( A, lq. factor ( new DenseMatrix ( A ) ) )
25673	assertEquals ( expecteds, actuals )
25674	assertEquals ( 8080, toTest )
25675	assertEquals ( allPlanets. size ( ), 3 )
25676	assertEquals ( expResult, result )
25677	assertTrue ( result. isResultOK ( ) )
25678	context. assertTrue ( res. failed ( ) )
25679	assertEquals ( setOf ( "ashlux@gmail.com", "mickeymouse@disney.com", "ashhlux@gmail.com" ), internetAddresses )
25680	assertTrue ( field. isRequired ( ) )
25681	assertEquals ( NOT_DECODED, map, object. getObjects ( ) )
25682	assertEquals ( "foo", field. getValue ( ) )
25683	assertFailureLogPresent ( instance, "failingTask" )
25684	assertEquals ( expectedPolicy, builtPolicy )
25685	assertTrue ( smu. reasoner. containsAxiom ( graph. getSourceOntology ( ) ) )
25686	assertNull ( primaryKey )
25687	Assert. assertEquals ( 403, response. getStatus ( ) )
25688	testHelper. assertTaskListenerTimerJobCreated ( "userTask" )
25689	assertEquals ( "/component=myComp/version=1.2.json", dispatchCriteria )
25690	Assert. assertTrue ( "Expected non-optimal coverage: ", best. getCoverage ( ) < 1.0 )
25691	Assert. assertEquals ( "select tuple_0 from org.babyfishdemo.jpacriteria.entities.Company tuple_0 " + "inner join tuple_0.departments department_0 on tuple_0.name like '%a%' " + "where tuple_0.department_0.name like '%a%' ", template. toString ( ) )
25692	assertEquals ( "http://apache.org/example", uri. toString ( ) )
25693	assertContentSame ( rs, rc, columnParam1 )
25694	assertThat ( result, is ( nullValue ( ) ) )
25695	assertSame ( expected, actual )
25696	assertEquals ( documento, documentoCreado )
25697	assertTrue ( result instanceof String [ ] )
25698	assertEquals ( 0, p. getStart ( ) )
25699	assertThat ( future, is ( not ( DisabledFuture. INSTANCE ) ) )
25700	assertEquals ( expectedQuery, actualQuery )
25701	assertEquals ( s, s )
25702	assertThat ( FileUtils. readFileToString ( new File ( tempCopyFile ) ), CoreMatchers. is ( cp_file. asText ( ) ) )
25703	assertNotNull ( id )
25704	assertEquals ( "http://www.w3.org/1999/02/22-rdf-syntax-ns#type", RDFUtils. stringForRDFNode ( rdfNod ) )
25705	Assert. assertEquals ( ScoreLangConstants. SUCCESS_RESULT, result )
25706	assertEquals ( "misc/A.class", forest. getRoot ( ). getName ( ) )
25707	assertEquals ( "abc, 34\\n", found )
25708	Assert. assertEquals ( "Invalid HUs retrieved", Collections. emptyList ( ), huSelectModel. createHUQueryBuilder ( ). setErrorIfNoHUs ( false, null ). list ( ) )
25709	assertThat ( spiralOrder ( matrix ), Matchers. is ( Lists. newArrayList ( 9, 9, 4, 6, 6, 8, 2, 1 ) ) )
25710	assertThat ( rs. getInt ( 1 ), is ( 0 ) )
25711	assertThat ( build, is ( notNullValue ( ) ) )
25712	assertEqualsIgnoreLineEnding ( output, "{\\n" + "  \\"id\\" : 1,\\n" + "  \\"name\\" : \\"Sayings of the Century\\",\\n" + "  \\"age\\" : 1,\\n" + "  \\"age\\" : 1,\\n" + "  \\"age\\" : 1,\\n" + "  \\"age\\" : 1,\\n" + "  \\"name\\" : \\"Sword of Honour\\"\\n" + "}, {\\n" + "  \\"id\\" : 2,\\n" + "  \\"name\\" : \\"Sword of Honour\\"\\n" + "}, {\\n" + "  \\"id\\" : 3,\\n" + "  \\"name\\" : \\"Sword of Honour\\"\\n" + "}, {\\n" + "  \\"id\\" : 4,\\n" + "  \\"name\\" : \\"Sword of Honour\\"\\n" + "}, {\\n" + "  \\"id\\" :
25713	assertEquals ( "void ;\\n", found )
25714	assertEquals ( 204, response. getStatus ( ) )
25715	Assert. assertTrue ( results. isEmpty ( ) )
25716	assertTrue ( isSuccess )
25717	assertUFTFields ( fields )
25718	assertThat ( iri, is ( not ( nullValue ( ) ) ) )
25719	assertNull ( dispatcher. getListener ( 0 ) )
25720	assertEquals ( "LOCAL: \\nName1\\nName2\\nUserFN UserLN\\naddr2\\naddr1\\n121212 City1\\nGermany", bpartnerBL. mkFullAddress ( bPartner, bpLocation, user, null ) )
25721	Assert. assertEquals ( 43, a. getCalculatedAge ( ) )
25722	assertEquals ( 1, sink. getTotalGroups ( ) )
25723	mockEndpoint. assertIsSatisfied ( )
25724	assertEquals ( "urn:cxf", action )
25725	assertEquals ( "Wrong number of URLs", 2, urls. length )
25726	assertEquals ( "testFilePath_1", netrc. getFile ( ). getName ( ) )
25727	Assert. assertEquals ( StatusCodes. BAD_REQUEST, result. getStatusLine ( ). getStatusCode ( ) )
25728	assertEquals ( webSocketHandler. calculateHeaderSize ( WebSocketHeader. PAYLOAD_ZERO ), 0 )
25729	assertNotNull ( geomConverter )
25730	assertFalse ( s instanceof Cloneable )
25731	assertEquals ( "Strategy decision not expected", NodeProvisioner. StrategyDecision. PROVISIONING_COMPLETED, decision )
25732	assertThat ( nextRTCEventListener. get ( ), is ( object ) )
25733	assertThat ( dateTimeService. getDate ( ), is ( DATE ) )
25734	Assert. assertEquals ( false, handler. getAcceptAnonymous ( ) )
25735	assertThat ( actual, is ( equalTo ( expected ) ) )
25736	Assert. assertEquals ( "C7 (indexPath = 1.1, namePath = C7->C7)\\n" + "    O1 (indexPath = 1.1, namePath = C7->O1)\\n" + "    O2 (indexPath = 1.2, namePath = C7->O2)\\n" + "    Na1 (indexPath = 1.2.2, namePath = C7->O2->Na1)\\n" + "        C6 (indexPath = 1.3.1.1.1, namePath = C7->C6->C6->C1)\\n" + "            C4 (indexPath = 1.3.1.1.1, namePath = C7->C6->C5->C4)\\n" + "            H5 (indexPath = 1.3.1.3, namePath = C7->C6->C5->H5)\\n" + "            C2 (indexPath = 1.3.2.1.3, namePath = C7->C6->C1->H2)\\n"
25737	assertThat ( index. exists ( ), is ( true ) )
25738	Assert. assertEquals ( "value of one", one, value )
25739	assertThat ( DateInterval. parseISO ( "P14D/2012-01-1" ), is ( expected ) )
25740	assertThat ( irsApplicable, equalTo ( true ) )
25741	assertTrue ( payload. needsBuild ( getProject ( ) ) )
25742	assertEquals ( HttpStatus. NO_CONTENT, responseEntity. getStatusCode ( ) )
25743	assertEquals ( 500, status )
25744	assertEquals ( query, query2 )
25745	assertEquals ( "product", response. getView ( ) )
25746	assertNotNull ( bundleA )
25747	assertThat ( I18nUtil. getLocale ( ), is ( nullValue ( ) ) )
25748	Assert. assertNull ( "queue message was returned", sqsMessage )
25749	assertEquals ( "Wrong number of names", 2, multiMap. size ( ) )
25750	assertEquals ( "string[]", param. getRuntimeType ( ) )
25751	assertEquals ( 2, dao. getLocationsHavingAllTags ( list1 ). size ( ) )
25752	assertEquals ( 0, result. length )
25753	assertThat ( infos. length, is ( 0 ) )
25754	arrays. assertDoesNotHaveDuplicates ( description, actual )
25755	assertSqlCanBeParsedAndDeparsed ( stmt )
25756	assertTrue ( output, output. matches ( "(?s).*execute a script.*" ) )
25757	XMLAssert. assertXpathEvaluatesTo ( "0", childrenCountBefore, result. asXML ( ) )
25758	assertSame ( result1, result )
25759	assertEquals ( results. size ( ), 3 )
25760	assertNull ( primaryKeyDesc )
25761	assertArrayEquals ( "The view paths array is incorrect", new String [ ] { "/tmp", "/load tmp" }, scm. getViewPaths ( EMPTY_VARIABLE_RESOLVER ) )
25762	assertTrue ( TypeUtils. shouldCreateNewClass ( property, null ) )
25763	assertEquals ( BPResultType. ERROR, testResult. getResultType ( ) )
25764	Assert. assertNotNull ( version )
25765	assertEquals ( expResult, result )
25766	Assert. assertTrue ( handler. disconnectCount > 0 )
25767	assertTrue ( room. containsKey ( "etag" ) )
25768	tester. assertRenderedPage ( InputTypes. class )
25769	assertNull ( property. getValue ( ) )
25770	assertThat ( actual, is ( expected ) )
25771	assertEquals ( arr, resultArr )
25772	builderUnderTest. recorder. assertInvocation ( "removePropertyFilters", Arrays. asList ( testFilter1, testFilter2 ) )
25773	assertArrayEquals ( dummyByte, dummySessionDocument. getSerializedDocumentForm ( ) )
25774	assertNotNull ( m )
25775	assertTrue ( isValid )
25776	assertNotNull ( target )
25777	assertEquals ( NL + "  Pre[1] xmlns=\\"A\\"" + NL + "    Pre[4] xmlns=\\"D\\"" + NL + "      Pre[5] xmlns=\\"G\\"" + NL + "    Pre[7] xmlns=\\"F\\"", context. data ( ). nspaces. toString ( ) )
25778	assertTrue ( expectedOutput. compare ( output, TOLERANCE ) )
25779	assertEquals ( "{f1:'b'}", x. getExample ( ) )
25780	Assert. assertEquals ( "A \\nB \\nC \\nD", text )
25781	assertNotNull ( "Obfuscated data null", obfuscatedDataWrapper )
25782	assertParseTree ( rootNode ( "hello", node ( "hi", null, "hello" ) ), tree )
25783	assertEquals ( "ab��猫��������������������������������������������������������������������������������
25784	assertMatch ( e, s )
25785	Assert. assertEquals ( "dXNlcnBhc3M=", actual )
25786	assertEquals ( "Should be a 400 Bad Request!", BAD_REQUEST. getStatusCode ( ), getStatus ( method ) )
25787	assertEquals ( newLanguage, withLanguage. getLanguage ( ) )
25788	Assert. assertEquals ( ManagedCloudSdk. newManagedSdk ( new Version ( "" ) ). getSdkHome ( ), sdk. getSdkHome ( ) )
25789	Assert. assertTrue ( deleted. isVoided ( ) )
25790	assertEquals ( e, r )
25791	assertThat ( result, hasSize ( 0 ) )
25792	assertEquals ( "Wrong column length", "12345", cd1. getLength ( ) )
25793	assertEquals ( map1, map2 )
25794	assertThat ( this. converter. convert ( this. source, this. sourceType, targetType ), is ( true ) )
25795	assertTrue ( result. size ( ) > 0 )
25796	assertEquals ( false, passedWaitForStartCall. await ( 10, TimeUnit. SECONDS ) )
25797	assertEquals ( "A.publicFieldOne", loadedClass. getFieldByName ( myField. getName ( ) ) )
25798	assertThat ( emptyIntermediate. getSize ( ), is ( 0 ) )
25799	assertEquals ( 0, definitions. size ( ) )
25800	assertEquals ( "Privacy policy inferred not equals to the exepcted empty one", expected. toXMLString ( ), actual. toXMLString ( ) )
25801	assertEquals ( pp. getValue ( ), new Payload < > ( "error 4 test error" ). getValue ( ) )
25802	assertThat ( encryptor. checkPassword ( testPassword, null ), is ( false ) )
25803	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE DEPTH(nodes) <= CAST('3' AS LONG)" ) )
25804	assertEquals ( true, result )
25805	assertEquals ( getLoggingEvent ( ). getFormattedMessage ( ), "test; key=\\"value\\"; otherKey=\\"V8\\"" )
25806	Assert. assertEquals ( expectedStringLast, resultString )
25807	assertTrue ( underTest. validate ( "student", idsToValidate ). containsAll ( idsToValidate ) )
25808	assertThat ( event. isCancelled ( ), equalTo ( false ) )
25809	assertNull ( "Invalid argument passed", value )
25810	assertEquals ( expected, appendable. toString ( ) )
25811	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4 ) ) )
25812	assertNotNull ( result )
25813	Assert. fail ( "It succeeded while an Exception is expected" )
25814	Assert. assertEquals ( vXLong. getValue ( ), vXLong1. getValue ( ) )
25815	assertEquals ( Timestamp. valueOf ( "1970-01-01 00:00:00" ), ts )
25816	assertEquals ( "Base for strings is wrong", "3", parsed )
25817	Assert. assertFalse ( negativeIdleTimeReturned. get ( ) )
25818	assertEquals ( "Base for longs is wrong", "3", parsed )
25819	assertTrue ( pm. isPopupShowing ( ) )
25820	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE NAME(nodes) > $literal" ) )
25821	assertEquals ( "Select with exists check", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
25822	assertTrue ( true )
25823	Assert. assertEquals ( "SELECT s1\\nFROM t1\\nWHERE s1 > ALL (SELECT s1\\n\\tFROM t2);", text )
25824	assertThat ( instance. getCreationDate ( ), is ( dateTime ) )
25825	classes. assertIsInterface ( someInfo ( ), actual )
25826	Assert. assertNull ( entity )
25827	Assert. assertArrayEquals ( new String [ ] { "*", "*" }, toStringArray ( tokens ) )
25828	assertTrue ( rs. next ( ) )
25829	assertThat ( parse ( contents ), contains ( map ( "a", "'HELLO'", "b", "'hello'" ) ) )
25830	Assert. assertEquals ( 2, arrays. size ( ) )
25831	assertEquals ( userDao. getUsernames ( usernamePattern, resultCount ). size ( ), resultCount )
25832	assertEquals ( Response. Status. OK. getStatusCode ( ), target. request ( MediaType. TEXT_PLAIN ). get ( ). getStatus ( ) )
25833	Assert. assertTrue ( contains )
25834	assertEquals ( DockerConnectorConfiguration. UNIX_SOCKET_URI, uri )
25835	assertEquals ( l. size ( ), 3 )
25836	assertThat ( value, is ( String. format ( "%s%s%s", separator, separator, separator ) ) )
25837	Assert. assertTrue ( foundToCharArray )
25838	assertEquals ( "Should be no error", Response. Status. NOT_FOUND. getStatusCode ( ), stringResponse. getStatus ( ) )
25839	assertListTEquals ( listOneTwo, 1, 2, 3, 4, 5 )
25840	Assert. assertEquals ( "3 ����� 15 砖注�转 38 ������������������������������������������������������������������������
25841	assertEquals ( o, result. getValue ( ) )
25842	assertTokensEqual ( of ( PLUS, PLUS, PLUS, PLUS, PLUS ), tokens )
25843	assertEquals ( eAdded, eRetrieved )
25844	assertThat ( factory. create ( value ), is ( Long. valueOf ( value. getTimeInMillis ( ) ) ) )
25845	assertTrue ( h. getNewURL ( ). equals ( "/NewSimpleUrl" ) )
25846	assertTrue ( cut. getAttributes ( ). isEmpty ( ) )
25847	assertTrue ( schema. hasSchema ( ) )
25848	assertEquals ( bestIndividual. toString ( ), bicf. getChromosome ( ). toString ( ) )
25849	assertEquals ( 0, ebXML. getSlots ( ). size ( ) )
25850	assertTrue ( s. equals ( t ) )
25851	assertEquals ( IP_1080_8_800_200C_417A_80, StringUtils. formatSocketAddress ( inetSocketAddress ) )
25852	assertTrue ( wc. isContainerCompletedAtAllocated ( ) )
25853	assertEquals ( "Series 1", d1. getSeriesKey ( ) )
25854	assertThat ( pauseLength, is ( greaterThanOrEqualTo ( 150L ) ) )
25855	assertTrue ( "i=" + i + " d=" + d,! nnList. isEmpty ( ) )
25856	assertEquals ( 1, x. size ( ) )
25857	Assert. assertTrue ( pss. toString ( ). contains ( "123" ) )
25858	assertEquals ( expectedBindingString, relativizedVolumeString )
25859	assertThat ( authorizationRequest1, is ( authorizationRequest2 ) )
25860	Assert. assertEquals ( 0.0, correlation. correlation ( xArray, yArray ), Double. MIN_VALUE )
25861	_mock. assertIsSatisfied ( )
25862	Assert. assertEquals ( "Connect to http://localhost [/1.2.3.4] timed out", ctx. getMessage ( ) )
25863	assertEquals ( 0, equeue. errors. size ( ) )
25864	Assert. assertThat ( list, Is. is ( Arrays. asList ( "1", "1_1", "1_2", "1_3", "1_4", "2_1", "2_2", "2_3", "2_4", "3", "4", "5", "6", "7" ) ) )
25865	assertAlias ( sql, columnParam, "nor", param )
25866	Assert. assertEquals ( expectedMap, filtered )
25867	assertEquals ( objects. size ( ), 1 )
25868	assertEquals ( "The builder should be the minimal one", "org.apache.royale.loader.loader.LoaderBuilder", builder. getMinimalBuilder ( ). getClass ( ). getName ( ) )
25869	assertArrayEquals ( expected, coeffs )
25870	assertEquals ( builder. bipartitionThreshold, 0.3243 )
25871	this. assertIndices ( im ( 0, - 1 ), im ( 1, - 2 ), im ( 2, 3 ), im ( 3, 4 ) )
25872	Assert. assertEquals ( "1", result. getHits ( ). get ( 0 ). getExplanation ( ). getDetails ( ). get ( 0 ). getDetails ( ). get ( 0 ). getDescription ( ) )
25873	assertThat ( spec, is ( greaterThan ( 0 ) ) )
25874	assertOut ( "/**\\n * @export\\n */\\nfoo.bar.B.prototype.b = function() {\\n  var /** @type {custom.TestProxy} */ a = new custom.TestProxy();\\n  for (var /** @type {string} */ p in a) {\\n  var /** @type {number} */ i = a.length;\\n  };\\n}" )
25875	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + filename, sourceFolder + "cmp_" + filename, destinationFolder, "diff_" ) )
25876	assertFalse ( connected )
25877	assertEqualsIgnoreWhitespace ( sql, outerQuery. toString ( ) )
25878	assertEquals ( "mmoayyed.example.net", entity. getEntityId ( ) )
25879	assertThat ( event, is ( expected ) )
25880	assertEquals ( "dubbo://10.20.130.230:20880/context/path?version=1.0.0&application=morgan", url1. toFullString ( ) )
25881	Assert. assertTrue ( checked. get ( ) )
25882	assertEquals ( "Hello there world", doc. select ( "div > *" ). text ( ) )
25883	assertEquals ( 9.0060123, ceosReader. readFn ( 16 ), 1E-6 )
25884	assertTrue ( start_query. isSuccessful ( ) )
25885	assertThat ( seessionAuthoritys, is ( authorities ) )
25886	assertHelpLines ( "Option                   Description        ", "------                   -----------        ", "-a <Integer: numerical>   some value you need", EMPTY )
25887	assertSame ( config, uriTools. resolveUri ( PROFILE_URI. resolve ( "configuration/Hello/" ), wfBundle ) )
25888	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
25889	assertNotNull ( testExpressionUpdate. getLastUpdatedTime ( ) )
25890	assertEquals ( reduce, pipes. getReduce ( ) )
25891	Assert. fail ( "Unterminated parameter accepted" )
25892	assertEquals ( remoteUrl, this. mocker. getComponentUnderTest ( ). getRemoteUrl ( templateRepository, remoteUrl ) )
25893	assertEquals ( VALUE, jwt2. getJWTClaimsSet ( ). getSubject ( ) )
25894	assertEquals ( hash, token. getHash ( ) )
25895	assertThat ( isValid, is ( false ) )
25896	Assert. assertThat ( existing, CoreMatchers. nullValue ( ) )
25897	assertEquals ( "Test message \\\\a b\\c", result )
25898	assertEquals ( 0, tasks. size ( ) )
25899	Assert. assertEquals ( Status. NOT_FOUND. getStatusCode ( ), resp. getStatus ( ) )
25900	Assert. assertFalse ( "file should not be a directory", isDir )
25901	Assert. fail ( e. getMessage ( ) )
25902	assertTrue ( EqualsBuilder. reflectionEquals ( config, config2, "keyStore", "ourCertificate" ) )
25903	assertEquals ( 123L, book. getId ( ) )
25904	Assert. assertEquals ( "Setting a null type should default to Vertical", WTree. Type. VERTICAL, tree. getType ( ) )
25905	assertUsers ( ldapUserInfo, true, false, false, false )
25906	assertTrue ( page. asText ( ). contains ( "could not be understood as a number" ) )
25907	Assert. assertFalse ( policy. isResponseCacheable ( request, response ) )
25908	assertThat ( building. isPresent ( ), is ( false ) )
25909	Assert. assertEquals ( range. getQualifyingPageNums ( 10 ), Arrays. asList ( 2, 4, 6, 7, 8 ) )
25910	TestUtils. assertInvalidParameters ( victim )
25911	assertEquals ( "datastax driver config", IOContainer. DriverType. DATASTAX, driver )
25912	Assert. assertFalse ( result )
25913	assertEquals ( shexc. getExitCode ( ), 0 )
25914	assertEquals ( "VOID", verifyType )
25915	mock. assertIsNotSatisfied ( )
25916	assertEquals ( "zzz", mat. group ( 1 ) )
25917	assertArrayEquals ( TEObjectUtil. TE_LSP_BANDWIDTH_2, ByteArray. getAllBytes ( output ) )
25918	assertThat ( new PullRequestApproval ( Config. builder ( ). requiredReviewers ( newArrayList ( "user1", "user2" ) ). requiredReviews ( 2 ). build ( ), utils ). isPullRequestApproved ( pr ), is ( true ) )
25919	assertThat ( "String", object, is ( value ) )
25920	assertNotNull ( Command. reader ( ). read ( ) )
25921	assertTrue ( result. passedValidation ( ) )
25922	assertNotNull ( sessionManager. getValue ( ) )
25923	assertEquals ( results [ i ], result )
25924	assertEquals ( Preconditions. class, type )
25925	assertEquals ( 2, list. size ( ) )
25926	Assert. assertEquals ( "Incorrect file types returned", Arrays. asList ( types1 ), widget. getFileTypes ( ) )
25927	assertThat ( keyword, is ( notNullValue ( ) ) )
25928	assertEquals ( expected, reference. get ( ) )
25929	assertFalse ( extr. extract ( document, attrDetail ) )
25930	assertEquals ( ( short ) 8, result. getShortValue ( ) )
25931	assertTrue ( "correct vocab not found", test )
25932	assertTrue ( e instanceof E_LangMatches )
25933	assertEquals ( "Invalid rule", 0, ss. size ( ) )
25934	assertThat ( results, is ( new String [ ] [ ] { { "A", "B" }, { "C", "D" } } ) )
25935	assertThat ( JobWatcher. getOrCreateFor ( ADDITIONAL_NAMESPACE ), is ( not ( oldWatcher ) ) )
25936	assertEquals ( "http://sample", sampleStatus. getUrl ( ) )
25937	assertNotNull ( Service. reader ( ). read ( ) )
25938	assertEquals ( new TypeTag ( String. class ), actual )
25939	assertThat ( threadCount, is ( AVAILABLE_PROCESSORS ) )
25940	assertEquals ( "Hash is invalid", Blake2_DIGEST, result )
25941	assertEquals ( "Wrong count ones", count, bitseq. countOnes ( ) )
25942	assertEquals ( 1, reportResults. size ( ) )
25943	assertThat ( taskQuery. count ( ), is ( 1L ) )
25944	assertThatReassembledMessageEqualsOriginalMessage ( result )
25945	Assert. assertEquals ( adImpressionStream. size ( ), collector. actualResults. size ( ) )
25946	assertEquals ( pausedFlows, processInstanceMediatorServiceMockInjected. getPauseFlows ( pausedExecutionId ) )
25947	Assert. assertTrue ( queueResponse. isOk ( ) )
25948	Assert. assertEquals ( employee4. getId ( ), q. getSingleResult ( ) )
25949	assertEquals ( vutUserId, fromBearer. getUserId ( ) )
25950	assertNotNull ( retrievedState )
25951	assertEquals ( 2, counter. getBeforeFileTreeWalkCount ( ) )
25952	assertTrue ( notifyThread. isFinished ( ) )
25953	assertEquals ( 2, _offeredTypes. length )
25954	assertEquals ( "sampleLib1Description", functionLibrary. getDescription ( ) )
25955	assertEquals ( var1, "test" )
25956	assertTrue ( roles. size ( ) > 0 )
25957	Assert. assertEquals ( "4=4(2=2)", tree. toString ( ) )
25958	assertEquals ( "TokenExpirationDate passed into constructor not returned by getTokenExpirationDate()", expireDate, sut. getTokenExpirationDate ( ) )
25959	Assert. assertEquals ( 0, deviceGroupRegistry. getAllGroupIds ( ). size ( ) )
25960	assertEquals ( "a c 3 + c [y*2] [] []", this. codeGenerator. getPostFixExpression ( ) )
25961	assertTrue ( "Duplicate names should be empty", bn. getVariants ( ). isEmpty ( ) )
25962	Assert. assertNotNull ( addressResultsDto )
25963	assertEquals ( - 1, decoder. read ( ) )
25964	assertEquals ( - 7, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
25965	assertEquals ( "Input value json should match output value json", inputJson, outputJson )
25966	assertNotNull ( processInstance. getId ( ) )
25967	assertEquals ( 9876543210L, x. value )
25968	Assert. assertEquals ( options. getMaxMaps ( ), 3 )
25969	assertEquals ( "Failed to load *preferred* JCE crypto provider, " + preferredProvider, 1, SecurityProviderLoader. getProvidersAt ( preferredProvider ) )
25970	assertTrue ( issues. size ( ) > 0 )
25971	assertEquals ( expResult, result, 0.001 )
25972	assertFalse ( faceted. isFaceted ( ) )
25973	assertThat ( backingMap. size ( ), is ( 4 ) )
25974	Assert. assertArrayEquals ( REDIRECT_IPV6, output. array ( ) )
25975	assertEquals ( "Hello ÿþü\\n" + "H
25976	ITUtils. assertReceivingDifferentRows ( proxy, key, ROW_COUNT - 1 )
25977	assertEquals ( BPResultType. FAIL, testResult. getResultType ( ) )
25978	assertEquals ( "SELECT xmlcast(xmlquery('/a/b') passing convert('<a><b>1</b></a>', integer) FROM a WHERE b = 1", QueryParser. getQueryParser ( ). parseCommand ( sql ). toString ( ) )
25979	assertEquals ( "/events/" + "bar/group/id", result )
25980	assertTrue ( result [ 0 ]!= result [ 1 ] )
25981	assertThat ( eventsFired. size ( ), equalTo ( 1 ) )
25982	assertEquals ( StatusCode. STREAM_NOT_FOUND, response. getCode ( ) )
25983	assertFalse ( indexFilterHook. indexIsApplicable ( indexRecordFilter, Table. RECORD. name, newRecord, null ) )
25984	assertThat ( result. toString ( ), is ( equalTo ( "HW" ) ) )
25985	Assert. fail ( e. getMessage ( ) )
25986	assertSizeIs ( 12 )
25987	assertEquals ( "1", context. get ( "command" ) )
25988	assertEquals ( frontendAlarm. getGraphiteBaseUrl ( ), backendAlarm. getGraphiteBaseUrl ( ) )
25989	assertEquals ( 1, this. taskService. createTaskQuery ( ). count ( ) )
25990	assertEquals ( "none condition serialization is wrong", expected, actual )
25991	assertEquals ( ok, result )
25992	Assert. assertEquals ( 10, E. withGroup ( "a" ). size ( ) )
25993	assertEquals ( annotations, annotationsOnMethod )
25994	assertTrue ( result. isEmpty ( ) )
25995	assertEquals ( results, linkedLists )
25996	assertEquals ( "greentick", imagePart. getImage ( ) )
25997	assertTrue ( resultComparator. compare ( fd1, fd2 ) < 0 )
25998	Assert. fail ( "create bucket under non existing mount-point should fail" )
25999	Assert. assertEquals ( bean. getStateless ( ). getName ( ), SimpleStatelessBean. class. getSimpleName ( ) )
26000	assertEquals ( newMap, putMap )
26001	assertEquals ( "File to string example", fileContent. toString ( ) )
26002	Assert. assertEquals ( obj, o )
26003	Assert. assertTrue ( result. getNumElementsProcessed ( ) == 0 )
26004	assertEquals ( expResult, stringBuilder. toString ( ) )
26005	assertTrue ( PureEvaluator. isUnpureCacheEmpty ( ) )
26006	assertEquals ( feather. instance ( Plain. class ), feather. instance ( Plain. class ) )
26007	assertNotNull ( properties. getDefinitions ( ) )
26008	assertEquals ( AuthorizationResult. denied ( ). getResult ( ), result. getResult ( ) )
26009	assertEquals ( new int [ ] { 1, 1, 1 }, res, 3, "address='CTRIPCTRIPCTRIPCTRIPCTRIPCTRIPCTRIPCTRIPCTRIPCTRIP'" )
26010	assertTrue ( getExpectedErrorMsg ( ), result )
26011	Assert. fail ( message )
26012	assertArrayEquals ( resultAddress, address )
26013	assertEquals ( expectedQuery, query )
26014	assertEquals ( "0.0", policy. getRate ( ). toString ( ) )
26015	assertThat ( converted, is ( notNullValue ( ) ) )
26016	assertEquals ( expResult, result )
26017	assertThat ( initiativeInfo. isVotingStarted ( TODAY ), is ( true ) )
26018	Assert. assertEquals ( XMLStreamConstants. COMMENT, reader. nextEvent ( ). getEventType ( ) )
26019	assertNotNull ( result )
26020	assertNotNull ( mt )
26021	assertNotNull ( test )
26022	assertThat ( results, hasSize ( 1 ) )
26023	assertEquals ( "In July, GM said its electric Chevrolet Volt will be sold in the United States at $41,000 -- $8,000 more than its nearest competitor, the Nissan Leaf.", p. text ( ) )
26024	assertThat ( basicDBObject. get ( "creationDate" ), is ( ( Object ) now. getMillis ( ) ) )
26025	arrays. assertContainsOnlyOnce ( someInfo ( ), actual, IntArrays. emptyArray ( ) )
26026	assertThat ( html, containsString ( "else-block" ) )
26027	assertThat ( props. getProperty ( propertyKey ), is ( propertyValue ) )
26028	Assert. fail ( "exception expected" )
26029	assertNotNull ( api )
26030	assertNull ( x. f1 )
26031	assertThat ( mentions, hasItem ( mentionedIssue ( 0, 3, 33 ) ) )
26032	assertTrue ( monitoring. contains ( "MTA NYCT_1" ) )
26033	assertEquals ( true, service. processMessage ( null, message. getBytes ( ) ) )
26034	assertEquals ( "Expected 4 results!", 4, n )
26035	assertNotNull ( e )
26036	assertEquals ( "<span>Hello <div>there</div> <span>now</span></span>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
26037	assertSame ( expectedConnection, actualConnection )
26038	assertNotNull ( SyncStream. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
26039	assertThat ( dummyConfigurationConfigLoader. getTestConfig ( ). getSomeDummyAttribute ( ), CoreMatchers. is ( "value" ) )
26040	assertTrue ( firstResult. equals ( lastResult ) )
26041	assertTrue ( cutOff. getTime ( ) - cutOff. getTime ( ) < 1000 )
26042	assertEquals ( expected, cls )
26043	assertFalse ( isOpened )
26044	assertThat ( result. statusCode, is ( Response. OK ) )
26045	assertThat ( cndFactory. getProblems ( ). isEmpty ( ), is ( true ) )
26046	assertNotNull ( Revision. fetcher ( "FWXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", 1 ). fetch ( ) )
26047	assertEquals ( Arrays. asList ( "ExecuteTestSuite1", "ExecuteTestCase1", "DoCommand1", "ExecuteTestSuite2" ), called )
26048	assertThat ( start. until ( end, Duration. in ( MONTHS ) ), is ( Duration. ofCalendarUnits ( 12, 0, 0 ) ) )
26049	Assert. assertNull ( session, "No session should have been created when proxy set is empty" )
26050	Assert. assertTrue ( currentUser. hasPermission ( testPermission ) )
26051	assertNull ( dto )
26052	assertEquals ( 1, rs. getInt ( 1 ) )
26053	Assert. assertEquals ( SEX_FEMALE, json. get ( DATA_NAME ) )
26054	assertEquals ( Integer. valueOf ( 2 ), result )
26055	assertTrue ( ObjectUtils. equals ( endpoint1, endpoint2 ) )
26056	assertEquals ( "foo", adapter. classify ( "foo" ). intValue ( ) )
26057	assertTrue ( ParsingUtils. fileMatchesExtension ( sampleFile, "java" ) )
26058	Assert. assertEquals ( expected, actual )
26059	Assert. assertTrue ( r. length ( ) > 0 )
26060	assertArrayEquals ( classesToImport, GWT. getClassesToImport ( ) )
26061	Assert. assertSame ( elem, mergeElem )
26062	assertThat ( Latin1Conversion. convertString ( control ), is ( "abcdefghijklmnopqrstuvwxyz" ) )
26063	assertTrue ( acl. hasPermission ( ANONYMOUS_USER, Item. READ ) )
26064	assertEquals ( "No errors should be registered", 0, errors. getErrorCount ( ) )
26065	assertTrue ( resultList. containsAll ( resultList. toArray ( ) ) )
26066	Assert. assertEquals ( 2000, duration, 100 )
26067	assertEquals ( ImmutableList. of ( ), found )
26068	assertEquals ( set, files )
26069	assertEquals ( 2, annotations. size ( ) )
26070	assertEquals ( "x.artistName IN (\\"a\\",\\"b\\",\\"c\\")", ejbql )
26071	org. junit. Assert. assertEquals ( 200, response. getStatus ( ) )
26072	assertEquals ( custom. getGap ( ), ( ( VerticalLayout ) container. getLayout ( ) ). getGap ( ) )
26073	assertThat ( tz. isDaylightSaving ( utc ), is ( true ) )
26074	assertEquals ( initialHashCode, pm. getHash ( ) )
26075	assertEquals ( expected, cow. getValue ( ) )
26076	assertNull ( parsedArg )
26077	assertEquals ( "2", person. order ( ) )
26078	assertEquals ( "post request", saveRoute. uriVariables ( ). get ( "text" ) )
26079	assertEquals ( 2, accounts. size ( ) )
26080	assertTrue ( s. isRequired ( ) )
26081	Assert. assertEquals ( expResult, result )
26082	assertEquals ( expected, out )
26083	assertEquals ( "\\"NAME\\" LIKE?", QueryBuilder. getWhereStringForFilter ( f, sh ) )
26084	assertArrayEquals ( expected, service. getDomainsForServer ( handle ) )
26085	assertEquals ( "SELECT -((e2, e2), (e2, e2))[1][1] FROM pm1.g1", command. toString ( ) )
26086	assertEquals ( "Local lookup was not inherited", "(x)", parent. getString ( "tables.table(0).var", "" ) )
26087	Assert. assertEquals ( 2, count )
26088	assertEquals ( 5., start. getTheoreticalLatestOperationStartTime ( ), 0.01 )
26089	response ( ). then ( ). assertThat ( )
26090	assertNotNull ( inverseCheck. getOwners ( ) )
26091	assertSame ( expectedOS, resultingOS )
26092	assertEquals ( 2, testMeta. storageManager. load ( dataOf1, 1 ). size ( ) )
26093	assertEquals ( customNullPointerRepresentation, nameField. getValue ( ) )
26094	assertEquals ( expectedContentRange, uploader. constructContentRangeHeaderValue ( requestLength, true, status ) )
26095	assertNotNull ( info )
26096	assertTrue ( res. next ( ) )
26097	assertEquals ( result, record )
26098	assertThat ( result, equalTo ( Result. NEUTRAL ) )
26099	assertTrue ( sink. getInvalidConfiguration ( ) )
26100	assertThat ( "no issue shall be found in a valid provider", validation. pass ( Report. WITHOUT_WARNING ) )
26101	assertTrue ( saddr. matches ( "tcp://\\\\d+\\\\.\\\\d+\\\\.\\\\d+:90" ) )
26102	assertTrue ( field. isRequiredIndicatorVisible ( ) )
26103	Assert. assertEquals ( "child", child. getName ( ) )
26104	assertEquals ( "No test cases run", 0, runTestsResults. getPassedTestCount ( ) )
26105	assertThat ( actual. matches ( "z" ), is ( true ) )
26106	assertTrue ( revisions. isEmpty ( ) )
26107	assertThat ( TimestampInterval. between ( start, end ). contains ( PlainTimestamp. of ( 2014, 5, 14, 0, 0 ) ), is ( false ) )
26108	assertEquals ( expResult. trim ( ), result. trim ( ) )
26109	assertNotSame ( fixture, copy )
26110	assertEquals ( "a b\\n", found )
26111	assertThat ( cache. get ( "key1" ), is ( nullValue ( ) ) )
26112	Assert. assertEquals ( "10", groupId )
26113	assertEquals ( HttpStatusCode. NO_CONTENT. code, response. getStatus ( ) )
26114	assertTrue ( calledExceptionHandler. isProtectedHandlerCalled ( ) )
26115	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm", result ) )
26116	assertFalse ( "Does not accept a method that returns something out of the hierarchy", interceptor. accepts ( resourceMethodThatReturnsObject ) )
26117	assertSame ( "Cloned instance", Shutdown. INSTANCE, cloned )
26118	assertEquals ( actual, expected )
26119	Assert. areEqual ( IllegalArgumentException. class, ex. getClass ( ), "出现异常" )
26120	Assert. assertNotNull ( pi )
26121	assertThat ( read ( format, written ), contains ( "100" ) )
26122	assertEquals ( statisticsDao. getPostsOnForumCount ( ), expectedCount )
26123	assertObjectEquals ( "{}", t )
26124	assertNumEquals ( numOf ( Math. log ( 99d / 100 ) ), varCriterion. calculate ( series, trade ) )
26125	assertEquals ( asList ( new ErrorNotification ( "foo" ) ), clientEvents. collect ( ) )
26126	Assert. fail ( "Should not have succeeded" )
26127	assertTrue ( isGroebnerBasis ( gens, gb, GREVLEX ) )
26128	assertEquals ( cut. assignTaskToUser ( beforeAssign, 2L ), afterAssign )
26129	assertFalse ( new PetFilter ( ). dogsOnly ( payload ) )
26130	Assert. assertTrue ( reflect. isSuperClass ( genericType ) )
26131	assertEquals ( "12 �����������������������������������������������������������������������������������
26132	assertTrue ( deviceFlowRegistry. isEmpty ( ) )
26133	assertThat ( provider. getSubject ( axiom ), is ( absent ) )
26134	assertEquals ( 120, config. getMaxCacheSize ( ) )
26135	assertions. isEqualTo ( expected )
26136	assertThat ( empList. stream ( ). collect ( Collectors. toList ( ) ), equalTo ( employees ) )
26137	assertSame ( listOfTodos, retList )
26138	assertEquals ( numbers, this. model. getNumbers ( ) )
26139	assertEquals ( joining, branching )
26140	assertEquals ( "HTTPMESSAGE OVER", ret )
26141	assertEquals ( query, parse ( query ) )
26142	assertThatWritableIs ( true )
26143	Assert. assertEquals ( expected, compoundWrite. apply ( baseNode ) )
26144	assertEquals ( 2, b. getInt ( ) )
26145	assertEquals ( expected, actual )
26146	assertEquals ( 200, status. getStatusLine ( ). getStatusCode ( ) )
26147	assertEquals ( true, classUnderTest. getWarnForUnsavedFileEdits ( ) )
26148	assertThat ( helloWorld. helloWorld ( ), is ( "Hello Prototype!" ) )
26149	assertThat ( actual, is ( equalTo ( expected ) ) )
26150	assertEquals ( limit, bucket. nextRelease ( ) )
26151	assertThat ( extractedLines. size ( ), equalTo ( 0 ) )
26152	assertEquals ( "\\n", mojo. getLineSeparator ( ) )
26153	Assert. fail ( "Expected ClientProtocolException" )
26154	assertTrue ( stats. getReceiveMessageGaps ( ). isEmpty ( ) )
26155	Assert. assertEquals ( 1, e. size ( ) )
26156	assertThat ( dialect. getURL ( conn ), is ( "jdbc:impala://joe/default;AuthMech=2;UID=joe" ) )
26157	assertEquals ( expResult, result )
26158	assertArrayEquals ( list, request. getLocalAuthorizationList ( ) )
26159	assertThat ( testColor. name + " on " + serialized, base, is ( deserialized. getColor ( "color" ) ) )
26160	assertionHelper. assertLocalFileMatchesLocalFileChecksum ( getLocalFile, getIRODSFile, secondaryAccount )
26161	assertThat ( isValid, is ( false ) )
26162	assertEquals ( false, log. hasEvents ( ) )
26163	assertEquals ( "AlignerReport.size", rep. size ( ) )
26164	Assert. assertTrue ( errors. hasFieldErrors ( "retireReason" ) )
26165	assertNotNull ( "index not present", ais ( ). getTable ( SCHEMA, T1_NAME ). getIndex ( "x" ) )
26166	assertEquals ( "void f(void* target) {\\n" + "    ((void (*)(void)) target)();\\n" + "}\\n", BridgeMethodCompiler. createBridgeCWrapper ( functionType. getReturnType ( ), functionType. getParameterTypes ( ), functionType. getParameterTypes ( ), "f" ) )
26167	assertEquals ( "message", exception. getMessage ( ) )
26168	assertThat ( responseStep. callResponse. getResult ( ). getItems ( ), contains ( s1, s2, s3, s4, s5, s6 ) )
26169	assertXpathExists ( "//h2[not(@id)][text() = 'My Title']", html )
26170	assertThat ( conversionService. convert ( value, Integer. class ), is ( value ) )
26171	assertMixed ( new FailingWorkerListener ( ), BatchEvent. values ( ) )
26172	assertNotNull ( data. getString ( 0, data. length ( ) ) )
26173	assertNotNull ( request. getSession ( ). getAttribute ( Constants. PREFERRED_LOCALE_KEY ) )
26174	assertEquals ( "id should be 1", new Long ( 1 ), read. getId ( ) )
26175	assertTrue ( getNoErrorMsg ( ), result )
26176	assertThat ( IntraDayDate. toList ( days ), delimitedBy ( start, end ) )
26177	Assert. assertEquals ( 100., time, 0.01 )
26178	assertEquals ( "The branch name array is incorrect", "override-branch", scm. getBranchName ( EMPTY_VARIABLE_RESOLVER ) )
26179	assertEquals ( true, result )
26180	assertEquals ( read ( pom ), "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<project>\\n" + "    <artifactId>artifact-id</artifactId>\\n" + "    <groupId>group-id</groupId>\\n" + "    <version>x.x.x</version>\\n" + "    <dependencyManagement>\\n" + "        <childKey>child</childKey>\\n" + "        <parentKey>parent</parentKey>\\n" + "        <newProperty>new-property</newProperty>\\n" + "    </dependencyManagement>\\n" + "</project>" )
26181	assertEquals ( test. convertToBase7 ( ), test. convertToBase7 ( ) )
26182	Assert. assertEquals ( FastMath. PI, solver. solve ( 100, f, 3.0, 3.2, 3.1 ), solver. getAbsoluteAccuracy ( ) )
26183	assertTrue ( quota. check ( blobStore ). isViolation ( ) )
26184	assertEquals ( expected, expression. toString ( ) )
26185	Assert. assertEquals ( "John Doe", result. get ( "name" ) )
26186	assertThat ( domain. getServer ( "server1", "cluster1" ). shouldStart ( 0 ), is ( true ) )
26187	assertNotNull ( version )
26188	assertEquals ( formatted, "14103 seconds" )
26189	assertNull ( entity )
26190	assertDegenerate ( scan )
26191	assertEquals ( "Expected 10 results!", 10, n )
26192	assertTrue ( txaction. isATransfer ( ) )
26193	assertEquals ( 3, this. sqlgGraph. traversal ( ). E ( ). count ( ). next ( ), 0 )
26194	assertTrue ( strings. hasNext ( ) )
26195	assertThat ( found, hasSize ( 0 ) )
26196	assertTrue ( voter. voteMatch ( affiliation, organization ) )
26197	assertEquals ( "MJD", mjd. getSymbol ( ) )
26198	Assert. assertEquals ( 0.989, pValue, 0.09 )
26199	assertEquals ( expected, getString ( TestOrderByImpl. example ( ) ) )
26200	assertEquals ( 1, artist. getPaintingArray ( ). size ( ) )
26201	assertEquals ( "TestGetFilterQueryForKey 0", entityTypeToFilterQueryService. getFilterQueryForKey ( "key" ), null )
26202	assertTrue ( urlWithPathAndParam. equals ( urlString ) || urlWithPathAndParam1. equals ( urlString ) )
26203	assertEquals ( "Got tuples", Collections. singletonList ( tuple ), collector. getReceivedTuples ( ) )
26204	assertEquals ( "\\"Value\\"", csv )
26205	assertTrue ( rank < 2 )
26206	assertMockEndpointsSatisfied ( )
26207	assertTrue ( requestableRoles. size ( ) > 0 )
26208	assertVisitorSatisfied ( )
26209	assertTrue ( initSuccessful )
26210	assertEquals ( "date must not be changed in setSelectionInterval", copy, monthView. getSelectionDate ( ) )
26211	assertThat ( exitValue, is ( 0 ) )
26212	Assert. assertNotNull ( addressResultsDto )
26213	assertEquals ( 1, testDescriptor. getChildren ( ). size ( ) )
26214	assertEquals ( "test", wrap. getWrapped ( ) )
26215	assertMockEndpointsSatisfied ( )
26216	Assert. assertEquals ( true, retval )
26217	assertEquals ( expResult, result )
26218	assertThat ( sql, equalTo ( "update UserInfo set name = case id when 77 then '����' when 88 then name when 99 then '�稿��' else name end,age = case id when 77 then age when 99 then '16' else age end where id in(77,88,99)" ) )
26219	Assert. fail ( "NullPointerException should have been thrown" )
26220	assertFalse ( controller. isLoggedOn ( ) )
26221	assertEquals ( "Incorrect response", OperationStatus. COMPLETE, responseBuilder. buildResponse ( ). getStatus ( ) )
26222	arrays. assertDoesNotContain ( description, null, newArray ( true ) )
26223	assertThat ( content. get ( 0 ), containsString ( "Unknown action in agent argument, do nothing!" ) )
26224	assertEquals ( 0, mockResult. included ( "totalPostReports" ) )
26225	assertMockEndpointsSatisfied ( )
26226	context. assertIsSatisfied ( )
26227	assertTrue ( resultMessage ( result, PUT ), result. passedValidation ( ) )
26228	assertEquals ( expResult, result )
26229	assertEquals ( "(a + b).toLowerCase()", str )
26230	assertEquals ( expectedDoc, modifiedDoc )
26231	assertEquals ( clob, result )
26232	assertEquals ( 1, rpt. size ( ) )
26233	Assert. fail ( "get non-existent object metadata should fail" )
26234	assertEquals ( "Should be same JClass", JClass. class, cm. ref ( "java.lang.Class" ) )
26235	assertEquals ( "LIMIT 5 RETURNING foo", statement. toString ( ) )
26236	Assert. assertEquals ( 1, jobs. size ( ) )
26237	Assert. assertArrayEquals ( ENCODED_VALUE, byteOutputStream. toByteArray ( ) )
26238	assertTrue ( Cells. isEmpty ( cell ) )
26239	assertTrue ( repository. getFeatureState ( DummyFeature. TEST ). isEnabled ( ) )
26240	assertThat ( currentTimeString, is ( "2013-01-01T00:00:00Z" ) )
26241	Assert. assertFalse ( context. getResult ( ) )
26242	Assert. assertNotNull ( generator )
26243	assertMockEndpointsSatisfied ( )
26244	assertEquals ( original, restored )
26245	assertNotNull ( cause )
26246	assertEquals ( "Wrong number of name bindings", 1, names. size ( ) )
26247	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm", result ) )
26248	assertEquals ( ( long ) 8, result. getLongValue ( ) )
26249	assertTrue ( cygnusGroupingRules. hasSyntaxErrors ( ) )
26250	assertOutWithMetadata ( outTemplate. replaceAll ( "AppName", appName ) )
26251	assertThat ( calvalusDataInputs. getValue ( "bundleVersion" ), equalTo ( "1.0" ) )
26252	Assert. assertEquals ( 0, resultList. size ( ) )
26253	assertFalse ( registryService. doesKeyExist ( "HKLM", "" ) )
26254	assertThat ( fe, notNullValue ( ) )
26255	Assert. assertEquals ( 3, visitor. getBindVarConditions ( ). size ( ) )
26256	assertEquals ( expResult, writer. write ( entity ) )
26257	assertEquals ( "TextBuilder Should contain 1", 1, _textBuilder. toString ( ). length ( ) )
26258	assertEquals ( 2, cache. listPrivileges ( null, null, null ). size ( ) )
26259	Assert. assertEquals ( SpringContainer. class, container. context. getBean ( "container" ). getClass ( ) )
26260	assertTrue ( passed )
26261	assertThat ( collection. documentExists ( externalDoc. getKey ( ), BaseDocument. class, new DocumentReadOptions ( ). streamTransactionId ( tx. getId ( ) ) ), is ( true ) )
26262	assertThat ( sentGetRequest ( "http://127.0.0.1:19000/api/job/jobs/test_job", "POST" ), is ( CloudJsonConstants. getJobJson ( ) ) )
26263	assertToken ( expectedTokens, select ( jcas, Token. class ) )
26264	assertEquals ( "No tests ran.", content )
26265	assertThat ( evaluator. evaluate ( corc ), is ( TruthValue. YES ) )
26266	Assert. assertEquals ( expected, actual )
26267	assertEquals ( 0, maxConsequetiveOnes. findMaxConsecutiveOnes ( numbers ) )
26268	assertEquals ( 4, context. select ( q1 ). size ( ) )
26269	assertEquals ( 190, res. cause ( ). getCode ( ) )
26270	assertEquals ( "common", possibleFields. get ( 0 ) )
26271	assertEquals ( "Testing " + fqanWithGroup, expectedString, fqanWithGroup. getGroup ( ) )
26272	assertSet ( queryReturns ( kate, ashley ), whenFilteringBy ( IN, Arrays. asList ( "Kate", "Ashley" ) ) )
26273	assertEquals ( t, new LeadActivityRecord ( ). toString ( ) )
26274	assertThat ( isEqual, is ( true ) )
26275	assertNotNull ( response )
26276	assertThat ( "bob[5].fred[2].george", equalTo ( m. m_fieldPath ) )
26277	assertEquals ( 6, aggregate. getTotalHours ( ) )
26278	assertEquals ( "0975-X", agencia. toString ( ) )
26279	Assert. assertEquals ( input. canBeAnything, output. canBeAnything )
26280	assertTrue ( System. getProperty ( PROPERTY_NAME_SANDBOX_NAME ). contains ( "eu.dnetlib.iis.wf.transformers" ) )
26281	assertThat ( resultIds, containsInAnyOrder ( "DiagnosticReport/DR", "Observation/parentObs", "Observation/childObs" ) )
26282	Assert. assertEquals ( MessageFormatUtil. format ( com. itextpdf. io. IOException. _1IsNotAnAfmOrPfmFontFile, fontsFolder + "cmr10.pfb" ), message )
26283	assertEquals ( 10., Solutions. bestOf ( solutions ). getCost ( ), 0.01 )
26284	assertEquals ( "Scroll to row 25", getSidebarPopup ( ). findElements ( By. tagName ( "td" ) ). get ( 0 ). getText ( ) )
26285	assertEquals ( ".pen {background-color:red;*some incorrect block *}.pen {background-color:blue}", writer. getCSSAsString ( cascadingStyleSheet ) )
26286	assertTrue ( "Logger should be added", ops. exists ( TEST_LOGGER_ADDRESS ) )
26287	assertEquals ( list, actual )
26288	assertEquals ( "{\\"d\\":{\\"EntryDate\\":\\"\\\\/Date(-42)\\\\/\\"}}", StringHelper. inputStreamToString ( ( InputStream ) response. getEntity ( ) ) )
26289	assertEquals ( "5:10000000000:1.5:3.5:zzz:true", res. join ( ) )
26290	assertEquals ( "Mapping of isatab_v1_200810 should be done", 1, store. size ( ) )
26291	Assert. assertTrue ( isEqual ( distance, 1.0 ) )
26292	assertThat ( chksumChannel. getChecksums ( ), contains ( expectedChecksum ) )
26293	assertThat ( waggleDanceConfiguration. getThriftServerRequestTimeout ( ), is ( timeout ) )
26294	Assert. fail ( )
26295	assertThat ( schema, containsString ( "input TypeReplacementsInput {\\n" + "  short_multiValueList: [PropertyInput]\\n" + "}\\n\\n" ) )
26296	assertNotNull ( clz )
26297	assertThat ( iterationState. next ( ). getChangeType ( ), is ( ASSERTED ) )
26298	assertThat ( result. getPayload ( ), is ( equalTo ( JSON_STRING_HEADERS ) ) )
26299	assertEquals ( 2, list. size ( ) )
26300	assertEquals ( "High", filterResult. getValue ( ) )
26301	Assert. assertEquals ( ecohImpl. doEcho ( echoInfo ). getMessage ( ), response. getMessage ( ) )
26302	assertThat ( collect ( userDAO. find ( ). asList ( ), on ( UserMongo. class ). getId ( ) ), contains ( user1. getId ( ) ) )
26303	assertEquals ( "Task " + wl. record. toString ( ), 'a', record. charAt ( 0 ) )
26304	assertEquals ( expected, actual )
26305	assertNotEquals ( firstId, secondId )
26306	assertTrue ( v1. getVehicleTypeIdentifier ( ). equals ( v2. getVehicleTypeIdentifier ( ) ) )
26307	assertEquals ( "<!--?xml encoding='UTF-8'?--> <html> <head></head> <body> One </body> </html>", StringUtil. normaliseWhitespace ( doc. outerHtml ( ) ) )
26308	assertEquals ( "no gain", storage. read ( "no pain" ) )
26309	assertFalse ( problem )
26310	assertNotNull ( retr )
26311	Assert. assertEquals ( "content", result. getBody ( ) )
26312	assertThat ( annotation, notNullValue ( ) )
26313	Assert. assertEquals ( expected, testIndex. findConc ( " 'The' 'brown' " ) )
26314	assertEquals ( 10, all. size ( ) )
26315	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPath, cmpPath, destinationFolder, diff ) )
26316	assertEquals ( err, "File, 'EasyMock for class java.io.File' cannot be written." )
26317	assertTrue ( "Failed authentication was not logged", loggedFailedAuth ( AUDIT_LOG_FILE, UNKNOWN_USER ) )
26318	assertEquals ( 0, breeder. doTruncate ( request ). size ( ) )
26319	assertEquals ( "Redo (Ctrl-Z)", shortDescription )
26320	assertContains ( e. getMessage ( ), "'last'" )
26321	assertThat ( kvStore. getCollectionOrDefault ( "field", Collections. emptyList ( ) ), equalTo ( value ) )
26322	assertThat ( dog. name, is ( "Brutus" ) )
26323	assertThat ( termMap. getTermB ( ). getUuid ( ), is ( RestTestConstants1_9. CONCEPT_REFERENCE_TERM2_UUID ) )
26324	assertThat ( isValid, is ( true ) )
26325	assertEquals ( r, groundTruthRA. get ( ). get ( ) )
26326	assertEquals ( "<p>PAYLOADATTR</p>\\n" + "<p>18</p>\\n" + "<p>33</p>\\n" + "<p>PAYLOADATTR</p>\\n" + "<p>PAYLOADATTR</p>\\n" + "</p>", matcherPosition. createContent ( ) )
26327	assertTrue ( result. equals ( expected ) )
26328	assertEquals ( "Yahya and friends etc. went to and park to play.", this. realiser. realise ( completeSen ). getRealisation ( ) )
26329	assertEqualsWithoutWhiteSpaces ( "rect(size=1, x=1, y=1, z=1, r=0.5)", actual )
26330	assertNotNull ( appInitializer. getServletConfigClasses ( ) )
26331	assertThat ( arguments, is ( empty ( ) ) )
26332	assertEquals ( expected, transformed )
26333	assertThat ( chksumChannel. getChecksums ( ), contains ( expectedChecksum ) )
26334	assertThat ( PlainDate. of ( 2000, 12, 2 ). with ( model. weekOfMonth ( ). incremented ( ) ), is ( PlainDate. of ( 2000, 12, 9 ) ) )
26335	assertTrue ( component. getText ( ). startsWith ( "Widgetset 'com.vaadin.DefaultWidgetSet' does not contain an implementation for com.vaadin.tests.widgetset.server.MissingFromDefaultWidgetsetComponent." ) )
26336	assertThat ( tester. count ( "Hoge" ), is ( 1 ) )
26337	assertEquals ( "Hello World", response )
26338	assertEquals ( "http://foo.org/fhir/PatientWithFullProfile", def. getResourceProfile ( "http://foo.org/fhir/PatientWithFullProfile" ) )
26339	assertEquals ( "cffunction", parserTag. getName ( ) )
26340	assertThat ( hijri. with ( CommonElements. weekOfMonth ( HijriCalendar. family ( ), model ). decremented ( ) ), is ( hijri. with ( HijriCalendar. DAY_OF_MONTH, 4 ) ) )
26341	assertThat ( userPermissions, hasItem ( permission ) )
26342	assertEquals ( a0, a1, 0.00001 )
26343	this. assertGet ( "policytypes?grouped=angularSelect", "entitytypes/policytypes/all.json" )
26344	assertEquals ( 0, imports. size ( ) )
26345	assertAnnotations ( 1, Quantity. class, new TestQuantity ( 0, "3.8 million litres", 3.8, "mg", 0.00003, "kg", WEIGHT ) )
26346	assertEquals ( 7, classUnderTest. getNumDiagonalSquaresAvailable ( Position. d5 ) )
26347	assertEquals ( PRICE, b. getPrice ( ) )
26348	Assert. assertEquals ( dataset. getName ( ) + ", parameter #" + i, expected [ i ], actual, 1e-6 * expected [ i ] )
26349	assertThat ( readBytes ( testee, 4 ), is ( "Hello|" ) )
26350	assertEquals ( "png", sink. preferredOutputFormatName ( ) )
26351	assertTrue ( resolved )
26352	assertEquals ( "12.3", converter. getAsString ( facesContext, new UIPanel ( ), null ) )
26353	assertEquals ( "mockdrone", configuration. browserCapabilities ( ) )
26354	Assert. assertFalse ( handler. managementOperation ( null, request, response ) )
26355	Assert. assertEquals ( 1, result. intValue ( ) )
26356	assertError ( "boundary", "myErrorCode" )
26357	Assert. assertEquals ( 0, an. analyze ( new CandidateNode ( new CandidateRule ( "test", rule ), nnode ), results ). size ( ) )
26358	assertFalse ( wouldFire )
26359	assertUnusedTagInSetTaggingRequest ( setTaggingRequest, String. valueOf ( true ) )
26360	assertCardLuhnDigit ( creditCard, type )
26361	assertNull ( resource )
26362	assertThat ( supplier. authForImage ( ), matchesAccessToken ( accessToken ) )
26363	assertThat ( actual, is ( expected ) )
26364	assertTrue ( filter. accept ( meta ) )
26365	Assert. assertEquals ( "Failure expected the name to be the same", "ChatroomDeleteDTO", MHRDTO. getDTOName ( ) )
26366	assertArrayEquals ( new String [ ] { "*", "1", "2", "3", "a", "b" }, list. toArray ( new String [ 0 ] ) )
26367	Assert. assertEquals ( pullRequest, parsedPullRequest )
26368	Assert. assertEquals ( "should have counted transfers even if no status callback was called", 2, listener. getCountingTransferCount ( ) )
26369	assertTrue ( "Document saved correctly", getDocument ( )!= null )
26370	assertEquals ( projectId, ontologyService. parseProjectId ( servletRequest ) )
26371	assertEquals ( "Names weren't equal.", organizationResponse. object. getId ( ), teamId )
26372	Assert. assertEquals ( "Images are not similar enough for " + name + " (" + base + ")", expected, sim, 1E-3 )
26373	assertThat ( result. statusCode, is ( Response. OK ) )
26374	assertEquals ( sqlEx, first )
26375	assertArrayEquals ( intData, getImgAsInts ( array2 ) )
26376	assertEquals ( density, 0.5 )
26377	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff34_" ) )
26378	assertTrue ( rules. size ( ) > 0 )
26379	Assert. assertEquals ( expected, actual )
26380	assertEquals ( value, ( Double ) subject. value ( ), 0.01 )
26381	assertions. doesNotContainKey ( key )
26382	assertThat ( command. getMaximumTimeMilliseconds ( ), is ( value ) )
26383	assertThat ( component. execute ( ), is ( expected ) )
26384	arrays. assertContainsOnly ( description, new byte [ 1 ], new byte [ 0 ] )
26385	assertEquals ( expectedCsv. get ( 0 ). getSchema ( ), schema )
26386	Assert. fail ( "Xfdf files are not equal" )
26387	assertThat ( CalendarWeek. from ( cw. toProlepticNumber ( ) ), is ( cw ) )
26388	assertNotNull ( attrs. getTable ( "x" ) )
26389	assertEquals ( ius, st )
26390	assertNotEquals ( circle1, circle2 )
26391	Assert. assertEquals ( expResult, result )
26392	assertEquals ( "http://localhost:8080/api/v1/key/123456/agency/1/command/predictions/" + "rs=16E|6010&rs=52|6010&rs=53|6010&rs=54|6010&rs=D4|6010&format=json", preEncodedPredictionsUrl )
26393	assertTrue ( taxonomy. contains ( A ) )
26394	Assert. assertEquals ( PUBLIC_VISIBILITY, this. mocker. getComponentUnderTest ( ). getVisibility ( this. entity1 ) )
26395	assertTrue ( thrown )
26396	Assert. assertEquals ( ( short ) 999, spanEvent. getSequence ( ) )
26397	assertEquals ( e. getFreeVars ( ), "i" )
26398	assertEquals ( expected, contentSummary. toString ( false, true ) )
26399	Assert. assertNull ( "Entity should be null", result )
26400	assertEquals ( Result. STOP, and. apply ( pathData, - 1 ) )
26401	assertEquals ( "Incorrect number of messages in mailbox", 1, userInbox. size ( ) )
26402	assertResultSet ( res )
26403	assertThat ( prop. satisfiesConstraints ( value, session ), is ( false ) )
26404	assertTrue ( info. authenticate ( ) )
26405	Assert. assertEquals ( "1-2", TemplateUtils. format ( tpl, args ) )
26406	assertNotNull ( resource )
26407	Assert. assertTrue ( result )
26408	assertEquals ( found, xa )
26409	assertNotNull ( exception )
26410	assertThat ( formatter. format ( PlainDate. of ( 2015, 1, 1 ) ), is ( "EEEE, 2015-01-01" ) )
26411	assertArrayEquals ( exp, r )
26412	Assert. assertFalse ( pg1. intersects ( pg2 ) )
26413	Assert. assertEquals ( "Intvar", actual )
26414	assertEquals ( 0, content. refCnt ( ) )
26415	assertMockEndpointsSatisfied ( )
26416	assertEquals ( expectedCssString, rewriteCssString )
26417	assertTrue ( msg, dynAny. equal ( dynAny2 ) )
26418	Assert. assertEquals ( "SELECT SECOND('10:05:03');", text )
26419	assertEquals ( 0.8, val, 1e-5 )
26420	Assert. assertEquals ( 24, concept. getId ( ). intValue ( ) )
26421	Assert. fail ( "NullPointerException should have been thrown" )
26422	assertEquals ( 0, arr. length )
26423	assertEquals ( 0, r1. compareTo ( r2 ) )
26424	Assert. isTrue ( true )
26425	assertThat ( getConfigurationOfDmnEngine ( ). getScriptEngineResolver ( ), is ( scriptEngineResolver ) )
26426	assertFalse ( matches )
26427	assertThat ( response, containsString ( "ok" ) )
26428	assertFalse ( scope1. equals ( scope2 ) )
26429	assertTrue ( found. size ( ) > 0 )
26430	assertEquals ( g1, g2 )
26431	Assert. assertTrue ( true )
26432	assertNotNull ( result )
26433	Assert. assertEquals ( Integer. toHexString ( 38 ), sb. toString ( ) )
26434	assertTrue ( n1. equals ( n2 ) )
26435	assertThat ( orderType. getJavaClassObject ( ), is ( clazz ) )
26436	assertEquals ( expectedFeatures, tokens. get ( 0 ). getAllFeatures ( ) )
26437	assertEquals ( "Jersey/2.0-m09 (HttpUrlConnection 1.7.0_04) from the server", response )
26438	Assert. assertEquals ( "number emitted tuples", numtuples, itemSink. count )
26439	assertEquals ( expected, actual )
26440	assertTrue ( "Accumulator failed", running. get ( ) )
26441	arrays. assertDoesNotContain ( description, null, new short [ 2 ] )
26442	assertNull ( kieModule )
26443	assertPlanMatches ( expected )
26444	assertThat ( result, is ( instanceOf ( Success. class ) ) )
26445	assertEquals ( 2, provider. getFilters ( ). length )
26446	Assert. assertEquals ( 211, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
26447	assertThat ( result, is ( nullValue ( ) ) )
26448	Assert. assertEquals ( gen. generateInchi ( ac ). getInChI ( ), "InChI=1S/Cl/i1+2" )
26449	assertEquals ( expResult, result )
26450	Assert. assertEquals ( "Expected null result", null, value )
26451	assertEquals ( 2, builder. build ( ). getElementValues ( ). size ( ) )
26452	assertFalse ( or. isDefined ( ) )
26453	assertions. containsSequence ( ( short ) 6, ( short ) 6, ( short ) 8, ( short ) 10, ( short ) 10 )
26454	assertEquals ( Lists. newArrayList ( DefaultDistance. of ( 1000, DistanceUnit. METERS ) ), Lists. newArrayList ( Distances. distanceIterator ( upto ) ) )
26455	assertThat ( tuple. getIntegerOrDefault ( "field", 2 ), equalTo ( 1 ) )
26456	assertEquals ( NON_ASCII_UTF8_STRING, result )
26457	assertThat ( databaseFixer. getAcceptedProperties ( ), contains ( hasProperty ( hasProperty ( "id", equalTo ( "true" ) ), hasProperty ( "id", equalTo ( "true" ) ), hasProperty ( "id", equalTo ( "true" ) ), hasProperty ( "id", equalTo ( "true" ) ), hasProperty ( "id", equalTo ( "true" ) ), hasProperty ( "id", equalTo ( "true" ) ), hasProperty ( "id", equalTo ( "true" ) ), hasProperty ( "id", equalTo ( "true" ) ), hasProperty ( "id", equalTo ( "true" ) ), hasProperty ( "id", equalTo ( "true" ) ), hasProperty ( "id", equalTo ( "true" ) ), hasProperty ( "id", equalTo ( "true" ) ) ) )
26458	assertTrue ( "Focus should be in the Grid", getFocusedElement ( ). getAttribute ( "class" ). contains ( "v-grid" ) )
26459	assertEquals ( userId, action. getUserId ( ) )
26460	assertThat ( applied, is ( RuntimeContext. DEFAULT ) )
26461	assertEquals ( yamlAsString, yamlParsers. get ( "snake" ) )
26462	assertNull ( result )
26463	Assert. assertNull ( result )
26464	assertEquals ( CONFIG, logger. getFormattedMessage ( ) )
26465	assertEquals ( newArrayList ( "bar1", "bar2" ), response. getMultipleHeaderString ( "foo" ) )
26466	Assert. assertFalse ( isOk )
26467	assertFalse ( service. hasProperty ( "test" ) )
26468	assertThat ( codes, containsInAnyOrder ( "50015-7", "47239-9" ) )
26469	assertThat ( msg. data ( ), is ( new byte [ ] { 10, 11, 12 } ) )
26470	assertFalse ( valid )
26471	Assert. assertEquals ( HttpStatus. SC_UNAUTHORIZED, response. getCode ( ) )
26472	assertThat ( restored. get ( ), is ( option. get ( ) ) )
26473	assertEquals ( "/_clear_cache?bloom=true&fieldData=false", clearCache. getURI ( ElasticsearchVersion. UNKNOWN ) )
26474	Assert. assertEquals ( state. IDLE, state )
26475	assertThat ( list. size ( ), is ( sizeBeforeAdding + 1 ) )
26476	Assert. assertTrue ( diff < 50 )
26477	assertEquals ( "The P42 Property", withLabel. findLabel ( "en" ) )
26478	Assert. assertEquals ( actionDetailsArray, actionOut. getData ( ) )
26479	assertEquals ( "http://example.net/ns#", x1 )
26480	assertEquals ( "The first state on third page is not correct", FIRST_STATE_THIRD_PAGE, actual )
26481	assertEquals ( expected, result )
26482	assertThat ( rollup. isFreshEnough ( ), is ( false ) )
26483	assertEquals ( p1, p2 )
26484	Assert. assertEquals ( "false", p. getProperty ( PseudoAuthenticationHandler. ANONYMOUS_ALLOWED ) )
26485	assertThat ( mentions, hasItem ( mentionedEntity ( 0, mention. length ( ), EntityType. ANNOTATION_PROPERTY, iri ) ) )
26486	assertObject ( list, gtype )
26487	Assert. assertEquals ( 16, service. getSalt ( ). length ( ) )
26488	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
26489	assertEquals ( 404, response. getStatus ( ) )
26490	assertNull ( parsedArg )
26491	assertTrue ( s. getName ( ). equals ( "scheduling" ) )
26492	assertTrue ( "PointFormats setter is not working correctly", delegate. getPointFormats ( ). equals ( supportedPointFormats ) )
26493	assertTrue ( value. isReplaceableBy ( 99L, 11, ComparableComparator. INSTANCE ) )
26494	assertThat ( runtime. getRunFinished ( ). isPresent ( ), is ( false ) )
26495	assertEquals ( "Hello", sb. toString ( ) )
26496	assertOut ( "a += b" )
26497	assertThat ( s, is ( "1970-01-01 06:00 Foxtrot" ) )
26498	assertArrayEquals ( expected, actual )
26499	this. assertScriptReturnsTrue ( "" + "String s = \\"a\\";\\n" + "\\n" + "switch (s) {\\n" + "case \\"a\\": case \\"b\\": case \\"c\\":\\n" + "    return false;\\n" + "case \\"d\\": case \\"e\\": case \\"f\\":\\n" + "    return true;\\n" + "default:\\n" + "    return false;" + "}\\n" )
26500	assertEquals ( expected, actual )
26501	assertTrue ( verifyProps ( a, LIST_A ) )
26502	assertThat ( xPath, is ( "(.//*[@id ='myID']//*[@text() = 'text'])" ) )
26503	assertThat ( e, instanceOf ( MyException. class ) )
26504	assertEquals ( "Unsupported parameter test for pwd.", result )
26505	assertEquals ( expected, result )
26506	assertEquals ( 0, errors. size ( ) )
26507	assertEquals ( "TSQL should be alive", true, tc. isAlive ( ) )
26508	assertEquals ( "subName", expr. exec ( new PmExprExecCtxt ( pmConversation ) ) )
26509	Assert. assertEquals ( "Missing component id", MicroPipelineValidationResult. MISSING_COMPONENT_ID, new MicroPipelineValidator ( ). validateComponent ( cfg, queues, Collections. < String > emptySet ( ) ) )
26510	Assert. assertEquals ( result. getResultSize ( ), 1 )
26511	assertThat ( matcher. matches ( "<some xml=\\"true\\" />" ), is ( true ) )
26512	assertTrue ( "No keyword movies found",! result. isEmpty ( ) )
26513	assertEquals ( testEntry. f1, encoding. name ( ) )
26514	assertTrue ( pth. length ( ) > 0 )
26515	Assert. assertEquals ( "Update_rows_v1", actual )
26516	assertEquals ( SwitchingProtocols. MESSAGE, ri. getDescription ( ) )
26517	assertEquals ( "2h2m2.500s", s )
26518	assertEquals ( DOMAIN + '@' + RESOURCE, bareJID )
26519	Assert. assertFalse ( "Config contains null", sw. toString ( ). contains ( "null" ) )
26520	assertEquals ( "valFieldVal", generator. getValue ( ) )
26521	assertTrue ( line. contains ( "HBASE" ) )
26522	assertEquals ( 0, changes. size ( ) )
26523	assertFalse ( CommitUtils. isMergedInto ( "test_branch", MASTER, repo ) )
26524	assertDestinationFileContentIsMultiPartContent ( )
26525	assertEquals ( 1, callCnt. get ( ) )
26526	assertEquals ( String. format ( "INSERT INTO mycatalog.mytable (col3) VALUES (nextval('%myschema.my_seq'))", "mycatalog.mytable", "mytable" ), theSql )
26527	Assert. assertTrue ( "No metrics should be registered", this. metricRegistry. getNames ( ). isEmpty ( ) )
26528	Assert. assertEquals ( aString, sut. getInstance ( ) )
26529	Assert. assertNotNull ( tasks )
26530	Assert. assertEquals ( 16 * iterations, lockedCounter. get ( ) )
26531	assertEquals ( "bar", json. toJSON ( ). getString ( "value" ) )
26532	assertNull ( factory. getBaseSkin ( facesContext ). getParameter ( facesContext, Skin. GENERAL_BACKGROUND_COLOR ) )
26533	assertEquals ( map1, map2 )
26534	Assert. assertFalse ( fastMergerDecisionMaker. isFastMergePossible ( fileMetadata ) )
26535	assertThat ( e. getStatus ( ), equalTo ( Status. NOT_FOUND ) )
26536	assertTrue ( "Sun implementation took " + sunGap + " millisseconds and default implemetation took " + defaultGap + " millisseconds.", sunGap < defaultGap )
26537	assertThat ( rowsAffected, is ( 1 ) )
26538	Assert. assertTrue ( "Should have 0 event", events. size ( ) == 0 )
26539	assertEquals ( "INSERT INTO STREAMING_KEYSPACE_NAME (TABLE,COLUMN,TIMESTAMP) values (\\"timestamp\\",\\"value\\")", insert. toString ( ) )
26540	assertEquals ( "Faire action sur \\\\*([^\\\\*]*)\\\\*", descriptor. regex )
26541	assertEquals ( "{a1:'v1',a2:'123',a4:'',b1:'true',b2:'123',b3:'null',c1:'v1',c2:'123',c4:''}", r )
