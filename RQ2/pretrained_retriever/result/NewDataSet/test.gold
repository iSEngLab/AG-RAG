0	assertEquals ( "property not set correctly", 0.25, bean. getDoubleProperty ( ) )
1	Assert. assertEquals ( bitSet. cardinality ( ), wrappedBitSetBitmapBitSet. size ( ) )
2	assertEquals ( httpURLConnection, delegatingConfigurationProvider. getDelegateConnection ( contentType, parameters ) )
3	assertFalse ( p1. equals ( null ) )
4	assertThat ( result. isValid ( ), is ( false ) )
5	assertEquals ( "2 3", minMax. iterativeSearchForBestMove ( board, 1 ) )
6	assertEquals ( 1, connPerRoute. getMaxPerRoute ( route ) )
7	Assert. assertEquals ( ( new GeometricMean ( ) ). evaluate ( scores ), stats. getGeometricMean ( ), 0 )
8	assertEquals ( 4, sortedPlugins. size ( ) )
9	XmlAssert. assertEquals ( EXPECTED_XML_RESPONSE, xmlResponse )
10	assertEquals ( "", result )
11	Assert. assertEquals ( vector. dotProduct ( new Vector ( 20, 25, 30 ) ), 800, 1 )
12	assertEquals ( "Triangle area is not correct", 0, a, epsilon )
13	assertLog ( Log. DEBUG, "test debug argument argument2" )
14	assertSNAPSHOTPaths ( asList ( component. group ( ), component. name ( ), baseVersion, component. version ( ) ), paths, true )
15	assertEquals ( "INSERT INTO myTableName(customDateColumn) VALUES(?)", Utils. singleLine ( sql ) )
16	assertThat ( isValid, is ( false ) )
17	tester. assertRenderedPage ( HomePage. class )
18	Assert. assertEquals ( ON_CELL_CLICK + A1, jq ( "$msg" ). toWebElement ( ). getText ( ) )
19	assertFalse ( "isLoaded should return false if not all required elements are displayed and " + "RequireAll annotation is used.", testView. isLoaded ( ) )
20	assertEquals ( "POINT (0 0)", ClobType. getString ( ( ClobType ) Evaluator. evaluate ( ex ) ) )
21	Assert. assertTrue ( this. manager. connect ( this. person1, this. family1 ) )
22	assertClients ( registryAdapterService, REGISTRY_PROXY_NULL_VALUE, noProxyList )
23	assertThat ( actualBrowser, IsNot. not ( "" ) )
24	assertEquals ( Arrays. asList ( "aa", "ab", "ac" ), kittens )
25	assertEquals ( 1, db. getAllLinks ( ). size ( ) )
26	assertTrue (! result )
27	assertTrue ( requestImpl. xhr ( ) )
28	assertEquals ( 5, result )
29	assertEquals ( List. of ( new Text ( "line1" ), new Text ( "line2" ) ), output )
30	assertEquals ( "Date parsing is wrong", expectedDate, mapper. readBitemporalDate ( columns, "vt_to" ). toDate ( ) )
31	assertThat ( target. getFlowId ( ), is ( nullValue ( ) ) )
32	assertEquals ( 81, options. getOptions ( ). port )
33	Assert. assertNull ( cGroupsBlkioResourceHandlerImpl. reacquireContainer ( containerIdMock ) )
34	assertEquals ( 2 * ROW_HEIGTH, heigth, 0.001f )
35	assertEquals ( "Regarding", lineages. get ( 0 ). substring ( 0, 9 ) )
36	Assert. assertFalse ( new LogAdapter ( "logger.name.here", mockConfigShort ( ) ). isErrorEnabled ( ) )
37	assertFalse ( groupsManager. isGroupMember ( sess, group3, member ) )
38	Assert. assertEquals ( "true", result )
39	assertEquals ( set ( FlagsWithZero. V0, FlagsWithZero. V1, FlagsWithZero. V2, FlagsWithZero. V4, FlagsWithZero. V8 ), set ( positionValues ) )
40	assertTrue ( brutalAds. shouldShowAds ( ) )
41	assertEquals ( false, m. matches ( ) )
42	assertThat ( updateSuccessful, equalTo ( false ) )
43	Assert. assertTrue ( "Stub exception was not forwarded.", stubFailed )
44	assertTrue ( Arrays. equals ( data, decompressed ) )
45	assertNotNull ( result )
46	paths. assertHasDigest ( INFO, actual, digest, expected )
47	assertThat ( indexOfLastScoreCalc, lessThan ( indexOfLastMedRec ) )
48	Assert. assertFalse ( this. extension. isVocabularySupported ( this. vocabularyInstance ) )
49	assertEquals ( expected, real )
50	assertTrue ( "Following base items are missing: " + Arrays. toString ( missing. toArray ( ) ), missing. isEmpty ( ) )
51	Assert. assertTrue ( ModuleUtil. matchRequiredVersions ( openmrsVersion, requiredOpenmrsVersion ) )
52	assertArrayEquals ( ordered, result. toArray ( new String [ 0 ] ) )
53	assertEquals ( "The resource you are attempting to access cannot be found", error. getString ( "reason" ) )
54	assertEquals ( "probability", 0.01313, probability, 0.00001 )
55	assertEquals ( "getNamespaces() returns an array of unique used namespaces", foo, application. getNamespaces ( ) )
56	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"yes\\"?><test/>", stringifiedTestObject )
57	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff37_" ) )
58	assertEquals ( expected, actual )
59	assertEquals ( "_cat/shards/testIndex", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
60	assertNull ( user )
61	assertEquals ( 501, response. getStatus ( ) )
62	assertTrue ( getTaint ( bc. foo ( ) )!= 0 )
63	assertEquals ( expResult, result )
64	assertEquals ( System. getenv ( "PATH" ), changeLogParameters. getValue ( "PATH", null ) )
65	assertEquals ( expected, result )
66	assertThat ( PlainDate. of ( 2000, 12, 2 ). with ( element. minimized ( ) ), is ( PlainDate. of ( 2000, 1, 1 ) ) )
67	assertThat ( job. getDuedate ( ), is ( addSeconds ( removalTime, START_DELAY ) ) )
68	Assert. assertEquals ( 0, java8. parse ( code ). findDescendantsOfType ( ASTCastExpression. class ). size ( ) )
69	assertEquals ( expResult, result )
70	Assert. assertEquals ( PRIO_NODE, compoundWrite. childCompoundWrite ( new Path ( ".priority" ) ). apply ( EmptyNode. Empty ( ) ) )
71	assertEquals ( 0, serverStatus. getTotalTime ( ) )
72	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"answer\\":{\\"headers\\":{\\"P-Header\\":\\"value goes here\\",\\"Remote-Party-ID\\":\\"\\\\\\"John Doe\\\\\\"<sip:jdoe@foo.com>;party=calling;id-type=subscriber;privacy=full;screen=yes\\"}}},{\\"say\\":[{\\"value\\":\\"Hello, you were the first to answer.\\",\\"name\\":\\"say\\"}]}]}" )
73	assertEquals ( expected, actual )
74	Assert. assertEquals ( uri1, uri2 )
75	assertEquals ( "Bearer TEST_ACCESS_TOKEN", testHttpServer. getLastAuthorizationHttpHeader ( ) )
76	assertEquals ( ">a >b >c <c <b >d <d <a ", rec. buffer. toString ( ) )
77	assertEquals ( "x/y{@c}(@{http://c}n = 1.0) and (@{http://c}g = '987')", SelectorStepBuilder. toString ( steps ) )
78	assertEquals ( 1, target. getFilters ( ). size ( ) )
79	Assert. assertTrue ( true )
80	assertEquals ( "       \\n" + "       \\n" + "    ��  \\n" + "       \\n" + "       \\n" + "       \\n" + "       \\n", printer. print ( ) )
81	assertEquals ( 0, ret )
82	assertEquals ( "Translation failed", AuthorizationException. class, pelopsException. getClass ( ) )
83	assertTrue ( code, Utilities. deepEquals ( expected, crs, ComparisonMode. DEBUG ) )
84	assertEquals ( expected, result )
85	Assert. assertEquals ( expectedResponse, proxy. sayHello ( message ) )
86	assertEquals ( val. getPeriods ( ), 3654 )
87	TestUtils. assertEquals ( new double [ ] { - 1, 3, 1 }, b. toArray ( ), 1.0e-12 )
88	assertEquals ( "the NBSP must survive", "test ", property. getValue ( ) )
89	assertEquals ( Coin. ZERO, wallet. getBalance ( ) )
90	assertIdentical ( "/simple_parts_unmerged.owl", unmerged )
91	assertResultSet ( res )
92	assertTrue ( GenotypeDataCompareTool. same ( genotypeData1, genotypeData2 ) )
93	assertEquals ( masterRoot, rootDir )
94	assertEquals ( 1, userDataMap. size ( ) )
95	assertNotNull ( request )
96	response. then ( ). log ( ). ifValidationFails ( ). assertThat ( )
97	assertEquals ( expected, actualQuery )
98	Assert. assertNotNull ( zoo )
99	assertEquals ( 8, interfaces. size ( ) )
100	context. assertIsSatisfied ( )
101	assertTrue ( matcher. doCredentialsMatch ( token, account ) )
102	Assert. assertNotNull ( state )
103	assertEquals ( expectedQuery, actualQuery )
104	Assert. assertEquals ( expected, actual )
105	assertNotNull ( fixture )
106	assertThat ( getProcessingError ( ), allOf ( containsMissingStringParameterError ( "externalRestIdentitySecret" ), containsMissingIntParameterError ( "externalRestHttpsPort" ) ) )
107	assertEquals ( future, underTest. collect ( futures, collector ) )
108	assertEquals ( expected, settings. getProperties ( ) )
109	PSLTest. assertRule ( dataStore, input [ i ], expected [ i ] )
110	UnitTestUtils. assertChiSquareAccept ( new String [ ] { "0", "1", "2" }, expected, observed, 0.01 )
111	assertThat ( runtimeInfo. getRuntimeClassName ( ), is ( "org.talend.components.localio.runtime.fixed.FixedDatasetRuntime" ) )
112	assertTrue ( sut. isEmpty ( ) )
113	assertEquals ( expected, actual )
114	assertEquals ( 1, waitingPacketsQueue. size ( ) )
115	assertEquals ( "bound changed, event must be fired", 1, report. getEventCount ( EventType. UPPER_BOUND_CHANGED ) )
116	assertNotNull ( AuthorizedConnectApp. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
117	Assert. assertEquals ( truststorePath2, System. getProperty ( "javax.net.ssl.trustStore" ) )
118	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFLoteEnvioRetornoRecebimentoInfo ( ). toString ( ) )
119	assertEquals ( 2, Struct. size ( unionWithStruct ) )
120	assertEquals ( "The records number is correct " + clusterName. getName ( ), 2, resultIterator. size ( ) )
121	assertEquals ( "bar", output )
122	assertEquals ( 3, ranges. getRanges ( ). size ( ) )
123	assertEquals ( i1, i2 )
124	assertEquals ( binding ( vars, "\\"1\\"", "\\"2\\"" ), removePseudoVars ( readCSV ( csv, true, '\\t', '"' ). next ( ) ) )
125	assertEquals ( 31700, leis. readUnsignedInt ( ) )
126	assertTrue ( true )
127	assertEquals ( "192.168.0.0/8", configuration. getNetworkMask ( ) )
128	assertTrue ( uvp. getFirstData ( ) == 25.2 )
129	assertEquals ( "Failed to generate enum switch block", SWITCH_BLOCK_ENUM, s )
130	assertEquals ( "{}", r. toString ( ) )
131	assertEquals ( BPResultType. PASS, result. getResultType ( ) )
132	assertEquals ( - 0.123, empty. getLatitudeError ( ), 0.001 )
133	assertEquals ( 0, listener. updatedInjectedFilters. size ( ) )
134	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + destPdf, sourceFolder + cmpPdf, destinationFolder ) )
135	assertTrue ( equals )
136	assertEquals ( expectedQuery, actualQuery )
137	assertEquals ( "Valid cid without dash test failed.", CID_VALID, AdWordsSessionUtil. getClientCustomerId ( session ) )
138	assertEquals ( 0, query. getOrderBy ( ). getExpressionPosition ( 0 ) )
139	result. assertIsSatisfied ( 1000 )
140	Assert. assertEquals ( 1, ret )
141	assertTrue ( preValidationFailedEx. getMessage ( )!= null )
142	assertEquals ( m1, m2 )
143	assertNotNull ( afeTipoDescuento. getId ( ) )
144	context. assertTrue ( ar. succeeded ( ) )
145	Assert. assertEquals ( 1, userService. getUsers ( "Susy Kingman", roles, false ). size ( ) )
146	Assert. assertTrue ( "Shutdown must be successful", emitter. shutdown ( ) )
147	Assert. assertTrue ( futureDigest. digest ( ). keyDigest ( ). isEmpty ( ) )
148	assertTrue ( evaluator. shouldProxyHost ( "     " ) )
149	assertThat ( path. isNormalized ( ), is ( false ) )
150	assertThat ( expected, equalTo ( actual ) )
151	assertEquals ( childProject1. getCustomWorkspace ( ), parentWorkspace )
152	assertEquals ( 0., calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
153	assertNotNull ( result )
154	assertMultilinesEquals ( "                    Percent\\n" + "Number of values:         6\\n" + "Minimum value:        10.0%\\n" + "Maximum value:        80.0%\\n" + "Mean value:           43.3%\\n" + "Root Mean Square:     51.6%\\n" + "Standard deviation:   30.8%\\n", text )
155	assertEquals ( "tpc/bi-hourly/year=2014/month=februari/day=01/hour=2", path )
156	assertThat ( actualExceptionCode, is ( "defaultExceptionCode001" ) )
157	assertInternalWktEqualsRegex ( "(?m)\\\\Q" + "Concat_MT[\\n" + "  Param_MT[��Affine parametric transformation��,\\n" + "    Parameter[��A0��, 0.017453292519943295, Id[��EPSG��, 8623]],\\n" + "    Parameter[��B1��, 0.017453292519943295, Id[��EPSG��, 8640]]],\\n" + "  Param_MT[��Geocentric inverse interpolation��,\\n" + "    Parameter[��dim��, 2],\\n" + "    Parameter[��src_semi_major��, 6378249.2],\\n"
158	assertEquals ( result, demo. IncludeNestedSectionTest. render ( ) )
159	assertAnnotatedIgnored ( tables. at ( 0, 2, 0 ) )
160	Assert. assertTrue ( n <= 1 )
161	assertTrue ( success )
162	assertEquals ( mvjs. size ( ), 0 )
163	assertEquals ( "\\"https://login.salesforce.com/services/Soap/u/42.0\\"", properties. connection. endpoint. getValue ( ) )
164	assertFalse ( it. hasNext ( ) )
165	assertEquals ( Sets. newHashSet ( ), workflowTypes )
166	assertNotNull ( loop. iterator ( ) )
167	assertNotNull ( sealInputStream )
168	assertEquals ( in. toString ( ), out. toString ( ) )
169	assertFalse ( b )
170	assertNotNull ( result )
171	assertNull ( prozessor. getHostname ( ) )
172	assertEquals ( ZippelGCD ( a, b ). monic ( ), EZGCD ( a, b ). monic ( ) )
173	assertEquals ( "success", result )
174	assertThat ( rook, is ( board. getChessBoard ( ) [ startRow ] [ startCol + 2 ]. getFigure ( ) ) )
175	assertEquals ( "A;Name_With-Various***Characters?", victim. readName ( ) )
176	assertNotNull ( result )
177	assertThat ( eventListener. wasCalled, IsEqual. equalTo ( false ) )
178	assertTrue ( "Exchange failed", exchange. isFailed ( ) )
179	assertEquals ( expectedCustomer, customer )
180	Assert. assertEquals ( 0, encryCredentialManager. encrypt ( null ). length ( ) )
181	assertEquals ( 200, response. getStatusLine ( ). getStatusCode ( ) )
182	Assert. assertEquals ( 0, analyser. getNumberOfPickupsAtBeginning ( route ), 0.01 )
183	dataLoader. assertDataToJsonEqualsExpectedFileContent ( "testUsingCollectionHamcestMatchers.json", result )
184	assertEquals ( "foo", instance )
185	assertThat ( stringWriter. toString ( ), equalTo ( "HTTP/1.0 200 OK\\n" + "Server: JSCover/testVersion\\n" + "Content-Type: text/html\\n" + "Connection: close\\n" + "Content-Length: 7\\n" + "\\n" + "theHtml" ) )
186	assertEquals ( "finally", getValue ( ) )
187	assertNull ( file )
188	assertTrue ( "get whole document numbers.xml", m. matches ( ) )
189	Assert. assertFalse ( result )
190	assertEquals ( "CSS link tag should not be bypassed", VisitStatus. MODIFY, getVisitStatus ( cssLink ) )
191	assertEquals ( "URI is not built correctly", new URI ( "http://foo/bookstore/books/bar" ), newUri )
192	Assert. assertEquals ( tested. taskManager, tested. getTaskManager ( ) )
193	assertEquals ( "bar", p. deref ( 200, ( Object ) null ) )
194	assertEquals ( "{}", n )
195	assertEquals ( "John", opt. get ( ) )
196	Assert. assertEquals ( "password", result. trim ( ) )
197	assertEquals ( "T>Debug messages do not interpret [[*]]emphasis[[*]]", testLog. getMessage ( ) )
198	Assert. assertEquals ( "Lead 'Mr. Itai Agmon' was found", "Lead 'Mr. Itai Agmon' was found" )
199	assertTrue ( validator. isValid ( new Object ( ), null ) )
200	assertArrayEquals ( refar, d. getResult ( ) )
201	assertThat ( insert. getRoutingDocument ( ), is ( insert. getDocument ( ) ) )
202	assertEquals ( "(int x) -> (x* 2)", CodeModelTestsHelper. toString ( aLambda ) )
203	assertEquals ( "indexvaluesasc:myIndex", t. toString ( ) )
204	assertEquals ( "SELECT field.subField[0] FROM Class", q. toString ( ) )
205	assertSame ( fieldVar, result )
206	assertArrayEquals ( new long [ ] { 2, 2, 1, 11, 111, 2, 22, 222, - 1, - 1, - 1, 3, 33, 333, ReplicaState. RBW. getValue ( ), 4, 44, 444, ReplicaState. RWR. getValue ( ) }, blocks. getBlockListAsLongs ( ) )
207	assertTrue ( wrapper. isRunInTx ( ) )
208	assertEquals ( expected, ievent. getEventObj ( ). getPayload ( ) )
209	assertTrue ( constraint. fulfilled ( iContext ) )
210	assertEquals ( HttpStatusCode. NO_CONTENT_204, response. getStatus ( ) )
211	assertColumnHeaderOrder ( 0, 1, 2, 3, 5, 6, 7 )
212	sensei. assertWriteXml ( prop )
213	assertTrue ( ( ( Constant ) update. getChangeList ( ). getClauses ( ). get ( 0 ). getValue ( ) ). isMultiValued ( ) )
214	assertEquals ( null, result )
215	assertEquals ( 42, impl. getPercentile ( 50, now + 1 ) )
216	assertEquals ( 1, list. size ( ) )
217	assertTrue ( "Jdbc realm should be created", ops. exists ( TEST_JDBC_REALM_ADDRESS ) )
218	assertEquals ( expected, stats )
219	assertEquals ( 5, call. numCloses )
220	assertEquals ( "ClassPathResource{path='" + NON_EXISITING_CLASSPATH_RESOURCE + "'}", classPathResource. toString ( ) )
221	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
222	assertEquals ( "IRight.m()", new A ( ). m ( ) )
223	assertTrue ( httpResponseExceptionThrown )
224	assertEquals ( Arrays. asList ( new ImmutablePair < String, String > ( "bar", null ), new ImmutablePair < String, String > ( "foo", "foo" ), new ImmutablePair < String, String > ( null, "quux" ) ), outputs )
225	assertEquals ( "The object is to light", message )
226	assertEqualsAndHash ( one, two )
227	assertThat ( isNegative, rejects ( TestMatcher. Instance, theMismatch ) )
228	assertEquals ( "[0, 2, 4, 6, 8]", IteratorToGeneratorAdapter. adapt ( range ). toCollection ( ). toString ( ) )
229	assertTrue ( "Should throw NoSuchColumnFamilyException", caughtNSCFE )
230	assertObjectEquals ( "{'in':'header',name:'Accept-Charset',type:'string'}", pi )
231	assertEquals ( deserialized, obj )
232	Assert. assertTrue ( patient. equals ( patientproxyobject ) )
233	assertExpectedInitResult ( harness. intialize ( workspaceRoot ) )
234	assertArrayEquals ( new String [ ] { "-vws", "windows\\\\viewTag.vws" }, instance. getCommandArguments ( false, "viewTag" ) )
235	assertions. isInstanceOfAny ( null, null )
236	assertEquals ( ( long ) handler. getContext ( ). getTablespaceVersionsMap ( ). keySet ( ). iterator ( ). next ( ). getVersion ( ), ( long ) handler. getContext ( ). getCurrentVersionsMap ( ). values ( ). iterator ( ). next ( ) )
237	assertEquals ( 2, Iterators. size ( iter ) )
238	Assert. fail ( gClients [ i ]. error )
239	assertNotNull ( result )
240	assertThat ( new DOMSource ( expected ), isEquivalentTo ( new DOMSource ( xrdsDocument ) ) )
241	assertEquals ( 1.0, result, 0.1 )
242	assertEquals ( Arrays. asList ( "0", "10", "12", "22" ), getOutputStrings ( ) )
243	assertEquals ( "user1", response )
244	assertEquals ( new SchemaAndValue ( schema, struct ), avroData. toConnectData ( avroSchema, avroRecord ) )
245	assertEquals ( customer, responseImpl. getContent ( ) )
246	assertNotNull ( tg )
247	assertFalse ( "Should have failed to create a MapReduce command without a output ono-inline.", built )
248	assertNotEquals ( Movie. UNKNOWN, result )
249	assertTrue ( aggregator. getTableName ( false )!= null )
250	assertSame ( chatLogger, testUser. getPrivateChatLogger ( ) )
251	assertEquals ( "34 abc\\n", found )
252	given ( ). get ( url ). then ( ). assertThat ( )
253	assertEquals ( Pair. of ( "boza". hashCode ( ), "boza" ), Iterables. getOnlyElement ( emitter. getOutput ( ) ) )
254	Assert. assertEquals ( "sub", s )
255	Assert. assertEquals ( "1516042231144", date. getExample ( ). toString ( ) )
256	Assert. assertNotNull ( drugs )
257	assertTestEvent ( event )
258	assertFalse ( filter. shouldInclude ( source, "some.property" ) )
259	assertThat ( query, is ( notNullValue ( ) ) )
260	assertThat ( ByteUtil. toByte ( i ). byteValue ( ), is ( ( byte ) 1 ) )
261	Assert. assertTrue ( data. isToTest ( "foo.Bar", 3 ) )
262	assertNotNull ( "converter must not be null", s )
263	assertEquals ( "<a><b><xxx newElementAttribute=\\"1234\\"></xxx></b></a>", result. getResult ( ) )
264	assertEquals ( statement. getStatementId ( ), "" )
265	assertThat ( "No NullPointerException or unexpected Exception thrown when providing null to PushBuilder.method()", npeThrown. get ( ), is ( true ) )
266	assertEquals ( expResult, result )
267	assertEquals ( HttpStatusCode. INTERNAL_SERVER_ERROR. code, response. getStatus ( ) )
268	assertThat ( future. get ( ), equalTo ( "all is well, nothing to see here" ) )
269	assertThat ( service. getInstanceId ( ), is ( connectorId. toString ( ) ) )
270	Assert. assertNotNull ( funcionario )
271	assertEquals ( "TTGGGGCCTCTAAACGGGGTCTT" + System. lineSeparator ( ) + "TTGGGGCCTCTAAACGGG-TCTT" + System. lineSeparator ( ) + "TTGGGGC-TCTAA-CGGG-TCTT" + System. lineSeparator ( ), msa. toString ( ) )
272	assertEquals ( 0, objs. size ( ) )
273	assertEquals ( 1000, cnt. getCount ( ) )
274	assertEquals ( field. getType ( ). getName ( ), injectionNode. getClassName ( ) )
275	assertMatchersEqual ( TypeBasedMatcherDispatcher. < AnnotationFS > builder ( ts ). addSubmatcher ( chunkType, expectedMatcher ). build ( ), actualMatcher )
276	assertTrue ( "permission was not granted.", readAnalysisSubmissionPermission. isAllowed ( auth, 1L ) )
277	assertFalse ( routeSpecification. isSatisfiedBy ( itinerary ) )
278	assertEquals ( second. get ( ), first. or ( second ). get ( ) )
279	Assert. assertNotNull ( cu )
280	assertEquals ( value, result. get ( 0 ). getHasHumanLabels ( ) )
281	assertThat ( args, contains ( "images", "foo:1.0" ) )
282	assertTypeParameterIs ( ReflectionUtilTest. class )
283	assertEquals ( p1, p2 )
284	assertEquals ( 0L, messageLatch. getCount ( ) )
285	assertTrue ( certificate. isRouter ( ) )
286	assertThat ( name + " has no description", description, is ( notNullValue ( ) ) )
287	assertNotNull ( Credential. reader ( ). read ( ) )
288	assertEquals ( 0, latch. getCount ( ) )
289	assertThat ( getCompiledResult ( ), is ( true ) )
290	assertThat ( u. toString ( ), containsString ( name ) )
291	assertEquals ( false, result )
292	assertEquals ( ch, buf. getChar ( ) )
293	assertEqualsIgnoreLineEnding ( xmlString, "<?xml version='1.1' encoding='UTF-8'?><long>0</long>" )
294	assertTrue ( status )
295	YamlJsonAssert. assertEquals ( expected, actual, DocumentType. JSON )
296	assertThat ( ConnectionStrategy. backwardsCompatible ( usePrivateDnsName, connectUsingPublicIp, associatePublicIp ), equalTo ( ConnectionStrategy. PUBLIC_IP ) )
297	assertFalse ( ( Boolean ) result )
298	assertEquals ( "hello", new String ( serverHandler. data ) )
299	assertTrue ( sink. getInvalidConfiguration ( ) )
300	Assert. assertTrue ( accept )
301	assertEquals ( node. getId ( ), "id" )
302	Assert. assertTrue ( response. getCommandOutput ( ). contains ( "SMBIOSBIOSVersion" ) )
303	assertEquals ( expected, actual )
304	Assert. assertNotNull ( lfs )
305	assertEquals ( "schemaName.tableName", database. escapeTableName ( "catalogName", "schemaName", "tableName" ) )
306	assertEquals ( "HeroListTask returns sorted list.", expected, actual )
307	assertFalse ( "SoapHeader has elements", iterator. hasNext ( ) )
308	assertEquals ( SimpleBigDecimalScore. of ( new BigDecimal ( "-1.2" ) ), scoreDirector. calculateScore ( ) )
309	assertEquals ( 10, classUnderTest. getContentsNbrRowsToShow ( ) )
310	assertArrayEquals ( expectedTlv, decodedTlv )
311	assertTrue ( sink. enableLowercase )
312	assertTrue ( "Expected the test to generate a grid", checkGrid ( "Social_Profiles_Controls_Profile_Search", true ) )
313	assertEquals ( XAdESForm. BES, f )
314	assertEquals ( expectedResult, entityParser. parseMultiDatastream ( json ) )
315	assertEquals ( "Protocol tests failed", 0, res )
316	assertEquals ( expResult, result )
317	assertTrue ( "User's password updated successfully", success )
318	assertThat ( responseContent, containsString ( "unknown identity" ) )
319	assertContainsRegex ( WHERE + OPEN_CURLY + ":S" + SPACE + ":P" + SPACE + var ( "o" ) + OPT_SPACE + CLOSE_CURLY, query )
320	Assert. assertEquals ( "SELECT UUID();", text )
321	assertNotNull ( result )
322	assertTrue ( constructorDescriptor. createInstance ( applicationContext ) instanceof Resource )
323	assertWhoAmI ( USERNAME_CLIENT )
324	assertEquals ( null, result )
325	checker. assertEquals ( "[" + i + "]", exp, act )
326	assertEquals ( socketAddress, NetUtils. of ( endpoint ) )
327	assertTrue ( BitsLong. test ( v, true, 63 ) )
328	assertEquals ( "UTF-8", XmlReader. getXmlProlog ( input, guessedEncoding ) )
329	assertExec ( "Gives the same value", Numbers. class, "stringToLong__ILjava_lang_String_2", res, "123" )
330	Assert. assertEquals ( 0., analyser. getTimeWindowViolationAtActivity ( route. getActivities ( ). get ( 2 ), route ), 0.01 )
331	assertThat ( DateInterval. parse ( "20140227 - 20140514", formatter, "{0} - {1}" ), is ( interval ) )
332	assertNotSame ( logger1, logger2 )
333	assertEquals ( exp, accum )
334	assertThat ( "Checking 6 frame translation", protein. toString ( ), is ( expected ) )
335	assertThat ( value, equalTo ( "set_VALUE_get" ) )
336	assertEquals ( 0, version. hashCode ( ) )
337	Assert. assertTrue ( result. getBean ( ) instanceof SimpleManagedBean )
338	assertEquals ( tm, o )
339	assertTodo ( expected, actual )
340	assertTrue ( Arrays. equals ( data, extracted ) )
341	assertTrue ( amqpsProperties == mockHashMap )
342	assertTrue ( entity. equals ( loadedEntity ) )
343	Assert. assertEquals ( getFullClassName ( fqdnName ), udf. getClassName ( ) )
344	Assert. assertTrue ( pss. toString ( ). contains ( "<http://example.org>" ) )
345	assertPermanentCount ( playerA, "Jace, Memory Adept", 1 )
346	assertEquals ( expected, document )
347	assertThat ( result, is ( false ) )
348	assertTrue ( true )
349	assertEquals ( 1, sameDiffOuter. definedFunctionNames ( ). size ( ) )
350	assertTrue ( identifier. equals ( group. getIdentifier ( ) ) )
351	assertThat ( mentions, hasItem ( mentionedEntity ( 0, mention. length ( ), EntityType. CLASS, iri ) ) )
352	assertThat ( sourceUri, is ( "https://bitbucket.org/grubix/git.git" ) )
353	assertEquals ( m ( "_", "T", "method", 10L, "tstart", 1L, "tstop", 11L, "calls", 3L, "begin", m ( "_", "B", "clock", 11 ), "children", l ( m ( "_", "T", "method", 12L, "tstart", 3L, "tstop", 10L, "calls", 2L, "error", m ( "_", "E", "id", id ), "children", l ( m ( "_", "T", "method", 14L, "tstart", 4L, "tstop", 9L, "calls", 1L, "error", errorToMap ( e ) ) ) ) ) ), decodeTrace ( o. getChunks ( ) ) )
354	assertThat ( resources, contains ( orgId, parentOrgId, parentParentOrgId ) )
355	Assert. assertEquals ( TRANSLATED_MENU_CATEGORY_DESC, translation )
356	assertMockEndpointsSatisfied ( )
357	assertEquals ( "Vertical�Tab", escaped )
358	assertNull ( presenter. getValue ( ) )
359	assertEquals ( 20, target. getHeight ( ) )
360	assertEquals ( "hello", request )
361	assertNotNull ( reader )
362	Assert. assertEquals ( "Microsoft.Devices", matcher. group ( 1 ) )
363	Assert. assertEquals ( ExchangePhase. IN, exchange. getPhase ( ) )
364	assertNotNull ( pcrManifest )
365	assertTrue ( page. asXml ( ). contains ( "ln=alibrary&amp;v=1" ) )
366	assertThat ( extractMonitorables ( timerAdapter ). get ( STDDEV ). get ( ), Matchers. < Object > is ( newStdDev ) )
367	Assert. assertThat ( jsonString. endsWith ( "\\r\\n" ), IsEqual. equalTo ( true ) )
368	assertEquals ( "test", echo. echo ( "test" ) )
369	assertEquals ( expected, actualQuery )
370	assertEquals ( "Expected 1 results!", 1, n )
371	assertEquals ( "[a,1,2,b]", buff. toString ( ) )
372	Assert. fail ( "Didn't get expected HPackException!" )
373	assertTrue ( factory instanceof ClasspathConfigFactory )
374	Assert. assertTrue ( Files. size ( tmfile. toPath ( ) ) > 0 )
375	assertEquals ( expectValue, actualValue )
376	assertNotNull ( PropertyUtils. getProperty ( result, "auditInfo" ) )
377	Assert. assertEquals ( dataHoraEvento, infoEventoCancelamento. getDataHoraEvento ( ) )
378	assertSame ( expected, actual )
379	Assert. fail ( "Caught unexpected ResourceHandlerException!" )
380	assertEquals ( "ubuntu", platform. getName ( ) )
381	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoItemImpostoPISQuantidade ( ). toString ( ) )
382	assertEquals ( expected, x )
383	Assert. assertEquals ( jaegerConfig. getParam ( ), 1000 )
384	arraysWithCustomComparisonStrategy. assertIsSorted ( someInfo ( ), actual )
385	assertThat ( transferSuccessful, is ( false ) )
386	Assert. assertTrue ( "Incorrect file types returned", CollectionUtils. isEqualCollection ( types1, widget. getFileTypes ( ) ) )
387	Assert. assertEquals ( "(nt_change_insertion (nt_range (nt_point_location (nt_base_location (nt_number 123))) _ (nt_point_location (nt_base_location (nt_number 124)))) ins)", nt_change_insertion. toStringTree ( parser ) )
388	assertThat ( anyTS. isValid ( MICRO_OF_SECOND, 999999 ), is ( true ) )
389	assertEquals ( "Mismatched message at line #" + i, message, line )
390	assertTrue ( Pattern. matches ( "(?s).*/component01.jsp PASSED.*", page. asXml ( ) ) )
391	Assert. assertEquals ( fallbackOutput, got )
392	assertEquals ( expResult, result )
393	assertThat ( result, is ( not ( 0 ) ) )
394	Assert. assertEquals ( objectType, generated )
395	assertTrue (! result )
396	assertEquals ( "Base value is not properly parsed", "19999.9998", parsed )
397	assertThat ( buffer. isReadOnly ( ), is ( true ) )
398	Assert. assertEquals ( 1, result. getEntities ( ). size ( ) )
399	assertEquals ( postprocessed [ i ], row. getQuote ( ) )
400	assertThat ( result, Matchers. equalTo ( "pong" ) )
401	editor. assertHoverExactText ( "debug", "**debug**  \\n[java.lang.String](null)" )
402	Assert. assertEquals ( false, errors. hasErrors ( ) )
403	Assert. assertEquals ( 2, p. get ( "hash" ). size ( ) )
404	assertEquals ( 2, filteredTodos. size ( ) )
405	Assert. assertTrue ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. EDIT, this. doc ) )
406	assertTrue ( Arrays. equals ( etalon, array ) )
407	assertTrue ( numberOfCriterionsOfTypeResourceAndWorker >= numberOfCriterionsOfTypeResource )
408	Assert. assertEquals ( s, "Table[1x0]" + System. lineSeparator ( ) )
409	assertTrue ( statement. getReferences ( ). isEmpty ( ) )
410	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getAllPrivileges ( set ( "admin" ), ActiveRoleSet. ALL ) ). toString ( ) )
411	assertThat ( windows. minus ( empty ), is ( windows ) )
412	Assert. assertTrue ( m2. isDone ( ) )
413	assertEquals ( "0s from now (ticker=FAKE_TICKER)", d. toString ( ) )
414	assertThat ( rm. matches ( new Object ( ) ), is ( false ) )
415	assertThat ( date, is ( PlainDate. of ( 2012, 5, 21 ) ) )
416	assertTrue ( IsEqualInternally. areEqualInternally ( expectedResult, sut. extract ( content, 0 ) ) )
417	assertEquals ( 0, versionEntities. size ( ) )
418	assertTrue ( value. size ( ) > 0 )
419	assertNotNull ( solver )
420	assertThat ( provider. getSubject ( axiom ), is ( iriOptional ) )
421	assertEquals ( pos. getIndex ( ), 0 )
422	assertEqualLines ( "invalid renaming in p2.A", getFileContents ( getOutputTestFileName ( type, folder ) ), cu. getSource ( ) )
423	Assert. assertTrue ( "topicmap.getBaseLocator() should not be set to xml:base", base. getAddress ( ). startsWith ( "file:" ) )
424	assertEquals ( - 150, scorer. scorePosition ( board, context ) )
425	Assert. assertNotNull ( file. toString ( ) )
426	Assert. assertTrue ( "CumulativeLoss is expected to be less than 800: " + udtf. getCumulativeLoss ( ), udtf. getCumulativeLoss ( ) < 800 )
427	assertEquals ( "Unsatisfied qualifier:'m2'", e. getMessage ( ) )
428	Assert. assertNull ( "There can't be active transaction here", tm. getTransaction ( ) )
429	Assert. assertEquals ( versao. toString ( ), eventoCancelamento. getVersao ( ) )
430	assertTrue ( executor instanceof FatGammaTxnExecutor )
431	context. assertEquals ( 3, count. get ( ) )
432	assertEquals ( 5L, value. get ( ) )
433	assertEquals ( TEAM_CITY_URL + "/app/rest/buildTypes/id:bt296", buildTypeUrl )
434	Assert. fail ( "Key store detection should fail." )
435	assertThat ( result, is ( getAllFunctionsResponse ) )
436	assertEquals ( "BAR", this. fooStateFSM. getCurrentState ( fooState ). getName ( ) )
437	assertFalse ( charsetPattern. matches ( "Z" ) )
438	assertNull ( files )
439	assertEquals ( 16777229, outputStream. size ( ) )
440	assertEquals ( "!cash.xcl.util.KolobokeXCLLongLongMap {\\n" + " ? 2: 2,\\n" + " ? 1: 1,\\n" + " ? 0: 0\\n" + "}\\n", map2. toString ( ) )
441	assertEquals ( "((dependencyBuilder.input(\\"A\\").build() && dependencyBuilder.input(\\"B\\").build()) || " + "dependencyBuilder.input(\\"C\\").build())", inputLogicParser. parse ( root ) )
442	assertEquals ( np. getCurrentDate ( ), d )
443	assertEquals ( systemPropertyValue, config ( true, "classpath:cache2.ini" ). evaluateToString ( "key1" ) )
444	assertEquals ( embedCode, detail. get ( "embed" ) )
445	Assert. assertFalse ( this. manager. remove ( this. family1 ) )
446	Assert. assertTrue ( getSubject ( ). isPermitted ( "select" ) )
447	Assert. assertEquals ( "Hub should be able to fulfill request", HttpServletResponse. SC_ACCEPTED, response. getStatusCode ( ) )
448	Assert. assertEquals ( expected, read )
449	assertAlias ( sql, columnParam, "nor", param )
450	assertTrue ( errOutput. contains ( StorageType. getTypesSupportingQuota ( ). toString ( ) ) )
451	assertEquals ( Integer. valueOf ( 3 ), Integer. valueOf ( list. size ( ) ) )
452	assertions. isNotNull ( )
453	assertOrder ( order, DATA_LENGTH, comparator )
454	assertEquals ( "HelloWorld!\\n", new String ( result, "UTF-8" ) )
455	Assert. assertEquals ( expected, actual )
456	Assert. assertEquals ( 1.5, ed. getRealEigenvalue ( 0 ), 1.0e-15 )
457	assertEquals ( Location. LOCATION_LHS_FROM_ACCUMULATE_RESULT_INSIDE, getLastIntegerValue ( parser. getEditorInterface ( ). get ( 0 ). getContent ( ) ) )
458	assertEquals ( 1, paramList. size ( ) )
459	assertEquals ( removeLeadingAndTrailingSpacesOnEveryLine ( expectedLocalizedXLIFF ), removeLeadingAndTrailingSpacesOnEveryLine ( localizedAsset ) )
460	assertEquals ( Arrays. asList ( parser1, parser3, parser2 ), parsers )
461	assertTrue ( result )
462	assertThat ( analyzer, is ( org. apache. lucene. analysis. cjk. CJKAnalyzer. class ) )
463	assertThat ( target. getBody ( String. class ), is ( notNullValue ( ) ) )
464	Assert. assertEquals ( "wrapped", endpoint. getResponses ( ). poll ( 15, TimeUnit. SECONDS ) )
465	objects. assertIsEqualToIgnoringNullFields ( someInfo ( ), actual, other, noFieldComparators ( ), defaultTypeComparators ( ) )
466	assertEquals ( SC_OK, response. getStatus ( ) )
467	assertEquals ( b1, b2 )
468	assertNull ( "Expected an empty list", result )
469	assertEquals ( expectedName, name )
470	Assert. fail ( "exception should have been thrown" )
471	assertTrue ( m. nextChar ( )!='' )
472	assertTrue ( getNoErrorMsg ( ), result )
473	assertEquals ( layerCnt + 1, world. getLayers ( ). size ( ) )
474	Assert. assertEquals ( 101, sprintService. getTeam ( ). getId ( ) )
475	assertEquals ( 900, res )
476	assertEquals ( 0, sorter. convertRowIndexToModel ( rows - 1 ) )
477	Assert. assertEquals ( 0, this. sqlgGraph. traversal ( ). V ( ). has ( T. label, "friend" ). has ( "weight", "5" ). count ( ). next ( ), 0 )
478	assertThat ( result, is ( newPartition ( ) ) )
479	assertTrue ( client. getRoles ( ). size ( ) > 0 )
480	assertEquals ( row, bindings. getRow ( 1 ) )
481	Assert. assertEquals ( "SwallowMessage [generatedTime=null, messageId=1, properties={property-key=property-value}, internalProperties={property-key=property-value}, version=0.6.0, sha1=sha-1 string, type=feed, sourceIp=localhost]", msg. toString ( ) )
482	context. assertTrue ( result. isEmpty ( ) )
483	assertTrue ( medias. size ( ) == 2 )
484	assertEquals ( exepcted_individual, returned_individual )
485	Assert. assertFalse ( "Requests with different order of accept options must not equal!", coapRequest1. equals ( coapRequest2 ) )
486	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( 5L ), mapper. readBitemporalDate ( columns, "vtTo" ) )
487	assertThat ( clock. currentTimeInMillis ( ), is ( System. currentTimeMillis ( ) ) )
488	assertEquals ( "", result )
489	assertThat ( actual, is ( instanceOf ( ExpectException. class ) ) )
490	Assert. assertFalse ( "Get Profile  returned no results", json. isEmpty ( ) )
491	Assert. assertEquals ( configNew, configOld )
492	Assert. assertArrayEquals ( ENCODED_VALUE, byteOutputStream. toByteArray ( ) )
493	assertNull ( "No message since MD5 checksum failed", recvMessage )
494	assertEquals ( 200, connection. getResponseCode ( ) )
495	assertEquals ( "/a/b/", r )
496	assertions. isSorted ( )
497	Assert. assertNotNull ( producer. getService ( 1, entity, new BasicServiceConfiguration < > ( IMonitoringProducer. class ) ) )
498	assertThat ( bean1. toString ( ), is ( "{a:1,b:A,c:#AC,d:1383122146000,e:101}" ) )
499	Assert. assertEquals ( getElement ( "OBR.15", "CM_SPS.2" ), result )
500	assertEquals ( "Hello, {}!", bean. getWelcome ( ) )
501	assertEquals ( 10, result. size ( ) )
502	assertFalse ( resultMessage ( result, PUT ), result. passedValidation ( ) )
503	assertKernel ( kernel, CIRCLE3, e )
504	Assert. assertEquals ( "post 3 monatoj", t. format ( new Date ( 2629743830L * 3L ) ) )
505	assertEquals ( "Hello { John } { Doe } {", ResponseBodyInterpolator. interpolate ( "Hello { {firstName} } { {lastName} } {", req ) )
506	Assert. assertTrue ( stringToEncrypt. equals ( decrypted ) )
507	assertMockEndpointsSatisfied ( )
508	Assert. assertTrue ( jsonEqual ( expResult, EntityFormatter. writeEntity ( entity ) ) )
509	assertTrue ( Checksums. verifyChecksum ( callRequestFrame ) )
510	Assert. assertNotNull ( "null result returned", execResult )
511	assertArrayEquals ( getPixels ( expected, 0, 0, expected. getWidth ( ), expected. getHeight ( ), null ), getPixels ( actual, 0, 0, actual. getWidth ( ), actual. getHeight ( ), null ) )
512	assertEquals ( DataStatus. ACTIVE, empty. getStatus ( Side. STARBOARD ) )
513	assertThat ( databaseMapping. getDatabasePrefix ( ), is ( "" ) )
514	Assert. assertEquals ( 0, countryList. size ( ) )
515	assertNull ( channel. basicGet ( q, false ) )
516	assertTrue ( screenshotFile. exists ( ) )
517	Assert. assertEquals ( test, expected )
518	Assert. assertNotNull ( rb )
519	assertEquals ( fieldsBuilder. build ( ). toString ( ), result. build ( ). toString ( ) )
520	assertMockEndpointsSatisfied ( )
521	assertEquals ( actDate. getTime ( ), expDate. getTime ( ) )
522	assertTrue ( customAnnotations. isEmpty ( ) )
523	assertThat ( result, equalTo ( expected ) )
524	assertNotNull ( result )
525	assertEquals ( "http://example.com?foo=foo&hoge=fuga&piyo=1", got. toString ( ) )
526	TestUtils. assertEquals ( "Spearman's correlation matrix", createRealMatrix ( rData, 5, 5 ), correlationMatrix, 10E-15 )
527	Assert. assertEquals ( result. getResultSize ( ), 10 )
528	assertNotNull ( result )
529	Assert. assertNull ( t. thread ( messages ) )
530	Assert. assertEquals ( "result2", result. get ( "outputVariable1" ) )
531	assertEquals ( delim, String. valueOf ( csvFormat. getDelimiter ( ) ) )
532	assertEquals ( ref1, APMSpan. findPrimaryReference ( Arrays. asList ( ref1, ref2, ref3, ref4 ) ) )
533	assertEquals ( uri, builder. toUri ( ) )
534	Assert. assertNotNull ( controllerResponse )
535	assertEquals ( expected, bos. toString ( ) )
536	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( date ), mapper. readBitemporalDate ( columns, "ttFrom" ) )
537	assertEquals ( valueIn, valueOut )
538	assertEquals ( terminationPointIId, Whitebox. invokeMethod ( ovsdbPortUpdateCommand, "getInstanceIdentifier", bridgeIid, port ) )
539	assertThat ( arguments. getReadTimeoutMillis ( ), equalTo ( 0 ) )
540	assertThat ( result, startsWith ( "<!DOCTYPE html>" ) )
541	assertArrayEquals ( new byte [ ] { 1, 2, 3 }, Arrays. copyOf ( post. getImage ( ), 3 ) )
542	Assert. assertEquals ( points. length * val, s, 0d )
543	assertNotNull ( u )
544	assertIdentical ( "/relax_equivalence_axioms_expressions_materialized.obo", reasoned )
545	assertEquals ( Constants. I18N_ERROR, translated )
546	Assert. assertEquals ( expectedText, lastAlert. getText ( ) )
547	assertEquals ( ifStr, "if (!(org.uberfire.security.client.authz.AuthorizationManagerHelper.authorize(\\"myfeature\\"))) {\\n" + "  return;\\n" + "}" )
548	assertFalse ( combinedDeferredResult. isCancelled ( ) )
549	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
550	assertEquals ( "EntitySetSamples('someKey')?$filter=filterKey eq 'filterValue'", resultQuery )
551	assertThat ( q, is ( TermQuery. class ) )
552	assertSame ( value, bound. valueFor ( 2, 'b' ) )
553	assertNull ( millis )
554	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 6, warnings. size ( ) )
555	assertFalse ( session. from ( $ ( noteVar ) ). where ( builder. getValue ( ) ). list ( $ ( noteVar ) ). isEmpty ( ) )
556	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
557	assertThat ( actual, is ( funcationMapper ) )
558	Assert. assertEquals ( Type. Managed, adapter. type ( ) )
559	assertEquals ( "/", path. toString ( ) )
560	assertEquals ( Integer. valueOf ( 5 ), Integer. valueOf ( list. size ( ) ) )
561	assertTrue ( expectedResult. isEmpty ( ) )
562	assertFalse ( metaChild. isAssignableFrom ( metaGrandparent ) )
563	assertNsObject ( typeDesc, nsObject )
564	Assert. assertEquals ( value, _context. getPropertyValue ( key ) )
565	assertEquals ( action. getOldValue ( ), CompressionMethod. NULL )
566	assertNotNull ( patientRole )
567	assertTrue ( getNoErrorMsg ( ), result )
568	assertEquals ( expectedList, sut. fetchPage ( 2, 3 ) )
569	assertFalse ( map. isEmpty ( ) )
570	Assert. assertTrue ( cc >= 2 )
571	assertThat ( fieldError, is ( nullValue ( ) ) )
572	assertNotNull ( report )
573	Assert. assertTrue ( fc1!= fc )
574	Assert. assertTrue ( isEqual ( distance, 0.6 ) )
575	assertEquals ( CellComparatorHelper. getSanitizedStaticValue ( cell ), "needle" )
576	assertEquals ( environment. bootstrapHttpDirectPort ( ), loader. port ( ) )
577	assertEquals ( "Value {\\\\", result )
578	assertSame ( input, output )
579	Assert. assertEquals ( tag. type ( ), TagType. FLOAT )
580	assertEquals ( expResult, result )
581	assertTrue ( victim. isEnabled ( ) )
582	Assert. assertEquals ( desiredOutput, output )
583	assertTrue ( teamExternalGroups. isEmpty ( ) )
584	assertNotNull ( "addon must load lf-specific icon", UIManager. getIcon ( ColumnControlButton. COLUMN_CONTROL_BUTTON_ICON_KEY ) )
585	assertEquals ( EX_43_EXPECTED, hexadecimalHash )
586	assertArrayEquals ( actual, excepted )
587	assertEquals ( collectorManager1, collectorManager2 )
588	Assert. assertNotNull ( remoteWebDriver. findElementById ( "uh-logo" ) )
589	Assert. assertEquals ( 1, a. getCbo ( ) )
590	assertThat ( bolt. getColumnVisibility ( record ), is ( vis ) )
591	assertEquals ( testAlgorithm, tlsCertificateAuthorityServiceCommandLine. createConfig ( ). getKeyPairAlgorithm ( ) )
592	assertContextOk ( ctx, "O1:doc:doc", "Hello from Context!", "Source" )
593	assertTrue ( new File ( "target/export7" ). exists ( ) )
594	assertResultSet ( res )
595	assertTrue ( "pl=" + pl, pl >= 12 )
596	Assert. assertNull ( RequestObjectHelper. getReturnKeys ( jsonWithNonArrayReturnKeyValue ) )
597	assertThat ( res. toString ( ), is ( equalTo ( "my last response statusText is: OK" ) ) )
598	Assert. assertEquals ( "test", testScopePath. getParentPath ( ). getRootScope ( ). getName ( ) )
599	assertEquals ( condition ( "" ), c1. combine ( c2 ) )
600	assertEquals ( new Long ( 1234 ), longVal )
601	assertThat ( info. getClusterService ( CLUSTER ), sameInstance ( currentService ) )
602	Assert. assertNotNull ( new Bean80BindMap ( ) )
603	assertEquals ( expectedSource, instrumentedSource )
604	assertEquals ( expectedQuery, actualQuery )
605	assertEquals ( "sun.misc.Launcher$AppClassLoader", JclContext. get ( "jcl3" ). loadClass ( "org.xeustechnologies.jcl.test.Test" ). getClassLoader ( ). getClass ( ). getName ( ) )
606	Assert. assertNotNull ( entity )
607	assertTrue ( aclDao. hasEntry ( principal, secureObject ) )
608	Assert. assertEquals ( expected, actual )
609	assertNull ( x )
610	assertThat ( TestI18n. testMessage2. text ( "Test", "Message" ), is ( "Message Test" ) )
611	Assert. assertEquals ( "Wrong toString()", "msgVersion: 4 objectType: org.opendaylight.yang.gen.v1.urn" + ".opendaylight.openflow.oxm.rev150225.match.entries.grouping.MatchEntry" + " oxm_class: org.opendaylight.yang.gen.v1.urn.opendaylight.openflow.oxm.rev150225" + ".OpenflowBasicClass oxm_field: org.opendaylight.yang.gen.v1.urn.opendaylight.openflow" + ".oxm.rev150225.InPort experimenterID: null", key1. toString ( ) )
612	assertSame ( cause, unhandledException. getCause ( ) )
613	assertEquals ( mMetaManager. getTiersBelow ( tierAlias ). size ( ), mMetadataView. getTierViewsBelow ( tierAlias ). size ( ) )
614	assertSame ( b, ir. getBundle ( ) )
615	assertFalse ( survey. isAnswerSelected ( QUESTION_NUMBER, 1 ) )
616	assertTrue ( cs. isAfterLast ( ) )
617	Assert. assertEquals ( Dfp. class, field. getRuntimeClass ( ) )
618	assertEquals ( parseCalendar ( "20131104-00:00:00", TimeZone. getTimeZone ( "US/Eastern" ) ), dh. getCalendarAfter ( testingClock. getCurrentCalendar ( ) ) )
619	assertThat ( banco. getAgenciaECodigoBeneficiario ( beneficiario ), is ( "1234567" ) )
620	assertArrayEquals ( new byte [ ] { - 108, - 70, 29, - 52, 102, - 87, - 61, - 34, - 16, 83, - 1, 11, 124, 5, - 1, 96, 126, 86, - 98, - 77, 90, - 127, - 9, 123, 102, - 52, 48, 116, 24, 96, - 116, - 126 }, new Algorithm2B ( ). computeHash ( concatenate ( userBytes, userKeySalt ), userBytes ) )
621	assertEquals ( originalFetchCount, timeline. getFetchCount ( ) )
622	assertThat ( indentCharacters, is ( equalTo ( "      " ) ) )
623	assertTrue ( engine. exists ( testIndex ) )
624	assertEquals ( expectedQuery, actualQuery )
625	assertThat ( specificResourceAllocation. getAssignments ( ), haveHours ( 8, 8, 8, 8, 4 ) )
626	assertEquals ( 22, articles. size ( ) )
627	assertArrayEquals ( expResult, result )
628	assertFalse ( ex. isPrime ( 225 ) )
629	runner. assertNotValid ( )
630	assertTrue ( vrpBuilder. getLocationMap ( ). containsKey ( "start" ) )
631	assertEquals ( 0, walEdit. size ( ) )
632	assertEquals ( "db_0__init.cql", cqlMigrationResolver. extractScriptName ( new ClassPathResource ( "db_0__init.cql", Thread. currentThread ( ). getContextClassLoader ( ) ) ) )
633	assertTrue ( "Failed to find convertor for action", convertor. isPresent ( ) )
634	assertFalse ( CheckDetector. isPlayerJustMovedInCheck ( bitBoard ) )
635	assertEquals ( node, operation. get ( ). getResult ( ) )
636	assertOut ( "RoyaleTest_A.prototype.foo = function() {\\n  if (a)\\n    RoyaleTest_A.superClass_.foo.apply(this);\\n}" )
637	assertThat ( m. matches ( ), hasItems ( Tuple. of ( 1, 2 ), Tuple. of ( 3, 4 ) ) )
638	assertEquals ( validSubfieldCodes, field. getValidSubfieldCodes ( ) )
639	assertEquals ( result, "2007-12-03 - 10:15:30 AM UTC" )
640	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
641	assertThat ( foundClazz, is ( nullValue ( ) ) )
642	assertNull ( tr. findCertInfo ( createCert ( false, null ) ) )
643	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
644	assertThat ( f2, sameInstance ( f1 ) )
645	assertTrue ( Boolean. valueOf ( getLastRequestHeaders ( ). get ( "All-Content" ). getFirst ( ) ) )
646	assertEquals ( 4, request. getOauthParameters ( ). size ( ) )
647	assertEquals ( expected, actual )
648	Assert. assertEquals ( boundary, BatchParserCommon. getBoundary ( contentType, 0 ) )
649	assertThat ( process. getConfiguration ( ). get ( "property" ). asText ( ), equalTo ( "value" ) )
650	assertFalse ( cv. supports ( Date. class ) )
651	assertNameAndQualifiedName ( tree, "fn", "mod.fn" )
652	Assert. assertEquals ( 90, countries. size ( ) )
653	assertEquals ( 123L, book. getId ( ) )
654	Assert. assertEquals ( Homepage. class, homepage. getClass ( ) )
655	assertEquals ( "ab$ghi 10,ab$cde 23,ab##gkl 47,abcdf 35,", target. toString ( ) )
656	assertEquals ( "XXX", html )
657	assertThat ( historicJobLogExceptionStacktrace, notNullValue ( ) )
658	assertTrue ( ( ( Integer ) db. getLastValue ( "TestMetric" ) ) == 19 )
659	assertThat ( testUriStr, is ( expectedUriStr ) )
660	assertThat ( publicJobLink, containsString ( "us-east-1" ) )
661	Assert. assertArrayEquals ( expected, left. toByteArray ( ) )
662	assertEquals ( expResult, result )
663	Assert. assertThat ( allCategories, Matchers. contains ( "categoryA", "categoryB", "categoryC" ) )
664	assertContributedMap ( true )
665	assertEquals ( "No test cases should fail", 0, runTestsResults. getFailedTests ( ). size ( ) )
666	assertNotNull ( handshakeMsg. toString ( ) )
667	assertEquals ( exampleValue, resourceEditProperty. getExampleValue ( ) )
668	Assert. assertEquals ( 0, children. size ( ) )
669	assertTrue ( reference instanceof SoftReference )
670	assertThat ( visibleText, is ( "foo" ) )
671	assertTrue ( "". equals ( c. getValue ( ) ) && "foo". equals ( c. getName ( ) ) )
672	assertEquals ( "Hello < There <&>", doc. select ( "div" ). first ( ). text ( ) )
673	assertEquals ( "Trimmed result should exclude starting and ending mutate if!isFirst and!isLast", testPair. get ( 1 ), postProcessed )
674	assertThat ( response. getPersonInformationStructure ( ). getRegularCPRPerson ( ). getSimpleCPRPerson ( ). getPersonNameStructure ( ). getPersonGivenName ( ), is ( person. getFornavn ( ) ) )
675	assertTrue ( schemaRegistry. getHostnameVerifier ( ). verify ( "", null ) )
676	assertFalse ( isServiceReady )
677	this. tester. assertContains ( "<p class=\\"empty\\"></p>" )
678	assertEquals ( 2, getPlayers ( ). size ( ) )
679	assertEquals ( LogSeverity. FINE. toString ( ), severity. toString ( ) )
680	Assert. assertEquals ( newConceptSource. getCreator ( ), expectedCreator )
681	assertOut ( "var /** @type {number} */ a = 0xabc" )
682	Assert. hasText ( null, "has text" )
683	assertions. contains ( values )
684	assertSameFormat ( vendor. getFormatFor ( customFormatID, Locale. UK, DateFormat. LONG ), dmy )
685	assertNotNull ( client )
686	assertEquals ( "a,b,c,d,e", Joiner. on ( ',' ). join ( foundOrder ) )
687	Assert. assertTrue ( select. execute ( ). size ( ) == Constant. FOUR )
688	Assert. assertTrue ( newPointAvailable )
689	assertEquals ( "d", result. toString ( ) )
690	assertEquals ( 4, container. indexOfId ( id ) )
691	assertTrue ( prot. getName ( ). iterator ( ). next ( ). equals ( s ) )
692	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
693	assertThat ( address, is ( NetworkHelper. getFeasibleLocalHost ( ) ) )
694	Assert. assertEquals ( xmlEsperado, lacre. toString ( ) )
695	assertEquals ( 100.0, s. getDeliveryServiceTime ( ), 0.01 )
696	assertArrayEquals ( new Object [ ] { "css1", "cssandjs1", "js1" }, categories )
697	Assert. assertNotNull ( "Resource folder is null", facet. getWebRootDirectory ( ) )
698	Assert. assertEquals ( expectedIndex, artistIndex )
699	Assert. assertTrue (! errors. hasErrors ( ) )
700	assertEquals ( 0, result. size ( ) )
701	assertEquals ( expectedSqlForMathOperations3 ( ), result )
702	assertEquals ( PERSON_COUNT, actual )
703	assertEquals ( "\\"Colleen\\"^^xsd:string", name )
704	assertThat ( SvgInkscapeUtils. isFlipped ( matrix ), IsEqual. equalTo ( true ) )
705	assertEquals ( "852a_Location_location_unspec", indexEntries. keySet ( ). toArray ( ) [ 0 ] )
706	assertEquals ( 0.0, accessEgressCalc. getCosts ( iContex ), 0.01 )
707	assertThat ( capturedEvents, hasItem ( mdcFormat ( "testMDCInvokeOrdered", "foobar" ) ) )
708	assertEquals ( HttpStatusCode. NOT_FOUND_404, response. getStatus ( ) )
709	assertTrue ( authorizationManager. authorize ( perspective1, user1 ) )
710	assertThat ( html, is ( "<select id=\\"w1\\" name=\\"w1\\"><option value=\\"value1\\">label1</option></select>" ) )
711	assertEquals ( fromObj, fromStr )
712	assertThat ( deserialize ( output. toByteArray ( ) ), is ( data ) )
713	assertEquals ( methodVariableBindings. size ( ), 1 )
714	assertEquals ( NAME_NODE, action. getNameNode ( ) )
715	assertNull ( wrapper. getArtist ( ) )
716	Assert. assertTrue ( newSql. equals ( "SELECT t.name, sum(t.price) FROM cpcplan" + suffix + " t GROUP BY t.name, t.id" ) )
717	assertArrayEquals ( expectedBytes, actualBytes )
718	Assert. assertEquals ( "ABCD1234", text )
719	assertTrue ( converter. canConvert ( Index. class ) )
720	assertTrue ( deltaClient. existsLocal ( dsRef ) )
721	assertThat ( axioms, hasItem ( axiom ) )
722	assertThat ( "No tags should have been returned.", actualTag, is ( equalTo ( expectedParseResult ) ) )
723	assertEquals ( true, config. isUseNodeNameAsExternalAddress ( ) )
724	Assert. assertEquals ( "Invalid csv line", "3,NURSE0,20150203235809-0500,UNDEFINED,1,OID0,OBSERVATION0", line )
725	assertEquals ( true, hasspecialchar )
726	assertEquals ( "urn:oid:0.1.2.3", parsed. getEntry ( ). get ( 0 ). getResource ( ). getIdElement ( ). getValue ( ) )
727	assertThat ( itr. hasNext ( ), is ( false ) )
728	assertEquals ( 1, list. size ( ) )
729	assertEquals ( 2, css. getSeverity ( ) )
730	assertThat ( exitStatus. exitStatus ( ), is ( equalTo ( ( byte ) 0x1 ) ) )
731	assertThat ( xml, containsString ( "<recipients />" ) )
732	assertEquals ( Money. of ( BigDecimal. valueOf ( 0.003d ), "CHF" ), BasisPoint. of ( BigDecimal. TEN ). apply ( m ) )
733	assertEquals ( "Wrong default conversion handler", DefaultConversionHandler. class, config. getConversionHandler ( ). getClass ( ) )
734	assertThat ( notAnnotated. buildEmbedder ( ), is ( notNullValue ( ) ) )
735	assertThat ( matcher. matches ( literal ), is ( false ) )
736	assertThat ( url. toUri ( ), is ( equalTo ( "http://localhost:3000/products?q=doni" ) ) )
737	Assert. assertEquals ( buff. toString ( ), result. getContext ( ) )
738	assertEquals ( expResult, stringBuilder. toString ( ) )
739	assertTrue ( EqualsBuilder. reflectionEquals ( config, config2, "keyStore", "ourCertificate" ) )
740	assertThat ( response. getBody ( ), containsString ( "Hello World, Buddy" ) )
741	assertEquals ( 1, rs. getInt ( 1 ) )
742	Assert. assertEquals ( "SimpleEntity", name )
743	assertEquals ( expected, output )
744	assertEquals ( expected, found )
745	assertSame ( toTest, toTest. setParamsSerializer ( Serializer. class ) )
746	assertEquals ( devExtendedMachine. getAgents ( ), expectedAgents )
747	assertTrue ( latch. await ( TIMEOUT_SECONDS, TimeUnit. SECONDS ) )
748	assertEquals ( expected, actual )
749	assertTrue ( "Expected null result", result == null )
750	assertFalse ( checker. isDetected ( ) )
751	assertTrue ( "Row should be as wide as tree", treeGrid. getTableWrapper ( ). getSize ( ). getWidth ( ) == treeGrid. getRow ( 0 ). getSize ( ). getWidth ( ) )
752	assertTrue ( j >= 0 && j <= Integer. MAX_VALUE )
753	assertEquals ( "Serialized to json", expected, actual )
754	assertEquals ( "Expected 1000 results!", 1000, rows. size ( ) )
755	assertThat ( result, is ( nullValue ( ) ) )
756	Assert. assertNotNull ( "no topic found with a topic name after reload", topic )
757	assertNotEquals ( FUNCTION_ID_1, overwriteFunction. getId ( ) )
758	assertNotNull ( sysRoot. lookup ( "ou=testEntry,ou=backupContext" ) )
759	assertTrue ( wasCalled. get ( ) )
760	assertEquals ( expectedResult, cut. getAliadaEventTypeClassFrom ( anEventTypeThatIsInCache ) )
761	assertEquals ( InternationalFixedDate. of ( 2012, 7, 19 ), test )
762	assertThat ( findFeature ( featureList, "GetLocalListVersion" ), is ( instanceOf ( GetLocalListVersionFeature. class ) ) )
763	assertTrue ( news. checkVisibilityFor ( loggedUser ( moderator ) ) )
764	assertEquals ( assertion, getTest )
765	Assert. assertNull ( r. getRequest ( ). getSession ( ). getAttribute ( SEC_CONTEXT_ATTR ) )
766	Assert. assertArrayEquals ( new String [ ] { "bow=it", "bow=is", "bow=feet", "bow=long" }, generator. extractFeatures ( new String [ ] { "it", "is", "12.345", "feet", "long" }, Collections. emptyMap ( ) ). toArray ( ) )
767	assertTrue ( hmd. getHeaderMap ( ). containsKey ( "SOAPAction". toUpperCase ( ) ) )
768	assertFalse ( LoggingFilter. addIfNeeded ( logger, session, "wsn" ) )
769	assertTrue ( errorsContainer. equals ( errors ) )
770	assertTrue ( stack2 == stack )
771	assertEquals ( "", result )
772	assertSame ( id, result )
773	assertEquals ( "my-silly-filename.pem", result )
774	assertTrue ( em instanceof WebApplicationExceptionMapper )
775	assertThat ( environmentVariables. getProperty ( "webdriver.driver" ), is ( "safari" ) )
776	assertThat ( reason, assumingFields ( "myPrivateMap" ). areNotModifiedAndDoNotEscape ( ) )
777	assertThat ( XMLAdapter. XML_DURATION. from ( d ), is ( DatatypeFactory. newInstance ( ). newDuration ( false, BigInteger. ONE, BigInteger. ONE, BigInteger. TEN, BigInteger. valueOf ( 3 ), BigInteger. ZERO, new BigDecimal ( "5.123456789" ) ) ) )
778	assertEquals ( pow ( 2, 4 ), e. evaluate ( ), 0.0 )
779	assertEquals ( "caseTask", activityType )
780	assertTrue ( grid. getRow ( 1 ). isSelected ( ) )
781	assertEquals ( expectedCredential, credential )
782	assertThat ( "values length is 4", obj, equalTo ( 4 ) )
783	assertEquals ( getLabel ( ), 0.0, eye. minus ( m3 ). getEuklideanValue ( ), TOLERANCE )
784	Assert. assertEquals ( 2, s. x )
785	Assert. assertEquals ( 5089, obs. getConcept ( ). getId ( ). intValue ( ) )
786	assertEquals ( expected, built )
787	Truth. assertThat ( gson. toJson ( treeMessage ) )
788	assertEquals ( rp, point )
789	assertFalse ( pair. isPresent ( ) )
790	assertTrue ( doc. getGrammaticalFeatures ( ). isEmpty ( ) )
791	assertTrue ( seen. add ( UUIDGenerator. nextHex ( type ) ) )
792	assertNotNull ( result )
793	assertThat ( interpreter, is ( instanceOf ( TypeTest. MyInterpreter. class ) ) )
794	Assert. assertEquals ( expectedOutput, output )
795	assertThat ( excludeSkippedAndIgnored ( outcomes ). size ( ), is ( 0 ) )
796	assertSame ( "Mismatched signalled value", expected, future. getValue ( ) )
797	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 2, warnings. size ( ) )
798	assertEquals ( request. getCriteriasByTable ( ). size ( ), 1 )
799	assertThat ( request. getEncodedParameter ( "missing", foobar ), equalTo ( Util. urlEncoder ( foobar ) ) )
800	Assert. assertEquals ( testRecords, read )
801	assertEquals ( ids, domainIds )
802	assertTrue ( fs. deleteOnExit ( path ) )
803	arrays. assertEndsWith ( description, new short [ 1 ], new short [ 0 ] )
804	Assert. assertEquals ( "curl -X POST -L -H \\"X-Access-Token: __API_EXPLORER_AUTH_KEY__\\" -H \\"Content-Type: application/json\\" --data '{\\"email\\":\\"person@gmail.com\\",\\"password\\":\\"hunter2\\"}' 'https://eatstreet.com/publicapi/v1/signin'", curl )
805	assertArrayEquals ( TEST_CONTENT. getBytes ( "UTF-8" ), out. toByteArray ( ) )
806	assertTrue ( sqlString. contains ( "desc" ) )
807	assertFalse ( monitor. contains ( patch2 ) )
808	assertThat ( result. endsWith ( expectedString ), is ( true ) )
809	assertNotNull ( slf4jInfoWriter )
810	Assert. assertEquals ( new HashSet < > ( Collections. singletonList ( new NotNullDefinition ( "TABLE1", "PROFESSION" ) ) ), new HashSet < > ( notNullDefinitions ) )
811	assertEquals ( 1, dbr. query ( "SELECT INTA FROM CA_TEST WHERE INTA = $1", List. of ( new Object [ ] { a } ) ). size ( ) )
812	assertTrue ( r1 instanceof PublicCloneable )
813	assertRequest ( "DELETE", "Call/%s/Record/", callId )
814	assertLoadBalanced ( two. loadBalanced )
815	assertEquals ( expected, subject. intersection ( other ) )
816	Assert. assertEquals ( expected, actual )
817	assertTrue ( ex. isPrime ( 79 ) )
818	assertTrue ( result. get ( ) )
819	Assert. assertNotNull ( product )
820	Assert. assertEquals ( "GET", s )
821	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5 ) ) )
822	assertTrue ( Arrays. equals ( pktSerialized, actual ) )
823	assertThat ( webConfig. isGWTServiceServletDefined ( ), is ( true ) )
824	assertArrayEquals ( validBytes [ i ], md. pack ( ) )
825	assertEquals ( 1, entities. size ( ) )
826	assertTrue ( entityVersion. toString ( ). contains ( version ) )
827	assertTrue ( thisMetaPage. hasProperty ( RDF. type, API. ItemEndpoint ) )
828	assertTrue ( batteryInfos. size ( ) == 0 )
829	assertOutputSameTextFile ( gen, "DefineConstructor_IPM.java.txt" )
830	assertEquals ( formatedValue, "12345678" )
831	assertEquals ( true, typeUsage. isInterface ( new InFileSymbolResolver ( JdkTypeResolver. getInstance ( ) ) ) )
832	Assert. assertFalse ( "No configs were found", configs. isEmpty ( ) )
833	assertNotNull ( claims )
834	Assert. assertEquals ( HttpServletResponse. SC_FORBIDDEN, response. getStatus ( ) )
835	Assert. assertEquals ( CREATE_SENSOR, view )
836	Assert. assertNotNull ( result )
837	assertNull ( converter. getAsObject ( facesContext, new UIPanel ( ), "     " ) )
838	assertThat ( ts. with ( PlainTime. COMPONENT. roundedToFullHour ( ) ), is ( PlainTimestamp. of ( 2015, 1, 1, 0, 0 ) ) )
839	Assert. assertNull ( new CompareTool ( ). compareByContent ( filename, cmpFilename, destinationFolder, "diff_" ) )
840	assertTrue ( items. size ( ) > 0 )
841	assertEquals ( 12 * 3600 * 1000, this. policy. getMaxReservedTime ( ) )
842	assertTrue ( 0.5 == distance )
843	assertInstanceOf ( "Expected y = -f(-x)", ConcatenatedTransformDirect1D. class, transform )
844	Assert. assertTrue ( future. get ( 500, TimeUnit. SECONDS ) )
845	assertTrue ( "Wrong normalizer class, expected Ascii7PolyStringNormalizer, but was " + prismNormalizer. getClass ( ), prismNormalizer instanceof Ascii7PolyStringNormalizer )
846	assertThat ( javaTypeFinder. isTypeOf ( primitiveType, primitiveSubType ), is ( false ) )
847	assertEquals ( expect, DateUtils. addTime ( start, Calendar. MONTH, 1 ) )
848	assertTrue ( response. contains ( "cats" ) )
849	assertEquals ( size, vertices. size ( ) )
850	assertPurge ( "check all of VO-2 is removed", vo2BasePath )
851	assertThat ( this. url, is ( equalTo ( "/context/dispatcher/method/1/2/3" ) ) )
852	tc. assertEquals ( config. getString ( "Datacenter" ), ctx. dc ( ). getName ( ) )
853	Truth. assertThat ( counter. count ( batch ) )
854	assertEquals ( expectedTriggerTime, actualValue )
855	assertEquals ( new Dimension ( 50, 50 ), ac. getValue ( ). getSize ( ) )
856	assertKernel ( kernel, ANNULUS, e )
857	assertNotNull ( c )
858	assertParseTree ( rootNode ( "Ben", stringNode ( "id", "Ben", stringNode ( "name", "Ben" ) ) ), tree )
859	assertEquals ( expected, actual )
860	assertEquals ( - 1, cookies. get ( 0 ). getMaxAge ( ) )
861	assertEquals ( asList ( "I", "love", "New", "York", "." ), toText ( select ( jcas, Token. class ) ) )
862	assertEmptyHotspots ( samplingProfiler )
863	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
864	assertTrue ( voter. voteMatch ( affiliation, organization ) )
865	assertEquals ( "2007-12-03T10:15:30Z", result )
866	assertMapping ( node, 0, 0, 0, 0, 0, 5 )
867	assertThat ( result, is ( jsonNull ( ) ) )
868	assertThat ( name. getSegments ( ), contains ( "hello" ) )
869	assertEquals ( "Hello", ( ( BizExceptionNoDefaultConstructor ) read ). getMessage ( ) )
870	assertTrue ( rpbh instanceof RewriteParameterizedBatchHandler )
871	Assert. assertEquals ( AbstractRemoveBean. RETURN_STRING, result )
872	assertOut ( "public dynamic class A {\\n}" )
873	Assert. assertEquals ( 7, ( ( VersionMessageWrapper ) list. get ( 0 ) ). getMessageBuffer ( ). readableBytes ( ) )
874	assertFalse ( ValidationUtils. hasValidationFailures ( vrs ) )
875	Assert. assertFalse ( "On ValidationException input should be invalid", isValid )
876	assertEquals ( 23, a )
877	Assert. assertEquals ( "should return environment set", environment, comp. getEnvironment ( ) )
878	assertEquals ( "Response body is not correct.", USER_IN_REALM1_WITH_REALM_AND_SUFFIX, Utils. makeCallWithBasicAuthn ( principalServlet ( webAppURL ), USER_IN_REALM1_WITH_REALM_AND_SUFFIX, CORRECT_PASSWORD, SC_OK ) )
879	assertTrue ( logger. isWarnEnabled ( ) )
880	Assert. assertTrue ( t. hasOriginalTemplate ( ) )
881	assertEquals ( exp, res )
882	assertEquals ( "generating two change logs without any changes in between should result in an empty generated " + "differential change set.", 0, changeSets. size ( ) )
883	assertTrue ( "Should not reach here", false )
884	assertNotNull ( new Json4SpoonGenerator ( ). getJSONasJsonObject ( aType ) )
885	assertNull ( tag. getTitle ( ) )
886	assertThat ( graphManager. getGraph ( ). traversal ( ). V ( ). has ( "tim_id", createEntity. getId ( ). toString ( ) ). has ( "rev", 1 ). hasNext ( ), is ( true ) )
887	assertThat ( selected. entrySet ( ), is ( empty ( ) ) )
888	assertTrue ( response. contains ( "I" ) )
889	assertEquals ( this. q2Y1900, next )
890	assertEquals ( header, QuotaUsage. getHeader ( ) )
891	assertEquals ( 1, countFiles ( iter ) )
892	Assert. assertNotNull ( identity. getBackend ( ) )
893	Assert. assertNotNull ( savedTask. getSchedule ( ) )
894	assertThat ( result, Matchers. equalTo ( "%26test1=%26blah1&te%26st2=bl%26ah2&test3%26=blah3%26" ) )
895	assertEquals ( "Hello from outlook.com!", email. getVisibleText ( ) )
896	assertTrue ( s. intersects ( l1, l2 ) )
897	assertEquals ( IllegalArgumentException. class, e. getClass ( ) )
898	assertEquals ( EntityNameCharType. BOUNDARY, type )
899	assertEquals ( 1L, database. update ( "INSERT INTO CUSTOMER(id, illegalSqlFromResource) VALUES (2, 'Jane Doe')" ). count ( ). toBlocking ( ). single ( ). longValue ( ) )
900	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + filename, sourceFolder + "cmp_" + filename, destinationFolder, "diff_" ) )
901	shorts. assertNotGreaterThan ( description, actual, expected )
902	assertEquals ( 15, TestUtils. getPropertyValue ( interceptor, "retryOperations.retryPolicy.maxAttempts" ) )
903	Assert. assertEquals ( "--xxxxxxxxxxxxxxxxxxxxxxxx\\r\\n" + "Content-Disposition: multipart/form-data; name=\\"test\\"; filename=\\"hello world\\"\\r\\n" + "Content-Type: text/plain; charset=ISO-8859-1\\r\\n" + "\\r\\n" + "hello world\\r\\n" + "--xxxxxxxxxxxxxxxxxxxxxxxx--\\r\\n", out. toString ( StandardCharsets. US_ASCII. name ( ) ) )
904	Assert. assertEquals ( expResult, result )
905	assertEquals ( "say:hello", hello )
906	assertThat ( reader, is ( instanceOf ( JiraSearchReader. class ) ) )
907	assertEquals ( mockResponse, testResponse )
908	assertEquals ( "#{someBean.someProperty}", expr. getELExpression ( ) )
909	assertEquals ( "{\\"@context\\":{" + "\\"@vocab\\":\\"http://schema.org/\\"," + "\\"gr\\":\\"http://purl.org/goodrelations/v1#\\"," + "\\"businessFunction\\":{\\"@type\\":\\"@vocab\\"}," + "\\"RENT\\":\\"gr:LeaseOut\\"," + "\\"availableDeliveryMethod\\":{\\"@type\\":\\"@vocab\\"}," + "\\"DOWNLOAD\\":\\"gr:DeliveryModeDirectDownload\\"}," + "\\"@type\\":\\"Offer\\"," + "\\"businessFunction\\":\\"RENT\\"," + "\\"priceSpecification\\":{" + "\\"@type\\":\\"UnitPriceSpecification\\"," + "\\"price\\":3.99," + "\\"priceCurrency\\":\\"USD\\"," + "\\"datetime\\":\\"2012-12-31T23:59:59Z\\"}," + "\\"availableDeliveryMethod\\":\\"DOWNLOAD\\"," + "\\"eligibleDuration\\":{" + "\\"@type\\":\\"QuantitativeValue\\"," + "\\"value\\":\\"30\\"," + "\\"unitCode\\":\\"DAY\\"}}", w. toString ( ) )
910	assertTrue ( ScriptTestUtil. scriptIsInstanceOfScript ( testScript, expectedScript ) )
911	assertEquals ( GOLD_RESULT_ARRAY, root. getTree ( ) )
912	Assert. assertTrue ( methods. contains ( HttpMethod. POST ) )
913	Assert. assertTrue ( this. component. setCollaborators ( this. entity, collaborators ) )
914	Assert. assertTrue ( true )
915	assertSame ( GBP_2_34, test )
916	assertEquals ( DecodeQualification. INTENDED, plugIn. getDecodeQualification ( path ) )
917	Assert. assertNotNull ( addressResultsDto )
918	assertThat ( model. getPath ( parent, grandson ). length, equalTo ( 0 ) )
919	assertEquals ( GRADOOP_ID_VAL_8, p. getGradoopId ( ) )
920	assertThat ( response. getStatus ( ), equalTo ( 503 ) )
921	assertEquals ( 10, dt. intValue ( ) )
922	assertThat ( target. getGoals ( ), contains ( "first", "second", "third" ) )
923	assertNull ( result )
924	Assert. assertEquals ( expectedExceptionMessage, thrownExceptionMessage )
925	assertEquals ( agentJson, clone. toJSON ( version ) )
926	assertEquals ( k, heap. size ( ) )
927	assertTrue ( newYearsEve. isBefore ( newYearsDay ) )
928	assertEquals ( 2, manager. getRealms ( ). size ( ) )
929	assertThat ( params. isMonochrome ( ), equalTo ( true ) )
930	assertEquals ( pdfboxValues, acrobatValues )
931	assertThat ( CryptoUtils. HEX. encode ( signedTransaction. toByteArray ( ) ), equalTo ( EXPECTED_BYTE_REPRESENTATION ) )
932	assertThat ( intOrString1, equalTo ( intOrString2 ) )
933	assertNotNull ( actual )
934	assertEquals ( expectedBalance, customer. getBalance ( ), 0.001f )
935	assertEquals ( "bar", rs. getString ( 1 ) )
936	assertArrayEquals ( new long [ ] { 0, 0, - 1, - 1, - 1 }, blocks. getBlockListAsLongs ( ) )
937	assertEquals ( 0, actual. size ( ) )
938	assertThat ( result, equalTo ( v ) )
939	assertNotNull ( status )
940	assertThat ( result, is ( outbound ) )
941	assertThat ( events, is ( decisionTask. getEvents ( ) ) )
942	assertCreateNewDocument ( expected, query )
943	assertEquals ( false, result )
944	assertEquals ( 100, res )
945	assertTrue ( BCrypt. checkpw ( plain, expected ) )
946	Assert. assertEquals ( 3, users. size ( ) )
947	assertTrue ( rulesThatHadErrors. remove ( "Incoherent restrictions 7" ) )
948	assertEquals ( expResult, result )
949	assertEquals ( true, target. closed ( ) )
950	assertEquals ( "a<V>\\n", found )
951	assertTrue ( index. map. get ( object ). contains ( object ) )
952	assertEquals ( "Validation message text not correct", "App Error found for {0}", messageText )
953	assertThat ( uri, is ( "http://user:password@example.com:8080/path1/path2/path3?q1=v1&q2=v2" ) )
954	assertThat ( mapOutput. size ( ), is ( 0 ) )
955	assertTrue ( "an=hello.wav;world.wav it=1". equals ( result ) )
956	assertNull ( ic. getContainerProperty ( object1, "xyz" ) )
957	assertEquals ( "willdo", new String ( client. get ( "testitnow" ). data ( ) ) )
958	assertNotEquals ( otherHashCode, foreignableFieldHashCode )
959	assertEquals ( expected, actual )
960	assertEquals ( "test", echo. echo ( "test" ) )
961	testRunner. assertAllFlowFilesTransferred ( EncodeContent. REL_FAILURE, 1 )
962	assertNotNull ( depends )
963	assertEquals ( expectedHtml, html )
964	assertEquals ( expectedQuery, actualQuery )
965	assertEquals ( value, payload. getStatementsAsJson ( ) )
966	assertThat ( javaDocComment, containsString ( "(Required)" ) )
967	Assert. assertEquals ( "User name doesn't match", USER_NAME_WITH_DELIMITER, info. getUser ( ) )
968	assertEquals ( 0, filter. getFrom ( ) )
969	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE NAME(nodes) <= 'literal'" ) )
970	assertEquals ( sumLabel. getText ( ), String. valueOf ( number ) )
971	Assert. assertEquals ( 400, response. getStatus ( ) )
972	Assert. assertEquals ( SIMPLE_RETURN_CODE. FAIL, check. getErrorType ( ) )
973	Assert. fail ( "Expected ConfigurationException" )
974	assertEquals ( "unmarshalledJSON", resp. getResponseBody ( ). trim ( ) )
975	Assert. assertArrayEquals ( new int [ ] { 1, 2 }, slice ( a, new int [ ] { 3, 1 } ) )
976	Assert. assertEquals ( expectedNode. toString ( ), pdoc. toString ( ) )
977	assertHealthCheck ( client. execute ( get ) )
978	Assert. assertFalse ( res. isEmpty ( ) )
979	assertResponseContains ( "cq:Page" )
980	assertThat ( result. getAccessTime ( ), is ( equalTo ( 42L ) ) )
981	assertEquals ( "Message: /abc", ResponseBodyInterpolator. interpolate ( "Message: [request.path]", req ) )
982	Assert. assertTrue ( maxError < 0.007 )
983	assertEquals ( ExpressionFactory. exp ( "x.y" ), pp )
984	AssertionUtils. multiAssertEquals ( createAsDocument10, response6. getResponseObject ( ) )
985	Assert. assertTrue ( counts. containsKey ( Jsprit. Strategy. RADIAL_BEST. toString ( ) ) )
986	assertEquals ( "Should not modify anything", fun, result )
987	assertMockEndpointsSatisfied ( )
988	assertFalse ( connectFuture. isConnected ( ) )
989	assertTrue ( l - arrival < 5000L )
990	assertEquals ( expResult, result )
991	Assert. assertNotNull ( list )
992	assertEquals ( 0, set. size ( ) )
993	JSONAssert. assertEquals ( "Message", new JSONArray ( Arrays. asList ( 1, 2, 3 ) ), actual, false )
994	Assert. assertEquals ( b, a. insertColumn ( 1, column ) )
995	assertEquals ( "[start:a:nsa, end:a]", handler. history. toString ( ) )
996	assertTrue ( aclDao. hasEntry ( principal, secureObject ) )
997	Assert. assertNotNull ( mediaResult. getMediaId ( ) )
998	assertTrue ( UrlUtils. isMatch ( consumerUrl, providerUrl ) )
999	Assert. assertFalse ( policy. isResponseCacheable ( "GET", response ) )
1000	assertNotNull ( simple )
1001	assertEquals ( "foobar", cfg. someValue ( ) )
1002	assertEquals ( d1, d2 )
1003	Assert. assertEquals ( "{\\"error\\":{\\"code\\":null,\\"message\\":\\"The property 'x', used in a query expression, is not defined in type 'G1'.\\"}}", state. response )
1004	assertEqualsIgnoreMetadata ( targetCS, actualCS )
1005	assertThat ( underTest. getDispatched ( ). toString ( ), containsString ( String. format ( "[%s, %s, %s]", REPOSITORY_3, REPOSITORY_1, REPOSITORY_2 ) ) )
1006	assertEquals ( 3, cases. size ( ) )
1007	assertTrue ( "Ldap realm should be created", ops. exists ( TEST_LDAP_REALM_ADDRESS ) )
1008	assertEquals ( msgs, count )
1009	assertEquals ( "http://listener:3000/foo/bar", url )
1010	assertEquals ( "ReverseEngineering: \\n" + "  Catalog: null\\n" + "    Schema: s\\n" + "      IncludeTable: null\\n\\n" + "  Use primitives", engineering. toString ( ) )
1011	assertNotNull ( result )
1012	assertEquals ( d. type ( ), Type. INT8 )
1013	assertFalse ( ( boolean ) testedMethod. invoke ( tasksManagerImpl, STARTING_BYTE_OF_3_BYTE_CHAR ) )
1014	assertNoACLset ( )
1015	Assert. assertNull ( created )
1016	assertEquals ( PercentageOfWorkDoneChangedEvent. class, ReflectionUtils. inferParameterClass ( victim. getClass ( ), "onEvent" ) )
1017	Assert. assertTrue ( DateTimeUtil. millisecondsToHumanDateWithSeconds ( jobCounts. get ( 1 ). timeBucket ). equals ( "2016-08-22 20:15:00" ) )
1018	assertEquals ( expectedContinuationToken, actualContinuationToken )
1019	assertEquals ( "foo", proxy. interfaceMethod ( ) )
1020	assertSample ( sample, x, y, 0 )
1021	assertFalse ( mailSenderStub. anyMoreMessages ( ) )
1022	Assert. assertTrue ( employees. size ( ) > 1 )
1023	FixtureAsserts. assertStringMatchesJsonFixture ( "UpdatePurchaseOrder by admin response render to HAL+JSON", actualResponse, "/fixtures/hal/purchaseorder/expected-admin-update-purchase-order.json" )
1024	assertNotNull ( token )
1025	assertThat ( response. hasNotExpired ( ), is ( true ) )
1026	assertEquals ( 0, hits. totalHits )
1027	assertEquals ( expectedQuery, actualQuery )
1028	Assert. assertNotNull ( out. getD1 ( ) )
1029	assertEquals ( "clearCache timeout", latch. getCount ( ), 0 )
1030	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Start>" + "before" + "<Child>content</Child>" + "after" + "</Start>", builder. build ( ). toXml ( ) )
1031	assertFalse ( parent. valid ( ). get ( ) )
1032	Assert. assertEquals ( cap - i, dbq. remainingCapacity ( ) )
1033	Assert. assertEquals ( "�驻�� 3 ���砖��", t. format ( new Date ( 0 ) ) )
1034	Assert. assertNull ( user )
1035	Assert. assertFalse ( "Verify file was not stored", archive. contains ( SystemProperties. FILE_NAME ) )
1036	GAssert. assertEquals ( articles, result )
1037	assertTrue ( p. startsWith ( "/tmp" ) )
1038	Assert. assertTrue ( policy. isResponseCacheable ( request, response ) )
1039	assertEquals ( "Sales", bubbleChart. getTitle ( ) )
1040	assertTrue ( "i=" + i + " d=" + d,! nnList. isEmpty ( ) )
1041	assertThat ( orderElement. getAdvancePercentage ( ), sameValueAs ( division. divide ( 22, 100 ) ) )
1042	assertNotEquals ( Movie. UNKNOWN, result )
1043	mockery. assertIsSatisfied ( )
1044	assertTrue ( content. replaceAll ( "\\\\s+", " " ). contains ( "text1 text2 text3" ) )
1045	assertEquals ( s, ps )
1046	assertMockEndpointsSatisfied ( )
1047	assertEquals ( expected, e. evaluate ( ), 0.0 )
1048	assertEquals ( distance, p1. getPoint ( ). distance ( p2. getPoint ( ) ), 5.0 )
1049	assertIterators ( allExisting, allMatchingQueryParamsFilter )
1050	assertNull ( query )
1051	mock. assertIsSatisfied ( )
1052	assertTrue ( response. getErrors ( ). isEmpty ( ) )
1053	Assert. fail ( validator. getErrors ( ). toString ( ) )
1054	assertSnake ( "       \\n" + "    ���� \\n" + "   ����  \\n" + "   ��   \\n" + "       \\n" + "       \\n" + "       \\n" )
1055	assertEquals ( 1, constraints. size ( ) )
1056	Assert. assertTrue ( body. contains ( "this is a.txt" ) )
1057	assertNullOrEmpty ( taint )
1058	assertEquals ( replacement, response. getHeaders ( ) )
1059	assertParseOneDoc ( editor, "DOC(0): ---", "  KEY(0): hello:", "    KEY(2): world:", "      RAW(4): message", "      RAW(-1): " )
1060	Assert. assertEquals ( sendCountBefore + 1, AlertSender. getSendCount ( ) )
1061	assertThat ( resultCommand, is ( expectedCommand ) )
1062	assertFalse ( "Log should not contain request for root nodes.", logContainsText ( "Root node request: " ) )
1063	assertEquals ( 50., calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
1064	assertEquals ( 4, IterableUtils. count ( IncludeAllRelationships. getInstance ( ). getAll ( database ) ) )
1065	assertWktEquals ( Convention. WKT2, "ENGCRS[��A spherical CRS��,\\n" + "  EDATUM[��Centre��],\\n" + "  CS[spherical, 3],\\n" + "    AXIS[��Spherical latitude (U)��, north, ORDER[1], ANGLEUNIT[��degree��, 0.017453292519943295]],\\n" + "    AXIS[��Spherical longitude (V)��, east, ORDER[2], ANGLEUNIT[��degree��, 0.017453292519943295]],\\n" + "    AXIS[��Geocentric radius (r)��, up, ORDER[3], LENGTHUNIT[��metre
1066	assertTrue ( failed )
1067	Assert. assertEquals ( 3, response. getEntityData ( ). size ( ) )
1068	assertEquals ( "Test Page", page. asString ( ) )
1069	assertNotNull ( namedBean )
1070	Assert. assertNull ( "No candidate shall be created", candidate )
1071	assertThat ( addressResolver. get ( ), allOf ( notNullValue ( ), instanceOf ( ListAddressResolver. class ) ) )
1072	Assert. assertEquals ( - 1, recorder. getLastInput ( ) )
1073	assertThat ( splits, is ( correctSplits ) )
1074	Assertion. assertEquals ( loadedDataSet, actualDataSet )
1075	assertEquals ( 129, crossWord. search. getSolutionListener ( ). solutionsNo ( ) )
1076	assertEquals ( 2, testResult. size ( ) )
1077	assertions. containsOnly ( values )
1078	Assert. assertEquals ( LogLevel. INFO, testedStore. readProperty ( "logX" ). getValue ( ) )
1079	assertThat ( controller, is ( equalTo ( method ) ) )
1080	assertEquals ( expecting, result )
1081	assertNotNull ( one )
1082	assertTrue ( 3 >= peterRank )
1083	assertEquals ( 0, daysToWorkday )
1084	assertThat ( client. getMapping ( INDEX, TYPE ), is ( equalTo ( mapping ) ) )
1085	assertTrue ( "Should match feed URI with a context root - regex is: " + targetRegex. pattern ( ), targetRegex. matcher ( addContextRoot ( FEED ) ). matches ( ) )
1086	Assert. assertEquals ( false, fr. element0 ( ). isSuccess ( ) )
1087	Assert. assertNull ( importer. getNearestByPlaceType ( null, "paris", "FR", ONLY_CITY_PLACETYPE, null, null ) )
1088	assertTrue ( zda. toString ( ). startsWith ( "$GPZDA,090807.600,07," ) )
1089	Assert. assertEquals ( change, updatedChange )
1090	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
1091	Assert. assertNull ( "Wrong data", builtByFactory. getData ( ) )
1092	assertNotNull ( classUnderTest. getBundle ( ) )
1093	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
1094	assertEquals ( "(34 a c)\\n", found )
1095	assertEquals ( "Method #toString is wrong", "BlobMapper{field=field, indexed=false, sorted=true, validated=true, column=field}", mapper. toString ( ) )
1096	assertEquals ( msg, text. getMessage ( ) )
1097	assertTrue ( "Something wrong. Returned wadl length is not > 0", applicationWadl. length ( ) > 0 )
1098	assertEquals ( 2, ptos. bytesWritten )
1099	assertTokensEqual ( ImmutableList. of ( value ( ) ), lastSeenTokens. get ( ) )
1100	assertTrue (! result )
1101	assertTrue ( convertedIteratorToList. size ( ) == 4 )
1102	assertThat ( found, is ( true ) )
1103	assertThat ( "Not all events handlers checked", error. get ( ), is ( equalTo ( 0 ) ) )
1104	assertEquals ( Lists. newArrayList ( "1", "2", "3", "4", "5", "6" ), getStringsFromElements ( elements ) )
1105	assertThat ( defaultSettings, is ( not ( nullValue ( ) ) ) )
1106	assertFalse ( parser. doesAllowsUnrecognizedOptions ( ) )
1107	assertEquals ( db. get ( "foo" ), "v2" )
1108	assertEcssEquals ( ".footer{clear:none;}#header{margin-bottom:10px;}", convertFragment ( xcss ) )
1109	assertEquals ( "Should get expected resultBounds", resultBounds, filter. toString ( ) )
1110	assertEquals ( expResult, result )
1111	assertThat ( spiLoader, hasItem ( isA ( BigQueryComponentFamilyDefinition. class ) ) )
1112	assertTrue ( isSorted )
1113	assertFalse ( validator. isValid ( resource, MetadataSection. PARTIES_SECTION ) )
1114	assertEquals ( ref. getDBRefs ( ). get ( 0 ), s. getDBRefs ( ). get ( 0 ) )
1115	assertEquals ( "The records number is correct " + clusterName. getName ( ), 1, resultIterator. size ( ) )
1116	assertEquals ( handler. parseString ( testDate ), test )
1117	assertEquals ( 1L, id. getVersionIdPartAsLong ( ). longValue ( ) )
1118	assertEquals ( "AB", s )
1119	assertEquals ( "CFBundleShortVersion in file '" + infoPList + "' is not the expected version '" + dynamicVersion + "'.", dynamicVersion, new PListAccessor ( infoPList ). getStringValue ( PListAccessor. KEY_BUNDLE_SHORT_VERSION_STRING ) )
1120	assertEquals ( 2, hitCount )
1121	Assert. assertEquals ( "[[1, bar, 3.0], [1, bar, 4.0], [1, baz, 3.0], [1, baz, 4.0], [2, bar, 3.0], [2, bar, 4.0], [2, baz, 3.0], [2, baz, 4.0]]", permutations. toString ( ) )
1122	assertThat ( lists. serial ( ), is ( asList ( 1, 2, 3, 4 ) ) )
1123	assertEquals ( expected, actual )
1124	Assert. assertNotNull ( returnedValue )
1125	assertNotNull ( processor )
1126	assertNotNull ( "Null transaction returned", t )
1127	assertFunctionTreeLines ( values, 6, 8 )
1128	assertTrue ( result )
1129	assertTrue ( dsc. getPanel ( )!= null )
1130	Conditions. assertThat ( condition, matcher )
1131	assertTrue ( browsersAsXml. length ( ) > 0 )
1132	assertEquals ( 55, tdefsRes. getBody ( ). length )
1133	assertArrayEquals ( expected, actual )
1134	assertEquals ( "Null cid test failed.", AdWordsSessionUtil. VIRTUAL_CID, AdWordsSessionUtil. getClientCustomerId ( session ) )
1135	assertEquals ( "Substitution was not correctly applied", "This is a lunches lunches.", result. get ( ) )
1136	assertEquals ( expResult, result )
1137	assertDecimalEquals ( obv. getValue ( 9999 ), 0 )
1138	assertArrayEquals ( expected. toArray ( ), result. toArray ( ) )
1139	assertEquals ( "WHERE id = 12345", statement. getQuery ( ) )
1140	assertEquals ( "JacksonFeature", client. getConfiguration ( ). getProperty ( InternalProperties. JSON_FEATURE ) )
1141	Assert. assertEquals ( count, store. getNumEvents ( 0, 5000 ) )
1142	assertEquals ( "select entity_0 from Entity entity_0 where ( ( entity_0.code = :code_1 ) and ( entity_0.code = :code_2 ) )", select. getQuery ( ) )
1143	assertEquals ( null, v1 )
1144	Assert. assertEquals ( pom. getVersion ( ), "1.0" )
1145	assertInstancesOf ( java. sql. Timestamp. class, rv )
1146	assertEquals ( presenter. isFilterOn ( ), true )
1147	assertEquals ( "getVersion() doesn't return the same value as the previous setVersion()", version, domainEntity. getVersion ( ) )
1148	assertEquals ( "Reversed complementing view", s. getSequenceAsString ( ), "CA" )
1149	assertEquals ( "file.ttl", fn2 )
1150	assertRequest ( "POST", "Verification/Address/" )
1151	assertTrue ( ( ( NgMinProcessor ) victim ). isSupported ( ) )
1152	assertThatPersonIsNotProtected ( mapper ( FOR_NON_AUTORITY_CLIENT ). map ( person, AlwaysCensorProtectedData, CPRProtectionLevel. DoNotCensorCPR ) )
1153	Assert. assertEquals ( expResult, result )
1154	assertEquals ( "three", lastElement )
1155	assertEquals ( "192.168.0.123/24", event. getIp ( ). getAddress ( ) )
1156	assertEquals ( 1, ( int ) field. getFieldId ( ) )
1157	assertEqualsJFigletSmushing ( asciiArt )
1158	assertResultSet ( res, "testTimezonedTable3.result" )
1159	assertEquals ( expected, actual )
1160	assertEquals ( "Hello Camel in action", reply )
1161	assertEquals ( 5, value. asInt ( ) )
1162	assertEquals ( "GBP 5.90", test. toString ( ) )
1163	assertThat ( fieldError, is ( nullValue ( ) ) )
1164	assertEquals ( expected, result )
1165	assertEquals ( "Total number: ", 20, timeline. getTotalNumber ( ) )
1166	Assert. assertNotNull ( drink )
1167	assertEquals ( String. format ( TextHelper. LOCALE_ROOT, "        alpha  bravo%n" + "    charlie    delta%n" + "    echo     foxtrot%n" + "    golf       hotel%n" + "    india%n" + "    juliet kilo lima" ), TextHelper. wrap ( new ASCIITextWidthCounter ( ), s, 20, 0, "        ", "    " ) )
1168	assertEquals ( "*****FileTest: bad file list", 15, fm. size ( filename ) )
1169	assertEquals ( "entry-" + i, new String ( entry. getEntryBytes ( ) ) )
1170	assertEquals ( "<b>Hello, world</b>", rewrite ( gadget, markup, set ( "b" ), set ( ) ) )
1171	assertEquals ( conceptClass, conceptService. getConceptClass ( unusedConceptClassId ) )
1172	assertTrue ( _comp. isEquals ( json, expected ) )
1173	Assert. assertEquals ( 1, ( int ) retVal )
1174	spliterators. assertHasOnlyCharacteristics ( INFO, actual, DISTINCT )
1175	Assert. assertEquals ( 20, lambda. testAccessingSuperMembers ( ) )
1176	assertEquals ( DispatcherType. INCLUDE, dispatcherType )
1177	assertTrue ( error. startsWith ( "The query cannot be parsed" ) )
1178	assertOut ( "/**\\n * @interface\\n * @extends {foo.bar.IB}\\n * @extends {baz.goo.IC}\\n * @extends {foo.ID}\\n */\\nIA = function() {\\n};" )
1179	assertEquals ( g1, g2 )
1180	assertEquals ( createdOnAsDate, patchSet. getCreatedOn ( ) )
1181	assertArrayEquals ( new long [ ] { 1, 2, 3 }, result )
1182	Assert. assertTrue ( permissions. toString ( ), permissions. isEmpty ( ) )
1183	assertEquals ( "Simple Hello", bean. sayHello ( ) )
1184	assertTrue ( "Class is abstract.", checker. isAbstract ( ) )
1185	assertEquals ( "1.0.23-2", parsed )
1186	assertEquals ( 0, dao. delete ( ( Foo ) null ) )
1187	assertThat ( strAction, is ( "action" ) )
1188	assertThat ( target. validate ( ), is ( false ) )
1189	Assert. assertNotNull ( out. getD2 ( ) )
1190	assertEquals ( 4, exceptions )
1191	assertEquals ( 1, event. getMetricSint64 ( ) )
1192	assertEquals ( "Expected 5 results!", 5, count )
1193	assertEquals ( expected, result )
1194	assertEquals ( "JSONObject 'key' should return <null> as it's not an object", JSONHelper. getJSONObject ( obj, "key" ), null )
1195	assertEquals ( record, converter. convertRecord ( converter. convert ( record, repository ), repository ) )
1196	assertEquals ( "Failed to filter query string", expectedResult, normalizedUrl )
1197	Assert. fail ( "Should not have been allowed to set registry after pool started" )
1198	assertEquals ( expected, actual )
1199	assertNotNull ( result )
1200	assertFalse ( account. isValid ( ) )
1201	assertEquals ( Arrays. asList ( root, intermediate ), leaf. getParentTree ( ) )
1202	Assert. assertEquals ( "username", userName )
1203	assertEquals ( wrapUserList. getUsers ( ), userRoleService. getUsers ( ). getUsers ( ) )
1204	assertEquals ( "Table name is not equal to actual value.", "testAddIndexWithDuplicaIndexNames", iHtd. getNameAsString ( ) )
1205	assertEquals ( 0, filesList. size ( ) )
1206	assertEquals ( "array_3", sql )
1207	assertThat ( allEvents. stream ( ). limit ( events. size ( ) ). collect ( toList ( ) ), containsInOrder ( reverse ( events ) ) )
1208	assertNotNull ( result )
1209	assertEquals ( "mystream.flibble", sn. getSourceDestinationNode ( ). getDestinationName ( ) )
1210	assertEquals ( conceptSets, Collections. emptyList ( ) )
1211	assertEquals ( 1000L, InfinitestGlobalSettings. getSlowTestTimeLimit ( ) )
1212	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), hasEnvVar ( "STARTUP_MODE", ADMIN_STATE ) )
1213	assertThat ( command. accept ( state ), is ( true ) )
1214	assertTrue ( ax instanceof OWLObjectPropertyDomainAxiom )
1215	assertTrue ( "Models not isomorphic", isomorphic ( m, model1 ) )
1216	assertTrue (! testing. hasNext ( ) )
1217	assertEquals ( 1, unassigned. size ( ) )
1218	assertEquals ( "/topic", m_callback. getTopic ( ) )
1219	arrays. assertContains ( description, null, array ( "Yoda" ) )
1220	Assert. assertTrue ( "targetFile not copied", targetFile. exists ( ) )
1221	assertTrue ( serviceFacade. isAnyProcessGroupUnderVersionControl ( groupId ) )
1222	assertEquals ( "Saturday, January 01", DateUtils. formatFriendlyDate ( DateUtils. nowUtc ( ) ) )
1223	assertEquals ( 0, branch_conditions. size ( ) )
1224	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED_BREAK, status )
1225	assertEquals ( mockHandler, m. getProperty ( "com.sun.xml.bind.characterEscapeHandler" ) )
1226	assertEquals ( expected, buffer. get ( ) )
1227	Assert. assertEquals ( "Failure for mode=" + mode + ", button=" + button + ", slot=" + slot, expected, actual )
1228	assertOut ( "foo.bar.B[\\"b\\"] = foo.bar.B[\\"b\\"] + 1" )
1229	Assert. assertTrue ( isEqual ( d1, d2 ) )
1230	Assert. assertEquals ( "foo=bar&bar=foo", payload. getValue ( ) )
1231	assertAnnotationCompletions ( "@Value(\\"${data.prop2}\\"<*>)", "@Value(\\"${else.prop3}\\"<*>)", "@Value(\\"${spring.prop1}\\"<*>)" )
1232	assertEquals ( "($1_5_R =='sourceValue' AND $5_6 == 'targetValue' AND $1_5 == 'enrichValue')", transformed )
1233	assertEquals ( "MER_RR__2PRLRA20120408_022952_000026243113_00262_52862_0643", output )
1234	assertColumnHeaderOrder ( 0, 1, 2, 4 )
1235	Assert. assertFalse ( response. getErrors ( ). isEmpty ( ) )
1236	assertThat ( resolver. replace ( "${message-MISSING}", true ), is ( "MISSING" ) )
1237	assertEquals ( "void foo(CharSequence[] args) {}", actualContent )
1238	assertNotNull ( "Text not translated", transText )
1239	assertTrue ( EqualsBuilder. reflectionEquals ( config, config2, "keyStore", "ourCertificate" ) )
1240	assertNotNull ( xstreamMap )
1241	Assert. assertTrue ( exceptionMatches )
1242	assertEquals ( "xaxbx", ex. getUnlabeledMessage ( ) )
1243	assertArrayEquals ( objects, result )
1244	assertFalse ( transactionHelper. isTransactionAvailable ( ) )
1245	assertEquals ( sb. toString ( ), whereSb. toString ( ) )
1246	assertThat ( ms. contains ( "aaa" ), is ( false ) )
1247	assertEquals ( new DocumentReference ( "bar", "baz", new ObjectIdElement ( "_id", id ) ), element. getValueAsObject ( ) )
1248	assertEquals ( SingularGB ( ideal, GREVLEX, 2, 3 ), GroebnerBasis ( eliminate ( ideal, 2, 3 ), GREVLEX ) )
1249	Assert. assertEquals ( "Not Supported", result )
1250	assertEquals ( "/protected/res/documents/index.html?focus={contractId}&caller=BLUE&referrer=/protected/res/my_contracts/index.html&fragment=/contractDetails/1234567890", affordance. expandPartially ( args ). getHref ( ) )
1251	Assert. assertEquals ( 126, timeSliceElementDecls. size ( ) )
1252	assertTrue ( Pattern. matches ( "(?s).*/converter.jsp PASSED.*", page. asXml ( ) ) )
1253	Assert. assertTrue ( "secondary user cannot write file", irodsFileForSecondaryUser. canWrite ( ) )
1254	assertTrue ( "User was not subscribed.", response )
1255	assertEquals ( 201, response. getStatus ( ) )
1256	assertEquals ( "Unsupported parameter test for pwd.", result )
1257	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><entry xmlns=\\"http://www.w3.org/2005/Atom\\">\\r\\n   <title type=\\"text\\">LabelUpdateFileNew1395998842907</title>\\r\\n   <id>urn:lsid:ibm.com:td:8f6b6cca-b62f-43ba-b4cd-25d2c692072f</id>\\r\\n   <summary type=\\"text\\">SummaryNew1395998842907</summary>\\r\\n   <uuid xmlns=\\"urn:ibm.com/td\\">8f6b6cca-b62f-43ba-b4cd-25d2c692072f</uuid>\\r\\n   <label xmlns=\\"urn:ibm.com/td\\">LabelUpdateFileNew1395998842907</label>\\r\\n   <category xmlns=\\"urn:ibm.com/td\\" label=\\"document\\" scheme=\\"tag:ibm.com
1258	Assert. assertTrue ( "void method not supported", adapter. supports ( endpoint ) )
1259	assertThat ( generated. length ( ), is ( equalTo ( length ) ) )
1260	assertThat ( JdbcUtils. getColumnNames ( getConnectionProperties ( ), "SOMETABLE" ), containsInAnyOrder ( "PID", "TEXTCOL" ) )
1261	assertThat ( testOutcome. getResult ( ), is ( TestResult. SUCCESS ) )
1262	Assert. assertEquals ( 1, ahelper. getFailedRecords ( ). size ( ) )
1263	assertFalse ( selected )
1264	assertThat ( perspectiveLayout, is ( not ( new PerspectiveLayout ( perspectiveId, Optional. of ( otherNode ) ) ) ) )
1265	assertEquals ( target. field, send. send ( ) )
1266	Assert. assertNotNull ( obj )
1267	assertEquals ( expectedQuery, actualQuery )
1268	assertEquals ( fixture, userInfo. result ( ) )
1269	Assert. assertTrue ( dec. compareTo ( plain ) == 0 )
1270	Assert. assertEquals ( 0, rto. getRules ( ). size ( ) )
1271	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
1272	assertEquals ( 0, type. getCapacityDimensions ( ). get ( 0 ) )
1273	assertEquals ( 0, result. size ( ) )
1274	assertTrue (! branch_conditions. isEmpty ( ) )
1275	assertEquals ( "Expected 0 results!", 0, n )
1276	assertEquals ( "Hi < commons", sub. replace ( "Hi $< <name>" ) )
1277	assertFalse ( results. getAttribute ( ValidationActionTypeService. VALIDATIONS_ACTION_ATTRIBUTE ) == null )
1278	assertEquals ( "bar", jedisCluster. get ( "foo" ) )
1279	assertArrayEquals ( expected, ata, FLOAT_EPSILON )
1280	assertEquals ( qlString, query. getQl ( ). get ( ) )
1281	assertIntValues ( array, 4, 5, 6, 1, 2, 3 )
1282	Assert. assertNotNull ( authentication )
1283	assertSame ( result, Objects. firstNonNull ( request. getAttribute ( "result" ), request. getAttribute ( "defaultResult" ) ) )
1284	assertEquals ( "123涓���浜烘��卞����", deserialize. readUTF ( ) )
1285	assertEquals ( 11, entity. getField ( "priority" ) )
1286	assertHighlighting ( 2, 6, 8, STRING )
1287	assertEquals ( admin, transformer. apply ( adminDocument ) )
1288	assertEquals ( expected, actual )
1289	assertFalse ( result. toString ( ). contains ( "rdf:nodeID" ) )
1290	assertThat ( subject. isExportDir ( folder. getRoot ( ) ), Matchers. is ( true ) )
1291	assertFalse ( object. isWeak ( ) )
1292	assertEquals ( 2, ektorp. getSeatedPeople ( ). size ( ) )
1293	assertEquals ( sb. toString ( ), qb. prepareStatementString ( ) )
1294	assertEquals ( 1, repositoryService. createProcessDefinitionQuery ( ). count ( ) )
1295	assertEquals ( "34 abc\\n", found )
1296	Assert. assertEquals ( 1, knowledgeId )
1297	assertEquals ( 1, count )
1298	assertEquals ( newValue, postComment. getAttributes ( ). get ( name ) )
1299	assertEquals ( "2:4:6:", app. asString ( a1 ) )
1300	assertNull ( fha. getFlags ( i ) )
1301	assertReportContains ( Message. Type. ERROR, "accountNumberUnique", customer, account )
1302	assertThat ( specificResourceAllocation. getAssignments ( ), haveResourceAllocation ( specificResourceAllocation ) )
1303	assertEquals ( BPResultType. FAIL, testResult. getResultType ( ) )
1304	assertNull ( "Message was found after being deleted", checkMessage )
1305	assertPostCodegenRules ( mojo )
1306	Assert. assertEquals ( "Jan", personView. name )
1307	assertThat ( tuple. getCollectionOrEmpty ( "field" ), equalTo ( value ) )
1308	assertEquals ( expected, actual )
1309	assertEquals ( "Not Calendar.equals: ", v1. getDateTime ( ), v2. getDateTime ( ) )
1310	Assert. assertTrue ( decoder. isFinished ( ) )
1311	assertEquals ( 2, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
1312	assertThat ( actual, is ( equalTo ( expected ) ) )
1313	Assert. assertEquals ( 0.0, score, 0.0 )
1314	assertEquals ( null, DocumentUtils. getDocumentUri ( cas ) )
1315	assertEquals ( "IDX1", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
1316	assertFileInHeadVersion ( OBJ_ID, FILE1_SUBPATH, FILE_CONTENT2 )
1317	assertThat ( formatter. format ( PlainDate. of ( 1582, 10, 1 ) ), is ( "Sept." ) )
1318	Assert. assertTrue ( "'withtests' should contain tests.", result )
1319	Assert. assertTrue ( FastMath. abs ( error ) < 1.0e-10 )
1320	assertEquals ( "ereref", Bytes. toString ( res ) )
1321	assertThat ( target. getTime ( ), is ( time ) )
1322	Assert. assertEquals ( 1, userRoleDao. list ( "liangpengyv@fir.im" ). size ( ) )
1323	assertEquals ( 1, o. importsDeclarations ( ). count ( ) )
1324	assertEquals ( KuduClientTestCommons. TOTAL_KUDU_TABLETS_FOR_UNITTEST_TABLE, allScanTokens. size ( ) )
1325	assertThat ( result, is ( true ) )
1326	assertEquals ( expected, ColumnRanges. rangeAtNode ( either ) )
1327	assertFalse ( family1. equals ( family2 ) )
1328	assertAgentString ( optionsByType, "-agentpath:mylib=", "port=8849" )
1329	Assert. assertEquals ( "ssd", tableName )
1330	assertEquals ( numObjects, response. getObjects ( ). size ( ) )
1331	assertEquals ( "Mismatch count", rsMismatches. size ( ), result )
1332	assertFalse ( updatedTopic. userSubscribed ( user ), UNSUBSCRIBED )
1333	assertThat ( System. getProperty ( key ), is ( nullValue ( ) ) )
1334	assertTrue ( strategy. setAllPricesInitialized ( ) )
1335	assertEquals ( 1, td. getOrder ( ) )
1336	assertTrue ( this. getMimeMailSubject ( ). contains ( "title Branch" ) )
1337	Assert. assertEquals ( 0, count )
1338	assertEquals ( new Double ( 12345 ), rtcpReceivedEvent. getRtt ( ) )
1339	assertEquals ( expected, t )
1340	assertThat ( xmlIn, is ( not ( nullValue ( ) ) ) )
1341	assertEquals ( "zone doesn't match", zone, actualZone )
1342	assertEquals ( "http://ci.visuwall.awired.net/job/struts/5/testReport/api/xml", testUrl )
1343	assertThat ( str, equalToIgnoringCase ( "insert into UserInfo(name,age) values('�电����','3'),('10','��''榧�','5')" ) )
1344	assertEquals ( p, fromDenseRecursiveForm ( recForm, p. nVariables, MonomialOrder. DEFAULT ) )
1345	assertEquals ( SC_OK, response. getStatus ( ) )
1346	assertEquals ( output1. getId ( ). getIdPart ( ), output2. getId ( ). getIdPart ( ) )
1347	assertTrue ( daemon. start ( "src/test/resources/test_configurations/basic-configuration.xml" ) )
1348	assertTrue ( Integer. valueOf ( lowestTitle. compareTo ( summary. getTitle ( ). getTitle ( ). getContent ( ) ) ) < 0 )
1349	assertTreesAreEqual ( tree, roundTripped )
1350	assertThat ( uri, is ( "/path/expectedUrl" ) )
1351	Assert. assertNotNull ( result. getBookList ( ) )
1352	assertEquals ( 1, tags. size ( ) )
1353	assertEquals ( 3, packages. size ( ) )
1354	assertThat ( relationEditor. isMatchingRelationName ( relation, name ), is ( false ) )
1355	Assert. assertTrue ( deepCompareComputeResourceDescription ( savedComputeResource, updatedComputeResource ) )
1356	assertEquals ( 0, o. getLogicalAxiomCount ( ) )
1357	assertThat ( excludeProgressLogsFilter. decide ( event ), equalTo ( DENY ) )
1358	assertThat ( thrown, instanceOf ( CursorNotFoundException. class ) )
1359	Assert. assertEquals ( 10, counter. getCount ( ) )
1360	Assert. assertEquals ( "", mailbox. getAddress ( ) )
1361	Assert. assertEquals ( 1, consumer. waitForFaultMessage ( ). getFaults ( ). size ( ) )
1362	assertEquals ( expected, e. setVariable ( "x", x ). evaluate ( ), 0.0 )
1363	assertEquals ( edmType, returnedType )
1364	assertVectorEquals ( scale ( alpha ), x. scale ( alpha ) )
1365	assertTrue ( resource + " is not valid", result. isValid ( ) )
1366	Assert. assertTrue ( rep. containsKey ( "name" ) )
1367	assertEquals ( socketAddress, readAddress )
1368	Assert. assertEquals ( "a12", config2. getSet ( ). iterator ( ). next ( ). getId ( ) )
1369	assertFalse ( result )
1370	assertTrue ( valid )
1371	assertThat ( cursor. proceedTo ( 'd' ), is ( false ) )
1372	assertArrayEquals ( expected, bos. toByteArray ( ) )
1373	assertEquals ( 6. * 3600., sec, 0.01 )
1374	assertThat ( "size", repos, hasSize ( 0 ) )
1375	assertTrue ( sql, sql. endsWith ( "WHERE t0.ESTIMATED_PRICE " + "BETWEEN #bind($id0 'INTEGER') AND #bind($id1 'INTEGER')" ) )
1376	assertTrue ( validation. pass ( Report. WITHOUT_WARNING ) )
1377	assertEquals ( vars, variablesTyped )
1378	assertions. doesNotContain ( actual. toArray ( ) )
1379	assertThat ( initialized, is ( false ) )
1380	Assert. assertEquals ( 2, analyser. getLoadJustBeforeActivity ( route. getActivities ( ). get ( 1 ), route ). get ( 0 ) )
1381	assertTrue ( authorizer. isAuthorized ( context, profiles ) )
1382	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
1383	assertNull ( conversationIdHeader )
1384	assertTrue ( received )
1385	assertNotNull ( meta. getXML ( ) )
1386	assertEquals ( nnf, comp )
1387	assertThat ( result, is ( instanceOf ( Success. class ) ) )
1388	assertEquals ( HttpStatus. SC_UNAUTHORIZED, response. getStatus ( ) )
1389	Assert. assertThat ( dump, equalTo ( "ArrayTypeExpressionNode: (user | cat)[] (Start: 5, End: 15, On: [artificial node])\\n" + "    UnionTypeExpressionNode: user | cat (Start: 5, End: 13, On: [artificial node])\\n" + "        NamedTypeExpressionNode user -> {null} (Start: 5, End: 9, On: [artificial node])\\n" + "        NamedTypeExpressionNode cat -> {null} (Start: 10, End: 13, On: [artificial node])" ) )
1390	assertMappedFieldValueIsCollectionContainingTargetValue ( )
1391	assertEquals ( 3, distinctAgePersons. size ( ) )
1392	assertEquals ( true, result [ 0 ] )
1393	assertPlanMatches ( access )
1394	assertEquals ( 2, deltas. size ( ) )
1395	Assert. assertNotSame ( "Inherited differs for #" + id, ndInh, nd )
1396	assertEquals ( 2, children. size ( ) )
1397	Assert. assertEquals ( "I counted up the box's digits", this. realiser. realise ( sent ). getRealisation ( ) )
1398	Assert. assertEquals ( expect, actual, EPSILON )
1399	assertEqualDoubleArrays ( pyscle, scale, epsilon )
1400	assertThat ( event. check ( newGitHubBranchDecisionContext ( ). withLocalBranch ( localBranch ). withBranchTrigger ( trigger ). withLocalRepo ( localRepo ). withRemoteBranch ( null ). withListener ( listener ). build ( ) ), nullValue ( ) )
1401	assertThat ( branches, is ( not ( empty ( ) ) ) )
1402	assertLookup ( breaks, values, srcImg, ImageDataType. INT )
1403	Assert. assertEquals ( array ( 0, 1, 2, 20, 30, 35, 40, 50, 51 ), a1 )
1404	assertEquals ( NUM_TABLES, result. size ( ) )
1405	Assertion. assertEquals ( loadedDataSet, actualDataSet )
1406	assertThat ( payload, not ( containsString ( "alert" ) ) )
1407	assertEquals ( "aA", mat. group ( ) )
1408	assertEquals ( "V1 Track", wrapper. getTrack ( ) )
1409	assertEquals ( expected, actual, delta )
1410	assertEquals ( biggestWidget ( ). getY ( ), gridLienzoScrollBounds. minBoundY ( ), 0 )
1411	assertEquals ( witnessList, tokenList )
1412	assertEquals ( true, errors. hasFieldErrors ( "stopDatetime" ) )
1413	assertThat ( map, hasEntry ( "a", new IntOption ( ) ) )
1414	assertEquals ( ValidationResult. OK. getStatus ( ), validationResult. getStatus ( ) )
1415	assertEquals ( expected, actual )
1416	assertEquals ( "localhost_Apache NiFi_Apache", adminUser. getIdentity ( ) )
1417	assertThat ( elementFacade. isCurrentlyEnabled ( ), is ( false ) )
1418	assertEquals ( from ( 0 ). toByteBuffer ( ), db. getFieldValue ( 0, FIELD_NAME ) )
1419	assertValidationConstraint ( validator, obj, "EndBeforeStart", "endOther" )
1420	assertNotEquals ( r1, r2 )
1421	Assert. assertEquals ( String. class, t. getType ( ) )
1422	assertThat ( seqTerminals, containsInAnyOrder ( term1, term2 ) )
1423	assertNull ( this. consumer. get ( topic, partition, offset, maxSize ) )
1424	assertNotNull ( result )
1425	assertEquals ( 2, branch_conditions. size ( ) )
1426	assertHaveSameHistory ( sourceRepository, targetRepository )
1427	assertEquals ( "FATAL", level. toString ( ) )
1428	assertions. isLessThan ( expected )
1429	assertEquals ( "[[3, c], [3, b], [3, a], [1, a], [1, b], [1, d], [2, c], [2, e], [2, d]]", Arrays. deepToString ( testData ) )
1430	assertEquals ( 2, count )
1431	assertEquals ( DEFAULT. background ( RED ), style )
1432	assertThat ( ret. isSuccess ( ), is ( true ) )
1433	Assert. assertSame ( this. term, result )
1434	assertPermanentCount ( playerA, "Mikaeus, the Lunarch", 1 )
1435	Assert. assertNotNull ( i. getScriptEngine ( ) )
1436	assertTrue ( now - timeStamp - timeSpan < 2 )
1437	Assert. assertEquals ( "1234//root/TEST_Project/dev/", connectionString )
1438	assertEquals ( "88b8bf3682564e447713c1ed8b09810df135195a", hash )
1439	Assert. assertEquals ( buildUpSimpleObject ( ). toString ( ), serializer. serialize ( testMessage ). toString ( ) )
1440	assertEquals ( "OK", cancelledPreApproval. getTransactionStatus ( ) )
1441	assertEquals ( propertyValue, value )
1442	context. assertIsSatisfied ( )
1443	assertThat ( m. getComponent ( "jmsTest" ), is ( instanceOf ( JMSComponent. class ) ) )
1444	DelegationTestUtil. assertDelegationToSpy ( delegate )
1445	assertEquals ( s. raw ( ), "x" )
1446	assertThat ( description. toString ( ), allOf ( containsString ( "got <1> sheet(s) expected <4>," ), containsString ( "sheet(s) \\"Another Sheet\\", \\"Yet Another Sheet\\", \\"Sheet5\\" were missing" ) ) )
1447	assertArrayEquals ( a. toArray ( ), new Integer [ ] { 100, 0, 92, 1, 2 } )
1448	assertEquals ( reference, toTest )
1449	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFProtocolo ( ). toString ( ) )
1450	assertThat ( gradleMan. message, is ( "Hello gradle!" ) )
1451	assertThat ( config, hasEntry ( CubeDockerConfiguration. DOCKER_URI, "tcp://192.168.0.1:2376" ) )
1452	assertFalse ( "No review information!", result. isEmpty ( ) )
1453	assertNotNull ( fixture )
1454	assertEquals ( "hello", CompletableFuturesExtra. getCompleted ( dereferenced ) )
1455	assertProjectOut ( compiledFileNames, testDirPath )
1456	assertEquals ( expect, result )
1457	assertNull ( classUnderTest. getPrintXmlBean ( ) )
1458	runner. assertAllFlowFilesTransferred ( ListenRELP. REL_SUCCESS, 0 )
1459	Assert. assertTrue ( result. next ( ) )
1460	assertEquals ( testName, testProfileData. getName ( ) )
1461	assertEquals ( "something.getAnother(x,y).equals(y, 'y');", result )
1462	assertEquals ( 0L, attributes. size ( ) )
1463	assertNotNull ( lock )
1464	assertTrue ( contains ( subs, subProperty ) )
1465	assertTrue ( "failed to stat file", st!= null && st. isFile ( ) )
1466	assertEquals ( json, rc. getBodyAsJson ( ) )
1467	assertTrue ( "" + mse, mse <= desiredError )
1468	given ( ). spec ( specs. get ( 1 ) ). when ( ). get ( "atomic-map/test/foo" ). then ( ). statusCode ( 200 ). assertThat ( )
1469	assertStatusIs ( noTestsRun ( ) )
1470	assertThat ( supplier. authForSwarm ( ), matchesAccessToken ( accessToken ) )
1471	assertEquals ( "Mismatched result for prefix='" + prefix + "'", expected, actual )
1472	assertEquals ( expected, actualQuery )
1473	assertTrue ( "Expected both FIRST_STATE and SECOND_STATE to be enabled", SentryStateBank. hasStatesEnabled ( TestState. COMPONENT, new HashSet < SentryState > ( Arrays. asList ( TestState. FIRST_STATE, TestState. SECOND_STATE ) ) ) )
1474	Assert. assertTrue ( result. equals ( "10 �拽�转" ) )
1475	assertEquals ( value, stat. toDouble ( ), 0.00001d )
1476	assertEquals ( "onReady timed out", latch. getCount ( ), 0 )
1477	Assert. assertEquals ( effective. getSpacing ( ). getAfter ( ). intValue ( ), 200 )
1478	assertNotNull ( i )
1479	Assert. assertEquals ( 1, o )
1480	Assert. assertEquals ( "Invalid HUs retrieved", Arrays. asList ( hu_bp02_wh01_active ), huSelectModel. createHUQueryBuilder ( ). list ( ) )
1481	assertNotNull ( scriptStatement )
1482	assertNotNull ( result )
1483	assertTrue ( originalMap. isEmpty ( ) )
1484	TestHelpers. assertDeepEquals ( expected, result )
1485	assertEquals ( 92, jumpingOnTheCloud. getEnergyBalance ( 8, 2, clouds ) )
1486	assertEquals ( "Only one copy of the method should have been found", 1, foundMethods. size ( ) )
1487	assertThat ( updatedItem. getQuantity ( ), is ( 0 ) )
1488	assertEquals ( false, typeDefinition. get ( ). isInterface ( ) )
1489	assertNull ( harvestedCollection )
1490	assertFalse ( vrp. getJobs ( ). containsKey ( "4" ) )
1491	assertEquals ( cls. getNNF ( ), nnf )
1492	assertThat ( cc. plus ( 2, ChineseCalendar. Unit. WEEKS ), is ( ChineseCalendar. of ( EastAsianYear. forGregorian ( 2017 ), EastAsianMonth. valueOf ( 7 ), 12 ) ) )
1493	assertFalse ( s. containsNearbyAlmostDuplicate ( as, 1, 2147483647 ) )
1494	Assert. assertEquals ( false, retval )
1495	Assert. assertEquals ( Long. class, clazz )
1496	assertThat ( decisionInstances. size ( ), is ( 2 ) )
1497	assertEquals ( 0, counts. size ( ) )
1498	assertTrue ( "Forventet minst 10 f酶dselsnumre, men fikk " + options. size ( ), options. size ( ) > 10 )
1499	assertCanMultiTokenizeString ( randomUnicodeOfLength ( LENGTH ), rand. nextInt ( 998 ) + 2, rand. nextInt ( 100000 ), tokenizer )
1500	assertMapped ( ( Integer x ) -> x + 2, asList ( 1, 2, 3 ), asList ( 3, 4, 5 ) )
1501	assertNotNull ( con )
1502	assertEquals ( Integer. valueOf ( 200006 ), query. select ( employee. datefield. yearWeek ( ) ). fetchFirst ( ) )
1503	assertEquals ( 2, numberOfElephants )
1504	assertSame ( expected, actual )
1505	assertEquals ( DecodeException. class, err. getClass ( ) )
1506	assertEquals ( "Too few bytes in passed array. Passed: " + wrong. length + ". Expected: >= 19.", e. getMessage ( ) )
1507	assertSame ( mockCause, captor. getValue ( ). getCause ( ) )
1508	assertThat ( getCompiledResult ( ), is ( false ) )
1509	assertEquals ( expectedValue, result )
1510	Assert. assertTrue ( kernelServices. isSuccessfulBoot ( ) )
1511	assertEquals ( "Duplicate app UUID validation timeout " + options. getUUID ( ), dupLatch. getCount ( ), 0 )
1512	assertEquals ( invokingMethodName. get ( ), method. getName ( ) )
1513	Assert. assertEquals ( "SELECT s1\\nFROM t1\\nWHERE s1 NOT IN (SELECT s1\\n\\tFROM t2);", text )
1514	assertEquals ( 0, ret2. size ( ) )
1515	assertEquals ( expectedRecords, result. records ( ) )
1516	Assert. assertEquals ( map ( Jsr310NullKeySerializer. NULL_KEY, "test" ), value )
1517	assertEquals ( 200, resp. getStatus ( ) )
1518	assertEquals ( testEmail, emailSubject )
1519	assertThat ( actual, is ( equalTo ( expected ) ) )
1520	assertEquals ( this. attr, actualResult )
1521	assertPostFails ( "3", role, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
1522	context. assertIsSatisfied ( )
1523	Assert. assertEquals ( "mapped property value", data. myMappedProperty )
1524	Helpers. assertJson ( Deencapsulation. invoke ( twinState, "toJsonElement" ). toString ( ), json )
1525	Assert. assertEquals ( 41, font. getCmap ( ). getGlyphMappings ( ). size ( ) )
1526	assertHasMethod ( model, "com.artemis.E groups(java.lang.String[] groups)" )
1527	assertEquals ( "Unexpected primary style name", "v-grid", state. primaryStyleName )
1528	assertNotNull ( myTestFactory )
1529	editor. assertGotoDefinition ( editor. positionOf ( "stemcell: windoze", "windoze" ), editor. rangeOf ( "- alias: windoze", "windoze" ), editor. rangeOf ( "stemcell: windoze", "windoze" ) )
1530	Assert. assertEquals ( 1, spy. getTopologies ( ). size ( ) )
1531	assertEquals ( "wrong text", "'Symbol1' 'Symbol2' 'Symbol3'", symbols. toString ( ) )
1532	assertEquals ( model. getChangedProperty ( ), "unrelated", "unrelated changed" )
1533	assertTrue ( true )
1534	assertTrue ( "cos() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP )
1535	assertEquals ( "{\\"statusInfo\\":{\\"user\\":\\"Miguel Arlandy\\",\\"status\\":\\"DISCONNECTED\\"}}", jsonMessage )
1536	assertEquals ( 0x78, hash. getByte ( ) )
1537	Assert. assertTrue ( true )
1538	Assert. assertNull ( "New chain should be null", newChain )
1539	assertThat ( ReflectionTestUtils. getFieldValue ( ConsoleLogger. class, null, "fileWriter" ), nullValue ( ) )
1540	assertEquals ( "Test message ab c\\\\", result )
1541	assertTrue ( res. isEmpty ( ) )
1542	assertThat ( context, is ( notNullValue ( ) ) )
1543	Assert. assertArrayEquals ( optionValue, analyticalOptionValue, 1.2e-2 )
1544	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5, 6 ) ) )
1545	assertEquals ( BranchUtils. getHeadCommit ( "source_branch", repo ), BranchUtils. getHeadCommit ( "test_branch", repo ) )
1546	assertOut ( "var /** @type {number} */ b = (a.child('child').length()) >> 0" )
1547	assertFalse ( "Valid", StringUtils. isBlank ( hash ) )
1548	assertTrue ( graphContains ( gStore. getDefaultGraph ( ), triple1 ) )
1549	assertEquals ( 10, victim. readObjectNumber ( ) )
1550	assertEquals ( 0, fsos. getCount ( ) )
1551	assertTrue ( spied. call ( ) )
1552	assertEquals ( "/../../..", xmldbURI. resolveContext ( uri ). toString ( ) )
1553	Assert. assertEquals ( expected, actual )
1554	assertEquals ( true, classUnderTest. getShowSessionStartupTimeHint ( ) )
1555	assertTrue ( GenericTypeReflector. equals ( expected, ClassUtils. getCommonSuperType ( Arrays. asList ( t1, t2 ) ) ) )
1556	assertThat ( api. getConnectionTimeout ( ), is ( 0 ) )
1557	assertEquals ( expectedPemCertificate, new String ( target. toArray ( ), StandardCharsets. UTF_8 ) )
1558	Assert. assertFalse ( allowedCRUDL )
1559	assertThat ( cls, is ( owlThing ( ) ) )
1560	assertTrue ( ( ( PerunBl ) perun ). getServicesManagerBl ( ). isServiceBlockedOnFacility ( testService1, facility1 ) )
1561	assertEquals ( 0, exceptions. size ( ) )
1562	assertEquals ( response. asString ( ), CANCELLED, response. get ( OUTCOME ). asString ( ) )
1563	assertMapping ( node, 0, 15, 0, 30, 0, 40 )
1564	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
1565	assertThat ( "response contains a non-empty fullName", StringUtils. isNotBlank ( response. getFullName ( ) ) )
1566	assertTrue ( version. isBeforeCurrent ( ) )
1567	assertEquals ( expResult, result )
1568	assertEquals ( "345", result )
1569	assertThat ( envVars. size ( ), is ( 0 ) )
1570	assertEquals ( "Hello there^^^", ResponseBodyInterpolator. interpolate ( "Hello there^^^", req ) )
1571	assertNeverUndeployed ( )
1572	assertEquals ( 400, response. getStatus ( ) )
1573	assertNotNull ( Workflow. fetcher ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "WWXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
1574	assertEquals ( "", result )
1575	assertEquals ( "CLIENT PARALLEL 1-WAY RANGE SCAN OVER EH ['111111111111111','foo','2011-12-01 00:00:00.000'] - ['111111111111111','fop','2012-12-01 00:00:00.000']\\n" + "    SERVER FILTER BY (CREATED_DATE >= 2011-11-30 AND CREATED_DATE <= 2012-11-30)\\n" + "    SERVER TOP 100 ROWS SORTED BY [ORGANIZATION_ID, PARENT_ID, CREATED_DATE DESC, ENTITY_HISTORY_ID]\\n" + "CLIENT MERGE SORT", QueryUtil. getExplainPlan ( rs ) )
1576	assertEquals ( "Gaming website", doc. getContentField ( "out" ). toString ( ) )
1577	assertSame ( 1, searchHistory. getLength ( ) )
1578	assertTrue ( compressedLogFile. exists ( ) )
1579	Assert. assertTrue ( "duplicate association role was not removed", assoc. getRoles ( ). size ( ) == 2 )
1580	checker. assertEquals ( "[" + r + "][" + c + "]", exp, act )
1581	assertEquals ( body. toString ( ), "test exception" )
1582	assertEquals ( "480065006C006C006F00200057006F0072006C006400", Hex. toHexString ( outputStream. toByteArray ( ) ). toUpperCase ( ) )
1583	assertThat ( taskService. createTaskQuery ( ). taskDelegationState ( DelegationState. RESOLVED ). taskId ( task. getId ( ) ). count ( ), is ( 1L ) )
1584	assertKey ( new StringKey ( "50" ), index. searchIndex ( new EqualsCondition ( new LongKey ( 50 ) ), Index. NO_SEARCH_LIMIT ) )
1585	Assert. assertTrue ( "This is a odt file, ODTReport implementation should have been resolved....", report instanceof ODTReport )
1586	assertThat ( listSorter. toListView ( ), equalTo ( containers ( "A", "B", "C" ) ) )
1587	assertPostCodegenRules ( mojo )
1588	assertEquals ( expected, actual )
1589	assertEquals ( "Sizes of configuration must not differ. Except for the user, client-id and bucket properties", cfg. size ( ), this. configWithoutSubstitute. size ( ) + 3 )
1590	assertEquals ( "3 bulan kemudian", t. format ( new Date ( 2629743830L * 3L ) ) )
1591	assertEquals ( "launched master", null, configuration. get ( "calvalus.hadoop.yarn.resourcemanager.hostname" ) )
1592	assertNotNull ( result )
1593	assertEquals ( Status. NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
1594	assertEquals ( expected, uri. toString ( ) )
1595	assertEquals ( null, result )
1596	assertEquals ( expectedContent, bOut. toString ( ) )
1597	assertTrue ( closed. await ( 2, SECONDS ) )
1598	assertEquals ( 5, results. size ( ) )
1599	assertTrue ( parseResults. isEmpty ( ) )
1600	Assert. assertEquals ( columnSubset. length, 0 )
1601	Assert. assertFalse ( isValid, "PollItems has names length, that less than min possible, so they must be invalid" )
1602	assertNull ( item. getList ( ) )
1603	Assert. fail ( )
1604	assertTrue ( roles. contains ( "RESOURCESELFSERVICE" ) )
1605	assertTrue ( shouldVote )
1606	assertThat ( listSorter. toListView ( ), equalTo ( containers ( "B", "C", "D" ) ) )
1607	assertEquals ( expected, actual )
1608	assertEquals ( AnalysisState. ERROR, analysisSubmission. getAnalysisState ( ) )
1609	assertNotNull ( result )
1610	assertEquals ( expected, result )
1611	assertCredits ( credits )
1612	assertEquals ( "value", "123", config. getString ( "section4.var3" ) )
1613	assertThat ( target. validate ( ), is ( false ) )
1614	assertFalse ( vw == ret )
1615	assertFalse ( checker. isDetected ( ) )
1616	assertThat ( c. toString ( ), is ( "myString < aaa" ) )
1617	Assert. assertNotNull ( browser. findElement ( By. id ( "form" ) ) )
1618	assertEquals ( expected, actual )
1619	assertThat ( logger. output ( ), containsInOrder ( "BUILD STEP DURATIONS", projectStatsLine ( "project-1", 2.4, 87 ), projectStatsLine ( "project-2", 0.33, 12 ) ) )
1620	assertFalse ( path. isEmpty ( ) )
1621	assertThat ( encryptedPassword, is ( nullValue ( ) ) )
1622	assertEquals ( 0, JedisURIHelper. getDBIndex ( uri ) )
1623	assertEquals ( sent, received )
1624	assertThat ( kvStore. getString ( "field" ), equalTo ( "value" ) )
1625	assertArrayEquals ( new Integer [ ] { 4, 15, 12, 8, 18 }, array )
1626	assertEquals ( test, Configs. asString ( test ) )
1627	assertEquals ( expectedSchema, schemaFromHDFS )
1628	Assert. assertTrue ( "Model should not contain RDF type as OslcName is empty", rdfTypes. isEmpty ( ) )
1629	assertEquals ( null, id. getValue ( ) )
1630	Assert. assertEquals ( 0, sut. compare ( pmv1, pmv2 ) )
1631	assertEquals ( metaDto. toJSONString ( ), res )
1632	context. assertIsSatisfied ( )
1633	assertNull ( "Base for nulls is wrong", mapper. base ( "test", null ) )
1634	Assert. assertSame ( - 1, c. getPreferredSize ( ). width )
1635	assertTrue (! g. isEmpty ( ) )
1636	assertTrue ( adb == null )
1637	assertEquals ( ImmutableList. of ( "foo" ), evaluate ( "${iter}", Iterable. class ) )
1638	assertEquals ( HttpStatus. SC_NO_CONTENT, getStatus ( patchReq ) )
1639	assertArrayEquals ( new String [ ] { "command", "arg1", "arg2", "arg3", "arg4", "arg5" }, command )
1640	assertEquals ( 2, store. getIndexes ( TestCatalog. desc2. getTableId ( ) ). length )
1641	assertTrue ( isValid )
1642	assertTrue ( verify )
1643	assertEquals ( 0, classMetadata. getInterfaceNames ( ). size ( ) )
1644	assertTrue ( file. exists ( ) )
1645	assertEquals ( expectedChargeMode, getTestChargingStationFromRepository ( ). getChargeMode ( ) )
1646	assertTrue ( "New pause should be within [0,2], but was " + nextPause, withinTenPercent ( maxPause, nextPause ) )
1647	assertEquals ( 3, result. size ( ) )
1648	Assert. assertEquals ( Status. INTERNAL_SERVER_ERROR. getStatusCode ( ), response. getStatus ( ) )
1649	assertThat ( output, CoreMatchers. containsString ( "Imported items: 3" ) )
1650	assertThat ( rendered, is ( test [ 1 ] ) )
1651	assertTrue ( "elapsed (" + elapsed + " millis) was not long enough", longEnough )
1652	Assert. assertTrue ( protocol. isDefaultProtocol ( ) )
1653	assertNotEquals ( song1, null )
1654	assertTrue ( messageLatch. await ( 3, TimeUnit. SECONDS ) )
1655	Assert. assertNull ( caixa )
1656	assertEquals ( expectedString, DhlClientLogEvent. cleanupPdfData ( originalString ) )
1657	assertEquals ( user. getSNetVisibility ( ), visibility )
1658	Assert. assertEquals ( list. size ( ), 1 )
1659	assertNull ( subject. matchOperation ( ) )
1660	assertEquals ( null, argCaptor. getValue ( ). getReplyTo ( ) )
1661	Assert. assertEquals ( sum, 285 )
1662	assertEquals ( TestUtil. HTTP_TEST_PROXY, result. get ( 0 ) )
1663	assertTrue ( violated )
1664	assertThat ( toString ( people ), is ( equalTo ( "[Jon Doe, Ben Dover, Jack Handy]" ) ) )
1665	Assert. assertNull ( result )
1666	assertNull ( this. tlvsBuilder. augmentation ( Tlvs3. class ) )
1667	assertProcessInstanceCompleted ( processInstance )
1668	assertEquals ( "points", op. treeName )
1669	assertTrue ( unwrap ( e ) instanceof MemcacheClosedException )
1670	assertEquals ( "2012-12-21", dt )
1671	assertions. isSameAs ( "some value" )
1672	assertThat ( connected, is ( true ) )
1673	assertEquals ( listRequest. getResponseParser ( ). parse ( response ), responseParser. parse ( response ) )
1674	Assert. assertNotNull ( filter )
1675	assertEquals ( true, typeDefinition. get ( ). isInterface ( ) )
1676	assertThat ( sub. isEmpty ( ), is ( true ) )
1677	assertEquals ( 0, runTool ( "-ns", "ns1", "-failover", "nn1", "nn2" ) )
1678	assertFormat ( number, 5, standardFormat )
1679	assertEquals ( expected, mapper. valueToTree ( resource ) )
1680	assertEquals ( Lists. newArrayList ( e ( 1 ) ), tree. entries ( ). toList ( ). toBlocking ( ). single ( ) )
1681	Assert. assertEquals ( expected, actual )
1682	assertTrue ( stmt instanceof CreateSchemaNode )
1683	assertEquals ( "4e663d66-6b78-11e0-93c3-18a905e044dc", diagnosis. getUuid ( ) )
1684	assertEquals ( "theoneandonly@schland.de", em. createNativeQuery ( "select email from address where id=1" ). getResultList ( ). get ( 0 ). toString ( ) )
1685	assertEquals ( expectedQuery, actualQuery )
1686	Assert. assertEquals ( - 1, ti. get ( 0 ) )
1687	assertThat ( results, is ( Collections. singletonMap ( ( Object ) "id", Collections. singletonList ( "MD5 sums do not match. File document contains " + "'md5 : 'abcdef12'' and the filemd5 command produced'md5 : 'abcdef''." ) ) ) )
1688	assertThat ( sheet. getRow ( 0 ). getLastCellNum ( ), is ( ( short ) SpreadsheetVersion. EXCEL97. getMaxColumns ( ) ) )
1689	assertEquals ( autoCommitMode, serverEntityContext. getAutocommit ( ) )
1690	assertTrue ( "namespace value in annoataion @XmlElement is not correct: " + str, str. contains ( "helloString/Name" ) )
1691	assertTrue ( matcher. matchesSafely ( catalog, new StringDescription ( ) ) )
1692	assertSame ( op, new OperationBuilder ( op ). build ( ). getOperation ( ) )
1693	Assert. assertEquals ( "Foo Bar Resource", textLiteralResource. resourceText ( ) )
1694	Assert. assertTrue ( success. get ( ) )
1695	assertEquals ( "test", mock. oneLongArg ( value ) )
1696	assertEquals ( expResult, result )
1697	assertEquals ( "this.andThen(test.Person::getFirstName)::myToString", CodeModelTestsHelper. toString ( aLambda ) )
1698	assertTrue ( "non object method must be passed to next handler in chain", dummyHandler1. invokeCalled )
1699	assertEquals ( 2, cs. getDimension ( ) )
1700	Assert. assertEquals ( expected, MultivariateSquareFreeFactorization. SquareFreeFactorization ( poly ) )
1701	assertEquals ( - SearchContext. AVOID_DRAW_HANDICAP, sut. computeSearchGoalBonus ( current ) )
1702	assertEquals ( "My comments |  and some more", eval ( "cmd.comment" ) )
1703	assertEquals ( "Debug", conf. getName ( ) )
1704	assertThat ( cw. toString ( ), is ( "2012-W03" ) )
1705	assertThat ( f. format ( m ), is ( "Amete Mihret, 2008-03-09 09:45 pm +03:00" ) )
1706	Assert. assertArrayEquals ( "Wrong data", data, builtByFactory. getData ( ) )
1707	assertEquals ( paramValue, result )
1708	Assert. assertTrue ( isVisible ( "$_formatNumberDialog" ) )
1709	assertThat ( taskService. createTaskQuery ( ). taskOwner ( "demo" ). count ( ), is ( 1L ) )
1710	assertEquals ( expectedQuery, actualQuery )
1711	assertThat ( tuple. getDoubleOrDefault ( "field", 1d ), equalTo ( 1d ) )
1712	assertAllCodesOfIterator ( entitySelector. endingIterator ( ), "e1", "e2", "e3", "e4" )
1713	assertEquals ( ( ( 2.0 - 1.0 ) / 1.0 + ( 3.0 - 2.0 ) / 2.0 + ( 4.0 - 3.0 ) / 3.0 ) / 3, other. mean ( ) )
1714	assertThat ( gizmoService. getName ( ), is ( "Gizmos" ) )
1715	assertEquals ( config. getSoLinger ( ), acceptedConfig. getSoLinger ( ) )
1716	assertCorrectlyStored ( permission )
1717	assertEquals ( "test", msg. getText ( ) )
1718	assertProps ( newProps )
1719	assertXpathExists ( "/a:entry/m:properties", xmlString )
1720	assertEquals ( service. add ( 3, - 5 ), - 2 )
1721	assertEquals ( 1, alternativeRoutes. size ( ) )
1722	assertSame ( fso. getFilename ( ), filename )
1723	assertDegenerate ( scan )
1724	assertEquals ( expected, actual )
1725	assertCamundaInputOutputParameter ( task )
1726	assertTrue (! result )
1727	assertEquals ( "field.toUpperCase()", p. toString ( ) )
1728	assertEquals ( "Cancelled default service com.alibaba.dubbo.rpc.protocol.dubbo.support.DemoService.", result )
1729	assertTrue ( tippyTop. getItem ( ) > - 15 && tippyTop. getItem ( ) < 15 )
1730	assertEquals ( "Data store name not set properly", "com.stratio.deep.cassandra.extractor.CassandraCellExtractor", connection. getExtractorConfig ( ). getExtractorImplClassName ( ) )
1731	assertFalse ( allUsers. isEmpty ( ) )
1732	Assert. assertEquals ( IOUtil. toString ( new FileInputStream ( new File ( "src/test/resources/versionInfoFileRewritten-beta-3.xml" ). getAbsoluteFile ( ) ), "UTF-8" ), IOUtil. toString ( os. toByteArray ( ), "UTF-8" ) )
1733	Assert. assertEquals ( "the_other_value", o )
1734	assertCard ( expectedCard, "http://magiccards.info/nph/en/134.html", expectedCard. getRarity ( ). toDisplayName ( ), expectedCard. getName ( ) )
1735	assertEquals ( 5, node1. clusterCountKeysInSlot ( slot ). intValue ( ) )
1736	assertNotNull ( Alert. reader ( ). read ( ) )
1737	assertEquals ( "{\\"escapeSimple\\":\\"" + escaped + "\\"}", obj. toString ( ) )
1738	assertTrue ( Expr. CMP_LESS == x )
1739	assertThat ( encodingHandler. getEncoding ( ), is ( "ISO-8859-1" ) )
1740	assertTrue ( "Oh no! No mapped object! ", store. size ( ) > 0 )
1741	assertTrue ( ScriptTestUtil. scriptHasNonCommentLineContainingLineAndNoOtherCommandsInScript ( composer. getScript ( ), "connect tcp://" + SERVER_IP + ":" + SERVER_PORT ) )
1742	assertThat ( evaluator. evaluate ( corc ), is ( TruthValue. NO ) )
1743	Assert. assertNotNull ( msgResponse )
1744	assertEquals ( "foo", exception. getMessage ( ). substring ( 0, 3 ) )
1745	assertTrue ( equals )
1746	Assert. assertEquals ( result. getRootMeanSquaredError ( ) < 1.0, true )
1747	Assert. assertEquals ( "who does not eat the pie", this. realiser. realise ( p ). getRealisation ( ) )
1748	assertThat ( result, is ( packet ) )
1749	Assert. assertTrue ( icms. isSelecionado ( ) )
1750	assertNull ( victim. getValue ( KEY ) )
1751	Assert. assertNull ( ModuleUtil. getModuleForPath ( path ) )
1752	assertEquals ( "", result )
1753	Assert. assertNotNull ( result. getFirstHeader ( "Date" ) )
1754	assertEquals ( newy, result, 0.01 )
1755	CustomAsserts. assertEquals ( definition, expected, actual )
1756	assertTrue ( deleted )
1757	assertFalse ( CacheUtils. isExecutableFile ( "/test_file.txt", cache ) )
1758	assertScoreAndParse ( content, null, 1 )
1759	assertThat ( workspace2. getName ( ), is ( workspace. getName ( ) ) )
1760	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
1761	assertEquals ( "appName should not be updated", configuredAppName, expandedAppName )
1762	assertEquals ( TestClass. class. getName ( ), service. injectedLogger. getName ( ) )
1763	assertNull ( innerRoom )
1764	assertTrue ( result. size ( ) >= 1 )
1765	assertEquals ( new BigInteger ( "100" ), fromJson )
1766	Assert. assertEquals ( expected, actual )
1767	assertEquals ( "snowball analyzer serialization is wrong", expected, actual )
1768	assertEquals ( 10, result. getInt ( COSName. R ) )
1769	assertNull ( reader. overflowAtoms ( ) )
1770	assertServletWasInvokedWith ( entity )
1771	assertEquals ( "3 啶�啶多� 啶�啶距う", t. format ( new Date ( 315569259747L * 3L ) ) )
1772	assertEquals ( 1234, instance. hashCode ( ) )
1773	assertEquals ( 123, b. getId ( ) )
1774	assertEquals ( 5232.0f, Geobox. distance ( P0, P1 ), 0.2f )
1775	assertNotNull ( ids )
1776	arrays. assertContains ( description, actual, value, null )
1777	assertThat ( actual, is ( commonPropertyType ) )
1778	assertEquals ( 26., violation, 0.01 )
1779	assertEquals ( set. size ( ), unequalInstances. size ( ) )
1780	assertTrue ( System. currentTimeMillis ( ) - before >= ms )
1781	assertTrue ( sink. getInvalidConfiguration ( ) )
1782	assertEquals ( "Base value is not properly parsed", "10000.9999", parsed )
1783	assertThat ( completableFuture. get ( ), is ( dataObject ) )
1784	assertEqualDoubleArrays ( pydiv, div, epsilon )
1785	Assert. assertNotNull ( expression )
1786	assertThat ( object, is ( instanceOf ( PagedDataModelState. class ) ) )
1787	assertEquals ( "[1, 3, 4, 5, 8, 9, 3, 989]", res. toString ( ) )
1788	assertThat ( mockContext. getOptimizationLevel ( ), is ( - 1 ) )
1789	assertEquals ( datetime, actual )
1790	assertThat ( ( String ) FieldAccessUtil. getFieldVal ( listener, "profile" ), is ( "testProf" ) )
1791	assertThat ( result, is ( notNullValue ( ) ) )
1792	assertEquals ( 4, results. getPagedSet ( ). size ( ) )
1793	assertTrue ( gotException )
1794	assertFlowState ( ACCEPTED_SENT_TO_VRK )
1795	assertEquals ( value. toString ( ), new SizeTypeNode ( testBinaryReaderBuilder. putQWord ( value ). build ( ), chunkHeader, parent, - 1 ). getValue ( ) )
1796	Assert. assertFalse ( match )
1797	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
1798	assertTrue ( medias. size ( ) == 1 )
1799	assertTrue ( result. size ( ) == 1 )
1800	Assert. assertFalse ( syncSensorsIsRunning )
1801	assertEquals ( "11.1.10", result )
1802	assertEquals ( sb. toString ( ), param. getValue ( ) )
1803	assertEquals ( 1, col. count ( ) )
1804	assertThat ( codes, containsInAnyOrder ( "50015-7" ) )
1805	assertArrayEquals ( new MenuEntry [ ] { menu ( "Cancel", "", MenuAction. CANCEL ), menu ( "Examine", "Kragen", MenuAction. EXAMINE_NPC ), menu ( "Walk here", "", MenuAction. WALK ), menu ( "Pay (south)", "Kragen", MenuAction. NPC_FOURTH_OPTION ), menu ( "Talk-to", "Kragen", MenuAction. NPC_FIRST_OPTION ), menu ( "Pay (north)", "Kragen", MenuAction. NPC_THIRD_OPTION ) }, argumentCaptor. getValue ( ) )
1806	assertEquals ( "1, 2, 3", tree. toString ( ) )
1807	assertThat ( isValid, is ( true ) )
1808	Assert. assertTrue ( _constraint. isAssignmentValid ( _testNode, _testReplica, _clusterContext ) )
1809	assertEquals ( "Integration", map. get ( "HazelcastMetadataStoreTests-Spring" ) )
1810	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 06" ) )
1811	Assert. assertEquals ( 2, schemaRegistryMultiple. size ( ) )
1812	Assert. fail ( "Should have Assert.failed on the second parameter to'starts-with' not " + "being bound." )
1813	assertEquals ( unused, h. getUnused ( ) )
1814	assertEquals ( exp, toString ( wa ) )
1815	Assert. assertTrue ( SecurityUtil. isSecurityEnabled ( ) )
1816	Assert. assertFalse ( properties. isEmpty ( ) )
1817	assertThat ( converter. toWritableObject ( new Timestamp ( 0L ) ), is ( ( Object ) new TimestampWritable ( new Timestamp ( 0L ) ) ) )
1818	assertAuthenticationFailsPlusRequired ( )
1819	assertThat ( dbName, is ( "company_project" ) )
1820	Assert. assertNotNull ( component. getFirstDropdown ( ) )
1821	assertThat ( comparator. compare ( projectChange1, projectChange2 ), is ( greaterThan ( 0 ) ) )
1822	assertThat ( builder. getPatches ( ), hasItemsInOrder ( "ADD /status/replicas 2" ) )
1823	assertEquals ( "Camel rocks", reply )
1824	assertEquals ( "[John, Paul, Ringo]", joiner. toString ( ) )
1825	Assert. assertEquals ( "Unknown", actual )
1826	Assert. assertNotEquals ( w. hashCode ( ), ww. hashCode ( ) )
1827	assertThat ( MoreMapUtils. getUri ( map, KEY, null ), is ( nullValue ( ) ) )
1828	assertEquals ( "validating the bean", obj, new TestBean ( "testVal" ) )
1829	Assert. assertEquals ( testInput. expectedOutput, output. toString ( ) )
1830	assertEquals ( "<div><p>Hello</p></div><div><p>There</p></div>", TextUtil. stripNewlines ( divs. outerHtml ( ) ) )
1831	assertThat ( subclassOf, equalTo ( false ) )
1832	BeanAssert. assertBeanEquals ( new FlexiBean ( ), parsed )
1833	assertEquals ( 0, ranking. getNumberOfSubFronts ( ) )
1834	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
1835	assertEquals ( expected, actual )
1836	assertTrue ( true )
1837	Assert. assertTrue ( appsTableColumnsMeta. indexOf ( "natural" )!= - 1 )
1838	Assert. fail ( )
1839	Assert. assertEquals ( 0, scores. getScore ( ) )
1840	assertEquals ( LogLevel. TRACE, sub. getLevel ( ) )
1841	assertEquals ( ApiStatus. SUCCESS, response. getMeta ( ). getStatus ( ) )
1842	assertNotNull ( result )
1843	Assert. assertTrue ( conf. getBoolean ( "hbase.cluster.distributed", false ) )
1844	assertThat ( result, is ( expected ) )
1845	Assert. assertEquals ( "This is the plain text message!", s )
1846	assertEquals ( V8Value. DOUBLE, doublesArray. getType ( ) )
1847	assertTrue ( "Result should be empty object", result. length ( ) == 0 )
1848	Assert. assertEquals ( ( Integer ) 1, sync ( queue1. poll ( 10, TimeUnit. SECONDS ) ) )
1849	assertArrayEquals ( encoder. encode ( binaryMessage ). array ( ), message )
1850	Assert. areEqual ( true, countA < 10 && countB < 10, "验证优先级的写,countA:" + countA + ",countB:" + countB )
1851	assertThat ( spec, is ( 0 ) )
1852	assertTrue ( p. apply ( tree ) )
1853	Assert. assertEquals ( "DateIndexTableConfigHelper.setup threw the expected exception, but the message was not the expected message.", "No DateIndex Table Defined", msg )
1854	assertNotNull ( result )
1855	assertEquals ( ordenPago. getDescripcion ( ), descripcion )
1856	assertEqualRevisionLists ( revisionsAll, tmrpAll. revisions, "all-incomplete" )
1857	assertFalse ( "Files should be different", duplicateFinder. isSame ( a, b ) )
1858	assertEquals ( d_drug. toString ( ), pm1. getNameModel ( ). getValue ( ) )
1859	assertThat ( tsp. toString ( ) + " => " + Double. toString ( delta ), delta < 60.0, is ( true ) )
1860	Assert. fail ( "Exception expected" )
1861	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Response>" + "Hey no tags!" + "</Response>", elem. toXml ( ) )
1862	assertEquals ( 0, message. getMessageId ( ) )
1863	assertArrayEquals ( new String [ ] { tag, dynamicTag1, dynamicTag2 }, requestMessage. getTags ( ). toArray ( ) )
1864	assertEquals ( asList ( 3, 6 ), composite. shrink ( random, 7 ) )
1865	assertFalse ( command. valid ( options, optionParser ) )
1866	Assert. assertEquals ( "V6uoqOm7esGRqm20VvMz", entries. get ( 0 ). getPassword ( ) )
1867	assertEquals ( 2, notes. size ( ) )
1868	runner. assertNotValid ( )
1869	Assert. assertNull ( oembedService. executeRequest ( request ) )
1870	assertEquals ( k, f. getClass ( ) )
1871	assertConsoleOutputContains ( "exit SQL REPL. `CTRL+C` is an alias." )
1872	Assert. assertThat ( actualMetricId. getTagsAsList ( ), containsInAnyOrder ( new Tag ( "foo", "baz" ) ) )
1873	this. assertLoadBlob ( departments, false, true )
1874	assertEqualsIgnoreWhitespace ( original, result )
1875	assertEquals ( 2, v )
1876	assertEquals ( exepcted_individual, returned_individual )
1877	assertNull ( "Analyzer should be null", mapper. analyzer )
1878	assertFalse ( lfs. util ( ). exists ( p ) )
1879	Assert. assertEquals ( value, user. get ( key, name ) )
1880	assertThat ( filteredWords, IsIterableContainingInOrder. < String > contains ( "do", "not", "cry", "over", "spilt", "beer" ) )
1881	assertThat ( actualBranchNames, is ( BRANCH_NAMES_PROJECT_B ) )
1882	Assert. assertTrue ( Arrays. equals ( expected, actual ) )
1883	assertTrue ( result instanceof JMXMonCollector )
1884	assertNotNull ( error )
1885	assertEquals ( r1, r2 )
1886	TestHelpers. assertDeepEquals ( expected, result )
1887	assertEquals ( "calling: fooMethod(2 arguments: first=v1, second=v2)", message )
1888	assertNotNull ( cifStream )
1889	Assert. assertEquals ( expected, MustacheTemplatePrefixExpander. expand ( input ) )
1890	this. assertIndices ( im ( 0, 0 ), im ( 1, 1 ), im ( 2, 2 ), im ( 3, 3 ), im ( - 1, 4 ) )
1891	assertEquals ( "", path. toString ( ) )
1892	assertEquals ( "numhits is wrong", 1070, res. getNumhits ( ). intValue ( ) )
1893	assertEquals ( expectedDouble, value. doubleValue ( ), 0.0 )
1894	assertThat ( kvStore. getListOrDefault ( "field", value ), equalTo ( value ) )
1895	assertEquals ( inputId, emptyId )
1896	assertResearchName ( research, "Another research" )
1897	assertEquals ( "bar", ss. getDefaultJob ( ). get ( "foo" ) )
1898	assertTrue ( ipMatcher. match ( "172.16.1.1" ) )
1899	assertFalse ( sut. failed ( ) )
1900	assertTrue (! ( ( String ) proxy. getAttribute ( "firstName" ) ). equals ( dto. getFirstName ( ) ) )
1901	Assert. assertEquals ( 1, result. getStatus ( ) )
1902	Assert. assertNotNull ( o )
1903	assertEquals ( false, result )
1904	assertNull ( attribsSet. iterator ( ). next ( ). getAttributes ( ). get ( "email" ) )
1905	assertTrue ( "<object> tag not correctly found in:\\n" + result, Pattern. matches ( "(?s).*<object data=\\"http://domain.com/object.data\\".*<param.* name=\\"name\\" value=\\"value\\"/>.*</object>.*$", result ) )
1906	Assert. assertTrue ( Math. abs ( now. getTime ( ) - n. getTime ( ) ) < 500 * 1000 )
1907	Assert. assertEquals ( ref, f. taylor ( dx, dy, dz ), 2.0e-15 )
1908	Assert. assertTrue ( servlet. isDebugMode ( ) )
1909	assertNull ( providerRole )
1910	assertJson ( "{'value2': 'foo'}", serialize ( bean ) )
1911	assertNull ( interceptor. processInvocation ( context ) )
1912	Assert. assertEquals ( entity, treated )
1913	assertEquals ( metadata. getClass ( ), memoryCopyResultSet. getMetaData ( ). getClass ( ) )
1914	assertEquals ( "public static final NumericProperty<Integer> TEST = PropertyFactory.createNumeric(\\"test\\", Integer.class);", definition )
1915	assertEquals ( diameter, 0.0 )
1916	assertEquals ( 48, size )
1917	Assert. assertEquals ( 3.0, svd. getConditionNumber ( ), 1.5e-15 )
1918	assertThat ( tableCount, is ( 0 ) )
1919	assertEquals ( "abc\\n", found )
1920	assertTrue ( "Agent-based allocation should have failed", plan. getAllReservations ( ). size ( ) == numJobsInScenario )
1921	Assert. assertEquals ( person. getHomeAddress ( ). getCity ( ), person3. getWorkAddress ( ). getCity ( ) )
1922	assertThat ( handler, is ( instanceOf ( FederatedHMSHandler. class ) ) )
1923	assertions. containsSequence ( sequence )
1924	assertEquals ( expected, result )
1925	assertSame ( 1, a. length )
1926	assertThatBuildSucceeded ( )
1927	assertEquals ( exitVal, fixture. getExitVal ( ) )
1928	assertEquals ( 2, numberOfFriends )
1929	assertEquals ( 1, fromBase64. size ( 0 ) )
1930	assertEquals ( in, out )
1931	Assert. fail ( "Deberia haber saltado un AOFormatFileException" )
1932	assertEquals ( "searchQuery must not be empty", e. getMessage ( ) )
1933	assertEquals ( "", result )
1934	assertTrue ( doTest ( dynamicQuery, query ) )
1935	Assert. assertTrue (! counts. containsKey ( Jsprit. Strategy. RADIAL_BEST ) )
1936	assertEquals ( new ColumnCombination ( expectedColumn1, expectedColumn2 ), actualUniqueColumnCombination. getColumnCombination ( ) )
1937	assertFalse ( "Expected TokenSchema boolean validation failure did not succeed", schema. validate ( booleanEntity ) )
1938	assertions. isSorted ( )
1939	Assert. assertEquals ( icmsSetado, icms. getIcmssn102 ( ) )
1940	assertTrue ( String. format ( "Wrong message: %s", helper. getOutputAsString ( ) ), helper. getOutputAsString ( ). contains ( "usage: " ) )
1941	assertThat ( track. getName ( ), is ( "The Saint" ) )
1942	assertEquals ( options, new UpdateOptions ( options. toJson ( ) ) )
1943	assertThat ( expression. getExpression ( ), is ( "This is a string expression." ) )
1944	assertThat ( get, isAllowed ( ) )
1945	assertTrue ( filter. isDetected ( ) )
1946	Assertions. assertFalse ( result )
1947	assertTrue ( calculatorPanel. getTextBox ( ). textEquals ( "2345" ) )
1948	assertEquals ( "", testUrlDecode. getValue ( context ) )
1949	assertNotEquals ( config. getContext ( ), context )
1950	Assert. assertEquals ( Servlet. SUCCESS, res )
1951	assertNotNull ( AssignedAddOnExtension. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "PNXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XFXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
1952	assertEquals ( getContents ( root, "nested_inheritance.txt" ), sw. toString ( ) )
1953	assertGeometryEquals ( expected, actual, ANGULAR_TOLERANCE, ANGULAR_TOLERANCE )
1954	assertFalse ( result )
1955	assertThat ( factory. create ( value ), hasContent ( uuid. toString ( ) ) )
1956	assertSearchYields ( index, "foo:aaa OR bar:bbb", "fooaaa", "fooccc" )
1957	Assert. assertEquals ( 5, batchPlanSteps. size ( ) )
1958	assertEquals ( 1, observation. getCode ( ). getCoding ( ). get ( 0 ). getExtension ( ). size ( ) )
1959	assertFalse ( condition. accept ( null, null, attribs ) )
1960	assertEquals ( "There should be 10 action items", 10, actionItems. size ( ) )
1961	assertThat ( confirmation. getCurrentTime ( ), equalTo ( now ) )
1962	assertEquals ( BaseTableColumnTypeTask. ColumnTypeEnum. INT, type. getColumnTypeEnum ( ) )
1963	assertEquals ( DataTypeManager. DefaultDataClasses. JSON, ( ( Expression ) plan. getOutputElements ( ). get ( 0 ) ). getType ( ) )
1964	assertEquals ( expected, result )
1965	assertEquals ( expected, actual )
1966	Assert. assertNotNull ( metadataDescriptor. createMetadata ( ) )
1967	assertTrue ( AcceptanceTestUtil. isInterested ( component, dscTestStub. getDeploymentID ( ). getServiceID ( ), dsAcceptanceUtil. getDiscoveryServiceDeployment ( component ). getDeploymentID ( ) ) )
1968	assertThat ( "Method without arguments is processed incorrectly", title, equalTo ( MessageFormat. format ( "{0}", args ) ) )
1969	Assert. assertEquals ( infoEventoRetorno, retorno. getInfoEventoRetorno ( ) )
1970	assertNumEquals ( numOf ( Math. log ( 90d / 104 ) ), esCriterion. calculate ( series, tradingRecord ) )
1971	assertTrue ( twoFactorAuthenticationManager. verificationCodeIsValid ( code, "orcid" ) )
1972	assertFalse ( result. passedValidation ( ) )
1973	Assert. assertNotNull ( addressResultsDto )
1974	assertEquals ( "You may have broken the function mapper spi. This may also affect robot-websocket-functions", packageName, this. getClass ( ). getPackage ( ). toString ( ) )
1975	XMLAssert. assertXMLEqual ( loadXML ( ORDER_ACK_XML ), result. getOwnerDocument ( ) )
1976	assertFalse ( resultMessage ( result, HttpRequestType. POST ), result. passedValidation ( ) )
1977	assertEquals ( "dois septilh玫es", actual )
1978	Assert. assertEquals ( "[AND,field1:selector1,field2:selector2]", luceneParser. parse ( "field1: selector1 field2: selector2" ). getContents ( ) )
1979	assertEquals ( expected, pointOfFailure. toString ( ) )
1980	Assert. assertArrayEquals ( expectedResults, results )
1981	assertEquals ( Z80. SIGNAL_OUT_ALL_INACTIVE, cpu. getState ( ) & 0xFFFF )
1982	assertEquals ( expResult, result )
1983	TestUtil. assertFuzzyContains ( "concept1;concept2;", html )
1984	Assert. assertEquals ( cluster + "-" + proto. getShardName ( ), shardTbl. getSetinelMonitorName ( ) )
1985	assertEquals ( degree, 4 )
1986	Assert. assertArrayEquals ( expected, actual )
1987	assertE ( "�尖�尖�尖�尖��" + "��   ��" + "�� �� ��" + "��###��" + "�尖�尖�尖�尖��" )
1988	Assert. assertEquals ( "Failure expected the name to be the same", "ChatroomNewMemberDTO", CMDTO. getDTOName ( ) )
1989	assertEquals ( "test", result )
1990	assertTrue ( result )
1991	assertGenerators ( result, generator. getClass ( ), AnInt. class, ZilchGenerator. class )
1992	assertNotNull ( output. list ( ) )
1993	assertThat ( locomotive. getExitCode ( ), is ( 0 ) )
1994	assertEquals ( "", result )
1995	assertEquals ( s, TarUtils. parseName ( buff, 0, len, enc ) )
1996	assertThat ( Template. parse ( "hash has {{ hash.size }} elements" ). render ( assigns ), is ( "hash has 4 elements" ) )
1997	assertThat ( "Validation shall not detect any issue in a valid internal component", validation. pass ( Report. WITHOUT_WARNING ) )
1998	Assert. assertEquals ( metaBack, rawMeta )
1999	assertEquals ( "pippo", string )
2000	assertEquals ( deleteMapping1, deleteMapping1Duplicate )
2001	assertFalse ( certificateImportCalled. get ( ) )
2002	Assert. assertEquals ( "Graph not of the exepected size", 2, graph. size ( ) )
2003	assertEquals ( expected, query. export ( ) )
2004	assertTrue ( page. asText ( ). contains ( "Library Exists: false" ) )
2005	Assert. assertFalse ( "GetMySavedView returned no results", jsonList. isEmpty ( ) )
2006	Assert. assertNotNull ( evt )
2007	Assert. assertTrue ( runner. getProcessContext ( ). getProperty ( org. apache. nifi. processors. standard. PostHTTP. USER_AGENT ). getValue ( ). startsWith ( "Apache-HttpClient" ) )
2008	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
2009	assertFalse ( accessor. declaresHashCode ( ) )
2010	Assert. assertTrue ( xml. contains ( "Mueller" ) )
2011	assertNotNull ( childBoss )
2012	assertTrue ( parent. isPrefixOf ( fixture ) )
2013	assertEquals ( true, getRemoveLayerDefinitionAction ( ). isEnabled ( ) )
2014	assertEquals ( "The stock symbol hasn't been updated.", acme. getSymbol ( ), stocks. get ( 0 ). getSymbol ( ) )
2015	assertEquals ( RdfTestHelpers. parseRdf ( RdfTestHelpers. getResourceFromFile ( "StatementRankTriple.rdf" ) ), model )
2016	assertThat ( result, is ( "B012345789012345789\\n" ) )
2017	assertEquals ( "0", substitutions. getSubstitution ( Type. MODULE, "ID" ) )
2018	assertThat ( callback. toString ( ), callback. getEndpointContext ( ), is ( notNullValue ( ) ) )
2019	assertThat ( getterMethod. getReturnType ( ). getName ( ), is ( "long" ) )
2020	Assert. assertEquals ( "<div class=\\"htmlform\\">included</div>", session. getHtmlToDisplay ( ) )
2021	Assert. assertTrue ( message, expected. equals ( actually ) )
2022	assertTrue ( "This test must runs without an error, because we can not guarantee that this test method run as first. " + res, true )
2023	Assert. assertEquals ( 0, filteredPaths. length )
2024	assertTrue ( file. exists ( ) )
2025	assertNotNull ( TaskChannel. fetcher ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "TCXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
2026	assertThat ( sampleEntities. size ( ), is ( equalTo ( 2 ) ) )
2027	assertEquals ( Rule. DEFAULT_PRIORITY, proxy. getPriority ( ) )
2028	mock. assertIsSatisfied ( )
2029	assertTrue ( result. getMessages ( ). size ( ) == 0 )
2030	assertThat ( a. getValue ( ), equalTo ( "A1" ) )
2031	assertThat ( resp, Matchers. stringContainsInOrder ( "<code value=\\"11378-7\\"/>", "<display value=\\"Systolic blood pressure at First encounter\\"/>" ) )
2032	assertEquals ( ret, "todo" )
2033	assertThat ( actual, equalTo ( expected ) )
2034	assertEquals ( expectedResult, entityParser. parseThing ( json ) )
2035	Assert. assertEquals ( 3L, avg. toLong ( ) )
2036	assertEquals ( 5, devices. size ( ) )
2037	assertEquals ( expecting, found )
2038	Assert. assertEquals ( 2, EntityUtil. getInstanceSequence ( start, frequency, tz, instance ) )
2039	assertEquals ( expected, map )
2040	Assert. assertEquals ( str, baos. toString ( ) )
2041	assertEquals ( "Test message ab c\\\\", result )
2042	Assert. assertFalse ( errors, zcf. hasFatalErrors ( ) )
2043	assertNull ( t. getFirstClassOrInterfaceTypeImage ( ) )
2044	assertEquals ( Color. blue. getRGB ( ), thumbnail. getRGB ( 49, 99 ) )
2045	assertEquals ( "abc\\n", found )
2046	Assert. assertEquals ( "myValue", job. getConfiguration ( ). get ( "my.context.property" ) )
2047	assertEquals ( expected, deserialized )
2048	Assert. assertEquals ( "sendMessageFromOwnerProcessor,sendMessageFromOwnerChatSocketImpl", slip )
2049	Assert. assertArrayEquals ( new byte [ ] { ( byte ) 0xc3, 0x49, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, byteArrayOutputStream. toByteArray ( ) )
2050	assertThat ( target. matchExactly ( flow ), is ( false ) )
2051	Assert. assertTrue ( Modifier. isPrivate ( constructor. getModifiers ( ) ) )
2052	assertArrayEquals ( array ( 'a', 'b', 'c', 'd', 'e' ), letters )
2053	assertFalse ( isApplicable )
2054	assertThatTestAppHasBeenSuccessfullyRegistered ( driver )
2055	assertThat ( token. getType ( ), is ( PCRELexer. WhiteSpace ) )
2056	Assert. assertEquals ( "[3, 2, 6, 4, 7, 1, 5]", result. toString ( ) )
2057	JSONAssert. assertEquals ( "{a:9}", ARRAY_OF_JSONARRAYS, new CustomComparator ( JSONCompareMode. LENIENT, customization ) )
2058	assertEquals ( "{\\"os.thebook2\\":{\\"id\\":333}}", bos. toString ( ) )
2059	assertEquals ( this. emptyCom, result. getAttributes ( ) )
2060	assertEquals ( 555, asynchronousJobPool. getMaxQueueSize ( ) )
2061	assertNull ( DateUtil. parseRfc1123Date ( expires ) )
2062	assertEquals ( empty1, empty2 )
2063	Assert. assertFalse ( policy. isResponseCacheable ( request, response ) )
2064	assertThat ( existingGridSet, hasProperty ( "name", equalTo ( GWCConfigIntegrationTestData. GRIDSET_EPSG4326 ) ) )
2065	assertProperties ( new String [ ] [ ] { { "foo", "bar#baz" } }, p )
2066	assertNull ( placement )
2067	assertEquals ( Arrays. asList ( "com.a.A", "com.b.B" ), ValidationGroupHelper. getGroupsOnField ( input ) )
2068	assertNotNull ( valve. getScheduledExecutorService ( ) )
2069	assertTrue ( "Failed at " + i, called )
2070	Assert. assertEquals ( 0, events. size ( ) )
2071	assertNull ( resp. headers ( ). get ( "set-cookie" ) )
2072	assertThat ( Datastore. delegate ( ), instanceOf ( MyDelegate. class ) )
2073	Assert. assertEquals ( "{\\"alice\\":{\\"edgar\\":{\\"bob\\":[null]},\\"edgar\\":{\\"bob\\":[null]}}}", result. toString ( ) )
2074	assertFalse ( Compare. areIdentical ( imageToTest, referenceImage ) )
2075	Assert. assertNotNull ( trainer. train ( eventStream ) )
2076	assertTrue ( mbr instanceof PrimitiveTextProvider )
2077	assertNull ( domain )
2078	paths. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE_PATTERN )
2079	assertThat ( properties. size ( ), is ( 0 ) )
2080	assertThat ( action, is ( "action" ) )
2081	Assert. assertFalse ( item. matches ( divNode ) )
2082	assertEquals ( expectedCollectionPrefix, sink. collectionPrefix )
2083	Assert. assertEquals ( - 1, Array. binarySearch ( input, integerComparator, 0 ) )
2084	assertEquals ( 4, this. crossword. getWidth ( ) )
2085	assertEquals ( jhsCmd. clientId ( ), DUMMY_CLIENT_ID )
2086	assertEquals ( storeMock, store )
2087	Assert. assertEquals ( "注�� 专�注", t. format ( new Date ( 600 ) ) )
2088	Assert. assertEquals ( expected, actual )
2089	assertTrue ( population. size ( ) >= 98 )
2090	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
2091	assertEquals ( "Boom", currentUser. getName ( ). getGivenName ( ), user. getName ( ). getGivenName ( ) )
2092	assertThat ( cursor. hasNext ( ), equalTo ( false ) )
2093	assertSeq ( new String [ ] { "<a/>", "<a/>", "<b/>", "<b/>" }, "insert-before(/top/x/*, 2, /top/x/*)" )
2094	assertEquals ( expecteds, actuals )
2095	assertEquals ( workflowInstId, pgeTask. getWorkflowInstanceId ( ) )
2096	assertFalse ( Tools. versionBeforePacemaker ( host ) )
2097	assertThat ( destination. getBodyText ( ), is ( "Navigation Destination from : from the implicit command link" ) )
2098	Assert. assertNotNull ( rowKeys )
2099	assertFalse ( "valid input but exceeds bounds " + field. getText ( ), cellEditor. stopCellEditing ( ) )
2100	Assert. assertNotNull ( tested. newRequest ( ) )
2101	assertEquals ( "Hello World!", result )
2102	assertEquals ( 3, branch_conditions. size ( ) )
2103	assertTrue ( previewElement. getColorFieldContainsErrors ( ) )
2104	assertTrue ( writeOnlyProp. isWriteOnly ( ) )
2105	Assert. assertTrue ( ctx. getResult ( ) )
2106	assertEquals ( mockList, testList )
2107	Assert. assertTrue ( charset. equals ( CharsetUtil. getCharset ( charsetIndex ) ) )
2108	assertThat ( "secruity group", sut. getImageId ( ), is ( equalTo ( imageId ) ) )
2109	assertNotNull ( serverTask )
2110	assertTrue ( errors. toString ( ). replace ( ',', '\\n' ), errors. isEmpty ( ) )
2111	assertEquals ( CONFLICT. getStatusCode ( ), getStatus ( request ) )
2112	assertEquals ( "str1 =? and (str1 =? and str2 =? or str1!=? and str2 in (?,?))", str )
2113	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE (DEPTH(nodes) - (DEPTH(nodes) + SCORE(nodes))) = CAST('3' AS LONG)" ) )
2114	Assert. assertEquals ( cdtos. get ( 0 ). getCategories ( ). size ( ), 1 )
2115	Assert. assertEquals ( 1, leakyBucket. references ( ) )
2116	assertEquals ( 4, all. size ( ) )
2117	assertNextRequestIsCreateWorkspace ( "something", CreateConflictBehavior. DO_NOT_CREATE )
2118	assertTrue ( format. getTokenizers ( ). size ( ) >= 5 )
2119	assertEquals ( "Policy has no API id", 0, policy2. getApiIds ( ). size ( ) )
2120	assertEquals ( expectedFunction, usage. sampleFunction ( ) )
2121	assertExtractedTextHasBeenIndexed ( "select [jcr:path] from [nt:resource] as res where contains(res.*, 'ModeShape supports')" )
2122	Assert. assertTrue ( infEx. isType ( DummyException. class ) )
2123	assertEquals ( "", result )
2124	assertEquals ( 0, result. getTotalHits ( ) )
2125	Assert. assertEquals ( 3635, nodeCount )
2126	assertEquals ( expectedSql, actualQuery )
2127	assertEquals ( "some.slashed.ClassName", CONVERTER. dotted ( dotClass ) )
2128	assertNotNull ( deviceFlowRegistry )
2129	Assert. assertNotNull ( "null jargon properties", jargonProperties )
2130	Assert. assertNotNull ( userBean )
2131	assertEquals ( ImmutableVariantScore. of ( ReadType. ALT, 47 ), SamRecordScoring. getVariantScore ( shortAlt, DELETION ) )
2132	assertEquals ( testData. length - 2, cfis. available ( ) )
2133	assertEquals ( generateOutput ( "    3 [--->------------------------]" ) + generateOutput ( "    5 [----->----------------------]" ), output. getBuffer ( ). toString ( ) )
2134	assertEquals ( "i(3,9)", s. getPickupLocation ( ). getId ( ) )
2135	assertTrue ( folder. getProgressState ( ) == ProgressState. DEFAULT )
2136	assertEquals ( 0, filter. filter ( aciContext, OperationScope. ATTRIBUTE_TYPE_AND_VALUE, null ). size ( ) )
2137	context. assertIsSatisfied ( )
2138	Assert. assertEquals ( "dans le salon et la cuisine", this. realiser. realise ( this. dansLaPiece ). getRealisation ( ) )
2139	assertEquals ( 28, results. length )
2140	assertContainsRegex ( WHERE + OPEN_CURLY + var ( "s" ) + SPACE + ":P" + SPACE + ":O" + OPT_SPACE + CLOSE_CURLY, query )
2141	assertThat ( foundResources, contains ( p2id. getValue ( ) ) )
2142	assertThat ( cachedDataSetProperty, sameInstance ( dataSetProperty ) )
2143	Assert. assertEquals ( cache, builder. offset ( 12, 10 ). build ( ) )
2144	Assert. assertEquals ( expected, pass. concretizeCell ( term ) )
2145	assertNull ( instance. nullableStringList ( ) )
2146	assertEquals ( new Statistics ( 0, 0, 0, 0 ), spec. stats ( ) )
2147	assertEquals ( URI. create ( expected ), uri )
2148	assertNotSame ( "getProject() did not return different objects", server. getProject ( "$/projectPath" ), server. getProject ( "$/otherPath" ) )
2149	assertFalse ( inVitro. isEquivalent ( inVivo ) )
2150	assertEquals ( "[[ERROR] Rules directory not found here: 'null', [ERROR] Reading file error: 'badFile.rule']", reader. errors ( ). toString ( ) )
2151	Assert. assertEquals ( expectedEventBo, actualEventBo )
2152	AsserterWithLazyInitialisationAlgorithm. ASSERTER. assertInstancesOf ( klasse, areNotImmutable ( ) )
2153	Assert. assertTrue ( "provideSubscriberInfo message (opCode 70, TCAP Begin) should be blocked by Cat2",! sigfw. unitTestingFlags_sendSccpMessage )
2154	assertEquals ( "", result )
2155	assertEquals ( "" + i + " " + codec. lineLength, b [ 1 ]. length, codec. getEncodedLength ( b [ 0 ] ) )
2156	assertThat ( TSetIpAddressProcessor. class. isAssignableFrom ( processor. getClass ( ) ), is ( true ) )
2157	Assert. assertEquals ( "acd", stringAppender. toString ( ) )
2158	assertEquals ( "There should be 0 chart data results", 0, chartDataList. size ( ) )
2159	Assert. assertEquals ( "should retrieve correct field name", fieldName, node. getFieldName ( ) )
2160	Assert. assertEquals ( XMLUtils. compactXML ( input ), XMLUtils. compactXML ( result ) )
2161	assertEquals ( timeInstant. getTimeMode ( ), TimeInstant. TimeMode. BEGIN )
2162	assertEquals ( "2000-1-5", value. toString ( ) )
2163	Assert. assertEquals ( EMPTY_FINGERPRINT, managedRangerAuthorizer. getFingerprint ( ) )
2164	result. assertIsSatisfied ( )
2165	assertEquals ( "Incorrect number of logged lines", 2, totalLines )
2166	assertNotNull ( obj )
2167	Assert. assertTrue ( result. getBigIntValue ( ). intValue ( ) == 7 )
2168	assertEquals ( 26, buffer. readableBytes ( ) )
2169	assertThat ( runtimeOptions. getGlue ( ), contains ( uri ( "classpath:/app/features/hooks" ), uri ( "classpath:/io/cucumber/core/options" ) ) )
2170	assertThat ( roundtrippedRecord, equalTo ( record ) )
2171	assertThat ( mockMetrics. getMessageReceivedBytes ( ), is ( 43121L ) )
2172	assertEquals ( "select entity_0.name from Entity entity_0 group by entity_0.name having ( entity_0.name = :name_1 or entity_0.name = :name_2 ) and sum(entity_0.integerField) > :function_3", query )
2173	assertEquals ( "<html>\\n<head></head>\\n<body>\\n<div>\\n<p>Hello there</p>\\n</div>\\n</body>\\n</html>", doc. html ( ) )
2174	assertSame ( offered. get ( ), request )
2175	assertEquals ( "do some work", outputVal )
2176	assertScoreAndParse ( content, null, 1 )
2177	Assert. assertNotNull ( combinationGenerator )
2178	assertEquals ( expected, error. toString ( ) )
2179	assertThat ( serverHello. getClientCertificateType ( ), is ( CertificateType. RAW_PUBLIC_KEY ) )
2180	assertEquals ( "Tool specification has to be set before initializing", e. getMessage ( ) )
2181	assertNull ( presenter. getValue ( ) )
2182	Assert. assertTrue ( errors. hasFieldErrors ( "voidReason" ) )
2183	assertTrue ( doc. getDescriptions ( ). isEmpty ( ) )
2184	assertEquals ( "should be equal to 0", 0, c. getActualMinimum ( 0 ) )
2185	Assert. assertTrue ( response. toString ( ), response. result ( ) )
2186	assertEquals ( "Should respond with 200", 200, responseContext. getStatus ( ) )
2187	assertSet ( whenFilteringBy ( IN, Arrays. asList ( october15, november1 ) ), queryReturns ( october15Entity, november1Entity ) )
2188	Assert. assertEquals ( jsonString, "[{\\"name\\":\\"涓���\\",\\"id\\":1,\\"brithDate\\":null,\\"money\\":1.1},{\\"name\\":\\"涓���1\\",\\"id\\":2,\\"brithDate\\":null,\\"money\\":2.1}]" )
2189	Assert. assertEquals ( 10L, template. execute ( callable, recoveryCallback, retryState ). longValue ( ) )
2190	assertEquals ( expectedKey, bucketKeyWithFileName )
2191	assertEquals ( stmts, graph. getStatements ( ) )
2192	assertEquals ( " WHERE ((\\"NAME\\" LIKE? AND (\\"AGE\\" <? OR \\"AGE\\" >?)) OR \\"NAME\\" =?) AND \\"LASTNAME\\" =?", QueryBuilder. getWhereStringForFilters ( filters, sh ) )
2193	assertEquals ( expression, new On ( new IntegerFieldValue ( first ), new SpecialCharFieldValue ( SpecialChar. HASH ), new IntegerFieldValue ( second ) ). asString ( ) )
2194	assertNotNull ( security )
2195	assertThat ( toIdListUnqualifiedVersionless ( found ), containsInAnyOrder ( id1 ) )
2196	assertThat ( query. count ( ), is ( 0L ) )
2197	assertTrue ( 1.28 == deserialize. readDouble ( ) )
2198	assertThat ( str, endsWith ( "\\0" ) )
2199	Assert. assertTrue ( retValue. intValue ( ) == 4 )
2200	assertEquals ( 2, v8Int32Array. length ( ) )
2201	assertThat ( configuration. getRunPeriod ( ), is ( 20 ) )
2202	assertions. containsValue ( value )
2203	assertNotNull ( ( ( MockAnalyzer ) jobBuilderCopy. getAnalyzerComponentBuilders ( ). get ( 0 ). getComponentInstance ( ) ). _columnNames [ 0 ] )
2204	Assert. assertSame ( bitmap, ic. getBitmap ( ) )
2205	assertThat ( anyTS. isValid ( SECOND_OF_DAY, 86400 ), is ( false ) )
2206	assertFalse ( isEqual )
2207	Assert. assertTrue ( "odd, user 7 didn't get user 8's names", found )
2208	assertFalse ( parser. gotAnyHeader ( ) )
2209	assertIterator ( root. filter ( ). showDefault ( ). iterator ( ), "child0", "child3", "child4" )
2210	assertEquals ( 79, x. value )
2211	assertTrue ( "Conversion did not match", Arrays. equals ( value, to ) )
2212	assertOut ( "public class A implements IA {\\n}" )
2213	assertEquals ( TargetType. PILLAR, target. getType ( ) )
2214	assertEquals ( PRECONDITION_FAILED, response. getStatusInfo ( ) )
2215	assertNoProblems ( )
2216	Assert. assertEquals ( 8, result, 0 )
2217	assertEquals ( set ( "c" ), redis. sinter ( "key1", "key2", "key3" ) )
2218	assertTrue ( match )
2219	assertEquals ( "CLM", cf. getSegment ( ) )
2220	assertEquals ( 4, islandPerimeter. islandPerimeter ( grid ) )
2221	assertEquals ( "Cardenality of cartesian product is wrong", 2, cartesianResult. size ( ) )
2222	assertTrue ( true )
2223	tester. assertRenderedPage ( HomePage. class )
2224	assertEquals ( pp. getValue ( ), new Payload < > ( "123" + "456" ). getValue ( ) )
2225	assertEquals ( 0xffffffffL, getUnsignedInt ( v1, 0 ) )
2226	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
2227	assertEquals ( s_expected_1, Hex. toHexString ( item1. getData ( ) ). toUpperCase ( ) )
2228	assertEquals ( 1, violations. size ( ) )
2229	assertExpectedProtectedPorts ( dai )
2230	assertHasConstructor ( dst, dst. toClass ( ), new CtClass [ ] { CtClass. intType } )
2231	assertEquals ( Response. Status. NO_CONTENT. getStatusCode ( ), response. getStatus ( ) )
2232	assertResultSet ( res, "testTimezonedTable3.result" )
2233	assertEquals ( "Description", entity. getDescription ( ) )
2234	assertEquals ( "slow-ctx", value. asIs ( ) )
2235	assertTrue ( "Regular user is not allowed to create a directory without sufficient permissions", pdp. canCreateSubDir ( subject_owner, attr ) == AccessType. ACCESS_DENIED )
2236	assertThat ( CalendarPeriod. onWeeks ( ). parse ( "52. week of 2017 �� 4. week of 2020", f ), is ( expected ) )
2237	Assert. assertEquals ( "<word>The fox</word> jumps over", hl. makeWellFormed ( xmlContent ) )
2238	Assert. assertEquals ( 8, vertexes. size ( ) )
2239	Assert. assertEquals ( "result", testBean. getResult ( ) )
2240	Assert. assertEquals ( b1, b2 )
2241	assertNotNull ( retrievedBean )
2242	assertEquals ( expected, reference. get ( ) )
2243	Assert. assertEquals ( expectedResult, result )
2244	assertEquals ( sumLabel. getText ( ), String. valueOf ( number ) )
2245	assertThat ( result. toString ( ), is ( equalTo ( "HELLO" ) ) )
2246	assertEquals ( "Index Of Test1 is 3", 3, _fastTable. indexOf ( "Test1" ) )
2247	assertEquals ( "A person cannot be created from another person", cause. getMessage ( ) )
2248	assertNotNull ( sslContext )
2249	assertThat ( dest. aaa, is ( nullValue ( ) ) )
2250	assertTrue ( hasLock )
2251	assertProcessEnded ( processInstance. getId ( ) )
2252	assertTrue ( book. getIsbn ( ). startsWith ( "132" ) )
2253	assertEquals ( 401, response. getStatus ( ) )
2254	assertEquals ( "CFBundleVErsion in file '" + infoPList + "' is not the expected version '" + dynamicVersion + "'.", dynamicVersion, new PListAccessor ( infoPList ). getStringValue ( PListAccessor. KEY_BUNDLE_VERSION ) )
2255	assertFalse ( success )
2256	assertNotNull ( commentFromDb )
2257	Assert. assertFalse ( "ticket should not be in use", inUse )
2258	assertThat ( eventListener. captured ( actor, type ) )
2259	Assert. assertTrue ( "Failed to login with pcClient", pcClient. login ( ) )
2260	assertNull ( "Base value is not properly parsed", mapper. base ( "test", null ) )
2261	assertEquals ( dataset, galaxyHistory. fileToHistory ( dataFile, FILE_TYPE, createdHistory ) )
2262	assertEquals ( expResult, result )
2263	assertBulkInsert ( data, expected )
2264	Assert. assertEquals ( "<input type=\\"checkbox\\" id=\\"w1\\" name=\\"w1\\" value=\\"true\\" toggleHide=\\"hatColors\\"/><label for=\\"w1\\">Has a hat?</label><input type=\\"hidden\\" name=\\"_w1\\"/>", cw. generateHtml ( context ) )
2265	Assert. assertEquals ( "Fully qualified table name in Grant statement is resolved incorrectly", "db1." + TABLE, grantDesc. getPrivilegeSubjectDesc ( ). getObject ( ) )
2266	assertThat ( type. matching ( Example. class ), equalTo ( fixed ( Example. class ) ) )
2267	assertTrue ( "addArgument() adds an argument to the command", command. getDefinition ( ). hasArgument ( "foo" ) )
2268	assertThat ( actual, is ( notNullValue ( ) ) )
2269	assertThat ( query. asSingleEntity ( ), is ( not ( nullValue ( ) ) ) )
2270	assertTrue ( "Wrong number of ledgers: " + numOfLedgers, counter == numOfLedgers )
2271	assertFeatureValues ( expected, testQuery, testText, new UnigramFeatureExtractor ( ) )
2272	assertTrue ( evaluator. evaluatePerm ( indices, null, InetAddress. getByName ( "127.0.0.1" ), null ) == PermLevel. READWRITE )
2273	assertEquals ( 1, resolvedClassPaths. size ( ) )
2274	assertEquals ( "Foobar", gelfSender. getLastMessage ( ). getAdditonalFields ( ). get ( "loggerNdc" ) )
2275	assertEquals ( "xpto", parsedObject. getLazyMapPojo ( ). get ( 1l ). getStringValue ( ) )
2276	Assert. assertNotNull ( victim. create ( ) )
2277	assertTrue ( false )
2278	assertTrue ( result )
2279	assertNull ( actualResponse )
2280	this. context. assertIsSatisfied ( )
2281	assertEquals ( "to@domain.com", emailer. getProperties ( ). getProperty ( "to" ) )
2282	assertThat ( result, is ( response ) )
2283	assertThat ( internalMap. keySet ( ), containsInAnyOrder ( 64, 25 ) )
2284	assertEquals ( "TestPassword", envVars. get ( "COVERITY_PASSPHRASE" ) )
2285	assertTrue ( result. isResultOK ( ) )
2286	assertEquals ( transport, svc. getHttpTransport ( ) )
2287	assertThat ( result, is ( false ) )
2288	ABSTest. assertParseFileOk ( fileName )
2289	assertEquals ( it. next ( ). getName ( ), "h枚chstBetrag" )
2290	Assert. assertEquals ( contextX, test. context )
2291	assertEquals ( ComparatorStepResult. Status. PASSED, result. getStatus ( ) )
2292	Assert. assertEquals ( "no buckets triggered", 0, testMeta. managedState. freedBuckets. size ( ) )
2293	result. assertIsSatisfied ( )
2294	assertEquals ( expected, actual )
2295	assertEquals ( second. getSqlType ( ), "int" )
2296	assertEquals ( expected, expression. toString ( ) )
2297	Assert. fail ( )
2298	assertTrue ( AutnumUtil. isValidAutnum ( validAutnum ) )
2299	assertEquals ( "should contain bob", "bob", users. get ( 0 ). getText ( ) )
2300	assertEquals ( expectedProfile. getSid ( ), resultantProfile. getSid ( ) )
2301	assertEquals ( "barfoo", form. foo. baz. get ( "foo_bar_'badquotes'_.foobar" ). foobar )
2302	Assert. fail ( "expected exception for null query string." )
2303	assertEquals ( expected, actual )
2304	assertEquals ( 37, actual )
2305	Assert. assertEquals ( eventCount * 2, event. getTouchCount ( ) )
2306	assertEquals ( true, check. isRequired ( ) )
2307	assertEquals ( "The numeric value " + encodeValue + " should be encoded to '" + expected + "'", expected, alphaNumericCodec. encode ( encodeValue ++ ) )
2308	Assert. assertEquals ( t1, t2 )
2309	assertEquals ( "[{\\"value\\":\\"A test summary\\",\\"lang\\":\\"EN\\"}]", toJson ( summaries ) )
2310	Assert. fail ( "Test should fail, user shouldn't be allowed to invoke that method" )
2311	Assert. assertTrue ( cursor. atEnd ( ) )
2312	assertNotNull ( op )
2313	Assert. assertTrue ( irodsFile. exists ( ) )
2314	assertEquals ( 10, map. size ( ) )
2315	assertThat ( inds, containsInAnyOrder ( indA ) )
2316	assertBitVectorEquals ( expected, actual )
2317	assertThat ( initiativeInfo. isVotingStarted ( anyLocalDate ( ) ), is ( false ) )
2318	assertThat ( ChronoHistory. from ( history. getVariant ( ) ), is ( history ) )
2319	arrays. assertEndsWith ( description, actual, null )
2320	assertTrue ( action )
2321	assertEquals ( 0, latch. getCount ( ) )
2322	assertThat ( args, contains ( "network", "ls" ) )
2323	assertEquals ( JobStatus. ACCEPTED, jobResultArgumentCaptor. getValue ( ). getStatus ( ) )
2324	Assert. assertEquals ( expected, actual )
2325	Assert. assertEquals ( path, obs. getFormFieldPath ( ) )
2326	assertEquals ( expected, calls. toString ( ) )
2327	assertThat ( results, samePaths ( new File ( root, "a.txt" ) ) )
2328	Assert. assertTrue ( list. size ( ) == 2 )
2329	assertEquals ( "An :)awesome :)string with a few :)emojis!", result )
2330	Assert. assertEquals ( Arrays. asList ( "one", "three", "two" ), ec. getValue ( ) )
2331	assertNotNull ( processInstanceId )
2332	assertTrue ( Arrays. equals ( expectedResult, encoded. array ( ) ) )
2333	assertThat ( found, equalTo ( 1 ) )
2334	assertEquals ( PREVIOUS_RESPONSE, argumentCaptor. getValue ( ) )
2335	assertTrue ( r1 instanceof PublicCloneable )
2336	Assert. assertEquals ( xmlEsperado, referenciada. toString ( ) )
2337	assertEquals ( ids, session. from ( var ). list ( var. id ) )
2338	assertTrue ( ( ( BooleanType ) eval. get ( 0 ) ). getValue ( ) )
2339	assertEquals ( vr. getValidity ( ), Validity. INVALID )
2340	Assert. notEmpty ( results )
2341	assertEquals ( expected, actual )
2342	Assert. assertEquals ( faceted, facet. getFaceted ( ) )
2343	assertEquals ( 0, score )
2344	Assert. assertEquals ( expect_sql, sql )
2345	assertEquals ( BGPError. CEASE, e. getError ( ) )
2346	assertThat ( event. getRecipients ( ), contains ( recipients. get ( 1 ), recipients. get ( 2 ) ) )
2347	assertTrue ( ds instanceof org. apache. tomcat. jdbc. pool. DataSource )
2348	assertNotNull ( result )
2349	assertResponse ( "method withoutParameters was invoked", response )
2350	assertTrue ( population. size ( ) >= 98 )
2351	assertTrue ( sut. isWhitespace ( ) )
2352	assertTrue ( stmt instanceof CreateTableNode )
2353	assertThat ( resolver. replace ( "${m1}, ${m2}, ${m3}!", true ), is ( "Hello1, Hello2, Hello3!" ) )
2354	assertFalse ( "Schemas", schemaHomology. schemasMatch ( schema1, schema2, exclusionRegex ) )
2355	Assert. assertThat ( matchingArtifacts. isEmpty ( ), Matchers. is ( false ) )
2356	Assert. assertEquals ( 8, rpcServiceMetaInfo. getRpcServiceMetas ( ). size ( ) )
2357	Assert. assertEquals ( sum, 39555 )
2358	assertThat ( transform, hasSize ( 1 ) )
2359	assertEquals ( map. size ( ), n * nThreads )
2360	assertEquals ( expected, actual )
2361	assertEquals ( true, result )
2362	assertEquals ( d1, d2 )
2363	assertNull ( immediateValue. getValue ( ) )
2364	assertions. isEqualTo ( new Boolean ( false ) )
2365	assertNotNull ( aRes. getPath ( ), new SVRLMarshaller ( ). read ( aRes ) )
2366	Assert. assertFalse ( errors. hasErrors ( ) )
2367	Assert. assertEquals ( jdkHand, acHand )
2368	assertEquals ( false, start )
2369	assertEquals ( 200, resp. getStatusLine ( ). getStatusCode ( ) )
2370	assertEquals ( "MyRepositoryName", RepoAndTableUtil. getOwningRepository ( tableDescriptor ) )
2371	assertThatThrownBy ( ( ) -> graphQlExecutor. executeRequest ( request ) )
2372	assertThat ( actual. matches ( "_____\\\\d+$" ), is ( true ) )
2373	assertThat ( bc. cyclic ( ). cardinality ( ), is ( 12 ) )
2374	assertEquals ( sb. toString ( ), stmtb. prepareStatementString ( ) )
2375	assertEquals ( 1, hits. totalHits )
2376	context. assertIsSatisfied ( )
2377	assertEquals ( 0, handler. getMessages ( ). size ( ) )
2378	assertNotNull ( Message. fetcher ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "IMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
2379	assertEquals ( "Hello World", resp )
2380	assertEquals ( expected, actual )
2381	assertThat ( result, is ( true ) )
2382	assertTrue ( "Got constructor arguments", cd. getConstructorArgs ( ). isEmpty ( ) )
2383	assertTrue ( "Row should be as wide as tree", treeGrid. getTableWrapper ( ). getSize ( ). getWidth ( ) == treeGrid. getRow ( 0 ). getSize ( ). getWidth ( ) )
2384	assertEquals ( "XAU_USD", currencyPair )
2385	Assert. assertFalse ( "Error report should not contain errors", reportStats. hasErrors ( ) )
2386	assertThat ( offset. canonical ( ), is ( "UTC+01:00" ) )
2387	assertTrue ( i1. contains ( i1 ) )
2388	assertEquals ( definition. convertToUnsigned ( expected. getShare ( ) ), definition. convertToUnsigned ( actual. getShare ( ) ) )
2389	Assert. assertEquals ( 3, ( ( Number ) o ). intValue ( ) )
2390	assertEquals ( Long. valueOf ( - 1L ), myTestInstance. deleteAsync ( doc, Durability. NONE ). get ( ) )
2391	assertEquals ( SC_OK, response. getStatus ( ) )
2392	assertEquals ( Arrays. asList ( "c", "b", "a" ), resolver. resolve ( ) )
2393	assertThat ( referencableDaoService. get ( ConfigRefEnum. ACHIEVEMENTS_REFRESH_RATE ). getValue ( ), is ( "1" ) )
2394	assertEquals ( "Expected money equality", new Money ( null, 100_000_000_000L ), money )
2395	assertThat ( connection2, is ( connection ) )
2396	assertEquals ( 400, cr. getStatus ( ) )
2397	assertTrue ( builder instanceof InProcessChannelBuilder )
2398	assertEquals ( "((?:\\\\Qabc\\\\E){3,})", p. toString ( ) )
2399	assertNotNull ( mapping )
2400	assertEquals ( iri, clazz. getIRI ( ) )
2401	assertThat ( result, is ( nullValue ( ) ) )
2402	assertEquals ( p. toString ( ), perOS ( "java/util/List.java" ) )
2403	assertEquals ( "Output order: " + outputOrder, exp, out )
2404	assertEquals ( ResultCodeEnum. INVALID_CREDENTIALS, resp. getLdapResult ( ). getResultCode ( ) )
2405	assertEquals ( "", container2. stringBuilder. toString ( ) )
2406	assertEquals ( "MEX", instance. getNacionalidad ( ) )
2407	Assert. assertEquals ( "test", rdr. readLine ( ) )
2408	assertEquals ( "Wrong number of URI references found", 2, result. size ( ) )
2409	assertEquals ( "xxêxx", result )
2410	assertIsSemver ( semver, version, 1, null, null, new String [ ] { "beta", "11" }, "sha.0nsfgkjkjsdf" )
2411	assertThat ( driver. getCurrentUrl ( ). startsWith ( redirectionAllowedExternalUrl ), is ( true ) )
2412	assertEquals ( expectedQuery, actualQuery )
2413	assertThat ( comparison1, is ( 0 ) )
2414	assertTrue ( fixture. eof ( ) )
2415	assertEquals ( doc. getXmlVersion ( ), "1.0" )
2416	assertEquals ( actual, source )
2417	Assert. assertTrue ( out. contains ( "viewId=0" ) )
2418	assertTrue ( testResult )
2419	Assert. assertEquals ( 0., analyser. getTimeWindowViolationAtActivity ( route. getEnd ( ), route ), 0.01 )
2420	assertThat ( cargo. getCommandsRun ( ), contains ( "cargo test dirmod:: --verbose" ) )
2421	assertTrue ( game2. isGameOver ( ) )
2422	assertFalse ( isThrown )
2423	Assert. assertEquals ( "(aa_change_deletion (aa_range (aa_point_location (aa_char Cys) 123) _ (aa_point_location (aa_char Arg) 125)) del)", aa_change_deletion. toStringTree ( parser ) )
2424	assertEquals ( ( byte ) 34, s. m0_0 ( ) )
2425	assertEquals ( expResult, result )
2426	Assert. fail ( "RuntimeException should be thrown!" )
2427	assertEquals ( "local socket path", ABSTRACT, ch. getLocalSocketAddress ( ). path ( ) )
2428	assertThat ( getClientConnectionPoolStats ( sut ). getLeased ( ), equalTo ( 0 ) )
2429	assertTrue ( html. startsWith ( "<!--view name:/html-->" ) )
2430	Assert. assertTrue ( containerResolver. isContainer ( ) )
2431	assertEquals ( authors, test. info. getAuthors ( ) )
2432	assertTrue ( result )
2433	assertMockEndpointsSatisfied ( )
2434	assertProperty ( "explicitMethod", true, false, String. class, false, property )
2435	assertThat ( estimator. estimate ( renderingContext ), equalTo ( 10f ) )
2436	assertNotNull ( partitionManager. getPartition ( Realm. class, Realm. DEFAULT_REALM ) )
2437	assertFalse ( splitBrainProtectionFunction. apply ( members ) )
2438	assertEquals ( expected, actual )
2439	assertEquals ( "Expected response not seen.", "Hi There!", response )
2440	assertEquals ( 2, count. get ( ) )
2441	assertEquals ( "", value )
2442	assertEquals ( "redis://11.0.0.1:1234", config. getAddress ( ) )
2443	assertEquals ( required, field. isRequired ( ) )
2444	assertEquals ( TypeInfoFactory. getMapTypeInfo ( TypeInfoCreator. createString ( ), TypeInfoFactory. getMapTypeInfo ( TypeInfoCreator. createString ( ), TypeInfoCreator. createDouble ( ) ) ), orcType )
2445	assertEquals ( context, cache. get ( "foo" ) )
2446	assertEquals ( 50.0, tripRounds. getValueItem ( ). getValue ( ), 0.1 )
2447	Assert. assertEquals ( 100, value )
2448	assertEquals ( "a" + writeData + "a", response. toString ( Charset. defaultCharset ( ) ) )
2449	assertHasModifier ( JMod. PUBLIC, constructor. getModifiers ( ), "public" )
2450	Assert. assertEquals ( null, filterResult )
2451	assertNotNull ( result )
2452	assertTrue ( MVEL. evalToBoolean ( "d.age == val", m ) )
2453	assertViewName ( mav, "redirect:" + dto. getTopicUrl ( ) + "?page=1#" + POST_ID )
2454	assertThat ( boundSql. getSql ( ), Matchers. equalTo ( "select  ok " ) )
2455	assertEquals ( asList ( debug ( mdcValues, marker, message ) ), testLogger. getLoggingEvents ( ) )
2456	assertTrue ( getTaint ( bc. foo ( ) )!= 0 )
2457	assertEquals ( "The string is not correct.", "bufferSize=12, anotherKey02=coolValue02", manager. toString ( ) )
2458	Assert. assertEquals ( "unexpected url composed for fetching scheduler info", EXPECTED_SCHEDULER_INFO_URL, resolvedUrl )
2459	assertThat ( result. statusCode, is ( Response. BAD_REQUEST ) )
2460	assertEquals ( testPlatform. getPlatformValue ( ), pValues. get ( 0 ) )
2461	assertThat ( requestXml, equalTo ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"yes\\"?>\\n" + "\\n" + "<wps:Execute service=\\"WPS\\"\\n" + "             version=\\"1.0.0\\"\\n" + "             xmlns:wps=\\"http://www.opengis.net/wps/1.0.0\\"\\n" + "             xmlns:ows=\\"http://www.opengis.net/ows/1.1\\"\\n" + "             xmlns:xlink=\\"http://www.w3.org/1999/xlink\\"\\n" + "             xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\"\\n" + "             xsi:schemaLocation=\\"http://www.opengis.net/wps/1.0.0 ogc/wps/1.0.0/wpsExecute_request.xsd\\">\\n  <ows:Identifier>L2Plus</ows:Identifier>\\n" + "  <wps:
2462	Assert. assertNotNull ( url )
2463	Assert. assertTrue ( "Expected a negative value but it was: " + actualValue, actualValue < 0 )
2464	assertEquals ( "Betty Ford", u. getName ( ) )
2465	assertEquals ( expected, actual )
2466	Assert. assertEquals ( "Value is incorrect", map, value )
2467	Assert. assertTrue ( threw )
2468	Assert. assertEquals ( "Expected no rights", NO_AUTHS, auths )
2469	assertEquals ( ( short ) 0x0009, s. m0_0 ( ) )
2470	assertThat ( errors, not ( hasFieldErrors ( "prefix" ) ) )
2471	assertThat ( TestI18n. testMessage. id ( ), is ( "testMessage" ) )
2472	assertInjectsCollectionsOfMocks ( exampleTest )
2473	assertThat ( attribute, is ( notNullValue ( ) ) )
2474	assertThat ( sb. toString ( ), is ( "" ) )
2475	assertNotNull ( manager. read ( "config-1", metaStore ) )
2476	Assert. assertEquals ( "bla", ( ( TextPatternRegex ) r ). getValue ( ) )
2477	assertEquals ( expectedArg, parsedArg )
2478	assertThat ( RunningNode. getRunningTaskNodePath ( nodePath ), is ( "/state/running/test_job/" + nodePath ) )
2479	assertThat ( directInvoker, instanceOf ( DirectMessageHandlerInvoker. class ) )
2480	rule. assertScenarioEnded ( )
2481	assertEquals ( 403, httpResponse. getStatusLine ( ). getStatusCode ( ) )
2482	assertFalse ( result. hasErrors ( ) )
2483	Assert. assertEquals ( toArray ( "json", "aaa" ), merged )
2484	assertEquals ( "Data::datatype::Integer", results. get ( 0 ) )
2485	assertThat ( sessionImpl, is ( notNullValue ( ) ) )
2486	Assert. assertNotNull ( setter )
2487	assertEquals ( pp. getValue ( ), new Payload < > ( "123" ). getValue ( ) )
2488	assertFalse ( messages. contains ( "attribute definitions.Animal.discriminator is unexpected" ) )
2489	assertEquals ( localDate, CONVERTER. convert ( timestamp ) )
2490	NVAssert. assertEquals ( EXPECTED_NV_RESPONSE, nvResponse )
2491	Assert. assertEquals ( 1, cardLabelRepository. findUserLabelNameBy ( "label1", null, noRead ). size ( ) )
2492	assertEquals ( "Matched code set", UTF16_ID, CodeSet. getMatchingCodeSet ( local, remote, false ). getId ( ) )
2493	assertNull ( result )
2494	assertNull ( millis )
2495	assertTrue ( converter. canConvert ( LikeAction. class ) )
2496	assertTrue ( success. get ( )!= 1 )
2497	assertEquals ( writeCounter. get ( ), resultStr. length ( ) )
2498	assertTrue ( Arrays. equals ( key. getPubKey ( ), keyOnion ) )
2499	assertEquals ( "subprocessTask", task. getName ( ) )
2500	assertTrue ( latch. getCount ( ) == 0 )
2501	assertResult ( target )
2502	Assert. assertEquals ( 50, answer )
2503	assertEquals ( "vuosisadan p盲盲st盲", t. format ( new Date ( 1000L * 60 * 60 * 24 * 365 * 101 ) ) )
2504	assertEquals ( "TRACE", trace. toString ( ) )
2505	assertTokenInfo ( info, userId )
2506	Assert. assertEquals ( filter. filter ( spanEventBo ), SpanEventFilter. ACCEPT )
2507	assertMockEndpointsSatisfied ( )
2508	assertArrayEquals ( expected, Proto. build_fixed_int ( 1, 0 ) )
2509	MatcherAssert. assertThat ( PodHelper. getPodDomainUid ( pod ), equalTo ( "domain1" ) )
2510	Assert. assertEquals ( Arrays. asList ( new ServiceInfo ( "127.0.0.1", 9091 ) ), pool. getServices ( ) )
2511	assertThat ( new JSONObject ( actual ), sameJsonAs ( rawSchemaJson ) )
2512	Assert. assertEquals ( 0, ret )
2513	assertEquals ( filterResult, result )
2514	assertEquals ( "               com.spinn3r.artemis.init.advertisements.HostnameServiceType = com.spinn3r.artemis.init.MockHostnameService                          \\n" + "                 com.spinn3r.artemis.init.advertisements.CallerServiceType = com.spinn3r.artemis.init.MockCallerService                            \\n" + "                com.spinn3r.artemis.init.advertisements.VersionServiceType = com.spinn3r.artemis.init.MockVersionService                           \\n", m0. format ( ) )
2515	assertEquals ( message. serialize ( ), jsonFixture ( "fixtures/message-complete.json" ) )
2516	Assert. assertEquals ( 100, janus. getRefreshInterval ( ) )
2517	assertEquals ( prettyPrintJson ( readContent ( EXPECTED_PRIMITIVE_VALUES_PATH ) ), prettyPrintJson ( stream. toString ( ) ) )
2518	assertEquals ( expected, actualQuery )
2519	assertEquals ( null, target. httpRequest ( ) )
2520	AssertionUtils. multiAssertEquals ( createAsDocument10, response5. getResponseObject ( ) )
2521	assertEquals ( ButtonClick. SUCCESS_TEXT, vaadinElement ( "/VVerticalLayout[0]/VLabel[0]" ). getText ( ) )
2522	assertThat ( actualFileInputs, IsIterableContainingInAnyOrder. containsInAnyOrder ( expectedFileInputs ) )
2523	assertThat ( attack. getRequestType ( ), is ( RequestType. UNTAMPERED ) )
2524	assertNotEquals ( frameData1, frameData2 )
2525	assertEquals ( "[[Matt], [Sarah], [Rocky], [Total]]", results. toString ( ) )
2526	assertEquals ( form. x ( ), NoPacket. INSTANCE )
2527	Assert. assertTrue ( st == null || st. isEmpty ( ) )
2528	Assert. assertEquals ( 3, getInteresadoManager ( ). count ( ) )
2529	assertTrue ( cl. ping ( ) )
2530	Assert. assertNull ( "should have an empty description", actual )
2531	assertEquals ( dispatch, _provider. getDispatcher ( ref ) )
2532	assertThat ( StubWatchFactory. getRequestParameters ( ). get ( 0 ), hasEntry ( "resourceVersion", Integer. toString ( INITIAL_RESOURCE_VERSION ) ) )
2533	assertTrue ( "Custom content model " + customContentModelQName. toString ( ) + " is not present", allContentModels. contains ( customContentModelQName ) )
2534	assertTrue ( "Expected HostCapacityReports", obj instanceof Host )
2535	assertThat ( buf. toString ( ), is ( equalTo ( "\\t\\tfoo;\\r\\n" ) ) )
2536	assertEquals ( expected, fromJson )
2537	assertArrayEquals ( raw, resource. getBody ( ). getRawBytes ( ) )
2538	Assert. assertEquals ( sql, expected. replaceAll ( "#ALIAS#", EntityMetaDataCache. getMetaData ( RestrictionTestEntity. class ). getAlias ( ) ) )
2539	assertEquals ( "ID = role1, role2, userId", dataSetLookup. getFirstFilterOp ( ). getColumnFilterList ( ). get ( 0 ). toString ( ) )
2540	assertThat ( result, is ( 2 ) )
2541	assertTrue ( filter. allow ( event, listener ) )
2542	assertEquals ( "custom Titi", html )
2543	assertNotNull ( IndexWriter. getCommitter ( env ) )
2544	assertTrue ( appender. getEvents ( ). size ( ) == 0 )
2545	assertEquals ( actualJSON, expectedJSON )
2546	assertOut ( "/**\\n * @export\\n * @param {number} bar\\n * @param {string} baz\\n * @param {Array} goo\\n */\\n" + "foo.bar.RoyaleTest_A.prototype.method1 = function(bar, baz, goo) {\\n}" )
2547	assertEquals ( Noun. pluralOf ( "loaf", client. inflectionRules ( ) ), "loaves" )
2548	assertEquals ( new BigDecimal ( "6.00" ), max )
2549	assertThat ( page. image. getSourcePath ( ), is ( expectedPath ) )
2550	assertThat ( a, equalTo ( a1 ) )
2551	assertEquals ( 0, zero )
2552	Assert. assertEquals ( "EXECUTE ERROR:", sqltrue, sqlnew )
2553	assertEquals ( 1, holder. getCounter ( ) )
2554	assertEquals ( "{0=33, 1=33, 2=33}", map. toString ( ) )
2555	assertEquals ( "* :123: Arthur Dent\\n" + "    @alias http://example.org/ArthurDent\\n" + "    * :abc: \\n" + "\\n" + "He's a jerk.\\n" + "A complete kneebiter.", toWikiText ( note ) )
2556	assertTrue ( xmas. before ( newYearsDay ) )
2557	Assert. assertEquals ( "http://services.com/services", url )
2558	assertThat ( factory, is ( notNullValue ( ) ) )
2559	assertEquals ( expected, actual )
2560	connection. assertBufferEndsWith ( "bar" )
2561	assertEquals ( entity, entity2 )
2562	visitor. assertSatisfied ( "checking state contains two branches", _rootComposite )
2563	assertFalse ( dao. isSecretAnswer ( userJoe, "foo" ) )
2564	DistCpTestUtils. assertRunDistCp ( DistCpConstants. XATTRS_NOT_SUPPORTED, rootedSrcName, "/dstXAttrsNotEnabled", "-px", conf )
2565	assertTrue ( result. isEmpty ( ) )
2566	assertCellTexts ( 0, 0, new String [ ] { "Granddad 0", "Dad 0/0", "Son 0/0/0" } )
2567	assertEquals ( "Unexpected state class", TreeTableState. class, state. getClass ( ) )
2568	assertThat ( query. hasOption ( QueryFlag. FILTER_TAG_INCLUDE ), is ( true ) )
2569	Assert. assertTrue ( "claims topics with same base name in unconstrained scope should merge",! MergeUtils. shouldMerge ( t1, t2 ) )
2570	assertEquals ( "", html )
2571	assertEquals ( "dois", actual )
2572	assertSurplus ( ref, 3 )
2573	samlAssertion. assertionToString ( )
2574	Assert. assertEquals ( settings. getCallback ( ), "http://dummyCallback" )
2575	assertNotNull ( result )
2576	assertThat ( instance1. hashCode ( ), not ( equalTo ( instance2. hashCode ( ) ) ) )
2577	JSONAssert. assertEquals ( expected, flowSnapshotsJson, true )
2578	assertEquals ( cs, dto2. toString ( ) )
2579	Assert. assertNotNull ( rowKeys )
2580	Assert. assertNull ( error, error )
2581	assertThat ( domain. getReplicaCount ( "cluster1" ), equalTo ( 3 ) )
2582	assertFactorization ( poly, UnivariateSquareFreeFactorization. SquareFreeFactorization ( poly ) )
2583	Assert. assertTrue ( actual. equals ( expected ) )
2584	Assert. fail ( )
2585	assertEquals ( expectedType, TalendType. convertFromAvro ( fieldSchema ) )
2586	Assert. assertEquals ( "<th>type</th> \\n" + "<th>name</th> \\n" + "<th>website</th>", title )
2587	Assert. assertEquals ( "test", testScopePath. getRootScope ( ). getName ( ) )
2588	assertNoViolations ( constraintViolations )
2589	assertNotNull ( data. getString ( 0, data. length ( ) ) )
2590	assertEquals ( false, Util. isEmpty ( collection ) )
2591	assertThat ( query. getAttributeTypes ( ), containsInAnyOrder ( AttributeType. MNT_BY, AttributeType. MNT_REF, AttributeType. MNT_LOWER ) )
2592	assertOut ( "var /** @type {ArgumentError} */ a = new ArgumentError()" )
2593	assertThat ( wrapper. retrieveModelVersion ( ), is ( new Version ( "1.0.0" ). toString ( ) ) )
2594	assertEquals ( "Wrong buffer length", 0, stream. getTail ( ). length )
2595	assertOperation ( ( ) -> roleClient. createProject ( SPACE_NAME, createProjectRequest ) )
2596	assertThat ( query. getParameters ( ). iterator ( ). next ( ). getName ( ), is ( "Deploymentparameter0" ) )
2597	assertNull ( StringCompressionUtil. unpackAndDecompress ( testChars ) )
2598	assertEquals ( CloudantToDo. class, classCapture. getValue ( ) )
2599	assertTrue ( hasReset )
2600	assertEquals ( expected, actual )
2601	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
2602	assertThat ( result, is ( expectedResult ) )
2603	assertTrue ( true )
2604	assertEquals ( "<text<br/>>", label )
2605	Assert. assertFalse ( "Failed to parse " + this. v11nName, mapper. hasErrors ( ) )
2606	assertEquals ( 23583599999L, q. getLastMillisecond ( ) )
2607	assertEquals ( "     cpu    memory   disk      \\n" + "     ---    ------   ----      \\n" + "1.   100%   2GB      100MB/s   \\n", textTableFormatter. format ( ) )
2608	assertEquals ( SUCCESS_FACTORY_RESPONSE, handleResponse )
2609	Assert. assertNotNull ( dbServiceList )
2610	assertNoDataValue ( targetPoduct. getBand ( FLOAT_BAND_NAME ), new PixelPos ( 23.5f, 13.5f ), 299.0, 299.0 )
2611	assertTrue ( contains )
2612	Assert. assertEquals ( "test case " + testCase. getKey ( ) + " failed.", testCase. getValue ( ). intValue ( ), magnitudeResult )
2613	assertNotNull ( RatePlan. reader ( ). read ( ) )
2614	assertEquals ( "http://example.com/events/{eventId}", affordance. getHref ( ) )
2615	assertEquals ( o1, o2 )
2616	Assert. assertTrue ( ks == ks2 )
2617	assertNotReached ( )
2618	assertions. isGreaterThan ( expected )
2619	assertEquals ( "a b", result )
2620	assertSame ( expected, result )
2621	assertEquals ( "(x INT)\\n", found )
2622	assertEquals ( 23, proxy. myMethod ( ) )
2623	Assert. fail ( "Invalid input" )
2624	Assert. assertEquals ( Long. class, clazz )
2625	assertThat ( dbObject. get ( "comment" ), notNullValue ( ) )
2626	assertTrue ( latch. await ( 15000, TimeUnit. SECONDS ) )
2627	assertEquals ( "incorrect size", SIZE, new LongPadding ( ). size ( ) )
2628	Assert. assertArrayEquals ( hammingWindow_EXPECTED, hammingWindow_ACTUAL, DELTA )
2629	Assertion. assertEquals ( loadedDataSet, actualDataSet )
2630	assertThat ( editor. getValue ( ), is ( ( Object ) Credential. builder ( ). userName ( "user" ). setPassword ( "password". toCharArray ( ) ). database ( "db" ). build ( ) ) )
2631	assertFalse ( game. isGameOver ( ) )
2632	Assert. assertNotNull ( m )
2633	assertEquals ( "TextBuilder String Is 1.0", _textBuilder. toString ( ), "1.0" )
2634	assertThat ( "Count of customer", res, is ( 2 ) )
2635	assertEquals ( r1, mostRelevantResource )
2636	Assert. assertEquals ( expectedLines, seenLines )
2637	assertThat ( result. fullName ( ), is ( Long. class. getName ( ) ) )
2638	Assert. assertEquals ( sb. substring ( ( int ) offset ), result )
2639	assertTrue ( "All fallback techniques should be returned.", this. containsAll ( expectedResult, actualResult ) )
2640	assertEquals ( str, tuple. getValue1 ( ) )
2641	Assert. assertEquals ( createObjectNode ( "name", "testperson", "age", 30 ), result )
2642	assertNotNull ( result )
2643	assertTrue ( "nodeExists returned false when there blatantly is a node there", store. nodeExists ( TEST_SERVER1_NODE1_ID ) )
2644	assertTrue ( violation )
2645	assertEquals ( "env.value", value )
2646	assertEquals ( "failure: " + translated, ExpressionFactory. exp ( "db:toArtist.paintingArray = $p " + "and db:toArtist.artistExhibitArray.toExhibit.CLOSING_DATE = $d" ), translated )
2647	assertEquals ( ret, user )
2648	assertTrue ( shardManager. getMBean ( ). getSyncStatus ( ) )
2649	assertEquals ( expected, actual )
2650	assertAttribute ( lv )
2651	assertEquals ( "Wrong number of warnings detected.", 8, warnings. size ( ) )
2652	assertEquals ( exist, true )
2653	assertArrayEquals ( coeffs, actual )
2654	assertEquals ( new HashSet ( Arrays. asList ( "group-one", "zeppelin-role" ) ), roles )
2655	assertFalse ( pm. getAlternativeEnabledModel ( d_paroxSet ). getValue ( ) )
2656	Assert. assertEquals ( parser, reg. find ( name ) )
2657	assertEquals ( 200, page. getWebResponse ( ). getStatusCode ( ) )
2658	assertTrue ( "try is Failure after mapping", error. isFailure ( ) )
2659	assertEquals ( "/", refererResult. getReferer ( ) )
2660	assertEquals ( HttpStatus. SC_UNPROCESSABLE_ENTITY, response. getStatus ( ) )
2661	assertTrue ( resource instanceof ClassPathResource )
2662	assertEquals ( myMode, entry. getMode ( ) )
2663	assertResultSet ( res )
2664	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
2665	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff57_" ) )
2666	assertArrayEquals ( "Hello World!". getBytes ( StandardCharsets. UTF_16LE ), ( byte [ ] ) RecordPath. compile ( "toBytes(/s, \\"UTF-16LE\\")" ). evaluate ( record ). getSelectedFields ( ). findFirst ( ). get ( ). getValue ( ) )
2667	assertThat ( mergedPredicate. hasBeenList ( ), Matchers. is ( true ) )
2668	assertTrue ( spy. isPropertyChanged ( ) )
2669	Assert. assertEquals ( expect_sql, sql )
2670	assertEquals ( String. format ( TextHelper. LOCALE_ROOT, "usage: argparse4j install [-h] [--foo FOO]%n" + "%n" + "named arguments:%n" + "  -h, --help             show this help message and exit%n" + "  --foo FOO              (default: alpha)%n" ), parser. formatHelp ( ) )
2671	Assert. assertFalse ( errors. hasErrors ( ) )
2672	assertFalse ( lockAcquired )
2673	assertions. startsWith ( sequence )
2674	assertTrue ( outAny. equal ( inAny ) )
2675	assertEquals ( "allocations should be smaller and within the same offset range", Lists. newArrayList ( new Allocation ( control, 5, 5 ), new Allocation ( withLogin, 20, 10 ), new Allocation ( withoutLogin, 45, 15 ) ), allocations. getAllocations ( ) )
2676	Assert. assertTrue ( topic instanceof PatternTopic )
2677	assertEquals ( result, loremIpsum )
2678	assertEquals ( "Index created: oss", response )
2679	runner. assertAllFlowFilesTransferred ( AbstractBigQueryProcessor. REL_SUCCESS, 1 )
2680	assertNull ( originatingNode )
2681	assertThat ( domain. isDomainHomeInImage ( ), is ( false ) )
2682	assertEquals ( "ErrorCode:IotHubUnauthorizedAccess;Unauthorized", bestMessage )
2683	Assert. assertEquals ( 9, woffFont. getTables ( ). size ( ) )
2684	Assert. fail ( e. getMessage ( ) )
2685	Assert. assertEquals ( query, interpretedQuery )
2686	assertEquals ( expected, transformed )
2687	assertTrue ( true )
2688	assertTrue ( latch. await ( 5, TimeUnit. SECONDS ) )
2689	Assert. assertFalse ( pss. getEligiblePositionalParameters ( ). hasNext ( ) )
2690	Assert. assertArrayEquals ( request. getParameters ( ), new Object [ ] { "runtime_id" } )
2691	assertNoMoreTokens ( )
2692	assertThat ( "Reversed Complemented sequence not as expected", s, is ( "GCAT" ) )
2693	assertTrue ( pattern. matches ( "," ) )
2694	assertThat ( results. getCurrentPage ( ), equalTo ( 2 ) )
2695	assertNotNull ( features )
2696	assertEquals ( asList ( "FRED", "JOSEPH", "MARMADUKE" ), list )
2697	Assert. assertEquals ( 1.0, getMetric ( ). calculate ( getSession ( ) ), getDelta ( ) )
2698	files. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE )
2699	assertTrue ( "Invalid JavaScript version", FileUtil. findPatternInFile ( new File ( resultFilename ), "Using Ecmascript version: Ecmascript 3" ) )
2700	assertEquals ( 9, lineCounter )
2701	Assert. assertEquals ( 1, count. get ( ) )
2702	assertEquals ( asList ( "N", "n", "after-date", "past" ), actualOptions )
2703	Assert. assertEquals ( CharArrayNodeLeafVoidValue. class, node. getClass ( ) )
2704	assertEquals ( "um real e sessenta e cinco centavos", actual )
2705	assertEquals ( "jim", retrievedEntity. getProperty ( "name" ) )
2706	assertEquals ( "A string with unicode characters:
2707	assertEquals ( expected, ModulusFinder. findSuitableModulus ( 16 ) )
2708	assertTrue ( "List mismatch", words1. equals ( words2 ) )
2709	Assert. assertEquals ( "{" + "\\"@context\\":\\"../$metadata#ESAllPrim(32767)/PropertyString\\"," + "\\"@metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\"," + "\\"value\\":\\"First Resource - positive values\\"}", resultString )
2710	assertFalse ( getTestChargingStationFromRepository ( ). isReservable ( ) )
2711	assertEventLogClient1 ( COMPLETE, CONFIRM_COMPLETED, CLOSE )
2712	assertEquals ( 19, tokens. size ( ) )
2713	Assert. assertTrue ( "Generated template does not match expected XML.", XmlHelper. compareXMLStrings ( expectedXML, message ) )
2714	assertTrue ( pattern. matches ( "{foobar" ) )
2715	assertEquals ( body. toString ( ), "operation _timeout" )
2716	assertEquals ( 1360195200000L, date. getTime ( ) )
2717	JSONAssert. assertEquals ( "{a:[{id:X}]}", ARRAY_OF_JSONOBJECTS, regExCustomArrayValueComparator )
2718	assertTrue ( psa. getLegend ( ) instanceof ProportionalPoint )
2719	assertEquals ( Long. valueOf ( 0 ), account. getEntityId ( ) )
2720	mockEndpoint. assertIsSatisfied ( )
2721	Assert. assertEquals ( - 1, sFsShell. run ( "mount", "/", ufsPath ) )
2722	assertEquals ( "2015-08-20T20:10:00Z", formatted )
2723	assertTrue ( sut. writeList ( new short [ ] { 1, 2 } ) )
2724	assertThat ( response. getBody ( ), equalTo ( "Hello World" ) )
2725	assertEquals ( expected, actual )
2726	assertEquals ( expected, output )
2727	assertEquals ( "status", HttpStatus. SC_OK, response. getStatusLine ( ). getStatusCode ( ) )
2728	assertEquals ( "file://path-to-m2", m2RepoService. getRepositoryURL ( ) )
2729	assertEquals ( 50, allStateCapitals. length )
2730	assertEquals ( "", result )
2731	assertResultSet ( res )
2732	assertEquals ( expResult, result )
2733	assertEquals ( "<Foo, 5>", pair1. toString ( ) )
2734	assertThat ( target. parse ( ), is ( false ) )
2735	GAssert. assertEquals ( ImmutableMultimap. of ( "a", "5,0001" ), postWithDouble )
2736	assertThat ( offset. canonical ( ), is ( "UTC+02:00" ) )
2737	assertTrue ( validator. validate ( connectionLimits, PUT ). passedValidation ( ) )
2738	assertNotNull ( thr )
2739	assertFalse ( code. getRange ( ). isValid ( "a" ) )
2740	assertSqlCanBeParsedAndDeparsed ( stmt )
2741	assertEquals ( _2011_11_10, toml. getDate ( "d", _2012_11_10 ) )
2742	assertEquals ( expected, actual )
2743	Assert. fail ( "No such class exist" )
2744	assertThat ( "Translation stops at Stop", pep, is ( testpep ) )
2745	assertEquals ( user. getId ( ), r. get ( 0 ). getId ( ) )
2746	assertEquals ( "mypic.png", user. getProfilePicture ( ) )
2747	assertNotNull ( select. getExpression ( ) )
2748	assertThat ( width, equalTo ( 3f ) )
2749	Assert. assertTrue ( Math. abs ( currentTimeMillis - readTimeStamp ) < 2 )
2750	assertEquals ( SuppliedNameSuffixKit. getId ( ), settings. getKitId ( ) )
2751	assertThat ( developerEntity, equalTo ( positionEntityArgumentCaptor. getValue ( ) ) )
2752	assertEquals ( expectedQuery, actualQuery )
2753	assertThat ( authenticate, is ( present ( ) ) )
2754	Assert. assertFalse ( testObj. containsWord ( "test" ) )
2755	assertNull ( result )
2756	Assert. assertEquals ( union. size ( ), 3 )
2757	assertEquals ( sampledResponseTimeList, responseTimeChartGroup )
2758	Assert. assertEquals ( 0, agents. size ( ) )
2759	assertOutputMatchesRecord ( mapDriver. run ( ). get ( 0 ), testPdf1CheckResult, testPdf1Name )
2760	assertEquals ( "formatBlock() formats a message in a block", "<error>                       </error>\\n" + "<error>  Du texte � afficher  </error>\\n" + "<error>                       </error>", formatter. formatBlock ( "Du texte � afficher", "error", true ) )
2761	assertEquals ( 1, executor. run ( AdultUnit. class ) )
2762	assertTrue ( fileSizeAfter < fileSizeBefore )
2763	assertNotNull ( user )
2764	Assert. assertEquals ( "Invalid result", "text", result )
2765	assertTrue ( filter. getOperators ( ). isEmpty ( ) )
2766	Assert. assertEquals ( HOSTNAME, env. getAttributes ( ). get ( "com.google.appengine.runtime.default_version_hostname" ) )
2767	assertTrue (! valid )
2768	assertEquals ( "Today is January 1, 1970", getMessages ( ). today ( cal. getTime ( ) ) )
2769	assertThat ( options. getMaxCopyAttempts ( ), is ( 3 ) )
2770	assertNotNull ( DependentHostedNumberOrder. reader ( "PXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
2771	assertEquals ( f4, mod )
2772	assertFalse ( victim. isIncrementalBuild ( ) )
2773	assertActive ( player1, player2, player3, player4 )
2774	assertEquals ( NO_CONTENT_204, deleteResponse. getStatus ( ) )
2775	Assert. assertEquals ( status, protocoloInfo. getStatus ( ) )
2776	assertEquals ( expResult, result )
2777	assertEquals ( 1, parts )
2778	assertEquals ( 0, dbHandler. getDataElementCount ( ) )
2779	Assert. assertEquals ( expected, actual )
2780	assertEquals ( "YWJjMTIz", result )
2781	assertThat ( ioUtils. getDataIndex ( post. getBytes ( charset ), charset ), Matchers. equalTo ( 33 ) )
2782	Assert. assertTrue ( errors. hasFieldErrors ( "encounter" ) )
2783	assertThat ( getCollection ( ). count ( ), is ( 1L ) )
2784	Assert. assertTrue ( new LogAdapter ( "logger.name.here", mockConfigLong ( ) ). isWarnEnabled ( ) )
2785	assertEquals ( expected, api. getAPIUrl ( "" ) )
2786	assertEqualsSet ( "ObjectOneOf.rdf", SubClassOf ( A, ObjectOneOf ( indA, indB ) ) )
2787	assertOut ( "s.toLowerCase() == 'foo'" )
2788	assertEquals ( expResult, result )
2789	assertEquals ( cal. getTime ( ), date )
2790	assertEquals ( array. getBaseTypeName ( ), baseType )
2791	Helpers. assertJson ( Deencapsulation. invoke ( twinMetadata, "toJsonElement" ). toString ( ), expectedJson )
2792	assertEquals ( "Framework profile", "myProfile", config. getFrameworkProfile ( ) )
2793	assertOut ( "a = a.filter(function(node){return (node.attribute('name').length())})" )
2794	assertEquals ( 0.0, prod. minus ( aperm ). getRMS ( ), TOLERANCE )
2795	Assert. assertFalse ( TrainerFactory. isValid ( mlParams ) )
2796	assertEquals ( data, stream. asString ( ) )
2797	assertTrue ( result )
2798	assertEquals ( expectedArg, parsedArg )
2799	assertCompare ( String. valueOf ( val1 ), String. valueOf ( val2 ), expected )
2800	assertEquals ( AuthenticationType. FORM, sut. getAuthenticationType ( ) )
2801	assertNull ( metricsFactory )
2802	Assert. assertEquals ( "Sender: JD <john.doe@acme.org>", decode ( field ) )
2803	assertThatPersonIsNotProtected ( mapper ( FOR_AUTORITY_CLIENT ). map ( person, CensorProtectedDataForNonAuthorities, CPRProtectionLevel. DoNotCensorCPR ) )
2804	assertEquals ( 15, purged )
2805	Assert. assertEquals ( "Status code should be the same.", 200, conn. getResponseCode ( ) )
2806	Assert. assertEquals ( expected, actual )
2807	assertEquals ( tx. estimateLockTime ( mockBlockChain ), now )
2808	assertTrue ( "Mixed style. Error should have been discovered: " + getStdErr ( ), getStdErr ( ). indexOf ( "Mixed style, invalid WSDL" ) > - 1 )
2809	assertNotNull ( entity. getId ( ) )
2810	Assert. assertEquals ( "Params:\\n" + "foo: bar", response )
2811	assertNull ( repository. getModuleMetadata ( "TEST-SLAVE" ) )
2812	assertTrue ( check ( "a", input, output ) )
2813	assertEquals ( expResult, result )
2814	assertThat ( xml ( stream. toString ( ) ), XmlMatchers. conformsTo ( schema ( ) ) )
2815	assertEquals ( " 33 297\\n", found )
2816	assertTrue ( responseMessage. id > 100 )
2817	assertEquals ( STREAMING. ZK_EPHEMERAL_NODE_STATUS_GROUPS_DOWN, status )
2818	assertEquals ( ExpressionFactory. exp ( "path not in (1, 2, 3)" ), exp )
2819	assertEquals ( 3, springBeansConfig. getTargets ( ). size ( ) )
2820	assertEquals ( "S.a\\n", found )
2821	assertArrayEquals ( new long [ ] { 2, 2 }, result. getShape ( ) )
2822	assertEquals ( "no change in flaggedDates must not fire", 0, report. getEventCount ( "flaggedDates" ) )
2823	assertNotNull ( "ID should not be null", book. getId ( ) )
2824	assertEquals ( expected, actual )
2825	assertTrue ( kieBuilder. getResults ( ). hasMessages ( Level. ERROR ) )
2826	assertEquals ( false, check. isRequired ( ) )
2827	assertFalse ( i1. equals ( null ) )
2828	assertEquals ( "Failed applied BufferTransformation WithInvertedPositiveDistances", desiredGeometry, transformedGeometry )
2829	assertArrayEquals ( customDomains, _cut. _domains )
2830	assertTrue ( indexData [ i + 1 ] == offset )
2831	assertEquals ( null, result. getId ( ) )
2832	assertEquals ( "Value \\\\", result )
2833	assertEquals ( "<p>Hello</p>\\n<p>There</p>", divs. html ( ) )
2834	assertThat ( terminologyService. isSubclassOf ( c1, c2 ), is ( true ) )
2835	assertEquals ( expResult, result )
2836	Assert. assertEquals ( "0x" + s1, ki3. toString ( ) )
2837	assertThat ( exitStatus. exitStatus ( ), is ( equalTo ( ( byte ) 0x0 ) ) )
2838	assertFalse ( list. isEmpty ( ) )
2839	assertEquals ( "{\\"e_hi\\":\\"0\\",\\"e_he\\":\\"1\\",\\"e_ro\\":0,\\"i_hi\\":\\"1\\",\\"i_ce\\":\\"0\\",\\"i_pa\\":\\"0\\",\\"p_ei\\":5,\\"p_hi\\":50,\\"p_ii\\":100}", res )
2840	assertTrue ( matcher. lookingAt ( ) )
2841	assertEquals ( "public static final EntityProperty<TargetEntity> TO_ONE_REL = PropertyFactory.createEntity(\\"to_one_rel\\", TargetEntity.class);", definition )
2842	assertThat ( DateInterval. parseISO ( "2012-01-01/P775D" ), is ( expected ) )
2843	rule. assertScenarioEnded ( )
2844	assertEquals ( 4, sources. size ( ) )
2845	Assert. assertArrayEquals ( expected, target )
2846	assertTrue ( cluster. getClient ( ) instanceof LocalJobRunner )
2847	assertEquals ( "V1 Comment", wrapper. getComment ( ) )
2848	assertEquals ( expected, successors )
2849	assertThat ( outcomes. get ( 0 ), havingTag ( TestTag. withName ( "true" ). andType ( "security" ) ) )
2850	XMLAssert. assertXMLEqual ( new StringReader ( control ), test )
2851	assertEquals ( 22, found )
2852	assertThat ( processor. getTables ( ), is ( Arrays. asList ( DEFAULT_DATABASE + "." + TABLE ) ) )
2853	assertThat ( System. getProperty ( SYSTEM_PROPERTY ), is ( "original-value" ) )
2854	Assert. assertFalse ( this. manager. remove ( this. person1 ) )
2855	assertThat ( validator. validate ( parameters, "aaa" ), is ( "Aaa can not be greater than 3 characters." ) )
2856	assertEquals ( buf. toString ( ), "[\\"a\\", \\"b\\"]" )
2857	assertThat ( writer. toString ( ), is ( "{\\"recursiveList\\":[{\\"a\\":0},{\\"b\\":0},{\\"c\\":null},{\\"self\\":null}]}" ) )
2858	assertTrue ( "DataPoints list is non-null after setting null", null!= subject. getDataPoints ( ) )
2859	assertFalse ( c. isValidForSqlQuery ( ) )
2860	assertTrue ( "Constant permission mapper should be created", ops. exists ( TEST_CONSTANT_PERMISSION_MAPPER_ADDRESS ) )
2861	assertThat ( DatastoreUtil. getAsMap ( ds, null, Arrays. asList ( lock. key ) ). size ( ), is ( 0 ) )
2862	assertTrue ( xmlResult. contains ( "Gallia:string2" ) )
2863	assertThat ( target. createPath ( node1. getId ( ), node2. getId ( ) ). isEmpty ( ), is ( false ) )
2864	assertThat ( builder. getPatches ( ), hasItemInArray ( "ADD /status/message 'new and hot'" ) )
2865	assertEquals ( "<!DOCTYPE html PUBLIC \\"-//W3C//DTD HTML 4.01 Transitional//EN\\" \\"http://www.w3.org/TR/html4/loose.dtd\\">\\n<html>\\n<head>\\n<meta http-equiv=\\"Content-Type\\" content=\\"text/html; charset=UTF-8\\"></head>\\n<body>\\n</body>\\n</html>\\n", result )
2866	Assert. assertEquals ( 0, patients. size ( ) )
2867	Assert. fail ( )
2868	assertEquals ( 3, x. size ( ) )
2869	assertEquals ( 2, resp. getResponse ( ). size ( ) )
2870	assertEquals ( Instant. EPOCH. plus ( increment. multipliedBy ( updateCount ) ), clock. instant ( ) )
2871	assertTrue ( seen. add ( UUIDGenerator. nextString ( UUIDGenerator. TYPE4 ) ) )
2872	assertEquals ( handler. getDNodeList ( ). size ( ), 1 )
2873	assertEquals ( "vuosisata sitten", t. format ( new Date ( 0 ) ) )
2874	assertEquals ( "($200_1_R == '$200_1_R' AND $200_3_R == '$200_3_R' AND F05_3_R == 'enrichValue' AND ($200_1_R == $123))", transformed )
2875	ActionResultAssert. assertThat ( result )
2876	Assert. assertTrue ( "result had wrong width", result. getWidth ( ) == 3 )
2877	Assert. assertFalse ( policy. isResponseCacheable ( request, response ) )
2878	assertEquals ( "test", empty. getMessageType ( ) )
2879	assertEquals ( Collections. singleton ( TestEnum. TWO ), select. getSelectedItems ( ) )
2880	assertEquals ( 1, packetIn. getCount ( ) )
2881	assertThat ( CollectionNumbers. doubleArrayCopyOf ( array ), equalTo ( new double [ ] { 5, 1, 2, 3, 4, 0 } ) )
2882	assertTrue ( integerOnePresent )
2883	assertThat ( TestI18n. testMessage3. text ( "Test", "Message" ), is ( "Message Test Message" ) )
2884	assertEquals ( expected, destination. toString ( ) )
2885	assertTrue ( Arrays. equals ( ciob. getContent ( ), msg1 ) )
2886	Assert. assertNotNull ( "did not find collection", entry )
2887	Assert. assertEquals ( fastSqrt, computedSqrt, 0.0001f )
2888	assertCompletionInactive ( )
2889	assertEquals ( "Local repository", new URL ( "file:somewhere/localrepository/" ), config. getLocalRepository ( ). getURL ( ) )
2890	Assert. assertEquals ( 0, solution. getValue ( ),.0000001 )
2891	assertEquals ( "no-cache", wrapper. getFirstHeader ( "Cache-Control" ). getValue ( ) )
2892	assertEquals ( "English", newSubtitles )
2893	assertEquals ( "patient/", path )
2894	assertEquals ( json, gson. toJson ( value ) )
2895	assertEquals ( 1, result. length )
2896	assertEquals ( ROUTE, route )
2897	assertEquals ( "", result. get ( "namedCluster" ) )
2898	Assert. assertEquals ( ambiente, eventoRetorno. getAmbiente ( ) )
2899	assertTrue ( hasNoProjects )
2900	assertEquals ( "BLOB", sb. toString ( ) )
2901	assertEquals ( "Expected 4 results!", 4, n )
2902	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
2903	assertProcessInstanceCompleted ( processInstance )
2904	Assert. assertEquals ( "did not set use parallel to false", false, transferOptions. isUseParallelTransfer ( ) )
2905	assertTrue ( names. contains ( jobId ) )
2906	assertEquals ( AuthStatus. SEND_FAILURE, module. validateRequest ( messageInfo, client, null ) )
2907	Assert. assertEquals ( "true", result )
2908	Assert. assertNotNull ( rb )
2909	assertEquals ( 15, routeState. get ( 0 ) )
2910	assertTrue ( "atan2() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP )
2911	assertEquals ( expected, a. getModelPrefixEditor ( ) )
2912	assertNull ( "DEFAULT3", FixedDateFormat. createIfSupported ( options ) )
2913	assertE ( "�尖�尖�尖�尖��" + "��  �衡��" + "��  �衡��" + "��   ��" + "�尖�尖�尖�尖��" )
2914	Assert. assertTrue ( "Type1 font expected", FontProgramFactory. createFont ( afm, false ) instanceof Type1Font )
2915	assertEquals ( BuilderFactory. start ( ). add ( "a", new ObjectId ( 0x4e9d87aa, 0x5825b60b637815a6L ) ). build ( ), doc )
2916	assertFalse ( c1. getSourceId ( ). equalsIgnoreCase ( c2. getSourceId ( ) ) )
2917	assertSearch ( "6636", query, null, 0, 0 )
2918	assertFalse ( ref. isPresent ( ) )
2919	assertOnResponseAttachment ( f3mbServer, MAX_SIZE1 )
2920	assertEquals ( "WIDE Recip", hospitalModel. queryHospitalDataForSample ( "WIDE01010001" ). principalInvestigatorEmail ( ) )
2921	assertEquals ( "property should be gotten", testViewerId, sut. getViewerId ( ) )
2922	assertTrue ( itemKey. prefixOf ( key ) )
2923	assertEquals ( "Last seen message!= null ", 0, lsys. getDesiredYear ( dt ) )
2924	assertTrue ( SetStatementValidator. validate ( setters ) )
2925	assertTrue ( readMap. equals ( testMap ) )
2926	assertEquals ( V8. getUndefined ( ), result )
2927	Assert. assertEquals ( 402.092d, result1. get ( ), 0.001d )
2928	assertNotNull ( loggerContext. getObject ( CoreConstants. SHUTDOWN_HOOK_THREAD ) )
2929	assertNull ( result )
2930	assertEquals ( "fcr:metadata", relativizeSubpath ( rootObjectId, resourceId ) )
2931	assertEquals ( asList ( START, OFFER, OFFER_2, END ), events. collect ( ) )
2932	assertThat ( testIsValidAppProperty, is ( expectedIsValidAppProperty ) )
2933	Assert. assertNotNull ( count )
2934	assertEquals ( new PyishDate ( testDate ). toString ( ), rendered )
2935	assertNull ( weakRef. get ( ) )
2936	assertEquals ( "Expected JID to be shown as not cached", false, result )
2937	result. assertErrorFreeLog ( )
2938	assertPermanentCount ( playerA, "Azure Drake", 1 )
2939	assertEquals ( "SPADES", resultRecord. getField ( fd ). toString ( ) )
2940	assertThat ( session. createCriteria ( FakeAggregate. class ), notNullValue ( ) )
2941	assertCapturedMessage ( eventMessage ( "sess1", "/topic", "publishMessage1" ), eventMessage ( "sess2", "/topic", "publishMessage1" ) )
2942	assertNotNull ( xmlString )
2943	assertThat ( iconCaptor. getValue ( ), is ( ":ghost:" ) )
2944	assertEquals ( 0, cap. get ( 0 ) )
2945	assertTrue ( res. equals ( expected ) )
2946	Assert. assertEquals ( testExtension, actual )
2947	Assert. assertEquals ( "Incorrect duration", duration, res. getDuration ( ) )
2948	Assert. assertTrue ( dsDao. getDSInfo ( remoteDSAddress ). isUp ( ) )
2949	assertRoundtrip ( input )
2950	assertTrue ( target. getServices ( ). isEmpty ( ) )
2951	assertEquals ( pp. getValue ( ), "No handlers for address hello1" )
2952	assertFalse ( skillConstraint. fulfilled ( insertionContext ) )
2953	assertEquals ( AppConfigProperties. DEFAULT_BISERVER_BASE_URL, baseUrl )
2954	arrays. assertContainsOnlyNulls ( someInfo ( ), actual )
2955	assertTrue ( getNoErrorMsg ( ), result )
2956	assertEquals ( "/macro/edit", result )
2957	assertStateCount ( svc, Service. STATE. STARTED, 1 )
2958	assertEquals ( "x64", process. arch ( ) )
2959	assertEquals ( 2, repository. rules ( ). size ( ) )
2960	assertEquals ( "<h1>Hello </h1><h2>There <hgroup><h1>Another</h1><h2>headline</h2></hgroup> <hgroup><h1>More</h1><p>stuff</p></hgroup></h2>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
2961	assertNotNull ( "Social Groups (JSON STRING)", groups )
2962	assertExpectedProtectedPorts ( dai )
2963	assertEquals ( ImmutableMap. of ( 17, "foo", 4711, "bar" ), maps. oxen ( ) )
2964	assertEquals ( null, ex. getMessage ( ) )
2965	assertThat ( term, is ( "���炽�裤����" ) )
2966	assertArrayEquals ( data, ( float [ ] ) deserialize. readObject ( float [ ]. class ), 0.0001F )
2967	assertThat ( savedCalendar. getCalendarDataVersions ( ). size ( ), equalTo ( 2 ) )
2968	assertTrue ( t. verify ( t. getEndorsers ( ). get ( 0 ), key. getPublic ( ) ) )
2969	assertKernel ( kernel, ANNULUS, e )
2970	assertEquals ( "test", echo. echo ( "test" ) )
2971	assertFalse ( eventManager. removeListener ( this ) )
2972	assertFalse ( a. isNormal ( ( Throwable ) null ) )
2973	Assert. assertFalse ( secondTime )
2974	assertEquals ( o1. hashCode ( ), o2. hashCode ( ) )
2975	Assert. assertEquals ( 1, errors. size ( ) )
2976	assertEquals ( 1, views. size ( ) )
2977	assertEquals ( expected, actual, delta )
2978	Assert. assertTrue ( resultString. startsWith ( expected ) )
2979	assertEquals ( 3, ( ( ExampleClass ) gateway. getObject ( obj2. getName ( ) ) ). getField1 ( ) )
2980	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
2981	assertEquals ( "failed to post rating", 12, result. getCode ( ) )
2982	Assert. assertEquals ( THIRTEEN_FLOAT, pi. getThirteenFloat ( ) )
2983	assertEquals ( v21Employments1, v21Employments2 )
2984	Assert. assertTrue ( stackTrace. contains ( msg ) )
2985	Assert. fail ( )
2986	assertEquals ( "value", cacheEntry )
2987	Assert. assertEquals ( new URI ( "stuff:?param1&param2=stuff" ), uribuilder. build ( ) )
2988	result. assertIsNotSatisfied ( 1000 )
2989	assertNotEquals ( one, differentClass )
2990	assertEquals ( VALUE, jwt2. getJWTClaimsSet ( ). getSubject ( ) )
2991	assertThat ( underTest. isFrozen ( ), is ( false ) )
2992	Assert. assertEquals ( "The file is packaged as test-deps-c-1.0.0.jar", "test-deps-c-1.0.0.jar", file. getName ( ) )
2993	assertArrayEquals ( expected, list. toArray ( ) )
2994	Assert. assertEquals ( 0, q. getResultList ( ). size ( ) )
2995	Assert. assertTrue ( 2 + 2 == 4 )
2996	assertEquals ( 10, classUnderTest. getWidht ( ) )
2997	assertThat ( result, equalTo ( "LocalHost" ) )
2998	assertNotNull ( action )
2999	assertThat ( values, contains ( "other" ) )
3000	Assert. assertEquals ( 1, partitions. size ( ) )
3001	assertTrue ( expectedMaxPoolingWithPaddingActivation. compare ( poolingActivation, TOLERANCE ) )
3002	Assert. assertEquals ( "java.lang.Double", provider. getCanonicalDataTypeName ( Mockito. mock ( Column. class ) ) )
3003	Assert. assertEquals ( "HELLO WORLD", result )
3004	assertPutAndGet ( map )
3005	assertTrue ( Arrays. equals ( readBytes, message1. getBytes ( ) ) )
3006	Assert. assertTrue ( isEqual ( distance, 1.0 ) )
3007	Assert. assertEquals ( output, outcome )
3008	Assert. assertEquals ( "(124_125inv3)", inv. toHGVSString ( ) )
3009	assertEquals ( getFailureMessage ( ), 0.0025851, distance, 1e-7 )
3010	Assert. assertEquals ( "abc", html )
3011	assertEquals ( expected, actual )
3012	assertThat ( backend. isEmpty ( ), is ( true ) )
3013	assertEquals ( "alpha.1", v2. toString ( ) )
3014	Assert. assertEquals ( "Hello Kermit!", result. trim ( ) )
3015	assertEquals ( null, DateUtil. parse ( dateString, formatString ) )
3016	Assert. assertEquals ( element. getText ( ), "click me" )
3017	Assert. assertTrue ( Files. isSameFile ( path, path ) )
3018	Assert. assertEquals ( state, retrievedState )
3019	assertTrue ( e. getMessage ( ). contains ( badCell ) )
3020	assertNotNull ( mpp )
3021	assertEquals ( new Character ( 'a' ), TYPE_HANDLER. getResult ( rs, 1 ) )
3022	assertThat ( event. getPlatform ( ), is ( sameInstance ( mockPlatform ) ) )
3023	assertEquals ( Arrays. asList ( PropertiesMappingConfiguration. DEFAULT_STATIC_RESOURCE_MAPPING_LOCATION, expected ), mappingFiles )
3024	assertTrue ( xml. contains ( "FaceletException" ) )
3025	assertEquals ( ROUTE_KEY, instanceIdentifier. firstKeyOf ( LabeledUnicastRoute. class ) )
3026	assertObjectEquals ( "[{f:'a'},{f:'b'},{f:'c'},{f:'d'},{f:'e'}]", p. run ( bs, in, sa ) )
3027	Assert. assertEquals ( 1, compareResult )
3028	assertEquals ( 25, diff. getValue ( ). get ( ) )
3029	Assert. fail ( "Expected ConfigurationException" )
3030	assertEquals ( descriptor, descriptor2 )
3031	assertThat ( "Count of customer", res, is ( 2 ) )
3032	assertNull ( form. getFieldValue ( ) )
3033	assertTrue ( _comp. isEquals ( json, expected ) )
3034	assertNotNull ( result )
3035	assertEquals ( "87030020", String. format ( "%#s", cep ) )
3036	Assert. assertArrayEquals ( expected, actual )
3037	assertNotNull ( modelDTOs )
3038	assertKernel ( kernel, ANNULUS, e )
3039	assertEquals ( "uuuh UTF-8 {a=[b]}", post. toString ( ) )
3040	assertEquals ( "this is the book title", source. getValue ( "Book/name" ) )
3041	Assert. fail ( "fs.azure.shellkeyprovider.script is not specified, we should throw" )
3042	assertThat ( tested, equalTo ( 0L ) )
3043	Assert. assertEquals ( "did not reconstitute path correctly", targetPath, actual )
3044	Assert. assertEquals ( 3, vertices. size ( ) )
3045	assertEquals ( "fileName-" + HASH + ".js", result )
3046	assertEquals ( "", BatchParserCommon. removeEndingCRLF ( new Line ( line, 1 ) ). toString ( ) )
3047	Assert. fail ( e. getMessage ( ) )
3048	assertEquals ( "host3 is not a valid hostname", result )
3049	assertTrue ( dao. selectAll ( ). size ( ) == 1 )
3050	assertEquals ( Result. PASS, nouser. apply ( item ) )
3051	assertThat ( the ( generatedGraph ), isEquivalentTo ( the ( EXPECTED_GRAPH ) ) )
3052	assertThat ( hBaseAdmin. tableExists ( "mytable" ), is ( false ) )
3053	Assert. assertEquals ( attendances. size ( ), validator. validate ( EntityNames. ATTENDANCE, attendances ). size ( ) )
3054	Assert. assertEquals ( expectedCrossProduct, crossProduct )
3055	assertThat ( exists, is ( true ) )
3056	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
3057	assertThat ( flashMap, is ( nullValue ( ) ) )
3058	assertEquals ( "jdbc:h2:mem:test;MODE=ORACLE", embeddedDatabaseRule. getConnectionJdbcUrl ( ) )
3059	assertEquals ( "GBP 1.11", test. toString ( ) )
3060	assertThat ( terminologyService. isSubclassOf ( c1, c2 ), equalTo ( false ) )
3061	assertNull ( entryRelationship )
3062	Assert. assertEquals ( 1000, count. getValue ( ) )
3063	assertEquals ( "local", StaticFieldTestObject1. myTestField3 )
3064	Assert. assertEquals ( 0, scores. getScore ( ) )
3065	assertEquals ( 10, query ( ). from ( employee ). where ( sq1. exists ( ) ). fetchCount ( ) )
3066	assertEquals ( BOOLEAN, v8Object. getType ( "key" ) )
3067	assertEquals ( "&curren;1,454,100.34", I. longToCurrencyString ( 145410034 ) )
3068	assertTrue ( rsp. toString ( ), rsp. get ( FAILURE_DESCRIPTION ). asString ( ). contains ( ControllerLogger. MGMT_OP_LOGGER. managementResourceNotFound ( CHILD_B_ADDRESS ). getMessage ( ) ) )
3069	assertTrue ( verifier. isValid ( interceptor, controllerMethod, controllerInstance, constraints ) )
3070	assertNotNull ( "Instance has not been created correctly.", eventSourceTopology )
3071	PositionCollectorTestUtil. assertEmpty ( collector )
3072	Assert. assertEquals ( 800, synchronization. getOrder ( ) )
3073	assertEquals ( models, actual )
3074	assertNotNull ( messages. getMessage ( MESSAGE_ID. INSERT_CARD_QUESTION ) )
3075	assertThat ( response. getEntity ( ), CoreMatchers. < Object > equalTo ( Collections. singletonList ( userRoleList ) ) )
3076	out. assertIsSatisfied ( )
3077	Assert. assertEquals ( Base64. encodeBase64String ( value ), f. func ( value ) )
3078	ctx. assertEquals ( result. size ( ), result. next ( ). size ( ) )
3079	assertEquals ( transactionCompletion, senderSupplier. get ( ). sendFiles ( ) )
3080	assertTrue ( order. isDiscontinued ( DateUtils. parseDate ( "2014-11-01 11:11:13", DATE_FORMAT ) ) )
3081	assertEquals ( expected, elements )
3082	assertEquals ( "Serialised data set", SourceXML. MASKED_SAMPLE, dummyXmlOutputStreamProvider. getXmlString ( ). trim ( ) )
3083	assertEquals ( 1, list. size ( ) )
3084	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
3085	assertEquals ( "!yi2\\n", sWriter. toString ( ) )
3086	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff34_" ) )
3087	assertEquals ( StringTools. trimToLength ( "9 sierpnia 1991 roku telewizja transmituje epokowy eksperyment: dw贸ch �mia�k贸w - Maks (Jerzy Stuhr) i Albert (Olgierd �ukaszewicz), zostaje poddanych hibernacji. Podczas ich snu wybucha wojna nuklearna. Uczestnicy eksperymentu budz� si� w 2044 roku. Od opiekuj�cej si� nimi doktor Lamii dowiaduj� si�, 偶e w ci�gu ostatnich kilkudziesi�ciu lat geny m�skie zosta�y ca�kowicie zniszczone promieniowaniem, a oni
3088	assertEquals ( true, wizard. canComplete ( ) )
3089	assertEquals ( "middleN", person. getMiddleName ( ) )
3090	assertFalse ( "our host shouldn't have set our attribute", retAttr. contains ( attributes. get ( 0 ) ) )
3091	assertEquals ( EarlyHints. MESSAGE, ri. getDescription ( ) )
3092	assertThat ( new ValidSudoku ( ). isValidSudoku ( board ), Matchers. is ( true ) )
3093	assertEquals ( 2, nodeUnits. size ( ) )
3094	assertEquals ( "(Object obj0, Object obj1)String", sig. toString ( ) )
3095	assertEquals ( kafkaStore. getKafkaStoreReaderThread ( ). getConsumerProperty ( org. apache. kafka. clients. consumer. ConsumerConfig. GROUP_ID_CONFIG ), groupId )
3096	assertFalse ( handler. test ( null, null, Direction. In, null, null ) )
3097	Assert. assertEquals ( "Value is incorrect", map, value )
3098	Assert. assertEquals ( "OK", reference. get ( ). getAttachment ( Http2Client. RESPONSE_BODY ) )
3099	assertThat ( css, equalTo ( "body { background-color: lightblue; }" ) )
3100	assertTrue ( "It should be true - HDFS host: " + config. getNamedCluster ( ). getHdfsHost ( ), ncPropertiesNotNullOrEmpty )
3101	assertTrue ( problem )
3102	assertThat ( getCreatedPod ( ). getSpec ( ). getNodeSelector ( ), hasEntry ( "os_arch", "x86_64" ) )
3103	Assert. assertTrue ( messageListener. isEmpty ( ) )
3104	Assert. assertEquals ( pullRequestActivity, parsedPullRequestActivity )
3105	assertEquals ( first, second )
3106	assertEquals ( dlsn, FutureUtils. result ( writer. write ( record ) ) )
3107	assertTrue ( converter. canConvert ( CommentAction. class ) )
3108	assertEquals ( "Mark is 37", result. getValue ( ) )
3109	assertTrue ( ( tchannel. getListeningHost ( ). matches ( "^\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+$" ) ) )
3110	Assert. assertTrue ( exception )
3111	Truth. assertThat ( capturedCallOptions. getValue ( ). getDeadline ( ) )
3112	Assert. assertNotNull ( "AdaptiveScalarEncoder class is null", ase )
3113	assertFalse ( ps. exists ( ) )
3114	assertEquals ( newLastname, customer. getLastName ( ) )
3115	assertDelete ( )
3116	Assert. assertTrue ( ( ( OperationFlow ) operation. operations. get ( 0 ) ). operations. get ( 0 ) instanceof DeleteFromWorldOperation )
3117	assertNull ( mdcValueStr )
3118	assertOut ( "var /** @type {RegExp} */ a = /[^\\\\s+(\\\\w+)(?:\\\\s*=\\\\s*(\\".*?\\"|'.*?'|[\\\\w\\\\.]+))?/sg" )
3119	assertTrue ( "exact match on name should run", exactFilter. shouldRun ( testMethod ) )
3120	this. assertEdgesOkResponseJsonStructure ( 0, 0, response )
3121	assertThat ( value, Is. < Object > is ( true ) )
3122	assertEquals ( of ( new Started ( uri, 1l ), Closed. INSTANCE ), listener. getEventLog ( ) )
3123	assertFalse ( success )
3124	assertThat ( inputStream, notNullValue ( ) )
3125	assertThat ( out, containsString ( "<birthDate value=\\"2012-01-02\\"/>" ) )
3126	assertEquals ( "Expected 10 results!", 10, n )
3127	assertThat ( pattern, specificPart ( is ( ",\\"type\\":\\"log\\",\\"logger\\":\\"%replace{%logger}{\\"}{\\\\\\\\\\"}\\",\\"thread\\":\\"%replace{%thread}{\\"}{\\\\\\\\\\"}\\",\\"level\\":\\"%p\\",\\"categories\\":%categories,\\"msg\\":%jsonmsg{escape},%ctxp{excluded-field},\\"custom_fields\\":{%cf{custom-field}},\\"stacktrace\\":%stacktrace" ) ) )
3128	assertEquals ( typedChannelFactory_, channel. MyFactory ( ) )
3129	assertMappedFieldValueIs ( this. resourceTargetedByMapping )
3130	assertTrue ( population. size ( ) == 100 )
3131	assertIterationsEqual ( expected, Views. iterable ( shuffled ) )
3132	Assert. assertTrue ( isArchived )
3133	assertEquals ( 2, i. get ( ) )
3134	Assert. areEqual ( 1, se. getInt ( 1 ), "数据验证" )
3135	Assert. assertFalse ( errors. hasFieldErrors ( "gender" ) )
3136	Assert. assertEquals ( "The\\t1\\nbrown\\t1\\nfox\\t2\\nhas\\t1\\nmany\\t1\\n" + "quick\\t1\\nred\\t1\\nsilly\\t1\\nsox\\t1\\n", result )
3137	assertEquals ( index1, index1Duplicate )
3138	JSONAssert. assertEquals ( "Message", "{id:12345}", actual, false )
3139	assertFalse ( query ( func. args ( ) ). isEmpty ( ) )
3140	assertEquals ( 6, dataMgr. getCommandHistory ( ). size ( ) )
3141	assertThat ( "Locations created with identical paths and different properties must not be equal", locationA1, not ( locationA2 ) )
3142	Assert. assertEquals ( "aggregateCircuits should return same given circuits when aggregation is disabled", notAggregated, returned )
3143	assertEquals ( "um inteiro", actual )
3144	assertFocusedCell ( 1, 4 )
3145	assertNotNull ( result )
3146	assertArrayEquals ( new long [ ] { 1, 10 }, outArr. shape ( ) )
3147	assertNotNull ( Participant. fetcher ( "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "MBXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
3148	assertThat ( baos. toString ( ), endsWith ( String. format ( "0m0.000s%n" ) ) )
3149	assertEquals ( 4, v )
3150	assertTrue ( normalizedProbability > 0 && normalizedProbability <= 1 )
3151	Assert. assertEquals ( expResult, result )
3152	Assert. assertEquals ( "�注�� 12 �拽�转", t. format ( new Date ( System. currentTimeMillis ( ) + 1000 * 60 * 12 ) ) )
3153	assertThat ( results. hasNext ( ), equalTo ( false ) )
3154	assertFalse ( updateResults. hasMessages ( Level. ERROR ) )
3155	assertNoTaskTriggered ( )
3156	assertEquals ( "the URL should be http://localhost/api/rest/v1/students/1,2,3,4,5", "http://localhost/" + PathConstants. API_SERVER_PATH + "/students/1,2,3,4,5", url. toString ( ) )
3157	assertNotEmptyAndClear ( writer )
3158	assertNotNull ( resolver )
3159	Assert. assertEquals ( actual, "yy-mm-dd" )
3160	assertTrue ( impl. mustRevalidate ( entry ) )
3161	assertEquals ( response. get ( 0 ), testResponse. get ( 0 ) )
3162	assertEquals ( 24, methods. size ( ) )
3163	assertEquals ( "{\\"statements\\" : [{\\"statement\\" : \\"MATCH (n) WHERE id(n) IN {ids}\\",\\"parameters\\":{\\"ids\\":[1,2,3]}}]}", json )
3164	assertEquals ( "xsd:float", prefixedName )
3165	Assert. assertEquals ( "\\"v\\"\\n\\"1\\n1\\"\\n", writer. toString ( ) )
3166	assertEquals ( xmlReturn, xmlString )
3167	assertFalse ( dataset. asDatasetGraph ( ). find ( ). hasNext ( ) )
3168	assertEquals ( expectedClass, actualClass )
3169	Assert. assertEquals ( setA. hashCode ( ), setB. hashCode ( ) )
3170	assertEquals ( "Should match", 1, count. longValue ( ) )
3171	assertEquals ( 1, expectedLinks. size ( ) )
3172	Assert. assertEquals ( ADParagraphStreamTest. NUM_SENTENCES, count )
3173	assertEquals ( 2, result. getSize ( ) )
3174	assertThat ( watchers. of ( question ), not ( empty ( ) ) )
3175	test. assertOutput ( "A", input, "D", output )
3176	runner. assertAllFlowFilesTransferred ( SelectHive_1_1QL. REL_FAILURE, 1 )
3177	assertEquals ( match, number - matcheCounts [ 0 ] - matcheCounts [ 1 ] + matcheCounts [ 2 ] )
3178	assertTrue ( topLevel == MongoTopLevel. ARRAY )
3179	Assert. assertEquals ( "width=340 height=200\\r\\n", readText ( decoder ) )
3180	Assert. assertTrue ( verifyTest ( crlBuilder ) )
3181	assertTokensEqual ( of ( doubleQtd ( "text 1" ), Tokens. PLUS, integer ( 10 ) ), sync. tokens ( ) )
3182	assertEquals ( 3600., Time. parseTimeToSeconds ( time ), 0.01 )
3183	Assert. assertNull ( "List is not null", list )
3184	Assert. assertEquals ( 3, instance. size ( ) )
3185	assertThat ( intervals, is ( expected ) )
3186	Assert. assertTrue ( autoSaveService. hasDirtyConfig ( factory. annotatedPath ( ). create ( ) ) )
3187	assertFalse ( result )
3188	assertEquals ( 10, template. getMetaData ( context. getEntityResolver ( ) ). getStatementFetchSize ( ) )
3189	assertThat ( target2. getSubscriberId ( ), is ( "subscriber_id" ) )
3190	assertEquals ( "Select with not null clause", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
3191	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPath, cmpPath, destinationFolder, diff ) )
3192	assertEqualHQL ( "allen ", sb. toString ( ) )
3193	assertEquals ( resp. getCode ( ), 204 )
3194	assertEquals ( "", r1. toString ( ) )
3195	Assert. assertArrayEquals ( Planet. values ( ), planetsReflected )
3196	Assert. assertEquals ( "ITEM 001Product             0005000005\\n", result )
3197	assertFalse ( BooleanIndexing. and ( array, Conditions. greaterThan ( 0f ) ) )
3198	assertEquals ( "Columns size is wrong", 2, columns. size ( ) )
3199	assertEquals ( "/_snapshot/leeseohoo,kangsungjeon", getSnapshotRepository. getURI ( ElasticsearchVersion. UNKNOWN ) )
3200	assertTrue ( listChesse. getTotalAmount ( ) == 0 )
3201	assertEquals ( expectedResult, OSValidator. isWindows ( ) )
3202	Assert. assertEquals ( String. class, doc2. getContentField ( "out" ). getClass ( ) )
3203	assertEquals ( expectedClassPath, classPath. asArgumentString ( ) )
3204	assertEquals ( Status. FORBIDDEN, status )
3205	assertTrue ( typedArray. isAvailable ( ) )
3206	assertNull ( result )
3207	assertEquals ( 30, ( int ) new AcceptsLambda < Integer > ( ). accept ( x :: addInts ) )
3208	assertNotNull ( result )
3209	Assert. assertEquals ( expect_sql, sql )
3210	assertFalse ( obj. containsKey ( "foo" ) )
3211	assertEquals ( response. getStatus ( ), STATUS200 )
3212	Assert. assertEquals ( 1, an. analyze ( new CandidateNode ( new CandidateRule ( "test", rule ), nnode ), results ). size ( ) )
3213	assertNotNull ( result )
3214	assertTrue ( "message should be authenticated", verifySaltedMAC ( message, mac ) )
3215	assertThat ( getPodSpec ( jobSpec ). getRestartPolicy ( ), is ( "Never" ) )
3216	assertTrue ( "hyperlink as rendering comp must be PainterAware", provider. getRendererComponent ( null ) instanceof PainterAware )
3217	Assert. assertTrue ( fs. exists ( target ) )
3218	Assert. assertEquals ( "Rule computation was called " + n + " times", 1, n )
3219	assertNotNull ( passages )
3220	Assert. assertTrue ( pss. toString ( ). contains ( "123" ) )
3221	assertTrue ( clientWrapper. add ( "test", 1000, "value", transcoder ) )
3222	assertEquals ( v2, v1 )
3223	Assert. assertEquals ( 0, analyser. getTimeWindowViolationAtActivity ( route. getStart ( ), route ), 0.01 )
3224	Assert. assertFalse ( encounter. equals ( null ) )
3225	assertNull ( result )
3226	assertFalse ( idA. equals ( idB ) )
3227	Assert. assertEquals ( 412, stringResponse. getStatus ( ) )
3228	assertNull ( presenter. identifier )
3229	arrays. assertDoesNotHaveDuplicates ( description, null )
3230	assertEquals ( 2, smsd1. getAllAtomMapping ( ). size ( ) )
3231	Assert. assertEquals ( 6, p. i ( 1, new C2 ( ) ) )
3232	assertEquals ( 9, collect. size ( ) )
3233	assertHtml ( childrenHtml, "children=2" )
3234	Assert. assertEquals ( count, chronicle. getNumEvents ( 0, count * period ) )
3235	Assert. assertNull ( part )
3236	assertNotNull ( Certificate. fetcher ( "FLXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
3237	assertEquals ( "Amount is GBP12.50", sub. replace ( "Amount is ${code}${amount}" ) )
3238	assertEquals ( "", ui. getMonthHeaderHeight ( ), monthBoundsLToR. height )
3239	Assert. assertEquals ( 1, updates. getOperations ( ). size ( ) )
3240	assertEquals ( latch. getCount ( ), 0 )
3241	assertThat ( actual, is ( "server1.mycompany.com" ) )
3242	assertTrue ( algorithm. shouldRetry ( attempt ) )
3243	assertEquals ( "John Doe: 48", RecordPath. compile ( "concat(/firstName,'', /lastName, ': ', 48)" ). evaluate ( record ). getSelectedFields ( ). findFirst ( ). get ( ). getValue ( ) )
3244	Assert. assertEquals ( value, tested. getTypes ( ) )
3245	assertEquals ( 0, listener. updatedInjectedFilters. size ( ) )
3246	assertThat ( "getValue", node. getValue ( ), is ( false ) )
3247	assertEquals ( "2 > 3", expr. getParameterValue ( ) )
3248	Assert. fail ( "Missing required input" )
3249	assertTrue ( ContextDataFactory. createContextData ( 2 ) instanceof FactoryTestStringMap )
3250	assertEquals ( 2, map. size ( ) )
3251	assertEquals ( expResult, result, 1 )
3252	assertEquals ( asSet ( "nonExistentId", "xForm:nonExistentId", "ySubview:nonExistentId" ), resolvedIds )
3253	assertEquals ( g1, g2 )
3254	Assert. assertNotNull ( node )
3255	assertFalse ( TeiidURL. isValidServerURL ( SERVER_URL ) )
3256	assertEquals ( true, CollectionUtils. isEmpty ( coll ) )
3257	assertEquals ( 4096, testInt )
3258	assertEquals ( "testuuid", sut. transform ( "/blah/whatever/someversionhere_uuid_testUUID.css" ) )
3259	assertEquals ( 404, ( int ) caller. getSentError ( ) )
3260	assertSame ( System. getenv ( "PATH" ), value. getValue ( ) )
3261	assertNotNull ( Files. getFileAttributeView ( gfs. getPath ( "/file.txt" ), FileAttributeView. class ) )
3262	assertEquals ( "select distinct(rootEntity) from org.dayatang.domain.entity.MyEntity as rootEntity  " + "where rootEntity.name = :rootEntity_name" + criterion1. hashCode ( ) + " " + "and rootEntity.post is empty " + "and rootEntity.birthday is not null " + "and rootEntity.age in :rootEntity_age" + criterion2. hashCode ( ) + " " + "order by rootEntity.name asc", instance. eq ( "name", "abc" ). isEmpty ( "post" ). notNull ( "birthday" ). in ( "age", Arrays. asList ( 1, 2 ) ). asc ( "name" ). getQueryString ( ) )
3263	assertTrue ( events. size ( ) == 5 )
3264	assertTrue ( readIter. getSample ( ) == i )
3265	Assert. assertEquals ( "abc", html )
3266	assertNotEquals ( "expect different InstanceId values", instanceId1, instanceId2 )
3267	assertEquals ( tree1, tree1. getUndoObject ( ) )
3268	assertTrue ( "IllegalArgumentException expected", ex. getCause ( ) instanceof IllegalArgumentException )
3269	assertOut ( "public class A {\\n\\tpublic static const A:int = 42;\\n\\t" + "protected static const B:Number = 42;\\n\\tprivate static const " + "C:Number = 42;\\n\\tfoo_bar static const C:String ='me' + 'you';\\n}" )
3270	assertEquals ( secondPage. getUrl ( ). getPath ( ), getContextPath ( ) + "/page" )
3271	assertEquals ( testValueCanonical, rval )
3272	assertTrue ( fn. apply ( 1 ). isFailure ( ) )
3273	assertEquals ( PCEPErrors. LSP_NOT_PCE_INITIATED, this. errorsSession1. get ( 0 ) )
3274	assertEquals ( expectedSignature, mapResourceType. getGenericSignature ( ) )
3275	Assert. assertNull ( "Failure expected on an unauthorized user", valResult )
3276	assertEquals ( "" + expected, this. testServer. decodePercent ( input ) )
3277	assertToken ( profile, token )
3278	Assert. assertEquals ( getExpectedDelegationTokenCount ( ), delTokens. size ( ) )
3279	assertThat ( result, isEmptyString ( ) )
3280	assertEquals ( "with survey1 as (select survey1.NAME, survey1.NAME2, survey1.ID\\n" + "from SURVEY survey1)\\n" + "(select survey2.NAME, survey2.NAME2, survey2.ID\\n" + "from SURVEY survey2)\\n" + "union\\n" + "(select survey3.NAME, survey3.NAME2, survey3.ID\\n" + "from SURVEY survey3)", query. toString ( ) )
3281	assertThat ( getMatchingContainerEnv ( domainPresenceInfo, jobSpec ), allOf ( hasItem ( configMapKeyRefEnvVar ), hasItem ( secretKeyRefEnvVar ), hasItem ( fieldRefEnvVar ) ) )
3282	assertEquals ( h, TextUtil. stripNewlines ( out ) )
3283	assertNull ( event )
3284	Assert. assertEquals ( 1.0, correlation. correlation ( xArray, yArray ), Double. MIN_VALUE )
3285	Assert. assertTrue ( "Expecting 2 members of association set. Got: " + String. valueOf ( ancestors. size ( ) ), ancestors. size ( ) == 2 )
3286	assertEquals ( cVector, normalizedCVector )
3287	assertArrayEquals ( new byte [ ] { 1 }, Files. readAllBytes ( symLink2 ) )
3288	assertNotNull ( "pre 1.8 storageInfo should return non null retention policy", retentionPolicy )
3289	assertTrue ( "Generate JS Fail", jsFile. exists ( ) )
3290	assertEquals ( "{" + newLine ( ) + "    with ($p) { setAge($p.getAge() + 1) };" + newLine ( ) + "}", printConstraint ( expression ) )
3291	assertEquals ( expectedJson, message. toJson ( ) )
3292	assertSerializable ( new ArtifactDescriptorException ( result ) )
3293	assertEquals ( "wrong field name", "Currency", dd. getFieldName ( 15 ) )
3294	assertEquals ( err, "Directory, 'EasyMock for class java.io.File' does not exist; and cannot be created" )
3295	assertEquals ( StatusCode. NAMESPACE_NOT_FOUND, response. getCode ( ) )
3296	this. assertGet ( "relationshiptypeimplementations/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Frelationshiptypeimplementations%252Ffruits/kiwi_implementation/", "entityimplementations/relationshiptypeimplementations/initial.json" )
3297	assertEquals ( insertNum, count )
3298	assertAnnotations ( 2, Quantity. class, new TestQuantity ( 0, "25ml", 25.0, "ml", 0.000025, "m^3", VOLUME ), new TestQuantity ( 1, "35 millilitres", 35, "ml", 0.000035, "m^3", VOLUME ) )
3299	assertTrue ( entity. getId ( ) > 0 && entity. getCreationDate ( ) == null )
3300	assertEquals ( "Johny", value )
3301	Assert. fail ( )
3302	assertFalse ( voter. voteMatch ( affiliation, organization ) )
3303	assertNoneEqual ( otherVoFqans )
3304	assertConstraintViolationToOneValidation ( constraintViolations )
3305	assertTrue ( false )
3306	assertEquals ( HttpServletResponse. SC_OK, resp. getStatus ( ) )
3307	assertEquals ( "checker should return 'enabledStatus' string", "enabledStatus", checker. run ( ) )
3308	assertNull ( dao. read ( association. getHandle ( ) ) )
3309	Assert. assertEquals ( sourceCardinality, subplanCtx. getOutputCardinality ( 0 ) )
3310	observer. assertObservations ( "20", PhaseId. APPLY_REQUEST_VALUES, PhaseId. INVOKE_APPLICATION, PhaseId. PROCESS_VALIDATIONS, PhaseId. RENDER_RESPONSE, PhaseId. RESTORE_VIEW, PhaseId. UPDATE_MODEL_VALUES )
3311	Assert. assertTrue ( ( ( LocatorTargetSelector ) client. getConduitSelector ( ) ). getStrategy ( ) instanceof DefaultSelectionStrategy )
3312	assertEquals ( 84, id3tag. getBPM ( ) )
3313	assertTrue ( theSize. getClassInformation ( ) instanceof SizeClassInformation )
3314	assertTrue ( handled )
3315	assertThat ( p. type, is ( Packet. CLOSE ) )
3316	assertEquals ( "0 days, 00:05:12", howLongFromNow )
3317	assertTrue ( valid )
3318	Assert. assertNull ( pattern )
3319	assertNull ( new Patterns ( ). getPattern ( entityId ) )
3320	assertEquals ( "The first state on first page is not correct", FIRST_STATE_FIRST_PAGE, actual )
3321	assertEquals ( "/genPath", path )
3322	assertThat ( stepListener. getCurrentTestOutcome ( ). getTestSteps ( ). get ( 0 ). getDescription ( ), is ( "final title" ) )
3323	CustomAsserts. assertEquals ( definition, expected, actual )
3324	assertEquals ( 550000, safe. get ( ) )
3325	assertFalse ( result. hasFailures ( ) )
3326	assertEquals ( LocalDate. of ( 2012, 6, 4 ), test )
3327	assertThat ( matcher. matches ( "foo" ), is ( true ) )
3328	assertEquals ( 0, records. size ( ) )
3329	assertEquals ( field. getLabel ( ), "label" )
3330	assertTrue ( processInstance. getState ( ) == ProcessInstance. STATE_ACTIVE )
3331	Assert. assertEquals ( message. getSourceString ( ), translated )
3332	assertThat ( description. toString ( ), is ( "<3> row(s) in sheet \\"Sheet1\\"" ) )
3333	assertTrue ( isFocusInsideElement ( radioButtonGroup2 ) )
3334	assertEquals ( taskService. createTaskQuery ( ). singleResult ( ). getTaskDefinitionKey ( ), "afterBpmnError" )
3335	assertNotNull ( book )
3336	assertEquals ( expecting, result )
3337	assertThat ( value. isPresent ( ), is ( equalTo ( false ) ) )
3338	assertThat ( result, is ( Collections. singletonList ( "setMyField" ) ) )
3339	assertThat ( testValues, is ( expectedValues ) )
3340	assertThat ( response, containsString ( "aut-num:        AS4294967207" ) )
3341	Assert. assertEquals ( c, results. next ( ) )
3342	assertEquals ( "", result )
3343	assertEquals ( null, result )
3344	assertThat ( target. getConvNetworkId ( nwId ), is ( "network01" ) )
3345	assertFalse ( connection. connect ( ) )
3346	assertEquals ( mappedEntityID, event. getEntityForNaming ( false, true, true ) )
3347	assertEquals ( 4, count )
3348	Assert. assertFalse ( bpInfo1. equals ( bpInfo2 ) )
3349	Assert. assertEquals ( Syntax. XWIKI_2_1. toIdString ( ), syntaxId )
3350	assertEquals ( "first", data )
3351	Assert. assertTrue ( ctx. getResult ( ) )
3352	assertEquals ( expectedMessage, result )
3353	assertEquals ( r1, r2 )
3354	assertTrue ( sink. getInvalidConfiguration ( ) )
3355	assertEquals ( expected, actual )
3356	assertEquals ( OffsetDate. of ( LocalDate. of ( 2007, 8, 15 ), OFFSET_PONE ), t )
3357	assertThat ( unlocked. getInteger ( ), equalTo ( - 2 ) )
3358	assertNotNull ( entity. getId ( ) )
3359	assertNull ( result )
3360	Assert. assertFalse ( result )
3361	assertCoordinates ( 1, HEIGHT - 1 )
3362	Assert. assertFalse ( authorizeInteraction )
3363	assertEquals ( Arrays. asList ( 42, 43 ), list )
3364	assertTrue ( me. isNewMsg ( ) )
3365	assertEquals ( "", result )
3366	Assert. assertTrue ( "Stub exception was not forwarded.", stubFailed )
3367	assertEquals ( expectedBounds, actualBounds )
3368	Assert. assertEquals ( 150, terminatedAfter )
3369	Assertion. assertEquals ( loadedDataSet, actualDataSet )
3370	assertBoard ( "�尖�尖�尖�尖��\\n" + "��***��\\n" + "��*�衡�尖��\\n" + "��***��\\n" + "�尖�尖�尖�尖��\\n" )
3371	assertNull ( converter. getAsObject ( facesContext, new UIPanel ( ), null ) )
3372	assertEquals ( "Parser error: DeviceProvisioningServiceName mismatch!", expected, actual )
3373	assertTrue ( currentProjectPathProvider. getValue ( ). isEmpty ( ) )
3374	AssertAnnotations. assertSentence ( sentences, select ( jcas, Sentence. class ) )
3375	Assert. assertEquals ( true, booleanConstant. evaluate ( null ) )
3376	Assert. assertEquals ( path, "dir" + File. separatorChar + "dir2" )
3377	Assert. assertTrue ( m. get ( ks1. getKeyspaceMetaData ( ). getPartitioner ( ). partition ( "row1" ), "column2" ) instanceof TombstoneValue )
3378	AssertionUtils. multiAssertEquals ( createAsDocument11, response7. getResponseObject ( ) )
3379	assertAxisEquals ( timeInterval, new ArrayDouble ( 1.0 / 18.0, 6.0 / 18.0, 11.0 / 18.0, 16.0 / 18.0 ), Arrays. asList ( TimeScalesTest. create ( 2014, 12, 24, 22, 59, 59, 990 ), TimeScalesTest. create ( 2014, 12, 24, 22, 59, 59, 995 ), TimeScalesTest. create ( 2014, 12, 24, 23, 0, 0, 0 ), TimeScalesTest. create ( 2014, 12, 24, 23, 0, 0, 5 ) ), Arrays. asList ( "2014/12/24 22:59:59.990", ".995", "23:00:00.000", ".005" ), timeAxis )
3380	Assert. assertEquals ( "A reference beginning with '*' should work", 6.0, calc. evaluate ( "* this is a test,ref2,*" ), 0.0 )
3381	assertThat ( path. getString ( NO_OP_ENCODER ), is ( "/{http://www.modeshape.org/1.0}a/{}b/{http://www.modeshape.org/1.0}c/../{}d/./{http://www.modeshape.org/1.0}e/../.." ) )
3382	Truth. assertThat ( outputStream. toString ( ) )
3383	assertEquals ( pathConnector. getPropertyPath ( ), "foo.bar" )
3384	assertTrue ( "Accepts a method that returns a subclass of Page", interceptor. accepts ( resourceMethodThatReturnsPageSubclass ) )
3385	Assert. assertTrue ( errors. hasFieldErrors ( "retireReason" ) )
3386	assertEquals ( 80, uniqueWords )
3387	Assert. assertFalse ( new ProcessorDecorator ( processor ). isMinimize ( ) )
3388	assertThat ( replaced, is ( newEditRelation ) )
3389	assertTrue ( HttpTestUtils. semanticallyTransparent ( resp2, result ) )
3390	assertEquals ( "[LOW [Relational Planner] hello pm1 - world Unknown: 0(groups=[]]", record. getAnnotations ( ). toString ( ) )
3391	Assert. assertEquals ( "{\\"alice\\":{\\"@charlie\\":\\"david\\",\\"$\\":\\"bob\\"}}", result. toString ( ) )
3392	assertEquals ( "Expected 0 results!", 0, n )
3393	assertEquals ( "Host", result )
3394	assertValid ( getResults ( runner ) )
3395	assertEquals ( "Hello World". substring ( 2, 7 ), bytes. parseUtf8 ( CONTROL_STOP ) )
3396	assertArrayEquals ( CAFEBABE_SHA1, sha1 )
3397	Assert. assertTrue ( "Expected tuples to be equal", Utils. equals ( t1, t2 ) )
3398	assertLife ( playerB, 11 )
3399	Assert. assertEquals ( 0, patients. size ( ) )
3400	assertTrue ( splitOnWhitespace. size ( ) == 8 )
3401	assertEquals ( "Did not get expected parameter count", 2, params. size ( ) )
3402	assertNull ( request. getSession ( ). getAttribute ( UsernamePasswordCheckcodeAuthenticationFilter. SPRING_SECURITY_FORM_USERNAME_KEY ) )
3403	assertTrue ( "Can't find statement", m. contains ( expectedStatement ( FILE_BASE ) ) )
3404	assertEquals ( "NONE", fileEntry. getLockType ( ) )
3405	assertEquals ( "<html><head></head><body></body></html>", rewritten )
3406	assertTrue ( sut. execute ( bogusId ) )
3407	assertThat ( environmentVariables. getProperty ( "webdriver.driver" ), is ( nullValue ( ) ) )
3408	Assert. assertFalse ( configuration. isDubboEnabled ( ) )
3409	assertNotNull ( newActivity )
3410	assertInvocations ( invocations, "prepare", "commit" )
3411	assertTrue ( "Coercing to VARBINARY failed for PDataType " + p, obj instanceof byte [ ] )
3412	assertEquals ( 1, permCheck. solution ( array ) )
3413	assertFalse ( source. isRoot ( ) )
3414	assertThat ( PrettyTime. of ( Locale. US ). print ( dur, TextWidth. WIDE, true, 3 ), is ( "1 day, 0 hours, and 4 minutes" ) )
3415	assertTrue ( result )
3416	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( query, query1 ) )
3417	assertThat ( c. resolve ( getSchema ( ) ), is ( nullValue ( ) ) )
3418	assertEquals ( "Expected 99 results!", 99, n )
3419	assertEquals ( result, expected, 0.0000001 )
3420	Assert. assertTrue ( _c. canConvertTo ( Integer. TYPE ) )
3421	assertThat ( Template. parse ( source ). render ( ). replaceAll ( "\\\\s", "" ), is ( "test-string" ) )
3422	assertEquals ( "Wrong # of objects found", 1, count )
3423	Assert. assertFalse ( inBlackList )
3424	assertEquals ( 0, fooDao. create ( ( Foo ) null ) )
3425	assertEquals ( "Expected 2 results!", 2, n )
3426	Assert. assertTrue ( "The expected values were not send. The missing values are " + expectedValueMap, expectedValueMap. isEmpty ( ) )
3427	assertFalse ( source. exists ( ) )
3428	Assert. assertEquals ( "fireActionActivated\\n" + "fireActionActivated2\\n" + "bar-0 java.awt.MenuItem[menuitem0,label=bar]", actionList )
3429	Assert. assertTrue ( new LogAdapter ( "logger.name.here", mockConfigCompact ( ) ). isTraceEnabled ( ) )
3430	assertThat ( element. isPresent ( ), is ( true ) )
3431	this. assertHeadersSet ( CONTEXT + "/topics/1" )
3432	assertThat ( house. getMouse ( ), is ( equalTo ( tom ) ) )
3433	assertTrue ( simpleG. geometryType ( ). equals ( "GeometryCollection" ) )
3434	assertEquals ( outputExpect, output )
3435	Assert. assertNull ( u )
3436	assertFix ( "8=FIX.4.4|9=68|35=5|34=1|49=CLIENT|52=20140101-10:10:10.100|56=SERVER|58=TestCause|10=142|" )
3437	assertThat ( encodedValue, equalTo ( GLOBAL_ENCODED_SHA_384_VALUE ) )
3438	editor. assertProblems ( "blah|unknown 'VMExtension'. Valid values are: []" )
3439	assertEquals ( "{" + JsonSerializationVisitor. NL + "  a : [" + JsonSerializationVisitor. NL + "    { a : 1 }" + JsonSerializationVisitor. NL + "  ]" + JsonSerializationVisitor. NL + "}", doc )
3440	assertEquals ( 404, tup. _1. intValue ( ) )
3441	assertNotNull ( Participant. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CFXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
3442	assertThat ( pgpSignedMessage. verify ( getPublicKey_5763950D ( ) ), is ( true ) )
3443	assertTrue ( options. isStrict ( ) )
3444	assertHierarchyIs ( "virtual/resource/type", SYNTHETIC_RESOURCETYPE_ROOT )
3445	assertEquals ( 2, services. size ( ) )
3446	assertThat ( mySignalHandler. wasCalled, IsEqual. equalTo ( false ) )
3447	assertEquals ( Arrays. asList ( filter1, filter2 ), returned )
3448	assertEquals ( "", result )
3449	Assert. assertEquals ( msg, expected, actual, delta )
3450	assertThat ( testee. convertToEntityAttribute ( "name" ), is ( category ) )
3451	Assert. assertEquals ( 4, calculator. add ( 2, 2 ) )
3452	Assert. assertNull ( mxBeanMapping2 )
3453	assertEquals ( "bcdef", buf. getTail ( ) )
3454	Assert. assertTrue ( fitResidualSum < noisyResidualSum )
3455	Assert. assertEquals ( "Text should be the same", text, toggle. getText ( ) )
3456	assertions. hasSize ( size )
3457	assertEquals ( 8, results. size ( ) )
3458	assertEquals ( "XXX", tr. getAttrs ( ). get ( "X" ) )
3459	Assert. assertEquals ( SearchAction. SUCCESS, streetSearchAction. search ( ) )
3460	assertEquals ( 100, ( int ) tree. entries ( ). count ( ). toBlocking ( ). single ( ) )
3461	assertEquals ( "Wrong visited nodes", expected, visitor. getVisitedNodes ( ) )
3462	assertResultSet ( res )
3463	assertOneRequestViolationThat ( test ( aggregator, form, post ( "/form/schema" ). contentType ( MediaType. APPLICATION_FORM_URLENCODED ). param ( "param", "a" ), response ( 200, "", null ) ), equalTo ( "No schema allowed on action(POST /form/schema) mime-type('application/x-www-form-urlencoded')" ) )
3464	assertEquals ( expected, out )
3465	assertTrue ( newYearsDay. isAfter ( newYearsEve ) )
3466	assertThat ( result, is ( empty ( ) ) )
3467	assertEquals ( "Expected 100 results!", 100, n )
3468	Assert. assertNull ( result )
3469	Assert. assertEquals ( "[{\\"name\\":\\"kevin\\",\\"age\\":25},{\\"name\\":\\"cissy\\",\\"age\\":24}]", new String ( byteData ) )
3470	Assert. assertTrue ( contentType, contentType. contains ( "text/plain" ) )
3471	assertRequest ( "DELETE", "Call/%s/Play/", callId )
3472	assertEquals ( 0, output. getEntry ( ). size ( ) )
3473	assertEquals ( 11, pizza. getCells ( ). size ( ) )
3474	assertEquals ( msg, i, curVal )
3475	assertEquals ( 1, inverses. size ( ) )
3476	assertTrue ( "File audit log should be created", ops. exists ( TEST_FILE_AUDIT_LOG_ADDRESS ) )
3477	assertFalse ( matchResult )
3478	assertNull ( getWithTimeout ( commit ) )
3479	assertEquals ( "歆�旮�", t. format ( new Date ( ) ) )
3480	assertTrue ( _comp. isEquals ( json, expected ) )
3481	assertNotEquals ( 0l, initEmptyContainer )
3482	assertNotNull ( _notification )
3483	assertResultSet ( res )
3484	assertEquals ( "org.talend.components.kinesis.runtime.KinesisDatasetRuntime", runtimeInfo. getRuntimeClassName ( ) )
3485	assertThat ( query. getQuery ( ), is ( expectedToString ) )
3486	assertThat ( reply ( ), is ( anAppendReply ( ). withResult ( false ) ) )
3487	assertTrue ( message, message. contains ( BuilderMock. class. getName ( ) ) )
3488	assertEquals ( ScenarioSimulationModel. Type. RULE, retrieved. getSettings ( ). getType ( ) )
3489	Assert. assertEquals ( expected, actuals )
3490	assertNotNull ( alumnoPaquete. getId ( ) )
3491	assertAxisEquals ( 234567, 678967, new double [ ] { 300000, 400000, 500000, 600000 }, new String [ ] { "3e5", "4e5", "5e5", "6e5" }, axis )
3492	assertEquals ( 13, arr. reduceRight ( callbackfn ). intValue ( ) )
3493	assertEquals ( getMessage ( MessageKeys. E_TR_FW_0003 ), driver. findElement ( By. cssSelector ( "li" ) ). getText ( ) )
3494	assertThat ( dockerInfo, is ( notNullValue ( ) ) )
3495	assertEquals ( expResult, result )
3496	assertNotSame ( options1, options2 )
3497	assertParseFileOk ( "abssamples/deltas/PeerToPeer.abs" )
3498	assertThatSliderValueIs ( value )
3499	assertSame ( envelope, cellRenderer. getIcon ( ) )
3500	assertTrue ( terminated )
3501	Assert. fail ( "LoggingServlet messages should be presented only in files specified in profiles, but found: " + line )
3502	assertSame ( given, actual )
3503	assertThat ( request. getTimeLoaded ( ), is ( notNullValue ( ) ) )
3504	assertNull ( OpenShiftContext. get ( ). get ( "foo" ) )
3505	Assert. assertTrue ( "Connection pool timeout : ressource leaked", System. currentTimeMillis ( ) - start < 11000 )
3506	Assert. assertEquals ( contenido, Base64. encodeBase64String ( contenidoCreado ) )
3507	scandiumUtil. assertReceivedData ( "ACK-" + message, TIMEOUT_MILLIS )
3508	assertContextOk ( ctx, "O1:doc:doc,O3:doc:doc,O3:doc:doc", "Hello 1!,Hello 2!,Hello 3!", "Source,Source,Source" )
3509	assertEquals ( "/127.0.0.1:123", HazelcastUtils. getHZAddress ( m ) )
3510	assertFalse ( _wardenService. isWardenServiceEnabled ( ) )
3511	assertThat ( out. toString ( ), containsString ( "Using timeout for story a_short.story of 25" ) )
3512	assertFalse ( equalsResult )
3513	assertEquals ( 3, query. count ( ) )
3514	assertSingleIssue ( issues, 8, "For statement.", "10min" )
3515	assertEquals ( ts, t. exec ( newTuple ( input ) ) )
3516	assertEquals ( 10.0, Solutions. bestOf ( solutions ). getRoutes ( ). iterator ( ). next ( ). getStart ( ). getEndTime ( ), 0.1 )
3517	Assert. assertEquals ( 100., analyser. getFixedCosts ( route ), 0.01 )
3518	assertThat ( db. findCon1 ( id, age ), notNullValue ( ) )
3519	Assert. assertTrue ( executor. awaitTermination ( threads * loops * 1000, TimeUnit. SECONDS ) )
3520	assertEquals ( expResult, result )
3521	assertThat ( history. length ( ), is ( equalTo ( 1 ) ) )
3522	Assert. assertNull ( actual )
3523	assertFalse ( exceptionThrown )
3524	assertEquals ( "<div> jsoup </div>", doc. body ( ). html ( ) )
3525	Assert. assertNull ( job )
3526	Assert. assertEquals ( 0, queryPaths. length )
3527	assertThat ( schema, hasEntry ( is ( TYPE_2 ), hasProperty ( "predicates", hasItem ( predicate ( ). withName ( PROP_I ). withReferenceType ( TYPE_3 ). withValueType ( VALUE_TYPE ). withIsList ( true ) ) ) ) )
3528	assertEquals ( "valueA", pc. getString ( "keyA" ) )
3529	assertTrue ( deleteSubtasksHidden )
3530	assertEquals ( "fra 1 millennio", t. format ( new Date ( 1000L * 60 * 60 * 24 * 365 * 1001 ) ) )
3531	AssertAnnotations. assertSentence ( sentences, select ( jcas, Sentence. class ) )
3532	assertNotNull ( symmetricAnnotation )
3533	assertEquals ( ace, parsed )
3534	assertNonNullTaint ( MultiTainter. getMergedTaint ( arr ) )
3535	Assert. assertTrue ( error!= null && info!= null )
3536	assertFalse ( iter. hasNext ( ) )
3537	assertTrue ( String. format ( "geoPos at <%d> is invalid", i ), geoPos. isValid ( ) )
3538	assertEquals ( 3l, session. from ( $ ( emp ) ). where ( $ ( emp ). in ( emp1, emp2, emp3 ) ). count ( ) )
3539	Assert. assertNull ( generator. generateLabel ( osm ) )
3540	Assert. assertEquals ( "SELECT u.user_id,u.full_name,u.creation_date,u.last_modified_date FROM user_3 u WHERE u.user_id =?", executor. getSql ( ) )
3541	assertThat ( tester. getMessages ( FeedbackMessage. ERROR ). size ( ), is ( 1 ) )
3542	assertThat ( range1. isFinite ( ), equalTo ( false ) )
3543	assertFalse ( valid )
3544	assertTrue ( detectWrap )
3545	assertEquals ( "some text", text )
3546	assertEquals ( "Serialised data set", expectedXML, actualXML )
3547	assertTrue ( scores. get ( RESOURCE_BASE + "brownfox" ) > scores. get ( RESOURCE_BASE + "redfox" ) )
3548	Assert. assertEquals ( 0, labels. size ( ) )
3549	assertEquals ( timeInstant. getTimeMode ( ), TimeInstant. TimeMode. END )
3550	assertEquals ( "a {}", br. readLine ( ) )
3551	Assert. assertEquals ( Logger. EVENT_UNSPECIFIED. toString ( ), markerCapture. getValue ( ). getName ( ) )
3552	assertEquals ( "GBP 3.57", test. toString ( ) )
3553	assertNotNull ( module )
3554	Assert. assertEquals ( expectedResult, res )
3555	assertEquals ( false, result )
3556	assertTrue ( rule. isVersionValid ( "1.2.3" ) )
3557	assertNotNull ( team1. getId ( ) )
3558	assertArrayEquals ( expected, Proto. build_lenenc_str ( str ) )
3559	Assert. assertEquals ( 1481194232000l, timestamp. longValue ( ) )
3560	assertEquals ( Collections. emptySet ( ), argument. getValue ( ). getTranscript_consequences ( ) )
3561	assertEquals ( expected, modified )
3562	assertNoOrders ( )
3563	assertEquals ( asUnorderedSet ( o. logicalAxioms ( ) ), asUnorderedSet ( o1. logicalAxioms ( ) ) )
3564	assertBeanValidation ( json, "query.metric[0].tags[0] name must not be empty" )
3565	Assert. assertTrue ( MsgUtils. compareIgnoringWhiteSpaces ( serializedRequest, fu. readFile ( "TrdgSesStatReq.xml" ) ) )
3566	Assert. assertNotNull ( addressResultsDto )
3567	assertThat ( node, instanceOf ( Node. class ) )
3568	assertEquals ( 0, result )
3569	assertEquals ( 2, result. size ( ) )
3570	assertScript ( "out = in1 - in2;" )
3571	assertThat ( requestedShutdownCallable. call ( ), equalTo ( true ) )
3572	assertThat ( parents, contains ( propertyB ) )
3573	assertEquals ( asList ( "FOOFOO", "BARBAR", "BAZBAZ" ), result )
3574	assertNotNull ( servedImage )
3575	assertThat ( target. delLink ( link ), is ( false ) )
3576	assertThat ( msg, startsWith ( "Failed writing to: /some/unexisting/dir/overlaps" ) )
3577	assertEquals ( false, result )
3578	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
3579	assertTrue ( count. toString ( ), 115 <= count && count <= 118 )
3580	assertEquals ( "/onlyDefaultRealmName", picketLinkRequest. get ( ). getServletPath ( ) )
3581	assertEquals ( "Expects to retrieve the 2 patients which reference the two different organizations", expectedIds, actualIds )
3582	assertEquals ( Arrays. asList ( expected. build ( ) ), builder. build ( ). getPipeline ( ) )
3583	assertTrue ( actionServiceRegistered )
3584	Assert. assertEquals ( "Non-optimal coverage: ", 1d, cov, 0.001 )
3585	assertEquals ( OffsetDate. of ( LocalDate. of ( 2007, 7, 15 ), OFFSET_PONE ), t )
3586	assertEquals ( 1, ( ( V8ScriptException ) executor. getException ( ) ). getLineNumber ( ) )
3587	assertEquals ( 35L, id )
3588	assertNull ( ivl )
3589	assertEquals ( "", c. getStyleName ( ) )
3590	assertSame ( shutdownReason, status )
3591	assertThat ( sw. toString ( ), is ( "{\\"piyo\\":0,\\"hoge\\":0}" ) )
3592	assertEquals ( "<span>Ireland</span><span>France</span>", output )
3593	assertTrue ( translator. isMethodSupported ( "refreshUserToGroupsMappings" ) )
3594	CustomAsserts. assertEquals ( definition, definition. createElement ( 49 ), actual )
3595	assertIntValues ( array, 1, 2, 3 )
3596	assertEquals ( "bcc@domain.com", emailer. getProperties ( ). getProperty ( "bcc" ) )
3597	Assert. assertEquals ( createKeySpace. createQuery ( query ), NETWORK_TEST )
3598	assertTrue ( g1 instanceof PublicCloneable )
3599	Assert. fail ( "Missing required input" )
3600	assertEquals ( exp, res )
3601	Assert. assertEquals ( resolver. isValid ( "pentaho_user" ), false )
3602	assertEquals ( 0, testSet. getTestResult ( 1 ). getComments ( ). size ( ) )
3603	assertThat ( cache. snapshot ( ). size ( ), is ( 0 ) )
3604	assertEquals ( Integer. valueOf ( AS_NUMBER ), asNumberArgument. getValue ( ) )
3605	assertEquals ( 10, classUnderTest. getColumOrder ( ) )
3606	assertEquals ( "Method #toString is wrong", "TextMapper{field=field, indexed=false, sorted=true, validated=true, column=field, " + "analyzer=English}", mapper. toString ( ) )
3607	assertEquals ( expResult, result )
3608	assertThat ( defaultExecutor. getCommand ( ), not ( equalTo ( null ) ) )
3609	assertEquals ( expResult, result )
3610	Assert. assertTrue ( "Failed to list resources: " + result, Operations. isSuccessfulOutcome ( result ) )
3611	assertThat ( conf, containsString ( "<interaction><code value=\\"" + TypeRestfulInteraction. HISTORYINSTANCE. toCode ( ) + "\\"/></interaction>" ) )
3612	assertFalse ( completed. get ( ) )
3613	assertNotNull ( _logger )
3614	assertTooltips ( )
3615	assertNotNull ( feather. instance ( A. class ). plainProvider. get ( ) )
3616	assertEquals ( count, query ( ). from ( cat ). where ( cat. name. notIn ( Collections. < String > emptyList ( ) ) ). fetchCount ( ) )
3617	assertThat ( graph. run ( ). get ( ), equalTo ( "hi there!". length ( ) ) )
3618	assertEquals ( "Test Model Type", otherModelType. getName ( ) )
3619	assertEquals ( "RESOURCE", r. get ( String. class ) )
3620	assertThat ( appRegistryService. importAll ( false, new ClassPathResource ( "AppRegistryTests-importAllOverwrite.properties", getClass ( ) ) ). size ( ), equalTo ( 0 ) )
3621	assertThat ( ValidatorUtil. formatMessages ( validate ), validate. size ( ), is ( 0 ) )
3622	assertEquals ( expectedSize, actualSize )
3623	assertEquals ( new Pair < String, String > ( "hello", "world)" ), relunctant. reluctantBetween ( Scanners. isChar ( '(' ), Scanners. isChar ( ')' ) ). parse ( "(hello:world))", mode ) )
3624	assertFalse ( strings. hasMoreElements ( ) )
3625	assertNotNull ( IncomingPhoneNumber. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
3626	assertEquals ( "^/cntrl/actn/clients/([0-9]+)/([^/]+)$", pattern )
3627	assertThat ( rdx. toString ( ), not ( Matchers. isEmptyOrNullString ( ) ) )
3628	assertEquals ( "3", result. getXdmValue ( ). itemAt ( 0 ). getStringValue ( ) )
3629	assertEquals ( vo. getPhoneNumbers ( ). get ( 1 ). getNumber ( ), "123456789" )
3630	Assert. assertTrue ( target. getConfig ( ). size ( ) == 1 )
3631	assertEquals ( "", container2. bytesField. toString ( ) )
3632	Assert. assertThat ( result, Matchers. anyOf ( Matchers. equalTo ( 1 ), Matchers. equalTo ( 2 ), Matchers. equalTo ( 3 ) ) )
3633	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
3634	assertActionFailedExceptionWithMessageIndicatingWriterWasUnableToActivateEditor ( )
3635	assertNull ( command )
3636	assertThat ( c, not ( nullValue ( ) ) )
3637	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
3638	assertFalse ( MongoScopesUtil. isDCEligible ( scope ) )
3639	assertEquals ( 3, count )
3640	assertEquals ( true, result [ 0 ] )
3641	assertEquals ( false, getMoveObjectDownAction ( ). isEnabled ( ) )
3642	assertEquals ( 1, processInstances. size ( ) )
3643	assertTrue ( msg. toString ( ), expectedFilteredRecommendedItems. containsAll ( actualFilteredRecommendedItems ) )
3644	assertTrue ( testeeCacheGenerator. isIncludePeriod ( ) )
3645	assertContains ( e. getMessage ( ), "'name'" )
3646	assertNotNull ( reporter )
3647	assertEquals ( "Unexpected status code in HTTP response.", SC_UNAUTHORIZED, statusCode )
3648	assertions. endsWith ( sequence )
3649	context. assertIsSatisfied ( )
3650	assertTrue ( "Shouldn't get buffer", responseReader == null )
3651	assertEquals ( "Expecting well formed hql", "from CcAndInferredLocationRecord cc," + "ArchivedInferredLocationRecord in where cc.vehicleId= :vehicleId" + " and cc.vehicleAgencyId= :vehicleAgencyId and cc.vehicleId = in.vehicleId " + "order by cc.vehicleId desc ", hql. toString ( ) )
3652	Assert. assertNotNull ( dataSource )
3653	assertNotNull ( LastMonth. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
3654	assertEquals ( "04a0434d9e47f3c86235477c7b1ae6ae5d3442d49b1943c2b752a68e2a47e247c7893aba425419bc27a3b6c7e693a24c696f794c2ed877a1593cbee53b037368d7", key. getPublicKeyAsHex ( ) )
3655	assertEquals ( expected, sanitized )
3656	assertThat ( converter. convert ( formattedValue, BigDecimal. class, bundle ), is ( equalTo ( theValue ) ) )
3657	assertNotNull ( ids )
3658	assertEquals ( users. get ( new QueryParameters ( ). setQuery ( query ) ). next ( ). get ( "username" ). toString ( ), users. get ( new QueryParameters ( ). setQuery ( incorrectQuery ) ). next ( ). get ( "username" ). toString ( ) )
3659	maps. assertContainsOnly ( description, null, entries )
3660	AssertJUnit. assertEquals ( "$i:user/i:extension/ri:foobar", xpath. getXPathWithoutDeclarations ( ) )
3661	assertMatrixEquals ( "cornerToCRS", new Matrix3 ( 0.5, 0, 50, 0, 2, 40, 0, 0, 1 ), matrix, STRICT )
3662	assertSeq ( new String [ ] { "c", "<b/>", "<a/>" }, "reverse((/top/*, 'c'))" )
3663	assertEquals ( "CN=testuser_OU=NiFi_Organisation", escapedClientDn )
3664	assertFalse ( hasPermission )
3665	assertTrue ( "", types!= null && types. size ( ) == 1 && types. contains ( ProfileType. INDUSTRY ) )
3666	assertEquals ( DATA, storage. loadPerson ( ID ) )
3667	Assert. assertEquals ( true, agent. getIsTierGenericMobile ( ) )
3668	assertEquals ( 2, parsed. getContained ( ). getContainedResources ( ). size ( ) )
3669	assertEquals ( "Expected exception doesn't occurs", ReplyCode. KO_STREAM_OPERATION_NOT_ALLOWED. getCode ( ), ( Integer ) code )
3670	assertEquals ( "Mismatched data at iteration #" + i, expected, res )
3671	assertEquals ( SPEC0_GEO_FIELD, entityDef. getGeoField ( ) )
3672	assertEquals ( expected, elements )
3673	assertNull ( manager. getCombinedMessageFragment ( 1, 0 ) )
3674	assertThat ( wrapperFilename, is ( nullValue ( ) ) )
3675	Assert. assertTrue ( descriptors. isEmpty ( ) )
3676	Assert. assertEquals ( HttpStatus. SC_UNAUTHORIZED, response. getCode ( ) )
3677	assertTrue ( comparator. compare ( "/hotels/{hotel}", "/hotels/**" ) < 0 )
3678	assertEquals ( CHILD_RESOURCE_SET, childContext. getResources ( ) )
3679	assertEquals ( "Hello {name}", ResponseBodyInterpolator. interpolate ( "Hello ^{name}", req ) )
3680	assertTrue ( avatar. length > 0 )
3681	result. assertErrorFreeLog ( )
3682	assertThat ( users, hasSize ( 2 ) )
3683	assertEquals ( result, true )
3684	assertEquals ( expectedURL, token. toURI ( baseURL, suffix, hashParameterName ). toString ( ) )
3685	assertEquals ( true, ConfigUtils. getOrNull ( config, "hello" ) )
3686	assertEquals ( 100, out. keys. size ( ) )
3687	assertions. endsWith ( sequence )
3688	Assert. assertFalse ( req_015_Util. isPeerInterestedOnRemoteWorker ( consumer1ID. getServiceID ( ) ) )
3689	Assert. assertEquals ( output. getMessages ( TEST_RESOURCE, partition ). size ( ), 1 )
3690	Assert. assertEquals ( poly, gcd1. clone ( ). multiply ( gcd2 ) )
3691	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Start>" + "<genericTag key=\\"value\\">" + "someText" + "</genericTag>" + "</Start>", elem. toXml ( ) )
3692	XMLAssert. assertXpathEvaluatesTo ( "raboof", "//text", response )
3693	assertEquals ( Arrays. asList ( "Hello World" ), list )
3694	assertSame ( addresses, cache. getAvailableServers ( ) )
3695	assertThat ( new HashSet < > ( Arrays. asList ( config. getMetricsEnabledDimensions ( ) ) ), equalTo ( expectedMetricsEnabledDimensions ) )
3696	assertNotNull ( Configuration. fetcher ( ). fetch ( ) )
3697	assertEquals ( expected, actual )
3698	Assert. assertEquals ( 160, query. getCacheCount ( cache, 160 ) )
3699	assertFalse ( "testReinstate 0", it. isWithdrawn ( ) )
3700	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 03" ) )
3701	assertDateEquals ( dateTime, result )
3702	Assert. assertEquals ( 100., time, 0.01 )
3703	assertEquals ( "select entity_0 from Entity entity_0 where ( entity_0.code = :code_1 )", select. getQuery ( ) )
3704	Assert. assertTrue ( BCrypt. checkpw ( "foobar", hashed ) )
3705	assertEquals ( "invalid percent complete", AnalysisSubmissionServiceImpl. STATE_PERCENTAGE. get ( AnalysisState. PREPARED ), analysisSubmissionServiceImpl. getPercentCompleteForAnalysisSubmission ( ID ), DELTA )
3706	assertTrue ( m. getHeader ( "Newsgroups", null ). indexOf ( "\\r\\n\\t" ) > 0 )
3707	Assert. assertTrue ( sut. isWeekday ( cal. getTime ( ) ) )
3708	Assert. assertNotNull ( domain )
3709	assertEquals ( 37.5, calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
3710	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
3711	assertEquals ( Runtime. getRuntime ( ). availableProcessors ( ), lt. getThreadPoolSize ( ) )
3712	assertEquals ( 1, counter. getBeforeFileTreeWalkCount ( ) )
3713	assertThat ( getTemplateLabel ( jobSpec, LabelConstants. JOBNAME_LABEL ), equalTo ( LegalNames. toJobIntrospectorName ( DOMAIN_UID ) ) )
3714	Assert. assertNotNull ( "Facebook app test user list was null", testUserList )
3715	assertEquals ( matchAllQuery, result. getQueryBuilder ( ) )
3716	assertEquals ( 3, id3tag. getWmpRating ( ) )
3717	assertFalse ( eq. test ( entity. build ( ) ) )
3718	Assert. isTrue ( "Updated Description". equals ( newOrganization. getDescription ( ) ) && departmentList. size ( ) == newDepartmentList. size ( ) && departmentList. size ( ) > 0 )
3719	AssertAnnotations. assertNamedEntity ( ne, select ( jcas, NamedEntity. class ) )
3720	assertEquals ( expected, actual )
3721	assertEquals ( expectedResult, verifyDrugref. invoke ( audit ) )
3722	assertNull ( result )
3723	Assert. fail ( "Cannot create ReplicateConfig with negative replicateNumber" )
3724	assertEquals ( "/projects/topic_17576/iur-service-client/target/classes", actualObj )
3725	assertThat ( _response. getStatus ( ), is ( METHOD_NOT_ALLOWED ) )
3726	assertTrue ( jsonld. contains ( "@vocab" ) )
3727	assertEquals ( 0, entities. size ( ) )
3728	assertEquals ( expectedVector, node. marshallize ( ) )
3729	assertTrue ( cut. getAttributes ( ). isEmpty ( ) )
3730	assertThat ( target. readValue ( value ), is ( false ) )
3731	assertEquals ( batch. getId ( ), statistics. getId ( ) )
3732	assertThat ( logoutResponseXML, containsString ( "<samlp:LogoutResponse" ) )
3733	assertThatAppletWasLaunched ( )
3734	Assert. assertEquals ( - 1, comparator. compare ( currentRelease, laterRelease ) )
3735	assertEquals ( ( i / 3 ) + " : " + testData [ i ] + ", " + testData [ i + 1 ], expectedResult, actualResult )
3736	assertEquals ( hash1, hash2 )
3737	assertThat ( result, is ( new String [ ] [ ] { { "c", "" } } ) )
3738	assertEquals ( 1, TestUtils. regexCount ( res, "this is a regex test" ) )
3739	Assert. assertEquals ( json, writer. toString ( ) )
3740	assertEquals ( 123, accountTemplate. getUid ( ) )
3741	assertThat ( augustHours, closeTo ( 176.0, 0.1 ) )
3742	Assert. assertTrue ( responseList. size ( ) <= 2 )
3743	assertEquals ( 3, result. scoreDocs. length )
3744	assertTrue ( page. getBody ( ). asText ( ). indexOf ( "This should show up also!" )!= - 1 )
3745	assertEquals ( preEncodedPredictionsUrl, httpUtil. getEncodedUrl ( preEncodedPredictionsUrl ) )
3746	assertEquals ( expected, actual )
3747	assertIteratedKeys ( x, "1", "2", "5" )
3748	assertTrue ( errorsContainer. equals ( errors ) )
3749	assertThat ( parameters, is ( "?searchView=own&orderBy=createdNewest&show=all&minSupportCount=50" ) )
3750	assertEquals ( 1, foundPosts. size ( ) )
3751	Assert. assertEquals ( 0, analyser. getLoadAtBeginning ( route ). get ( 0 ) )
3752	assertArrayEquals ( new long [ ] { 1, 2, 3 }, result )
3753	assertNoReturnValue ( response )
3754	assertTrue ( hour1. equals ( hour2 ) )
3755	assertNull ( memcache. get ( key ) )
3756	assertTrue ( result == 0 )
3757	assertNotNull ( result )
3758	assertEquals ( "5", sut. getMaxDaysToKeepEntries ( ) )
3759	Assert. assertEquals ( "Hello Kermit", result )
3760	assertSeen ( results, s0, s1 )
3761	assertThat ( array, is ( new double [ ] { 2, 3, 5, 7 } ) )
3762	assertNotNull ( assertion )
3763	assertThat ( facade. getProxied ( ), is ( nullValue ( ) ) )
3764	assertNotNull ( coreMlFile )
3765	assertNotNull ( fixture )
3766	assertContains ( e. getMessage ( ), "'id'" )
3767	assertEquals ( BAD_REQUEST. getStatusCode ( ), response. getStatusCode ( ) )
3768	assertInstanceOf ( "Expected Proj.4 wrapper.", Transform. class, op. getMathTransform ( ) )
3769	assertTrue ( matcher. match ( msg, rule ) )
3770	assertEquals ( expected, toJSON ( object ) )
3771	assertTrue ( "toDegrees() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP )
3772	assertEquals ( 2, count )
3773	assertEquals ( input, output )
3774	this. assertLoadBlobViaTuples ( tuples, false, true )
3775	Assert. assertNull ( ret3 )
3776	Assert. assertNotNull ( "Headers should not be null", uic. getHeaders ( ) )
3777	assertThat ( result. toString ( ), is ( "" + "mntner:         TEST-MNT\\n" + "mnt-by:         TEST-MNT\\n" + "auth:           SSO bbbb-aaaa-cccc-dddd\\n" ) )
3778	assertTrue ( keyCodesSet. size ( ) == keyCodes. size ( ) )
3779	assertFalse ( rangeLock. tryWriteLock ( 8192 * 3, 8192 * 2 ). isPresent ( ) )
3780	assertNotNull ( target )
3781	assertThatSql ( query, is ( "SELECT table.col1, table.col2 FROM table" ) )
3782	Assert. assertFalse ( mockDevice. getDeviceExtension ( ArchiveDeviceExtension. class ). isVisibleSOPClass ( "7.8.9" ) )
3783	Assert. assertThat ( e. getMessage ( ), containsString ( expected ) )
3784	Assert. assertEquals ( expected, actual )
3785	assertFootersJoined ( )
3786	Assert. assertEquals ( "Assert.assertTrue(\\"\\",Pattern.compile(\\".*all\\").matcher(driver.getCurrentUrl()).find());", result )
3787	assertEquals ( expectedUrl, authorizationUrl )
3788	assertTrue ( Script. matchNamed ( MatchType. EQUALS, "data", null, "read('file:src/main/resources/karate-logo.png')", ctx ). pass )
3789	assertSame ( Sex. MALE, select. getSelectedItem ( ). orElse ( null ) )
3790	assertEquals ( Paths. get ( PATH1 ). toRealPath ( ). toString ( ), query ( func. args ( PATH1 ) ) )
3791	assertThat ( file, not ( exists ( ) ) )
3792	assertNotNull ( result )
3793	assertThat ( result, is ( jsonNull ( ) ) )
3794	assertEquals ( StrictMath. asin ( 0.4 ), asin )
3795	assertEquals ( 1, locationManager. getAll ( ). size ( ) )
3796	assertThat ( Datastore. delegate ( ), instanceOf ( MyDelegate. class ) )
3797	assertTrue ( "The theme was not deleted", theme == null )
3798	assertEquals ( r1, r2 )
3799	assertEquals ( "TextBuilder String Is 1", _textBuilder. toString ( ), "1" )
3800	assertEquals ( TargetType. PILLAR_EXACT, target. getType ( ) )
3801	assertEquals ( jid, component. jid )
3802	assertEquals ( ColorSpace. YUV420J, meta. getVideoCodecMeta ( ). getColor ( ) )
3803	assertEquals ( expected, actual )
3804	Assert. assertEquals ( "There should be no header detected", bufPos, - 1 )
3805	assertEquals ( "<p>This <a>is</a><span>foo</span> <a>jsoup</a><span>foo</span>.</p>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
3806	assertEquals ( expResult, result )
3807	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff07_" ) )
3808	assertEquals ( "Policy has no Auth id", 0, policy2. getAuthIds ( ). get ( 0 ). getAuthIds ( ). size ( ) )
3809	assertThat ( applicationSettings. getProjectCreationSetting ( ), is ( EMPTY_PROJECT_CREATION_ALLOWED ) )
3810	assertEquals ( thisYear - year, age )
3811	assertEquals ( "The test should ignore the unused and not resolvable @PmInject.", "PM with not resolvable PmInject.", pm. getPmTitle ( ) )
3812	assertEquals ( "{\\"firstName\\":\\"Max\\",\\"lastName\\":\\"Mustermann\\"}", transformer. render ( model ) )
3813	assertTrue ( "The decrypted message was " + new String ( dec ) + " and must be " + "equal to " + TEST_XML_STRING, Arrays. equals ( dec, original ) )
3814	assertThat ( ChronoHistory. from ( history. getVariant ( ) ), is ( history ) )
3815	assertEquals ( "Wrong number of floor surfaces has been detected", 1, nDetect )
3816	assertEquals ( ( int ) result. getProjectId ( ), ModuleHelper. projectId )
3817	Truth. assertThat ( actual )
3818	assertEquals ( testStyle, classUnderTest. getFunctionStyle ( ) )
3819	uit. assertValid ( STR_VAL, STR_VAL )
3820	assertThat ( allResourcePermissions. isEmpty ( ), is ( true ) )
3821	assertEquals ( DummyDrawHandler. drawCircleToString ( 50, 100, 10, ColorOwn. forString ( "pink", Transparency. FOREGROUND ), ColorOwn. forString ( "black", Transparency. BACKGROUND ), LineType. SOLID, 25.0 ), drawHandler. getLastDrawCall ( ) )
3822	assertFalse ( result. passedValidation ( ) )
3823	assertThat ( actual, sameJSONAs ( expected ) )
3824	assertTrue ( hiveDatabaseMeta. isDriverVersion ( 5, 5 ) )
3825	assertThat ( isValid, is ( true ) )
3826	assertEquals ( testResponse, response. get ( 0 ) )
3827	assertThat ( action. action, is ( RetryPolicy. RetryAction. RetryDecision. RETRY ) )
3828	assertFalse ( RGW_ADMIN. getUserInfo ( userId ). isPresent ( ) )
3829	assertEquals ( "Wrong parameters", createTestParameters ( ), params2 )
3830	assertEquals ( "Base for strings is wrong", "192.168.0.13", parsed )
3831	Assert. assertEquals ( 2, result. length ( ) )
3832	assertEquals ( "OnThisDay", output. get ( id ) )
3833	assertTrue ( supportsPlacement )
3834	assertFalse ( CacheUtils. isSymbolicLink ( "/test_file.txt", cache ) )
3835	assertTrue ( ( ( BooleanType ) respParam. getParameter ( ). get ( 0 ). getValue ( ) ). booleanValue ( ) )
3836	assertEqualsWithoutWhiteSpaces ( "", testSubject )
3837	assertEquals ( 140 + 4 * winScore - loosePenalty, scores. getScore ( ) )
3838	Assert. assertEquals ( present, listener )
3839	assertEquals ( 80, count )
3840	assertEquals ( 1, dao. create ( foo ) )
3841	Assert. assertNotNull ( savedTenant2 )
3842	assertThat ( control. matches ( "/clients/15" ), is ( equalTo ( true ) ) )
3843	Assert. fail ( "Expected to fail, but didn't" )
3844	assertEquals ( "http://tempuri.org", w. getFundingGroup ( ). get ( 0 ). getFundingSummary ( ). get ( 0 ). getUrl ( ). getValue ( ) )
3845	assertNull ( cred )
3846	assertEquals ( "{\\"text\\":null}", toJSON ( title ) )
3847	assertThat ( shortForm, is ( equalTo ( "root-ontology" ) ) )
3848	assertEquals ( 0, services. size ( ) )
3849	assertArrayEquals ( expectIndexes [ j ], indexes )
3850	assertResponseContainsExpectedPayload ( response, CONTENT, respPayload. substring ( 256 ) )
3851	assertThat ( provider. getSubject ( axiom ), is ( iriOptional ) )
3852	assertEquals ( svalues, svalues1 )
3853	Assert. assertEquals ( null, actualValue )
3854	assertEquals ( patchedVer. toString ( ), "{\\"foo\\":\\"bar\\",\\"hodor\\":\\"hodor!\\",\\"hold\\":\\"door\\"}" )
3855	Assert. assertEquals ( 0x0920e0c1b7eeb261L, hash )
3856	assertEquals ( 0, map. size ( ) )
3857	assertEquals ( query, result )
3858	Assert. assertEquals ( "", query. getCommandText ( ) )
3859	assertTrue ( "Short Ref too short", constraintViolations. size ( ) == 1 )
3860	assertArrayEquals ( new Object [ ] { new JobID ( "34627985F47", 4 ) }, production. getJobIds ( ) )
3861	assertEquals ( vars ( "a", "b", "c", "d" ), getNonPseudoVars ( csv, true ) )
3862	assertEquals ( 0, result )
3863	assertEquals ( 2, proc. getProjectedSymbols ( ). size ( ) )
3864	assertCount ( total, "one >= 0" )
3865	assertEquals ( Arrays. asList ( ), query ( ). from ( bookVersion ). join ( bookVersion. definition. bookMarks, bookMark ). where ( bookVersion. definition. bookMarks. size ( ). eq ( 1 ), bookMark. page. eq ( 2357L ). or ( bookMark. page. eq ( 2356L ) ) ). select ( bookVersion ). fetch ( ) )
3866	assertEquals ( 5, array [ pivot ] )
3867	assertSameEnumeration ( "PostOrderModel", coreEnum, xEnum )
3868	assertThat ( underTest. isAccessAllowed ( httpServletRequest ), is ( false ) )
3869	assertTrue ( ( boolean ) testedMethod. invoke ( tasksManagerImpl, STARTING_BYTE_OF_3_BYTE_CHAR ) )
3870	assertNull ( principal )
3871	assertFalse ( helper. returnsUserAuthenticatedFileObjects ( ) )
3872	assertTrue ( mvj. get ( "BlockRef" )!= null )
3873	assertEquals ( 3, res )
3874	assertCard ( expectedCard, "http://magiccards.info/dgm/en/5.html", "Rare", expectedCard. getName ( ) )
3875	assertEquals ( expected, result. getAttributes ( ) )
3876	assertEquals ( propSchema. getRequiredProperties ( ), asList ( "a", "b" ) )
3877	assertThat ( StubWatchFactory. getRequestParameters ( ). get ( 0 ), both ( hasEntry ( "resourceVersion", Integer. toString ( INITIAL_RESOURCE_VERSION ) ) ). and ( hasEntry ( "labelSelector", asList ( DOMAINUID_LABEL, CREATEDBYOPERATOR_LABEL ) ) ) )
3878	assertEquals ( LocalDate. of ( 2009, Month. OCTOBER, 1 ), fourthQuarter )
3879	assertTrue ( file. exists ( ) )
3880	assertEquals ( "new_end", vRoute. getEnd ( ). getLocation ( ). getId ( ) )
3881	assertTrue ( testEntity. isNew ( ) )
3882	assertEquals ( 2, tables. size ( ) )
3883	assertEquals ( "Yagga", result )
3884	Assert. assertEquals ( "The returned digester for  '" + algorithm + "' algorithm is not the right one.", digester. getAlgorithm ( ), algorithm )
3885	assertThat ( check. isCompatible ( ), is ( true ) )
3886	assertThat ( builder, hasToString ( "(function() {var s = document.createElement('script')," + "t = document.getElementsByTagName('script')[0];" + "s.type = 'text/javascript';" + "s.async = true;" + "s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';" + "t.parentNode.insertBefore(s, t);})();" ) )
3887	assertEquals ( expResult, result )
3888	assertions. containsNull ( )
3889	assertArrayEquals ( ArrayConverter. hexStringToByteArray ( "001D00202a981db6cdd02a06c1763102c9e741365ac4e6f72b3176a6bd6a3523d3ec0f4c" ), result )
3890	assertEquals ( expResult, result )
3891	assertEquals ( 1, session. from ( $ ( noteVar ) ). where ( where ). list ( $ ( noteVar ) ). size ( ) )
3892	assertEquals ( "user@example.com", dss. parseEmail ( ) )
3893	Assert. assertEquals ( data [ i ] * i, m. getEntry ( i, i ), 0d )
3894	assertThat ( handler, is ( instanceOf ( PersonValidator. class ) ) )
3895	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC, ScopePathType. FUNDING_READ_LIMITED )
3896	assertEquals ( "g1.js", groupNames. get ( "g1.js" ) )
3897	assertEquals ( "hello, world!", result )
3898	assertThat ( conf, instanceOf ( ClearCacheConfirmation. class ) )
3899	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
3900	assertThat ( isDepartmentValid, is ( Boolean. FALSE ) )
3901	Assert. assertFalse ( HasTopLevelNegationVisitor. hasTopLevelNegation ( script ) )
3902	Assert. assertEquals ( CORSFilter. CORSRequestType. INVALID_CORS, requestType )
3903	assertNotNull ( FlowRevision. reader ( "FWXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
3904	Assert. assertEquals ( 4, list. size ( ) )
3905	assertFalse ( matchResult )
3906	assertRecurrencesCorrect ( "MINUTE", 3, process ( trigger ). getMinuteRecurrences ( ) )
3907	Assert. assertEquals ( expected, validator. validate ( EntityNames. STUDENT, studentIds ) )
3908	assertEquals ( "<html><body>FOO</body> </html>", engine. compileMustache ( "minify_html_preserve_pattern", template ). render ( ImmutableMap. < String, Object > of ( "<!--foo-->", "FOO" ) ) )
3909	assertEquals ( expected, actual )
3910	Assert. assertEquals ( 0, analyser. getLoadAtBeginning ( route ). get ( 0 ) )
3911	assertEquals ( expectedScript, observedScript )
3912	assertionHelper. assertDataObjectFlaggedWithAVU ( irodsFile. getAbsolutePath ( ), "postProcForPutFired", accessObjectFactory, irodsAccount )
3913	assertThat ( result. contains ( expectedString ), is ( true ) )
3914	Assert. fail ( "IOException expected" )
3915	assertTrue ( className. equalsIgnoreCase ( Double [ ]. class. getSimpleName ( ) ) )
3916	assertEquals ( "fake-token", kc. getAccessToken ( ) )
3917	assertEquals ( "application/json;odata.metadata=minimal", request. getResponseContentType ( ). toContentTypeString ( ) )
3918	Assert. assertEquals ( expected, resultString )
3919	Assert. assertEquals ( SpecificData. get ( ). toString ( avroMessage ), SpecificData. get ( ). toString ( output ) )
3920	assertThat ( sequencerContext. getNamespaceRegistry ( ), notNullValue ( ) )
3921	assertEquals ( 10L, FutureUtils. result ( target ). longValue ( ) )
3922	assertWaitUntil ( ( ) -> vertx. fileSystem ( ). readDirBlocking ( uploadsDirectory ). isEmpty ( ) )
3923	assertEquals ( now, result )
3924	assertThat ( random, is ( decrypted ) )
3925	Assert. assertEquals ( 0, ( ( List < User > ) ret. getValue ( ) ). size ( ) )
3926	assertEquals ( object. doubles, result. doubles )
3927	assertEquals ( responsesRemaining, collector. getResponsesRemaining ( ) )
3928	assertFalse ( converter. canRead ( clazz, mediaType ) )
3929	assertSizes ( validator, char [ ]. class )
3930	Assert. assertTrue ( message, assertion )
3931	assertTrue ( Double. isNaN ( stats. getStatisticValue ( Statistic. VARIANCE ) ) )
3932	Assert. assertEquals ( state. IDLE, state )
3933	assertEquals ( "/home/work", mConfiguration. get ( PropertyKey. WORK_DIR ) )
3934	Assert. fail ( "Unknown component" )
3935	Assert. assertTrue ( h. match ( cookie, origin ) )
3936	assertEquals ( third, found )
3937	assertSame ( group, view. getItems ( ). get ( view. getItems ( ). size ( ) - 1 ) )
3938	Assert. assertFalse ( result )
3939	Assert. assertEquals ( 0, result. getEntities ( ). size ( ) )
3940	Assert. assertEquals ( _driver. getWorkflowConfig ( queueName ). getJobDag ( ). size ( ), 2 )
3941	assertEquals ( cos ( sqrt ( 2 ) * E ), e. evaluate ( ), 0d )
3942	Assert. assertFalse ( ModuleUtil. matchRequiredVersions ( openmrsVersion, requiredOpenmrsVersion ) )
3943	assertEquals ( "org.apache.hadoop.fs.shell.Ls", cmd. getClass ( ). getName ( ) )
3944	assertGenerators ( result, generator. getClass ( ) )
3945	Assert. assertEquals ( 86400000L, newDate. getTime ( ) - date. getTime ( ) )
3946	Assert. assertEquals ( simple. getName ( ), name )
3947	assertNull ( m )
3948	assertTrue ( "gridToCRS.isIdentity", grid. getGridToCRS ( PixelInCell. CELL_CORNER ). isIdentity ( ) )
3949	assertEquals ( 3, l. size ( ) )
3950	Assert. assertNull ( retireable. getRetireReason ( ) )
3951	assertThat ( module. getPackagesWithMappedClasses ( ), is ( equalTo ( Collections. EMPTY_SET ) ) )
3952	assertSeen ( results, s0 )
3953	assertTrue ( repository. getFeatureState ( DummyFeature. TEST ). isEnabled ( ) )
3954	assertTrue ( response. contains ( "graphdb" ) )
3955	Assert. assertTrue ( errMsg, appId. endsWith ( expectedAppId ) )
3956	assertExtendedEquals ( expected, dd, ADD_TOLERANCE_FACTOR )
3957	assertFalse ( cmd. onCommand ( sender, new CommandParser ( plugin, args, 1 ) ) )
3958	assertEquals ( 0.0, result, TOL )
3959	assertSplit ( result, stringToSplit )
3960	assertFalse ( subject. getResolution ( ). isPresent ( ) )
3961	assertTrue ( url2 == url1 )
3962	Assert. assertEquals ( "The file is packaged as test-deps-c-1.0.0.jar", "test-deps-c-1.0.0.jar", file. getName ( ) )
3963	assertEquals ( "Response users should be equal to the mocked users", mockedUsers, responseUsers )
3964	Assert. assertEquals ( LogLevel. INFO, testedStore. readProperty ( "logX" ). getValue ( ) )
3965	assertEquals ( expectedData, filteredData )
3966	assertFalse ( impl. isLate ( ) )
3967	assertNotNull ( Country. reader ( ). read ( ) )
3968	assertEquals ( 401, response. getStatus ( ) )
3969	assertNotRejectedOperation ( original, original )
3970	assertSame ( e, result )
3971	assertEquals ( test, getInputStream ( ). readString ( ) )
3972	assertEquals ( "Wrong result", expectedDate ( ), conf. getDate ( "date.string" ) )
3973	assertEquals ( expected, this. fsParser. extractFlowspec ( entry. build ( ) ) )
3974	assertEquals ( "<abc_def id=\\"1\\">Hello</abc_def> <abc-def>There</abc-def>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
3975	assertEquals ( "testCreatesFooClass", generatedName )
3976	assertTrue ( view. showPaging ( ) )
3977	assertEquals ( "bar", s )
3978	assertEquals ( expResult, result )
3979	assertEquals ( "rocksdb[path: path, readonly: true]", o1. toString ( ) )
3980	Assert. assertEquals ( "(aa_range (aa_point_location (aa_char Cys) Ter 125) _ (aa_point_location (aa_char Ala) Ter 123))", loc. toStringTree ( parser ) )
3981	assertEquals ( "abcdef0123456789:swarmcom.org", room. getRoomId ( ) )
3982	assertThat ( ddlParsers. getParsers ( ), hasItems ( myParsers. toArray ( new DdlParser [ myParsers. size ( ) ] ) ) )
3983	assertThat ( subject. getAbuseContact ( autnum ). get ( ). getAbuseMailbox ( ), is ( "abuse@ripe.net" ) )
3984	assertThat ( result. statusCode, is ( Response. OK ) )
3985	assertSetDirty ( )
3986	Assert. fail ( "Error retrieving workflow list caused by: " + e. getMessage ( ) )
3987	assertThat ( result, equalTo ( true ) )
3988	assertEquals ( " Echo Message = vasu", response )
3989	assertNotNull ( result )
3990	assertTrue ( "Aggregate sasl server factory should be created", ops. exists ( TEST_SERVER_FACTORY_ADDRESS ) )
3991	assertEquals ( 2, capturedEvent. getValue ( ). getRemovedItemsCount ( ) )
3992	assertEquals ( CONF_DIR, appConfig. getConfdDirectory ( ) )
3993	org. junit. Assert. assertArrayEquals ( new float [ ] { 0, 2, 4, 6 }, $. select ( CompressFrequenciesProcessor. class ). compress ( array, 2f ), 0 )
3994	assertDistinctDegreeFactorization ( polyMod, f )
3995	assertEquals ( size, responseApdu. getData ( ). length )
3996	assertThat ( TimestampInterval. between ( t1, t2 ). inStdTimezone ( ), is ( MomentInterval. between ( m1, m2 ) ) )
3997	assertNotNull ( entityAsInserted )
3998	assertEquals ( "one", firstElement )
3999	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
4000	assertNull ( ic. getContainerProperty ( object1, null ) )
4001	assertThat ( noOfSolutions, is ( 21 ) )
4002	runner. assertAllFlowFilesTransferred ( PublishKafkaRecord_0_11. REL_FAILURE, 3 )
4003	assertEquals ( results. length, lcsMatch. size ( ) )
4004	assertNotNull ( result )
4005	assertEquals ( 10, ref. atomicGet ( ) )
4006	Assert. assertTrue ( element instanceof ExclusiveElement )
4007	assertThat ( retDocumentProjects. collect ( ), containsInAnyOrder ( expectedDocumentProjects. toArray ( ) ) )
4008	Assert. assertTrue ( "The list is not ordered ascending", sortedTestFields. equals ( testFields ) )
4009	assertEquals ( "{trim ['abc']}", parseExpression ( "trim( 'abc' )" ). toString ( ) )
4010	Assert. fail ( "Expected an exception" )
4011	assertEquals ( expected, actual )
4012	assertEquals ( expectedQuery, actualQuery )
4013	assertEquals ( 2, conceptSearchResultList. size ( ) )
4014	assertEquals ( "foo==2011-03-01T12:34:00", ret )
4015	throwables. assertHasRootCauseMessage ( INFO, error, "expected message" )
4016	assertThat ( actual, sameJsonAs ( EXPECTED ) )
4017	assertEquals ( expectedResult, result )
4018	assertEquals ( "test", normalizeArchiveName )
4019	assertEquals ( 5 * ( FOUR_LINES_REMOVED_SCORE + GLASS_OVERFLOWN_PENALTY ), playerScores. getScore ( ) )
4020	assertSame ( stringMessageBodyReader, applicationProviders. getMessageBodyReader ( String. class, null, null, TEXT_PLAIN_TYPE ) )
4021	assertObjectEquals ( "{type:'array',items:{type:'integer',format:'int32'}}", s. getSchema ( SimpleList. class ) )
4022	assertTrue ( bugs. toString ( ), bugs. isEmpty ( ) )
4023	assertEquals ( o1, o2 )
4024	assertEquals ( new RandomGenerator ( ). initialize ( testSeed ). toString ( ), new RandomGenerator ( ). initialize ( testSeed ). toString ( ) )
4025	assertThat ( new ShardingItemParameters ( "0=A,1=B,2=C" ). getMap ( ), is ( expected ) )
4026	assertEquals ( cfProvider. getConfiguredProperties ( ), ImmutableMap. of ( "serverUrl", SINGLE_TIBCO_BROKER ) )
4027	assertTrue ( instance. runCommand ( ) )
4028	assertEquals ( newArrayList ( "/b/c/d", "/b/c/z", "/b/c", "/b/{c}", "/b" ), resourceLocators. keySet ( ). stream ( ). map ( UriPattern :: getTemplate ). collect ( toList ( ) ) )
4029	assertEqualHash ( byteBuffer, murmur3a )
4030	assertThat ( signature, hasItem ( individual ) )
4031	assertNotNull ( result )
4032	assertEquals ( innocent, back )
4033	context. assertIsSatisfied ( )
4034	assertEquals ( "Wrong value", ( byte ) 0xef, u. s8. get ( ) )
4035	assertEquals ( 0xffffffffffffffffL, result )
4036	mojos. assertBuildOutputs ( new File ( basedir, "target" ), "classes/proc/Source.class", "generated-sources/annotations/proc/GeneratedSource.java", "classes/proc/GeneratedSource.class", "generated-sources/annotations/proc/AnotherGeneratedSource.java", "classes/proc/AnotherGeneratedSource.class" )
4037	Assert. assertEquals ( "false", property )
4038	assertThat ( data. getOriginal ( ), is ( "{\\"str\\":\\"hoge\\",\\"nest\\":[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}" ) )
4039	assertEquals ( newName, project2. getCascadingProjectName ( ) )
4040	assertTrue ( exp instanceof ASTCurrentTimestamp )
4041	assertThat ( logRecords, containsInfo ( CREATING_CRD ) )
4042	Assert. assertEquals ( testResult [ i ], reslut )
4043	assertEquals ( 0, result. getVoxel ( 5, 15, 5 ),.01 )
4044	assertThat ( getterMethod. getReturnType ( ). getName ( ), is ( "java.lang.Integer" ) )
4045	TestsIOUtils. assertEqualSets ( documents, new AvroDataStoreReader < Document > ( path ) )
4046	assertNotNull ( entryCaptor. getValue ( ). getStackTraceWriter ( ) )
4047	assertPlanMatches ( access )
4048	assertEquals ( "42", fake. operation ( 42 ) )
4049	Assert. assertEquals ( configuration. getLong ( KAFKA_TEST_MESSAGE_COUNT_KEY ), KafkaConsumerUtils. INSTANCE. getNumRead ( ) )
4050	assertSingleElementCollection ( testCommandClientId, executeIds )
4051	assertThat ( userCount, is ( 1 ) )
4052	assertNull ( task )
4053	assertEquals ( null, classUnderTest. getTableFrameXmlBean ( ) )
4054	assertEquals ( "1.0.0-alpha", v2. toString ( ) )
4055	Assert. assertTrue ( hasIndexHashKeyEqualCondition )
4056	Assert. assertTrue ( hedgeErrorRMS < 0.035 )
4057	assertEquals ( list, Arrays. asList ( "test", 3, "ok", 1 ) )
4058	context. assertIsSatisfied ( )
4059	assertNotSame ( table1, table2 )
4060	assertEquals ( AnnotationDataDummy. METHOD_CACHE, data. getCacheName ( ) )
4061	assertThat ( msg. getValue ( ), containsString ( "unexpected exit code" ) )
4062	assertEquals ( ( ( timestamp / 1000 ) / 3600 ) * 3600, timeBucket )
4063	assertEquals ( "Fusco", person. getLastName ( ) )
4064	assertEquals ( "r1c1,r1c2" + recordSeparator + "r2c1,r2c2" + recordSeparator, sw. toString ( ) )
4065	Assert. assertEquals ( "example (wiki:XWiki.user (127.0.0.1): null on null at null)", ex. toString ( ) )
4066	assertEquals ( DEFAULT_VALUE, value )
4067	assertThat ( age. getBuckets ( ). size ( ), equalTo ( 5 ) )
4068	Assert. assertTrue ( Complex. equals ( new Complex ( - 0.5, 0.0 ), z. reciprocal ( ) ) )
4069	assertEquals ( expectedQuery, actualQuery )
4070	Assert. assertEquals ( 3, undefRes. size ( ) )
4071	assertEquals ( ValidationResult. Result. OK, validationResult. getStatus ( ) )
4072	assertEquals ( "Good Morning", cfg. getProperty ( "salutation.text", "Hello" ) )
4073	assertEquals ( expected, generateSeparateAttributesClass ( Car. class, Car. class. getPackage ( ) ) )
4074	assertMessages ( "write", 1, "write_bytes_offset" )
4075	assertTrue ( "value was " + Arrays. toString ( target ), Arrays. equals ( expected, target ) )
4076	assertEquals ( "Snapshots", 0, snapshots. size ( ) )
4077	assertEquals ( "127.0.0.1:11210-0", strategy. hash ( infoMock, 0 ) )
4078	assertEquals ( gelfMessage. getTimestamp ( ), now. getMillis ( ) / 1000.0d, 0.0d )
4079	assertEquals ( "mycmd a/b", s )
4080	assertThat ( result, is ( sameInstance ( cacheFileMetadataRequest ) ) )
4081	assertEquals ( list. get ( 0 ). getName ( ), "testUpdate" )
4082	assertNotNull ( result )
4083	assertEquals ( policy, dest. getServer ( ) )
4084	assertEquals ( 123, result )
4085	Assert. assertFalse ( errors. hasErrors ( ) )
4086	assertTrue ( "incorrect value", aNumber. toString ( ). equals ( result ) )
4087	assertThat ( isValid, is ( true ) )
4088	assertEquals ( packet, p )
4089	assertTrue ( false )
4090	assertTrue (! constraints. isEmpty ( ) )
4091	assertEquals ( b. build ( ), doc )
4092	assertThat ( output. get ( ), hasContent ( "second" ) )
4093	assertEquals ( "dog-chapter", md. group ( 1 ) )
4094	Assert. assertEquals ( e1, e2. getCause ( ) )
4095	assertTrue ( Boolean. TRUE. equals ( methodOutcome. getCreated ( ) ) )
4096	Assert. assertEquals ( "", json, notification. toJSON ( ) )
4097	assertThat ( testValue. fields ( ), equalTo ( TypedKeywordArguments. of ( TestValueType. NAME. of ( "Hello" ), TestValueType. AGE. of ( 42 ) ) ) )
4098	assertThat ( jcrWorkspaces, is ( graphWorkspaces ) )
4099	assertFound ( Files. newDirectoryStream ( dir ), child, child2, child3 )
4100	assertEquals ( "Hello ^^^ John", ResponseBodyInterpolator. interpolate ( "Hello ^^^ :name", req ) )
4101	assertEquals ( "Method #toString is wrong", "BooleanMapper{field=field, indexed=false, sorted=true, validated=true, column=field}", mapper. toString ( ) )
4102	assertEquals ( euclideanAssertion, result )
4103	Assert. assertEquals ( "EXECUTE ERROR:", sqltrue, sqlnew )
4104	Assert. assertTrue ( "Prefix om: not injected!", instanceXml. xmlText ( ). contains ( "xmlns:om" ) )
4105	assertEquals ( 0, start. getSize ( ). get ( 0 ) )
4106	assertNotNull ( dao )
4107	assertPowerToughness ( playerA, "Pillarfield Ox", 1, 3 )
4108	assertOut ( "a.setAttribute(z, 'foo')" )
4109	assertEquals ( expected, new ResolverUtil ( ). extractPath ( url ) )
4110	assertTrue ( main. getWidget ( output. dataAction ). isVisible ( ) )
4111	assertNotNull ( manager. x )
4112	assertEquals ( countryName, "<http://www.semanticweb.org/ontologies/2013/7/untitled-ontology-150#Country-United%20Kingdom>" )
4113	assertEquals ( expected, bos. toString ( ) )
4114	assertEquals ( connMock, dbcManagerSpy. getPooledConnection ( DBType. MYSQL, DB_URL, DHARMA_USER, DHARMA_PASSWORD ) )
4115	Assert. assertEquals ( result. toStringWithoutTime ( ). trim ( ), expectedResult. trim ( ) )
4116	assertThat ( gtx. get ( Hoge. class, key, key ), is ( notNullValue ( ) ) )
4117	assertEquals ( expectedQuery, actualQuery )
4118	assertEquals ( - 628444800000L, m. getFirstMillisecond ( c ) )
4119	assertEquals ( 1, tasks. size ( ) )
4120	assertEquals ( converter. getClass ( ), converterDescription. getImplementationClass ( ) )
4121	assertThat ( output, containsString ( "Deleted template:" ) )
4122	assertEquals ( profile, new ProfileImpl ( "user123", ImmutableMap. of ( "lastName", "LastName", "firstName", "FirstName", "phone", "0123456789" ) ) )
4123	Assert. assertSame ( this. patient, this. mocker. getComponentUnderTest ( ). get ( this. patientReference ) )
4124	assertEquals ( true, code. toString ( ). contains ( "d<-3\\n" ) )
4125	assertNotNull ( result )
4126	assertThat ( serialized, is ( equivalentTo ( instance ) ) )
4127	assertThat ( rendered, is ( test [ 1 ] ) )
4128	assertThat ( target. matchExactly ( ( FlowAction ) action ), is ( false ) )
4129	Assert. assertEquals ( "value", ds. getStringProperty ( ) )
4130	assertBreadcrumbsAreEqual ( actualList, expectedList )
4131	assertEquals ( 10, l. size ( ) )
4132	assertThatSql ( query, is ( "SELECT t1.c1, t2.c2 FROM table1 AS t1 LEFT OUTER JOIN table2 AS t2 ON t1.c0 = t2.c0" ) )
4133	assertEquals ( 24, result. size ( ) )
4134	assertThat ( InvertListNumber. index ( actualCoords, sizes, invert ), equalTo ( index ) )
4135	assertEquals ( "http://foo/bar", got. toString ( ) )
4136	Assert. assertNotEquals ( nettyClient, reference. getAndSet ( nettyClient ) )
4137	assertMatrixEquals ( expectedTableau, tableau. getData ( ) )
4138	propertyChangeListenerTester. assertPropertyChangedOnce ( )
4139	assertConfigErrorForMissingAttributeRequired ( data )
4140	assertEquals ( i, blc. size ( ) )
4141	propertyChangeListenerTester. assertPropertyChangedOnce ( )
4142	Assert. assertEquals ( message, messages. poll ( ) )
4143	assertFalse ( root. canBeScheduled ( ) )
4144	assertThat ( extractMonitorables ( histogramAdapter ). get ( MEDIAN ). get ( ), Matchers. < Object > is ( newMedian ) )
4145	Assert. assertEquals ( unit1, unit2 )
4146	Assert. assertEquals ( "LOAD DATA INFILE 'data.txt' INTO TABLE db2.my_table;", text )
4147	Assert. assertNotEquals ( nodeToKey ( or01 ), nodeToKey ( or02 ) )
4148	Assert. assertEquals ( clickMe. getText ( ), buttonText )
4149	assertTrue ( areBonded ( atom1, atom2 ) )
4150	assertEquals ( "%1-%2 something %1-%3", BufferTools. substitute ( source, "", "WHATEVER" ) )
4151	Assert. assertEquals ( expected, pass. concretize ( term ) )
4152	assertEquals ( String. valueOf ( me. getCode ( ) ), me. getNick ( ) )
4153	assertEquals ( field. getValue ( ), entityField. get ( IndexingUtils. FIELD_BOOLEAN ) )
4154	assertEquals ( pool, house. getSwimmingPool ( ) )
4155	Assert. assertNull ( result )
4156	assertEquals ( sha1sum, instance. getSha1sum ( ) )
4157	assertContentChanges ( changes )
4158	assertEquals ( p1, p2 )
4159	assertEquals ( 4, objects. size ( ) )
4160	this. tester. assertContains ( "<p>hello!</p>" )
4161	Assert. assertEquals ( ACL. SYSTEM, SecurityContextHolder. getContext ( ). getAuthentication ( ) )
4162	Assert. assertEquals ( "/", getLine ( PATH_LINE, canonicalRequest ) )
4163	assertThat ( result, is ( true ) )
4164	assertTrue ( model. contains ( parent, child ) )
4165	Assertions. fail ( "Should cause an exception: " + rule )
4166	assertEquals ( 0, handlers. length )
4167	Assert. fail ( "This sequencer run should not exist, should not have lanes, and should show a 404 Not Found" )
4168	assertTrue ( mappedUrl. startsWith ( expectedPath ) )
4169	assertEquals ( 2, store. count ( ) )
4170	assertEquals ( "Port property not recognized", 1234, defaultAgiServer. getPort ( ) )
4171	assertThat ( body, containsString ( "138362880" ) )
4172	assertTrue ( videos. contains ( video ) )
4173	assertTrue ( v. equals ( v ) )
4174	assertEquals ( "Unsupported parameter test for pwd.", result )
4175	assertEquals ( 0, entries. size ( ) )
4176	assertEquals ( Status. DEGRADED, impl. getStatus ( ) )
4177	assertEquals ( documento, documentoCreado )
4178	assertThat ( result, containsString ( "dummy driver" ) )
4179	assertArrayEquals ( refar, d. getResult ( ) )
4180	assertSame ( getCache ( provider, "foo" ), getCache ( provider, "foo" ) )
4181	assertEquals ( 1, result. getSize ( ) )
4182	assertEquals ( 2, e1. getObjectContext ( ). performQuery ( query ). size ( ) )
4183	assertThat ( "same relationship from index", lookedUpRelationship, is ( relationship1 ) )
4184	assertFalse ( or. isDefined ( ) )
4185	assertThat ( iterable. iterator ( ). hasNext ( ), is ( false ) )
4186	assertThat ( ( Long ) dummyExpression. evalChild ( 0, returnNode, super. variables, super. functions, super. expressions ), is ( 4L ) )
4187	this. assertIndexOkResponseJsonStructure ( 10, 10, response )
4188	assertEquals ( s. toString ( ), expecting )
4189	assertEquals ( UnresolvedAddressException. class, thrown. getClass ( ) )
4190	assertEquals ( field, stopAtFirstIneligibleField ( field ) )
4191	assertEquals ( HttpStatus. SC_GATEWAY_TIMEOUT, result. getCode ( ) )
4192	assertEquals ( CSV_FILE, writer. toString ( ) )
4193	assertEquals ( true, spyAppConfigProperties. isHibernateManaged ( ) )
4194	assertEquals ( Status. NO_CONTENT. getStatusCode ( ), response. getStatus ( ) )
4195	assertTrue ( accountOperations. size ( ) == 0 )
4196	assertModelForInjectionIsTargetOfAdvisedModel ( )
4197	assertThat ( jobBackend. getValuesBeforeLastClear ( ), hasEntry ( "testKey", "testValue" ) )
4198	assertNotNull ( domain )
4199	assertNull ( extensionMapping )
4200	assertTrue ( serviceNode. exists ( ) )
4201	assertMockEndpointsSatisfied ( )
4202	assertTrue ( file. canExecute ( ) )
4203	assertEquals ( 1.0, listLocationEvent. size ( ), 0 )
4204	assertThat ( result. httpRequestType, equalTo ( "GET" ) )
4205	Assert. assertNull ( m )
4206	Assert. assertEquals ( "Secure Hello World!", proxy. sayHello ( ) )
4207	assertNotNull ( om )
4208	assertThat ( conv, is ( "2017-11-28T12:44:22.123" ) )
4209	Assert. assertEquals ( "and(" + "in(\\"doors\\", [2, 4]), " + "existsIn(IndexedCollection<Garage>, " + "\\"manufacturer\\", " + "\\"brandsServiced\\", " + "equal(\\"location\\", \\"Dublin\\")" + ")" + ")", query. toString ( ) )
4210	assertTrue ( filter. shouldDeliverNotification ( eventContext ) )
4211	assertEquals ( expected, actual )
4212	assertEquals ( "q q", result )
4213	assertFloatEquals ( "X position moved over the right", maxXViewportPosition, viewportVector. getX ( ) )
4214	Assert. assertEquals ( "somethingmock", ret. getValue ( ) )
4215	Assert. assertEquals ( Integer. class, clazz )
4216	assertEquals ( "Protocol Version in pom does not match version in Source: ", i. longValue ( ), VanillaPlugin. MINECRAFT_PROTOCOL_ID )
4217	assertThat ( result, CoreMatchers. is ( false ) )
4218	assertEquals ( "input", action. execute ( ) )
4219	assertTrue ( "timestamp changed", first!= second )
4220	assertFalse ( result )
4221	assertSame ( expected, actual )
4222	Assert. assertEquals ( new SimpleDateFormat ( "yyyy-MM-dd" ). format ( dt ), new SimpleDateFormat ( "yyyy-MM-dd" ). format ( dueDate ) )
4223	assertThat ( connectTimeout, is ( 3551 ) )
4224	Assert. assertNotNull ( str )
4225	arrays. assertContainsOnly ( description, actual, null )
4226	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 1, warnings. size ( ) )
4227	assertEquals ( ValidationResult. OK. getStatus ( ), validationResult. getStatus ( ) )
4228	Assert. assertEquals ( 2, capturedForward. size ( ) )
4229	context. assertIsSatisfied ( )
4230	assertTrue ( "WsnSession closed", closeFuture. await ( ). isClosed ( ) )
4231	assertTrue ( observer. accept ( path ) )
4232	assertEquals ( result. build ( ). find ( ArrayElement. class, "values" ). get ( 0 ). getEntries ( ), myTestInstance. distinctAsync ( builder ). get ( ). toList ( ) )
4233	assertEquals ( "/sendError", view )
4234	assertTrue ( "Cache file doesn't exist after store", unexistingCacheFile. exists ( ) )
4235	assertThat ( domain. getAdminServerChannelNames ( ), containsInAnyOrder ( "channelA", "channelB" ) )
4236	assertEquals ( "b:alt 2 a:alt 1\\n", found )
4237	assertEquals ( "Organization/AAA", p. getManagingOrganization ( ). getReference ( ) )
4238	Truth. assertThat ( callable. call ( 1 ) )
4239	assertEquals ( 4, NDArrayMath. offsetForSlice ( arr, slice ) )
4240	assertEquals ( "http://foo/Patient?_query=someQueryNoParams", capt. getValue ( ). getURI ( ). toString ( ) )
4241	assertEquals ( "world", doc. read ( "$.baz.hello" ) )
4242	Assert. assertThat ( argument1. getValue ( ), MockitoTestUtils. isAnyPerformanceHttpRequest ( "X.Y", 0, 0 ) )
4243	assertEquals ( "package org.kissmda.test.junit;\\n" + "import org.kissmda.AException;\\n" + "import org.kissmda.BException;\\n" + "public class ClazzName {\\n" + "  public void doSomething(  Name values) throws AException {\\n" + "    throw new BException();\\n" + "  }\\n" + "}", cu. toString ( ). trim ( ) )
4244	assertFalse ( v. isReturnToDepot ( ) )
4245	assertEquals ( expected, cls )
4246	assertEquals ( "3.5.13", verison )
4247	Assert. assertEquals ( "chosen not overwritten", secondLength, compareIrods. length ( ) )
4248	assertTrue ( tuple instanceof StaticBinding )
4249	assertEquals ( "TEXT", p2. getCode ( ). getText ( ) )
4250	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), not ( hasEnvVar ( "STARTUP_MODE", ADMIN_STATE ) ) )
4251	Assert. assertEquals ( "Unknown destination queue", MicroPipelineValidationResult. NOT_PERMITTED_DESTINATION_QUEUE_REF, new MicroPipelineValidator ( ). validateComponent ( cfg, queues, components ) )
4252	assertThat ( Asn1DerDecoder. readSubjectPublicKeyAlgorithm ( data ), is ( "DSA" ) )
4253	assertThat ( rows, is ( PrimeFacesPagedDataModel. class ) )
4254	assertLogEvent ( logEvent )
4255	assertTrue ( "Object contains keys", layout. getKeys ( ). isEmpty ( ) )
4256	assertThat ( value, is ( equalTo ( 1024L ) ) )
4257	assertEquals ( extractedYAML, expectedYAML )
4258	Assert. assertTrue (! result. isSetPhenomenonTime ( ) &&! result. isSetResultTime ( ) &&! result. isSetResult ( ) &&! result. isSetDatastream ( ) &&! result. isSetFeatureOfInterest ( ) &&! result. isSetParameters ( ) &&! result. isSetPhenomenonTime ( ) &&! result. isSetResultQuality ( ) &&! result. isSetValidTime ( ) )
4259	assertEquals ( 0, listener. updatedInjectedFilters. size ( ) )
4260	assertNull ( constraints. getExpiryTime ( ) )
4261	assertThat ( toJson, is ( "{}" ) )
4262	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( query, query1 ) )
4263	Assert. assertEquals ( Explain. ExplainType. RUNTIME, o. explainType )
4264	assertZippelGCD ( gcd, a, b )
4265	assertEquals ( ListDataProvider. class, comboBox. getDataProvider ( ). getClass ( ) )
4266	assertEquals ( origDatagrams [ testIdx ], d )
4267	assertThat ( attributeValues. getAttributes ( ). get ( "x" ), is ( "z" ) )
4268	assertArrayEquals ( new BigDecimal [ ] { new BigDecimal ( "1" ), new BigDecimal ( "2.23" ), new BigDecimal ( "3" ) }, params. valuesAsBigDecimals ( "a" ) )
4269	assertFalse ( ResultSetCompare. equalsByTermAndOrder ( r2, rs1 ) )
4270	assertThat ( expected, equalTo ( actual ) )
4271	assertEquals ( TestUtil. HTTPS_TEST_PROXY, result. get ( 0 ) )
4272	assertEquals ( "6", expression. with ( "a.b", "2" ). and ( "$PI", "3" ). eval ( ). toPlainString ( ) )
4273	assertThat ( extractor. extractDataModelCondition ( sheet ), is ( ( Object ) EnumSet. noneOf ( DataModelCondition. class ) ) )
4274	Assert. assertFalse ( rdbStore. checkOk ( ) )
4275	assertOut ( "var a:* = function() {\\n}" )
4276	assertEquals ( "short field not aligned", MAGIC, testlib. struct_align_Signed16 ( s ) )
4277	assertSame ( test, base )
4278	assertEquals ( "register() registers a new command", "foo", command. getName ( ) )
4279	assertEquals ( version. toString ( ), "2" )
4280	assertSame ( result, sameResult )
4281	assertEquals ( "Digest", scheme )
4282	assertEquals ( 2, repository. getCommits ( ). size ( ) )
4283	assertThat ( result. isSuccess ( ), is ( true ) )
4284	Verify. assertListsEqual ( FastList. newListWith ( 300, 500, 600 ), accounts. asEcList ( ). collect ( CustomerAccountFinder. accountId ( ) ) )
4285	assertArrayEquals ( FRX_2012_DISCLOSURE_EXPECTED, UtilsForTesting. tableToArrayOfRows ( table ) )
4286	assertThat ( file. exists ( ), is ( true ) )
4287	Assert. assertEquals ( expectedKeys, actualKeys )
4288	Assert. assertEquals ( 1, rcs. size ( ) )
4289	assertEquals ( "my=value", getLastRequestQuery ( ) )
4290	assertNotNull ( victim. getInputStream ( mockRequest, mockResponse, "http://www.google.com" ) )
4291	assertThat ( doc. getKey ( ), is ( notNullValue ( ) ) )
4292	assertNotEquals ( one, 1 )
4293	Assert. assertEquals ( ContentType. DefinitionType. CONCRETE_COMPONENT, type. getDefinitionType ( ) )
4294	Assert. assertEquals ( 2, analyser. getLoadRightAfterActivity ( route. getActivities ( ). get ( 2 ), route ). get ( 0 ) )
4295	assertTrue ( validator. validate ( "student", ids ). containsAll ( ids ) )
4296	assertEquals ( "test", event. getName ( ) )
4297	assertEquals ( retour. toString ( ), "SimpleSens ('T')" )
4298	Assert. assertEquals ( matrixCplx_EXPECTED, matrixCplx_ACTUAL )
4299	assertEquals ( action. getShowWeekender ( ), false )
4300	assertResultSet ( res )
4301	Assert. assertFalse ( impl. canCachedResponseBeUsed ( host, request, entry, now ) )
4302	assertThat ( backToJson. toString ( ), sameJSONAs ( inputJson. toString ( ) ) )
4303	assertEquals ( 1, violations. size ( ) )
4304	assertEquals ( expected, cassandraRowMapper. map ( resultSet ). next ( ) )
4305	assertTrue ( "should run suites containing matching method", exactFilter. shouldRun ( suite ) )
4306	assertTrue ( handler. supportsView ( ComplexObsHandler. RAW_VIEW ) )
4307	Assert. assertTrue ( updatedRows > 0 )
4308	assertFalse ( result. isResult ( ) )
4309	context. assertSentrySemanticException ( statement, "CREATE database " + DB1, semanticException )
4310	assertEquals ( "di.me meeting", updated. getPrefLabel ( ) )
4311	Assert. assertEquals ( "URL should be updated", TEST_URL, popup. getUrl ( ) )
4312	assertEquals ( areCongruent ( gaussOut, bilateralOut, 0 ), false )
4313	assertEquals ( expectedReadConcern, parsedReadConcern )
4314	assertThat ( match, is ( BestTypeMatch. T2 ) )
4315	assertEquals ( String. class, collectionParameterType )
4316	assertEquals ( id, dc. getClientID ( ) )
4317	assertThatAcceptorWasNotStarted ( )
4318	assertTrue ( downloader. getClass ( ). equals ( BasicDownloader. class ) )
4319	assertThat ( identifiedPrincipals, hasItems ( new UidPrincipal ( 1000 ), new GidPrincipal ( 1000, true ), new JwtSubPrincipal ( "EXAMPLE", sub ), new JwtJtiPrincipal ( "EXAMPLE", jti ) ) )
4320	assertThat ( minimizedChanges, contains ( addAxiomA ) )
4321	assertTrue ( closed. await ( 2, SECONDS ) )
4322	assertNull ( "Did not return null for invalid container.", config. getString ( "fake", PARENT_KEY ) )
4323	assertOut ( "var /** @type {XML} */ a = new XML(\\"<top attr1='cat'><child attr2='dog'><grandchild attr3='fish'>text</grandchild></child></top>\\")" )
4324	assertHistoricProcessInstances ( )
4325	assertEquals ( "failed to generate new object with parameterized type", "new ArrayList<String>()", s )
4326	Assert. assertEquals ( 2, permutations. size ( ) )
4327	Assert. assertEquals ( "Valid input provided", NodeRegistrationState. OK, new SPQRNodeManagementResource ( mockedNodeManager ). registerNode ( request ). getState ( ) )
4328	assertNull ( strategy. getPlacement ( eventWithError ( error ) ) )
4329	assertEquals ( expResult, result )
4330	assertEquals ( "{\\"a\\":1}", n )
4331	assertTrue ( message. contains ( "No topic specified" ) )
4332	assertEquals ( "There should be only one MavenResolver registration - after non-INITIAL ConfigAdmin update", 1l, count )
4333	assertEquals ( "Created incorrect LinkedHashMap", 0, hm2. size ( ) )
4334	assertIsAborted ( tx )
4335	context. assertIsSatisfied ( )
4336	assertThat ( remoteFilesList. getResourceList ( ), contains ( allOf ( hasProperty ( "url", is ( baseUrl + "files/dataset" ) ), hasProperty ( "mimeType", is ( "application/vnd.timbuctoo-rdf.nquads_unified_diff" ) ) ) ) )
4337	Assert. assertEquals ( "saved", buckets5, buckets5After )
4338	AssertJUnit. assertTrue ( difference. isZero ( 1e-7 ) )
4339	assertEquals ( JSON. serialize ( result ), "[ { \\"field1\\" : \\"value1\\"}, { \\"field2\\" : 12}]" )
4340	Assert. assertEquals ( 1, ( int ) reporter. getProblemCounters ( ). get ( Code. FIELD_NOW_STATIC. code ( ) ) )
4341	Assert. assertEquals ( new Path ( "obj1.nested.objArr.*.nestedArrObjString1" ), fullPath )
4342	assertEquals ( "code", macroFactory. getGroovyMacroCode ( GROOVY_MACRO ) )
4343	assertEquals ( "INSERT INTO user (user_id,user_name,pwd ) VALUES ( :userId,:userName,:pwd ) ", t. getInsertSql ( ) )
4344	assertArrayEquals ( new Object [ ] { }, params )
4345	assertEquals ( "DELETE", request. getMethod ( ) )
4346	runner. assertAllFlowFilesTransferred ( ListenRELP. REL_SUCCESS, 0 )
4347	assertFalse ( userCanSubmitChangeRequest )
4348	assertSideBarContainsClass ( "closed" )
4349	Assert. assertEquals ( "This a //[[link>>MyPage]]//", printer. toString ( ) )
4350	Assert. assertFalse ( handler. deleteCgroup ( cgroupDir. getAbsolutePath ( ) ) )
4351	Assert. assertEquals ( "helloworld", result )
4352	assertTrue ( BatchUtil. evaluate ( batch ) )
4353	assertEquals ( foo, objectAccessor. get ( ) )
4354	assertThat ( result, hasSize ( 1 ) )
4355	assertEquals ( "Method #toString is wrong", exp, mapper. toString ( ) )
4356	context. assertIsSatisfied ( )
4357	assertEquals ( "Expected 10 results!", 10, n )
4358	assertThat ( destination. getBodyText ( ), is ( "Navigation Destination from : from the rule button" ) )
4359	assertStatementCanBeDeparsedAs ( select, statementTgt )
4360	Assert. assertTrue ( listener. success )
4361	assertions. startsWith ( sequence )
4362	rule. assertScenarioEnded ( )
4363	assertThat ( result, containsString ( "auth" ) )
4364	assertTrue (! readMap. equals ( testMap ) )
4365	assertMockEndpointsSatisfied ( )
4366	assertEquals ( "12345", job. getConfiguration ( ). get ( "hbase.client.scanner.timeout.period" ) )
4367	assertEquals ( "Getting a feed should return a 200", HttpStatus. SC_OK, httpClient. executeMethod ( getFeedMethod ) )
4368	assertEquals ( asList ( "|忙\\\\n", "\\\\o\\no\\\\", "\\\\|a\\\\\\\\n", "酶\\\\\\n酶\\\\" ), texts )
4369	assertEquals ( FleetSize. INFINITE, vrp. getFleetSize ( ) )
4370	assertEquals ( max, connPerRoute. getMaxPerRoute ( route ) )
4371	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
4372	assertEquals ( "prop likeIgnoreCase \\"abc\\"", e. toString ( ) )
4373	Assert. assertEquals ( vector, new Vector ( - 75, 265, - 75 ) )
4374	assertEquals ( false, out. firstElement ( ). get ( ) )
4375	assertThat ( givenStories. getPaths ( ), equalTo ( Arrays. asList ( GIVEN_STORY_PATH1 ) ) )
4376	assertThat ( mode, is ( equalTo ( ShellMode. batch ( "replay c:\\\\Users\\\\franckc\\\\script.txt" ) ) ) )
4377	assertThat ( testStatus, is ( expectedStatus ) )
4378	assertTodo ( expected, actual )
4379	assertTrue ( 0!= rmAdminCLI. run ( args ) )
4380	Assert. assertFalse ( lanes. isEmpty ( ) )
4381	assertThat ( connection. getClass ( ). getName ( ), is ( DummyConnection. class. getName ( ) ) )
4382	Assert. assertArrayEquals ( new String [ ] { "w=what" }, cg. getContext ( 0, TOKENS_1, new String [ 0 ], AC_1 [ 0 ] ) )
4383	assertEquals ( Arrays. asList ( "ok" ), list )
4384	Assert. assertFalse ( sso. isSessionValid ( us ) )
4385	assertTrue ( "Failed permission check was not logged", loggedFailedPermissionCheck ( AUDIT_LOG_FILE, USER ) )
4386	assertThat ( messages. getMessages ( ). getAllMessages ( ), hasSize ( 0 ) )
4387	assertFalse ( channelManager. isEphemeralNode ( user1 ) )
4388	assertArrayEquals ( array ( "Don't Panic!" ), linesOutput ( ) )
4389	assertEquals ( bd, result )
4390	assertEquals ( 15634800000L, q. getFirstMillisecond ( ) )
4391	assertEquals ( "a = 1\\n", readFile ( output ) )
4392	assertEquals ( 7, providers. size ( ) )
4393	assertThat ( File. separator, is ( "/" ) )
4394	assertThat ( stdoutObsWasRead. get ( ) )
4395	assertFalse ( webSocketUpgrade. validateUpgradeReply ( responseStr. getBytes ( ) ) )
4396	assertThat ( owlOntologyChange, is ( ontologyChange ) )
4397	Assert. assertEquals ( list. size ( ), ( int ) Math. floor ( t ) )
4398	Assert. assertNotNull ( addressResultsDto )
4399	Assert. assertTrue ( resource. contains ( DummyService. class. getName ( ) ) )
4400	assertEquals ( "'unknown'", column. getDefaultValue ( ) )
4401	Assert. assertEquals ( ( Integer ) 6, dropResult. head ( ) )
4402	assertEquals ( 1L, result )
4403	Assert. assertTrue ( trailers. get ( ). isEmpty ( ) )
4404	assertThat ( userInfo, nullValue ( ) )
4405	assertCanUpload ( s3Properties )
4406	arrays. assertStartsWith ( someInfo ( ), actual, emptyArray ( ) )
4407	assertEquals ( RenameSettings. MachStrategy. EMBEDDED, view. getMachStrategy ( ) )
4408	Assert. assertEquals ( "ref:g.63671", gPos. toString ( ) )
4409	assertFalse ( sf. getCache ( ). containsEntity ( "com.hazelcast.hibernate.entity.DummyEntity", 0L ) )
4410	assertNotNull ( instance. check ( newGitHubPRDecisionContext ( ). withPrTrigger ( trigger ). withRemotePR ( remotePr ). withListener ( listener ). withLocalPR ( localPr ). build ( ) ) )
4411	assertThat ( Timezone. of ( "???", fallback ), is ( expected ) )
4412	Assert. assertEquals ( argumentCaptor1. getValue ( ), "test" )
4413	assertThat ( change. isChangeFor ( axiomType ), is ( false ) )
4414	assertNotNull ( Recording. fetcher ( "RTXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
4415	assertNotSame ( instruction1, instruction2 )
4416	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, query2 ) )
4417	assertNotNull ( "Created run was not assigned an ID.", mr. getId ( ) )
4418	assertTrue ( e2. contains ( "<?xml-stylesheet type='text/xsl' href='foobar.xsl'?>" ) && e2. contains ( e1. substring ( e1. indexOf ( "?>" ) + 2 ). trim ( ) ) )
4419	assertEquals ( ( Integer ) Integer. MAX_VALUE, extractedId )
4420	assertNull ( daoService. get ( userWrapper, "PKEY", StatisticRefEnum. CREATED_ISSUE_COUNT ) )
4421	assertEquals ( 100L, snapshot. getValue ( ) )
4422	assertActive ( player1, player2 )
4423	given ( ). when ( ). get ( "rest/session/1223344" ). then ( ). assertThat ( )
4424	assertEquals ( "   ", res )
4425	assertNull ( account. getBalance ( ) )
4426	assertEquals ( expected, properties )
4427	assertThat ( countNeoFriends, is ( 3 ) )
4428	assertEquals ( 1, taskService. createTaskQuery ( ). taskAssignee ( "Kermit The Frog" ). count ( ) )
4429	assertFalse ( valid )
4430	assertEquals ( expected, splitter. split ( str ) )
4431	assertNotNull ( Metric. reader ( "CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
4432	Assert. assertFalse ( deviceMastership. isDeviceMastered ( ) )
4433	assertThat ( actual, equalTo ( expected ) )
4434	assertNull ( resourceEntity. getExternalLink ( ) )
4435	assertThat ( FileUtils. readFileToString ( new File ( tempCopyFile ) ), CoreMatchers. is ( cp_file. asText ( ) ) )
4436	assertEquals ( "(10, 0)", grid. getCell ( 10, 0 ). getText ( ) )
4437	assertEquals ( "{}", r. toString ( ) )
4438	assertEquals ( "um real", actual )
4439	editor. assertHoverContains ( "@ConditionalOnMissingBean", "@ConditionalOnMissingBean (types: example.Hello; SearchStrategy: all) did not find any beans\\n" + "\\n" + "Process [PID=22022, name=`test-conditionals-live-hover`]" )
4440	assertTrue ( obj == null )
4441	Assert. assertEquals ( m, TestUtils. serializeAndRecover ( m ) )
4442	assertEcssEquals ( ".myDiv{" + "background-image:\\"url(#{resource['test?gradientHeight=100px&height=150px&gradientColor=Skin.myskin']})\\";" + "}", convertFragment ( xcss ) )
4443	assertEquals ( "1, 2, 3", tree. toString ( ) )
4444	assertThat ( "minimun number of cores", sut. getMinCores ( ), is ( equalTo ( minCores ) ) )
4445	assertEquals ( "Domain Type Object Name", entityNameExtractor. apply ( new DomainType ( ) ) )
4446	assertEquals ( stringConstructor. getName ( ). hashCode ( ), resolvedConstructor. hashCode ( ) )
4447	assertNotNull ( "No body returned", body )
4448	Assert. assertTrue ( credentialsProvider instanceof DefaultAWSCredentialsProviderChain )
4449	assertEquals ( "testDesc", trace. getDescription ( ) )
4450	Assert. assertTrue ( c1. isCompatible ( c2, mutations ) )
4451	assertEquals ( 10, orders. size ( ) )
4452	assertEquals ( "Close", close )
4453	assertThat ( foundResources, empty ( ) )
4454	assertTrue ( isEqual ( d1, d2 ) )
4455	Assert. assertEquals ( "Value is incorrect", map, value )
4456	Assert. assertEquals ( 2, analyser. getNumberOfPickupsAtBeginning ( route ), 0.01 )
4457	assertErrorResponse ( response, ErrorResponse. ErrorType. ITEM_ERROR, "PRODUCT_NOT_READY" )
4458	assertNotNull ( result )
4459	assertNotEquals ( otherHashCode, foreignableFieldHashCode )
4460	Assert. assertNull ( localFileInstanceStorageManager. getBinlogInfo ( "test1" ) )
4461	assertEquals ( "test", JsonbProvider. provider ( ). create ( ). build ( ). fromJson ( new StringReader ( json ), SimpleProperty. class ). value )
4462	Assert. assertNotNull ( "null data object, was not found", dataObject )
4463	assertEquals ( CacheResultCode. NOT_EXISTS, concreteCache. GET ( "key" ). getResultCode ( ) )
4464	Assert. assertNotNull ( resultEntity )
4465	assertFlowDetails ( actualFlows, deserFlows )
4466	assertTrue ( output. contains ( "MASK-" ) )
4467	assertNotNull ( localAddressProvider. get ( ) )
4468	assertEquals ( 2000, testVehicleSetTests. getYear ( ) )
4469	assertEquals ( "http://example.com", actual )
4470	assertEquals ( "#foobar", link. getAttribute ( "href" ) )
4471	assertEquals ( "/kill", result )
4472	assertTrue ( SOME_FLOAT == result )
4473	assertThat ( command. accept ( state ), is ( false ) )
4474	assertEquals ( "Select with simple join", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
4475	assertEquals ( extensionConverterManager, sm. getExtensionConverterProvider ( ) )
4476	assertEquals ( "$metadata#ESCompMixPrimCollComp(" + "PropertyInt16," + "PropertyMixedPrimCollComp/CollPropertyString," + "PropertyMixedPrimCollComp/PropertyComp/PropertyInt16," + "PropertyMixedPrimCollComp/PropertyComp/PropertyString," + "PropertyMixedPrimCollComp/CollPropertyComp)", ContextURLBuilder. create ( contextURL ). toASCIIString ( ) )
4477	Assert. assertEquals ( "88095550", endereco. getCep ( ) )
4478	assertThat ( url, is ( EXPECTED_URL_BASE ) )
4479	assertEquals ( ss, ( ( SubscriptionsStoreImpl ) manager. getSubscriptionsStore ( ) ). getImpl ( ) )
4480	Assert. assertEquals ( 13, list. size ( ) )
4481	assertTrue ( "Population is not empty.", population. isEmpty ( ) )
4482	Assert. fail ( "expected IllegalArgumentException" )
4483	Assert. assertFalse ( validator. validSequence ( 0, inputSequence, outcomesSequence, outcome ) )
4484	assertEqual ( "1", query. next ( ) )
4485	assertNotSame ( fsU1, fsU2 )
4486	assertNotNull ( newMember. getId ( ) )
4487	assertSame ( mockConnection, connection )
4488	assertTrue ( userCanUpdateProject )
4489	assertTrue ( d_domain. getIndications ( ). isEmpty ( ) )
4490	assertNull ( cs. getValueReference ( ) )
4491	assertThat ( callbackRan, is ( true ) )
4492	assertEquals ( newVariable. getId ( ), ( ( FieldAccessJPAEntity ) variable ). getId ( ) )
4493	e2. put ( "/B?body=" + UonSerializer. DEFAULT. builder ( ). applyAnnotations ( DTOs2. Annotations. class ). build ( ). serialize ( DTOs2. B. INSTANCE ), "a" ). execute ( ). assertBody ( expected )
4494	assertThat ( time. with ( PlainTime. COMPONENT. roundedToFullMinute ( ) ), is ( PlainTime. midnightAtEndOfDay ( ) ) )
4495	assertNotNull ( githubPage )
4496	assertEquals ( params, clone. getParameters ( ) )
4497	assertEquals ( actualCapacity, 5 * shipMechanics. getCargoSpace ( ShipType. DAGGER ) + 2 * shipMechanics. getCargoSpace ( ShipType. MULE ) )
4498	assertThat ( auth. getTotpKey ( ), nullValue ( ) )
4499	Assert. assertEquals ( "Count of customer", 0, res )
4500	assertThat ( isValid, is ( true ) )
4501	Assert. assertEquals ( "Fr3gSvoAeKbGpQD3r98KFeB50P3Gq14XBVsv5fpiaBvJ3HTOpREiwYGs20Xw", endereco. getDescricaoMunicipio ( ) )
4502	assertThat ( "one", is ( event. getPayload ( ). toString ( ) ) )
4503	assertThat ( Template. parse ( markup ). render ( assigns ), is ( expected ) )
4504	assertFalse ( service. ping ( ) )
4505	assertEquals ( HTTP_OK, request. get ( ). response ( ). code ( ) )
4506	assertEquals ( 0, suggestions. size ( ) )
4507	assertNotNull ( nre )
4508	assertEquals ( mode, permission. getMode ( ) )
4509	assertEquals ( obj, stringDeserializer. deserialize ( result ) )
4510	assertEquals ( null, logger. sender )
4511	assertThat ( secret, is ( "secret" ) )
4512	assertEquals ( CollectionStringProducer. class, typeProducer. getClass ( ) )
4513	assertFunctionTreeLines ( values, 3 )
4514	assertEquals ( "select a", result )
4515	Assert. assertTrue ( result )
4516	assertNotNull ( actualDeviceIO )
4517	assertOut ( "a(b.toString())" )
4518	assertThat ( minimizedChanges, is ( empty ( ) ) )
4519	assertEquals ( expected, actual )
4520	assertTrue ( connector instanceof NioSocketConnector )
4521	assertThat ( hijri. with ( CommonElements. weekOfYear ( HijriCalendar. family ( ), model ). atCeiling ( ) ), is ( expected ) )
4522	Assert. assertTrue ( true )
4523	assertTrue ( entity. equals ( entity2 ) )
4524	assertEquals ( "ENVELOPE [id=''](11.0 22.0,44.0 88.0)", writer. toString ( ) )
4525	assertEquals ( Alignment. LEFT, gridColumn. getAlign ( ) )
4526	Assert. assertNull ( comp. getHtmlClasses ( ) )
4527	assertThat ( jPath. elementFrom ( glossaryRoot ). getAsString ( ), equalTo ( "XML" ) )
4528	assertEquals ( 0, buyPercentageFee. compareTo ( new BigDecimal ( "0.002" ) ) )
4529	this. assertGet ( "servicetemplates/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fservicetemplates%252Fponyuniverse%252Fdriverinjection/DriverInjectionTest/injector/options", "servicetemplates/ServiceTemplateResource-getInjectionOptions-DriverInjectionTest.json" )
4530	assertEquals ( field. getValue ( ), entityField. get ( IndexingUtils. FIELD_NULL ) )
4531	assertEquals ( 123L, info. getId ( ) )
4532	assertThat ( md, notNullValue ( ) )
4533	assertNotNull ( uploadResponse )
4534	assertTrue ( ctx. isAborted ( ) )
4535	assertThat ( stringFragment, is ( "FOOBAR with NO " ) )
4536	Assert. assertArrayEquals ( expected_output, dvxOut. toArray ( ), 1e-6 )
4537	assertEquals ( expResult, result )
4538	Assert. assertEquals ( list, objectTree. get ( "randomStrings" ) )
4539	Assert. assertTrue ( false )
4540	assertThat ( edges, containsInAnyOrder ( likeVertex ( ). withLabel ( Collection. DATABASE_LABEL ). withProperty ( Collection. COLLECTION_NAME_PROPERTY_NAME, "prefixpersons" ), likeVertex ( ). withLabel ( Collection. DATABASE_LABEL ). withProperty ( Collection. COLLECTION_NAME_PROPERTY_NAME, "prefixdocuments" ) ) )
4541	assertThat ( session1, is ( not ( session2 ) ) )
4542	assertEquals ( new Float ( 123.4 ), result )
4543	assertTrue ( outAny. equal ( inAny ) )
4544	assertEquals ( "Wrong variable value", TEST_VALUE, interpolator. resolve ( "" ) )
4545	assertNotNull ( provisioningServiceClient )
4546	Assert. assertEquals ( now, value )
4547	assertEquals ( "All rules have been imported", 8, ss. size ( ) )
4548	assertTrue ( r1 instanceof PublicCloneable )
4549	assertFalse ( TestRMILoadBalancerFactory. areServerBalancersClosed ( ) )
4550	assertThat ( context. statement ( ), is ( "\\"b'c\\"" ) )
4551	assertThat ( returnedMode, is ( AvroMode. GENERIC ) )
4552	assertEquals ( 9, entities. size ( ) )
4553	assertNotNull ( result )
4554	assertThat ( "META-INF/maven/org.talend.components/file-input/dependencies.txt", equalTo ( computePathToDepsFromMvnUrl ) )
4555	assertThat ( result, isFailedCommand ( ) )
4556	Assert. assertEquals ( msg, expected, actual, delta )
4557	assertTrue ( caughtException )
4558	assertThat ( priceSum, is ( 60930L ) )
4559	assertEquals ( o, null )
4560	assertEquals ( ( short ) - 4, result )
4561	assertEquals ( new Scanner ( getClass ( ). getResourceAsStream ( "/expected-3-sample.html" ), "UTF-8" ). useDelimiter ( "\\\\A" ). next ( ), sw. toString ( ) )
4562	assertTrue ( entity. equals ( entity2 ) )
4563	assertEquals ( "1", client. portfolios. findById ( "1" ). execute ( ). gid )
4564	assertThat ( actual, sameJsonAs ( expected ) )
4565	assertFalse ( criteriaReader. start ( ) )
4566	assertEquals ( future, underTest. streamCollect ( futures, consumer, supplier ) )
4567	assertEquals ( opponent. getHero ( ). getHp ( ), opponentHealth - 2 )
4568	assertEquals ( reference, FluentIterable. from ( lessSpecific ). transform ( Functions. toStringFunction ( ) ). toSet ( ) )
4569	assertEquals ( "1:John\\n2:Taro", got )
4570	assertEquals ( expected, actual )
4571	Assert. notNull ( ( Department ) departmentDao. getDepartmentById ( departmentParent. getId ( ) ) )
4572	assertThat ( "Unexpected MDX query", getPivotModel ( ). getCurrentMdx ( ), is ( equalTo ( "SELECT {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS, " + "CrossJoin({[Gender].[All Gender]}, {[Store].[Canada], [Store].[Mexico], [Store].[USA]}) ON ROWS " + "FROM [Sales] WHERE [Time].[1997]" ) ) )
4573	assertEquals ( "PRUEBA", empresa. getCodigo ( ) )
4574	assertEquals ( "b_a_two", column )
4575	assertEquals ( expResults, results )
4576	assertViolationsThat ( report. getValidationViolations ( ), equalTo ( "queryParameter 'a' in action(POST /ok) has illegal condition'minimum'" ), equalTo ( "queryParameter 'b' in action(POST /ok) has illegal condition 'pattern'" ), equalTo ( "queryParameter 'b' in action(POST /ok) has illegal condition'minimum'" ), equalTo ( "queryParameter 'c' in action(POST /ok) has illegal condition 'pattern'" ), equalTo ( "queryParameter 'd' in action(POST /ok): File type is only allowed in formParameter" ), equalTo ( "No formParameter allowed in action(POST /ok) mime-type('application/json') (only allowed with 'application/x-www-form-urlencoded' or'multipart/form-data')" ) )
4577	assertTrue ( constrainedReturnDescriptor. hasConstraints ( ) )
4578	assertThat ( request. getConnectorId ( ), equalTo ( zeroValue ) )
4579	Assert. assertEquals ( "Document ID mismatch", expectedDocumentID, actualDocumentID )
4580	Assert. assertEquals ( getManager ( ). count ( ), 0 )
4581	assertEquals ( "{\\"d\\":{\\"MaximalAge\\":99}}", StringHelper. inputStreamToString ( ( InputStream ) result. getEntity ( ) ) )
4582	assertTrue ( fileContents. contains ( MULTI_LINE_VALUE ) )
4583	TerminalParserTest. assertParser ( parser, "order by 1, 2 desc, 3 asc", new OrderBy ( Arrays. asList ( new OrderBy. Item ( ExpressionParserTest. number ( 1 ), true ), new OrderBy. Item ( ExpressionParserTest. number ( 2 ), false ), new OrderBy. Item ( ExpressionParserTest. number ( 3 ), true ) ) ) )
4584	Assert. assertEquals ( "41 minutes ago", prettyTime. format ( prettyTime. calculatePreciseDuration ( new Date ( new Date ( ). getTime ( ) - 40 * 60 * 1000 - 40 * 1000 ) ) ) )
4585	Assert. assertEquals ( counter, objective )
4586	assertEquals ( "{\\"name\\":\\"aggregated.counterMetric@#$%^_123AaZz09\\",\\"columns\\":[\\"value\\",\\"time\\"],\\"points\\":[[1.2222," + currentTime + "]]}", statsdMetricAggregated. getInfluxdbV1JsonFormatString ( ) )
4587	assertEquals ( expected, uri. toString ( ) )
4588	assertTrue ( "our user should be member of one VO", vos. size ( ) >= 1 )
4589	Assert. assertTrue ( slangBanner. getBanner ( ). contains ( banner ) )
4590	Assert. assertFalse ( lu. isSingular ( ) )
4591	assertEquals ( "(String,int)", mnd. getParameterDisplaySignature ( ) )
4592	assertEquals ( "Wrong class for isolatednode", net. ggtools. grand. tasks. IsolatedNodeFilterType. class, filter. getClass ( ) )
4593	Assert. assertNotNull ( addressResultsDto )
4594	assertTrue ( tester. testXmlSerialization ( ) )
4595	assertEquals ( future, underTest. collect ( futures ) )
4596	assertEquals ( expResult, result )
4597	assertEquals ( expected, actual )
4598	assertFalse ( response. isPresent ( ) )
4599	Assert. assertArrayEquals ( coeff_EXPECTED, coeff_ACTUAL, DELTA_01 )
4600	assertSame ( reply, myTestInstance. runAdminCommand ( "command" ) )
4601	assertEquals ( expected, output )
4602	assertEquals ( "Base for doubles is wrong", Double. valueOf ( 3.6d ), parsed )
4603	assertThat ( target. getOutput ( ), is ( output ) )
4604	assertEquals ( 0, redis. size ( ) )
4605	Assert. assertTrue ( "Calling set multiple times should not be additive", CollectionUtils. isEqualCollection ( types2, widget. getFileTypes ( ) ) )
4606	Assert. assertEquals ( "checksum from orig bytes and irods file do not match", localChecksum. getChecksumTransmissionFormat ( ), irodsChecksum. getChecksumTransmissionFormat ( ) )
4607	assertTrue ( theColPos. detect ( thePosition1, thePosition2 ) )
4608	assertEquals ( 1, agds. getCloseCount ( ). get ( ) )
4609	assertEquals ( "Success", json. getString ( "status" ) )
4610	assertEquals ( expectedSource, instrumentedSource )
4611	Assert. assertEquals ( 4, arrays. size ( ) )
4612	assertFalse ( cell. get ( MessageTrait. POPUP_ACTIVE ) )
4613	Assert. assertEquals ( "/* 0 */ a\\n/* 1 */ bla\\n/* 2 */ c", lineNumbered. toString ( ) )
4614	assertEquals ( 4, fixture. bytesRead ( ) )
4615	assertEquals ( "gonzo", result. getId ( ) )
4616	assertNotNull ( sr )
4617	Assert. assertTrue ( commandLineOutput. contains ( "Total jobs:1" ) )
4618	assertFalse ( "Top250 is empty", result. isEmpty ( ) )
4619	assertTrue ( "Same arrays should be equal", equals )
4620	assertThat ( validationList1, is ( Arrays. asList ( INVALID_DB_TYPE, INVALID_DB_SERVER_NAME, INVALID_USERNAME, INVALID_PASSWORD, INVALID_TRUST_ALL_ROOTS, INVALID_RESULT_SET_TYPE, INVALID_RESULT_SET_CONCURRENCY, INVALID_COMMAND, INVALID_TIMEOUT ) ) )
4621	assertEquals ( a, new SnapshotVersion ( "12w50b" ) )
4622	assertThat ( query. getQuery ( ), is ( "EmptyEntities" ) )
4623	assertEquals ( "An unexpected node membership was returned", expected, result )
4624	assertFalse ( validator. validate ( EntityNames. TEACHER, teachers ). equals ( teachers ) )
4625	assertThat ( testHostname, is ( expectedHostname ) )
4626	Assert. assertEquals ( 1, count )
4627	assertEquals ( 0, counter. get ( ) )
4628	assertEquals ( "Session id in Logging MDC is wrong", "47", MDC. get ( configuration. getLoggingMdcKey ( ) ) )
4629	assertThat ( Hex. toHexString ( wrapped ). toLowerCase ( ), is ( expected. toLowerCase ( ) ) )
4630	Assert. assertEquals ( expected, actual, delta )
4631	Assert. assertEquals ( "[4,3,2,1]", linkedList. toString ( ) )
4632	runner. assertAllFlowFilesTransferred ( FetchS3Object. REL_FAILURE, 1 )
4633	Assert. assertTrue ( "Failed to verify signed challenge", SaslEcdsaNist256PChallenge. verify ( keyPair. getPublic ( ), CHALLENGE, signature ) )
4634	assertTrue ( actualValue. compareTo ( expectedValue ) == 0 )
4635	assertEquals ( widget. x, 1 )
4636	assertEquals ( oldPos + size, buffer. position ( ) )
4637	assertThat ( method. toString ( ), is ( equalTo ( "GET" ) ) )
4638	assertContainsOnly ( testee. getFileFilters ( ), filter1, filter3 )
4639	assertEquals ( IotHubStatusCode. OK_EMPTY, result )
4640	assertEquals ( endOfDay ( base. plusWeeks ( 3 ) ), absoluteTime )
4641	assertTrue ( entity. equals ( loadedEntity ) )
4642	assertEquals ( expected, actual )
4643	assertEquals ( 3, result. getViolations ( ). size ( ) )
4644	assertEquals ( 0, kars. size ( ) )
4645	assertEquals ( setA, setB )
4646	assertLookup ( breaks, values, srcImg, DataBuffer. TYPE_DOUBLE )
4647	Assert. assertTrue ( contains )
4648	AssertJUnit. assertTrue ( difference. isZero ( 1e-7 ) )
4649	assertTrue ( "Result: " + session. getHtmlToDisplay ( ), session. getHtmlToDisplay ( ). contains ( "<option value=\\"true\\" selected=\\"true\\">" ) )
4650	assertEquals ( expected, actual )
4651	MutableMessageFactoryTest. assertExpiryDateEquals ( expiryDateValue, message )
4652	Assert. assertEquals ( String. format ( "send to %s now", html ( bb, "email", "address.domain" ) ), formatter. format ( "send to email@address.domain now", defaultOptions ( ) ) )
4653	assertEquals ( padded ( ARRAY_OVERHEAD + FIRST_DIM * ( OBJECT_REF + padded ( ARRAY_OVERHEAD + SECOND_DIM * OBJECT_REF ) ) ) + padded ( ARRAY_OVERHEAD + 2 * INT ), ThreadTrackingContext. getBytes ( ) )
4654	Assert. fail ( "server-group name missing" )
4655	assertEquals ( qf1, qf2 )
4656	assertCursor ( meta. pofClassAttribute, 0, 0, 54, 61 )
4657	assertEquals ( 3.0, store. getRating ( book ),.01 )
4658	assertThat ( parsed, is ( answer ) )
4659	assertTrue ( connectionServiceImpl. updateConnection ( mockDBConnection ) )
4660	assertEquals ( "Unexpected state class", TwinColSelectState. class, state. getClass ( ) )
4661	assertServiceEvent ( ServiceEvent. REGISTERED, TestService. class, 5, TimeUnit. SECONDS )
4662	assertions. doesNotContain ( ( short ) 6, ( short ) 8 )
4663	Assert. assertEquals ( "Candidate size should be " + EXPECTED_CANDIDATE_SIZE, EXPECTED_CANDIDATE_SIZE, termList. size ( ) )
4664	assertParser ( twig )
4665	assertEquals ( CustomsDeclarationCollection. getData ( ). size ( ), 1 )
4666	Assert. assertTrue ( EqualsBuilder. reflectionEquals ( result, expected ) )
4667	Assert. assertEquals ( ps2. getUuid ( ), vol. getPrimaryStorageUuid ( ) )
4668	assertEquals ( true, testVehicle. isClean ( ) )
4669	assertFlowState ( ACCEPTED_CONFIRMATION_FAILED )
4670	assertEquals ( "Hello, World", req. receiveMessage ( ). popString ( ) )
4671	assertEquals ( expected, actual )
4672	assertEquals ( 11, calculateTextWidth ( fontMetics, "line1<col=ff0000>>line2" ) )
4673	assertThat ( literal. getLang ( ), is ( "en" ) )
4674	Assert. assertEquals ( xmlEsperado, icms101. toString ( ) )
4675	Assert. assertEquals ( nowPlusOneMin, deadline. getValue ( ) )
4676	assertArrayEquals ( expectedOutput, output )
4677	assertServerReceived ( "<iq id=\\"*\\" type=\\"set\\" from=\\"userc@localhost/voxeo\\" to=\\"#callId@localhost\\"><say xmlns=\\"urn:xmpp:tropo:say:1\\"><audio xmlns=\\"\\" src=\\"http://ccmixter.org/content/DoKashiteru/DoKashiteru_-_you_(na-na-na-na).mp3\\"></audio></say></iq>" )
4678	assertEquals ( 1L, query ( ). from ( show ). where ( show. acts. containsKey ( "a" ) ). fetchCount ( ) )
4679	maps. assertDoesNotContain ( description, actual, null )
4680	assertTrue ( timeInstant!= null )
4681	Assert. assertFalse ( success )
4682	assertTrue ( foundNews )
4683	assertEquals ( newLit, literal )
4684	assertEquals ( mockList, queryPlan. getChildQueryPlans ( ) )
4685	assertFalse ( loopbackResourceAddress. toString ( ). contains ( "0:0:0:0:0:0:0:1" ) )
4686	assertEquals ( expectedGmtOffset, actual )
4687	assertEquals ( DigestSaslServer. class, server. getClass ( ) )
4688	assertEquals ( 1, victim. getPreProcessors ( ). size ( ) )
4689	assertTrue ( "Invalid response statusCode: " + statusCode, statusCode == HttpServletResponse. SC_OK )
4690	assertTrue ( "return too late", time < TIME )
4691	assertOut ( "a |= b" )
4692	assertEquals ( 1461272081103L, ts )
4693	Assert. assertNull ( wordAfter )
4694	assertNotNull ( connector )
4695	assertFalse ( flag )
4696	assertEquals ( "MyResourceType", result )
4697	Assert. assertEquals ( "-1234567890", result. getText ( ) )
4698	assertEquals ( "I", to. getMotion ( ) )
4699	Assert. assertEquals ( expected, superflatPreset )
4700	assertEquals ( "xxx", o )
4701	context. assertIsSatisfied ( )
4702	Assert. fail ( "Xfdf files are not equal" )
4703	assertEquals ( 1, result. size ( ) )
4704	assertTrue ( headerUserAchievements. getBronzeBadgesCount ( ) > 0 )
4705	Assert. assertTrue ( combiSet. getTotalNb ( ) == 7 )
4706	assertEquals ( result, ParseUtils. parseQuery ( "consumer.", "verion=1.0.0&cluster=china" ) )
4707	assertMockEndpointsSatisfied ( )
4708	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
4709	assertEquals ( "Base value is not properly parsed", date. getTime ( ), parsed )
4710	assertEquals ( Long. valueOf ( arg ), il. exec ( t ) )
4711	Assert. assertEquals ( ( int ) FastMath. signum ( previousGamma ), - ( int ) FastMath. signum ( gamma ) )
4712	assertEquals ( 1676496.5, julDate. getJulianDate ( ), TOLERANCE )
4713	assertEquals ( Integer. valueOf ( 1 ), myTestInstance. insertAsync ( Durability. ACK, doc ). get ( ) )
4714	Assert. assertNotNull ( savedTenant )
4715	assertTrue ( can )
4716	assertEquals ( location. getPort ( ), 443 )
4717	assertThat ( result ( ), not ( containsString ( "<price>" ) ) )
4718	Assert. assertEquals ( ImmutableList. of ( ThresholdFilterHeaderExtender. FILTER_GT_MIN_COV_HET ), annotator. getFiltersFor ( gt ) )
4719	assertEquals ( c, new Constant ( "blah" ) )
4720	Assert. assertEquals ( "when the import is not in progress, the " + ResetImportAction. ASK + " view should be returned", ResetImportAction. ASK, view )
4721	Assert. fail ( )
4722	assertThat ( formatter. parse ( "(1) Anno Domini 1603" ), is ( PlainDate. of ( 1603, 4, 4 ) ) )
4723	assertTrue ( b )
4724	context. assertSentryException ( statement, "CREATE ROLE r2", SentryAccessDeniedException. class. getSimpleName ( ) )
4725	assertEquals ( expected, mergeAclEntries ( existing, aclSpec ) )
4726	assertEquals ( true, check. isRequired ( ) )
4727	assertTrue ( parser. isMyType ( document ) )
4728	assertValidQuery ( query )
4729	assertEquals ( 6. * 3600. + 6. * 60. + 6., sec, 0.01 )
4730	assertThat ( outcomes. get ( 0 ). getResult ( ), is ( TestResult. SUCCESS ) )
4731	assertEquals ( true, bm. isBitSet ( bitNumber ) )
4732	assertEquals ( Action. DISCONTINUE, discontinuationOrder. getAction ( ) )
4733	assertLife ( playerB, 17 )
4734	assertEquals ( repos, event. getOrganizationalUnit ( ). getRepositories ( ) )
4735	assertEquals ( expResult, result )
4736	assertEquals ( Arrays. asList ( "one", "three", "two" ), candidates )
4737	assertEquals ( "Found wrong event", em, result )
4738	assertVisitorSatisfied ( )
4739	assertTrue ( xml. contains ( "<fn><text>John Doe</text></fn>" ) )
4740	assertEquals ( "service", s1. getType ( ) )
4741	assertEquals ( COSNull. NULL, victim. get ( new COSObjectKey ( 9, 0 ) ). getCOSObject ( ) )
4742	Assert. assertEquals ( expected. getAttribute ( "id" ), actual. getAttribute ( "id" ) )
4743	assertNull ( array. getArray ( ) )
4744	assertThat ( s. isOffline ( ), is ( true ) )
4745	JSONAssert. assertEquals ( "{" + "runnerId:'maven', status: 'building', startTime: '" + now. toString ( ) + "', description: 'Building now...', commit: {}" + "}", s, JSONCompareMode. LENIENT )
4746	assertSame ( SimpleNumber. class, actual )
4747	assertEquals ( "Unknown transport exception occurred", actualException. getMessage ( ) )
4748	assertEquals ( executions. size ( ), 1 )
4749	assertEquals ( "This is my cookie from the server", response )
4750	assertEquals ( Always. class, d. value ( ) )
4751	assertEquals ( new Double ( 20.0 ), request. getEcommerceRevenue ( ) )
4752	assertResponse ( response, 403, "[{\\"Forbidden\\": \\"INGEST API methods are disabled on this KairosDB instance.\\"}]\\n" )
4753	assertEquals ( baseVersion, AltcoinBlock. getBaseVersion ( auxpowVersion ) )
4754	Assert. assertEquals ( "Incorrect condition", "(WTextField=\\"1\\" and WTextArea=\\"2\\" and WDropdown=\\"3\\")", builder. build ( ). toString ( ) )
4755	assertEquals ( combineCounts ( ), result )
4756	assertTrue ( words. length == 9 )
4757	assertEquals ( "Identity", DEFAULT_IDENTITY, identity )
4758	assertEquals ( 1, files. size ( ) )
4759	assertEquals ( SpringPropertyProxy. class, result. getClass ( ) )
4760	assertEquals ( "TextBuilder String Is Test", _textBuilder. toString ( ), "Test" )
4761	Assert. assertEquals ( s. getPattern ( ), "^[A-Z]+$" )
4762	assertEquals ( "ST", loop. getSegment ( 0 ). getElement ( 0 ) )
4763	assertEquals ( 0, counter. get ( ) )
4764	assertResultSet ( res )
4765	assertThat ( indexHits, contains ( node ) )
4766	Assert. assertNotNull ( user )
4767	assertEquals ( BaseAction. INPUT, action. doDefault ( ) )
4768	Assert. assertTrue ( getChild. getIndexNames ( ). contains ( index. getIndexName ( ) ) )
4769	assertFalse ( isEditable )
4770	assertEquals ( "public static  main(final String[] args) ", actualContent )
4771	assertEquals ( "create - assignment - complete - delete", eventsReceived )
4772	Assert. assertTrue ( actual, actual. contains ( TEST_MSG ) )
4773	Assert. fail ( "Error retrieving workflow list caused by: " + e. getMessage ( ) )
4774	assertEquals ( CUSTOM_NOTIFICATION_DOC_TYPE, document. getDocumentTypeName ( ) )
4775	assertEquals ( Boolean. TRUE, result )
4776	assertTrue ( mpis. getParts ( ). isEmpty ( ) )
4777	Assert. assertFalse ( errors. hasErrors ( ) )
4778	assertThat ( vraptor. getParameterValues ( "name" ), is ( equalTo ( values ) ) )
4779	assertNull ( obj. getNetName ( ) )
4780	AssertionUtils. multiAssertEquals ( createAsDocument11, response7. getResponseObject ( ) )
4781	assertTrue ( "Width changed on item add.", original_width == table. getSize ( ). getWidth ( ) )
4782	assertEquals ( 127, fixture. readVarInt ( ) )
4783	assertEquals ( "test_message", result. getCommit ( ). getFullMessage ( ) )
4784	assertThat ( parse ( contents ), contains ( map ( "value", "1" ) ) )
4785	assertEquals ( events. size ( ), size ( stream ) )
4786	assertEquals ( expecetedTableName, builtTableName )
4787	assertJsFunctionCallSequence ( asList ( "" + "formatter.uri(\\"file:path/test.feature\\");\\n", "" + "formatter.feature({\\n" + "  \\"description\\": \\"\\",\\n" + "  \\"name\\": \\"feature name\\",\\n" + "  \\"keyword\\": \\"Feature\\"\\n" + "});\\n", "" + "formatter.scenario({\\n" + "  \\"description\\": \\"\\",\\n" + "  \\"keyword\\": \\"Scenario\\",\\n" + "  \\"name\\": \\"scenario name\\"\\n" + "});\\n", "" + "formatter.step({\\n" + "  \\"keyword\\": \\"Given \\",\\n" + "  \\"name\\": \\"first step\\"\\n" + "});\\n", "" + "formatter.match({\\n" + "  \\"location\\": \\"path/step_definitions.java:3\\"\\n" + "});\\n", "" + "formatter.result({\\
4788	assertEquals ( "forall(&&){something == $}", result )
4789	Assert. assertEquals ( "(124delAinsCT)", del. toHGVSString ( ) )
4790	Assert. assertEquals ( "Decode brackets not correct", out, WebUtilities. decodeBrackets ( in ) )
4791	assertThat ( result, is ( lines ( new String [ ] [ ] { { "\\\\\\\\t" } } ) ) )
4792	assertEquals ( expectedBooleanRepresentation, everrestConfiguration. getBooleanProperty ( "foo", false ) )
4793	assertNotNull ( Record. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
4794	assertSqlCanBeParsedAndDeparsed ( stmt )
4795	assertTrue ( threadReleasedLatch. await ( 1, TimeUnit. SECONDS ) )
4796	assertEquals ( AppConfigProperties. DEFAULT_BISERVER_CONTEXT_PATH, biServerContextPath )
4797	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
4798	assertFalse ( "The text field of the calendar should not be empty after selecting a date", textField. getAttribute ( "value" ). isEmpty ( ) )
4799	assertEquals ( 15, atAct1. get ( 0 ) )
4800	assertArrayEquals ( Arrays. toString ( d. getResult ( ) ), refar, d. getResult ( ) )
4801	Assert. assertEquals ( "[]", reference. get ( ). getAttachment ( Http2Client. RESPONSE_BODY ) )
4802	assertTrue ( result )
4803	assertNull ( destination. getCredentials ( ) )
4804	assertEquals ( SliceReadStatus. StreamDeleted, slice. status )
4805	assertTrue ( doubleArray. length == 3 )
4806	assertThat ( select, hasSelectedOption ( hasValue ( SELECTED_OPTION_VALUE ) ) )
4807	assertEquals ( DocumentStatus. Status. AVAILABLE, getResponse. getStatus ( ) )
4808	assertEquals ( new Dimension ( 50, 100 ), res )
4809	assertEquals ( output. toString ( ), actual )
4810	assertTheEntireDomainTreeHasPermissionsDefined ( client )
4811	assertEquals ( "Device Statistics mismatch!", expected, actual )
4812	assertFalse ( validator. isValidForRoutingTable ( replyToAddress ) )
4813	assertFalse ( lock. lock ( ) )
4814	Assert. assertArrayEquals ( expected, processed )
4815	assertEquals ( cache. get ( "a" ), "b" )
4816	Assert. assertEquals ( 400, json. getInt ( "code" ) )
4817	assertNotNull ( photoContext )
4818	assertEquals ( Address. newBuilder ( ). setOtherAddress ( OtherAddress. newBuilder ( ). setName ( name ) ). build ( ), ChannelzProtoUtil. toAddress ( other ) )
4819	assertBounds ( - 5, 15, 10, 20 )
4820	assertTrue ( fs. exists ( newDir ) )
4821	assertEquals ( asList ( debug ( mdcValues, message, arg1 ) ), testLogger. getLoggingEvents ( ) )
4822	assertEquals ( exp, out )
4823	assertSize ( 0 )
4824	Assert. assertEquals ( "{;var}", e. toString ( ) )
4825	assertThat ( nextToken, is ( nullValue ( ) ) )
4826	Assert. assertTrue ( CDKMCS. isSubgraph ( atomContainer, query, true, true, true ) )
4827	assertEquals ( Arrays. asList ( "aa", "ab", "ac", "ba", "bb" ), kittens )
4828	assertEquals ( sb. toString ( ), b. toString ( ) )
4829	assertTrue ( true )
4830	assertEquals ( packet, p )
4831	assertThat ( term, is ( "�┿�ゃ��" ) )
4832	assertEquals ( "en", jcas. getDocumentLanguage ( ) )
4833	assertEquals ( "1", type. getValue ( rs, 1 ) )
4834	assertThat ( searchResponse. getHits ( ). getTotalHits ( ), is ( 16l ) )
4835	assertNotNull ( node )
4836	assertEquals ( "Test template\\n", rt. getContents ( ) )
4837	assertEquals ( true, rss )
4838	assertEquals ( 1l, session. from ( $ ( dep ) ). where ( $ ( dep. getEmployees ( ) ). contains ( emp1 ) ). count ( ) )
4839	assertValidationFailures ( schema, config )
4840	Assert. assertTrue ( config instanceof ApolloConfig )
4841	assertThat ( testHeader, sameInstance ( header ) )
4842	assertThat ( queue. hasRemaining ( ), is ( false ) )
4843	assertEqualDoubleArrays ( pytranspose, transpose, epsilon )
4844	Assert. assertEquals ( expected, testIndex. findConc ( " 'May' 'dsgsdg'* 'the' " ) )
4845	assertArrayEquals ( expected, target. toArray ( ) )
4846	assertEquals ( "some source", factory. getResults ( ). get ( "SomeClass" ) )
4847	assertEquals ( "1 22 333 4444 55555", StringUtils. join ( toText ( select ( jcas, Token. class ) ), " " ) )
4848	assertThat ( parsed, equalTo ( source ) )
4849	assertEquals ( expectedResult, result )
4850	assertThat ( "Integer schema", combined, matches ( new SchemaMatcher ( expected ) ) )
4851	assertEquals ( MultipleChoices. MESSAGE, ri. getDescription ( ) )
4852	assertEquals ( "Outer class instance variable is 779", 779, ret )
4853	Assert. assertNotNull ( user )
4854	Assert. assertEquals ( "<Icon><UUID>h9T0QaXsTOCMqYKlB50o7w==</UUID><Data>AAAAAAAAAAAAAA==</Data></Icon>", xml )
4855	assertXpathEvaluatesTo ( "group", "//ui:label/@what", label )
4856	assertTrue ( peterRank < 5 )
4857	Assert. assertEquals ( LogManager. class, logManager. getClass ( ) )
4858	assertSame ( "Different file handler", handler, detector. getFileHandler ( ) )
4859	TestHelpers. assertDeepEquals ( expected, snapshot. getValue ( ) )
4860	assertAppearanceFontSize ( dest, 44.35f )
4861	assertions. contains ( value, index )
4862	assertEquals ( expectedQuery, actualQuery )
4863	assertEquals ( expResult, result )
4864	assertDeviceEquals ( arc, arc2 )
4865	assertThat ( phase. getGoals ( ), contains ( goal ( "goal0", 0, 500 ), goal ( "goal1", 0, 500 ) ) )
4866	assertThat ( options. getSnippetType ( ), is ( SnippetType. UNDERSCORE ) )
4867	context. assertIsSatisfied ( )
4868	assertEquals ( Locale. GERMAN, pebbleEngineProducer. pebbleEngine ( ). getDefaultLocale ( ) )
4869	assertions. isLessThan ( 2 )
4870	assertEquals ( testPoint, refPoint )
4871	assertEquals ( queryCopy. getQueryGeometry ( ), query. getQueryGeometry ( ) )
4872	assertEquals ( new HashSet < String > ( Arrays. asList ( "staff1", "staff2", "staff3" ) ), underTest. filterConnectedViaEdOrg ( new HashSet < String > ( staffIds ), e ) )
4873	assertThat ( finalType, instanceOf ( FinalType. class ) )
4874	assertSame ( injector. getInstance ( ScopeTest. class ), injector. getInstance ( ScopeTest. class ) )
4875	Assert. assertEquals ( userConfig. getIntField ( ), result. getIntField ( ) )
4876	assertReceivedModel ( )
4877	assertMap ( navigator. getStateParameterMap ( ), entry ( "bar", "baz" ) )
4878	assertThat ( value, is ( "DIARY" ) )
4879	assertTrue ( multiThreadedSingleKernelReportObserverTestHelper ( device, 16 ) )
4880	assertTrue ( docAvailable ( uri ) )
4881	assertEquals ( Piece. BLACK_PAWN, expectPawn )
4882	assertTrue ( satisfiesPrecondition ( cu ) )
4883	assertTrue ( tRes. hasNext ( ) )
4884	assertEquals ( expectedAllocationPolicy, actualAllocationPolicy )
4885	assertEquals ( 211, s. size ( ) )
4886	assertEquals ( "Wrong IMDB ID", test. getImdb ( ), result. getImdbId ( ) )
4887	assertEquals ( Sets. newHashSet ( "hello" ), v. getOwnValidatingPaths ( ) )
4888	assertEquals ( expResult, result )
4889	assertFalse ( generatedIds. contains ( id ) )
4890	Assert. assertFalse ( "Invalid response from interceptor", result )
4891	assertThat ( runtimeClass, typeCompatibleWith ( BundleClassResolverHelperDecorator. class ) )
4892	assertEquals ( expectedOutput, TemplateReplacer. applyTemplateChanges ( context, customTemplate ) )
4893	assertSame ( component, componentByFieldInjection )
4894	assertFalse ( validator. validate ( EntityNames. STUDENT_SCHOOL_ASSOCIATION, associations ). size ( ) == associations. size ( ) )
4895	Assert. assertTrue ( "warnings list should be empty", warnings. isEmpty ( ) )
4896	assertNotNull ( response )
4897	assertFalse ( "Shard should not be allocated", result )
4898	assertEquals ( 1, allVisible. size ( ) )
4899	assertEquals ( expected, actual )
4900	assertEquals ( SearchType. getDefault ( ), request. getSearchType ( ) )
4901	assertEquals ( "Required profiles", "tui", new KnopflerfishPlatformBuilderF200T233 ( m_bundleContext, "version" ). getRequiredProfile ( m_platformContext ) )
4902	assertEquals ( resizer, receivedResizer )
4903	assertThat ( "Unexpected MDX query after adding a new hierarchy", getPivotModel ( ). getCurrentMdx ( ), is ( equalTo ( "SELECT {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS" + ", CrossJoin({[Product].[All Products], [Product].[Drink], [Product].[Food], [Product].[Non-Consumable]}, " + "{[Gender].[All Gender]}) ON ROWS FROM [Sales]" ) ) )
4904	assertEquals ( map1, map2 )
4905	assertArrayEquals ( ONE_BYTE_CODE_LIST, ByteArray. readAllBytes ( nlriByteBuf ) )
4906	assertEquals ( Hex. toHexString ( outputStream. toByteArray ( ) ), "000000000041fa2f0270204bafe49cd42e5b45840000020018001800040002000c000000000000000c00000055006e006b006e006f0077006e0052006900670068007400" )
4907	Assert. assertFalse ( status. getFileBlockInfos ( ). get ( 0 ). getBlockInfo ( ). getLocations ( ). isEmpty ( ) )
4908	assertEquals ( dataflowInputPort, edit. getSubject ( ) )
4909	assertTrue ( customerKey. prefixOf ( key ) )
4910	assertThat ( result, is ( false ) )
4911	assertTrue ( Pattern. matches ( "(?s).*/phaseListener01.jsp PASSED.*", page. asXml ( ) ) )
4912	assertEquals ( expected, getString ( TestUpdateImpl. example ( ) ) )
4913	assertTrue ( it. next ( ). asText ( ). contains ( "mvc" ) )
4914	assertNull ( captor. getValue ( ). reason ( ) )
4915	assertEquals ( FilterReply. NEUTRAL, mockAppender. getFilterChainDecision ( loggingEvent ) )
4916	assertThat ( underTest. getChildFromRoot ( ), nullValue ( ) )
4917	assertTrue ( hasPermission )
4918	Assert. assertTrue ( schema instanceof DirectSchema )
4919	assertEquals ( - 1, d, 0 )
4920	result. assertIsSatisfied ( 100 )
4921	assertThat ( parsed, is ( answer ) )
4922	assertEquals ( 16, profile. dashBoards [ 0 ]. widgets. length )
4923	assertFalse ( violation )
4924	assertEquals ( input, written )
4925	assertEquals ( "GBP -5.83", test. toString ( ) )
4926	assertEquals ( 1, ksession. fireAllRules ( ) )
4927	Assert. assertEquals ( "dari sekarang", t. format ( new Date ( ) ) )
4928	assertStoreContains ( out, 1, 2, 3, 6, 5, 4, 3 )
4929	Assert. assertEquals ( "BROKER_INFO", a. dataStructureTypeToString ( CommandTypes. BROKER_INFO ) )
4930	assertEquals ( post, newPost )
4931	Assert. assertFalse ( "Failure expected true", r. getLeft ( ) )
4932	assertThat ( getInst ( ). findNode ( "nodeName" ), equalTo ( node ) )
4933	assertEquals ( "Object Type: Route Origin Authorisation object\\n" + "Signing time: 2007-12-31T23:59:00.000Z\\n" + "ASN: AS42\\n" + "Prefixes:\\n" + "    10.64.0.0/12 [24]\\n" + "    10.32.0.0/12\\n" + "    2001:0:200::/39\\n", output. getBuffer ( ). toString ( ) )
4934	assertTrue ( unit. isValid ( Money. of ( 0, "EUR" ), null ) )
4935	assertEquals ( "There was only one set of parenthesis in the regex", 1, matcher. groupCount ( ) )
4936	assertEquals ( "[cabbageOnBoatInMove1 = 0,cabbageOnBoatInMove2 = 0,cabbageOnBoatInMove3 = 1,cabbageOnBoatInMove4 = 0,cabbageOnBoatInMove5 = 0,cabbageOnBoatInMove6 = 0,cabbageOnBoatInMove7 = 0,cabbageStateInMove1 = 0,cabbageStateInMove2 = 0,cabbageStateInMove3 = 1,cabbageStateInMove4 = 2,cabbageStateInMove5 = 2,cabbageStateInMove6 = 2,cabbageStateInMove7 = 2,goatOnBoatInMove1 = 1,goatOnBoatInMove2 = 0,goatOnBoatInMove3 = 0,goatOnBoatInMove4 = 1,goatOnBoatInMove5 = 0,goatOnBoatInMove6 = 0,goatOnBoatInMove7 = 1,goatStateInMove1 = 1,goatStateInMove2 = 2,go
4937	assertThat ( vreAuthorization, is ( authorization. get ( ) ) )
4938	assertTrue ( "Incorrect number of appenders", size == 2 )
4939	assertEquals ( "Invalid number.", five )
4940	assertTrue ( latch. await ( 4, SECONDS ) )
4941	assertEquals ( true, resultA. compareTo ( resultB ) < 0 )
4942	Assert. assertEquals ( expected, input )
4943	Assert. assertEquals ( "SELECT INTERVAL '5-3' YEAR TO MONTH + INTERVAL '20' MONTH\\nFROM DUAL;\\n", text )
4944	Assert. assertTrue ( cmd. apply ( bkFlags, new String [ ] { "-l", "1", "-d", file. getAbsolutePath ( ) } ) )
4945	Assert. assertEquals ( "Unexpected size", 0, sources. size ( ) )
4946	Assert. assertTrue ( true )
4947	assertEquals ( 281547991161788L, ceosReader. readB8 ( ) )
4948	assertEquals ( Arrays. asList ( "test" ), tableList )
4949	assertEquals ( "Remainder fooBar, fooNull", pathBar, remainder1 )
4950	assertNotNull ( sb. install ( ) )
4951	assertEquals ( "test", echo. echo ( "test" ) )
4952	assertOut ( "var /** @type {number} */ a = Number(\\"1\\")" )
4953	assertThat ( state. createTask ( argument, consumer, null ), nullValue ( ) )
4954	assertEquals ( 3, result )
4955	Assert. assertEquals ( BatchParserCommon. BOUNDARY, boundary )
4956	assertTrue ( Arrays. equals ( data, wrapper. getData ( ) ) )
4957	Assert. assertArrayEquals ( info, infoProxy )
4958	assertSame ( 60, conf. getAsrMRT ( ) )
4959	assertEquals ( "null", logRecord. getFormattedMessage ( ) )
4960	assertNull ( entityManager. find ( SoftlinkRelationEntity. class, softlinkRelation. getId ( ) ) )
4961	assertTrue ( 10 > IterableUtils. countNodes ( getDatabase ( ) ) )
4962	arrays. assertDoesNotHaveDuplicates ( description, null )
4963	assertEquals ( "high", getTarget ( results, "output" ) )
4964	assertEquals ( false, mockResult. included ( "isUserWatchingTopic" ) )
4965	assertThat ( time, is ( 50 ) )
4966	assertThat ( page. singleSelectWithSelection. getAllSelectedValues ( ), contains ( "3" ) )
4967	assertNull ( "Date parsing is wrong", mapper. readBitemporalDate ( new Columns ( ), "tt_to" ) )
4968	assertNull ( convSessionId )
4969	Assert. assertEquals ( "{\\"at\\":\\"1930-09-04T00:03:48.750431006Z\\"}", os. toString ( ) )
4970	assertTrue ( avroSchema!= null )
4971	assertEquals ( MonetaryFormats. getAvailableLocales ( ), locales )
4972	Assert. assertSame ( owner, pa. getAccessLevel ( OTHER_USER ) )
4973	assertArrayEquals ( new short [ ] { 0, ZERO_INDEX }, cv2. getPhaseAngles ( ) )
4974	Assert. assertEquals ( xmlEsperado, nfNotaInfoICMSTotal. toString ( ) )
4975	assertTrue ( "Incorrect mapping of property with annotated field", actual. indexOf ( "property-3: value3\\r\\n" ) >= 0 )
4976	assertThat ( foundThread, is ( Optional. of ( thread ) ) )
4977	assertEquals ( 3, exceptions )
4978	Assert. assertEquals ( set ( b ), presenceDao. getSubdirectories ( a ) )
4979	assertEquals ( 65.332f, executeTestMethod ( test, Float. class, null, - 65.332f ), 0.0f )
4980	assertThat ( actualJson, is ( expectedJson ) )
4981	assertTrue ( "system must have failed at " + ( failTime. get ( ) - now ), failTime. get ( ) == 0 )
4982	assertEquals ( HTTP_RESPONSE_MESSAGE, inMessage. get ( HTTPConduit. HTTP_RESPONSE_MESSAGE ) )
4983	Assert. assertTrue ( "Unable to fetch module update url: " + url, updateRdf. contains ( "<updates" ) )
4984	assertNotNull ( result )
4985	Assert. assertArrayEquals ( bytes, bytes2 )
4986	assertThat ( ( String ) criterion. convertValueForDatastore ( SortDirection. ASCENDING ), is ( "ASCENDING" ) )
4987	assertEquals ( "((ENTITY_ID is_null  OR ENTITY_ID!= " + userId + ") AND ((ID = " + userId + " AND (ACTUALOWNER =  OR ACTUALOWNER is_null )) OR ACTUALOWNER = " + userId + "))", dataSetLookup. getFirstFilterOp ( ). getColumnFilterList ( ). get ( 0 ). toString ( ) )
4988	assertTrue ( "flux vide", output. size ( ) > 0 )
4989	assertEquals ( healthMessages. size ( ), 0 )
4990	assertEquals ( "b", toml. getString ( "target.\\"cfg (unix)\\".dependencies.b" ) )
4991	assertMockEndpointsSatisfied ( )
4992	assertResultSet ( res )
4993	assertEquals ( "", victim. readNumber ( ) )
4994	assertEquals ( settings. getServerName ( ), "serverName" )
4995	assertThat ( feature. getType ( ), is ( "Feature" ) )
4996	assertThat ( other, DateMatchers. sameSecond ( date ) )
4997	assertTrue ( "No company information found", company. getId ( ) > 0 )
4998	assertTrue ( result. get ( ) )
4999	assertEquals ( "'a''b''c',xyz", sw. toString ( ) )
5000	assertTrue ( check ( "a", input, output ) )
5001	assertNotNull ( result )
5002	assertEquals ( 0, s. getRequiredSkills ( ). values ( ). size ( ) )
5003	assertTrue ( set. contains ( tuple ) )
5004	assertEquals ( expected, actual )
5005	assertEquals ( "There should be one file", 1, files. length )
5006	assertEquals ( expected, rmc. getCorrectedCourse ( ), 0.001 )
5007	assertTrue ( "failed to stat file", st!= null && st. isFile ( ) )
5008	assertTrue ( cause. getMessage ( ). contains ( "this should throw an exception" ) )
5009	assertThat ( component. getWorkflowUrl ( ), is ( "job/" + expectedName + "/" ) )
5010	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "wmfImageTest01.pdf", sourceFolder + "cmp_wmfImageTest01.pdf", destinationFolder, "diff_" ) )
5011	assertTrue ( "No changes", onTest. viewChanges ( sourceSchema, targetSchema ). isEmpty ( ) )
5012	assertEquals ( "CREATE TABLE SCHEMA_NAME.TABLE_NAME (COLUMN1_NAME BIGINT DEFAULT AUTOINCREMENT NULL)", generatedSql [ 0 ]. toSql ( ) )
5013	assertTrue ( getNoErrorMsg ( ), result )
5014	assertNumEquals ( DoubleNum. valueOf ( 2 ), cost )
5015	Assert. assertEquals ( ticketId, ticket. getTicketString ( ) )
5016	assertEquals ( 10, toTest. available ( ) )
5017	assertEquals ( v, v2 )
5018	assertTrue ( v. getPrecision ( ) > 0. )
5019	assertEquals ( 1, clusters. size ( ) )
5020	Assert. assertEquals ( 0, proxy. getIdentifier ( ). getTransactionId ( ) )
5021	assertEquals ( 2, monthsStartWith_M. size ( ) )
5022	Assert. assertEquals ( bitField. getStartElapsedEncodingStrategy ( ), StartElapsedTimeEncodingStrategy. PREV_DELTA )
5023	assertEquals ( id, db. getLongValue ( id, LONG_STORED_FILED_NAME ) )
5024	Assert. assertEquals ( 3, traversal. getSteps ( ). size ( ) )
5025	assertEquals ( 2, elementMock. getGraphCount ( ) )
5026	assertTrue ( result. getSuccess ( ) )
5027	assertEquals ( 1, fired )
5028	assertContains ( "{ some text inside curly brackets }", content )
5029	assertEquals ( testResource1, testResource2 )
5030	Assert. assertNull ( concept. getShortestName ( new Locale ( "fr" ), true ) )
5031	assertEquals ( mockResponse, testResponse )
5032	assertEquals ( "10078668", user. getId ( ) )
5033	assertThat ( displayableGoal, is ( new DisplayableGoal ( "project1", "phase1", "goal1", "dep1 dep2", 60, 8, 8 ) ) )
5034	Assert. fail ( "Should have Assert.failed on the second parameter to 'ends-with' not " + "being bound." )
5035	assertFalse ( problem )
5036	assertFalse ( handler. isBuffering ( ) )
5037	assertThat ( ( Class ) getterMethod. getReturnType ( ), is ( not ( ( Class ) classWithNameConflict ) ) )
5038	assertEquals ( "aTestString", classUnderTest. getDatabaseSize ( ) )
5039	Assert. assertEquals ( r. asNode ( ), query. getParam ( "s" ) )
5040	assertEquals ( "Hello <b>there</b>!", TextUtil. stripNewlines ( cleanHtml ) )
5041	assertTrue ( endState )
5042	assertTrue ( checker. isCleaned ( ) )
5043	assertEquals ( "(| [= foo] [= bar] [= baz])", m. toString ( ) )
5044	assertActive ( player1 )
5045	Assert. assertEquals ( 0, errors. size ( ) )
5046	assertThat ( hostConfig. restartPolicy ( ), is ( HostConfig. RestartPolicy. onFailure ( 5 ) ) )
5047	assertTrue ( actual. isEmpty ( ) )
5048	assertEquals ( 12, groupMembers. size ( ) )
5049	assertEquals ( settingsA. hashCode ( ), settingsB. hashCode ( ) )
5050	assertNotNull ( transformer. transformType ( pool. get ( ContractClass. class. getName ( ) ) ) )
5051	Assert. assertNull ( foundTenant )
5052	assertTrue ( result )
5053	Assert. assertFalse ( context. getResult ( ) )
5054	assertEquals ( 1d, t [ 0 ], 0.1f )
5055	Assert. assertEquals ( "a", qy. get ( 0 ) )
5056	assertEquals ( "aTestString", classUnderTest. getProcedureSeparator ( ) )
5057	assertThat ( bundleString, StringContainsInOrder. stringContainsInOrder ( strings ) )
5058	assertThat ( formatterOutput, is ( "classpath:path/test.feature:8\\n" ) )
5059	assertThat ( status. code, is ( HttpURLConnection. HTTP_BAD_REQUEST ) )
5060	Assert. assertEquals ( "not_mobile", provider. getPropertyValue ( mockServletRequest ) )
5061	assertThat ( isTransactionRelated, is ( false ) )
5062	assertTrue ( ScriptTestUtil. scriptIsInstanceOfScript ( testScript, expectedScript ) )
5063	assertEquals ( "[foo] did not satisfy [a string that starts with [d]]", expected. getMessage ( ) )
5064	assertTrue ( shareLibService. getShareLibJars ( "pig" ). get ( 0 ). getName ( ). endsWith ( "pig.jar" ) )
5065	assertNotNull ( result )
5066	assertSingleReplacement ( tokenIterator, "{foo}", "bar", "bar" )
5067	assertEquals ( 10, p. getTotalPages ( ) )
5068	assertEquals ( "gt0100", code )
5069	Assert. assertThat ( entry1, CoreMatchers. notNullValue ( ) )
5070	assertEquals ( 0, beans. size ( ) )
5071	assertNotNull ( result )
5072	assertEquals ( Arrays. asList ( "getAttributeDescriptor", "verifyAndConvert", "createAttribute", "set", "customAction" ), events )
5073	assertThat ( Tools. correctTextFromMatches ( "I've have", matches ), is ( "I've had" ) )
5074	assertEquals ( modifyAliases1, modifyAliases1Duplicate )
5075	Assert. assertEquals ( 0, l. size ( ) )
5076	Assert. assertEquals ( expected, actual )
5077	assertFalse ( constraint. fulfilled ( iContext ) )
5078	Assert. assertEquals ( null, vo )
5079	assertEquals ( "http://foo.bar.com/fu?_a=b&c=d,e", eu. parentURL ( ). toString ( ) )
5080	assertThat ( messages, is ( empty ( ) ) )
5081	assertAccessForbidden ( client )
5082	assertThat ( description. toString ( ), startsWith ( "a stage that completed exceptionally with java.io.IOException: error" ) )
5083	assertEquals ( 1, stat. getSize ( ) )
5084	assertEquals ( "test", res. toCompletableFuture ( ). join ( ) )
5085	Assert. assertTrue ( response. contains ( "<out>BmwTesting enhanced REST Feature relative mapping</out>" ) )
5086	assertFalse ( config. isAutoRefreshOAuth2TokenEnabled ( ) )
5087	assertThat ( format ( "page [%s] not found", getParentPageTitle ( ) ), p. isPresent ( ), is ( true ) )
5088	assertCorrectPropertyPathStringRepresentations ( constraintViolations, "inhabitantsPerAddress<K>[rue Garibaldi, Lyon]" )
5089	mock. assertIsSatisfied ( )
5090	assertThat ( driver. findElement ( By. xpath ( "/html/body/div/h2" ) ). getText ( ), is ( "Access Denied" ) )
5091	assertArrayEquals ( context, sha512, digestWriteStream. getDigest ( SHA512 ). get ( ) )
5092	Assert. assertTrue ( okstate. get ( ) )
5093	assertProcessInstanceCompleted ( processInstance )
5094	assertEquals ( "OK", status )
5095	assertTrue ( events. size ( ) == 5 )
5096	assertTrue ( "Wrong simplified filter: " + simplified, simplified instanceof NoneFilter )
5097	assertThat ( listener. awaitCompletion ( 1, TimeUnit. MINUTES ), is ( true ) )
5098	assertEquals ( "{\\"d\\":{\\"Age\\":42}}", StringHelper. inputStreamToString ( ( InputStream ) response. getEntity ( ) ) )
5099	assertEquals ( newName, hadoopClusterDelegateBridge. newNamedCluster ( variableSpace, iMetaStore, shell ) )
5100	assertLog ( Log. VERBOSE, "test trace argument argument2 argument3", exception )
5101	assertFocused ( c41 )
5102	arrays. assertContainsOnly ( description, actual, other )
5103	assertNotNull ( tutor )
5104	assertEquals ( "亘毓丿 �丨馗丕鬲", t. format ( new Date ( ) ) )
5105	assertEquals ( uuid, TransactUtils. extractNamedUuid ( insert ) )
5106	Assert. assertTrue ( this. people. anySatisfy ( predicate ) )
5107	Assert. assertEquals ( 40, ih. decodeXml ( multiValuedAttribute, null, null ) )
5108	assertSame ( expectedResult, result )
5109	assertNotNull ( entity. getId ( ) )
5110	arrays. assertDoesNotContain ( description, actual, value, null )
5111	assertTrue ( registry. getMarkers ( ). isEmpty ( ) )
5112	assertEquals ( "Kordian", book. getTitle ( ) )
5113	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. EDIT, this. doc ) )
5114	Assert. assertEquals ( m, support. convert ( m ) )
5115	assertEquals ( "Unexpected primary style name", "v-select-optiongroup", state. primaryStyleName )
5116	Assert. assertEquals ( 4, root. left. right. data. intValue ( ) )
5117	Assert. assertThat ( properties. size ( ), IsEqual. equalTo ( 2 ) )
5118	assertValueModelFires ( model, interval, expected )
5119	assertResultSet ( res )
5120	assertNotNull ( SupportingDocumentType. reader ( ). read ( ) )
5121	assertTrue ( plan. contains ( "0: Node Output Rows: 1" ) )
5122	assertEquals ( expected. getKey ( ), actual. getKey ( ) )
5123	assertThat ( this. requestMap, hasKey ( "pagedData" ) )
5124	assertEquals ( cursor. get ( ). getRealDouble ( ), regressionRowValues [ currentPixel % width ], 0 )
5125	assertThat ( chksumChannel. getChecksums ( ), contains ( expectedChecksum ) )
5126	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), hasEnvVar ( "STARTUP_MODE", ADMIN_STATE ) )
5127	assertEquals ( 0, count )
5128	Assert. assertTrue ( false )
5129	assertAnnotations ( 2, MilitaryPlatform. class, new TestMilitaryPlatform ( 0, "armoured vehicle", "GROUND" ), new TestMilitaryPlatform ( 1, "UAV", "AIR" ) )
5130	assertEquals ( "Usage: man [<options>]" + getLineSeparator ( ) + "[OPTION...]" + getLineSeparator ( ) + getLineSeparator ( ) + "Options:" + getLineSeparator ( ) + "  -d, --debug            emit debugging messages" + getLineSeparator ( ) + ANSI. BOLD + "  -D, --default" + ANSI. BOLD_OFF + "          reset all options to their default values" + getLineSeparator ( ) + "  -f, --file=<filename>  set the filename" + getLineSeparator ( ), clp. printHelp ( ) )
5131	Assertions. fail ( "Missing MessageConversationException for un-defined event-type" )
5132	assertThat ( new HashSet < > ( repository. findDistinctExceptions ( ) ), is ( new HashSet < > ( exceptions ) ) )
5133	assertEquals ( 0, result )
5134	assertEquals ( new Character ( 'c' ), ctxt. getCompositeElementSeparator ( ) )
5135	assertEquals ( expected, actual )
5136	Assert. assertTrue ( "counter of evaluations should be 10", counter. get ( ) == repeats * 2 )
5137	assertNull ( array )
5138	assertThat ( representation, is ( sameInstance ( xmlson ) ) )
5139	assertEquals ( Integer. valueOf ( historyTimeToLive ), activity. getHistoryTimeToLive ( ) )
5140	assertEquals ( 50, bean. number )
5141	context. assertTrue ( ar. succeeded ( ) )
5142	assertThat ( data. streq ( "test" ), is ( true ) )
5143	assertEquals ( "incorrect value", 0, aNumber. signum ( ) )
5144	assertEquals ( expected, dbMeta. getFieldDefinition ( valueMeta, null, null, false, false, false ) )
5145	assertNotNull ( "No result object", basic )
5146	assertNotNull ( User. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
5147	assertThat ( "testSetPlace 0", mv. getPlace ( ), equalTo ( place ) )
5148	assertEquals ( 2, evaluateStartConditions. size ( ) )
5149	Assert. assertEquals ( 3, path. getShapes ( ). size ( ) )
5150	Assert. assertEquals ( "the woman kicks the dog on the rock and kicks the dog behind the curtain", this. realiser. realise ( aggregated ). getRealisation ( ) )
5151	assertPointArrayArrayEquals ( expected, actual )
5152	ValidationAssert. assertNoValidationFailures ( step, stepConfig )
5153	assertNotNull ( exceptionWithNulls. toString ( ) )
5154	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
5155	Assert. assertTrue ( "expected to see 3 launches, found " + StringUtils. countMatches ( listOutput, "java -jar" ), StringUtils. countMatches ( listOutput, "java -jar" ) == 3 )
5156	assertNotNull ( aaa )
5157	assertEquals ( "CompoundInterest{\\n" + " RateAndPeriods{\\n" + "  rate=Rate[0.05]\\n" + "  periods=100},\\n" + " timesCompounded=1}", ci. toString ( ) )
5158	Assert. assertNull ( RpcUtils. getInvocationId ( inv ) )
5159	assertTrue ( mediator. changeNick ( " Amy " ) )
5160	assertArrayEquals ( test, getInputStream ( ). readLittleFloatArray ( test. length ), 0f )
5161	assertFalse ( txNew. isPresent ( ) )
5162	assertEquals ( expected, actual )
5163	assertThat ( results, hasSize ( 2 ) )
5164	assertArrayEquals ( GPUVec. convert ( result ), mxResult. toArray ( ), 0.01 )
5165	Assert. assertEquals ( 1, patientCount )
5166	assertEquals ( expected, result )
5167	assertSessionID ( "", "", "", "", sessionID )
5168	assertFalse ( graph. contains ( Node. ANY, LAST_MODIFIED_DATE. asNode ( ), Node. ANY ) )
5169	assertThat ( MDC. get ( TASK_LOG_ONLY_MDC ), equalTo ( "true" ) )
5170	assertNoValidationFailures ( tm, config )
5171	assertEquals ( 1, users. size ( ) )
5172	assertFalse ( presenter. isDirty ( ) )
5173	Assert. assertEquals ( defaultTimeZone, defaultTimeZone2 )
5174	assertThat ( formatterOutput, sameJSONAs ( expected ) )
5175	assertEquals ( expResult, result )
5176	assertEquals ( diff, result. intValue ( ) )
5177	assertSuccess ( result )
5178	Assert. assertEquals ( "testuser1", username )
5179	assertEquals ( "Hello", retObj )
5180	assertEquals ( fakeResolver, factory. newNameResolver ( new URI ( "aaa://foo" ), Attributes. EMPTY ) )
5181	assertEquals ( 2, correlatedExecutions )
5182	assertTrue ( ex. isPrime ( 71 ) )
5183	assertFalse ( arr. some ( callbackfn ) )
5184	assertEquals ( "", result )
5185	assertThat ( serialisedBadgesDetailsOf ( job ), is ( nullValue ( ) ) )
5186	assertDropdownIsBelow ( )
5187	assertTrue ( true )
5188	assertOut ( "var foreachiter0_target = obj;\\nfor (var foreachiter0 in foreachiter0_target) \\n{\\nvar i = foreachiter0_target[foreachiter0];\\n\\n  break;}\\n" )
5189	assertNull ( tuple. getMap ( "field" ) )
5190	assertThat ( m, arrayWithSize ( 2 ) )
5191	assertEquals ( 1, ulonglongValue. signum ( ) )
5192	assertThat ( children, containsInAnyOrder ( clsA2 ) )
5193	Assert. assertEquals ( String. format ( "a %s text", this. html ( bb, "red", "colored" ) ), formatter. format ( "a [color='red']colored[/color] text", defaultOptions ( ) ) )
5194	assertEquals ( "Response body is not correct.", USER_IN_DEFAULT_REALM, Utils. makeCallWithBasicAuthn ( principalServlet ( webAppURL ), USER_IN_DEFAULT_REALM, CORRECT_PASSWORD, SC_OK ) )
5195	assertTransformedText ( normalizedText, inputText, "de", segmenter, normalizer )
5196	assertTrue ( d1 instanceof PublicCloneable )
5197	Assert. assertEquals ( BigInteger. valueOf ( 2L ), gcd )
5198	assertEquals ( CodecSupport. toString ( Base64. decode ( EX_12_SUFFIX ) ), plaintext )
5199	assertEquivalent ( bufferB, bufferA )
5200	assertFalse ( df. isAvailable ( ) )
5201	assertThat ( builder. toString ( ), is ( new ArrayElement ( "elements", builder. subElements ( ) ). toString ( ) ) )
5202	assertEquals ( PaxDate. of ( 2012, 13, 7 ), test )
5203	assertThat ( axioms. isEmpty ( ), is ( true ) )
5204	Assert. assertEquals ( 10, entertainmentDevice. getSongCount ( ) )
5205	Assert. assertEquals ( "[:d = at(document.type, \\"blog-post\\")]", p. q ( ) )
5206	assertTrue ( diff. toString ( ), diff. similar ( ) )
5207	assertEquals ( 0, SolutionListUtils. findIndexOfBestSolution ( list, comparator ) )
5208	Assert. assertEquals ( 6, total )
5209	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<ediroot>" + "<interchange Standard=\\"EDIFACT\\" SyntaxId=\\"UNOB\\" SyntaxVersion=\\"1\\" Date=\\"071101\\" Time=\\"1701\\" Control=\\"131\\" ApplRef=\\"ORDRSP\\" AckRequest=\\"1\\" TestIndicator=\\"1\\" Decimal=\\".\\">" + "<sender><address Id=\\"SENDER1\\" Qual=\\"16\\" Extra=\\"ZZUK\\"/></sender>" + "<receiver><address Id=\\"RECEIVER1\\" Qual=\\"01\\" Extra=\\"ZZUK\\"/></receiver>" + "<group>" + "<transaction Control=\\"ME000001\\" DocType=\\"ORDRSP\\" Version=\\"D\\" Release=\\"01B\\" Agency=\\"UN\\" Association=\\"EAN009\\">" + "<segment Id=\\"BGM\\"><element Id=\\"BGM01\\">231</element><element Id=\\"BGM02\\">ORSP12856</element><element Id=\\"BGM03\\">4</element></
5210	assertEquals ( ( short ) 123, deserialize. readShort ( ) )
5211	Assert. assertEquals ( "(aa_change_ssr (aa_range (aa_point_location (aa_char C) 123) _ (aa_point_location (aa_char A) 124)) ( 3 _ 4 ))", aa_change_ssr. toStringTree ( parser ) )
5212	assertEquals ( expected, converted )
5213	assertSame ( testUser, androidUserInterface. getUser ( 1235 ) )
5214	assertTrue ( ic. outgoingResponse ( reqDetails, new ResponseDetails ( resource ), req, resp ) )
5215	Assert. fail ( "an exception should have been thrown" )
5216	assertNotNull ( Daily. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
5217	listener. assertEventFired ( new SortOrder ( "foo", SortDirection. ASCENDING ) )
5218	assertEquals ( 0, res. getInt ( "nbHits" ) )
5219	assertEquals ( "Unexpected maximum sequence length.", 10, manager. getSourcePolicy ( ). getSequenceTerminationPolicy ( ). getMaxLength ( ) )
5220	Assert. assertTrue ( EqualsBuilder. reflectionEquals ( applicationModule, savedAppModule ) )
5221	Assert. assertTrue ( isEqual ( d1, d2 ) )
5222	Assert. assertEquals ( Arrays. asList ( new BooleanValue ( true ), new CharacterValue ( 'a' ), new RealValue ( 4.3 ), new NilValue ( ) ), res. getValues ( ) )
5223	assertEntityCount ( 1, entity, TEST_CONNECTION_ID )
5224	assertEquals ( 0.0444, density,.001 )
5225	Assert. assertEquals ( 1, resultList. size ( ) )
5226	assertContent ( subject, "/poms/inheritedVersion.xml" )
5227	assertEquals ( t, n ( s ). lowerCaseSchemeHost ( ). toString ( ) )
5228	Assert. assertEquals ( false, retval )
5229	assertThat ( result, is ( "Jump" ) )
5230	assertEquals ( "Boolean value does not match", bookmark. isRead ( ), loadedBookmark. isRead ( ) )
5231	assertThat ( records, hasItem ( record ) )
5232	Assert. assertEquals ( 210, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
5233	assertEquals ( mockResponse, testResult )
5234	assertions. containsSequence ( null )
5235	assertThat ( ConsoleConfigXml. class, hasValidGettersAndSettersExcluding ( excludeProperties ) )
5236	assertTrue ( servant. called )
5237	assertThat ( domainPermission. toString ( ), is ( systemPermissionName ) )
5238	assertTrue ( s1. isEmpty ( ) )
5239	assertNotNull ( template )
5240	assertEquals ( "ProxyRegistry{prioritizedProxyReferences=[PrioritizedProxyReference{name='default', priority=1, regex='.*', proxy=HTTP @ /127.0.0.1:9997} ProxyReference{host='127.0.0.1', port=9997, proxy=HTTP @ /127.0.0.1:9997}]}", httpRequestBuilder. getProxyRegistry ( ). toString ( ) )
5241	assertTrue ( "All namespace permissions should have equivalent table or system permissions.", set. isEmpty ( ) )
5242	TestHelpers. assertDeepEquals ( authors, result )
5243	assertNull ( drug )
5244	assertEquals ( mvj. get ( "BlockRef" ), null )
5245	assertEquals ( newService, newRegister. get ( "test/dubbo.test.api.HelloService:1.0.0" ) )
5246	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 04" ) )
5247	assertTrue ( duration. isZero ( ) )
5248	assertFalse ( deserialize ( toTest, "true" ) )
5249	assertSame ( target, root. getThis ( ) )
5250	Assert. assertEquals ( expected, actual )
5251	AssertUtil. assertIteratorEquals ( testPlan1. getActualOutput ( ). iterator ( ), testPlan2. getActualOutput ( ). iterator ( ), new PactRecordEqualer ( IntStringPair ) )
5252	assertEquals ( expectedScriptNode, actualScriptNode )
5253	Assert. assertEquals ( getUrl ( "" ), finalURL )
5254	Assert. assertFalse ( geocodingServlet. checkparameter ( ) )
5255	assertThat ( resources, contains ( orgId, parentOrgId ) )
5256	assertGraphStrict ( expected, received )
5257	assertThat ( encoded, stringContainsInOrder ( "<MedicationRequest xmlns=\\"http://hl7.org/fhir\\">", "<contained>", "<Medication xmlns=\\"http://hl7.org/fhir\\">", "<id value=\\"123\\"/>", "<code>", "<coding>", "<system value=\\"urn:sys\\"/>", "<code value=\\"code1\\"/>", "</coding>", "</code>", "</Medication>", "</contained>", "<medicationReference>", "<reference value=\\"#123\\"/>", "<display value=\\"MedRef\\"/>", "</medicationReference>", "</MedicationRequest>" ) )
5258	assertEquals ( 41, path. size )
5259	Assert. assertThat ( classList. size ( ), is ( 1 ) )
5260	assertEquals ( "1", XPathAfterVisitor. saxVisitedAfterElement. getTextContent ( ) )
5261	assertEquals ( "", found )
5262	Assert. assertEquals ( expected, existing. keySet ( ) )
5263	assertTrue ( result )
5264	assertEquals ( millisecond, millisecond )
5265	assertEquals ( out, frame2 )
5266	context. assertIsSatisfied ( )
5267	assertThat ( result, is ( nullValue ( ) ) )
5268	assertNull ( "current workflow null", presenter. currentWorkflow )
5269	runner. assertNotValid ( )
5270	AssertJUnit. assertTrue ( result. isSuccess ( ) )
5271	assertEquals ( new org. apache. http. client. utils. URIBuilder ( SERVICE_ROOT + "/Categories(1)/Products/Model.AllOrders" ). build ( ), uriBuilder. build ( ) )
5272	assertThat ( result, hasItems ( testTeam. david, testTeam. emil ) )
5273	assertThat ( duration. dividedBy ( 3 ), equalTo ( TimeDuration. ofSeconds ( 0.2 ) ) )
5274	assertTrue ( "isDisplayed should return true if no specific requirement limit is specified for" + " for a list that has at least a single element displayed.", view. isDisplayed ( ) )
5275	assertSame ( "XML should not be formatted if Supplier<Transformer>.get returns null", TEST_XML, prettyPrintedXml )
5276	assertEquals ( 1, list. size ( ) )
5277	UnitTestUtils. assertEquals ( "MatrixUtils.inverse() returns wrong result", MatrixUtils. createRealIdentityMatrix ( data. length ), result, Math. ulp ( 1d ) )
5278	assertTrue ( "DB driver info can't be empty",! driverInfo. isEmpty ( ) )
5279	assertFalse ( isHurricaneSeason )
5280	assertEquals ( count, metric. getCount ( ) )
5281	assertEquals ( "category", request. getEventCategory ( ) )
5282	assertEquals ( Integer. toString ( moduleId ), substitutions. getSubstitution ( Type. MODULE, "ID" ) )
5283	assertFalse ( resultMessage ( result, HttpRequestType. POST ), result. passedValidation ( ) )
5284	assertEquals ( "y", cs. eval ( ssc ) )
5285	Assert. assertEquals ( doppler_EXPECTED, doppler_ACTUAL, eps05 )
5286	assertThatSql ( query, is ( "SELECT * FROM table AS nodes WHERE CONTAINS(nodes.property,'expression')" ) )
5287	assertEquals ( skip. getReason ( ), REASON )
5288	assertEquals ( inputString, outputString )
5289	Assert. assertEquals ( "涓���|�戒汉|浜烘�|�惰�", words )
5290	assertThat ( options. toJSON ( ), is ( ( JsonElement ) json ) )
5291	assertEquals ( Object. class. getSimpleName ( ), result )
5292	assertEquals ( expected, actual )
5293	assertEquals ( "(boo 34)\\n", found )
5294	assertEquals ( jedisCluster. get ( "foo" ), "bar" )
5295	assertResultsEqual ( net, slice, "A", "B", "C", "B", "C", "C" )
5296	resultListener. assertTestCasePassed ( )
5297	Assert. assertEquals ( "preliminary end of stream", bytes. length / 8, i )
5298	assertEquals ( prevDate, DateUtils. getPrevDay ( theDate ) )
5299	assertRows ( filePath, 1, TEST_COLUMNS )
5300	Assert. assertEquals ( - 1, comparator. compare ( id1, id2 ) )
5301	assertThat ( e. getClass ( ). getName ( ), is ( AuthAccessDeniedException. class. getName ( ) ) )
5302	assertThat ( actual, is ( equalTo ( expected ) ) )
5303	assertThat ( errors. toString ( ), Matchers. not ( containsString ( "No issues" ) ) )
5304	assertEquals ( "S:12", x. toString ( ) )
5305	Assert. assertEquals ( range. getQualifyingPageNums ( 7 ), Arrays. asList ( 5 ) )
5306	assertEquals ( HttpServletResponse. SC_NOT_MODIFIED, responseWrapper. getStatusCode ( ) )
5307	assertEquals ( OrderBy. FWD_ROW_KEY_ORDER_BY, plan. getOrderBy ( ) )
5308	assertThat ( getter. invoke ( instance ), resultMatcher )
5309	assertThat ( fakeValues. get ( PATH ), is ( nullValue ( ) ) )
5310	assertFalse ( appender. isStarted ( ) )
5311	assertEquals ( "A.1.0", test )
5312	assertTrue ( solution. getAttributes ( ). isEmpty ( ) )
5313	assertOut ( "a.child('child').removeChildAt(0)" )
5314	assertEquals ( view, viewName )
5315	assertEquals ( expectedArray, actualArray )
5316	assertThat ( managementService. createJobDefinitionQuery ( ). jobDefinitionId ( jobDefinition. getId ( ) ). singleResult ( ). getOverridingJobPriority ( ), is ( 1701L ) )
5317	assertEquals ( null, result )
5318	Assert. assertEquals ( "<div class=\\"htmlform\\">This shows a logic test for a woman</div>", session. getHtmlToDisplay ( ) )
5319	assertTrue ( response. getNumberOfFeatures ( ). intValue ( ) == 4 )
5320	assertTrue ( retrievedParent. getName ( ). startsWith ( "XPTO1" ) )
5321	assertEquals ( "May 16, 1992", ritaBirthdate. getText ( ) )
5322	assertThat ( options. getGlue ( ), contains ( URI. create ( "classpath:/com/example/steps" ) ) )
5323	assertArrayEquals ( expectedOffsetValues, actualOffsetValues, 1e-10 )
5324	assertTrue ( "No 'administrator' in " + home, home. contains ( "administrator" ) )
5325	assertThat ( specificResourceAllocation. getAssignments ( ), haveHours ( 4, 8, 4, 4 ) )
5326	Assert. assertEquals ( 1, forumToChange. getDisplayOrder ( ) )
5327	Assert. assertTrue ( ( scopePath. findScopeByName ( ClassScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( CodeDefaultScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( DefaultScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( GlobalScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( UserScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( UserScopeDescriptor. NAME ). containsAllProperties ( getUserScopeProperties ( ) ) ) && ( scopePath. findScopeByName ( ClassScopeDescriptor. NAME ). containsAllProperties ( properties ) ) )
5328	assertEquals ( 2, processInstances. size ( ) )
5329	assertEquals ( 6, dt. intValue ( ) )
5330	assertThat ( key. getVersion ( ), is ( "1.1.0" ) )
5331	assertEquals ( Status. WARN, jxm. getStatus ( ) )
5332	assertThat ( converter. convert ( formattedToday, Date. class, bundle ), is ( equalTo ( date ) ) )
5333	assertions. isLessThan ( actual. intValue ( ) )
5334	assertThat ( stream ( extract ). filter ( v -> v == SPECIFIC_VALUE || v == ANOTHER_SPECIFIC_VALUE ). count ( ), is ( Long. valueOf ( extract. length ) ) )
5335	assertFalse ( appender. isStarted ( ) )
5336	assertTrue ( status == 0 )
5337	Assert. fail ( "Not valid" )
5338	assertEquals ( "POINT (1 3)", ClobType. getString ( ( ClobType ) Evaluator. evaluate ( ex ) ) )
5339	assertTrue ( instance. verify ( signature ) )
5340	assertEquals ( expected, uri. toString ( ) )
5341	assertNotNull ( recordWriter )
5342	assertEquals ( YarnApplicationAttemptState. NEW, applicationAttempt. createApplicationAttemptState ( ) )
5343	objects. assertIsEqualToIgnoringGivenFields ( someInfo ( ), actual, other, noFieldComparators ( ), defaultTypeComparators ( ), "name" )
5344	assertEquals ( timeInstant. getTimeMode ( ), TimeInstant. TimeMode. END )
5345	assertEquals ( text, SQSMessagingClientUtil. deserializePropertyName ( serialize ) )
5346	assertEquals ( expecteds, actuals )
5347	assertRequest ( "GET", "Powerpack/", params )
5348	assertThat ( actual. stream ( ). map ( ValidationResult :: getExplanation ). collect ( Collectors. toList ( ) ), hasItems ( containsString ( "the current service cannot be registered as a " + SERVICE_TYPE. getSimpleName ( ) + " to lookup" ), containsString ( "at least one " + SERVICE_TYPE. getSimpleName ( ) + " must be defined via dynamic properties" ) ) )
5349	Assert. assertEquals ( 200, response. getStatus ( ) )
5350	assertEquals ( sfp. getShortForm ( root ), shortForm )
5351	assertTrue ( new Matcher ( ). matchExecuteInstance ( output, ei ) )
5352	assertEquals ( get ( "propIsTrue" ), actual )
5353	Assert. assertTrue ( fields. size ( ) >= 1 )
5354	assertEquals ( asList ( warn ( mdcValues, marker, throwable, message, args ) ), testLogger. getLoggingEvents ( ) )
5355	assertServiceEvent ( ServiceEvent. REGISTERED, TestService. class, 5, TimeUnit. SECONDS )
5356	assertNode ( "/sequenced/teiid/vdbs/YahooUdfTest", "vdb:virtualDatabase", "mix:referenceable", "mode:derived" )
5357	assertTrue ( "No exception reported for wrong header", checkPoint )
5358	assertFalse ( history. isStepBackAllowed ( ) )
5359	assertThat ( ServiceHelper. getServiceDomainUid ( service ), equalTo ( "domain1" ) )
5360	Assert. assertTrue ( "Expect null expression: " + expr, expr. isNullExpression ( ) )
5361	assertTrue ( true )
5362	Assert. assertEquals ( Integer. valueOf ( 3 ), config2. getUserID ( ). get ( "a" ) )
5363	assertEquals ( "Journal title", work. getJournalTitle ( ). getContent ( ) )
5364	assertThat ( timeTransition. isFinished ( ), IsEqual. equalTo ( false ) )
5365	assertEquals ( "RemoteAddr", entity. getRemoteAddr ( ) )
5366	Assert. assertEquals ( 1, integer. get ( ) )
5367	assertNotNull ( result )
5368	Assert. assertEquals ( 3.14159265, toml. getDouble ( "foo" ). doubleValue ( ), 0.00001d )
5369	assertEquals ( 1, first. compareTo ( second ) )
5370	assertThat ( request. getChargePointVendor ( ), equalTo ( stringLength20 ) )
5371	Assert. assertTrue ( EdtfPattern. YEAR_MONTH_DAY_Q. matches ( edtf ) )
5372	assertEquals ( Arrays. asList ( "foo:1234", "bar:1234" ), config. getServers ( ) )
5373	assertNotNull ( cp )
5374	assertEquals ( expResult, result )
5375	assertEquals ( 0, sibs. size ( ) )
5376	assertEquals ( "Hi commons!", StrSubstitutor. replace ( "Hi <name>!", map, "<", ">" ) )
5377	assertEquals ( expected, stringBuilder. toString ( ) )
5378	Assert. assertFalse ( "Failure expected true", r. getLeft ( ) )
5379	context. assertIsSatisfied ( )
5380	assertPhantomJSExecutablePropertyPointsToExecutableInClasspath ( resolvedPath )
5381	assertNotNull ( writer. toString ( ) )
5382	assertEquals ( "maxTime", result )
5383	assertEquals ( 1, where ( var. listProperty. get ( 1 ). directProperty. eq ( "nsprefix" ) ). list ( var ). size ( ) )
5384	assertEquals ( numBlocks, numBlocksRead )
5385	Assert. assertEquals ( 0, list. length )
5386	assertTrue ( callbackArgument. getValue ( ) )
5387	assertEquals ( "test", registryKey. getName ( ) )
5388	assertEquals ( mod, modSer )
5389	assertEquals ( rde, bd )
5390	arrays. assertDoesNotContain ( description, actual, values )
5391	assertEquals ( obj. toString ( ), "LSAPR_POLICY_PRIMARY_DOM_INFO{Name:null, Sid:null}" )
5392	assertEquals ( field. getXrefEntity ( ), xrefEntity )
5393	assertThat ( isValid, is ( false ) )
5394	assertEquals ( i, test. getValue ( ) )
5395	assertEquals ( 100, storage. size ( ) )
5396	assertTagsetMapping ( files )
5397	assertEquals ( actualResult, expectedResult )
5398	assertEquals ( false, ExclusionTriggers. ShouldTriggerOnListOfFiles ( "dir_4", "", changedfilespath ) )
5399	assertPattern ( info, "/endpointApi/getList" )
5400	Assert. assertEquals ( coordinates, CatalogUtils. locationToString ( location ) )
5401	assertEquals ( obj. toString ( ), "SAMPR_USER_ALL_INFORMATION{UserId:50, PrimaryGroupId:100, UserName:\\"UserName1\\", FullName:\\"FullName1\\"}" )
5402	assertArrayEquals ( result, CompactEncoder. binToNibbles ( test ) )
5403	assertThat ( formatter. format ( PlainDate. of ( 1752, 9, 13 ) ), is ( "(246) 1752 n. Chr." ) )
5404	Assert. assertEquals ( expResult, result )
5405	assertThat ( client. getMongoUri ( ), is ( "mongodb://localhost" ) )
5406	assertThat ( retrievedPost, is ( equalTo ( post ) ) )
5407	assertValues ( presentFieldList, actual )
5408	assertNotNull ( resultString )
5409	assertNotNull ( image )
5410	assertThat ( replaced, is ( sameInstance ( change ) ) )
5411	assertFalse ( testPropertyLoader. properties. isEmpty ( ) )
5412	assertThat ( result, is ( instanceOf ( Success. class ) ) )
5413	assertThat ( target. getEdgeActions ( "node1" ), is ( actions ) )
5414	Assert. assertEquals ( now. toString ( ), string )
5415	assertFalse ( resolver. supportsParameter ( param ) )
5416	assertTrue ( "should get layerIds array [\\"216\\",\\"218\\"]", ( json. equals ( jsonResult ) ) )
5417	runner. assertAllFlowFilesTransferred ( DeleteS3Object. REL_SUCCESS, 1 )
5418	Assert. assertNotNull ( job )
5419	assertTrue ( matcher. match ( msg, rule ) )
5420	assertThat ( parser. parse ( builder. build ( ) ), equalTo ( parser. parse ( json ) ) )
5421	assertFalse ( credentialManager. hasEntryWithAlias ( CredentialManager. KeystoreType. KEYSTORE, alias ) )
5422	assertFalse ( userWrapperDaoService. get ( user ). isActive ( ) )
5423	Assert. assertEquals ( data, FileChannelEmul. byteBufferToString ( result ) )
5424	assertPermanentCount ( playerA, "Barrage Tyrant", 0 )
5425	assertTrue ( comparePomFiles ( reactorProjects ) )
5426	assertEquals ( expectedQuery, actualQuery )
5427	rule. assertScenarioEnded ( )
5428	assertEquals ( sut, second )
5429	Assert. assertThat ( methodMatcher. matches ( methodInvocationTree ), is ( false ) )
5430	Assert. fail ( "Shouldn't be possible to patch update dataset with wrong name: " + datasetName )
5431	assertThat ( ListNumbers. toListNumber ( array ), equalTo ( ( ListNumber ) new ArrayDouble ( array ) ) )
5432	assertEquals ( decoded, attData )
5433	assertEquals ( "!Proxy!" + servletName + "JSESSIONID=1234;path=" + servletPath, rsp. getHeaderField ( HEADER ) )
5434	Assert. assertTrue (! file. exists ( ) )
5435	assertEquals ( "Expected 0 results!", 0, n )
5436	assertEquals ( "Wrong property value (path=" + path + ")", USER_JACK_POLYNAME_ORIG, found )
5437	Assert. assertFalse ( unitMoveIntents. hasIntent ( VEC_23_23 ) )
5438	assertThat ( noOfSolutions, is ( xSize ) )
5439	assertEquals ( "2", output )
5440	assertThat ( request. getIdTag ( ), equalTo ( idTag ) )
5441	assertEquals ( "INSERT INTO tbl(col1,col2) VALUES (\\"value1\\",\\"value2\\")", builder. toString ( ) )
5442	assertNotNull ( tag )
5443	assertThat ( Graph. fromSmiles ( smi ). kekule ( ). toSmiles ( ), is ( "C1=CC=CC=2-C3=CC=CC=C3-C12" ) )
5444	assertTrue ( true )
5445	assertThat ( modelInstance, notNullValue ( ) )
5446	assertEquals ( expResult, result )
5447	assertNotNull ( nodeMap )
5448	runner. assertValid ( cfProvider )
5449	assertSame ( e, CRestException. handle ( e ) )
5450	assertEquals ( expected, actual )
5451	assertEquals ( "decimal", shortForm )
5452	assertFalse ( list. isEmpty ( ) )
5453	assertOut ( "RoyaleTest_A.prototype.foo = function() {\\n  return React.createElement('div', { 'id': 'foo' }, 'Foo');\\n}" )
5454	assertEquals ( 1500, node. endTime ( ) )
5455	assertEquals ( 5, captures. get ( 0 ). length )
5456	assertEquals ( EventType. RS_ZK_REGION_FAILED_OPEN, data. getEventType ( ) )
5457	assertNotNull ( result )
5458	XMLAssert. assertXMLEqual ( "<stringParameterFilter>\\n" + "  <key>TEST</key>\\n" + "  <defaultValue>Default</defaultValue>\\n" + "  <normalize>\\n" + "    <case>UPPER</case>\\n" + "    <locale>en_CA</locale>\\n" + "  </normalize>\\n" + "  <values>\\n" + "    <string>foo</string>\\n" + "    <string>Bar</string>\\n" + "    <string>BAZ</string>\\n" + "  </values>\\n" + "</stringParameterFilter>", xs. toXML ( filter ) )
5459	assertThat ( result, is ( false ) )
5460	assertEquals ( "UID1 should have Permission NO", Permission. NO, localDomainAccessController. getConsumerPermission ( UID1, DOMAIN1, INTERFACE1, OPEARATION1, TrustLevel. HIGH ) )
5461	Assert. assertEquals ( - 1, compareResult )
5462	assertEquals ( 204, action. getCode ( ) )
5463	assertOut ( "/**\\n * @export\\n */\\nB.prototype.b = function() {\\n  var self = this;\\n  function c(f) {\\n  };\\n  var /** @type {Function} */ f = org.apache.royale.utils.Language.closure(this.b, this, 'b');\\n  c(f);\\n}" )
5464	assertThat ( token. getType ( ), is ( PCRELexer. NewLineSequence ) )
5465	assertEquals ( "Czesc Kalle", client. target ( "http://localhost:8080" ). path ( "/hello" ). request ( ). get ( String. class ) )
5466	assertSame ( "Checking appserverClassLoader.", loader, bf. getAppserverClassLoader ( ) )
5467	assertNotNull ( PropertyUtils. getProperty ( result, "auditInfo" ) )
5468	assertTrue ( resultMessage ( res, PUT ), res. passedValidation ( ) )
5469	assertThat ( "response contains a non-empty fullName", StringUtils. isNotBlank ( response. getFullName ( ) ) )
5470	assertResponse ( response, 204 )
5471	assertThat ( target. exists ( ), is ( true ) )
5472	assertThat ( longProperty, is ( equalTo ( 42L ) ) )
5473	assertEquals ( "org.talend.components.processing.runtime.${componentNameLowerCase}.${componentNameClass}Runtime", runtimeInfo. getRuntimeClassName ( ) )
5474	assertTrue ( "Should get invalid schema", schema == null )
5475	Assert. assertEquals ( true, context. error ( ). isPresent ( ) )
5476	assertArrayEquals ( strings, new String [ ] { "ccc", "bb", "a" } )
5477	Assert. assertEquals ( String. format ( "{%s}", key ), Language. get ( key ) )
5478	assertTrue ( cleanExit )
5479	assertEquals ( 5, p1. distance ( p2 ), PRECISION )
5480	assertEquals ( d, new DOI ( "doi:10.1234/1ASCDU" ) )
5481	assertErrorResponse ( response, ErrorResponse. ErrorType. INVALID_INPUT, "INVALID_PUBLIC_TOKEN" )
5482	assertEquals ( 4, results. size ( ) )
5483	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
5484	EvictorTestUtils. assertEvictionPlanValid ( minCapacity, plan, mMetaManager )
5485	assertMockEndpointsSatisfied ( )
5486	assertEqualLists ( "results", explicitList, defaultedList )
5487	Assert. assertEquals ( "<table border=\\"1\\" cellspacing=\\"0\\">\\n" + "<tr>\\n" + "<th class=\\"pass\\">Col 1</th>\\n" + "<th class=\\"pass\\">Col 3</th>\\n" + "</tr>\\n" + "<tr>\\n" + "<td class=\\"pass\\">A1</td>\\n" + "<td class=\\"pass\\">A3</td>\\n" + "</tr>\\n" + "</table>", TableTestUtils. getHtml ( this. tableVerifier, "table" ) )
5488	Assert. assertEquals ( MyDatum. FIELDS, md. getFields ( ) )
5489	assertIsSemver ( semver, version, 1, 2, 3, new String [ ] { "beta", "11" }, "sha.0nsfgkjkjsdf" )
5490	assertEquals ( 500, getCap. get ( 0 ) )
5491	assertEquals ( "47.567800", csvValues. get ( "stop_lat" ) )
5492	assertReflectionEquals ( topicDraft, result )
5493	Assert. assertEquals ( "<foo xmlns=\\"http://p\\"></foo>", writer. toString ( ) )
5494	assertTrue ( usl. getPenStroke ( ). getDashArray ( ). equals ( "" ) )
5495	Assert. fail ( "Expect adding partition to fail" )
5496	assertSame ( people, result )
5497	assertFeatureValues ( expected, testQuery, testText, new UnigramFeatureExtractor ( ) )
5498	Assert. assertEquals ( "Value is incorrect", map, value )
5499	assertFalse ( result )
5500	context. assertAuthzException ( statement, "USE default" )
5501	assertTrue ( lines. contains ( "longest-mention: Bill Clinton" ) )
5502	assertArrayEquals ( new int [ ] { 1, 2 }, actual )
5503	assertEquals ( 0, result. size ( ) )
5504	assertEquals ( "default", processEngine. getName ( ) )
5505	assertNull ( value )
5506	assertArrayEquals ( new int [ ] { 0, 0, 1 }, closed )
5507	assertEquals ( 4, css. getSeverity ( ) )
5508	assertEquals ( "", Bytes. toString ( res ) )
5509	Assert. fail ( "Did not throw expected exception for reserved name '" + s + "'" )
5510	assertEquals ( 0, BufferTools. indexOfTerminator ( buffer, 0, 2 ) )
5511	assertEquals ( javaValue, xtreemfsValue )
5512	assertEquals ( 2, business. findGreatest ( ) )
5513	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, query2 ) )
5514	Assert. assertEquals ( "StreamEvent[stream=STREAMID,timestamp=2016-11-09 05:01:26,971,data=[namevalue,hostvalue,1,10.0,1,-0.2,{\\"name\\":\\"heap.COMMITTED\\", \\"Value\\":\\"175636480\\"},100],metaVersion=metaVersion]", streamEvent. toString ( ) )
5515	assertEquals ( Arrays. asList ( "aaa", "bbb", "ccc" ), topics )
5516	assertEquals ( "\\"a'b\\" : 'a\\\\'b\\"c'", writer. toString ( ) )
5517	assertEquals ( "<html><head><title>Error</title></head><body><h1>Error</h1><code>An error occurred</code></body></html>", writer. getBuffer ( ). toString ( ) )
5518	assertCancelActionMessage ( actionId, controllerId )
5519	assertFalse ( cnf. evaluate ( vertex ) )
5520	assertEquals ( "alt 1\\n", found )
5521	assertNotNull ( tpmAttestation )
5522	assertEquals ( expected, result )
5523	assertNumEquals ( 0, getCriterion ( ). calculate ( series, new BaseTradingRecord ( ) ) )
5524	assertEquals ( expected, result )
5525	assertThat ( graphManager. getGraph ( ). traversal ( ). E ( ). has ( "tim_id", relId. toString ( ) ). next ( ), is ( likeEdge ( ). withSourceWithId ( sourceId ). withTargetWithId ( targetId ). withTypeId ( typeId ) ) )
5526	assertEquals ( 3, lines. size ( ) )
5527	assertTrue ( axis. isTickMarksVisible ( ) )
5528	assertNotNull ( "A new order did not get created", presenter. order )
5529	assertNotNull ( woodcuttingPlugin. getSession ( ) )
5530	assertThat ( format ( "Glucose value [%d] should not be included in the conversion result", specialGlucoseValue ), syncData, is ( equalTo ( expectedSyncData ) ) )
5531	assertThat ( target, notNullValue ( ) )
5532	assertEquals ( s, UrlUtils. urlDecode ( encoded ) )
5533	assertEquals ( callback. getUri ( ), requestUri )
5534	assertThat ( "missing owner not detected", validation. hasErrorAbout ( "no", "owner" ) )
5535	assertEquals ( mockResponse, testResponse )
5536	assertEquals ( 2, keyspaces. size ( ) )
5537	Assert. fail ( "Missing required input" )
5538	assertSame ( new RolePrefixSecurityContextImpl ( s, "" ). getSubject ( ), s )
5539	assertEquals ( html, sanitized )
5540	assertNotNull ( mockTransFunc. calledWithRingGroup )
5541	assertEquals ( 0, entityLog. size ( ) )
5542	assertHasError ( result, PlanningExecutionResult. ErrorCode. TASK_MODIFIED_SINCE_PLAN_CALCULATION_ERROR, errorMessage, CONTAINER_ID )
5543	Assert. assertEquals ( 4000, ( ( CountingReceiver ) receivers [ i ] ). msgCount )
5544	Assert. assertEquals ( "value1", oAuthMachine. readAttributeFromBodyMap ( input, "claims" ) )
5545	assertThat ( manager. registerVoter ( "foo" ), is ( INVALID_VOTER_RESPONSE ) )
5546	assertFalse ( topic. isPlugable ( ) )
5547	assertEquals ( nodeName, DotfileWriter. limitNodeNameLength ( nodeName ) )
5548	assertTrue ( RelaxNgSchemaValidator. validateAgainstRelaxNg ( actualXml ) )
5549	assertEquals ( 3, execute ( Artist. class, parsed1 ). size ( ) )
5550	assertThat ( Weekday. values ( ) [ i ]. getValue ( Weekmodel. of ( Locale. US ) ), is ( expected ) )
5551	assertNotNull ( rs. getRuleByName ( "TestRuleRef" ) )
5552	assertEquals ( expectedSource, instrumentedSource )
5553	assertEquals ( gfs, result )
5554	org. junit. Assert. assertEquals ( expectedPatterns, count. get ( ) )
5555	assertEquals ( sz, z, FastInteger. parseUint ( sz ) )
5556	assertNotNull ( informe. getId ( ) )
5557	assertTrue ( cut. isPositive ( 50 ) )
5558	assertThat ( "Body is incorrect!", body, matchesPattern ( "^Processed \\\\[message] with \\\\[Camel \\\\(test\\\\) thread #\\\\d+ - Thread Name]$" ) )
5559	assertNull ( record. getObject ( c ) )
5560	assertThat ( result, is ( nullValue ( ) ) )
5561	assertTrue ( p. hasTag ( tag ) )
5562	Assert. assertEquals ( FastMath. toDegrees ( x ), value. toDegrees ( ). getReal ( ), epsilon )
5563	Assert. assertEquals ( objectMapper. readTree ( inputJson ), objectMapper. readTree ( deserializedJson ) )
5564	assertOut ( "public class A extends B implements IA, IB, IC {\\n}" )
5565	assertTrue ( persons. contains ( key ) )
5566	assertEquals ( "Call count stability check.", "{findIds=2, getItems=1}", service. callCounter. toString ( ) )
5567	assertOutput ( expected )
5568	Assert. assertTrue ( score <= 0 )
5569	assertArrayEquals ( this. ipv6MsgWithDistinguishergBytes, ByteArray. getAllBytes ( aggregator ) )
5570	assertEqualsIgnoreWhitespace ( expected, drl )
5571	tester. assertRenderedPage ( HomePage. class )
5572	assertEquals ( pl. get ( "filename" ), "\\\\a\\\\b\\\\c.txt" )
5573	assertEquals ( selectedInterval. getName ( ), "Engineering" )
5574	assertEquals ( CREATED. getStatusCode ( ), response. getStatus ( ) )
5575	assertArrayEquals ( data, stream. toByteArray ( ) )
5576	Assert. assertEquals ( "(nt_point_location (nt_base_location (nt_number 123)) (nt_offset + (nt_number 4)))", loc. toStringTree ( parser ) )
5577	Assert. assertTrue ( found110Warning )
5578	assertNull ( channel21. readOutbound ( ) )
5579	assertEquals ( "wrapping renderer must use list's default on null", defaultRenderer. getClass ( ), renderer. getDelegateRenderer ( ). getClass ( ) )
5580	Assert. assertEquals ( correctJson, producedJson )
5581	assertTrue ( result. isSuccess ( ) )
5582	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, initialQuery ) )
5583	descriptor. assertValid ( )
5584	assertEquals ( "Version!", manager. getTransportVersionString ( ) )
5585	assertEquals ( 1, handler. recover ( new Object [ ] { "Dave" }, new RuntimeException ( "Planned" ) ) )
5586	assertEquals ( expecting, t. toStringTree ( ) )
5587	assertEquals ( "", result )
5588	assertEquals ( topic. getUserPostCount ( new JCUser ( ) ), 0 )
5589	assertNotNull ( toolSpec )
5590	arrays. assertContainsSequence ( description, actual, null )
5591	ReflectionAssert. assertReflectionEquals ( except, result )
5592	assertEquals ( lbl. size ( ), lbl2. size ( ) )
5593	Assert. assertEquals ( "OK", e. evaluate ( jc ) )
5594	assertEquals ( "qwerty", invoke. invoke ( null, "qwerty" ) )
5595	assertEquals ( "2015-10-05", mo. getDateWrittenElement ( ). getValueAsString ( ) )
5596	assertEquals ( "The view paths aren't correct", "loadrules", scm. getViewPaths ( null, null, launcher ) [ 0 ] )
5597	assertPutFails ( occurrence, OntopiaRestErrors. MANDATORY_FIELD_IS_NULL )
5598	assertEquals ( "{foo:null,bar:null}", m. toString ( ) )
5599	assertEquals ( COSBoolean. FALSE, victim. nextBoolean ( ) )
5600	assertEquals ( PREFIX_URL, configuration. getPrefixUrl ( ) )
5601	assertEquals ( "One", doc. head ( ). text ( ) )
5602	assertEquals ( "2.0", hm. get ( "swagger" ) )
5603	Assert. assertEquals ( expectedSpec, actualSpec )
5604	assertEquals ( 5, knownItems2. size ( ) )
5605	assertArrayEquals ( getPixels ( expected, 0, 0, expected. getWidth ( ), expected. getHeight ( ), null ), getPixels ( actual, 0, 0, actual. getWidth ( ), actual. getHeight ( ), null ) )
5606	assertThat ( ClockInterval. parseISO ( "12:20/PT1H55M30S" ), is ( interval ) )
5607	assertCorrectLoggerName ( )
5608	Assert. assertEquals ( originalFont. getOs2 ( ). getVersion ( ), parsedFont. getOs2 ( ). getVersion ( ) )
5609	Assert. assertEquals ( "u.user_id", ctx. getSqlStatement ( ) )
5610	assertNotNull ( emailAlerter )
5611	assertEquals ( asList ( "O", "�", "�" ), stringsToSort )
5612	assertEquals ( aseVariant1. getA2Counts ( ), expResult )
5613	assertThat ( NF. numberNode ( BigDecimal. ONE ), is ( sut ) )
5614	assertFalse ( this. factory. indicatesFailure ( new IOException ( ), dialect ) )
5615	assertEquals ( 2, constraints. size ( ) )
5616	Assert. assertEquals ( 1, startLevel. getStartLevel ( ) )
5617	assertEquals ( SampleLocations. STOCKHOLM, cargo. getDelivery ( ). getLastKnownLocation ( ) )
5618	assertTrue ( connection. isAuthenticated ( ) )
5619	compiler. assertErrorsOnLines ( "example/Test.java", diagnostics, 7 )
5620	Assert. assertEquals ( s, new String ( expanded ) )
5621	assertTrue ( startOffset. getRowKey ( ). compareTo ( endOffset. getRowKey ( ) ) <= 0 )
5622	assertEquals ( 2, twSearch. collectObjects ( rsp ). size ( ) )
5623	assertThat ( sel, is ( dataProperty ) )
5624	AssertionUtils. multiAssertEquals ( createAsDocument9, response5. getResponseObject ( ) )
5625	assertEquals ( "|Monday|Tuesday|Wednesday|Thursday|Friday", days )
5626	assertNull ( actual )
5627	assertNoViolations ( constraintViolations )
5628	assertEquals ( buildExceptionMessage ( "Expected SUCCESS but twin status was " + deviceUnderTest. deviceTwinStatus, internalClient ), DeviceTwinCommon. STATUS. SUCCESS, deviceUnderTest. deviceTwinStatus )
5629	Assert. assertEquals ( expectedGeoJson, geoJson )
5630	assertThat ( storyText, equalTo ( "dummy story file" ) )
5631	assertTrue ( closed. await ( 2, SECONDS ) )
5632	assertTrue ( result )
5633	Assert. assertEquals ( 2, result. length ( ) )
5634	PatternAssert. assertThat ( H2DB_CONNECTION_STRING_PATTERN )
5635	Assert. assertEquals ( "yyyy", FastqTools. convertQualities ( fastq, FastqVariant. FASTQ_SOLEXA ) )
5636	assertEquals ( "\\n# Level1\\n\\n## Level2\\n", writer. toString ( ) )
5637	assertTrue ( validator. validate ( EntityNames. TEACHER_SCHOOL_ASSOCIATION, teacherSchoolAssociations ). isEmpty ( ) )
5638	assertThat ( validPeriods, definedBy ( point ( contemporaryExample ), EndOfTime. create ( ) ) )
5639	assertSqlCanBeParsedAndDeparsed ( stmt )
5640	assertTrue ( p. isEventReceived ( ) )
5641	assertFalse ( "run should have been deleted", listPage. idDisplayIdInList ( "1" ) )
5642	assertEquals ( UserCreatedEvent. class, userCreatedEvent. getType ( ) )
5643	assertNotNull ( tg )
5644	assertNotNull ( result )
5645	assertEquals ( expected, query )
5646	Assert. assertEquals ( element. getText ( ), "click me" )
5647	Assert. assertNull ( testsuites )
5648	assertThat ( serializer, is ( instanceOf ( IgnoringSerializer. class ) ) )
5649	assertThat ( rs. size ( ), equalTo ( 3 ) )
5650	assertEquals ( year, formatted )
5651	assertTrue ( monitor. isSendQueueWarning ( ) )
5652	assertThat ( exported, is ( expected ) )
5653	assertThat ( xml, hasXPath ( "/daily-values/saturated-fat", equalTo ( "20" ) ) )
5654	assertNotNull ( token )
5655	assertThat ( add, is ( 4.5 ) )
5656	assertEquals ( bs. getPlayerNumber ( p ), 1 )
5657	assertEquals ( "  EAP Test" + j, trueEAP_LSAT7 [ j ], eap, 1e-3 )
5658	assertNull ( testList. get ( before ) )
5659	assertTail ( input, 100, expectedOutput )
5660	assertEquals ( true, xmlHelpers. validateSignature ( document ) )
5661	assertNotNull ( Credential. reader ( ). read ( ) )
5662	assertEquals ( "4 Nov 2010 16:06:04 GMT", block. getTime ( ). toGMTString ( ) )
5663	assertions. isNotEqualTo ( true )
5664	assertEquals ( "1997-01-02", formatterMember )
5665	Assert. assertNotNull ( vo )
5666	assertThat ( resultedQuery, is ( expectedQuery ) )
5667	Assert. assertNotNull ( limitOrder )
5668	assertNotNull ( mav )
5669	assertPrefetchResult ( result )
5670	assertEquals ( check. missingHeaders. size ( ), 0 )
5671	Assert. assertEquals ( user. username, "Merlin" )
5672	UnitTestUtils. assertEquals ( "scalar add", new Array2DRowRealMatrix ( testDataPlus2 ), m. scalarAdd ( 2d ), entryTolerance )
5673	Assert. assertEquals ( numBlocks * replication, totalBlockLoads )
5674	Assert. assertFalse ( findStreetCalled )
5675	Assert. assertEquals ( "EJEAOOZYSAWFPZQESYDHZCGYNSTWXUMVJOVDWUNZJXDGWCLUFGIMZRMGCAZGKNPLBRLGUNYWKLJTYEAQX", hash )
5676	assertNull ( slEndpoint. getAddress ( ) )
5677	assertEquals ( 2, result )
5678	assertEquals ( HttpStatusCode. ACCEPTED. code, response. getStatus ( ) )
5679	assertEquals ( Rational. ONE, result )
5680	assertTrue ( testFailed. isEmpty ( ) )
5681	assertThat ( axioms. isEmpty ( ), is ( true ) )
5682	Assert. assertEquals ( expectedResult, resultString )
5683	assertEquals ( expResult, result )
5684	assertFailureValue ( "missing (1)", "y" )
5685	Assert. assertTrue ( list. isEmpty ( ) )
5686	assertEquals ( deliveryDay, tourInstance )
5687	assertEquals ( "Incorrect status code", new Integer ( 400 ), new Integer ( resp. getStatusCode ( ) ) )
5688	assertThat ( actual, is ( equalTo ( expected ) ) )
5689	assertTrue ( BatchUtil. evaluate ( batch ) )
5690	assertNotNull ( doc )
5691	assertEquals ( CUSTOM_PRIORITY, seedJob. getPriority ( ) )
5692	Assert. assertEquals ( "custom-value", mf. getMainAttributes ( ). getValue ( "Custom-Entry" ) )
5693	assertFalse ( "Directory created", dir. exists ( ) )
5694	assertEquals ( "[]", Iterables. toString ( tree. getKeysContainedIn ( document ) ) )
5695	assertNotNull ( scriptStatement )
5696	Assert. assertEquals ( "GraphHead POJOs were not equal", graphHeadIn, GradoopFlinkTestUtils. writeAndRead ( graphHeadIn ) )
5697	assertEquals ( 0, ProfileLogger. dump ( ). size ( ) )
5698	assertEquals ( clockTime, clockTime2 )
5699	assertEquals ( expResult, result )
5700	assertDates ( toString ( p1 ), toString ( p21 ), toString ( p22 ), actual )
5701	assertEquals ( "medium", EvaluatorUtil. decode ( prediction ) )
5702	assertBuild ( "build", script, BUSYBOX_IMAGE )
5703	assertArrayEquals ( "Wrong property", values, config. getStringArray ( KEY_PREFIX ) )
5704	assertEquals ( fixture, response )
5705	Assert. assertNotNull ( clusterMeta )
5706	Assert. assertTrue ( msg, Arrays. deepEquals ( esperado, resultado ) )
5707	assertNull ( result. getNode ( ) )
5708	assertE ( "�尖�尖�尖�尖�尖��" + "�尖��   ��" + "�尖��   ��" + "�尖��   ��" + "�尖��   ��" + "�尖�尖�尖�尖�尖��" )
5709	assertEquals ( Debug. abbreviatedName ( m. getClass ( ) ) + "@" + Debug. toMemorableString ( System. identityHashCode ( m ) ), Debug. objectId ( m ) )
5710	assertFalse ( evaluator. shouldProxyHost ( "1.232.11.3" ) )
5711	assertFalse ( b )
5712	assertFutureCancelMetaCancel ( future )
5713	assertEquals ( 54321, settings. getSysColor ( ) )
5714	Assert. assertTrue ( expected. equals ( actual ) )
5715	assertNotNull ( migrationPlan )
5716	assertEquals ( "JPEG", TestUtils. getFormatName ( new ByteArrayInputStream ( baos. toByteArray ( ) ) ) )
5717	assertEquals ( 12345 * 1000, result )
5718	Assert. assertEquals ( 1, stateContext. getData ( ) )
5719	assertEquals ( 0, records. size ( ) )
5720	Assert. assertEquals ( "Huawei_Gsm", vertexTraversal ( this. sqlgGraph, softwareVersion ). out ( "softwareVersion_vendorTechnology" ). next ( ). value ( "name" ) )
5721	assertEquals ( expectedFirstname, actualFirstname )
5722	assertEquals ( "only exec once", execCount. get ( ), 1 )
5723	Assert. assertEquals ( "div", div. getTagName ( ) )
5724	Assert. assertEquals ( "The jumps over", hl. makeWellFormed ( xmlContent ) )
5725	assertEquals ( TEST_INITIAL_DFS_REPLICATION, testConfiguration. get ( "dfs.replication.initial" ) )
5726	assertThat ( span. to ( MILLISECONDS ), is ( 17_500L ) )
5727	Assert. assertEquals ( xmlEsperado, referenciada. toString ( ) )
5728	assertEquals ( 0, consumerPrefetch. retriesAttempted )
5729	assertEquals ( "Mismatched data", expected, res )
5730	Assert. assertEquals ( 0, queue. size ( ) )
5731	assertFalse ( "Initiator should not have an Ack request from disapproval because they were the disapprover user", document. isAcknowledgeRequested ( ) )
5732	assertEquals ( 0, ( ( Object [ ] ) emptyArray. getArray ( ) ). length )
5733	assertTrue (! result )
5734	assertThat ( uriContent. path ( "type" ). asText ( ), is ( equalTo ( "string" ) ) )
5735	assertFalse ( abstractRule. test ( patent ) )
5736	assertEquals ( BigInteger. valueOf ( 123 ), converter. getAsObject ( facesContext, new UIPanel ( ), "123" ) )
5737	Assert. assertTrue ( "collection should have inherit set", isInherit )
5738	assertThat ( sampleEntities. getTotalElements ( ), equalTo ( 0L ) )
5739	assertEquals ( 2 * r, s. getFeatures ( ). get ( SpotRadiusEstimatorFactory. ESTIMATED_DIAMETER ), 2 * r * TOLERANCE )
5740	assertResult ( expression, inputTypes, inputValues, result )
5741	assertThat ( result, is ( instanceOf ( Success. class ) ) )
5742	assertTrue ( dnsMessage. getHeader ( ). isQuery ( ) )
5743	assertSame ( GBP_2_34, test )
5744	assertEquals ( expecting, result )
5745	assertEquals ( 7, result1. size ( ) )
5746	assertEquals ( expectedFileName, message )
5747	assertThat ( idAndVersion1. compareTo ( idAndVersion2 ), is ( - 1 ) )
5748	assertEquals ( "Expected 2 results!", 2, count )
5749	Assert. assertEquals ( numObjects, numCollections. get ( ) )
5750	Assert. fail ( "should not call this Method interceptor" )
5751	assertThat ( response, is ( "" + "% Note: this output has been filtered.\\n" + "%       To receive output for a database update, use the \\"-B\\" flag.\\n\\n" ) )
5752	assertEquals ( "A搂", buffer. removeCString ( Data. ENC_GSM7BIT ) )
5753	assertNull ( pgpass. getPgpass ( "dummy", "dummy", "dummy", "dummy" ) )
5754	assertEquals ( 4, bs. capacity ( ) )
5755	assertTrue ( Pattern. matches ( "(?s).*/component.jsp PASSED.*", page. asXml ( ) ) )
5756	assertEquals ( combinationsExpected, result )
5757	Assert. assertTrue ( referredGraphs. contains ( STORED_NAME_GRAPH ) )
5758	assertEquals ( requestString, StaxUtils. toString ( response ) )
5759	assertEquals ( s. fromReal ( 2 * - 4 + 3 * 6 + 5 * 7 ), t1. getDotProduct ( t2 ), 1e-13 )
5760	assertThat ( Template. parse ( markup ). render ( assigns ), is ( expected ) )
5761	assertTrue ( HttpTestUtils. semanticallyTransparent ( resp2, result ) )
5762	assertTrue ( "Returned object should be an TransformedQueue.", queue instanceof TransformedQueue )
5763	Assert. assertEquals ( "Target url is not secured - Should have 0 cookies", 0, result. size ( ) )
5764	assertTrue ( "Wrongly reduced InOid filter: " + query. getFilter ( ), query. getFilter ( ) instanceof NoneFilter )
5765	assertTrue ( props. size ( ) > 0 )
5766	assertEquals ( topic. getUserPostCount ( new JCUser ( ) ), 0 )
5767	assertThat ( result, is ( expectedAxiom ) )
5768	assertThat ( result. included ( ). get ( "notice" ). toString ( ), is ( "User " + user. getName ( ) + " successfully added" ) )
5769	assertThat ( Integer. parseInt ( codepoints ), is ( 0x0061 ) )
5770	assertNull ( remainingBuffer )
5771	assertHasError ( result, PlanningExecutionResult. ErrorCode. UNEXPECTED_ERROR, String. format ( UNEXPECTED_ERROR_DURING_PLAN_CALCULATION, ERROR_MESSAGE ), null )
5772	assertNull ( copyObjectRequest. getNewObjectMetadata ( ) )
5773	assertTrue ( tweets. length == 6 )
5774	assertEquals ( "from SURVEY SURVEY with (NOWAIT), SURVEY survey2 with (NOLOCK)\\nwhere SURVEY.NAME is null", query. toString ( ) )
5775	assertThat ( lineCount, is ( 5 ) )
5776	assertEquals ( "<order><id>123/id><customerId>4444/customerId><date>20100110</date>" + "<item><id>222</id><amount>1</amount></itemn></order>", xml )
5777	assertTrue ( runtimeService. createProcessInstanceQuery ( ). singleResult ( ). isSuspended ( ) )
5778	Assert. assertTrue ( true )
5779	Assert. assertEquals ( instantiatedMethod. getGeneratedClass ( ). getRawClass ( ), GuavaExample4. class )
5780	assertEquals ( value, ( Double ) 20.0 )
5781	assertEquals ( String. valueOf ( ReturnCode. NO_SPEECH. code ( ) ), firstEvent. getParameter ( "rc" ) )
5782	assertThat ( extractMonitorables ( adapter ). get ( MIN ). get ( ), Matchers. < Object > is ( newMin ) )
5783	assertEquals ( "", result )
5784	Assert. assertEquals ( expect, text )
5785	assertTrue ( in. equals ( out ) )
5786	assertEquals ( STATUS_BAD_REQUEST, resp. getStatus ( ) )
5787	assertTrue ( fromJson instanceof BigInteger )
5788	assertEquals ( 5, OutlineUtils. toPageDestination ( victim, catalog ). get ( ). getPageNumber ( ) )
5789	assertThat ( date. with ( YEAR, 2014 ), is ( PlainDate. of ( 2014, 2, 28 ) ) )
5790	Assert. assertNotEquals ( asyncReconnectBeforeReset, asyncReconnectAfterReset )
5791	Assert. assertEquals ( BatchStatus. FAILED, jobExecution. getBatchStatus ( ) )
5792	Assert. assertEquals ( "All is well", message )
5793	assertThat ( anonymized, is ( "Cookies: Parsing b[]: remember-me=0:<HIDDEN> Auth-Type=http; Auth-Token=b:<HIDDEN> HYDRA-XSRF-TOKEN=2:<HIDDEN>" ) )
5794	assertEquals ( "Generic[thing=str]", logAdapter. asString ( new Generic < String > ( "str" ) ) )
5795	assertTrue ( observer. await ( tc ) )
5796	Assert. assertEquals ( "|||", value )
5797	assertEquals ( "double: 4,56", b. primitiveDouble ( 4.56d ) )
5798	assertThat ( options. getCredentialsProvider ( ), is ( nullValue ( ) ) )
5799	Assert. assertEquals ( "0775dcf9193095e791307a115c192cc897753499", fp )
5800	assertEquals ( "the artifact must be downloaded", true, new File ( localRepo, "ant/ant/1.5.1/ant-1.5.1.jar" ). exists ( ) )
5801	Assert. assertSame ( dElem, mergeElem )
5802	assertThat ( testOutcome. getIgnoredCount ( ), is ( 1 ) )
5803	assertEquals ( 0, count. get ( ) )
5804	assertTrue ( runtimeService. createProcessInstanceQuery ( ). singleResult ( ). isSuspended ( ) )
5805	Verify. assertListsEqual ( Lists. mutable. with ( "Speedy", "Spot", "Spike", "Dolly", "Tabby", "Tweety", "Fuzzy", "Wuzzy" ), pets. asEcList ( ). collect ( TO_PET_NAME ) )
5806	Assert. assertEquals ( WritableUtils. val ( "s1" ), udf. evaluate ( args ) )
5807	Assert. assertEquals ( true, a. contains ( b ) )
5808	assertEquals ( Collections. singleton ( "#" ), responderOptions. getBindingKeys ( ) )
5809	assertEquals ( ROUTE_KEY, instanceIdentifier. firstKeyOf ( VpnRoute. class ) )
5810	assertEquals ( AssetPathToFilterConfigMapper. XLIFF_FILTER_CONFIG_ID, filterConfigId )
5811	Assert. assertEquals ( "", u. getName ( ) )
5812	assertions. contains ( values )
5813	assertTrue ( ok )
5814	assertEquals ( String. format ( "tuple(%d)", i ), e, a )
5815	assertTrue ( "List mismatch", words1. equals ( words2 ) )
5816	assertEquals ( BODSentence. class, ebl. sentenceType )
5817	assertEquals ( Arrays. asList ( "ok1", "ok2" ), list )
5818	assertNull ( conceptService. getConceptProposal ( conceptProposalId ) )
5819	assertEquals ( 1e-1, w. getDouble ( 0 ), 1e-1 )
5820	Assert. assertEquals ( reply, receivedReply )
5821	assertEquals ( 2, Solutions. bestOf ( solutions ). getRoutes ( ). size ( ) )
5822	InOutLineExpectations. newExpectations ( ). newInOutLineExpectation ( ). qtyEnteredTU ( 10 ). newHUAssignmentExpectation ( ). hu ( paloxes. get ( 0 ) ). luHU ( null ). tuHU ( null ). endExpectation ( ). newHUAssignmentExpectation ( ). hu ( paloxes. get ( 0 ) ). luHU ( null ). tuHU ( paloxes. get ( 0 ) ). endExpectation ( ). newHUAssignmentExpectation ( ). hu ( paloxes. get ( 1 ) ). luHU ( null ). tuHU ( null ). endExpectation ( ). newHUAssignmentExpectation ( ). hu ( paloxes. get ( 1 ) ). luHU ( null ). tuHU ( paloxes. get ( 1 ) ). endExpectation ( ). newHUAssignmentExpectation ( ). hu ( paloxes. get ( 2 ) ). luHU ( null ). tuHU ( null ). endExpectation ( ).
5823	assertTrue ( or. isDefined ( ) )
5824	assertParsedMessages ( "8=FIX.4.4|9=82|35=A|34=1|49=CLIENT|52=20140101-10:10:10.100|56=SERVER|98=0|108=30|141=Y|383=8192|10=080|", "8=FIX.4.4|9=67|35=1|34=1|49=CLIENT|52=20140101-10:10:10.100|56=SERVER|112=TEST123|10=245|" )
5825	assertThat ( found, is ( false ) )
5826	assertArrayEquals ( "{ 'hello' : 'world' } not the expected bytes.", helloWorld, out. toByteArray ( ) )
5827	assertEquals ( "date", type. getDataType ( 0, 0, 0, false ) )
5828	assertScriptEquality ( expectedScript, actualScript )
5829	assertThat ( objectStrategy. deserialize ( d ), not ( nullValue ( ) ) )
5830	assertTrue ( cache. remove ( new Long ( key ), new String ( value ) ) )
5831	assertThat ( restored. isNull ( ), is ( true ) )
5832	assertTrue ( alertService. hasAlerts ( ) )
5833	assertEquals ( "From is not properly parsed", new Date ( 5 ), mapper. readFrom ( columns ) )
5834	Assert. assertEquals ( "No nodes should be free since existing run hasn't started", 0, freeThreads )
5835	Assert. assertTrue ( out, ( double ) expectedResults [ i ] == ( double ) method. invoke ( object ) )
5836	assertEquals ( "info@effektif.com", value )
5837	assertTrue ( "Given object is not equals", persistenceModel. equals ( persistenceModel2 ) )
5838	Assert. assertNotNull ( "Reply message was null on reply queue: " + replyQueue, reply )
5839	assertEquals ( 1, repository. getCommits ( ). size ( ) )
5840	assertThat ( impl. isPermitted ( Sets. newLinkedHashSet ( Arrays. asList ( "repoName", "repoName2" ) ), "repoFormat", BreadActions. READ, variableSource ), is ( true ) )
5841	assertThat ( result, containsString ( "\\"type\\":\\"basic\\"" ) )
5842	assertEquals ( "valueA", pc. getString ( "keyA" ) )
5843	this. assertLoadBlobViaTuples ( tuples, false, true )
5844	assertEquals ( res, String. class )
5845	assertEquals ( CREATED. getStatusCode ( ), actual. getStatus ( ) )
5846	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
5847	assertTrue ( "File does not exist at " + templateFile. getAbsolutePath ( ), templateFile. isFile ( ) )
5848	assertEquals ( "Duke Oracle", person. get ( 0 ). getName ( ) )
5849	assertEquals ( result, new Pair < > ( 4, 0 ) )
5850	assertEquals ( "Used the DemoService as default.\\r\\nYou can cancel default service by command: cd /", result )
5851	assertThat ( testSupport. getResources ( CUSTOM_RESOURCE_DEFINITION ), contains ( crd ) )
5852	assertEquals ( 3, count )
5853	assertThat ( attributeValueNs, is ( "false" ) )
5854	Assert. assertEquals ( ";;;;", FastqTools. convertQualities ( fastq, FastqVariant. FASTQ_SANGER ) )
5855	Assert. assertTrue ( world. getEntity ( id )!= null )
5856	assertEquals ( expecteds, actuals )
5857	assertTrue ( ca. getFallbackParameters ( ). equals ( ap2 ) )
5858	assertEquals ( outputExpected, outputString )
5859	Assert. assertEquals ( "/css/ui.css", ModuleUtil. getPathForResource ( module, path ) )
5860	assertEquals ( expected, exported )
5861	assertEquals ( 0, ret. size ( ) )
5862	assertNotNull ( reporter )
5863	assertEquals ( expOut, out )
5864	assertEquals ( new Rectangle ( 0f, 0f, 40f, 30f ), boundingBoxOf )
5865	assertEquals ( false, result )
5866	assertEquals ( 1, messages. size ( ) )
5867	Assert. assertEquals ( IdentityConstants. BAD_REQUEST, IdentityResponseWrapper. buildFaultMessage ( responseMock ). getCode ( ) )
5868	assertThat ( command. accept ( state ), is ( false ) )
5869	assertFalse ( user. isPresent ( ) )
5870	assertEquals ( String. valueOf ( me. getCode ( ) ), me. getNick ( ) )
5871	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPdf, cmpPdf, destinationFolder, "diff" + testName + "_" ) )
5872	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED, status )
5873	assertEquals ( RESULT_COUNT, actual )
5874	Assert. assertEquals ( "did not get expected packing instruction", sb. toString ( ), dataObjInp. getParsedTags ( ) )
5875	assertions. endsWith ( )
5876	assertEquals ( expected, stats1 )
5877	assertEquals ( 188, result )
5878	assertNotNull ( adviceController )
5879	assertEquals ( z1, z2 )
5880	assertEquals ( "Resolved", "scan-bundle:" + file. toURL ( ). toExternalForm ( ), m_underTest. resolve ( file. getAbsolutePath ( ) ) )
5881	assertThat ( b. getConsole ( ), Matchers. containsString ( "test -d.svn" ) )
5882	assertEquals ( "Sat May 13 14:18:52 UTC 2017", field. getDate ( ). toString ( ) )
5883	assertNotNull ( instance. getParentVersion ( ) )
5884	assertEquals ( 0, tuple. len ( ) )
5885	assertEquals ( qm1, qm2 )
5886	assertNull ( actionDeserializer. deserialize ( buffer ) )
5887	assertEquals ( ByteBuffer. wrap ( stopRow ), ByteBuffer. wrap ( Bytes. toBytes ( "hellp" ) ) )
5888	assertRequest ( "POST", "Message/" )
5889	assertTrue ( acualValues. isEmpty ( ) )
5890	assertThat ( ordinalVOs. size ( ), equalTo ( 2 ) )
5891	assertArrayEquals ( yhat1, yhat2, 1e-8 )
5892	Assert. assertEquals ( 3, registrationsRepository. getAllRegistrations ( ). size ( ) )
5893	assertEquals ( "query1=value1&query2=value2", serverRequest. query ( ) )
5894	assertEquals ( "some_kind (1)", prettifiedKey )
5895	assertThat ( exitStatus. exitStatus ( ), is ( equalTo ( ( byte ) 0x0 ) ) )
5896	assertThat ( transformed, is ( "transform_string_to_type=null" ) )
5897	this. assertLoadBlobViaTuples ( tuples, false, true )
5898	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. ACTIVITIES_READ_LIMITED, ScopePathType. AFFILIATIONS_READ_LIMITED, ScopePathType. FUNDING_READ_LIMITED, ScopePathType. ORCID_PATENTS_READ_LIMITED, ScopePathType. PEER_REVIEW_READ_LIMITED, ScopePathType. ORCID_WORKS_READ_LIMITED )
5899	assertThat ( PlainTimestamp. of ( 2014, 4, 21, 24, 0 ), is ( PlainTimestamp. of ( date, PlainTime. midnightAtStartOfDay ( ) ) ) )
5900	assertDefaultConfig ( config, false )
5901	assertFalse ( pages. isEmpty ( ) )
5902	assertEquals ( 0, h. nestLevel )
5903	assertThat ( StepEventBus. getEventBus ( ). areStepsRunning ( ), is ( false ) )
5904	assertThatStepsInstancesAre ( builderUnloadableResource. buildCandidateSteps ( ) )
5905	assertTrue ( result )
5906	Assert. assertEquals ( "In-flight list should have length zero if the worker failed during JSON deserialization", jedis. llen ( inFlightKey ( worker, queue ) ), ( Long ) 0L )
5907	assertStack ( new Object [ ] { - 1, null, null, null, null, null }, stack )
5908	assertTrue ( "Unexpected compressed size: " + compressed. size ( ), compressed. size ( ) > SAMPLE_SIZE * 4 )
5909	assertTrue ( ( Boolean ) result )
5910	assertEquals ( "Base for string is wrong", Long. valueOf ( 3 ), parsed )
5911	assertEquals ( 0, JNIBusyWaiting. INSTANCE. whileLessThan ( null, buffer. address ( ), runs, 1 ) )
5912	Assert. fail ( "Expected an exception" )
5913	assertEquals ( 10, vrp. getJobs ( ). get ( "1" ). getSize ( ). get ( 0 ) )
5914	assertTrue ( timeLine. getValidPeriods ( ). isEmpty ( ) )
5915	runner. assertNotValid ( )
5916	assertNull ( principal )
5917	assertTrue ( profile. isExpired ( ) )
5918	Assert. assertEquals ( expected, mFileSystemMaster. checkConsistency ( new AlluxioURI ( "/" ), CheckConsistencyContext. defaults ( ) ) )
5919	assertEquals ( "select entity_0 from Entity entity_0 where ( entity_0.code = :code_1 and entity_0.primitiveInt > :primitiveInt_2 ) and entity_0.name is not null", select. getQuery ( ) )
5920	assertEquals ( pp. getValue ( ), new Payload < > ( "123" + "456" ). getValue ( ) )
5921	assertThat ( view. status ( ), containsString ( "disabled" ) )
5922	assertThat ( candidate, nullValue ( ) )
5923	assertEquals ( 0, breakpointCount )
5924	assertNotNull ( InstalledAddOnExtension. reader ( "XEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
5925	assertFalse ( mojo. isSkip ( ) )
5926	assertNotNull ( model )
5927	assertEquals ( expected, actual )
5928	assertE ( "�尖�尖�尖�尖��" + "��   ��" + "�� ��#��" + "��###��" + "�尖�尖�尖�尖��" )
5929	assertTrue ( document. getElementsByClass ( "vcard" ). isEmpty ( ) )
5930	assertEquals ( "redis://10.0.0.1", config. getAddress ( ) )
5931	assertEquals ( results, clientWrapper. getBulk ( keys ) )
5932	TestUtil. assertSuccess ( result )
5933	assertEquals ( 1, posts. size ( ) )
5934	assertTrue ( connectFuture. isConnected ( ) )
5935	assertThat ( tuple. getList ( "field" ), equalTo ( value ) )
5936	assertEquals ( 4, map. size ( ) )
5937	assertTrue ( foundBanners. isEmpty ( ), "Incorrect banners were returned, because database doesn't contain any banner" )
5938	assertThat ( buf. toString ( ), is ( equalTo ( "\\t\\tfoo;\\r\\n" ) ) )
5939	assertFalse ( count. isShowQuotas ( ) )
5940	assertNull ( foo. getPoint ( ) )
5941	assertEquals ( text, adapter. getStringAt ( 2, 0 ) )
5942	assertTrue ( entity. getName ( ). equals ( "" ) )
5943	assertRedirectsToLogin ( )
5944	Assert. assertEquals ( Response. Status. OK. getStatusCode ( ), modifyingResponse. getStatus ( ) )
5945	assertEquals ( "{\\"age\\":12}", gson. toJson ( p ) )
5946	Assert. assertEquals ( "{\\"@odata.context\\":\\"../$metadata#Collection($ref)\\"," + "\\"value\\":[{\\"@odata.id\\":\\"ESAllPrim(32767)\\"}," + "{\\"@odata.id\\":\\"ESAllPrim(-32768)\\"}," + "{\\"@odata.id\\":\\"ESAllPrim(0)\\"},{\\"@odata.id\\":\\"ESAllPrim(10)\\"}]}", resultString )
5947	assertEquals ( NAME_NODE, action. getNameNode ( ) )
5948	Assert. assertNotNull ( "AdaptiveScalarEncoder class is null", ase )
5949	assertEquals ( 5., start. getTheoreticalEarliestOperationStartTime ( ), 0.01 )
5950	assertEquals ( "Invalid task result: " + task. getResult ( ), "Success", task. getResult ( ) )
5951	assertFalse ( AuthzResolver. authorizedInternal ( new PerunSessionImpl ( perun, new PerunPrincipal ( "pepa", ExtSourcesManager. EXTSOURCE_NAME_INTERNAL, ExtSourcesManager. EXTSOURCE_INTERNAL ), new PerunClient ( ) ), "default_policy" ) )
5952	assertions. startsWith ( sequence )
5953	assertEquals ( exp, area, 1e-10 )
5954	assertEquals ( value, propertiesConfigurationProperties. get ( null ) )
5955	Assert. assertEquals ( "56138725000103", infoConsultaCadastro. getCnpj ( ) )
5956	Assert. assertNull ( subSchema )
5957	assertEquals ( config. getStorageIndexNamePrefix ( ) + "-" + today. format ( new Date ( ) ), name )
5958	assertEquals ( "result is expected", Result. NO_SUCH_METHOD, result )
5959	Assert. assertEquals ( "RESPONSE", response )
5960	assertEquals ( " ", pluginParameters. indentCharacters )
5961	assertThat ( target. equals ( flow ), is ( true ) )
5962	assertTrue ( GitFileUtils. exists ( file, commit, repo ) )
5963	assertXMLEqual ( "Invalid source", "<child/>", result. toString ( ) )
5964	assertNotNull ( d )
5965	assertThat ( gitToolConfigurator. describe ( nullGitTool, NULL_CONFIGURATION_CONTEXT ), is ( new Mapping ( ) ) )
5966	assertTrue ( sn. equals ( other ) )
5967	assertEquals ( fixture, this. libshout. getDumpfile ( ) )
5968	Assert. assertEquals ( build. getBestStrategy ( ), StringEncodingStrategy. ALWAYS_SAME_VALUE )
5969	assertHelpLines ( "Option                                                     Description                                          ", "------                                                     -----------                                          ", "-t, --cutoff, --threshold <Double: a positive decimal      a threshold value beyond which a certain level of the", "  number that will represent the threshold that has been     application should cease to write logs             ", "  outlined>                                                                                                     ", EMPTY )
5970	assertThat ( ff. andThen ( i -> i + 1 ). apply ( "", "", "", "", "", "" ), is ( 2 ) )
5971	assertThat ( DockerHost. defaultCertPath ( ), equalTo ( "foobar/.docker" ) )
5972	assertEquals ( 1, tracer. finishedSpans ( ). size ( ) )
5973	Assert. assertTrue ( Integer. MIN_VALUE == _c. convert ( "-2147483648" ) )
5974	assertEquals ( expected, toString ( tx ) )
5975	assertNotNull ( result )
5976	files. assertIsEmptyFile ( INFO, actual )
5977	assertEquals ( actualPage, expectedPage, "Service returned incorrect data for one page of topics" )
5978	assertTrue ( map. entrySet ( ). size ( ) > 0 )
5979	assertEquals ( "select * from (" + "   select survey1.ID, row_number() over (order by current_timestamp asc) as rn from SURVEY survey1) a " + "where rn >? and rn <=? order by rn", query. toString ( ) )
5980	assertEquals ( FleetSize. FINITE, vrp. getFleetSize ( ) )
5981	assertEquals ( URL + "?param+1=value1&param+2=value2", uri. toString ( ) )
5982	assertIdentical ( "/xref-repaired.obo", ontology )
5983	assertThat ( Version. findHighestMatchingBuildNumber ( version, versionSet ), equalTo ( 10 ) )
5984	assertResultSet ( res )
5985	assertScoreAndParse ( content, "oracle_test_statements_4", 48 )
5986	assertEquals ( example, decoded )
5987	assertThat ( taskService. createTaskQuery ( ). taskAssignee ( "aUser" ). count ( ), is ( 1L ) )
5988	assertEquals ( "Mr T", value )
5989	assertEquals ( 0, breakers. size ( ) )
5990	Assert. assertEquals ( ste. toString ( ), frame. toString ( ) )
5991	assertXmlVersionInProlog ( bytesWithBom, "1.1", "<?xml version='1.1'>" )
5992	assertFalse ( srcGeoCoding. isCrossingMeridianAt180 ( ) )
5993	assertTrue ( videos. contains ( video ) )
5994	assertCorrectBinaryString ( data, expected )
5995	assertEquals ( qn, qnExpected )
5996	assertThat ( ids, contains ( "Observation/O1" ) )
5997	assertEquals ( g1, g2 )
5998	assertEquals ( "Mismatched result", expected, actual )
5999	Assert. assertEquals ( 200, response. getStatus ( ). getStatusCode ( ) )
6000	assertNull ( twinMetadata. getLastUpdatedVersion ( ) )
6001	assertTrue ( mappedNames. isEmpty ( ) )
6002	assertFalse ( JobUtils. isJobExecutionStoppable ( jobExecution ) )
6003	assertScoreCompareToOrder ( comparator, buildNode ( 2, "-110", 5, 51 ), buildNode ( 2, "-110", 5, 50 ), buildNode ( 2, "-90", 7, 41 ), buildNode ( 2, "-90", 5, 40 ), buildNode ( 1, "-110", 7, 61 ), buildNode ( 1, "-110", 5, 60 ), buildNode ( 1, "-90", 7, 71 ), buildNode ( 1, "-90", 5, 70 ), buildNode ( 1, "-85", 5, 60 ), buildNode ( 1, "-1init/-80", 5, 60 ) )
6004	assertEquals ( body. toString ( ), "error test error" )
6005	assertEquals ( "test-value", clientWrapper. get ( "key1", transcoder ) )
6006	assertSame ( resource, actualResource )
6007	assertEquals ( UriComponentsBuilder. fromHttpUrl ( "http://www.indexer.com/api?t=book&extended=1&q=title&title=title&author=author" ). build ( ), testee. buildSearchUrl ( searchRequest, null, null ). build ( ) )
6008	assertEquals ( number, Utils. stringToInt ( val ) )
6009	assertEquals ( 2 + 3 * 256 + 4 * 256 * 256, fromLittleEndian ( b ) )
6010	assertEquals ( expResult, result )
6011	assertTrue ( "Models not isomorphic", isomorphic ( m0, m ) )
6012	Assert. notNull ( canalInstance )
6013	Assert. assertNotNull ( request. getHeaders ( ) )
6014	Assert. assertNotNull ( str )
6015	assertProposalDoesNotExist ( proposals, "Pick out selected part of String" )
6016	assertEquals ( new String ( loadedEntity. getSomeBytes ( ), "UTF-8" ), test )
6017	assertThat ( underTest. equals ( new Object ( ) ), is ( false ) )
6018	assertThat ( "system-input-def-3.xml", systemInputDef, matches ( new SystemInputDefMatcher ( expected ) ) )
6019	assertThat ( tokens, equalTo ( Arrays. < Object > asList ( "a", 1.0, 2.3, "b" ) ) )
6020	assertEquals ( Arrays. asList ( expected ), output )
6021	assertEquals ( actualLogMessage, expectedLogMessage )
6022	Assert. assertTrue ( list. size ( ) == 7 )
6023	assertTrue ( Arrays. equals ( expected_output, actual_output ) )
6024	assertEquals ( svalues, svalues1 )
6025	Assert. assertEquals ( expected, computed, 0.000000000000001 )
6026	assertEquals ( new BigDecimal ( "0.00" ), min )
6027	Assert. assertEquals ( 50, getRowCount ( ) )
6028	assertTrue ( true )
6029	assertNull ( getTestChargingStationFromRepository ( ) )
6030	assertNotNull ( schema )
6031	assertUrlProtected ( servletUrl )
6032	assertInvocations ( client. getTwoPhaseCommitInvocations ( ) )
6033	Assert. assertTrue ( constVal. valueEquals ( access. get ( ) ) )
6034	Assert. assertEquals ( 6, ( ( Long ) l. get ( 0 ) ). longValue ( ) )
6035	Assert. assertNull ( option )
6036	assertEquals ( source. consumed, result. getChannel ( ). size ( ) )
6037	assertEquals ( expected, actual )
6038	Assert. assertArrayEquals ( centroidExpected, location. getCentroid ( ) )
6039	assertThat ( uris, is ( asList ( new URI ( "http://baseurl/static/rapture/resources/loading-prod.css" ), new URI ( "http://baseurl/static/rapture/resources/baseapp-prod.css" ), new URI ( "http://baseurl/static/rapture/resources/test-1-prod.css" ), new URI ( "http://baseurl/static/rapture/resources/test-2-prod.css" ), new URI ( "http://baseurl/react-style-1-test.css" ), new URI ( "http://baseurl/react-style-2-test.css" ) ) ) )
6040	JsonAssert. assertJsonObjectEquals ( EXPECTED_JSON_RESPONSE, jsonResponse )
6041	assertTrue ( engine instanceof SimpleExecutionEngine )
6042	Assert. assertEquals ( expectedCrossProduct, crossProduct )
6043	Assert. assertTrue ( removedEventFired )
6044	Assert. assertTrue ( links. isEmpty ( ) )
6045	assertEquals ( "testStr", bean. getTestStr ( ) )
6046	assertTrue ( "Run called", flag )
6047	Assert. assertTrue ( "the'startMaintenanceMode' method was not invoked as expected.", invoked )
6048	Assert. assertEquals ( "{\\"duration\\":\\"PT1H2M16.04S\\"}", res. toJSON ( ) )
6049	assertEquals ( brNode, optNodes. get ( ) )
6050	assertThat ( message. getKeyword ( ), is ( Keyword. NEW ) )
6051	assertTrue ( "Expected successful outcome", response. getUnderlying ( ) )
6052	assertNumEquals ( "6.0", highestValue. getValue ( 12 ) )
6053	assertEquals ( set, sameSet )
6054	context. assertTrue ( res. failed ( ) )
6055	assertEquals ( "motherLanguage", child. getAttribute ( mediaTypeAttributeType. getName ( ) ). getValue ( ) )
6056	Assert. assertTrue ( result )
6057	assertTrue ( "Configurable http server mechanism factory should be created", ops. exists ( TEST_SERVER_MECHANISM_FACTORY_ADDRESS ) )
6058	Assert. assertEquals ( task2. getName ( ), item. getName ( ) )
6059	assertEquals ( 0, app. executeApplication ( args ) )
6060	assertThat ( list. size ( ), is ( 1 ) )
6061	assertSame ( "OutputStream is not set correctly.", outputStream, entrancePi. getOutputStream ( ) )
6062	assertEquals ( bd1, bd2 )
6063	assertTrue ( "t value should be null", null == cr. getTag ( "t" ) )
6064	Assert. assertTrue ( searchResults. hasResults ( ) )
6065	assertMockEndpointsSatisfied ( )
6066	assertThat ( families, arrayContaining ( ProcessingFamilyDefinition. NAME ) )
6067	given ( ). param ( "expand", 1 ). when ( ). get ( "resources/" ). then ( ). assertThat ( )
6068	assertThat ( header. getName ( ), is ( "name" ) )
6069	assertFalse ( setWithUpperBound. contains ( "2" ) )
6070	assertEquals ( expected, buchberger )
6071	assertEquals ( "!yv\\n", sWriter. toString ( ) )
6072	assertEquals ( expecteds, actuals )
6073	assertNotNull ( jobs )
6074	assertThat ( gson. fromJson ( gson. toJson ( i ), Interval. class ), is ( i ) )
6075	assertAnnotations ( 1, Temporal. class, new TestEntity < > ( 0, "25th February 2013" ) )
6076	assertNotNull ( resp )
6077	assertThat ( new JSONObject ( actual ), sameJsonAs ( rawSchemaJson ) )
6078	Assert. assertEquals ( FastMath. toRadians ( x ), value. toRadians ( ). getReal ( ), epsilon )
6079	assertEquals ( "foo", testClass4StringFieldAccessor. getValue ( testClass4 ) )
6080	assertTrue ( testSavePropertiesFile. exists ( ) )
6081	assertEquals ( String. format ( "replName %s, #{paragraphTitle}, #{paragraphId}, #{paragraphText},, " + "%s, %s, #{authenticationInfo}", noteId, noteId, user ), actual )
6082	Assert. assertTrue ( "Adler32 mismatch between written and read", processListener. checkAdlers ( ) )
6083	assertEquals ( 10, classUnderTest. getUpdateAction ( ) )
6084	assertContainsIgnoreWhitespace ( pomxml, new POMContentHandler ( ). toString ( model, pomxml ) )
6085	Assert. assertNotNull ( lp )
6086	assertThat ( result, equalTo ( "withIsmyField" ) )
6087	assertEquals ( oracle. getLastRunningMode ( ), guess )
6088	assertTrue ( "Output: '" + cli. getOutput ( ) + "'", cli. getOutput ( ). trim ( ). endsWith ( CliExtCommandHandler. NAME + "--help" ) )
6089	assertSuggestions ( suggestions, "foo", "foob", "foobar" )
6090	assertNotNull ( response. getResponse ( ). getEntities ( ) )
6091	assertEquals ( "noVehicle", v. getId ( ) )
6092	assertEquals ( "DELETE FROM " + wrappedNoShardTableName + " WHERE template AND template AND template", test. build ( ) )
6093	Assert. assertNotNull ( factory. create ( ) )
6094	assertThat ( output, stringContainsInOrder ( "   <text>", "      <div", "         <pre>line1\\nline2\\nline3  <b>BOLD</b></pre>" ) )
6095	assertEquals ( "342\\n", found )
6096	assertThat ( new SpringFacesModelHolder ( m ). getModel ( ). get ( "k" ), is ( equalTo ( ( Object ) "v" ) ) )
6097	assertEquals ( "Should only be one upgrade setep.", 3, path. size ( ) )
6098	assertThat ( actual, is ( "localhost" ) )
6099	assertEquals ( HttpStatusCode. BAD_REQUEST_400, response. getStatus ( ) )
6100	testRunner. assertAllFlowFilesTransferred ( PutParquet. REL_FAILURE, 1 )
6101	assertions. doesNotHaveDuplicates ( )
6102	assertEquals ( "99\\n", found )
6103	assertTrue ( Arrays. equals ( recreated, secret ) )
6104	assertEquals ( buf. toString ( ), "{\\"a\\":\\"aa\\"}" )
6105	assertThat ( element. getText ( ), is ( "still 0123456789" ) )
6106	assertEquals ( vNum, stringsNum )
6107	assertEquals ( BPResultType. PASS, result. getResultType ( ) )
6108	assertEquals ( 3, algo. getSearchStrategyManager ( ). getStrategies ( ). size ( ) )
6109	assertThat ( result, is ( "Slicer" ) )
6110	assertEquals ( 1, query. field ( "lazyPic" ). equal ( p ). asList ( ). size ( ) )
6111	assertEquals ( expected, uri. toString ( ) )
6112	assertEquals ( "name", properties. get ( 0 ). getName ( ) )
6113	assertSame ( dg1, dg2 )
6114	assertEquals ( input. limit ( ), input. position ( ) )
6115	assertFalse ( found )
6116	Assert. assertEquals ( "", dMsg )
6117	assertProcessEnded ( pi. getId ( ) )
6118	assertTrue (! validate )
6119	assertNotNull ( "Condition builder is not built", builder )
6120	assertEquals ( FeatureState. DISABLED, state )
6121	assertValidationFailures ( deriver, config )
6122	assertTrue (! failed. get ( ) )
6123	assertErrorResponse ( response, ErrorResponse. ErrorType. INVALID_INPUT, "INVALID_ACCOUNT_ID" )
6124	assertArrayEquals ( serialised, message )
6125	assertEquals ( NUMADD, table. size ( ) )
6126	assertTrue ( entity. getId ( ) > 0L && entity. getSex ( ) == 'M' )
6127	assertEquals ( "xmlEntity() content-type-header=[application/xml] accepts-header=[*/*]", actual )
6128	assertArrayEquals ( expectedSorted, data )
6129	assertNotNull ( logger )
6130	assertThat ( defn. equals ( defn2 ), is ( false ) )
6131	assertTrue ( "UID1 role should be MASTER", store. getDomainRoles ( UID1 ). get ( 0 ). getRole ( ). equals ( Role. MASTER ) )
6132	assertValid ( result )
6133	assertNotNull ( result )
6134	assertEquals ( "NoUser", expected, actual )
6135	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm", result ) )
6136	assertFalse ( "Not all sub tree locks were removed properly", TestSubtreeLock. subTreeLocksExists ( ) )
6137	assertTrue ( expectedDesc. containsAll ( list ) )
6138	assertThat ( subjectOf ( axiom ), isOptionalOf ( entity ) )
6139	assertFalse ( sut. isTokenValid ( "/rest/api/1.0/projects/TEST/repos", "testuser", providedToken ) )
6140	assertEquals ( "val3", value )
6141	assertEquals ( "zxy", record. toString ( ) )
6142	assertionHelper. assertIrodsFileOrCollectionExists ( targetIrodsFile, accessObjectFactory, irodsAccount )
6143	assertNotNull ( FaxMedia. fetcher ( "FXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "MEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
6144	Assert. assertEquals ( 1, CalendarModelImpl. getAllAppointments ( reservations ). size ( ) )
6145	assertEquals ( "No errors should be registered", 0, errors. getErrorCount ( ) )
6146	assertTrue ( pageXml. contains ( "foo bar" ) )
6147	assertThat ( value, is ( "value1" ) )
6148	assertEquals ( StatusCode. NAMESPACE_NOT_FOUND, response. getCode ( ) )
6149	assertFailureLogPresent ( pi, "failingTask" )
6150	assertEquals ( Collections. singletonList ( 2l ), context. performQuery ( query ) )
6151	assertEquals ( null, min )
6152	assertTrue ( Objects. equals ( city, getDocumentDataAsCity ( docRef ) ) )
6153	Assert. assertEquals ( "(hgvs_variant (nt_single_allele_var (nt_single_allele_multi_change_var (reference NM_000109.3 :) c. (nt_multi_change_allele [ (nt_multi_change_allele_inner (nt_change (nt_change_inner (nt_change_substitution (nt_point_location (nt_base_location (nt_number 123))) A > C))) (nt_var_sep /) (nt_change (nt_change_inner (nt_change_substitution (nt_point_location (nt_base_location (nt_number 124))) C > T)))) ]))))", hgvs_variant. toStringTree ( parser ) )
6154	assertNull ( polygonSymbolizer. getFill ( ) )
6155	assertThat ( getPodSpec ( jobSpec ). getReadinessGates ( ), nullValue ( ) )
6156	assertThat ( result. getPayload ( ), is ( not ( instanceOf ( ExceptionPayload. class ) ) ) )
6157	assertEquals ( "1,2", eval ( c, "test(1,2)" ) )
6158	Assert. assertEquals ( 0, proposals. size ( ) )
6159	assertEquals ( "Mismatched data", expected, res )
6160	files. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE_PATTERN )
6161	assertArrayEquals ( shapeAssertion, get. shape ( ) )
6162	Assert. assertEquals ( 400, index )
6163	assertEquals ( 1, message. getMessageId ( ) )
6164	assertEquals ( "docx", da. getDocType ( ) )
6165	assertMatches ( expr. matcher ( "/a/b/c/d/e/@something" ), "/a/b/c", "/x/y" )
6166	assertEquals ( r1, r2 )
6167	assertEquals ( ( byte ) 8, ( byte ) result. getByteWrapperValue ( ) )
6168	assertEquals ( result, targetPermission )
6169	assertEquals ( allAlarms. size ( ), 1 )
6170	assertEquals ( 16, xreader. findIPStart ( packet ) )
6171	assertEquals ( reference, andPredicate. asCNF ( ) )
6172	assertEquals ( Integer. valueOf ( 67 ), resultMap. get ( "Age" ) )
6173	Assert. assertEquals ( msg, result )
6174	assertEquals ( savedModel. getAuthor ( ), "newauthor" )
6175	assertEquals ( this. serviceRegistration, registerSingletonService )
6176	assertSame ( hello. getIterationStrategyStack ( ). get ( 0 ), uriTools. resolveUri ( HELLO_URI. resolve ( "iterationstrategy/0/" ), wfBundle ) )
6177	assertEquals ( 2, result. size ( ) )
6178	assertEquals ( setPin == checkPin, BytesHelper. getPin ( ( int ) Math. pow ( 2, setPin ), checkPin ) )
6179	assertEquals ( Sets. newHashSet ( "server=server1->db=jranalyst1", "server=server1->functions" ), backend. getPrivileges ( Sets. newHashSet ( "manager" ), new ActiveRoleSet ( Sets. newHashSet ( "junior_analyst_role", "functions" ) ) ) )
6180	Assert. assertTrue ( cp. size ( ) == 2 )
6181	assertEquals ( cls, obj. getClass ( ) )
6182	assertNull ( errMsgList )
6183	assertThat ( editor. getValue ( ), is ( ( Object ) Credential. builder ( ). userName ( "user" ). setPassword ( "password". toCharArray ( ) ). database ( "db" ). build ( ) ) )
6184	assertThat ( result, Matchers. equalTo ( "test1=blah1&test2=blah2" ) )
6185	assertEquals ( 3.14159, result, 0.000001 )
6186	assertEquals ( 7L, impl. getNanoTime ( ). size ( ) )
6187	assertIdentityNotExist ( securityRealm, evidence )
6188	assertTrue ( destinationJar. exists ( ) )
6189	assertEquals ( serviceManager. getAllServiceTypes ( subject, pc ), pgList )
6190	assertThat ( rendering, is ( "4th September 2011" ) )
6191	assertEquals ( 2, users. size ( ) )
6192	assertTrue ( out. toString ( ). indexOf ( "a < b" )!= - 1 )
6193	assertEquals ( "Expected 2 results!", 2, n )
6194	assertEquals ( "with recursive sub (ID, FIRSTNAME, SUPERIOR_ID) as ((select EMPLOYEE.ID, EMPLOYEE.FIRSTNAME, EMPLOYEE.SUPERIOR_ID\\n" + "from EMPLOYEE EMPLOYEE\\n" + "where EMPLOYEE.FIRSTNAME =?)\\n" + "union all\\n" + "(select EMPLOYEE.ID, EMPLOYEE.FIRSTNAME, EMPLOYEE.SUPERIOR_ID\\n" + "from EMPLOYEE EMPLOYEE, sub\\n" + "where EMPLOYEE.SUPERIOR_ID = sub.ID))\\n" + "select *\\n" + "from sub", serializer. toString ( ) )
6195	assertEquals ( expected, stripped )
6196	this. context. assertIsSatisfied ( )
6197	Assert. fail ( "API BROKEN HERE" )
6198	Assert. assertTrue ( "Runtime folder should exist while test runs", runtimeFolder. exists ( ) )
6199	assertThat ( date, is ( PlainDate. of ( 2012, 11, 21 ) ) )
6200	Assert. assertTrue ( exception )
6201	assertEquals ( 0, ( int ) tree. entries ( ). count ( ). toBlocking ( ). single ( ) )
6202	assertEquals ( 1, dsl. size ( ) )
6203	assertTrue ( result. getStatus ( ) == 500 )
6204	assertFalse ( strategy. shouldRetry ( request, env ) )
6205	assertTrue ( infoValidator. validate ( info ) )
6206	assertThat ( target. getMatch ( ), is ( match ) )
6207	assertThat ( "Count of customer", res, is ( 0 ) )
6208	assertFalse ( store. containsSession ( address ) )
6209	assertFalse ( capabilities. isOperationSupported ( DescribeLayer ) )
6210	assertEquals ( 50, symbols. size ( ) )
6211	assertFalse ( "Exception occurred on row reselection.", logContainsText ( "Exception occurred, java.lang.IllegalStateException: No item id for key 101 found." ) )
6212	assertEquals ( "-23", sb. toString ( ) )
6213	assertNotNull ( configurer. newLink ( ) )
6214	assertEquals ( new ArrayList < > ( ), validationIssues )
6215	assertTrue ( pb. propertyCount ( ) == 0 )
6216	Assert. assertTrue ( errors. hasFieldErrors ( "frequency" ) )
6217	assertTrue ( client. hasMobile ( ) )
6218	assertPaths ( paths, "s,t", "s,t" )
6219	Assert. assertNotNull ( content )
6220	assertNotEquals ( "Mocked method cannot have the same value", mock. finalMethod ( ), concrete. finalMethod ( ) )
6221	assertThat ( driver. findElement ( By. cssSelector ( ".date-and-time" ) ). isDisplayed ( ), is ( true ) )
6222	assertThat ( target. matchExactly ( match ), is ( false ) )
6223	assertTrue ( s2. contains ( "<group>b</group><name>a</name>" ) )
6224	assertEquals ( "reason (http status: 400)", result. getMessage ( ) )
6225	assertEquals ( TestEnum. A, settings. getEnumValue ( "key", TestEnum. B ) )
6226	assertTrue ( cut. getLinks ( ). isEmpty ( ) )
6227	assertEquals ( "my/branch", result. get ( ) )
6228	assertEquals ( 1L, analyser. getCommands ( ). values ( ). iterator ( ). next ( ). getCommand ( 0 ). getAllStatmts ( ). stream ( ). filter ( stat -> stat. getPosition ( ). getLine ( ) == 23 ). count ( ) )
6229	assertEquals ( expected, actual )
6230	assertNotNull ( childCert )
6231	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoItemImpostoImportacao ( ). toString ( ) )
6232	Assert. assertFalse ( op [ 0 ]. isCompleted ( ) )
6233	Assert. assertNull ( "Return value is not empty", o )
6234	assertThat ( currentSessionManager. getMeasurementStreams ( ). isEmpty ( ), equalTo ( true ) )
6235	Assert. assertEquals ( "bar", resolved )
6236	assertFalse ( lockAcquired )
6237	Assert. fail ( "Test should fail, user shouldn't be allowed to invoke that method" )
6238	assertTrue ( tctf. isReady ( mock ( CyColumn. class ), mock ( Object. class ) ) )
6239	assertFalse ( timeLine. isValid ( intervalEnd. minusDays ( 1 ) ) )
6240	assertEquals ( 1, ( int ) access. readFrom ( "stoppedCount" ) )
6241	assertThat ( actual, is ( expected ) )
6242	Assert. assertEquals ( "Hello Kermit", result )
6243	assertThat ( action, is ( "action" ) )
6244	assertEquals ( "arr -> {" + CRLF + "    synchronized (a)" + CRLF + "    {" + CRLF + "        a.entrySet().retainAll(arr.entrySet());" + CRLF + "    }" + CRLF + "}" + CRLF, CodeModelTestsHelper. toString ( aLambda ) )
6245	assertEquals ( Status. BAD_REQUEST. getStatusCode ( ), response. getStatus ( ) )
6246	Assert. assertEquals ( "Expected warning 'WFLYUT0101' not found.", 1, resultWarningsCount - initWarningsCount )
6247	assertThat ( datastore. getCount ( ApplicationPreferences. class ), is ( 1L ) )
6248	assertTrue ( accept )
6249	assertEquals ( 404, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
6250	assertFlatResult ( result )
6251	assertNotNull ( entity. getId ( ) )
6252	utils. assertStatus ( "/stacks/" + id, HttpStatus. OK )
6253	assertNotNull ( createdPost )
6254	runner. assertValid ( )
6255	Assert. assertEquals ( "11mzXHR8rZTgfE35EqfGhiShiIwQfLCAziFDXVgs3EjLSPkZkCvfGNLMEf5y", endereco. getNumero ( ) )
6256	assertThat ( buf. toString ( ), is ( equalTo ( "// When\\r\\n" ) ) )
6257	Assert. fail ( "Failed to catch unsupported comparator names" )
6258	assertTrue ( rootNode. isAuthenticationEnabled ( ) )
6259	assertEquals ( 2.0, WeightedLevenshtein. distance ( "titanic 1", "titanic 2", e ) )
6260	Assert. assertEquals ( "world!", new String ( err. toByteArray ( ) ) )
6261	assertEquals ( "", converter. getAsString ( facesContext, new UIPanel ( ), null ) )
6262	Assert. assertEquals ( expected, actual )
6263	assertTrue ( cont1 == 10 )
6264	assertEquals ( asList ( foo1, foo2, foo3 ), results )
6265	assertEquals ( initialVersion, ref. version )
6266	assertEquals ( "PONG " + "AutomationServiceV1", result )
6267	assertFalse ( v. equals ( new String ( "alpha.123" ) ) )
6268	assertEquals ( "{\\n" + "  \\"pathInfo\\" : null,\\n" + "  \\"queryString\\" : null,\\n" + "  \\"headers\\" : {\\n" + "    \\"User-Agent\\" : \\"XXXX\\",\\n" + "    \\"Connection\\" : \\"close\\",\\n" + "    \\"Cookie\\" : \\"$Version=\\\\\\"1\\\\\\"; foo=\\\\\\"bar\\\\\\";$Path=\\\\\\"/\\\\\\"\\",\\n" + "    \\"Host\\" : \\"localhost:xxxx\\",\\n" + "    \\"Accept-Encoding\\" : \\"gzip\\",\\n" + "    \\"Accept\\" : \\"text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\\"\\n" + "  },\\n" + "  \\"parameters\\" : { },\\n" + "  \\"cookies\\" : [\\n" + "    {\\n" + "      \\"name\\" : \\"foo\\",\\n" + "
6269	assertSameEnumeration ( "BreadthFirstModel", coreEnum, xEnum )
6270	Assert. assertTrue ( caughtNullMutation & caughtNullEntry )
6271	assertSqlCanBeParsedAndDeparsed ( stmt )
6272	Assert. assertEquals ( PaginationHelper. DEFAULT_PAGE_LIMIT, limit )
6273	assertEquals ( attributeName, wadlAttributeName. getLocalName ( ) )
6274	assertEquals ( row, null )
6275	assertTrue ( gfs. getStatusProvider ( ). isDirty ( ) )
6276	Assert. assertEquals ( "<p><a href=\\"https://google.com\\" target=\\"_blank\\" rel=\\"noopener\\">Target blank link</a></p>", text. asHtml ( linkResolver ) )
6277	Assert. assertTrue ( json. getString ( "status" ). equals ( "204.0" ) )
6278	assertEquals ( TERM_FACTORY. getConstantLiteral ( "2016-12-02 15:57:02.03", XSD. DATETIMESTAMP ), translation )
6279	assertEquals ( "Item Q42", withLabel. findLabel ( "fr" ) )
6280	assertThat ( result. fullName ( ), is ( "boolean" ) )
6281	assertThat ( appl, is ( JavaSignatureComparator. MATCH_BOXING ) )
6282	Assert. assertEquals ( 50L, tuplesPerWindow )
6283	assertThat ( throttler. throttledUntil ( new Object ( ), request ), equalTo ( Instant. MAX ) )
6284	assertNotNull ( result )
6285	assertThat ( exitStatus. exitStatus ( ), is ( equalTo ( ( byte ) 0x0 ) ) )
6286	assertThat ( next. join ( ), is ( VALUE ) )
6287	assertMockEndpointsSatisfied ( )
6288	assertEquals ( "http://a.b/abc", servletURI )
6289	assertEquals ( String. format ( "Create table new_table with 1 column and no indexes" + "%n    - A non-null column called column_one [STRING(10)] from foo from Wherever where bar is 1" ), HumanReadableStatementHelper. generateAddTableFromString ( newTable, select ( field ( "foo" ) ). from ( "Wherever" ). where ( field ( "bar" ). eq ( 1 ) ) ) )
6290	assertResultsMatch ( select ( windowFunction ( count ( ) ). build ( ). as ( "totalCount" ), windowFunction ( sum ( field ( "aggregationValue" ) ) ). build ( ). as ( "totalSum" ) ). from ( tableRef ( "WindowFunctionTable" ) ), "7-30.3", "7-30.3", "7-30.3", "7-30.3", "7-30.3", "7-30.3", "7-30.3" )
6291	assertNotNull ( "�峰��娴�绋�瀹�涔�svg澶辫触", svg )
6292	assertEquals ( externalLink, delegatedExternalLink )
6293	Assert. assertEquals ( score, smsd1. getEnergyScore ( 0 ) )
6294	Assert. isTrue ( 13388000000L == time )
6295	assertEquals ( val. awaitAndGet ( ), "from instance is enclosed" )
6296	assertEquals ( "the status of message replied must be 'ok'. ", "ok", reply. body ( ). getString ( "status" ) )
6297	assertEquals ( 2, inMemoryResultAccumulator. getAggregationResultCount ( ) )
6298	assertThat ( properties, not ( hasItem ( hasProperty ( "name", equalTo ( "age" ) ) ) ) )
6299	assertTrue ( baseTestFailed )
6300	assertThat ( returnValue, equalTo ( "private" ) )
6301	assertThat ( providerList. size ( ), is ( 5 ) )
6302	assertIdentical ( "/simple_elk.owl", reasoned )
6303	assertEquals ( new HashSet < String > ( ), all )
6304	assertThat ( sut. getGMPath ( ), is ( expectedPath ) )
6305	assertThat ( coll. withComplement ( window ), is ( expected ) )
6306	assertQuery ( em, 1, query )
6307	assertTrue ( ac. removeAll ( new ArrayList < String > ( "0", "1", "2" ) ) )
6308	assertEquals ( 256, c. toIndex ( ti ). intValue ( ) )
6309	assertNotNull ( result )
6310	assertEquals ( 0x02, acia. read ( CMD_STAT_REG, true ) & 0x02 )
6311	Assert. assertEquals ( - 1, timeZoneDefinition. compare ( null, second ) )
6312	assertNotNull ( Service. reader ( ). read ( ) )
6313	Assert. assertTrue ( ( ( BasicDecider ) instance ). compareWorkflowRunFiles ( metadata. getWorkflowRun ( workflowRunAcc ). getInputFileAccessions ( ), filesToRun ) == BasicDecider. FILE_STATUS. DISJOINT_SETS )
6314	assertEquals ( false, mockResult. included ( "canEdit" ) )
6315	assertEquals ( m1, m2 )
6316	assertTrue ( ctx1. getScore ( ) < ctx2. getScore ( ) )
6317	assertEquals ( valueIn, valueOut, 0.0001 )
6318	Assert. assertEquals ( opsService. getNameSvrList ( ), testChangeNameSvrAddr )
6319	Assert. assertEquals ( localDate. toString ( ddMMMyyyy, Locale. ENGLISH ), "23-Aug-2013" )
6320	Assert. assertTrue ( ConsoleAdapter. getInstance ( ) instanceof TestConsoleAdapter )
6321	assertEquals ( expecting, found )
6322	Assert. assertEquals ( "CosmicRecord [chrom=1, pos=1230, id=COSM1231, ref=A, alt=[C], cnt=1, snp=false]", record. toString ( ) )
6323	assertEquals ( expectedValue. trim ( ), entityExecutor. getEntities ( ). get ( 0 ). getContent ( ) )
6324	assertEquals ( 1, allPatients. size ( ). intValue ( ) )
6325	assertEquals ( 4, count )
6326	assertEquals ( "Greeter", serviceInfo. getInterface ( ). getName ( ). getLocalPart ( ) )
6327	Assert. assertEquals ( ValidationType. BANK_ACCOUNT_TYPE, ctxUser. execute ( input ) )
6328	assertTotal ( list )
6329	assertTrue ( verifier. verify ( signature ) )
6330	Assert. assertTrue ( count == 0 )
6331	assertEquals ( expResult, stringBuilder. toString ( ) )
6332	Assert. assertFalse ( "Failed to handle bad pattern", grok. configure ( props ) )
6333	assertEquals ( query, result )
6334	assertTrue ( "Date entity validation failed", schema. validate ( dateString ) )
6335	assertThat ( obtainedLock, is ( true ) )
6336	assertNotNull ( immunosuppressionTreatment. getId ( ) )
6337	assertEquals ( expected. toString ( ), PercentDecoder. decodeUnreserved ( encoded. toString ( ) ) )
6338	assertEquals ( expected, actual )
6339	Assert. assertEquals ( 201, responseExpectations. get ( STATUS ) )
6340	assertNotNull ( testObj. getVendorOptionInfo ( ) )
6341	Assert. assertEquals ( "Processing of the HL7 message did not result in the new proposal being added to the model", initialOccurrences + 1, Context. getConceptService ( ). getConceptProposals ( "PELVIC MASS" ). size ( ) )
6342	assertTrue ( stmt instanceof CreateTableNode )
6343	assertNotNull ( val )
6344	Assert. assertEquals ( quantidadeItemEfetivamenteExportado, exportacaoIndireta. getQuantidadeItemEfetivamenteExportado ( ) )
6345	Assert. assertEquals ( "Hello valA valB", result. getBody ( ) )
6346	assertArrayEquals ( "Byte arrays are not the same.", bOut. toByteArray ( ), finalOut. toByteArray ( ) )
6347	assertNotNull ( parseClass ( FakeProduct. class ) )
6348	assertNotNull ( itemId )
6349	assertEquals ( 6. * 3600. + 6. * 60. + 12. * 3600. + 12., sec, 0.01 )
6350	Assert. assertEquals ( Integer. class, clazz )
6351	Assert. assertTrue ( "Unexpected returned set", ret. containsAll ( referenceList ) && ret. size ( ) == referenceList. size ( ) )
6352	assertNotNull ( session. from ( $ ( var ) ). where ( $ ( var. getText ( ) ). containsIgnoreCase ( "a bcd e" ) ). uniqueResult ( $ ( var ) ) )
6353	assertNotNull ( fixture )
6354	assertUnsuccessfulConversion ( res )
6355	assertFalse ( controller. isConnected ( ) )
6356	assertEquals ( object, result )
6357	assertEquals ( "fa 3 hores", t. format ( new Date ( 0 ) ) )
6358	Assert. assertEquals ( "{\\"b\\":\\"v3\\",\\"a\\":{\\"a1\\":{\\"a11\\":\\"v1\\"},\\"a2\\":\\"v2\\"}}", global. toString ( ) )
6359	assertThat ( attributeReference. getObjectId ( ), is ( object. getObjectId ( ) ) )
6360	assertThat ( output. readValuesToList ( ), equalTo ( expectedValues ) )
6361	mock. assertIsSatisfied ( )
6362	Assert. assertEquals ( expect, sql )
6363	assertTrue ( kbuilder. hasResults ( ResultSeverity. INFO, ResultSeverity. WARNING, ResultSeverity. ERROR ) )
6364	assertTrue ( "processor does not support supported parameter", processor. supportsParameter ( supportedParameter ) )
6365	Assert. assertEquals ( 3, count. get ( ) )
6366	assertEquals ( properties, injectedProperties )
6367	assertArrayEquals ( expected, jsonified )
6368	assertEquals ( jsonValue, result )
6369	assertNull ( response. getRedirectedUrl ( ) )
6370	Assert. assertNotNull ( "staticNonvoidNoParams should have returned a value", returned )
6371	Assert. assertEquals ( DEFAULT_USERNAME, callIntermediateWhoAmI ( ) )
6372	assertThat ( getDomain ( ), hasStatus ( "FieldValueNotFound", "Test this failure" ) )
6373	assertThat ( userManager. getUserList ( ), not ( hasItem ( "test" ) ) )
6374	context. assertAuthzException ( statement, "CREATE DATABASE " + dbName )
6375	assertEquals ( "\\"The Secret Club\\"", graph. getTriples ( null, knows, null ). filter ( t ->! graph. contains ( ( BlankNodeOrIRI ) t. getObject ( ), knows, t. getSubject ( ) ) ). map ( knowsTriple -> graph. getTriples ( ( BlankNodeOrIRI ) knowsTriple. getObject ( ), member, null ). filter ( memberTriple -> graph. contains ( knowsTriple. getSubject ( ), member, memberTriple. getObject ( ) ) ). findFirst ( ). get ( ). getObject ( ) ). map ( org -> graph. getTriples ( ( BlankNodeOrIRI ) org, name, null ). findFirst ( ). get ( ). getObject ( ). ntriplesString ( ) ). findFirst ( ). get ( ) )
6376	assertEquals ( "<p>Test</p>", cleanHtml )
6377	assertEquals ( rc. request ( ). host ( ), host )
6378	assertEquals ( Integer. valueOf ( 200 ), restResponse. getStatusCode ( ) )
6379	assertNotNull ( "FlipConditionEvaluator was null after invoking flipAnnotationProcessor.getFlipConditionEvaluator", conditionEvaluator )
6380	assertFalse ( impl. hasElapsed ( ) )
6381	assertSame ( TEST_ROUTE, extractedValue )
6382	Assert. assertEquals ( testString, decodedUTF8 )
6383	assertTrue ( messageLatch. await ( 3, TimeUnit. SECONDS ) )
6384	assertNotNull ( ctx )
6385	assertThat ( dialect. addOptimizerHints ( sql, hints ). toString ( ), is ( "SELECT /* SQL_ID */ /*+ INDEX (PUBLIC.TEST_1 test_ix) USE_NL */" + System. lineSeparator ( ) + " * FROM PUBLIC.TEST_1" ) )
6386	assertEquals ( "[-1,-1]", pt. toString ( ) )
6387	assertEquals ( array, compressed )
6388	assertTrue ( Arrays. equals ( getPacketData ( "07 00 68 00 00 BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 BB AA 00 00 00 00 00 00 00 00 00 00 00 00 00 00 AA 00 EF CD AB 90 78 56 34 12" ), request. serialize ( ) ) )
6389	assertThat ( generatedHtmlReports. size ( ), is ( 3 ) )
6390	assertTrue ( Arrays. equals ( pktSerialized, pktSerialized1 ) )
6391	Assert. assertTrue ( ldapLogin. doAction ( req, resp ) )
6392	assertTrue ( "Body has no fault", soapBody. hasFault ( ) )
6393	assertEvent ( "org/osgi/framework/ServiceEvent/REGISTERED", FilterUtils. eq ( "service.objectClass", "org.knowhowlab.osgi.testing.it.testbundle.service.Echo" ), 2, TimeUnit. SECONDS )
6394	assertEquals ( "URI is not built correctly", expectedUri, newUri )
6395	assertThat ( options. getRegion ( ), is ( region. getName ( ) ) )
6396	assertNotNull ( kieBase )
6397	Assert. assertEquals ( conn. getResponseCode ( ), HttpURLConnection. HTTP_BAD_REQUEST )
6398	assertNotNull ( ids )
6399	assertFalse ( infoValidator. validate ( info ) )
6400	assertEquals ( "Hunter(2)", screenshotPlugin. parseLevelUpWidget ( DIALOG_SPRITE_TEXT ) )
6401	assertEquals ( "Empty file didnt return EOF -1", - 1, input. read ( ) )
6402	assertUrl ( url, "https", host, port, path )
6403	assertEquals ( array, buffer. array ( ) )
6404	assertEquals ( SyncStatus. SYNCHRONIZED, remoteProject. getRemoteStatus ( ). getSyncStatus ( ) )
6405	assertTrue ( result )
6406	assertEquals ( 2, button. getStatusProperty ( "sensor_value" ). get ( ). getValue ( ) )
6407	assertTrue ( matcher. matches ( mockElement ) )
6408	assertOut ( "/**\\n * @export\\n * @return {number}\\n */\\nfoo.bar.B.prototype.b = function() {\\n  var /** @type {string} */ s = null;\\n  return s.length;\\n}" )
6409	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
6410	assertEquals ( configurator. getIntProperty ( propertyName ), expectedValue )
6411	assertEquals ( "user1,user2", result )
6412	assertEquals ( 1, performImportScript ( csv, false ) )
6413	assertEquals ( "com.querydsl.codegen.query.QPoint", factory. create ( type ). getFullName ( ) )
6414	assertEquals ( "Some String       ", leftTrimmedString )
6415	Assert. assertTrue ( result )
6416	assertEquals ( USER_PRINCIPAL, op. getUserPrincipal ( ) )
6417	assertSqlCanBeParsedAndDeparsed ( stmt )
6418	assertTrue ( exp instanceof ASTCurrentTime )
6419	assertThat ( info. isTeiidSupport ( ), is ( false ) )
6420	assertEquals ( expected, actual )
6421	assertMedianIs ( 3D )
6422	Assert. assertEquals ( 9, DeDupExample. Collector. getResult ( ). getValue ( ). size ( ) )
6423	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Parameter a=\\"b\\" foo=\\"bar\\"/>", elem. toXml ( ) )
6424	assertFalse ( gc. moveToTrash ( path ) )
6425	Assert. assertNull ( "No se ha borrado el documento", getServicioDocumentos ( ). getInfoDocumento ( ID_EXISTENTE ) )
6426	Assert. assertTrue ( "recover filePath exist", recoveryDir. isDirectory ( ) )
6427	assertEquals ( DummyDrawHandler. drawTextToString ( "Das ist \\" dfs ", 10, 20, AlignHorizontal. LEFT, ColorOwn. PINK ), drawHandler. getLastDrawCall ( ) )
6428	assertTrue ( result. isEmpty ( ) )
6429	assertAnnotationCompletions ( "@Value(value=\\"${data.prop2}\\"<*>)", "@Value(value=\\"${else.prop3}\\"<*>)", "@Value(value=\\"${spring.prop1}\\"<*>)" )
6430	assertEquals ( request. getRequestHeaders ( ), headers )
6431	assertEquals ( expected, query. substring ( 0, expected. length ( ) ) )
6432	assertEquals ( "test", echo. echo ( "test" ) )
6433	assertEquals ( expecting, found )
6434	assertMatch ( e, s )
6435	assertEquals ( 15, result )
6436	Assert. assertEquals ( "Hello Kermit", result )
6437	assertTrue ( true )
6438	assertEquals ( "12 啶�啶苦え啶� 啶�啶灌げ啷�", t. format ( new Date ( 0 ) ) )
6439	assertEquals ( Deencapsulation. getField ( deviceRegistrationState, "errorMessage" ), VALID_ERROR_MESSAGE )
6440	assertEquals ( target. field, check. send ( ) )
6441	assertSame ( t. toLocalTime ( ), LocalTime. MIDNIGHT )
6442	Assert. assertEquals ( "*2\\r\\n:1\\r\\n+123\\r\\n", str )
6443	assertTrue ( "Expected a non-empty set of values.", expected. length!= 0 )
6444	Assert. assertTrue ( this. component. setVisibility ( this. entity1, PUBLIC_VISIBILITY ) )
6445	Assert. assertEquals ( "name3", person. getAttribute ( "name3" ). getAttributeType ( ). getName ( ) )
6446	Assert. assertEquals ( 1, creditService. getMessages ( ). size ( ) )
6447	assertEquals ( "UPDATE DATABASECHANGELOG " + "SET MD5SUM = '7:e27bf9c0c2313160ef960a15d44ced47' " + "WHERE ID = N'SYPA: AUTO_START t眉眉p INT -> TEXT, vaartus 0 00 17 * *?' " + "AND AUTHOR ='martin' " + "AND FILENAME = 'db/changelog.xml'", sqls [ 0 ]. toSql ( ) )
6448	assertEquals ( 4, algos. length )
6449	assertExactSqrt ( v )
6450	assertEquals ( response. getStatus ( ), HttpServletResponse. SC_NOT_FOUND )
6451	assertEquals ( "HmacMD5 size", 16, result. length )
6452	assertEquals ( "JWT token", EXPECTED_TOKEN_STRING, token )
6453	Assert. assertEquals ( 33, vm. getLoopVar ( ). longValue ( ) )
6454	assertEquals ( 0, nullFieldProblems. size ( ) )
6455	assertEquals ( bagsInPNRExample, vo. getTotal_bag_count ( ) )
6456	runner. assertNotValid ( )
6457	assertNull ( getFixture ( ). review ( null, master, slave ) )
6458	assertEquals ( 0, proxy. executeStatement ( "statment", 0 ) )
6459	assertEquals ( "CN=testuser_OU=NiFi_Organisation", escapedClientDn )
6460	assertEquals ( result, "not ok" )
6461	assertNotNull ( argumentType )
6462	assertEquals ( "info:My message with 3 parameters : 1, 2, 3", output )
6463	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<break/>", elem. toXml ( ) )
6464	assertEquals ( "Unexpected dashboard link", "https://localhost:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy", KubernetesUtil. constructDashboardLink ( host, null ) )
6465	Assert. assertTrue ( "Expected zero but it was: " + actualValue, actualValue == 0 )
6466	assertThat ( stepListener. getCurrentTestOutcome ( ). getTestSteps ( ). get ( 1 ). getScreenshotCount ( ), is ( 1 ) )
6467	assertTrue ( this. testFourthMapRequestHandlerAdvice. executeLatch. await ( 10, TimeUnit. SECONDS ) )
6468	assertEquals ( "| script | selenium driver fixture |\\n" + "| start browser | firefox | on url | http://example.com |\\n" + "| check | is | getText | on | field | Out* |\\n" + "| stop browser |\\n", result )
6469	assertKernel ( kernel, CIRCLE3, e )
6470	assertEquals ( 18, xreader. findIPStart ( packet ) )
6471	assertXMLEqual ( expected, actual )
6472	assertEquals ( expResult, result )
6473	assertEquals ( "0362210a336ba79c6cab30bf09deaf2f1a749e6f", actual. get ( "/content/test-page/jcr:content" ) )
6474	assertIterationsEqual ( out2, out1 )
6475	assertTrue ( containsMutatedSeededMethod )
6476	assertArrayEquals ( expectedBuffer, buffer )
6477	assertEquals ( 26.9, singleResult. doubleValue ( ), 0.001 )
6478	assertEquals ( "Name test", "item1", irs. getName ( ). toString ( ) )
6479	Assert. assertEquals ( JFishList. wrap ( all ). sum ( "age" ). intValue ( ), total )
6480	assertEquals ( messageContext. getRequest ( ), result )
6481	FunctionTestUtil. assertResult ( codeFunction. invoke ( contextMap ), "{ key1 : \\"value1\\", key2 : { childKey1 : \\"childValue1\\" } }" )
6482	assertNotNull ( countTime )
6483	assertThat ( config. getProvider ( ). getClass ( ), is ( typeCompatibleWith ( SpringProvider. class ) ) )
6484	assertNotNull ( fixture )
6485	assertEquals ( exp, rev )
6486	assertCanMultiTokenizeString ( randomUnicodeOfLength ( LENGTH ), rand. nextInt ( 998 ) + 2, rand. nextInt ( 100000 ), tokenizer )
6487	assertTrue ( rec instanceof RandomRecommender )
6488	Assert. assertTrue ( this. component. setVisibility ( this. entity1, PRIVATE_VISIBILITY ) )
6489	assertNotNull ( Fax. fetcher ( "FXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
6490	assertTrue ( result. indexOf ( "Unknown profile found with tag" ) > 0 )
6491	assertEquals ( AuthStatus. SUCCESS, module. validateRequest ( messageInfo, client, null ) )
6492	assertEquals ( expResult, result )
6493	Assert. assertNotNull ( editor. getValue ( ) )
6494	Assert. assertEquals ( "Hello World!", result. get ( 1, TimeUnit. SECONDS ) )
6495	assertEquals ( expectedHmacSHA256Signature, actualHmacSHA256Signature )
6496	Assert. assertTrue ( result. success ( ) )
6497	Assert. assertTrue ( result. length ( ) > 0 )
6498	assertSame ( channel, new GrpcCleanupRule ( ). register ( channel ) )
6499	assertNotNull ( maintenance )
6500	Assert. assertEquals ( expected, testIndex. findConc ( " 'the' '.*c.' " ) )
6501	assertEquals ( nnf, comp )
6502	assertEquals ( expResult, result )
6503	Assert. assertEquals ( DateTools. cutDate ( gmtDateOneHour ), gmtDate )
6504	assertSame ( theScene, theObject. getGameScene ( ) )
6505	assertNotNull ( paquete )
6506	assertEquals ( "All test cases should pass", 4, runner. getPassed ( ) )
6507	assertTrue ( ta. hasView ( ViewNames. QUESTION_TYPE ) )
6508	assertTrue ( actual )
6509	Assert. assertEquals ( nIterations, genericObjectPool. getDestroyedCount ( ) )
6510	Assert. assertNotNull ( result. getQueryExplanations ( ) )
6511	assertThat ( model2. getMyStringText ( ), is ( "aaa" ) )
6512	assertSame ( d, e. getDomain ( ) )
6513	assertEquals ( after, Elements. slice ( before, 1, 3 ) )
6514	assertCanMultiTokenizeString ( randomUnicodeOfLength ( LENGTH ), rand. nextInt ( 998 ) + 2, rand. nextInt ( 100000 ), tokenizer )
6515	assertEquals ( expectedPlan, actualPlan )
6516	assertEquals ( null, usernameForAuthorEmail )
6517	Assert. assertThat ( result. size ( ), is ( 0 ) )
6518	assertEquals ( expectedTypes, viewTypeDAO. getTypes ( TENANT_ID ) )
6519	Assert. assertEquals ( "SELECT " + fixedColumns + ",`foo.bar` FROM v WHERE _user_ ='me' GROUP BY `foo.bar`", sql )
6520	assertThat ( movie. toUri ( ), equalTo ( rootUri. resolve ( "/movies/1" ) ) )
6521	assertThat ( dispatched, is ( SYNC_OR_ASYNC_PRIVATE_FLOW_MSG + ".main1@" + ASYNC_MAIN_FLOW_THREAD_NAME + "." + SYNC_OR_ASYNC_PRIVATE_FLOW_NAME + "@" + SYNC_OR_ASYNC_PRIVATE_FLOW_THREAD_NAME ) )
6522	assertNotNull ( result )
6523	assertEquals ( aNumber, result, 1E-2 )
6524	Assert. assertEquals ( 2, lqs. size ( ) )
6525	assertEquals ( new Long ( 100 ), mojoTimer. getDuration ( ) )
6526	Assert. assertEquals ( 0, a. getMaxNestedBlocks ( ) )
6527	assertSizeViolations ( validator. validate ( foo ) )
6528	Assert. assertTrue ( this. manager. connectFromAll ( Arrays. asList ( null, this. person1, null, this. person2, null ), this. family1 ) )
6529	Assert. assertEquals ( "{\\"title\\":\\"fivesmallq\\"}", result )
6530	assertFalse ( violated )
6531	assertThat ( processors, equalTo ( null ) )
6532	assertThat ( def. isMultiple ( ), is ( true ) )
6533	assertErrorEventDefinition ( "subProcessStart", "myErrorCode", null )
6534	assertEquals ( expected, product, TOL )
6535	assertEquals ( expecteds, actuals )
6536	assertThat ( doHandle ( request, errorResponse ), is ( sameInstance ( errorResponse ) ) )
6537	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 2, warnings. size ( ) )
6538	assertFalse ( status == 0 )
6539	assertFalse ( savedEntity. isValid ( ) )
6540	assertEquals ( joinDataSourceListBo, JoinDataSourceListBo. EMPTY_JOIN_DATA_SOURCE_LIST_BO )
6541	assertEquals ( 1, ( int ) externalTaskService. createExternalTaskQuery ( ). singleResult ( ). getPriority ( ) )
6542	assertEquals ( TypeInfoFactory. getListTypeInfo ( TypeInfoCreator. createLong ( ) ), orcType )
6543	assertTrue ( _fs. getACL ( dirInode ). isEmpty ( ) )
6544	assertThat ( doc. getKey ( ), is ( notNullValue ( ) ) )
6545	assertThat ( representation. getString ( "check-number" ), is ( nullValue ( ) ) )
6546	assertEquals ( testPublicId, resultPublicId )
6547	Assert. assertNotNull ( personStructure )
6548	assertEquals ( expr, printConstraint ( expression ) )
6549	Assert. assertEquals ( expectedXML, actualXML )
6550	assertTrue ( "Editor must work after re-enabling!", isElementPresent ( TextFieldElement. class ) )
6551	assertArrayEquals ( one. toArray ( ), betaGrad2. toArray ( ), 0.01 )
6552	assertEquals ( expectedIsNull ( ), result )
6553	assertEquals ( "myconfig", configObservable. toBlocking ( ). single ( ) )
6554	assertEquals ( forwardBlz, manager. getRules ( ). get ( 2 ) )
6555	assertTrue ( ARQ. isTrueOrUndef ( ARQ. optDistinctToReduced ) )
6556	assertEquals ( SecurityActions. getProperty ( "user.home" ) + File. separator, arg. getValue ( parsedCmd, true ) )
6557	Assert. assertEquals ( actual, expected )
6558	assertEquals ( openIds, user. getOpenIds ( ) )
6559	assertTrue ( "Incorrect number of statements in the Block", ( stmts. size ( ) == 4 ) )
6560	assertEquals ( 13, value )
6561	assertTrue ( "incorrect value", aNumber. toString ( ). equals ( result ) )
6562	rule. assertScenarioEnded ( )
6563	assertNull ( "No token should have been returned", accessToken )
6564	assertEquals ( "I win", result. getName ( ) )
6565	assertFalse ( transform instanceof LinearTransform )
6566	assertFalse ( isDisabled )
6567	assertEquals ( expectedDate, new DateTypeAdapterDeserializer ( ). deserialize ( getJsonElement ( dateString ), null, null ) )
6568	assertEquals ( "nine quintillion, two hundred and twenty-three quadrillion," + " three hundred and seventy-two trillion, thirty-six billion," + " eight hundred and fifty-four million, seven hundred and seventy-five thousand and" + " eight hundred and seven", actual )
6569	Assert. assertEquals ( 0, latch. getCount ( ) )
6570	assertNotEquals ( "Checkbox value did not change", value, cb. getValue ( ) )
6571	assertEquals ( ComparatorStepResult. Status. PASSED, result. getStatus ( ) )
6572	assertThat ( readUserId, is ( userId ) )
6573	assertThat ( page. getConversionText ( ), is ( "Conversion by ID : 123 from genericSpringBeanConverter" ) )
6574	assertEquals ( filterClause, " AND \\"fieldName\\" = 'fieldValue'" )
6575	Assert. assertTrue ( clusterVerifier. verifyByPolling ( ) )
6576	assertTrue ( "candidates should be empty", candidates. isEmpty ( ) )
6577	assertNull ( action )
6578	assertOut ( "for (var /** @type {number} */ i = 0, /** @type {number} */ len = 10; i < len; i++)\\n\\tbreak;" )
6579	Assert. assertNotNull ( addressResultsDto )
6580	Assert. assertNotNull ( instance. getAllAtomMapping ( ) )
6581	Assert. assertEquals ( "chosen file not overwritten", secondLength, compareIrods. length ( ) )
6582	assertEquals ( SQLCompletion. NO_POSITION, classUnderTest. getStart ( ) )
6583	assertEquals ( reader, readerResult )
6584	org. fest. assertions. Assertions. assertThat ( currentSessionManager. getMeasurementStream ( "LHC" ). getMeasurements ( ) )
6585	assertNotNull ( aa )
6586	assertEquals ( UNLOCKED_ITEM, result )
6587	assertEquals ( label, 0.0, diff. getRMS ( ), TOLERANCE )
6588	assertExec ( "Should be the same", Numbers. class, "deserDouble__D", f )
6589	assertThat ( log. getLogEntries ( 3, 3, quorumId ), resultsIn ( equalTo ( emptyEntryList ( ) ) ) )
6590	assertNotNull ( waveletName )
6591	Assert. assertEquals ( "SELECT pet.id, pet.num, pet.name, pet.age, pet.cate, pet.master_id, pet.user_id FROM t_pet pet  ORDER BY age" + fieldAdd + " ASC LIMIT 0, 5 ;", sql )
6592	assertEquals ( expecteds, actuals )
6593	assertEquals ( 2, session. from ( var ). listDistinct ( var ). size ( ) )
6594	assertEquals ( ROUTE_KEY, instanceIdentifier. firstKeyOf ( FlowspecL3vpnRoute. class ) )
6595	assertEquals ( HttpStatus. SC_OK, response. getStatusLine ( ). getStatusCode ( ) )
6596	assertTrue ( "Wrong output: " + output, output. contains ( "No stubs to download have been passed" ) )
6597	assertFalse ( server. isComplete ( ) )
6598	assertTrue ( elapsed <= 3000l && elapsed < 3500l )
6599	Assert. assertEquals ( md5, "417bed6d9644f12d8bc709059c225c27" )
6600	assertEquals ( "exists (select 1\\n" + "from cat.kittens as cat_kittens_0\\n" + "where cat_kittens_0.name =?1)", serialize ( predicate ) )
6601	assertThat ( commands. get ( asList ( "test" ) ). execute ( new Args ( "" ) ), is ( ( Object ) "result" ) )
6602	assertNotNull ( method )
6603	assertEquals ( "Wrong URL", file. getAbsoluteFile ( ), FileLocatorUtils. fileFromURL ( url ). getAbsoluteFile ( ) )
6604	Assert. assertEquals ( CONNECTION_NAME, testConnectionDetails1. getName ( ) )
6605	assertEquals ( host, other )
6606	assertTrue ( control. matches ( "/any/ICanPutAnythingInHere/what" ) )
6607	Assert. assertEquals ( 127.22d, ParseUtils. parseDouble ( testBytes, 0, testBytes. length ), 0.00000000000001d )
6608	assertEquals ( "link:linktitle", node. getHref ( ) )
6609	assertEquals ( expected, victim. process ( prefix, nameRequest ( ). originalName ( originalName ) ) )
6610	Assert. assertEquals ( "Deviation", 0.0, maxAbsDeviation, 2E-3 )
6611	assertThat ( "view", view, isRedirectedTo ( "/cart" ) )
6612	assertTrue ( "Intersection point coordinates are incorrect", pi. equals ( piExp ) )
6613	assertNull ( eRetrieved )
6614	assertNull ( variableValue )
6615	assertEquals ( messageList. size ( ), partitionMessageQueue. getMessageList ( ). size ( ) )
6616	assertThat ( found, equalTo ( expected ) )
6617	assertEquals ( exp, res )
6618	assertTrue ( matcher. match ( msg, rule ) )
6619	Assert. assertEquals ( _runCounts. size ( ), 5 )
6620	assertEquals ( breakpoint_1, breakpoint. getBreakPointNumber ( ) )
6621	assertThat ( any. contains ( AM_PM_OF_DAY ), is ( true ) )
6622	Assert. assertEquals ( 3, tables. size ( ) )
6623	assertSequence ( visitor. getNodes ( ), "c", "b", "e", "d", "a" )
6624	Assert. assertEquals ( ServerParse. INSERT, sqlType )
6625	assertSame ( p3, result )
6626	assertEquals ( 1L, element. getLongValue ( ) )
6627	Assert. assertEquals ( idSet. size ( ), 16 )
6628	assertTrue ( response. getBody ( ). getEntities ( ). isEmpty ( ) )
6629	assertEquals ( 1, fakeClock. numPendingTasks ( ) )
6630	assertProcessInstanceCompleted ( processInstance )
6631	Assert. fail ( ex. getMessage ( ) )
6632	assertEquals ( 100, sum, 0 )
6633	assertSame ( "columnControl must have icon from ui", UIManager. getIcon ( ColumnControlButton. COLUMN_CONTROL_BUTTON_ICON_KEY ), control. getIcon ( ) )
6634	assertSkipped ( myTasks, 4 )
6635	objects. assertIsNotInstanceOf ( info, actual, Person. class )
6636	assertEquals ( "car", type. getProfile ( ) )
6637	assertEquals ( cache. get ( "a" ), null )
6638	assertNotNull ( profilePage. getUsername ( ) )
6639	assertEquals ( expectedResult, result )
6640	assertEquals ( "_id", res. getSearchParam ( ). get ( 1 ). getName ( ). getValue ( ) )
6641	assertEquals ( 20, wrapper. getGenre ( ) )
6642	Assert. assertFalse ( new LogAdapter ( "logger.name.here", mockConfigThreadShort ( ) ). isWarnEnabled ( ) )
6643	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
6644	assertEquals ( 200, status )
6645	assertEquals ( original, ArrayUtils. nullToEmpty ( original ) )
6646	assertThat ( record. getQffPressure ( ), is ( nullValue ( ) ) )
6647	Assert. assertEquals ( createArrayNode ( createObjectNode ( "fieldName", 2 ), createObjectNode ( "fieldName", 3 ), createObjectNode ( "fieldName", 4 ), createObjectNode ( "fieldName", 5 ) ), result )
6648	assertThat ( msg, is ( "MESSAGE_TEXT" ) )
6649	Assert. assertNotNull ( thesaurus. swList )
6650	assertEquals ( "error", ex. getMessage ( ) )
6651	assertThat ( storeConfig. getRealmNames ( ), is ( eventConfig. getRealmNames ( ) ) )
6652	assertEquals ( 200, cnt. get ( ) )
6653	Assert. assertEquals ( testTemplate1. getTemplateName ( ), templateName )
6654	Assert. assertEquals ( "Hello World", ejbInstance. sayHello ( ) )
6655	assertEquals ( asList ( "4:2", "2:1", "1:0", "1:5", "5:6", "6:7", "6:8", "2:3" ), messageResults )
6656	Assert. assertEquals ( 1, countingNotifier. getNotificationCount ( ) )
6657	assertEquals ( "(| [= foo] [= bar] [= baz])", m. toString ( ) )
6658	assertSame ( ctrlA, accelerator )
6659	assertEquals ( Math. sqrt ( 8.0 ), distance. compute ( point1, point2 ), EPSILON )
6660	assertThat ( ifCounterDataIndexable. matchesPojo ( this. counterData ), is ( true ) )
6661	assertEquals ( 1, added )
6662	org. junit. Assert. assertEquals ( 0, ret )
6663	assertEquals ( CustomsItemCollection. getData ( ). size ( ), 1 )
6664	assertEquals ( HttpStatusCode. NOT_FOUND. getStatusCode ( ), connection. getResponseCode ( ) )
6665	assertEquals ( ( i < 5? i : 5 ), ( ( Long ) ksession. getQueryResults ( "TestDeclaredLengthWindow" ). iterator ( ). next ( ). get ( "$eventCount" ) ). intValue ( ) )
6666	Assert. assertEquals ( "b;a_", response. getSource ( ). get ( "_labels" ) )
6667	assertEquals ( 0.90, score, 0.000 )
6668	assertEquals ( "a\\n", found )
6669	assertThat ( reader. getContentLength ( ), is ( equalTo ( ( int ) skipped ) ) )
6670	assertThat ( result, is ( expected ) )
6671	assertViewName ( mav, "editProfile" )
6672	assertEquals ( jt. getRawClass ( ), Long. class )
6673	assertFalse ( hidden )
6674	assertEquals ( "AT+N?\\r\\n", intArrayToString ( command. serialize ( ) ) )
6675	assertEquals ( 0L, folder. getUnpackSize ( ) )
6676	Assert. assertEquals ( String. format ( "some %s", this. html ( bb, "red", "text[color=yellow]" ) ), formatter. format ( "some [color=red]text[color=yellow][/color]", defaultOptions ( ) ) )
6677	assertResultSet ( res )
6678	assertNotSame ( "Interpolator was not cloned", cc. getInterpolator ( ), cc2. getInterpolator ( ) )
6679	assertArrayEquals ( new Timestamp [ ] { Timestamp. valueOf ( LocalDateTime. parse ( "1999-05-16T00:00:00.591" ) ), Timestamp. valueOf ( LocalDateTime. parse ( "1970-02-04T01:02:33.01" ) ), null }, getRow ( ). getArray ( "timestampa", Timestamp [ ]. class ) )
6680	assertEquals ( avClusteringCoefficient, 1.0 )
6681	assertEquals ( HQLTemplates. DEFAULT, JPAProvider. getTemplates ( em ) )
6682	assertProjectOut ( compiledFileNames, testDirPath )
6683	assertThat ( conn, is ( notNullValue ( ) ) )
6684	assertThat ( actual, is ( equalTo ( expected ) ) )
6685	assertThat ( tz. isInvalid ( date, PlainTime. of ( 1, 59 ) ), is ( false ) )
6686	assertEquals ( "en is returned when no locales are specified", "North America", city. getContinent ( ). getName ( ) )
6687	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, n ) + ", rmse = " + rmse, 0.0, rmse, EPS )
6688	assertEquals ( bar1, bar2 )
6689	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( popup ) instanceof WPopupRenderer )
6690	assertEquals ( o1, o2 )
6691	assertThat ( result. toString ( ), is ( "OuterBean2{name='bingoohuang', bean={addr=gongjianfang}}" ) )
6692	assertSame ( plist, new ProjectFile ( plist ). getPlist ( ) )
6693	assertEquals ( 1, Utils. encodeFlags ( msg ) )
6694	assertNotNull ( Regulation. reader ( ). read ( ) )
6695	assertEquals ( "1", ( ( NumberValue ) value1 ). getValue ( ) )
6696	assertEquals ( "b/c", result. toString ( ) )
6697	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. COMMENT, this. doc ) )
6698	assertEquals ( "Unexpected type is returned for property'simpleName'", String. class, container. getType ( "simpleName" ) )
6699	assertDecrypt ( underTest, encodedPass, password )
6700	assertEquals ( 0, shell. run ( new String [ ] { "listbookies", "-a" } ) )
6701	Assert. assertEquals ( 6, count. intValue ( ) )
6702	assertEquals ( 2, orgUnits. size ( ) )
6703	Assert. assertFalse ( "should have a component model", result )
6704	assertThat ( nodeTuple, is ( nullValue ( ) ) )
6705	given ( ). get ( "/costcenters" ). then ( ). assertThat ( )
6706	assertContentSame ( rs, rc, columnParam1 )
6707	assertFalse ( "There was cacheable headers", HeaderUtils. hasCacheableHeaders ( headers ) )
6708	assertEquals ( top, entry. getValue ( ) )
6709	assertAllTargetsCount ( 0 )
6710	assertEquals ( "The cat loves a dog.", this. realiser. realise ( completeSen ). getRealisation ( ) )
6711	assertEquals ( Short. valueOf ( "123" ), converter. getAsObject ( facesContext, new UIPanel ( ), "123" ) )
6712	assertTrue ( uploadSuccessful )
6713	Assert. assertNull ( result )
6714	assertFalse ( optionalLong. isPresent ( ) )
6715	assertEquals ( 10, length )
6716	Assert. assertEquals ( correlation. computeCorrelationMatrix ( input ), new BlockRealMatrix ( expected ) )
6717	assertEquals ( "3367a47f48cd5948e68ed649f74d6fcc60725a881593543ae646a9b63f55fe19", out )
6718	assertArrayEquals ( plaintext, recovered )
6719	assertTrue ( NamedCurve. verify ( KeyCodec. getKeyAsRawBytes ( ( BCECPublicKey ) pub ), dataForSigning, Asn1. decodeToBigIntegerArray ( asn1EncodedSignature ) ) )
6720	Assert. assertNotNull ( topic )
6721	assertSame ( t, TEST_2007_07_15_12_30_40_987654321 )
6722	assertSame ( "Wrong in-memory representation", NodeStructureHelper. ROOT_AUTHORS_TREE, model. getInMemoryRepresentation ( ) )
6723	assertEquals ( "2 & 3", expr. getParameterValue ( ) )
6724	assertEquals ( HttpStatusCode. INTERNAL_SERVER_ERROR. code, response. getStatus ( ) )
6725	assertThat ( result. fullName ( ), is ( Long. class. getName ( ) ) )
6726	Assert. assertEquals ( "[1, 3]", s. toString ( ) )
6727	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
6728	assertEquals ( "dist job res is not 0:", 0, res )
6729	Assert. assertEquals ( "99999999999.9999", cide. getQuantidadeBCCIDE ( ) )
6730	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
6731	assertEquals ( "A:\\t[A, C]\\t[A, C]\\t\\n" + "C:\\t\\n", res )
6732	assertThat ( source. contains ( "\\r" ), is ( false ) )
6733	Assert. assertEquals ( "(nt_range (nt_point_location (nt_base_location - (nt_number 456))) _ (nt_point_location (nt_base_location - (nt_number 123))))", range. toStringTree ( parser ) )
6734	assertTrue ( "failed to decrypt ciphertext", Arrays. equals ( message, expectedMessage ) )
6735	TerminalParserTest. assertResult ( parser, "synchronized {foo;}", SynchronizedBlockStatement. class, "synchronized {foo;}" )
6736	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. NOT, TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. REGEX, v, TERM_FACTORY. getConstantLiteral ( "A.*B", XSD. STRING ), TERM_FACTORY. getConstantLiteral ( "i", XSD. STRING ) ) ), translation. get ( 0 ) )
6737	Assert. assertEquals ( 2, queue. size ( ) )
6738	assertEquals ( String. format ( "%s", expression ), new On ( new IntegerFieldValue ( expression ) ). asString ( ) )
6739	Assert. assertTrue ( System. currentTimeMillis ( ) - startTime < 500 )
6740	Assert. assertEquals ( expResult, result )
6741	assertEquals ( value, this. impl. getString ( key ) )
6742	assertThat ( id, greaterThan ( 0 ) )
6743	assertEquals ( "Repository contains incorrect number of statements", 1, testCon. size ( ) )
6744	assertNotNull ( str )
6745	assertThat ( result, is ( "" + "{\\n" + "  \\"service\\" : \\"abuse-contact\\",\\n" + "  \\"link\\" : {\\n" + "    \\"type\\" : \\"locator\\",\\n" + "    \\"href\\" : \\"http://rest.db.ripe.net/abuse-contact/193.0.0.1\\"\\n" + "  },\\n" + "  \\"parameters\\" : {\\n" + "    \\"primary-key\\" : {\\n" + "      \\"value\\" : \\"193.0.0.0 - 193.0.0.255\\"\\n" + "    }\\n" + "  },\\n" + "  \\"abuse-contacts\\" : {\\n" + "    \\"key\\" : \\"TR1-TEST\\",\\n" + "    \\"email\\" : \\"abuse@test.net\\",\\n" + "    \\"suspect\\" : false,\\n" + "    \\"org-id
6746	assertThat ( captor. getValue ( ), is ( lazyPersistSetting ) )
6747	assertPutFails ( association, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
6748	Assert. assertEquals ( "in the room and a car", this. realiser. realise ( this. inTheRoom ). getRealisation ( ) )
6749	assertNotNull ( Role. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
6750	assertNotNull ( result )
6751	assertEquals ( "2.25", event. getLocation ( ). getReference ( ). toString ( ) )
6752	assertEquals ( "Expected 0 results!", 0, n )
6753	assertEquals ( expectedQuery, actualQuery )
6754	assertEquals ( Result. OK, props. afterFormFinishWizard ( repo ). getStatus ( ) )
6755	Assert. assertNotEquals ( session. getRandomGenerator ( foo0 ), session. getRandomGenerator ( foo1 ) )
6756	Assert. assertEquals ( expected, value )
6757	assertEquals ( "Should return the available model", modelFromTest, modelFromConfig )
6758	assertThat ( element. getText ( ), is ( "value with appended text" ) )
6759	assertEquals ( original, other )
6760	assertOut ( "var foreachiter0_target = obj;\\nfor (var foreachiter0 in foreachiter0_target) \\n{\\nvar i = foreachiter0_target[foreachiter0];\\n{\\n  break;\\n}}\\n" )
6761	assertNull ( replicationCache. getIfPresent ( "someServer", "someProject", "refs/changes/1/1/1", "someSlave" ) )
6762	assertFalse ( undefined. isReleased ( ) )
6763	assertObjectEquals ( "{type:'array',items:{type:'string'}}", x. getSchema ( ) )
6764	assertFalse ( "testIsInProgressSubmissionFalse 0", itemService. isInProgressSubmission ( context, item ) )
6765	Assert. assertEquals ( infoReverse. getSequence ( ), resultTranscript )
6766	Assert. assertEquals ( 1, patients. size ( ) )
6767	assertEquals ( "Teststring", s. get ( ). mapFirstOrElse ( String :: toUpperCase, String :: toLowerCase ). joining ( ) )
6768	assertEquals ( new Integer ( 2 ), MethodFixture. getArgNum ( ) )
6769	assertStat ( result )
6770	assertEquals ( "{a:'a1',b:'b1',c:'c1',e:'',g:'true',h:'123'}", r )
6771	assertEqualsIgnoreWhitespace ( expected, real )
6772	assertEquals ( 1, listResponse. getEnvironments ( ). size ( ) )
6773	assertEquals ( "x.artistName = 'bla'", ejbql )
6774	assertValidQuery ( query )
6775	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
6776	assertArrayEquals ( refar, d. getResult ( ) )
6777	assertEquals ( "Failed to generate do while loop with nested expression", DOWHILE_NESTED_EXPRESSION, s )
6778	assertThat ( totalBestFriendAge, is ( equalTo ( 35 * 3 ) ) )
6779	assertEquals ( "WLAN", capitals )
6780	assertTrue ( errors. equals ( noErrors ) )
6781	assertSame ( version. toString ( ), version, Version. valueOf ( major ) )
6782	assertThat ( zookeeperClient, not ( nullValue ( ) ) )
6783	assertEquals ( expected, xml )
6784	assertOut ( "RoyaleTest_A.prototype.foo = function() {\\n  return React.createElement('div', { 'id': 'foo' });\\n}" )
6785	Assert. assertEquals ( "http://foo:8080/bar?a=A&b=B", filter. getRequestURL ( request ) )
6786	assertThat ( writer. get ( ), is ( - 100 ) )
6787	assertThat ( target. getMergeFeature ( feature1. getId ( ) ). getStatuses ( ). get ( 0 ), is ( Statuses. PASSED. getTextName ( ) ) )
6788	assertEquals ( 6, numberOfTimesBarWasInvoked )
6789	assertEquals ( expected, new HashSet < > ( recovered ) )
6790	assertEquals ( expecteds, actuals )
6791	Assert. assertEquals ( lb. getUserName ( ), USERNAME )
6792	assertNotNull ( "Specialty is null", entity )
6793	assertNotEquals ( 0, tokenLists. size ( ) )
6794	assertEquals ( expectedId, jpaGalleryItemCategoryMapper. findByName ( GalleryItemType. GADGET, name ). getId ( ) )
6795	assertThat ( results. hasNext ( ), equalTo ( false ) )
6796	Assert. assertEquals ( Status. NO_CONTENT. getStatusCode ( ), response. getStatus ( ) )
6797	assertEquals ( Response. Status. NO_CONTENT. getStatusCode ( ), response. getStatus ( ) )
6798	assertNotNull ( result )
6799	assertTrue ( Arrays. equals ( c, b ) )
6800	assertThat ( errors, hasFieldErrors ( "givenName", "Patient.names.required.given.family" ) )
6801	assertTrue ( "BinaryEncoder test-" + i, b )
6802	assertEquals ( 4, tool. heapCaculation ( ) )
6803	assertResponse ( response, 400, "{\\"errors\\":[\\"metric[0].name may not be empty.\\"]}" )
6804	assertFalse ( validator. validate ( EntityNames. STAFF, staffId ). equals ( staffId ) )
6805	assertEquals ( "test", cache. getProgram ( ) )
6806	assertEquals ( f. getQuery ( ), q )
6807	Assert. assertEquals ( expectedCrossProduct, crossProduct )
6808	assertNull ( repository. getModuleMetadata ( "TEST-REPLICA" ) )
6809	assertNotNull ( writer )
6810	assertEquals ( "", result )
6811	assertEquals ( 0, app. executeApplication ( args ) )
6812	assertNotNull ( transport. getAttributes ( ) )
6813	Assert. assertEquals ( this. categoryA, category )
6814	Assert. assertNull ( result )
6815	context. assertIsSatisfied ( )
6816	Assert. assertFalse ( validator. validSequence ( 2, inputSequence, outcomesSequence, outcome ) )
6817	Assert. assertEquals ( ClusterHealthState. NORMAL, monitor. getState ( ) )
6818	assertEqualsIgnoreWhitespace ( drlExpected, drlActual )
6819	assertTrue ( v. toString ( ). isEmpty ( ) )
6820	assertEquals ( 3, multiServer. getSize ( ). intValue ( ) )
6821	assertEquals ( expResult, result )
6822	Assert. fail ( e. getMessage ( ) )
6823	assertTrue ( throwables [ 0 ] instanceof NullPointerException )
6824	assertEquals ( "local socket path", ABSTRACT, ch. getLocalSocketAddress ( ). path ( ) )
6825	assertFalse ( pgql. parse ( query ). isQueryValid ( ) )
6826	assertEquals ( "Wrong value", ( short ) 0xdead, u. s16. get ( ) )
6827	Assert. assertFalse ( isPortInCircuit )
6828	assertNotNull ( checkProfessionalUser )
6829	assertThat ( passwordService. passwordsMatch ( clearPassword, password ), is ( true ) )
6830	assertThat ( resolver. resolve ( CamelCase. class ), equalTo ( "org/jbehave/core/io/camel_case.story" ) )
6831	assertPermanentCount ( playerA, "Cabal Therapist", 0 )
6832	assertEquals ( expected, actual )
6833	assertEquals ( linear. getDouble ( 0, 1 ), 1, 1e-1 )
6834	assertOut ( "package foo.bar.baz {\\n\\tpublic class A {\\n\\t}\\n}" )
6835	Assert. assertTrue ( response. toString ( ), response. result ( ) )
6836	assertSame ( t. toLocalTime ( ), LocalTime. MIDNIGHT )
6837	assertEquals ( TestUtil. SOCKS_TEST_PROXY, result. get ( 0 ) )
6838	assertThat ( arbitraryObject, should ( matcher ). whileWaitingUntil ( waiter ) )
6839	assertNotNull ( con. createStatement ( ) )
6840	Assert. assertFalse ( events. isEmpty ( ) )
6841	assertThat ( result, is ( false ) )
6842	Helpers. assertJson ( json, expectedJson )
6843	assertEquals ( "Input value json should match output value json", objectMapper. readTree ( inputJson ), objectMapper. readTree ( outputJson ) )
6844	assertNotNull ( "Could not create a new DNS cache.", cache )
6845	assertNotNullOrEmpty ( "Tags should never be null.", tags )
6846	assertSame ( t, TEST_2007_07_15_12_30_40_987654321 )
6847	Assert. assertEquals ( true, localesInOrder. contains ( Locale. ENGLISH ) )
6848	assertNull ( rule )
6849	assertEquals ( 1, foundComments. size ( ) )
6850	assertOut ( "a++" )
6851	Assert. assertEquals ( diffusioncoefficient, result [ 0 ], 0.1 )
6852	assertTrue ( details. hasAborted ( ) )
6853	assertEquals ( response. getStatusCode ( ), 200 )
6854	Assert. assertEquals ( "fred", jenkinsRetriever. retrieveStatsResponse ( httpRetrievalService, "dummy" ) )
6855	Assert. assertEquals ( expected, queryFromBuilder )
6856	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
6857	assertEquals ( 0, baseWriter. lines. size ( ) )
6858	MockEndpoint. assertIsSatisfied ( mockEndpoints )
6859	Assert. areEqual ( true, countB == 20, "shardrw的读写重试,countB=" + countB )
6860	assertEquals ( "|1   |2    |3   |\\n" + "|true|false|true|\\n", tabulator. tableOf ( data ) )
6861	assertEquals ( 2, executeTestMethod ( test, Integer. class, null, 0 ). intValue ( ) )
6862	assertFalse ( content. contains ( ".metadata" ) )
6863	assertThat ( result, is ( "value" ) )
6864	assertEquals ( 0, list. size ( ) )
6865	Assert. assertEquals ( degree_EXPECTED, degree_ACTUAL )
6866	assertSame ( "Testing the setter", 77, mr. getLocation ( ) )
6867	assertEquals ( expected, actual )
6868	VertxAssert. assertEquals ( "The graph operation resulted in an error: " + arangoResult. getString ( "errorMessage" ), "ok", response. getString ( "status" ) )
6869	assertTrue ( "testCanEditBooleanAuth 0", collectionService. canEditBoolean ( context, collection ) )
6870	JsonTestUtils. assertHasFields ( response, teamFields )
6871	Assert. assertTrue ( new JSONObject ( PEDIGREE_3_MIGRATED_DATA ). similar ( new JSONObject ( captured ) ) )
6872	assertEquals ( r, circle. mbr ( ) )
6873	Assert. assertEquals ( "caught", o )
6874	assertEquals ( String. valueOf ( ReturnCode. NO_SPEECH. code ( ) ), eventCaptor. getValue ( ). getParameter ( "rc" ) )
6875	assertNull ( io. getDocumentById ( id1 ) )
6876	assertSame ( t1, t2 )
6877	assertEquals ( 1, x. size ( ) )
6878	assertEquals ( "GLL", s )
6879	Assert. assertEquals ( simpleJson, objectMapper. writeValueAsString ( auctionSummaryWithDeals ) )
6880	assertOrecValue ( orec, orecValue )
6881	assertFalse ( orFn. accept ( 1 ) )
6882	assertTrue ( Bytes. equals ( key1Bytes, key1ExpectedBytes ) )
6883	assertEquals ( 100, vrp. getJobs ( ). values ( ). size ( ) )
6884	assertEquals ( vo. getPhoneNumbers ( ). get ( 1 ). getNumber ( ), "123456789" )
6885	assertEquals ( result, port )
6886	assertOut ( "var /** @type {CustomVector} */ a = new CustomVector([], 'String')" )
6887	assertEquals ( "cfapps.io", target. getDomains ( ). get ( 0 ). getName ( ) )
6888	assertEquals ( expResult, result )
6889	assertEquals ( 1, repositoryService. createProcessDefinitionQuery ( ). count ( ) )
6890	assertEquals ( "<table><tbody><tr><td>One</td><td><table><tbody><tr><td>Two</td></tr></tbody></table></td><td>Three</td></tr></tbody></table>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
6891	Assert. assertTrue ( setA. equals ( setB ) )
6892	Assert. assertEquals ( 0.0059, test. bootstrap ( x, y, 10000, false, rng ), 1E-3 )
6893	assertEquals ( VALID_DATE, Deencapsulation. getField ( enrollmentGroup, "lastUpdatedDateTimeUtcDate" ) )
6894	Assert. assertTrue ( persistence. insert ( contacts ) )
6895	assertEquals ( "Failed to filter query string", expectedResult, normalizedUrl )
6896	assertEquals ( value, property. getOriginalValue ( ) )
6897	assertOutput ( freemarker. benchmark ( ) )
6898	Assert. assertEquals ( "unexpected XML protocol result", sb. toString ( ), tagOut )
6899	assertEquals ( FOO_VALUE, client. getAttribute ( DOMAIN_NAME, OBJECT_NAME, "foo" ) )
6900	assertTrue ( exception. getMessage ( ). contains ( "Unexpected numberOfMocks" ) )
6901	assertThat ( value, is ( equalTo ( 1024L ) ) )
6902	assertEquals ( "Required profiles", "tui", new FelixPlatformBuilderF160 ( m_bundleContext, "version" ). getRequiredProfile ( m_platformContext ) )
6903	assertTrue ( "size must 1, but it is - " + queryModel. size ( ), queryModel. size ( ) == 1 )
6904	Assert. assertTrue ( "Valid range value wasn't accepted: " + validRange, accepts )
6905	assertEquals ( expResult, result )
6906	assertEquals ( constraintViolations. size ( ), 0 )
6907	Assert. assertEquals ( "result2", result. get ( "outputVariable1" ) )
6908	assertAntFilter ( User. buildRecursive ( ), filters, "{\\"address\\":{\\"streetName\\":\\"At my place\\",\\"streetNumber\\":\\"1\\"},\\"email\\":\\"somewhere@no.where\\",\\"firstName\\":\\"Martin\\",\\"lastName\\":\\"Frey\\",\\"reports\\":null}" )
6909	assertNoConsumerError ( exception. get ( ) )
6910	Assert. assertEquals ( 1 / FastMath. sqrt ( 2 * Math. PI ), f. value ( 0 ), EPS )
6911	testRunner. assertAllFlowFilesTransferred ( PutKudu. REL_SUCCESS, 1 )
6912	assertEqualsIgnoreWhitespace ( expected, real )
6913	assertThat ( s, equalTo ( "         [1mid                       [m   status" ) )
6914	assertThat ( output. toString ( ), is ( "mylittleson" ) )
6915	Assert. assertEquals ( "number emitted tuples", 1, swinSink. collectedTuples. size ( ) )
6916	assertThat ( findFeature ( features, "UpdateFirmware" ), Is. is ( instanceOf ( UpdateFirmwareFeature. class ) ) )
6917	Assert. assertTrue ( ha. getCountEstimate ( ) == hb. getCountEstimate ( ) )
6918	assertEquals ( new TreeLeafOnlyAugmentBuilder ( ). setSimpleValue ( "simpleValue" ). build ( ), entry. getValue ( ) )
6919	assertEquals ( RequestOptions. WAIT_FOR_RESPONSES_UNTIL_TIMEOUT, requestOptions. getWaitForResponses ( ) )
6920	assertEquals ( "ReasonToTerminate", pod1. getStatus ( ) )
6921	memberTracker1. assertMemberNotAdded ( acceptMember2 )
6922	Assert. assertEquals ( "Tabby", names. makeString ( ) )
6923	Assert. assertTrue ( result. isValid ( ) )
6924	assertEquals ( arr, resultArr )
6925	assertThat ( entities. isEmpty ( ), is ( true ) )
6926	assertTrue ( address1. equals ( address2 ) )
6927	Assert. assertEquals ( dto1, loaded1 )
6928	assertThat ( result. toSet ( ). size ( ), is ( 2 ) )
6929	assertEquals ( 25, counter. getCountIterations ( ) )
6930	Assert. assertEquals ( "rows in db", NUM_TUPLES, getNumOfEventsInStore ( ) )
6931	assertEquals ( "http://example.com?url=https%3A%2F%2Fexample.com", got. toString ( ) )
6932	Assert. assertEquals ( entity, second )
6933	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, testName + "_diff" ) )
6934	Assert. assertEquals ( "Sucessfully uploaded " + file. getName ( ), text )
6935	assertEquals ( HttpStatus. SC_NOT_FOUND, response. getStatus ( ) )
6936	assertThat ( c, is ( 2 ) )
6937	Assert. assertTrue ( cars. size ( ) == 1 )
6938	assertFalse ( AppContext. current ( ). isServletEnvironment ( ) )
6939	assertThat ( encoded, stringContainsInOrder ( "<Patient xmlns=\\"http://hl7.org/fhir\\">", "<contained>", "<Condition xmlns=\\"http://hl7.org/fhir\\">", "<id value=\\"1\\"/>", "</Condition>", "</contained>", "<extension url=\\"test\\">", "<valueReference>", "<reference value=\\"#1\\"/>", "</valueReference>", "</extension>", "<birthDate value=\\"2016-04-05\\"/>", "</Patient>" ) )
6940	assertArrayEquals ( "invalid opaque value", value, opaque. getOpaque ( ) )
6941	assertNotNull ( result )
6942	assertEquals ( ci. apply ( Money. of ( 1, "CHF" ) ). with ( Monetary. getDefaultRounding ( ) ), Money. of ( - 1.9, "CHF" ) )
6943	assertFocusModificationSanity ( context )
6944	assertEquals ( "toGoogleImage.png", image )
6945	assertTrue ( "Should get response", response!= null )
6946	assertOverflow ( new BigDecimal ( x ). add ( new BigDecimal ( y ) ), result, x + y )
6947	assertTrue ( execContext. getDeliveryConfig ( ) instanceof SAXContentDeliveryConfig )
6948	assertEquals ( model, actual )
6949	assertEquals ( score, 2.0 / 3.0, 0.001 )
6950	assertFalse ( activityManager. isStarted ( expectedSplashScreenActivity ) )
6951	assertNotNull ( getCoprocessor ( log ) )
6952	assertTrue ( "Latencies out of order: " + last + "!< " + server. getAverageLatency ( ), last < server. getAverageLatency ( ) )
6953	assertEquals ( "Expected 5 results!", 5, count )
6954	assertTrue ( config. isClientProfile ( ) )
6955	Assert. assertEquals ( "node path", getPostData ( "uniqueness" ) )
6956	JSONAssert. assertEquals ( expected, response. getBody ( ), false )
6957	assertTrue ( documentIRI. toString ( ). endsWith ( "/urntestontology.xml" ) )
6958	assertEquals ( dataSet. getRowCount ( ), 19 )
6959	assertTrue ( ARQ. isTrueOrUndef ( ARQ. optOrderByDistinctApplication ) )
6960	Assert. assertEquals ( "--- Provider observations ---", obj. toString ( ) )
6961	assertEquals ( "!valid", expr. getParameterValue ( ) )
6962	assertEquals ( false, pm. cmdNoDelegateProxy. isPmEnabled ( ) )
6963	assertEquals ( store. getRoot ( ), root. getBaseState ( ) )
6964	assertTrue ( isValid )
6965	assertTrue ( objUnderTest. removeServiceProvider ( existingIssuer ), "SP Resource is not deleted from path" )
6966	Assert. assertThat ( dumpToFile. getAbsolutePath ( ), Matchers. not ( Matchers. containsString ( ":" ) ) )
6967	Assert. assertEquals ( false, flag )
6968	assertEquals ( "1", msg. get ( key ) )
6969	assertEquals ( "Container returned too many items when the range was >> container size", 1, ic. getItemIds ( 0, 10 ). size ( ) )
6970	Assert. assertEquals ( 1, queue. size ( ) )
6971	assertTrue ( out. isEmpty ( ) )
6972	assertThat ( elasticsearchTemplate. indexExists ( "test-index" ), is ( true ) )
6973	assertNull ( request. getEcommerceTax ( ) )
6974	assertThat ( actual, is ( expected ) )
6975	assertEquals ( expected, actual )
6976	Assert. assertTrue ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, this. access, this. document ) )
6977	Assert. assertEquals ( Arrays. < Object > asList ( 1, 2, 3 ), list )
6978	assertEquals ( logs. get ( i ), message )
6979	assertEquals ( expected, this. output. toString ( ) )
6980	assertTrue ( ( Boolean ) result )
6981	assertTrue ( between. appliesToProperty ( "foo" ) )
6982	assertEquals ( expectedQuery, actualQuery )
6983	Assert. assertEquals ( 1, files. length )
6984	assertNotNull ( result )
6985	assertEquals ( "<a><b><c><car make=\\"Holden\\" name=\\"HSV Maloo\\" year=\\"2006\\"><country>Australia</country><record type=\\"speed\\">Production Pickup Truck with speed of 271kph</record></car><car make=\\"Peel\\" name=\\"P50\\" year=\\"1962\\"><country>Isle of Man</country><record type=\\"size\\">Smallest Street-Legal Car at 99cm wide and 59 kg in weight</record></car><car make=\\"Bugatti\\" name=\\"Royale\\" year=\\"1931\\"><country>France</country><record type=\\"price\\">Most Valuable Car at $15 million</record></car></c></b></a>", result. getResult ( ) )
6986	assertEquals ( expected, actual )
6987	Assert. assertEquals ( localDate. toString ( ddMMMyyyy, Locale. ENGLISH ), "17-Jun-2013" )
6988	MatcherAssert. assertThat ( meaning. grammemes ( ), Matchers. containsInAnyOrder ( one, two, three ) )
6989	TestUtils. assertEquals ( anexo, anexoModificado )
6990	Assert. assertEquals ( results [ p ], density, 0.0 )
6991	assertVisitorSatisfied ( )
6992	assertEqualsIgnoreWhitespace ( expected, real )
6993	assertNotNull ( singletonServiceGroup. unregisterService ( firstReg ) )
6994	assertEquals ( spec, PositionSpec. decode ( spec. toString ( ) ) )
6995	assertNotNull ( Document. fetcher ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "ETXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
6996	assertEquals ( 1, ( ( ClusterMetricGetters ) statsCollector ). getMessageFailedCount ( ) )
6997	Assert. assertTrue ( Arrays. equals ( n3w, reconst ) )
6998	assertEquals ( utf8Folder, pub [ 0 ]. getName ( ) )
6999	assertEquals ( user. getUserID ( ), result. get ( 0 ). getUsersDTO ( ). getUserID ( ) )
7000	assertArrayEquals ( TEST_DATA, attrs. getBytes ( 0x7FE00010 ) )
7001	assertEquals ( "012", annotatedRule. getActionSequence ( ) )
7002	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
7003	assertEquals ( Boolean. TRUE, f. evaluate ( ) )
7004	assertEqualsJson ( expected, actual )
7005	assertArrayEquals ( new byte [ ] { 6, 5, 4, 3, 2, 1 }, bytes )
7006	assertEquals ( 1, ( int ) entries. count ( ). toBlocking ( ). single ( ) )
7007	assertOut ( "org.apache.royale.utils.Language.sort(a, 16)" )
7008	assertEquals ( description, activity. getProperty ( PROPERTY_ACTIVITY_DESCRIPTION ) )
7009	assertThat ( windows. withGaps ( ). isEmpty ( ), is ( true ) )
7010	assertCollectionSerialization ( expectedJSON, collection )
7011	assertFalse ( PharmaModulo11Validator. isValid ( pzn ) )
7012	assertEquals ( parameter. getValue ( ), getParameterRepositoryService ( ). getParameterValueAsString ( key ) )
7013	Assert. assertNull ( new CompareTool ( ). compareVisually ( dest, sourceFolder + "cmp_" + file, destinationFolder, "diff_", getTestMap ( new Rectangle ( 30, 245, 200, 12 ) ) ) )
7014	assertThat ( status, is ( 1 ) )
7015	Assert. assertEquals ( Collections. < Term > emptyList ( ), terms )
7016	assertEquals ( "K2", v2. getKey ( 1 ) )
7017	assertEquals ( 3, uris. size ( ) )
7018	Assert. assertEquals ( "a", rootEl. getNodeName ( ) )
7019	Assert. assertEquals ( "somethings", unit )
7020	assertFalse ( currentData. isPresent ( ) )
7021	assertMatches ( expr. matcher ( "/a/b/c/d/f/@something" ), "/a/b/c", "/\\\\$2u/b/c/y/z/d/f" )
7022	assertThat ( "Count of customer", res, is ( 0 ) )
7023	assertEquals ( 0, methods. size ( ) )
7024	assertTrue ( val. getBoolean ( "a" ) )
7025	Assert. assertEquals ( originalPaths, harPaths )
7026	assertNotNull ( producer. valueComparator )
7027	assertSame ( root, transform ( root ) )
7028	assertionHelper. assertIrodsFileOrCollectionDoesNotExist ( irodsFile. getAbsolutePath ( ), irodsFileSystem. getIRODSAccessObjectFactory ( ), irodsAccount )
7029	assertEquals ( "abc", FuturesExtra. asyncTransform3 ( futureA, futureB, futureC, ( a, b, c ) -> Futures. immediateFuture ( a + b + c ), MoreExecutors. directExecutor ( ) ). get ( ) )
7030	Assert. assertEquals ( "1", res. toString ( ) )
7031	assertEquals ( "2016-04-01", result. getParameters ( ). get ( "date" ). getAsString ( ) )
7032	Assert. assertEquals ( "%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%3CResponse%2F%3E", elem. toUrl ( ) )
7033	assertEquals ( inTransaction. toJson ( ), receiveMsg )
7034	assertEquals ( "from SURVEY s\\n" + "inner join SURVEY s2 a \\n" + "on s.ID = s2.ID", query. toString ( ) )
7035	assertTrue ( "Bundle file '" + _bundle + "' for bundle'" + bundle + "' does not exist.", _bundle. exists ( ) )
7036	assertEquals ( 5, cashFlow. getSize ( ) )
7037	assertTrue ( "Should equals", toJsonNode ( res ). equals ( toJsonNode ( TestUtils. readStringFromClasspathFile ( "/asserts/prepareCommentIndexedDocument_ORG-1501_1.json" ) ) ) )
7038	assertNull ( entryRelationship )
7039	Assert. assertTrue ( charset. equals ( CharsetUtil. getCharset ( charsetIndex ) ) )
7040	assertNotNull ( form )
7041	assertThat ( credentials, is ( notNullValue ( ) ) )
7042	assertEquals ( 6, actualExpectedWorkerLinkCount )
7043	Assert. assertTrue ( response. contains ( "Call reached IMPL as schemaValidation went thru fine.siteid - 0clientid - abclang - 1" ) )
7044	Assert. assertNotEquals ( resp. getStatus ( ), HttpServletResponse. SC_UNSUPPORTED_MEDIA_TYPE )
7045	given ( ). header ( "x-expire-after", "1" ). body ( "{ \\"foo\\": \\"bar1\\" }" ). when ( ). put ( "expireaftertwoseconds" ). then ( ). assertThat ( )
7046	assertTrue ( sc1. equals ( sc2 ) )
7047	assertThat ( stream. iterator ( ). hasNext ( ), equalTo ( true ) )
7048	assertEquals ( "lucene condition serialization is wrong", expected, actual )
7049	assertTrue ( outStr. contains ( NamenodeFsck. HEALTHY_STATUS ) )
7050	Assert. assertFalse ( molecule1. equals ( molecule2 ) )
7051	assertThat ( domain. getSpec ( ). isLogHomeEnabled ( ), is ( true ) )
7052	assertTrue ( ( Boolean ) result )
7053	assertTrue ( "Web service only took " + ms + " ms", ms > 1000 )
7054	Assert. assertEquals ( "Filter name not match", f. getName ( ), "filtername" )
7055	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 06" ) )
7056	assertEquals ( "Part1/Part2branch/Part3", sw. toString ( ) )
7057	assertThat ( separators, is ( ";\\r\\n;\\r\\n;" ) )
7058	assertNotNull ( recordTable )
7059	assertEquals ( 0, report. getEventCount ( ) )
7060	Assert. assertFalse ( t1 == t2 )
7061	assertThat ( sshClientEnvVar, anyOf ( startsWith ( "::1" ), startsWith ( "127.0.0.1" ) ) )
7062	assertThat ( new IntegerTypeValidator ( "hoge" ). validate ( parameters, "aaa" ), is ( "hoge" ) )
7063	Assert. assertEquals ( expectedCardinality, outputCardinality )
7064	assertThat ( a. overlaps ( b ), is ( true ) )
7065	this. assertVerification ( )
7066	assertEquals ( buf. toString ( ), expected )
7067	assertEqualsStoreParams ( params, params2 )
7068	assertTrue ( bucket. tryConsume ( ) )
7069	assertEquals ( Expression. LESS_THAN, exp. getType ( ) )
7070	assertMatrixEquals ( "invert", original, inverse, 0.001 )
7071	assertEquals ( RestrictedHealthStatus. OK, response. getHealthy ( ) )
7072	assertTrue ( predicate. isHighlighted ( null, adapter ) )
7073	assertNull ( array )
7074	assertEquals ( expectedSqlForMathOperations8 ( ), result )
7075	Assert. assertEquals ( "(aa_change_ssr (aa_range (aa_point_location (aa_char Cys) 123) _ (aa_point_location (aa_char Arg) 124)) ( 3 _ 4 ))", aa_change_ssr. toStringTree ( parser ) )
7076	assertTrue ( pct. getOverrideSystemSettings ( ) )
7077	assertEquals ( "void f(void* target, void* p0) {\\n" + "    struct f_0001_0001 {int m0;};\\n" + "    struct f_0001_0000 {int m0;};\\n" + "    struct f_0001 {struct f_0001_0000 m0;struct f_0001_0001 m1;};\\n" + "    ((void (*)(struct f_0001)) target)(*((struct f_0001*)p0));\\n" + "}\\n", BridgeMethodCompiler. createBridgeCWrapper ( functionType. getReturnType ( ), functionType. getParameterTypes ( ), functionType. getParameterTypes ( ), "f" ) )
7078	assertEquals ( err. getClass ( ), HttpPostRequestEncoder. ErrorDataEncoderException. class )
7079	assertUserByFullName ( users, "User 5" )
7080	assertArrayEquals ( extensionBytes, serializer. serialize ( ) )
7081	assertNotNull ( kbase )
7082	BatchMainMock. assertLog ( "main(" + "-initiator, myUser, " + "-type, broadcast, " + "-argument, " + new File ( broadcastOuputDir, "myFileToExport" ). getPath ( ) + ", " + "-configuration, myBatchConfiguration, " + "-date, myDate, " + "-arg1, value1, " + "-arg2, value2, " + "-arg3, value3)" )
7083	assertNotNull ( filter )
7084	assertEquals ( "Wrong number returned", 10, matchingResults. size ( ) )
7085	Assert. assertEquals ( "did not get expected length back", expectedLen, actualRead )
7086	assertEquals ( "Jimmie", object. getString ( "firstname" ) )
7087	Assert. assertTrue ( writer. isStopped ( ) )
7088	assertEquals ( user, mockResult. included ( "user" ) )
7089	assertEquals ( myFile, entry. getFile ( ) )
7090	assertEquals ( 0, violations. size ( ) )
7091	VertxAssert. assertEquals ( "The graph operation resulted in an error: " + response. getString ( "message" ), "ok", response. getString ( "status" ) )
7092	assertTrue ( Properties. class. isAssignableFrom ( p. getPropertyType ( ) ) )
7093	assertArrayEquals ( expected, params. getTripleIndexes ( ) )
7094	Assert. assertTrue ( p. g ( 4 ) == 8 )
7095	assertEquals ( 0, result. size ( ) )
7096	Assert. assertEquals ( expected, actual )
7097	assertEquals ( 70, loadOntology. getAxiomCount ( ) )
7098	assertSame ( "same info", info, info ( "m", "m desc" ) )
7099	maven. forProject ( basedir ). withCliOption ( "-Dprotobuf.version=2.4.1" ). withCliOption ( "-Dprotoc.version=2.4.1" ). execute ( "verify" ). assertErrorFreeLog ( )
7100	assertEquals ( expectedResult, result )
7101	assertEquals ( "failed to generate class with method calling method on this", CLASS_WITH_METHOD_CALLING_METHOD_ON_THIS, cls )
7102	assertEquals ( "Request should be accepted as we authenticated", Response. Status. OK, val. getStatusInfo ( ) )
7103	assertEquals ( "http://localhost:80/mywebapp/servlet/MyServlet/", tested. getBaseUrl ( ) )
7104	Assert. assertTrue ( map. transformers ( ). contains ( expected ) )
7105	assertEquals ( "http://foo/Patient?foo=A1%2CA2&foo=B1%2CB2", capt. getValue ( ). getURI ( ). toString ( ) )
7106	assertTrue ( cohortService. getCohortByUuid ( RestTestConstants2_1. COHORT_UUID ). getVoided ( ) )
7107	assertTrue ( reduce. getWindowing ( ) instanceof Time )
7108	assertTrue ( resultFound )
7109	assertFalse ( validator. getValidationResult ( ). hasFailures ( ) )
7110	Assert. assertEquals ( 4, countFlowNodeInstanceWithState ( NodeInstaceStates. PASSED_STATE, process, defaultInstanceId ) )
7111	assertEquals ( service. getSize ( new String [ ] { "", "", "" } ), 3 )
7112	assertFalse ( "Expected DateTimeSchema string validation failure did not succeed", schema. validate ( stringEntity ) )
7113	assertTrue ( permissionEvaluator. hasPagePermission ( authentication, "project", "branch", DocumentrConstants. HOME_PAGE_NAME + "/foo", Permission. VIEW ) )
7114	assertNotNull ( statsd )
7115	Assert. assertEquals ( cParameters, handler1. parseCapability ( Unpooled. wrappedBuffer ( capaBytes ). slice ( 2, capaBytes. length - 2 ) ) )
7116	assertEquals ( 2, users. size ( ) )
7117	assertNull ( "Value not cleared", node. getValue ( ) )
7118	assertThat ( readBytes ( testee ), is ( "Hello|World|" ) )
7119	Assert. assertEquals ( "[1, 2, 3]", formatted )
7120	assertEquals ( "Expected 400 but got " + response. getStatus ( ), 400, response. getStatus ( ) )
7121	assertEquals ( 200, connection. getResponseCode ( ) )
7122	assertThat ( result. getType ( ), is ( "OFPOutPacket" ) )
7123	assertEquals ( JobStatus. ACCEPTED, jobResultArgumentCaptor. getValue ( ). getStatus ( ) )
7124	runner. assertNotValid ( service )
7125	assertTrue ( Arrays. equals ( expectedResult, encoded. array ( ) ) )
7126	Assert. assertEquals ( expected, returnValue )
7127	assertEquals ( expected, actual )
7128	assertEquals ( 1, decodedColumnInfo. size ( ) )
7129	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
7130	assertEquals ( sortedValues, values )
7131	assertFalse ( "Empty MimeMessage has attachments", iterator. hasNext ( ) )
7132	assertEquals ( expResult, result )
7133	assertChangesDispatched ( listener )
7134	Assert. assertEquals ( "did not correctly compute path", expected, path )
7135	assertThat ( url, is ( "/abc/Anything/def/123/ghi/123.45" ) )
7136	assertIsRemovedToInvisible ( columnModel, 0, false )
7137	assertEquals ( 3, longStream. getAsLong ( ), 0 )
7138	assertEquals ( expectedDate, actualDate )
7139	assertEquals ( getFailureMessage ( ), assertion, rowMean )
7140	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
7141	assertEquals ( "Persist operator not added to dag ", persister, persistOperatorMeta. getOperator ( ) )
7142	assertEquals ( "Throttle: 123 ms", label. get ( ) )
7143	assertResultSet ( res )
7144	assertEquals ( testData, toMap ( scanner ) )
7145	assertEquals ( 1, findIndexObject. size ( ) )
7146	assertNotNull ( proveedorFacturas. getId ( ) )
7147	assertEquals ( "True has to be returned in this case", preferredBlockSize, inf. getPreferredBlockSize ( ) )
7148	Assert. assertEquals ( ImmutableSet. of ( "keyToInclude", "anotherKeyToInclude" ), filteredPhotonRequest. keys ( ) )
7149	assertEquals ( 2, actualExpectedWorkerLinkCount )
7150	Truth. assertThat ( HttpJsonCallContext. createDefault ( ). withTimeout ( Duration. ofSeconds ( - 1L ) ). getTimeout ( ) )
7151	Assert. assertEquals ( 1, a. rank ( ) )
7152	assertEquals ( 1, list. size ( ) )
7153	assertTrue ( entity. equals ( entity2 ) )
7154	assertEquals ( "No such service demo", result )
7155	assertTrue (! outputEntity. hasKey ( ) )
7156	Assert. assertEquals ( expected, actual )
7157	Assert. assertNotNull ( job. toString ( ) )
7158	assertEquals ( "&lt;b&gt;芦test禄&lt;&#x2F;b&gt;", multiLineText. toDisplay ( ) )
7159	assertTrue ( action. getResponseContent ( ). contains ( "Mapped view was rendered!" ) )
7160	assertThat ( url, is ( equalTo ( new URL ( "file:foo/bar/.cucumber/stepdefs.json" ) ) ) )
7161	assertTrue ( result. size ( ) == 2 )
7162	assertTrue ( response. getEntry ( ). size ( ) > 0 )
7163	Assert. assertTrue ( result. equals ( "10 minutoj" ) )
7164	assertSseResponse ( sseResponse, "event:eventName", "data:payload1" )
7165	assertTrue ( this. validator. validate ( c ). isEmpty ( ) )
7166	assertFileContents ( basedir, "expected/plugin.xml", "target/classes/META-INF/maven/plugin.xml" )
7167	Assert. assertEquals ( "The house where I played poker has been abandoned since 1986.", realised. getRealisation ( ) )
7168	assertFalse ( authorizer. isAuthorized ( null, profiles ) )
7169	assertThat ( map. prices ( ), is ( ( Map < String, Integer > ) ImmutableMap. of ( "red", 17 ) ) )
7170	assertTrue ( close. await ( 10, SECONDS ) )
7171	assertEquals ( i, orderMap. get ( id ). intValue ( ) )
7172	assertThat ( "Kein Ergebnis geliefert", target, notNullValue ( ) )
7173	assertEquals ( RESULT, testSubject. render ( T ) )
7174	Assert. assertEquals ( "anta怒 41 minutoj", prettyTime. format ( prettyTime. calculatePreciseDuration ( new Date ( new Date ( ). getTime ( ) - 40 * 60 * 1000 - 40 * 1000 ) ) ) )
7175	Assert. fail ( type [ j ] + ", " + b + ", " + a )
7176	Assert. assertEquals ( 2d, StatUtils. getMean ( numbers ), TOL )
7177	Assert. assertEquals ( "88132-020", retornoConsultaCadastroEndereco. getCep ( ) )
7178	assertTrue ( serviceSet. isEmpty ( ) )
7179	assertThat ( IDN. toUnicode ( result. toString ( ) ), equalTo ( robots ) )
7180	assertNull ( query. offset ( 10 ). fetchOne ( ) )
7181	Assert. assertFalse ( ZipCompletionScanner. isCompleteZip ( file ) )
7182	assertEquals ( asList ( new LogoutRequest ( ) ), serverEvents. collect ( ) )
7183	Assert. assertThat ( values, Matchers. contains ( "value 1.0", "value 0.5;p=v" ) )
7184	assertTrue ( Files. getLastModifiedTime ( path ). toMillis ( ) >= now )
7185	assertPolygons ( expected, polys )
7186	assertNotNull ( accessToken )
7187	assertLocation ( "Rome", "Italy" )
7188	Assert. assertEquals ( "Sheet1!A1", 10d, value, 0d )
7189	ModelTestBase. assertIsoModels ( expected, m )
7190	assertThat ( violations. size ( ), is ( 0 ) )
7191	assertTrue ( "expected oval but got " + count, count == 1 )
7192	assertEquals ( Float. class, handler. apply ( rs, 1 ). getClass ( ) )
7193	assertCleanedUpState ( paths. size ( ) )
7194	assertNotNull ( edm )
7195	assertThat ( timePeriod. with ( Duration. STD_CLOCK_PERIOD ), is ( Duration. ofClockUnits ( 3, 3, 0 ) ) )
7196	assertTrue ( true )
7197	assertEquals ( IOTester. VALUE_IN_PAYLOAD, buf. getPayload ( ) )
7198	Assert. assertEquals ( table. getRowCount ( ), 3 )
7199	assertEquals ( "v", Iterables. getOnlyElement ( tx. getVertices ( "value", 11 ) ). getProperty ( id. getName ( ) ) )
7200	assertEquals ( 0, result. size ( ) )
7201	assertValidSelector ( result )
7202	assertThat ( result, is ( sameInstance ( primaryKeysResponse ) ) )
7203	Assert. assertNotNull ( result )
7204	Assert. assertTrue ( getException )
7205	assertEquals ( expected, dotFileFormat. format ( transaction ) )
7206	assertThat ( state. getRowIndex ( ), is ( 10 ) )
7207	assertThat ( underTest. createToken ( principalCollection ), is ( equalTo ( FORMAT + "." + TOKEN ) ) )
7208	Assert. assertTrue ( instance. getFactor ( ) == 10 )
7209	given ( ). get ( "zips/resource.zip/test/path/resources/notfound.png" ). then ( ). assertThat ( )
7210	assertThat ( renewer. getCurrentlyHeldLeases ( ). size ( ), equalTo ( 0 ) )
7211	Assert. assertEquals ( "The rule does not match the built one", testRule, builtRule )
7212	assertEquals ( "arguments should match", defaultBuilder. compression ( eOutputCompressionMode ). build ( ), controller. getFromUI ( false ) )
7213	assertEquals ( "dubbo://127.0.0.1:20887", result )
7214	Assert. assertEquals ( "To many topics after remove", 0, topicmap. getTopics ( ). size ( ) )
7215	assertEquals ( PropUtil. getIntSessionProperty ( sess, "test", 1 ), 2 )
7216	assertSqlCanBeParsedAndDeparsed ( stmt )
7217	assertFalse ( "check different value", _update. hasUpdate ( NEW_STRING_PATH, newComponent2 ) )
7218	assertEquals ( 5 * FOUR_LINES_REMOVED_SCORE, playerScores. getScore ( ) )
7219	assertEquals ( "array type", 1, parsed. params. get ( 0 ). first. arrayDepth )
7220	Assert. assertTrue ( check. equals ( o ) )
7221	assertTrue ( true )
7222	assertTrue ( 5.0f == d. asFloat4 ( ) )
7223	Assert. assertTrue ( validator. validSequence ( 1, inputSequence, outcomesSequence, outcome ) )
7224	assertNotNull ( easyCTO )
7225	assertEquals ( HttpServletResponse. SC_UNAUTHORIZED, response. getStatus ( ) )
7226	Assert. assertEquals ( Status. NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
7227	assertNull ( NativeCodeLoader. loadLibrary ( ) )
7228	assertEquals ( value, out. getSizeT ( ) )
7229	assertThat ( wrapperFilename, is ( expected ) )
7230	assertEquals ( "hello", filterResult. getValue ( ) )
7231	assertEquals ( 0, version. getMinor ( ) )
7232	assertThatSliderValueIs ( minimumOf ( slider ) )
7233	assertThat ( resourceIds, equalTo ( expectedResourceIds ) )
7234	Assert. assertEquals ( EMPTY, result )
7235	assertEquals ( o1, o2 )
7236	assertEquals ( "foo", store. getLastModifiedInstance ( ) )
7237	assertNull ( logServiceState )
7238	assertEquals ( response. getStatusCode ( ), 201 )
7239	assertEquals ( expected, actual )
7240	assertThat ( parameter, is ( "bar" ) )
7241	Assert. assertEquals ( 19, buf. remaining ( ) )
7242	assertEquals ( "two sextillion", actual )
7243	assertEquals ( Language. ENGLISH. toString ( ), detections [ 0 ] )
7244	Assert. assertEquals ( "Failure - expected validatorList size to be 2", 2, str. size ( ) )
7245	assertEquals ( dropDownMenu, workbenchMenuStandardNavBarView. getMenuItemContextWidgetMap ( ). get ( menuId ) )
7246	assertTrue ( zoomUI. canZoomOut ( ) )
7247	assertOut ( "/**\\n * @param {*} bar\\n * @return {number}\\n */\\nRoyaleTest_A.prototype.foo = function(bar) {\\n\\tvar self = this;\\n\\treturn -1;\\n}" )
7248	assertTrue ( vrpBuilder. getLocationMap ( ). containsKey ( "end" ) )
7249	assertEquals ( contentExpected, contentReturned )
7250	Assert. assertTrue ( rep. containsKey ( "goodtab" ) )
7251	Assert. assertEquals ( 200, li. getValue ( 50 ), 1e-5 )
7252	Assert. assertEquals ( 2, newestVersion. getIndex ( ) )
7253	Assert. assertEquals ( 0, services. size ( ) )
7254	assertThat ( TestI18n. testMessage. text ( Locale. FRENCH ), is ( "Message de Test" ) )
7255	assertThat ( result, is ( nullValue ( ) ) )
7256	assertEquals ( result, expecting )
7257	assertEquals ( "5:::{\\"name\\":\\"edwald\\",\\"args\\":[{\\"a\\":\\"b\\"},2,\\"3\\"]}", result )
7258	assertThrown ( val, promise )
7259	assertPaths ( asList ( "com", "sonatype", "example", "metadata.xml" ), paths )
7260	Assert. assertEquals ( Integer. valueOf ( 3 ), object )
7261	Assert. assertTrue ( permissions. toString ( ), permissions. isEmpty ( ) )
7262	assertEquals ( "a b\\n", found )
7263	assertEquals ( cal. getTime ( ), w. getEnd ( ) )
7264	Assert. assertTrue ( entities. size ( ) > 0 )
7265	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getAllPrivileges ( set ( "jranalyst" ), ActiveRoleSet. ALL ) ). toString ( ) )
7266	assertRecord ( record )
7267	assertEquals ( "field.toLowerCase()", p. toString ( ) )
7268	AssertAnnotations. assertCoreference ( ref, select ( jcas, CoreferenceChain. class ) )
7269	assertFalse ( hasLock )
7270	assertNotNull ( bc )
7271	Assert. assertFalse ( this. entityAccess. isOwner ( ) )
7272	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
7273	assertEquals ( VersionUtils. getPublishVersion ( "2.1" ), PomIdsHelper. getJobVersion ( property ) )
7274	assertTrue ( outContent. toString ( ). equals ( "Cluster Test does not exist.\\n" ) )
7275	assertArrayEquals ( data, ( short [ ] ) deserialize. readObject ( ) )
7276	Assert. assertNull ( mapping )
7277	assertThat ( comments, hasSize ( 2 ) )
7278	assertThat ( serde. capturedRow, is ( row ) )
7279	this. assertResponse ( faultResponse, null, this. defaultMessage, this. defaultComponent. name ( ), exception. getClass ( ). getName ( ), message, this. parameters )
7280	Assert. assertEquals ( result. getResultSize ( ), 8 )
7281	assertTrue ( nicHandle. equals ( nicHandle ) )
7282	assertEquals ( true, victim. getConfiguration ( ). isDebug ( ) )
7283	assertFalse ( b )
7284	Assert. assertEquals ( 1, timer. getCount ( ) )
7285	assertEquals ( "Failed to convert empty String to BigInteger", null, model. getAmountInt ( ) )
7286	Assert. assertNotNull ( "File value is missing", atFields. get ( "file" ) )
7287	assertSame ( solution, selection. execute ( population ) )
7288	assertEquals ( newValue, presenter. getValue ( ) )
7289	Assert. assertNull ( "Empty repository", resource )
7290	assertEquals ( 2, rules. size ( ) )
7291	assertEquals ( pp. getValue ( ), new Payload < > ( "error test error" ). getValue ( ) )
7292	assertSelected ( )
7293	assertConstruct ( tq, ttl )
7294	Assert. assertEquals ( "{\\"data\\":[{\\"type\\":\\"testType\\",\\"values\\":[{\\"name\\":\\"testValue\\",\\"relatedness\\":0.0,\\"popularity\\":0.0,\\"foreground_popularity\\":1.0,\\"background_popularity\\":0.0}]}]}", writer. toString ( ) )
7295	assertEquals ( 0, ret_val )
7296	assertEquals ( "Attemped updating a Person after adding a Tab to his first " + "TabGroup, then flushing and clearing the EntityManager.  " + "Expected to see the new tab after re-loading the Person.", "Foo", tabGroup. getTabs ( ). get ( tabGroup. getTabs ( ). size ( ) - 1 ). getTabName ( ) )
7297	assertEquals ( "2 >> 3", expr. getParameterValue ( ) )
7298	assertEquals ( "<foo:bar id=\\"1\\" /><abc:def id=\\"2\\">Foo<p>Hello</p></abc:def><foo:bar>There</foo:bar>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
7299	assertFalse ( like1. equals ( like2 ) )
7300	assertEquals ( Util. list ( "eric.dalquist@example.com" ), attribsSet. iterator ( ). next ( ). getAttributes ( ). get ( "mail" ) )
7301	assertEquals ( "Reference value not set", MAGIC, ref. getValue ( ) )
7302	assertArrayEquals ( expected, asArray ( kernel ), 1e-4 )
7303	assertEquals ( "Answer returning " + value, r. toString ( ) )
7304	Assert. assertEquals ( expectedSignature, signature )
7305	assertEquals ( "Hello Luigi.", config. hello ( "Luigi" ) )
7306	Assert. assertEquals ( "Should return exactly one variable", 1, response. jsonPath ( ). getMap ( "" ). size ( ) )
7307	assertions. doesNotContain ( 4f, index )
7308	assertConfigurationErrors ( validatedConfig, PostgresConnectorConfig. SLOT_NAME, 1 )
7309	assertEquals ( a. getDstContextAlias ( ), "dst" )
7310	RouteUtils. assertSatisfied ( result )
7311	assertThat ( query. count ( ), is ( 0L ) )
7312	assertTrue ( executor instanceof LeanGammaTxnExecutor )
7313	assertThat ( log. getEvents ( ). size ( ), equalTo ( 3 ) )
7314	Assert. assertEquals ( "The received ID in non force delete case  is different than expected VALID_ID_FOR_DELETION.", VALID_ID_FOR_DELETION, da. getId ( ) )
7315	assertNotNull ( Deencapsulation. getField ( jobResult, "updateTwin" ) )
7316	Assert. assertEquals ( getResultMatrix ( ), resultMatrix )
7317	assertEquals ( "Session file should match", pom1, ( ( ManipulationSession ) FieldUtils. readField ( c, "session", true ) ). getPom ( ) )
7318	assertEquals ( "metadata.xml", metadata. getFileName ( ) )
7319	Assert. assertNotEquals ( Board. Cell. CELLS [ 4 ] [ 1 ], move. start )
7320	assertNull ( convertedEvent. getInputEvent ( ) )
7321	assertEquals ( expectedMethods, calledMethods )
7322	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE LENGTH(nodes.property) < 'literal'" ) )
7323	assertLogContains ( "Tests with failures" )
7324	assertEquals ( ORDER_XML, orderXML )
7325	assertEquals ( 7, methodNode. instructions. indexOf ( instruction ) )
7326	assertEquals ( service. getSize ( new String [ ] { "", "", "" } ), 3 )
7327	assertTrue ( "i= " + i + "  v[d]=" + v [ 0 ] + " / " + Bits. toBinary ( v [ 0 ] ), ind. contains ( v ) )
7328	Assert. assertArrayEquals ( message, expecteds, actuals )
7329	assertTrue ( htmlToDisplay. contains ( "<span id=\\"obs-id\\" class=\\"obs-field\\">" ) )
7330	Assert. assertNull ( MVEL. eval ( "parent.?lastName.length()", person ) )
7331	assertEquals ( "http://java.example.com:8080/foo/bar/buz/qux", got. toString ( ) )
7332	assertEquals ( expectedAddMonths ( ), result )
7333	assertThat ( delegate. op ( 4.0, 5.0 ), equalTo ( 4.0 * 5.0 ) )
7334	assertEquals ( lineString, ( dump ( ( Node ) r. get ( "node" ) ) ). getProperty ( "wkt" ) )
7335	assertEquals ( Response. Status. NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
7336	context. assertSentrySemanticException ( statement, "drop database " + DB1, semanticException )
7337	assertTrue ( getNoErrorMsg ( ), result )
7338	assertCustomerSample ( )
7339	assertFalse ( result )
7340	assertEquals ( - 1, adapter. getColumnIndex ( "unknown" ) )
7341	assertTrue ( args. getMassJobArgMap ( ). get ( sample ). get ( 0 ). getKmerRange ( ). getFirstKmer ( ) == 31 )
7342	assertSame ( "cloned", EmptyState. INSTANCE, cloned )
7343	assertEquals ( DataTypeManager. DefaultDataClasses. STRING, f. getArg ( 3 ). getType ( ) )
7344	assertEquals ( "jdbc/DS", propertyLoader. getUniqueName ( ) )
7345	Assert. assertEquals ( 1, json. getInt ( "Cache count after first get operation" ) )
7346	assertThat ( mojo. getLineSeparator ( ), is ( LINE_SEPARATOR ) )
7347	assertTrue ( routingTable. hasDefaultRoute ( ) )
7348	assertEquals ( "Wrong number of child builders", 3, childBuilders. size ( ) )
7349	assertEquals ( "2008/CD Sichuan/JJ earthquake/NNS From/IN Wikipedia/NN,/, the/DT free/NN encyclopedia/IN", firstLine )
7350	assertNotNull ( a. embeddedData. someData )
7351	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE LOCALNAME(nodes)!= $literal" ) )
7352	assertThat ( one, is ( equalTo ( "1" ) ) )
7353	Assert. assertTrue ( source!= null )
7354	assertEquals ( "i'm stopped", obj. getStringValue ( ) )
7355	context. assertEquals ( OK, replyBody. getString ( STATUS ) )
7356	Assert. assertTrue ( versionMatchFilter. check ( makeAssociationDescriptor ( "1.*" ), makeServiceItem ( "1.1" ) ) )
7357	Assert. assertNull ( value )
7358	assertInvocations ( client. getBusinessActivityInvocations ( ) )
7359	Assert. assertEquals ( "x=" + x, sig. value ( x ), sigL. value ( x ), EPS )
7360	Truth. assertThat ( Lists. newArrayList ( stream ) )
7361	assertResultSet ( res )
7362	Assert. assertSame ( e, this. mocker. getComponentUnderTest ( ). process ( e ) )
7363	BeanAssert. assertBeanEquals ( bean, parsed )
7364	assertIsWrappedFacesContext ( actual )
7365	assertEquals ( "Single files not correctly organized/separated from paired files", 2, SamplePairer. getSingleFiles ( allFiles ). size ( ) )
7366	assertThat ( graph. run ( executorService ). get ( ), equalTo ( "fallback response". hashCode ( ) ) )
7367	assertNotNull ( reporter )
7368	Assert. assertFalse ( orPredicate. test ( null ) )
7369	assertThat ( taxFactorForPerson, equalTo ( TAX_FACTOR ) )
7370	assertTrue (! ( CorbaLoc. parseKey ( pior. get_object_key ( ) ). equals ( CorbaLoc. parseKey ( pior2. get_object_key ( ) ) ) ) )
7371	assertQuery ( testId, result, tdr. getTestData ( testId ) )
7372	assertEquals ( "OK", r )
7373	MatcherAssert. assertThat ( new LrFromArgument ( ( ) -> "dude" ). pickLexeme ( ( name ) -> lexeme, Mockito. mock ( Vocabulary. class ) ), CoreMatchers. is ( lexeme ) )
7374	assertEntityNotDefined ( mappedKey )
7375	assertConfig ( cfg, "permessage-compress", expectedParams )
7376	assertThat ( value. partition ( ), equalTo ( 1 ) )
7377	assertState ( InternetServiceLifecycleMetaWithInboundWhile. States. InService. class, service )
7378	assertEquals ( aCalendar. get ( Calendar. DAY_OF_YEAR ), testResult )
7379	assertEquals ( "filename.middle.jpg", filename )
7380	TestUtils. assertEquals ( interesadoDTO, interesadoVO )
7381	assertEquals ( "fresh", html )
7382	assertEquals ( 12345678910L, tiffLong. getValue ( ) )
7383	assertEquals ( BAD_REQUEST. getStatusCode ( ), response. getStatus ( ) )
7384	assertResponse ( response, 200, "{\\"queries\\":" + "[{\\"sample_size\\":10,\\"results\\":" + "[{\\"name\\":\\"abc.123\\",\\"group_by\\":[{\\"name\\":\\"type\\",\\"type\\":\\"number\\"}],\\"tags\\":{\\"server\\":[\\"server1\\",\\"server2\\"]},\\"values\\":[[1,60.2],[2,30.200000000000003],[3,20.1]]}]}]}" )
7385	assertEquals ( actual, all )
7386	assertEquals ( "appName1", config. getAppName ( ) )
7387	assertNotNull ( Sim. reader ( ). read ( ) )
7388	assertThat ( xoManager, notNullValue ( ) )
7389	assertThat ( ont. containsAxiom ( otherAnnoAssertion ), is ( true ) )
7390	assertTrue ( cell. getTerrain ( ) instanceof Sand )
7391	assertThat ( sampledValue. getMeasurand ( ), equalTo ( measurand ) )
7392	assertTrue ( null == obj )
7393	Assert. assertEquals ( StatusCodes. NOT_FOUND, result. getStatusLine ( ). getStatusCode ( ) )
7394	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. ORCID_BIO_UPDATE, ScopePathType. ORCID_BIO_EXTERNAL_IDENTIFIERS_CREATE )
7395	Assert. assertTrue ( sum. longValue ( ) == 124L )
7396	assertEquals ( 0.003, ss. getPValue ( "pairedT" ), 0.001 )
7397	assertEquals ( prefix_and_search_result, result )
7398	Assert. assertEquals ( 2, terms. size ( ) )
7399	assertEquals ( 0, count )
7400	assertThat ( connectionsAfterReporting, is ( connectionsBeforeReporting ) )
7401	assertThat ( anyTS. getMinimum ( MINUTE_OF_DAY ), is ( 0 ) )
7402	assertEquals ( with, without )
7403	Assert. assertTrue ( entityManagerFactoryProvider. verify ( injectionTargetInformation ) )
7404	assertTrue ( table. isSelectable ( ) )
7405	arrays. assertDoesNotContain ( description, actual, value, index )
7406	assertNotNull ( "The connection is not null", recoveredConnection )
7407	Assert. assertTrue ( expected1. equals ( result ) || expected2. equals ( result ) )
7408	assertThat ( Duration. in ( units ). between ( t1, t2 ), is ( Duration. ofPositive ( ). months ( 2 ). days ( 29 ). hours ( 9 ). minutes ( 15 ). build ( ) ) )
7409	assertEquals ( "a.c", found )
7410	assertTrue (! result )
7411	assertEquals ( "<table> <colgroup> <col /> </colgroup><colgroup> <col /> <col /> <col /> </colgroup><thead> <tr> <th> </th><th>2008 </th><th>2007 </th><th>2006 </th></tr></thead><tbody> <tr> <th scope=\\"rowgroup\\"> Research and development </th><td> $ 1,109 </td><td> $ 782 </td><td> $ 712 </td></tr><tr> <th scope=\\"row\\"> Percentage of net sales </th><td> 3.4% </td><td> 3.3% </td><td> 3.7% </td></tr></tbody><tbody> <tr> <th scope=\\"rowgroup\\"> Selling, general, and administrative </th><td> $ 3,761 </td><td> $ 2,963 </td><td> $ 2,433 </td></tr><tr> <th scope=\\"row\\"> Percentage of net sales </th><td> 11.6% </td><
7412	Assert. assertEquals ( 3, ops. size ( ) )
7413	assertSame ( 2, a. length )
7414	Assert. assertTrue ( rose. containsRemote ( endp ) )
7415	assertTrue ( glass. isEmpty ( ) )
7416	assertEquals ( OK. getStatusCode ( ), getStatus ( response ) )
7417	assertEquals ( "http://localhost:8080/jaxrs-uri-template-1.0-SNAPSHOT/app/download/file/{path:.+}", result )
7418	assertThat ( expected, equalTo ( actual ) )
7419	MockEndpoint. assertIsSatisfied ( camelctx, 30, TimeUnit. SECONDS )
7420	assertEquals ( 2, micc. getInstanceCount ( ) )
7421	Assert. assertTrue ( connection. size ( ) == 7 )
7422	assertEquals ( 123L, deserialize. readLong ( ) )
7423	assertEquals ( 10, all. size ( ) )
7424	assertEquals ( "- 34, channel=0\\n", found )
7425	assertEquals ( cause, sut. getCause ( ) )
7426	Assert. assertNotNull ( freeTaggingService )
7427	assertEquals ( sandboxName, System. getProperty ( PROPERTY_NAME_SANDBOX_NAME ) )
7428	assertEquals ( expectedScript, observedScript )
7429	Assert. assertEquals ( Integer. class, clazz )
7430	assertEquals ( html, "<h3>title</h3>\\n" )
7431	assertFalse ( ex. isPrime ( - 231 ) )
7432	Assert. assertEquals ( "Test", out )
7433	assertEquals ( "The list from the detailed history, was not the same as returned from checkout", list, actualList )
7434	Assert. assertFalse ( this. component. equals ( new DefaultMatchCountImpl ( this. feature2, HP01_GENES ) ) )
7435	Assert. assertTrue ( "should have gotten a SequenceInputStream", ( inputStream instanceof SequenceInputStream ) )
7436	assertEquals ( Base64. getEncoder ( ). encodeToString ( baos. toByteArray ( ) ), iterators )
7437	assertTrue ( r1. contains ( d ) )
7438	assertFalse ( result )
7439	Assert. assertEquals ( trials / 2, p )
7440	assertEquals ( "Should return HTTP 201 (Created)", HttpStatus. CREATED, adapterResponse. getResponseStatus ( ) )
7441	assertEquals ( "(f=1)", o )
7442	assertNotNull ( result )
7443	assertEquals ( "Abies vulgaris aebiento", pn. canonicalName ( ) )
7444	assertEquals ( "&#;", writer. toString ( ) )
7445	assertThat ( target. matchExactly ( action ), is ( false ) )
7446	assertEquals ( TextUtil. readUTF8 ( path ), generator. getResult ( ) )
7447	Assert. assertNotEquals ( "Test that getLocationY returned an int value", - 1, val )
7448	Assert. assertEquals ( ECHO_STRING, outMessage )
7449	Assert. assertEquals ( "2013/9/3", result. getText ( ) )
7450	assertEquals ( "Incorrect Short Reason", "Platform Down leela.local CustomProperty (customPropertyValue) ", alertManager. getShortReason ( testPlatformAlert ) )
7451	assertEquals ( qf1, qf2 )
7452	assertNull ( ret )
7453	Assert. assertNotNull ( raised )
7454	assertEquals ( this. dataservice, thatDataservice )
7455	assertThat ( selectedCell, is ( "B2" ) )
7456	assertResultSet ( fc. getMembers ( filter, new TypedObjectNodeXPathEvaluator ( ) ), "EADD", "EADH" )
7457	assertThat ( range. normalize ( 10.0 ), equalTo ( 1.0 ) )
7458	Assert. assertEquals ( A_PASCAL_22, outMatrix )
7459	mockEndpoint. assertIsSatisfied ( )
7460	assertEquals ( typeId1, typeId2 )
7461	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
7462	Assert. assertEquals ( "SELECT 1 XOR 1 XOR 1;", text )
7463	assertEquals ( Sets. < Terminal > newHashSet ( ), g. getStart ( ). getFirst ( ) )
7464	assertEquals ( "<foo:bar id=\\"1\\" /><abc:def id=\\"2\\">Foo<p>Hello</p></abc:def><foo:bar>There</foo:bar>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
7465	assertNotFired ( watch )
7466	assertEquals ( 2, wlsClusterConfig. getClusterSize ( ) )
7467	assertTrue ( "Should have been blocked and unblocked", latch. await ( 10, TimeUnit. SECONDS ) )
7468	assertTrue ( correct. get ( namedEntity. getLabel ( ) ). equals ( disambiguatedURL ) )
7469	assertNoOrders ( )
7470	Assert. assertEquals ( now, value )
7471	assertEquals ( "hello", annotationProxy. version ( ) )
7472	assertFalse ( "Property still found", conf. containsKey ( key ) )
7473	assertEquals ( 1, x. size ( ) )
7474	assertEquals ( "success", value. asIs ( ) )
7475	assertThat ( harry. getFriends ( ), hasItems ( sally, steve ) )
7476	assertEquals ( "Failed to generate foreach loop using a String[]", FOREACH_STRING_IN_ARRAY_ONE_STATEMENT, foreachWithStringArray )
7477	assertEquals ( VALUE, jwt2. getJWTClaimsSet ( ). getSubject ( ) )
7478	assertThat ( converter. toJavaObject ( writableList ), is ( ( Object ) javaList ) )
7479	Assert. assertTrue ( received )
7480	assertTrue ( actual )
7481	assertEquals ( "", caller. getResponseBody ( ) )
7482	assertThat ( result, is ( canonicalize ( a, b, c ) ) )
7483	assertThat ( Cleaner. toString ( text ), equalTo ( text ) )
7484	assertArrayEquals ( new String [ ] { "A", "B", "C" }, r. readAtomStringList ( ) )
7485	Assert. assertEquals ( "Value is incorrect", map ( DATE_TIME_2_STRING, "test" ), value )
7486	Assert. assertEquals ( IrodsRuleInvocationTypeEnum. PYTHON, actual )
7487	assertEquals ( "Halo 3", OgnlRuntime. callMethod ( context, service, "getFullMessageFor", args ) )
7488	assertEquals ( "The return value is not correct.", Tag. EVAL_PAGE, this. tag. doEndTag ( ) )
7489	assertNotNull ( "Could not find workflow " + WF_APICONSUMER, wfResource )
7490	Assert. assertEquals ( 1, result. intValue ( ) )
7491	assertTrue ( value instanceof NullWritable )
7492	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff_maxheight_04_" ) )
7493	assertThat ( writer. get ( ), is ( "ABSENT" ) )
7494	assertThat ( event, is ( nullValue ( ) ) )
7495	assertEquals ( Integer. valueOf ( 0x42 ), event. getMessageId ( ) )
7496	assertTrue ( 5.0f == d. asFloat4 ( ) )
7497	assertEquals ( 1, ksession. fireAllRules ( ) )
7498	assertEquals ( true, result )
7499	assertEquals ( vals. length, rep. getNonZeroSize ( ) )
7500	EngineTestUtils. assertContentEquals ( inputFile, reconstructed )
7501	assertEquals ( "102030", ids )
7502	Assert. assertFalse ( result )
7503	assertFalse ( filter. shouldDeliverNotification ( eventContext ) )
7504	assertSingleNotificationType ( EventType. FAILED_AUTHENTICATION )
7505	assertEquals ( authority, getStats ( oobChannel ). target )
7506	assertTrue ( smartsheet instanceof SmartsheetImpl )
7507	assertTrue ( "Task 0 not implicated", info. getErrorInfo ( ). contains ( tids [ 0 ]. toString ( ) ) )
7508	assertTrue ( "This roles should have the privilege", role. hasPrivilege ( "priv1" ) )
7509	assertTrue ( plugin. getPlayerBanStorage ( ). getBan ( player. getUUID ( ) ). isSilent ( ) )
7510	Truth. assertThat ( name. toString ( ) )
7511	assertEquals ( 2, numberOfOccurences )
7512	assertEquals ( "TestValue", ( ( Context ) context. lookup ( "" ) ). lookup ( "test" ) )
7513	assertEquals ( "<p>Hello</p>", doc. getElementsByTag ( "div" ). get ( 0 ). html ( ) )
7514	assertServletHasHandlerForRequest ( )
7515	assertEquals ( tag, Tagger. getTag ( o ) )
7516	Assert. assertEquals ( Status. NOT_FOUND. getStatusCode ( ), resp. getStatus ( ) )
7517	assertTrue ( requestParameter. isFloat ( ) )
7518	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
7519	assertThat ( conf, containsString ( "<interaction><code value=\\"" + SystemRestfulInteraction. HISTORYSYSTEM. toCode ( ) + "\\"/></interaction>" ) )
7520	assertEquals ( grandFather. getFirstName ( ), firstName )
7521	assertEquals ( "ix", suffix )
7522	assertThat ( entry, is ( instanceOf ( CreateVertexLogEntry. class ) ) )
7523	Assert. assertTrue ( "Failed at numberStrings[" + i + "] = " + numberStrings [ i ], iSun == iMine )
7524	assertHandleEquals ( data, dest )
7525	assertEquals ( 0, result )
7526	assertions. endsWith ( sequence )
7527	assertThat ( actual, SameJSONAs. sameJSONAs ( "{\\n" + "  \\"failing-db\\" : {\\n" + "    \\"healthy\\" : false,\\n" + "    \\"message\\" : \\"Unable to connect to database : url username null\\"\\n" + "  },\\n" + "  \\"failing-host\\" : {\\n" + "    \\"healthy\\" : false,\\n" + "    \\"message\\" : \\"Unable to Connect to host http://host/ping\\"\\n" + "  }\\n" + "}" ). allowingExtraUnexpectedFields ( ) )
7528	Assert. assertTrue ( "tag should not be in collection", irodsTagValues. isEmpty ( ) )
7529	assertEquals ( expected, x )
7530	Assert. assertEquals ( HttpStatus. SC_OK, result. getCode ( ) )
7531	assertEquals ( "annotate result missmatch", expected, actual )
7532	assertEquals ( 1.0e-24 * 1.0e-24, VectorMath. dot ( a, a ) )
7533	login. assertIsConnectedAs ( "test1" )
7534	assertThat ( dog. names. length, is ( equalTo ( 2 ) ) )
7535	assertEquals ( "Serialized type", InstallSnapshot. class, serialized. getClass ( ) )
7536	assertTrue ( out. equals ( "M6 T2" ) )
7537	assertEquals ( Location. UNKNOWN, cargo. getDelivery ( ). getLastKnownLocation ( ) )
7538	assertThat ( nsp. getZeroDigit ( new Locale ( "fa" ) ), is ( '۰' ) )
7539	Assert. assertEquals ( 10, analyser. getLoadDelivered ( route ). get ( 0 ), 0.01 )
7540	assertThat ( other, DateMatchers. sameSecond ( date ) )
7541	assertMockEndpointsSatisfied ( )
7542	assertEquals ( TimeValue. ofSeconds ( 10 ), impl. getCorrectedReceivedAge ( entry ) )
7543	Assert. assertEquals ( 2, size )
7544	assertEquals ( "Certificate can be parsed", ValidationMessage. getMessage ( validationCheck, Locale. US ) )
7545	assertEquals ( streamName, sn. getName ( ) )
7546	assertThat ( parameters, equalTo ( Arrays. asList ( ( Object ) "foo" ) ) )
7547	assertSeen ( results, s1 )
7548	assertEquals ( expected, cassandraRowMapper. map ( resultSet ). next ( ) )
7549	assertEquals ( query, result )
7550	assertTrue ( response. getStatusCode ( ) == 422 )
7551	assertEquals ( 0, queryResult. getResult ( ). size ( ) )
7552	checker. assertEquals ( "[" + s + "][" + r + "][" + c + "]", exp, act )
7553	Assert. assertEquals ( ( Integer ) 11, res )
7554	assertThat ( result. toString ( ), containsString ( "<id>org.zeroturnaround.test-artifact-id</id>" ) )
7555	assertTrue ( ( "" + kieModuleMetaData. getPackages ( ) ). contains ( "junit" ) )
7556	assertEquals ( "db1720a5", rec. get ( "SUM" ) )
7557	assertSame ( cmd. returnValue, cmd. await ( 10, TimeUnit. MILLISECONDS ) )
7558	assertEquals ( "(a 3 4)\\n", found )
7559	Assert. assertEquals ( "222", scale )
7560	Assert. assertNull ( success )
7561	assertFalse ( "Exception occurred when reloading page", isElementPresent ( NotificationElement. class ) )
7562	assertEquals ( String. valueOf ( count ), line )
7563	Assert. assertTrue ( count > 0 )
7564	Assert. assertNotNull ( factory )
7565	assertTrue ( result. registration_ids. contains ( REGISTRATION_ID1 ) )
7566	Assert. assertFalse ( evaluator. hasPermission ( authentication, targetId, targetType, permission ) )
7567	assertEquals ( expected, actual )
7568	assertEquals ( 5, springBeansConfig. getTargets ( ). size ( ) )
7569	assertEquals ( "TestGetValues 0", valueList, concatenate. getValues ( context, item ) )
7570	Assert. assertTrue ( canUse )
7571	assertEquals ( "SELECT \\nFROM Log x0\\nLEFT OUTER JOIN PERSON x1 ON x0.parent = x1.id\\nWHERE (x1.sex =?)", cb. getSelect ( ). getSQL ( new ArrayList ( ) ) )
7572	assertFalse ( Framework. isInitialized ( ) )
7573	Assert. assertEquals ( 0l, ( long ) RequestObjectHelper. getStartOffset ( requestObject ) )
7574	assertThat ( snippetForDataTable ( "I have:" ), is ( equalTo ( expected ) ) )
7575	assertEquals ( keyExpected, keyBuilt )
7576	assertEquals ( "mihai", vars. get ( "architect" ) )
7577	assertTrue ( testFailed. isEmpty ( ) )
7578	assertEquals ( "<html><head></head><body>pre <script>inner</script> aft</body></html>", TextUtil. stripNewlines ( doc. html ( ) ) )
7579	MutableMessageFactoryTest. assertExpiryDateEquals ( expiryDateValue, message )
7580	Assert. assertEquals ( uuid, result )
7581	assertNull ( c. key ( ) )
7582	assertEquals ( response. get ( ). getUsername ( ), "name" )
7583	assertThat ( action. action, is ( RetryPolicy. RetryAction. RetryDecision. RETRY ) )
7584	assertEquals ( 0, votedAtSomething. reward ( ) )
7585	assertThat ( tags. size ( ), is ( 2 ) )
7586	RobotTestBedAssert. assertThat ( errors, is ( getExpectedErrors ( ) ) )
7587	assertTrue ( filter. matches ( record ) )
7588	assertListTEquals ( listT, 24, 42 )
7589	assertThat ( exportedYaml, containsString ( expectedYaml ) )
7590	assertEquals ( arr, resultArr )
7591	assertTrue ( format ( "expected:<%s> but got:<%s>", Arrays. toString ( e ), Arrays. toString ( a ) ), Arrays. equals ( e, a ) )
7592	assertEqualsIgnoreWhitespace ( expected, real )
7593	assertThat ( buffer, is ( equalTo ( f1 ) ) )
7594	assertions. isNotEqualTo ( expected )
7595	Assert. assertTrue ( enabledSections. isEmpty ( ) )
7596	assertEquals ( value, picker. getEditor ( ). getValue ( ) )
7597	assertEquals ( buf. toString ( ), "[\\"a\\", \\"b\\", \\"c\\"]" )
7598	assertThat ( TimestampInterval. parseISO ( "2012-04-01T14:15/P4DT1H45M" ), is ( expected ) )
7599	assertEquals ( "OK", result )
7600	assertEquals ( 2, constraints. size ( ) )
7601	assertEquals ( response. getStatus ( ), JsonResponseStatus. FAIL )
7602	assertEquals ( "There should be 0 errors", 0, chain. getChildren ( ). size ( ) )
7603	assertEquals ( newTd, store. update ( "aaaaaaaaaaaaaaaaaaaaaaa2", newTd ) )
7604	assertEquals ( JodaBeanUtils. collectionType ( test, Person. class ), Address. class )
7605	Assert. assertFalse ( nodes. isEmpty ( ) )
7606	assertEquals ( "Absolute RequestURI is wrong", wc. getBaseURI ( ). toString ( ), path )
7607	assertEquals ( expectedHtml, removeTextRange ( result ) )
7608	assertEquals ( 100_000_000, counter. get ( ) )
7609	Assert. assertTrue ( nsObjStr. matches ( ".*could not be serialized.*" ) )
7610	assertThat ( feature, is ( nullValue ( ) ) )
7611	assertNotNull ( service )
7612	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
7613	assertTrue ( list. isEmpty ( ) )
7614	assertThat ( result, equalTo ( output ) )
7615	assertEquals ( "test", m2. getHeader ( "Subject", null ) )
7616	assertSame ( System. getProperty ( "java.home" ), value. getValue ( ) )
7617	assertEquals ( maxLines + 1, os. toString ( "UTF8" ). split ( "\\\\s+\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\s+" ). length )
7618	assertEquals ( original, restored )
7619	assertIsAborted ( tx )
7620	assertCharacterCut ( input, expectedOutput, 1, 2 )
7621	assertThat ( target. containsLink ( link. getId ( ) ), is ( true ) )
7622	Assert. assertEquals ( "hi!", sampleType. element )
7623	assertEquals ( LIMIT * 2, dps. size ( ), 10 )
7624	assertOut ( "foo : for each (var i:int in obj) {\\n\\tbreak foo;\\n}" )
7625	assertEquals ( "Checking subseq as expected", expectedDna, subSeq. getSequenceAsString ( ) )
7626	assertFalse ( differentiator. isNew ( fileInputStream ) )
7627	assertEquals ( 1, constraints. size ( ) )
7628	assertEquals ( "Unexpected value for toString()", expexted, actual )
7629	assertThat ( stripHeader ( response ), containsString ( queryResult ) )
7630	assertThat ( result, is ( emptyCollectionOf ( StateFlowEntity. class ) ) )
7631	assertEquals ( expResult, result )
7632	assertEquals ( - 1L, myTestInstance. delete ( doc, Durability. NONE ) )
7633	assertTrue ( comparator. isDifferent ( lhs, rhs ) )
7634	assertEquals ( Arrays. asList ( "ls -ltr ", " grep -v hello" ), t. splitUnquoted ( str, "|" ) )
7635	assertEquals ( toolTip, tree. getToolTipText ( ) )
7636	assertEquals ( expResult, result )
7637	assertEquals ( EdmSimpleTypeKind. DateTime, edmDateType )
7638	assertThat ( inputSchema, equalTo ( properties. main. schema. getValue ( ) ) )
7639	assertEquals ( 12, results. size ( ) )
7640	assertThat ( new SomeClass ( ), is ( sut ) )
7641	assertThat ( error, containsString ( "Config file " + file. getAbsolutePath ( ) + " does not exist." ) )
7642	assertArrayEquals ( new double [ ] { 2.0, 1.0, 0.6666 }, airMass, 1e-4 )
7643	assertEquals ( ace, parsed )
7644	assertPerson ( person )
7645	assertEquals ( "1", msg. remove ( key ) )
7646	assertThat ( app. getTest ( ), equalTo ( val ) )
7647	assertEquals ( expectedFormKey, actualFormKey )
7648	assertEquals ( NOT_FOUND, response. getStatus ( ) )
7649	Assert. assertEquals ( CurrentUser. getUser ( ), FalconTestUtil. TEST_USER_2 )
7650	Assert. assertEquals ( expectedString, resultBootstrapString )
7651	assertEquals ( "za 3 dny 15 hodin 38 minut", t. format ( durations ) )
7652	assertEquals ( "\\"root\\" (size: 60.0x20.0)" + NL + "- \\"n1\\" (size: 60.0x20.0)" + NL + "- - \\"n1.1\\" (size: 60.0x20.0)" + NL + "- - \\"n1.2\\" (size: 60.0x20.0)" + NL + "- \\"n2\\" (size: 60.0x20.0)" + NL + "- - \\"n2.1\\" (size: 60.0x20.0)" + NL, s )
7653	assertThat ( description. toString ( ), is ( "is \\"x\\"" ) )
7654	Assert. assertTrue ( patientService. isIdentifierInUseByAnotherPatient ( patientIdentifier ) )
7655	Assert. assertArrayEquals ( SOL_22_EXPECTED, SOL_22_ACTUAL, DELTA )
7656	Assert. assertEquals ( newCfg, ctx. getConfiguration ( ) )
7657	assertEquals ( "Date not equal to itself ISO formatted and parsed", d. getTime ( ), d2. getTime ( ) + d. getTime ( ) % 1000 )
7658	assertEquals ( 60, exp )
7659	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
7660	Assert. fail ( "Cannot marshall a complex map" )
7661	assertEquals ( "The NAT behavior was not parsed correctlay.", this. expectedResult, this. actualResult )
7662	assertFalse ( v1. property ( "name" ). isPresent ( ) )
7663	Assert. assertEquals ( before - 1, after )
7664	assertEquals ( expected, result )
7665	assertEquals ( "</1>;ver=2.2", Link. serialize ( link ) )
7666	assertEquals ( "IP address should be set to the IP address that was specified", IP_ADDRESS, ipAddress )
7667	assertNotNull ( jsonAllUserJobSummary )
7668	assertEquals ( 15, sumXValues )
7669	assertThat ( actual, containsString ( "<h1>Name</h1><div class=\\"nameElement\\">given <b>FAM1 </b></div><h1>Address</h1><div><span>line1 </span><br/><span>line2 </span><br/></div></div>" ) )
7670	assertThat ( response. getStatus ( ), is ( Response. Status. OK. getStatusCode ( ) ) )
7671	assertEquals ( resizer, receivedResizer )
7672	assertEquals ( "GBP", test. getCode ( ) )
7673	assertEquals ( DummyDrawHandler. drawTextToString ( "Das ist \\" dfs ", 10, 20, AlignHorizontal. LEFT, ColorOwn. RED ), drawHandler. getLastDrawCall ( ) )
7674	assertThat ( myBigDecimal, describedAs ( "a big decimal equal to %0", equalTo ( myBigDecimal ), myBigDecimal. toPlainString ( ) ) )
7675	assertEquals ( - 3600000L, y. getFirstMillisecond ( ) )
7676	assertEquals ( 1, tasks. size ( ) )
7677	assertEquals ( 4, envs. size ( ) )
7678	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
7679	assertEquals ( "2.1e2", FmtUtils. stringForLiteral ( nl, getContext ( ) ) )
7680	assertThat ( actual, is ( equalTo ( expected ) ) )
7681	assertEquals ( 1, files. size ( ) )
7682	assertEquals ( 1, null1Dao. create ( nullThing ) )
7683	assertThat ( multiSupplier. authForBuild ( ), is ( registryConfigs ) )
7684	assertThat ( string, is ( nullValue ( ) ) )
7685	assertThat ( start. until ( end, TimeUnit. SECONDS ) < 1L, is ( true ) )
7686	assertFalse ( "Did not create DatagramSocket", socket == null || socket instanceof MulticastSocket )
7687	assertTrue ( checker. isDetected ( ) )
7688	assertEquals ( 1, result. getLength ( ) )
7689	assertFalse ( checker. isAuthorized ( context, profiles, null, null ) )
7690	assertThat ( labels, equalTo ( Arrays. asList ( "2013/03/12 01:30:00", "01:30:10", "01:30:20" ) ) )
7691	assertEquals ( 1, result. size ( ) )
7692	N4CliHelper. assertExpectedOutput ( expectedString, out )
7693	assertEquals ( input, output )
7694	assertEquals ( NUM_WRITERS * ENTRIES, countHLog ( logfile, fs, conf ) )
7695	assertTriggered ( fieldValueAlertCondition, result )
7696	assertResultSet ( res )
7697	assertEquals ( "No rule is set", 0, ss. size ( ) )
7698	assertEquals ( expecting, result )
7699	Assert. assertNull ( dummy )
7700	assertEquals ( 4, maleFriends. size ( ) )
7701	assertEquals ( "3 jam kemudian", t. format ( new Date ( 1000 * 60 * 60 * 3 ) ) )
7702	assertThat ( result, is ( objectId ) )
7703	Assert. assertTrue ( polygon. getInteriorRings ( ). size ( ) == 0 )
7704	assertThat ( testOutcome. getUserStory ( ). getStoryClassName ( ), is ( MyApp. MyUserStory. class. getName ( ) ) )
7705	assertEquals ( subUsers, u. getSubusers ( ) )
7706	assertThat ( ( String ) cache. get ( "aaa" ), is ( "1" ) )
7707	assertEquals ( 1, rules )
7708	assertTrue ( count > 0 )
7709	arrays. assertNotEmpty ( description, null )
7710	assertEquals ( 1234, executeTestMethod ( test, Integer. class, null, 1234 ). intValue ( ) )
7711	Assert. assertEquals ( allIssues. size ( ), uniqueIssueIds. size ( ) )
7712	assertNotEquals ( optimize1, optimize2 )
7713	assertEquals ( 1, sql. insertInto ( table ( "post" ) ). columns ( field ( "id" ), field ( "title" ) ). values ( 1L, "High-Performance Java Persistence" ). execute ( ) )
7714	paths. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE )
7715	assertions. isNull ( )
7716	Assert. assertEquals ( 0, buffer. length ( ) )
7717	assertArrayEquals ( y, x )
7718	assertEquals ( 128, signatureValue. length )
7719	Assert. assertEquals ( expected. trim ( ), dataStr. trim ( ) )
7720	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoISSQNTotal ( ). toString ( ) )
7721	Assert. assertEquals ( "testsitename2", resultEntity. getSiteName ( ) )
7722	assertEquals ( result, PI, 0.0 )
7723	assertThat ( jmc. convert ( makeEvent ( quotedMsg, NO_ARGS ) ), is ( quotedMsg ) )
7724	assertEquals ( collectionA, Arrays. asList ( a ) )
7725	Assert. assertEquals ( value, got. getpBigDecimal ( ). toString ( ) )
7726	assertEquals ( "<p><i><b>This</b></i> is <i><b>jsoup</b></i></p>", doc. body ( ). html ( ) )
7727	Assert. assertEquals ( recoveryECKey. getPublicKeyAsHex ( ), key. getPublicKeyAsHex ( ) )
7728	assertEquals ( null, result )
7729	Assert. assertEquals ( "Local action \\"foo\\" ran in background successfully: Map = " + NL + "{" + NL + "    key1 = " + "val1 java.lang.String" + NL + "    key2 = val2 java.lang.String" + NL + "}" + " java.util.HashMap" + NL, messages. getRunningInBgLocallySuccess ( "foo", params ) )
7730	Assert. assertNotNull ( "problem retrieving PersonMergeLog by UUID", retrieved )
7731	assertThat ( sampleTestClass. pages, is ( not ( nullValue ( ) ) ) )
7732	assertEquals ( expectedProfile. getSid ( ), resultantProfile. getSid ( ) )
7733	assertThat ( route, canHandle ( GetAnnotatedController. class, "withRelativePath" ) )
7734	assertSame ( t. toLocalTime ( ), LocalTime. NOON )
7735	assertAnnotations ( 2, CommsIdentifier. class, new TestCommsIdentifier ( 0, "(+44)1981 634528", "telephone" ), new TestCommsIdentifier ( 1, "0800-123-456", "telephone" ) )
7736	Assert. assertEquals ( "<ValidityPeriod/>", serializedData )
7737	assertEquals ( "a,b" + recordSeparator, sw. toString ( ) )
7738	Assert. assertTrue ( result. isValid ( ) )
7739	assertTrue ( rec_cnt == 0 )
7740	assertTrue ( msg, dynAny. equal ( dynAny2 ) )
7741	assertEquals ( "", hd. getContent ( ) )
7742	Assert. assertEquals ( - 2, cpu. getRegister ( ), 0 )
7743	assertThat ( peek. getPeriodicAverageLatencyInMs ( two ), is ( ( 105d + 34d + 97d ) / 3 ) )
7744	assertEquals ( "Select script should match expected", expectedSelectWithUnion ( ), result )
7745	assertEquals ( expected, roundTrip. getResults ( ) )
7746	Assert. assertEquals ( expectedNames, names )
7747	Assert. assertEquals ( 8, violations. size ( ) )
7748	assertEquals ( expectedResult, mapping. apply ( sourceLinking ) )
7749	Assert. assertEquals ( 201, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
7750	Assert. assertEquals ( "{" + "\\"@odata.context\\":\\"../$metadata#ESCollAllPrim(1)/CollPropertyDecimal\\"," + "\\"@odata.metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\"," + "\\"value\\":[\\"12\\",\\"-2\\",\\"1234\\"]}", resultString )
7751	assertTrue ( SUCCESS_MSG, monitor. setAsync ( key, value ). get ( ) )
7752	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 03" ) )
7753	assertThat ( entity. globalIdDuringAwakeFromInsertion ( ). isTemporary ( ), is ( true ) )
7754	assertNotNull ( m )
7755	assertThrows ( VolumeChooserException. class, ( ) -> chooseForTable ( ) )
7756	assertTrue ( result. getIndexUpdates ( ) > 0 )
7757	assertEquals ( 14, classUnderTest. getNumRankFileSquaresAvailable ( Position. h8 ) )
7758	assertFalse ( victim. accept ( request ) )
7759	assertEquals ( sb. toString ( ), qb. prepareStatementString ( ) )
7760	assertEquals ( "calendarColumn at absolute column " + column, calendarColumn, dayGridPosition. x )
7761	assertNotNull ( parseResults. get ( FILE_PATH ) )
7762	assertSame ( "Wrong pattern", p, PropertyConverter. toPattern ( p ) )
7763	assertTrue ( uri. endsWith ( "D.ttl" ) )
7764	assertThatSelectedValueIs ( "a20" )
7765	assertEquals ( new ModelNode ( ). add ( getRootFeature ( ) ). add ( getSubsystemFeature ( ) ). add ( getAttrObjFeature ( false ) ). add ( getTestResourceFeature ( false ) ), executeForResult ( operation ) )
7766	assertEquals ( config. getWriteTimeoutInMillis ( ), acceptedConfig. getWriteTimeoutInMillis ( ) )
7767	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 04" ) )
7768	assertFalse ( "Expected TokenSchema integer validation failure did not succeed", schema. validate ( integerEntity ) )
7769	assertEquals ( networkActivationFunction. getType ( ), activationFunction. getType ( ) )
7770	Assert. assertEquals ( 3, activityNodes. size ( ) )
7771	assertEquals ( t1, t2 )
7772	assertThat ( log, is ( Files. readAllLines ( Paths. get ( "src/test/resources/data/expected/DebugSqlFilter", "testExecuteQueryFilter.txt" ), StandardCharsets. UTF_8 ) ) )
7773	assertEquals ( key. getDefaultValue ( ), this. impl. getString ( key ) )
7774	assertTrue ( logging. getLog ( ). contains ( "RuleSet description is missing." ) )
7775	assertTrue ( e instanceof IllegalStateException )
7776	Assert. assertNull ( job )
7777	assertEquals ( 0.1f, mutNum. floatValue ( ), 0.01f )
7778	assertEquals ( expected, actual )
7779	Assert. fail ( )
7780	assertThat ( pickupTruck, hasProperty ( "model" ) )
7781	assertEquals ( true, options. verbose ( ) )
7782	Assert. assertEquals ( IsolationLevels. READ_COMMITTED, connection. getIsolationLevel ( ) )
7783	assertOut ( "/**\\n * @const\\n * @type {number}\\n */\\nRoyaleTest_A.prototype.foo = 420" )
7784	arrays. assertDoesNotContain ( description, actual, 'a', null )
7785	Assert. assertTrue ( IOUtil. isUseInetAddress ( ) )
7786	assertEquals ( SchemaAndValue. NULL, schemaAndValue )
7787	assertNotNull ( "Returned input stream is null", is )
7788	Assert. assertEquals ( "moduleA", foundModule )
7789	assertThat ( result, is ( not ( nullValue ( ) ) ) )
7790	assertEquals ( TARGET + DOCNAME, docName ( ) )
7791	assertTrue ( true )
7792	assertThat ( unlocked. superMethod ( ), equalTo ( 5.0 ) )
7793	Assert. assertSame ( MissingNode. getInstance ( ), result )
7794	assertMethodCall ( "matchmakingService.marry(firstName, lastName)", "matchmakingService", "marry", firstNameParameter, lastNameParameter )
7795	assertNotNull ( in )
7796	assertEquals ( buf. toString ( ), "EXISTING--Z" )
7797	assertEquals ( date. format ( DateTimeFormatter. ofPattern ( "yyyy-MM-dd" ) ), f )
7798	assertTrue ( "Expected:\\n" + new String ( expected_res ) + ". \\nGot:\\n" + transRes, StreamUtils. compareCharStreams ( new ByteArrayInputStream ( expected_res ), new ByteArrayInputStream ( transRes. getBytes ( ) ) ) )
7799	assertNull ( result. getContainedItemSchema ( ) )
7800	assertEquals ( "string", shortForm )
7801	assertTrue ( violated )
7802	Assert. assertEquals ( "[14] :  E4 0C 86 0A  ED 3C 3B 8B  03 92 8D 0E  00 12", HexUtil. toFormattedHexString ( bytes ) )
7803	assertTokens ( integer ( 1 ), Tokens. PLUS, integer ( 2 ), new CommentToken ( "#", " + 3" ) )
7804	assertEquals ( "clone=true&clone_permissions=true", getLastRequestQuery ( ) )
7805	assertTrue ( "Incorrect match: " + testPatterns [ i ] + " vs " + posSeq [ i ] [ j ], mat. matches ( ) )
7806	context. assertTrue ( config. succeeded ( ) )
7807	Assert. assertEquals ( expResult, result )
7808	JSONAssert. assertNotEquals ( "Message", "{id:1234}", actual, LENIENT )
7809	validator. verifyTextInLog ( "loaded class java.sql.SQLException" ). verifyTextInLog ( "loaded class javax.xml.ws.Holder" ). verifyTextInLog ( "loaded class javax.xml.bind.JAXBException" ). verifyTextInLog ( "loaded class javax.transaction.TransactionManager" ). verifyTextInLog ( "loaded class javax.transaction.InvalidTransactionException" ). assertThatLogLine ( is ( "java.specification.version=" + JVM_SPEC_VERSION ), greaterThanOrEqualTo ( 1 ) )
7810	assertEquals ( "joe", StaticUserWebFilter. getUsernameFromConf ( conf ) )
7811	assertTrue ( ( ( JoinPredicate ) predicate. getLeftClause ( ) ). getLeftClause ( ). isMakeDep ( ) )
7812	assertEquals ( b. getId ( ), 123 )
7813	assertEquals ( "super", occs. getNames ( ). get ( 0 ). getImage ( ) )
7814	assertThat ( getServerStartupInfo ( "ms1" ). getClusterName ( ), equalTo ( "cluster1" ) )
7815	assertThat ( hiveConf. getVar ( ConfVars. METASTOREURIS ), is ( THRIFT_URI ) )
7816	assertEquals ( executions. get ( ), 0 )
7817	assertEquals ( gets. count ( ), END_EVENT_NUMBER, 0.000001 )
7818	assertEquals ( 2.71f, array2. getFloat ( 0 ), 0.01 )
7819	assertEquals ( VisitStatus. BYPASS, getVisitStatus ( text ) )
7820	assertThat ( replication. getEventId ( ), is ( EVENT_ID ) )
7821	assertSame ( o, HttpUtils. attemptEncodeQueryParam ( o ) )
7822	Assert. assertEquals ( 2, reactorHandlerRegistry. getEntrypoints ( ). size ( ) )
7823	Assert. assertTrue ( "did not return a checksum", computedChecksum. length ( ) > 0 )
7824	Assert. assertEquals ( "what does a wolf eat", this. realiser. realise ( p ). getRealisation ( ) )
7825	assertEquals ( "34\\n", found )
7826	Assert. assertEquals ( expected, BitBufferHelper. toNumber ( array, i ) )
7827	assertEquals ( uri, Prefixes. getURI ( prefix ) )
7828	assertEquals ( "12", res )
7829	assertEquals ( 64, rrs. size ( ) )
7830	assertEquals ( 64, program. getMemSize ( ) )
7831	assertEquals ( origin, resourceEditProperty. getOrigin ( ) )
7832	assertEquals ( 0, actual. size ( ) )
7833	assertThat ( "getValue", node. getValue ( ), is ( - 2147483648 ) )
7834	assertEquals ( "http://up.example.org/123?dir=rtl", view. getHref ( ). toString ( ) )
7835	Assert. assertEquals ( "Fail count record of room", i, cr )
7836	Assert. fail ( "expecting conditional check exception" )
7837	assertThat ( Whitebox. invokeMethod ( target, "getConvPortIdByMatches", nwId, matches ), is ( notNullValue ( ) ) )
7838	assertEquals ( 1, res )
7839	assertTrue (! client. getStack ( ). getBlockwiseLayer ( ). isEmpty ( ) )
7840	assertEquals ( 0.0, testResult, 0.0 )
7841	result. assertIsSatisfied ( )
7842	assertThat ( is. read ( ), is ( - 1 ) )
7843	assertThat ( issue. getTitle ( ), is ( title ) )
7844	assertNotEquals ( z1, z2 )
7845	assertNotNull ( t )
7846	assertTrue ( Arrays. equals ( pktSerialized, actual ) )
7847	Assert. assertEquals ( "3.10", retornoConsultaCadastro. getVersao ( ) )
7848	assertEquals ( "3 �乇� 倬�卮", t. format ( new Date ( 0 ) ) )
7849	Assert. assertTrue ( true )
7850	assertNotNull ( tiposBecas. getId ( ) )
7851	Assert. assertEquals ( HtmlTestData. IFRAME_PAGE, driver ( ). getCurrentUrl ( ) )
7852	Assert. assertTrue ( impl. canCachedResponseBeUsed ( host, request, entry, now ) )
7853	Assert. assertNotNull ( inputField )
7854	assertTrue ( c1 instanceof PublicCloneable )
7855	assertTrue ( jq ( ".zshighlight" ). css ( "display" ). equals ( "none" ) )
7856	assertNotNull ( service )
7857	Helpers. assertJson ( jsonElement. toString ( ), expectedJson )
7858	Assert. fail ( "Exception expected." )
7859	Assert. assertTrue ( session. getHtmlToDisplay ( ). indexOf ( "<input type=\\"text\\" id=\\"w1\\" value=\\"Unknown Location\\"" ) > - 1 )
7860	assertSame ( f, b. getFactory ( ) )
7861	assertEquals ( "update EMPLOYEE\\n" + "set SUPERIOR_ID = (select emp2.ID\\n" + "from EMPLOYEE emp2\\n" + "where emp2.ID = EMPLOYEE.ID)", sql. getSQL ( ) )
7862	assertTrue ( ex. getMessage ( ). equals ( "Fail all retrials!" ) )
7863	Assert. assertEquals ( "Hello Stan", server. getComponentValue ( "greeting" ) )
7864	assertEquals ( 1000, executor. getMaximumPoolSize ( ) )
7865	assertThat ( ruleManager. listGlobals ( ). get ( "bla" ), is ( "java.util.Random" ) )
7866	assertEquals ( "Should get a 200 response", HttpStatus. OK, postgresFeedSource. getFeed ( getFeedRequest ). getResponseStatus ( ) )
7867	assertEquals ( 8, bs. capacity ( ) )
7868	assertEquals ( channel. position ( ), read )
7869	assertEquals ( expectedTransportCosts + expectedActivityCosts, iCosts, 0.01 )
7870	assertTrue ( "pool min idle size should be equal to max idle, despite the wrong configuration", poolConfig. getMinIdle ( ) == poolConfig. getMaxIdle ( ) )
7871	assertMultilinesEquals ( "�����������������������������������������������������������������������������������
7872	assertEquals ( false, passedSessionWaitCall. await ( 1, TimeUnit. SECONDS ) )
7873	assertThat ( "Expceted principal not found", rmap, hasItem ( ACTOR_GROUP_PRINCIPAL ) )
7874	assertTrue ( "娑���". equals ( new String ( result. findName ( ). getBytes ( "GBK" ), "UTF-8" ) ) )
7875	assertTokenStreamContents ( tokenizer, stringArray ( "example.com" ) )
7876	Assert. assertSame ( o, ts. create ( o ) )
7877	Assert. assertEquals ( "hello", executeOperation ( op ). asString ( ) )
7878	assertEquals ( policy, "Recycle" )
7879	Assert. assertEquals ( 43, map. size ( ) )
7880	Assert. assertNull ( caixa )
7881	assertEquals ( expecting, result )
7882	Assert. assertEquals ( "Wrong port", new PortNumber ( 6653L ), deserializedMessage. getPort ( ) )
7883	context. assertIsSatisfied ( )
7884	assertUnderflow ( ( long ) x * ( long ) y, result )
7885	assertTrue ( fileSizeAfter < fileSizeBefore )
7886	assertEquals ( "The return value is not correct.", Tag. EVAL_PAGE, this. tag. doEndTag ( ) )
7887	assertThat ( appMetadataResource. getFilename ( ), is ( "foo-source-metadata" ) )
7888	assertThat ( score, is ( 3900 ) )
7889	assertEquals ( new Year ( 2000 ), editor. getValue ( ) )
7890	assertEquals ( "from SURVEY survey where rownum <? order by survey.NAME asc", toString ( query ) )
7891	assertEquals ( new File ( dir, "rest/foo" + ext ), fileForURI ( uri, "/rest", "/fedora/rest", dir, ext ) )
7892	Assert. assertEquals ( codigoDeBarras, produto. getCodigoDeBarras ( ) )
7893	assertEquals ( sampledDataSourceList, dataSourceChartGroup )
7894	assertEquals ( "http://localhost:8080/test", builder. build ( "testing" ). toString ( ) )
7895	assertEquals ( Arrays. asList ( "a", "c", "b" ), fsa. getStates ( ) )
7896	assertEquals ( 1, hits. totalHits )
7897	assertNull ( "No arg constructor", realm. getName ( ) )
7898	assertEquals ( 0, tasks. size ( ) )
7899	DataMockery. assertREQMODWithGetRequestResponse ( response )
7900	assertEquals ( "WikiBot", output. get ( id ) )
7901	assertEquals ( 200, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
7902	assertTrue ( authorizer. isAuthorized ( context, profiles ) )
7903	assertThat ( encoded, stringContainsInOrder ( "{", "\\"resourceType\\": \\"Patient\\",", "\\"contained\\": [", "{", "\\"resourceType\\": \\"Condition\\",", "\\"id\\": \\"1\\"", "}", "],", "\\"extension\\": [", "{", "\\"url\\": \\"test\\",", "\\"valueReference\\": {", "\\"reference\\": \\"#1\\"", "}", "}", "],", "\\"birthDate\\": \\"2016-04-05\\"", "}" ) )
7904	assertThat ( iter. next ( ). toString ( ), is ( "Key: 22 Value: 222" ) )
7905	assertEquals ( err, result )
7906	assertEquals ( actualLogMessage, expectedLogMessage )
7907	assertEquals ( Arrays. asList ( "b" ), resolver. resolve ( ) )
7908	assertEquals ( 5, count )
7909	Assert. assertEquals ( demoService. getExportedUrls ( ). get ( 0 ). getPort ( ), helloService. getExportedUrls ( ). get ( 0 ). getPort ( ) )
7910	Assert. assertTrue ( actual, actual. contains ( TEST_MSG ) )
7911	assertThat ( terminalStep. wasRun ( ), is ( true ) )
7912	assertThat ( or. isSatisfied ( ), is ( true ) )
7913	Assert. assertNull ( connectionManager. createConnectionDetails ( DOES_NOT_EXIST ) )
7914	assertThat ( getPivotModel ( ). getCurrentMdx ( ), is ( equalTo ( "SELECT {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS, " + "{[Promotion Media].[All Media], [Promotion Media].[Bulk Mail], [Promotion Media].[Cash Register Handout], " + "[Promotion Media].[Daily Paper], [Promotion Media].[Daily Paper, Radio], [Promotion Media].[Daily Paper, Radio, TV], " + "[Promotion Media].[In-Store Coupon], [Promotion Media].[No Media], [Promotion Media].[Product Attachment], " + "[Promotion Media].[Radio], [Promotion Media].[Street Handout], [Promotion Media].[Sunday Paper], " + "[Promotion Media].[Sunday Paper, Radio], [Promotion Media].[Sunday Paper, Radio, TV], " + "[Promotion Media].[TV]} ON ROWS FROM [Sales]" ) ) )
7915	assertReflectionEquals ( user, serializedUser )
7916	assertLines ( lines )
7917	assertEquals ( msg, redis. bgrewriteaof ( ) )
7918	Assert. assertEquals ( 0, dfsadmin. run ( args1 ) )
7919	assertEquals ( expResult, result )
7920	assertEquals ( expResult, result )
7921	assertNotNull ( textFileSaver )
7922	Assert. assertTrue ( errorCode. equals ( fielderror. getCode ( ) ) )
7923	assertTrue ( "Only one home page. Found: " + countHomeStates, countHomeStates == 1 )
7924	assertEquals ( "token 1\\ntoken 1\\n", found )
7925	Assert. assertEquals ( "IN([CAT.COL];\\"value\\")", formatted )
7926	assertFalse ( clientStreamListener. headers. isDone ( ) )
7927	assertTrue ( e. getMessage ( ). contains ( "Failed to determine the identifier of port" ) )
7928	assertEquals ( expected, resultVal )
7929	assertEquals ( date, fileTime. getTime ( ) )
7930	assertEquals ( entity, response. readEntity ( String. class ) )
7931	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Receive>" + "Hey no tags!" + "</Receive>", elem. toXml ( ) )
7932	Assert. assertEquals ( "Incorrect label set by constructor", lbl, item. getDecoratedLabel ( ) )
7933	Assert. assertEquals ( 2, routes. size ( ) )
7934	assertThat ( axioms. isEmpty ( ), is ( true ) )
7935	assertTrue ( result. containsAll ( defaultPlugins ) )
7936	assertThat ( record. get ( ). getRecentProjects ( ), Matchers. contains ( new RecentProjectRecord ( projectId, timestamp ) ) )
7937	assertEquals ( p, fromDenseRecursiveForm ( recForm, 3, MonomialOrder. DEFAULT ) )
7938	assertEquals ( 1, sol. getUnassignedJobs ( ). size ( ) )
7939	assertEquals ( "{\\"date1\\":" + object. date1. getTime ( ) + ",\\"string1\\":null,\\"string2\\":null,\\"string3\\":null}", processor. generate ( object ) )
7940	Assert. assertTrue ( expected_1. equals ( v ) || expected_2. equals ( v ) )
7941	assertEquals ( 10 * Constants. PB, mConfiguration. getBytes ( PropertyKey. WEB_THREADS ) )
7942	assertNotNull ( profile )
7943	assertNull ( ruleCat )
7944	assertEquals ( expected, result )
7945	assertEquals ( 1, cancelledRequests. size ( ) )
7946	assertEquals ( expected, actual )
7947	assertEquals ( 2, posts. size ( ) )
7948	assertOut ( "/**\\n * @param {string} bar\\n * @param {number=} baz\\n * @return {number}\\n */\\nRoyaleTest_A.prototype.foo = function(bar, baz) {\\n\\tvar self = this;\\n\\tbaz = typeof baz!== 'undefined'? baz : null;\\n\\treturn -1;\\n}" )
7949	assertThat ( webapp. getBuildImage ( ), is ( notNullValue ( ) ) )
7950	assertResults ( o, results )
7951	assertThat ( command. accept ( state ), is ( true ) )
7952	assertThat ( query. count ( ), is ( 3L ) )
7953	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<dummyNode BeginColumn=\\"1\\" BeginLine=\\"1\\" EndColumn=\\"0\\" EndLine=\\"0\\" FindBoundary=\\"false\\"\\n" + "           Image=\\"Foo\\"\\n" + "           SingleLine=\\"false\\"/>", xml )
7954	assertTrue ( "Can't find statement", m. contains ( expectedStatement ( SSH_BASE ) ) )
7955	assertEquals ( "IdentifierLabel", resource. getIdentifier ( ). get ( 0 ). getLabel ( ). getValue ( ) )
7956	assertThat ( networkId, is ( "NewNetworkID" ) )
7957	assertEquals ( "toString() failed", Long. toString ( intVal ), testVal. toString ( ) )
7958	assertTrue ( String. format ( "Inactivity time should be less after refresh, but have %d > %d", inactivityTime, inactivityTimeAfterRefresh ), inactivityTime > inactivityTimeAfterRefresh )
7959	Assert. assertEquals ( expected, actuals )
7960	assertMockEndpointsSatisfied ( )
7961	assertThat ( output. toString ( ), is ( "dlittlebadson" ) )
7962	assertTrue ( ls1. get ( 0 ). equals ( ls2. get ( 0 ) ) )
7963	assertTrue ( testListener. hasBeenCalled ( ) )
7964	assertSame ( secondTry, st )
7965	Assert. assertNull ( "school year should be null", result )
7966	assertions. doesNotContain ( 6d, 8d )
7967	assertEquals ( 123, this. model. getPosition ( ) )
7968	assertEquals ( expectedQuery, actualQuery )
7969	assertGreater ( "Grid should scroll vertically while editing in unbuffered mode", getGridVerticalScrollPos ( ), originalScrollPos )
7970	assertEquals ( exp, res )
7971	assertEquals ( SecurityGroupEntityMgr. findById ( this. em, NEW_SECURITY_GROUP_SAME_SFC_BINDED_UPDATE_ELEMENT_ID. getId ( ) ). getNetworkElementId ( ), SECURITY_GROUP_SFC_BINDED. getNetworkElementId ( ) )
7972	assertEquals ( 32.8125, calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
7973	UnitTestUtils. assertEquals ( "m3*m4=m5", m3. multiply ( m4 ), m5, entryTolerance )
7974	FeedChecker. assertQ ( "The XML error is not correct", result, "//error[.='" + errorMessage + "']" )
7975	Assert. assertEquals ( 1, response. getTotalHits ( ). value )
7976	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff30_" ) )
7977	Assert. assertTrue ( out. contains ( "ford-1999" ) )
7978	assertTrue ( convertedValue instanceof Integer )
7979	assertEquals ( " ::  took 0 ms.", result )
7980	assertEquals ( "file://dev/null", mods. get ( 0 ). getFolderName ( ) )
7981	assertTrue ( "DateFormat should be \\"dd/mon/yyyy:HH:mm:ss Z\\"", timestamp. matches ( regex ) )
7982	Assert. assertEquals ( "presetTargetUser", extraInfo. getString ( "remoteUser" ) )
7983	Assert. assertArrayEquals ( new long [ ] { 1L }, filter. getBits ( ) )
7984	assertTrue ( "No header", message. contains ( " Id=" ) )
7985	assertEquals ( expectedQuery, actualQuery )
7986	assertTrue ( "Wrong results of the grep command", output. contains ( "java.version" ) )
7987	assertEquals ( true, classUnderTest. getInitSessionTimezone ( ) )
7988	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
7989	Assert. assertNotNull ( "null execOut", execOut )
7990	assertTrue ( sql, sql. startsWith ( "SELECT " + "#result('MAX(t0.ESTIMATED_PRICE)' 'java.math.BigDecimal''sc0') " + "FROM PAINTING t0" ) )
7991	assertEquals ( "Can't come back", ShadowToast. getTextOfLatestToast ( ) )
7992	Assert. assertEquals ( namespace, event. getNamespaces ( ). next ( ) )
7993	assertEquals ( fileMd5, EncryptKit. md5File ( new File ( EncryptKitTest. class. getResource ( "/assets/MD5.txt" ). getPath ( ) ) ) )
7994	assertEquals ( "AAA,BBB,CCC", strList )
7995	assertEquals ( protocolFamily, h. getProtocolFamily ( ) )
7996	assertTrue ( measures. toString ( ), measures. isEmpty ( ) )
7997	assertTrue ( relationshipManager. inheritsPrivileges ( john, operator ) )
7998	assertParsingIsCorrect ( nativeQuery, expectedCacheName )
7999	Assert. assertEquals ( "Error downloading private file", file. getTotalMediaSize ( ). longValue ( ), bytes )
8000	Assert. assertEquals ( data, handler. getCreatedObs ( ). getComplexData ( ). getData ( ) )
8001	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
8002	Assert. assertEquals ( fileEntry. getLabel ( ) + " was tagged with tag1,tag2,tag3.", text )
8003	Assert. assertEquals ( "null", urlEncodedValueReturned )
8004	Assert. assertTrue ( connectLatch. await ( 10, TimeUnit. SECONDS ) )
8005	assertCapabilities ( resourceType )
8006	assertEquals ( expectedScript, observedScript )
8007	assertThat ( designDocs. size ( ), not ( 0 ) )
8008	assertEquals ( 50, p. getAge ( ) )
8009	assertThat ( results. get ( 0 ). getTestSteps ( ). size ( ), is ( 4 ) )
8010	Assert. assertEquals ( AuthenticationToken. ANONYMOUS, token )
8011	assertEquals ( ApiStatus. SUCCESS, response. getMeta ( ). getStatus ( ) )
8012	paths. assertHasParentRaw ( info, actual, expectedParent )
8013	context. assertSuccessful ( response )
8014	Assert. assertEquals ( INSTALL_SDK_PATH, sdk. getPath ( ) )
8015	assertTrue ( list. getCustomer ( ). size ( ) > 0 )
8016	assertFalse ( isServiceReady )
8017	assertGenres ( results )
8018	Assert. assertNull ( bucket. get ( ) )
8019	assertMandatoryElements ( targetProduct, true )
8020	assertTrue ( "Reader Should Be Ready After Setting ByteBuffer", _utf8ByteBufferReader. ready ( ) )
8021	assertTrue ( orderKey. prefixOf ( key ) )
8022	assertEquals ( "repro20030207 test", diffsToString ( Diff. diffText ( a, b, false, false, false ) ), "0.1.0.0*0.7.1.2*" )
8023	assertEquals ( "Cancelled default service com.alibaba.dubbo.rpc.protocol.dubbo.support.DemoService.", result )
8024	assertEquals ( 0, root. listenerCount ( ) )
8025	assertionHelper. assertIrodsFileOrCollectionExists ( irodsFile. getAbsolutePath ( ), irodsFileSystem. getIRODSAccessObjectFactory ( ), irodsAccount )
8026	assertEquals ( "ID = userId", dataSetLookup. getFirstFilterOp ( ). getColumnFilterList ( ). get ( 0 ). toString ( ) )
8027	Assert. assertTrue ( warningHeaders == null || warningHeaders. length == 0 )
8028	assertEquals ( "", res )
8029	assertEquals ( pattern, patterns. getPattern ( entityId ) )
8030	Assert. assertEquals ( expectedLanguage, actualLanguage )
8031	assertEquals ( expected. toString ( ), actual. toString ( ) )
8032	assertThat ( this. adapter. getSortColumn ( ), is ( equalTo ( sortColumn ) ) )
8033	Assert. assertTrue ( String. format ( "success = %s", success ), success )
8034	assertEquals ( novaTags. getTags ( ), newTags. getTags ( ) )
8035	assertTrue (! result )
8036	assertNull ( hiveDatabaseMeta. getTruncateTableStatement ( "testTableName" ) )
8037	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<features xmlns=\\"http://karaf.apache.org/xmlns/features/v1.0.0\\" name=\\"test-dependencies\\">\\n" + "<feature name=\\"test-dependencies\\">\\n" + "<bundle start-level=\\"42\\">mvn:mygroup/myArtifactId/1.0</bundle>\\n" + "</feature>\\n" + "</features>\\n", wr. toString ( ) )
8038	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
8039	assertTrue ( w. getStatus ( ) == HttpServletResponse. SC_PROXY_AUTHENTICATION_REQUIRED )
8040	assertEquals ( Timestamp. valueOf ( "2013-03-27 23:18:40.0" ), jstOi. getPrimitiveJavaObject ( result. get ( "five" ) ) )
8041	assertThat ( route, canHandle ( PathAnnotatedController. class, "withRelativePath" ) )
8042	assertThat ( matcher. matches ( response ), is ( true ) )
8043	assertArrayEquals ( new String [ ] { "Id", "\\"Delimited Field Name\\"", "Default_Case" }, cols )
8044	assertEquals ( false, OptimizerUtils. isIndexingRangeBlockAligned ( 2501, 4500, 7001, 9000, BRLEN, BCLEN ) )
8045	Assert. assertTrue ( authorizableHierarchy. toString ( ), authzProvider. hasAccess ( user1, authorizableHierarchy, actions, ActiveRoleSet. ALL ) )
8046	assertEquals ( "\\"dup\\"", t. getNameInSource ( ) )
8047	assertFalse ( req. getHeaders ( "param" ). hasMoreElements ( ) )
8048	assertEquals ( expected, cls )
8049	assertThat ( token. getType ( ), is ( PCRELexer. ResetStartMatch ) )
8050	assertEquals ( expResult, result )
8051	Assert. assertArrayEquals ( "The computed solution for Bleichenbacher must be equal to the original message", message, solution. toByteArray ( ) )
8052	assertThat ( testExecutor. invokeTest ( 4999L, ImmutableMultimap. of ( ) ), is ( false ) )
8053	assertThat ( a. hashCode ( ), is ( b. hashCode ( ) ) )
8054	assertNotNull ( defaultRule. defaultQueueName )
8055	assertEquals ( 4, links. size ( ) )
8056	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 09" ) )
8057	FunctionTestUtil. assertResult ( stringFunction. invoke ( offsetTime ), TimeFunction. FEEL_TIME. format ( offsetTime ) )
8058	assertEquals ( "Unexpected widgetset configuration option value", widgetset, config. getWidgetset ( null ) )
8059	assertThat ( out, is ( "" ) )
8060	assertEquals ( expResult, stringBuilder. toString ( ) )
8061	Assert. assertEquals ( "{\\"alice\\":{\\"p:bob\\":[{\\"@xmlns:p\\":\\"http://test\\",\\"$\\":\\"charlie\\"}]}}", result. toString ( ) )
8062	assertThat ( result. size ( ), is ( 0 ) )
8063	assertTrue ( "The getChanges() method did not report a change", hasChange )
8064	assertEquals ( expected, actual )
8065	ReflectionAssert. assertPropertiesNotNull ( "Something in the GameState was null.  This test is designed to set " + "every field", testObj )
8066	Assert. assertTrue ( validator. isValid ( 10, context ) )
8067	assertTrue ( Geometries. line ( 1.5, 1.5, 2.5, 2.5 ). intersects ( point ( 2, 2 ) ) )
8068	assertThat ( element. getText ( ), is ( "value with appended text" ) )
8069	assertEquals ( "The length method didn't return the correct value", Bytes. BufferHelper. SIZEOF_INT, bytes. length ( ) )
8070	assertNull ( daoService. get ( userWrapper, "PKEY", "1.0", StatisticRefEnum. CREATED_ISSUE_COUNT ) )
8071	assertThat ( schedCapture. getValue ( ), is ( getScheduler ) )
8072	Assert. assertEquals ( 0, distance. compute ( a, a ), 0d )
8073	assertEquals ( result, expectedUser, "Found incorrect user, cause usernames aren't equals" )
8074	assertEquals ( "v0", map0. get ( "k0" ) )
8075	assertTrue ( StoreParams. sameValues ( p, pDft ) )
8076	assertEquals ( 1, fixture. mark ( ) )
8077	Assert. assertTrue ( providerAInvoked )
8078	Assert. assertEquals ( nodeToKey ( queryA ), nodeToKey ( queryB ) )
8079	assertThat ( result, equalTo ( "hey, 1, hey, ho, hum, h盲pp, Luis, 2" ) )
8080	Assert. assertEquals ( new URI ( "http://stuff@localhost:80/some%20stuff?param=stuff#fragment" ), result )
8081	_PmAssert. assertVisible ( pm. pmBeanImpl )
8082	assertThat ( axioms, hasItem ( axiom ) )
8083	assertThat ( intOrString1, not ( equalTo ( intOrString2 ) ) )
8084	Assert. assertEquals ( "Incorrect number of PersonMergeLog objects found by winner", 2, lst. size ( ) )
8085	assertEquals ( "Mismatched root dir parent", rootDir, upDir )
8086	Assert. assertEquals ( expectedLanguage, actualLanguage )
8087	Assert. assertEquals ( 0, results. size ( ) )
8088	Assert. assertNull ( comp. getHtmlClass ( ) )
8089	Assert. assertEquals ( localDate. toString ( ddMMMyyyy, Locale. ENGLISH ), "05-Feb-2013" )
8090	assertTrue ( basePermission. isAllowed ( auth, Sets. newHashSet ( ) ) )
8091	assertFalse ( validator. isValid ( new MyCustomStringImpl ( "A79927398713" ), null ) )
8092	assertEquals ( secToken. getToken ( ), mapper. readValue ( mapper. writeValueAsString ( secToken ), secToken. getClass ( ) ). getToken ( ) )
8093	assertEquals ( expected, uri. getRawPath ( ) )
8094	assertions. contains ( values )
8095	assertMappedFieldValueIsEmptyCollection ( )
8096	assertNotNull ( v8TypedArray )
8097	assertEquals ( "{\\"instance\\":" + Float. toString ( Float. MIN_VALUE ) + "}", json )
8098	Assert. assertTrue ( Files. size ( tmfile. toPath ( ) ) > 0 )
8099	assertThat ( e. getMessage ( ), containsString ( expectedExceptionMessage ) )
8100	assertEquals ( exp, x )
8101	assertEquals ( expecetedTableName, builtTableName )
8102	assertEquals ( DATA, storage. loadPerson ( ID ) )
8103	assertEquals ( new ArrayList < Category > ( ), mockResult. included ( "categories" ) )
8104	assertEquals ( fullName, metric. getFullMetricName ( ) )
8105	assertEquals ( 23, instance. evaluations )
8106	assertEquals ( "Select scripts are not the same", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
8107	Assert. assertTrue ( isElementPresent ( By. className ( "v-Notification-humanized" ) ) )
8108	assertions. isNotEqualTo ( actual )
8109	Assert. assertEquals ( record. get ( "favoritePlace" ). toString ( ), decoded. get ( "favoritePlace" ). toString ( ) )
8110	assertThat ( capturePackage. getValue ( ). name ( ), is ( "com.example.package" ) )
8111	assertEquals ( expected, actual )
8112	assertEquals ( files + 1, infos. size ( ) )
8113	assertSame ( this. hero, joystick )
8114	assertEquals ( 42, out. getRealFloat ( ), 0 )
8115	Assert. assertEquals ( "s3n://123:456@my-bucket/some/path", HiveAuthzBindingHookBase. parseURI ( "/some/path" ). getName ( ) )
8116	Assert. assertEquals ( assinatura, eventoInutilizacao. getAssinatura ( ) )
8117	Assert. assertEquals ( expectedResult, result )
8118	Assertions. assertEquals ( Collections. singletonMap ( "message", "stuff!" ), response )
8119	assertNotSubtype ( "Forest", SubType. FOREST )
8120	assertEncoded ( NASTY, NASTY, NASTY, actual )
8121	assertThat ( PropertiesUtil. createPrefixMap ( properties, "abc" ), is ( answer ) )
8122	assertNull ( datastore )
8123	assertThat ( value, is ( "" ) )
8124	assertTarget ( "[['a']]" )
8125	assertCompletion ( "#some comment\\n" + "flyway:\\n" + "  sch<*>\\n", "#some comment\\n" + "flyway:\\n" + "  schemas:\\n" + "  - <*>\\n" )
8126	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
8127	assertThat ( resolver. resolve ( load ( "DefaultPackageEmbeddable" ) ), equalTo ( "DefaultPackageEmbeddable.story" ) )
8128	assertEquals ( txtFile. getAbsolutePath ( ), source. getLocation ( ) )
8129	assertEquals ( dataflow, edit. getSubject ( ) )
8130	assertEquals ( "    1 ABCD\\n    2 XYZ", b. asString ( ) )
8131	assertTrue ( jee. evaluate ( event ) )
8132	assertEquals ( maxFreeSpace, applicationDirectory. getMaxContinousSize ( ) )
8133	assertThat ( aDouble, equalTo ( bDouble ) )
8134	assertProcessInstanceCompleted ( processInstance. getId ( ) )
8135	assertThat ( new File ( current, "a.txt" ), is ( file ( ) ) )
8136	assertThat ( axioms. isEmpty ( ), is ( true ) )
8137	Assert. assertEquals ( entityText, out. toString ( "utf-8" ) )
8138	assertEquals ( BigDecimal. valueOf ( 0.0567d ), r1. get ( ) )
8139	assertThat ( "unencoded setter has return type void", setter. getReturnType ( ), equalToType ( Void. TYPE ) )
8140	assertEquals ( ImmutableMap. of ( CallOptionsUtil. REQUEST_PARAMS_HEADER_KEY, encodedRequestParams ), headers )
8141	assertThat ( aggregateMapper. getCapped ( ). getSize ( ), is ( 1048076 ) )
8142	assertNull ( field. getColourExpression ( ) )
8143	testHelper. assertExecutionTreeAfterMigration ( )
8144	assertThat ( event, is ( expected ) )
8145	assertThat ( s, is ( "a value greater than <1> xor a value less than <5>" ) )
8146	Assert. assertEquals ( "cz.habarta.typescript.generator._yield.KeywordInPackage", name )
8147	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
8148	assertEquals ( originalSize, getNumberOfAllVisitsIncludingVoided ( ) )
8149	assertEquals ( sortedValues, values )
8150	lists. assertEmpty ( description, null )
8151	assertFalse ( sc. invokeDestinationCalled ( ) )
8152	assertEquals ( 7.04334e-2, p, 1e-6 )
8153	assertEquals ( AuthorizationResult. ACCESS_GRANTED, permission. getResult ( ) )
8154	assertEquals ( resolvedString, "The quick brown fox jumped over the lazy dog." )
8155	assertFalse ( result )
8156	Assert. assertEquals ( expected, actual )
8157	assertTrue ( str. contains ( format. format ( date ) ) )
8158	assertThat ( "Exception thrown should be a ProcessingException", t, instanceOf ( ProcessingException. class ) )
8159	BrowserAgentTestUtils. assertBrowserAgent ( HTMLUNIT_CHROME_AGENT_MATCHER )
8160	Assert. assertEquals ( 1, countingNotifier. getNotificationCount ( ) )
8161	assertEquals ( "Expected response not seen.", "ONE", response )
8162	assertEquals ( "Not relevant", testedString )
8163	assertNotNull ( oracleEngine )
8164	memory. assertMemoryUsageNotIncreased ( "Run #" + runNo, memorySnapshot, memoryUsagePercentIncreaseTolerance )
8165	assertEquals ( "#00ff00", getColorpickerValue ( ) )
8166	assertEquals ( PostStatus. PENDING, post. getStatus ( ) )
8167	Assert. assertEquals ( expected, actual )
8168	Assert. assertEquals ( this. family1, this. component. resolveEntity ( FAMILY_1_ID ) )
8169	assertFalse ( validationHelper. hasErrors ( ) )
8170	sets. assertHasSize ( description, null, 0 )
8171	assertThat ( sut. isMatch ( real, expected ), is ( false ) )
8172	assertTrue ( failedAsExpected )
8173	assertTrue ( result. contains ( "0x414243" ) )
8174	assertThat ( "Locations created with different paths and the same property must not be equal", locationA1, not ( locationA2 ) )
8175	Assert. assertFalse ( result )
8176	assertTrue ( true )
8177	assertions. isNotNull ( )
8178	assertEquals ( "minutia", httpWebService. getDetailsParameter ( request ) )
8179	assertTrue ( resources. listResources ( ). isEmpty ( ) )
8180	assertTrue ( "Rule delegation bo found", ruleDelegationBos!= null )
8181	assertThat ( actual, is ( equalTo ( "/ab/C%20D" ) ) )
8182	assertThat ( keyValueType. getValue ( ), equalTo ( aString ) )
8183	Assert. assertEquals ( "SELECT TO_DAYS('2007-10-07');", text )
8184	assertTrue ( engine. getUseClientMode ( ) )
8185	Assert. assertEquals ( query, interpretedQuery )
8186	Assert. assertEquals ( "0", result. getReturnCode ( ) )
8187	assertThat ( context, value, is ( RESULT_INT ) )
8188	assertEquals ( 1, ksession. fireAllRules ( ) )
8189	assertFalse ( value. isReplaceableBy ( 99L, 9, ComparableComparator. INSTANCE ) )
8190	assertTrue ( response. isPresent ( ) )
8191	assertEquals ( "693d7ad9-e671-4d66-9911-7f75f6380134", orderId )
8192	assertEquals ( 1001894399999L, q. getLastMillisecond ( calendar ) )
8193	assertNotNull ( testClass )
8194	assertEquals ( tstName, ent. getCatalog ( ) )
8195	assertTrue ( BatchUtil. evaluate ( batch ) )
8196	assertEquals ( "[{\\"name\\":\\"table 1\\",\\"pkPolicy\\":\\"user_generated_value\\",\\"fields\\":[{\\"name\\":\\"id\\",\\"type\\":\\"string\\",\\"isPrimaryKey\\":true}]}]", content )
8197	assertEquals ( 43.1, result, 0.000001 )
8198	assertThat ( notification, containsString ( "\\"caption\\":\\"foobar\\"" ) )
8199	assertEquals ( "/_nodes/_all/_shutdown?delay=5s", action. getURI ( ElasticsearchVersion. UNKNOWN ) )
8200	assertEquals ( "document/literal", encodingStyle )
8201	assertEquals ( g. variables ( ). keys ( ), graph. variables ( ). keys ( ) )
8202	assertNull ( sut. getIconFileName ( ) )
8203	assertEquals ( 'a', ex. charAt ( s, - 1 ) )
8204	assertEquals ( qb - 1, qa )
8205	Assert. assertEquals ( true, errors. hasFieldErrors ( "encounterDatetime" ) )
8206	assertThat ( hasNativeSupportForPseudo, is ( false ) )
8207	assertEquals ( exp, TYPING_MAPPER. readValue ( json, ZoneId. class ) )
8208	Assert. assertTrue ( this. commandFacade. exists ( SwitchFullScreenCommand. class, key ) )
8209	assertTrue ( e. getMessage ( ). contains ( "Template dir" ) )
8210	assertEquals ( "found the theme, but it should not exist", null, gd )
8211	Assert. assertEquals ( 1, streams. length )
8212	assertThat ( MODEL. findNextTransition ( utc ). get ( ), is ( SPRING_1997 ) )
8213	assertEquals ( "Failed on [" + i + "] iteration", expected, merged )
8214	assertThat ( jvm. isRunningWithDebugger ( ), is ( false ) )
8215	assertThat ( pages. getAt ( ApacheHomePage. class ). getClass ( ). getName ( ), is ( ApacheHomePage. class. getName ( ) ) )
8216	assertTrue ( "Add and get relation", relation. getKeyid1 ( ). equals ( testRelation. getKeyid1 ( ) ) )
8217	assertTrue ( hardwiredProperties. contains ( config. createProperty ( "http://purl.org/linked-data/api/vocab#wasResultOf" ) ) )
8218	Assert. assertNotNull ( "did not find data object", actual )
8219	assertArrayEquals ( expectedOutput1, output1 )
8220	assertEquals ( "Hello Tim", ResponseBodyInterpolator. interpolate ( "Hello {^name}", req ) )
8221	assertNull ( response. getHeaders ( ). get ( "Link" ) )
8222	assertEquals ( "catch", getValue ( ) )
8223	Assert. assertEquals ( Arrays. asList ( new String [ ] { "a", "b", "c" } ), tokenList )
8224	assertEquals ( 4.0, distance. compute ( point1, point2 ), EPSILON )
8225	assertFalse ( fs. unlink ( "foo" ) )
8226	assertEquals ( "1,2,3", getInorderForm ( tree ) )
8227	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
8228	assertThat ( tracker. getAll ( ) [ firstElementOfArray ], is ( itemSecond ) )
8229	Assert. assertEquals ( expectedSlot, slot )
8230	assertEquals ( val. apply ( m ), m. with ( val ) )
8231	context. assertIsSatisfied ( )
8232	assertEquals ( value, actualValue )
8233	Assert. assertTrue ( msg. toString ( ), errors. isEmpty ( ) )
8234	assertEquals ( 0.7306356862792885, r, 0.000000000001 )
8235	assertTrue ( encodingDetector instanceof CompositeEncodingDetector )
8236	assertNotNull ( path )
8237	assertTrue ( specification. stats ( ). hasFailed ( ) )
8238	assertEquals ( expected, actual )
8239	assertEquals ( scIdentifier, result )
8240	Assert. assertEquals ( 401, response. getStatus ( ) )
8241	assertEquals ( expectedUri, uri )
8242	assertEquals ( expResult, result )
8243	assertEquals ( 1, count. get ( ) )
8244	assertTrue ( "Authentication Context should be created", ops. exists ( TEST_AUTHENTICATION_CONTEXT_ADDRESS ) )
8245	assertEquals ( "Wrong number of documents.", 1, collection. getResourceCount ( ) )
8246	assertTrue ( filter. accepts ( good ) )
8247	assertTrue ( cs. isLast ( ) )
8248	assertTrue ( redisd. isProcessRunning ( ) )
8249	assertTrue ( FileUtils. contentEqualsIgnoreEOL ( new File ( "src/test/resources/reference/test.dump" ), outputFile, "UTF-8" ) )
8250	assertE ( "�尖�尖�尖�尖��" + "�尖�モ�� ��" + "��   ��" + "�尖�衡�� ��" + "�尖�尖�尖�尖��" )
8251	Assert. assertEquals ( "hello,world", result. getName ( ) )
8252	assertTrue ( hasResourceProvidableType )
8253	assertThat ( relationEditor. isValidResourceRelationType ( consumed ), is ( true ) )
8254	Assert. assertEquals ( "Class should not be considered: ", false, new DifferenceAccumulatingHandler ( inclusionSet, exclusionSet ). isClassConsidered ( "de/test/java/regex/Impl" ) )
8255	assertEquals ( tmap, readValue )
8256	assertEquals ( "Sidebar should be closed after clicking item 0", 0, countBySelector ( ".v-grid-sidebar-content" ) )
8257	assertNotNull ( as )
8258	assertEquals ( 3, postCommentScores. size ( ) )
8259	assertTrue ( wasEmpty. get ( ) )
8260	assertArrayEquals ( new String [ ] { "singleton" }, treeContent )
8261	Assert. assertTrue ( matcher instanceof UriPatternOrderedMatcher )
8262	assertTrue ( tree. createSetForOriginalKeys ( ). getClass ( ). equals ( Collections. newSetFromMap ( new ConcurrentHashMap < Object, Boolean > ( ) ). getClass ( ) ) )
8263	Assert. assertEquals ( StringUtils. trimAllWhitespace ( result. toString ( ) ), "{\\"$or\\":[{\\"age\\":{\\"$lt\\":5,\\"$gt\\":10}}]}" )
8264	assertTrue ( Arrays. equals ( expectedPrivs, privs ) )
8265	assertTrue ( suspendableSupers. contains ( method ) )
8266	assertEquals ( 2, searchService. search ( "author:" + alex. getUsername ( ) ). size ( ) )
8267	Assert. assertEquals ( data, el. toString ( ) )
8268	assertEquals ( 2, secureComponents. size ( ) )
8269	Assert. assertEquals ( 5, analyser. getLoadRightAfterActivity ( route. getEnd ( ), route ). get ( 0 ) )
8270	assertThat ( page. getTotalElements ( ), is ( greaterThanOrEqualTo ( 1L ) ) )
8271	assertEquals ( content, IOUtils. toString ( ungzippedStream ) )
8272	assertEquals ( "incorrect result", result, aNumber. compareTo ( bNumber ) )
8273	assertEquals ( constraintViolations. size ( ), 1 )
8274	assertEquals ( 50, port. doubleIt ( 25 ) )
8275	assertThat ( classes. size ( ), is ( 3 ) )
8276	assertObjectEquals ( "{type:'number'}", x. getSchema ( ) )
8277	assertJsonEquals ( "{int:3,double:2.7,bool:true,map:{hello:'world',foo:'bar'},string:'hello!'}", JsonSerializer. serialize ( map ) )
8278	assertEquals ( 0, violations. size ( ) )
8279	assertStates ( "existing", NOT_SUPPORTED, RESET, EXISTING, null, null )
8280	assertEquals ( "Black", dto. getColors ( ) [ 0 ] )
8281	assertArrayEquals ( expected, fixture. getServerAddresses ( ) )
8282	assertEquals ( document, mapper. readValue ( JSON_MEDIA_INFO_LABEL, EntityDocumentImpl. class ) )
8283	Assert. assertEquals ( "Hello World!", helloWorld. getText ( ) )
8284	assertStateCount ( svc, Service. STATE. STARTED, 1 )
8285	assertNotNull ( sessionFactoryBean. getObject ( ) )
8286	assertTrue ( shouldAnalyze )
8287	assertEqualsSet ( "HasKey.rdf", HasKey ( cls, propQ, propP ), Declaration ( cls ), Declaration ( propP ), Declaration ( propQ ) )
8288	assertions. isGreaterThan ( expected )
8289	assertEquals ( "names do not match!", "myComponent", component. getName ( ) )
8290	assertEquals ( "No test cases should fail", 0, runTestsResults. getFailedTests ( ). size ( ) )
8291	assertEquals ( "", result )
8292	assertEquals ( "Should have received exactly one event", 1, events. size ( ) )
8293	assertTrue ( csv. equals ( "" ) )
8294	assertEquals ( "https://login.salesforce.com", config. getIssuer ( ) )
8295	assertEquals ( "Unexpected primary style name", "v-tree", state. primaryStyleName )
8296	assertJson ( json )
8297	assertEquals ( "coap://50.0.0.1:5683", server. getUri ( ) )
8298	Assert. assertEquals ( journalTable. getKeyColumnNames ( ), ImmutableList. of ( "myKey1", "myKey2" ) )
8299	assertTrue ( "Got parameter classes", provider. getParameterClasses ( ). isEmpty ( ) )
8300	Assert. fail ( "RuntimeException expected" )
8301	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff15_" ) )
8302	assertTrue ( "Found " + numResults + " results instead of " + test [ 1 ] + " for " + test [ 0 ], numResults == ( ( Integer ) test [ 1 ] ) )
8303	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
8304	assertEquals ( "Chat property not preserved", testDataValue, room. getProperties ( ). getData ( testDataKey ) )
8305	Assert. assertEquals ( expected. replace ( '\\'', '"' ), result )
8306	assertMatches ( written, resolved )
8307	assertEquals ( "hello", result )
8308	assertEquals ( "", result )
8309	assertNotNull ( strategy )
8310	assertThat ( domain. getValidationFailures ( resourceLookup ), contains ( stringContainsInOrder ( "log home", "/private/log/mydomain" ) ) )
8311	assertThat ( statistics. getDistinctEdgeProperties ( "since" ), is ( 3L ) )
8312	assertEquals ( expectedData, HistoricalDataUtils. buildBarData ( ticker, barLength, lengthUnit, chartData ) )
8313	assertEquals ( "Mismatched roots for " + remotePath. length ( ) + " slashes", expected, actual )
8314	assertEquals ( ManipulationScope. FIELD, manipulation. getManipulationScope ( ) )
8315	Assert. assertEquals ( new BigDecimal ( "23691.35" ), term. getIndexedValue ( ) )
8316	assertEquals ( null, args. get ( 0 ) )
8317	Assert. assertEquals ( 100, EJBInvocationHandler. forProxy ( proxy ). getInvocationTimeout ( ) )
8318	assertThat ( servletResponse, allOf ( startsWith ( "java.io.IOException" ), containsString ( "401" ) ) )
8319	assertTrue ( "DependGraphTask suitability", suitable )
8320	assertEquals ( true, classUnderTest. isShowConstraintNames ( ) )
8321	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
8322	assertSame ( stsClient, i. getStsClient ( ) )
8323	Assert. assertEquals ( prefixes. getNsPrefixURI ( "ex" ), query. getNsPrefixURI ( "ex" ) )
8324	assertFalse ( subject. getDelay ( ). isPresent ( ) )
8325	assertTrue ( "bad version information '" + version + "'. Did you set the resource directory as a source directory?", version. equals ( "${pom.version}" ) || version. matches ( "[0-9]+\\\\.[0-9]+\\\\.[0-9]+.*" ) )
8326	assertBeanValidation ( json, "query.metric[0].group_by[0].groupCount must be greater than or equal to 1" )
8327	assertNotNull ( "Returned console reader cannot be null", reader )
8328	assertEquals ( "Expected another type of analyzer", StopAnalyzer. class, analyzer. getClass ( ) )
8329	assertMandatoryElements ( targetProduct, false )
8330	assertSame ( t. toLocalTime ( ), TEST_2007_07_15_12_30_40_987654321. toLocalTime ( ) )
8331	assertThat ( traversal. toList ( ), containsInAnyOrder ( likeVertex ( ). withTimId ( "id1" ), likeVertex ( ). withTimId ( "id2" ), likeVertex ( ). withTimId ( "id3" ) ) )
8332	assertEquals ( expected, getString ( TestExistsCriteriaImpl. example ( ) ) )
8333	assertThat ( result. getIssues ( ), empty ( ) )
8334	assertTrue ( user. hasRole ( "Not A Role" ) )
8335	assertEquals ( o1, o2 )
8336	assertThat ( result. hasErrors ( ), is ( false ) )
8337	assertTrue ( set. isEmpty ( ) )
8338	assertEquals ( "fight", result. getName ( ) )
8339	assertEquals ( 1, violations. size ( ) )
8340	assertEquals ( 0, ksession. fireAllRules ( ) )
8341	assertEquals ( "9208675309", parsedTelephoneNumber )
8342	assertEquals ( new String ( jedisCluster. get ( byteKey ) ), "3" )
8343	assertEquals ( 0, array. length )
8344	assertFocusModificationSanity ( context )
8345	assertEqualsIgnoreWhitespace ( expected, real )
8346	assertEquals ( "Mismatched data", expected, res )
8347	assertEquals ( response. getStatus ( ), STATUS201 )
8348	Assert. assertEquals ( button. getTagName ( ), "input" )
8349	assertEquals ( "matches(\\"\\\\\\\\s+\\")", buffer. toString ( ) )
8350	assertEquals ( "{\\"a\\":{\\"b\\":1}}", n )
8351	assertEquals ( "Test message ab c", result )
8352	assertEquals ( "SELECT mat FROM SOHeader soh JOIN soh.soItem soi JOIN soi.material mat WHERE soh.buyerId = 2 AND " + "soh.createdBy = 'Peter' AND soi.shId = soh.soId AND mat.id = 'abc' " + "ORDER BY mat.buyerId asc, mat.city desc", jpqlStatement. toString ( ) )
8353	assertEquals ( "12071130009000206", this. banco. geraCodigoDeBarrasPara ( this. boleto ). substring ( 25, 42 ) )
8354	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
8355	assertEquals ( BIG_DATA, result )
8356	Assert. assertEquals ( "!!bitset [\\n" + "  1024,\\n" + "  # 0000000000000000000000000000000000000000000000000000010000000000\\n" + "  33554432,\\n" + "  # 0000000000000000000000000000000000000010000000000000000000000000\\n" + "\\n" + "]", wire. toString ( ) )
8357	Assert. assertEquals ( new Double ( 2147483647.012345d ), _c. convert ( "2147483647.012345" ) )
8358	assertTrue ( exceptionReport. getHTTPStatusCode ( ) == HttpServletResponse. SC_INTERNAL_SERVER_ERROR )
8359	assertEquals ( ontology. annotationPropertiesInSignature ( ). distinct ( ). count ( ), ontology. annotationPropertiesInSignature ( ). count ( ) )
8360	Assert. assertEquals ( Constants. HEADER_SIGNIN_PATH, actualSignInPath )
8361	assertTrue ( entity. getSex ( ) == null )
8362	assertEquals ( expected, loops )
8363	assertTrue ( retDocumentOrganizations == documentOrganizations )
8364	Assert. assertEquals ( "Hello World!", result. get ( 1, TimeUnit. SECONDS ) )
8365	assertThat ( response. getStatus ( ), is ( Response. Status. NOT_FOUND. getStatusCode ( ) ) )
8366	assertEquals ( ( int ) value, i )
8367	assertDeclarationValueRecovery ( ss )
8368	assertThat ( actual, containsInAnyOrder ( "DiagnosticReport/DR" ) )
8369	assertEquals ( "OK", jedisCluster. scriptFlush ( byteKey ) )
8370	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. VIEW, this. doc ) )
8371	objects. assertIsNotOfAnyClassIn ( someInfo ( ), actual, types )
8372	assertNoCause ( "value of    : myObject.child.grandchild\\nmessage\\nmyObject was: root" )
8373	assertThat ( i, greaterThan ( 1 ) )
8374	assertNotNull ( image )
8375	AssertResults. assertResults ( scanner, expectedResults )
8376	assertThat ( markdown, containsString ( tableEntry ( "`anInt`", "integer", "" ) ) )
8377	assertThat ( p. isZero ( ) )
8378	assertEquals ( counter. get ( ), accumulated )
8379	assertEquals ( TEAM_CITY_URL + "/app/rest/projects/id:project54", projectUrl )
8380	assertNotNull ( "Country is null", entity )
8381	Assert. fail ( e. getMessage ( ) )
8382	assertThat ( values, contains ( beginYear ) )
8383	assertOut ( "\\n/**\\n * @const\\n * @type {*}\\n */\\na = 42" )
8384	assertEquals ( true, result )
8385	assertTrue ( pattern. matches ( "-1.0" ) )
8386	assertResultSet ( res )
8387	assertNotNull ( responseContent )
8388	assertEquals ( 1, kieSession. fireAllRules ( ) )
8389	assertEquals ( expected, actual )
8390	assertTrue ( contains ( url, "?key=123.5" ) )
8391	assertEquals ( Tuple3. of ( 17.29f, 14.5, - 0.98 ), Iterables. getOnlyElement ( applyAggregator ( a, input ) ) )
8392	assertTrue ( s. getRequiredSkills ( ). containsSkill ( "skill1" ) )
8393	assertThat ( responseObject, is ( not ( nullValue ( ) ) ) )
8394	Assert. assertEquals ( protocoloInfo, protocolo. getProtocoloInfo ( ) )
8395	assertFalse ( "Attribute should be false", msg1. getEdimap ( ). isIgnoreUnmappedSegments ( ) )
8396	Assert. assertNull ( WebUtil. normalizeLocale ( s ) )
8397	Assert. assertNull ( "user group returned", actual )
8398	Truth. assert_ ( )
8399	assertTrue ( response. startsWith ( "Jersey/2." ) )
8400	assertThat ( date. getMinimum ( CommonElements. RELATED_GREGORIAN_YEAR ), is ( - 1000020533 ) )
8401	N4CliHelper. assertExpectedOutput ( expectedString, out )
8402	assertThat ( transferSuccessful, is ( true ) )
8403	assertTwoProcessesDifferentDefinitions ( manager )
8404	assertNoDummyAccount ( USER_JACK_USERNAME )
8405	assertEquals ( 4161, ftpFiles [ 0 ]. getSize ( ) )
8406	assertNull ( value )
8407	Assert. assertEquals ( 1439, ( int ) conceptName. getConceptNameId ( ) )
8408	assertTrue ( str. contains ( "1001" ) )
8409	Assert. assertEquals ( units, deserialize ( tmpDir ) )
8410	assertEquals ( SERVICE_QNAME_1, node. getServiceName ( ) )
8411	assertTrue ( "hotmail contacts are empty", contacts. size ( ) > 0 )
8412	Assert. assertEquals ( 0l, ( long ) RequestObjectHelper. getEndOffset ( requestObject ) )
8413	assertFailureLogPresent ( instance, LOG_IDENT_FAILURE, "failingTask", null, B_KEY2, 1 )
8414	assertThat ( parsers, is ( DdlParsers. BUILTIN_PARSERS ) )
8415	assertThat ( spec. getImagePullPolicy ( ), equalTo ( IFNOTPRESENT_IMAGEPULLPOLICY ) )
8416	assertFalse ( authenticator. isAuthenticated ( "username", "password" ) )
8417	assertEquals ( expectedGhostTable, ghostTable )
8418	assertThat ( records. size ( ), is ( 0 ) )
8419	assertThat ( root, hasType ( Type. COMPLETELY_SCHEDULED_SUPERELEMENT ) )
8420	assertEquals ( previous + 2, list. size ( ) )
8421	assertTrue ( filter. shouldInclude ( source, "some.property" ) )
8422	Assert. assertArrayEquals ( cplxData_ovsmp_EXPECTED. toDoubleArray ( ), cplxData_ovsmp_ACTUAL. toDoubleArray ( ), DELTA_08 )
8423	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + filename, sourceFolder + "cmp_" + filename, destinationFolder, "diff_" ) )
8424	assertTrue ( properties. shouldCreateNewChat ( ) )
8425	assertEquals ( failure, view. getResultNode ( ). getResult ( ). getCause ( ) )
8426	assertFalse ( "Not EBV false: " + v, XSDFuncOp. booleanEffectiveValue ( v ) )
8427	Assert. assertEquals ( "Invalid AND of " + operands, row. expected, expr. evaluate ( ). booleanValue ( ) )
8428	assertEquals ( expected, actual )
8429	assertThat ( processor. getTables ( ), is ( Collections. < String > emptyList ( ) ) )
8430	assertEquals ( label + " serialize-normal failed", e1, r )
8431	assertEquals ( mongoDoc, read )
8432	assertEquals ( expectedSource, instrumentedSource )
8433	assertThat ( ( String ) getter. invoke ( instance ), is ( equalTo ( "abc" ) ) )
8434	Assert. assertEquals ( element. getText ( ), "click me" )
8435	assertTrue ( list. isEmpty ( ) )
8436	assertThat ( reading. getQuery ( ), is ( "offset=10" ) )
8437	assertEquals ( 123, tagCache. size ( ) )
8438	assertNotNull ( p )
8439	assertEquals ( expected, output. trim ( ) )
8440	assertThat ( manager. getPartitionSubPath ( new Path ( partition1. getSd ( ). getLocation ( ) ) ), is ( new Path ( "partition1" ) ) )
8441	Assert. assertEquals ( 0, person. getAttributes ( 1 ). size ( ) )
8442	assertDegenerate ( scan )
8443	assertEquals ( "9 3\\n", found )
8444	assertEquals ( "Expected 0 results!", 0, n )
8445	assertFalse ( JPackage. isForcePackageNameLowercase ( ) )
8446	assertThat ( cursor. hasNext ( ), equalTo ( false ) )
8447	assertEquals ( "irida workflow is invalid", iridaWorkflowFromFile, iridaWorkflow )
8448	assertEquals ( "C", Iter. last ( data, filter ) )
8449	assertTrue ( true )
8450	Assert. assertEquals ( 0, is. available ( ) )
8451	assertTrue ( "Dates are not equal", Math. abs ( date. getTime ( ) - containerRequest. getDate ( ). getTime ( ) ) < 1000 )
8452	Assert. assertNotNull ( "XML parser not null", tba1 )
8453	assertEquals ( "immediateResume", str )
8454	Assert. assertEquals ( 0, this. outputDir. listFiles ( ). length )
8455	assertThat ( javaDocComment, containsString ( "A description for this enum" ) )
8456	assertEquals ( - 1, askLevel1. compareTo ( askLevel2 ) )
8457	assertEquals ( expected, actual )
8458	assertTrue ( KeyValue. COMPARATOR. compare ( original, newone ) == 0 )
8459	assertEquals ( currentTimeMillis, ts. getTime ( ), 5 )
8460	assertTrue ( selectedCells. isEmpty ( ) )
8461	Assert. assertEquals ( "var simulation gave the wrong answer", - 3.5, ( Float ) r, 0.001 )
8462	assertEquals ( val1, point. getValue ( ) )
8463	Assert. assertTrue ( row. matches ( new Guess ( colors ) ) )
8464	assertEquals ( 3, position )
8465	assertThat ( pathElement. getCompletePath ( ), is ( "/a/d/e" ) )
8466	assertEquals ( 132, acc. get ( ) )
8467	testHelper. assertProcessEnded ( testHelper. snapshotBeforeMigration. getProcessInstanceId ( ) )
8468	Assert. assertEquals ( "Free nodes should be including total run count", 5, freeThreads )
8469	assertEquals ( "Boom", currentGroup. getName ( ), group. getName ( ) )
8470	Assert. fail ( "Unexpected failure getting command line for process " + p. getPid ( ) + ": (" + e. getWin32ErrorCode ( ) + ") " + e. getMessage ( ) )
8471	assertSame ( expected, queryContext. get ( ) )
8472	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFInfoCupomFiscalReferenciado ( ). toString ( ) )
8473	assertThat ( resolve ( "http://example.org/b/c" ), is ( "./example/b/c.xsd" ) )
8474	assertEquals ( witness, map )
8475	assertThat ( results. size ( ), is ( 1 ) )
8476	assertScoreAndParse ( content, null, 1 )
8477	assertArrayEquals ( EXPECTED_SIGN_SIGNED_BYTES, encodedBytes )
8478	assertFalse ( kieBuilder. getResults ( ). hasMessages ( Message. Level. ERROR ) )
8479	assertThat ( decoderEncoder. decodeArray ( ecodedSuffix ), equalTo ( qa [ 1 ] ) )
8480	mockOutput. assertIsSatisfied ( )
8481	assertSearch ( "6", query, null, 6, 6 )
8482	assertEquals ( testString, cv. getSubString ( 1L, ( int ) cv. length ( ) ) )
8483	assertEquals ( expectedQuery, actualQuery )
8484	assertSame ( expectedRemoteCallReturn, remoteCallReturn )
8485	assertEquals ( "SimpleTestBean(42)", findGrid ( ). getCell ( 0, 2 ). getText ( ) )
8486	assertThat ( validationList, is ( Collections. < String > emptyList ( ) ) )
8487	assertTrue ( doc. isSameNode ( doc ) )
8488	assertPerformances ( "MULTI (" + concurrency + " threads)", PerformanceTimerFactory. getMultiThreadedBuilder ( ). setThreads ( concurrency ). setWorkers ( concurrency ). setTimeout ( 30, TimeUnit. SECONDS ). build ( ) )
8489	assertEquals ( "123", converter. getAsString ( facesContext, new UIPanel ( ), Short. valueOf ( "123" ) ) )
8490	Assert. assertEquals ( "http://example.com/events/Wiesbaden?eventName=Revo+Tour&location=Schlachthof#description", expanded. toString ( ) )
8491	assertFalse ( session. getNode ( path ). isLocked ( ) )
8492	assertArrayEquals ( expected, actual, EPS )
8493	assertEquals ( "string", array. getString ( 0 ) )
8494	assertEquals ( "0000239104761941", nossoNumeroCompleto )
8495	assertThat ( result, contains ( new Interval ( RangeBoundary. CLOSED, 0, 3, RangeBoundary. OPEN, 0, 0 ), new Interval ( RangeBoundary. OPEN, 3, 4, RangeBoundary. CLOSED, 0, 0 ) ) )
8496	assertNotNull ( Fleet. fetcher ( "FLXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
8497	assertEquals ( response. getStatus ( ), STATUS200 )
8498	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
8499	assertEquals ( 0, time. getTime ( ) )
8500	assertTrue ( "Expected HostCapacityReport", obj instanceof HostCapacityReport )
8501	assertFalse ( workReportTypeDAO. exists ( workReportType. getId ( ) ) )
8502	assertTrue ( true )
8503	assertEquals ( result. getUuid ( ), newUuid )
8504	assertEquals ( true, getLoadLayerDefinitionAction ( ). isEnabled ( ) )
8505	assertEquals ( resp. getCode ( ), 204 )
8506	assertEquals ( expected, answer )
8507	assertThat ( roles, contains ( "admin", "another" ) )
8508	assertTrue ( "Tx 2 write should've completed", write2Complete. await ( 5, TimeUnit. SECONDS ) )
8509	assertTrue ( notifier. wasPerformed ( ) )
8510	assertEquals ( map1, map2 )
8511	helper. assertAttributeValue ( country1. getCountryCode ( ), orderLine. getM_AttributeSetInstance ( ), attr_Country )
8512	Assert. assertEquals ( expected, actual. toString ( ) )
8513	Assert. assertEquals ( trim ( expected [ i ] ), trim ( new String ( Hex. encodeHex ( digest ) ) ) )
8514	Assert. assertFalse ( principal1. equals ( principal2 ) )
8515	assertThat ( result, is ( true ) )
8516	assertEquals ( before, user. getPostCount ( ) )
8517	Assert. assertEquals ( "Compiling the Vocab failed", 0, result )
8518	assertTrue ( e instanceof E_Version )
8519	assertEquals ( "candidate took 1 millis to execute\\n" + "control took 1 millis to execute\\n" + "example: candidate and control both executed successfully and match\\n", s )
8520	Assert. assertEquals ( 2, inter. size ( ) )
8521	BufferedImageAssert. assertMatches ( result, new float [ ] { 1, 1, 1, 1, 1, 1, 1, 0, 0 } )
8522	Assert. assertTrue ( service. isProviderIdentifierUnique ( provider ) )
8523	assertEquals ( getExplain ( delete, table. getSchemaName ( ) ), "\\n  Delete_Returning()\\n" + "    GroupLookup_Default(Index(c.PRIMARY) -> c)\\n" + "      IndexScan_Default(Index(c.PRIMARY), __row_id = $1)" )
8524	assertEquals ( "column margin must be added once", table. getColumnMargin ( ), columnExt. getPreferredWidth ( ) - comp. getPreferredSize ( ). width )
8525	assertEquals ( "{ $code : 'func code() {}' }", element. getValueAsString ( ) )
8526	assertArrayEquals ( new String [ ] [ ] { { "A", "B", "C" }, { "1", "2", "3" } }, event. getMatrix ( ) )
8527	assertSongData ( songList. getContent ( ). get ( 0 ) )
8528	assertEquals ( "abaac\\n", found )
8529	assertEquals ( numCalls, newNumCalls )
8530	Assert. assertEquals ( SslMode. MIXED, mode )
8531	assertViewName ( mav, "redirect:/posts/" + dto. getId ( ) )
8532	assertThat ( "unencoded field has type String", field. getType ( ), equalToType ( String. class ) )
8533	assertTrue ( returnedNumber == numberOfOperations )
8534	Assert. assertTrue ( rPr. getSz ( ). getVal ( ). intValue ( ) == 24 )
8535	assertEquals ( Type. PRIVACY_PREFERENCE_FILE, Type. get ( preference ) )
8536	assertOut ( "delete a" )
8537	Assert. fail ( "Expected SQL exception" )
8538	assertFailureValue ( "value of", "array.length" )
8539	assertNotNull ( host )
8540	assertEquals ( "Expected ratcheting to have been updated", 8, config. getTypeConfigs ( ). get ( CHECKSTYLE ). getMax ( ) )
8541	assertEquals ( 0xff, keyInfo. getMaxSubKeyLen ( ) )
8542	Assert. assertEquals ( 4, metrics. size ( ) )
8543	assertThat ( mapOfProperties, hasKey ( "leveluplunch.java.examples" ) )
8544	Assert. assertEquals ( "unexpected XML protocol result", sb. toString ( ), tagOut )
8545	assertEquals ( testNewUrl, jobEntryHadoopCopyFiles. loadURL ( testUrl, testNcName, metaStore, mappings ) )
8546	assertThat ( localization. getLocale ( ), equalTo ( PT_BR ) )
8547	assertEquals ( 4, booleans. size ( ) )
8548	AssertJUnit. assertTrue ( "filter does not match object", match )
8549	assertTrue ( source. isSnapshotsDisabled ( ) )
8550	assertThat ( noOfSolutions, is ( 30 ) )
8551	assertEquals ( report, actual )
8552	assertThat ( fileContent, is ( "HELLO THIS IS ENGLISH" ) )
8553	assertEquals ( TEST_CONTENT, CharStreams. toString ( result ) )
8554	assertObjectEquals ( "{'in':'header',name:'H',type:'string'}", x )
8555	Assert. assertFalse ( PublisherSoapServerUtils. gpPublisherClient. publishStyle ( "STYLE_MOCK_MOCKITO_SOAP", "STYLE_MOCK_MOCKITO", Boolean. FALSE ) )
8556	assertEquals ( "Hello :name", ResponseBodyInterpolator. interpolate ( "Hello ^:name", req ) )
8557	assertThat ( diffs. toString ( ), equalTo ( "[Diff(EQUAL,\\"[a, b]\\"), Diff(DELETE,\\"[c, d]\\")]" ) )
8558	Assert. assertFalse ( pf. passesFilter ( p1 ) )
8559	assertThat ( assocTypeDAO. getTypes ( TENANT_ID, false ), is ( expectedTypes ) )
8560	assertEquals ( HELLO_URI + "iterationstrategy/", uri. toASCIIString ( ) )
8561	assertFalse ( patient. getIdentifierFirstRep ( ). isEmpty ( ) )
8562	assertTrue ( "Actual value of byteArrayOutputStream: " + String. valueOf ( byteArrayOutputStream ), success )
8563	Assert. assertFalse ( result. get ( ) )
8564	assertEquals ( new File ( ABS_BASE_DIR + SEP + RELATIVE_PATH ), DockerPathUtil. resolveAbsolutely ( toResolve, ABS_BASE_DIR ) )
8565	Assert. notNull ( department )
8566	assertEquals ( false, result )
8567	assertThat ( driver. findElement ( By. id ( "halfwidth" ) ). getAttribute ( "value" ), is ( "锞�锞�-锞�-锞�锞�锞�!" ) )
8568	assertEquals ( null, min )
8569	Assert. assertEquals ( "[[name=Michael Jackson, contact=Contact [address=Address2 [country=Country [name=United States of America], city=New York], phone=Phone [phoneNo=111 111-1111]]], " + "[name=Sting, contact=Contact [address=Address2 [country=Country [name=United Kingdom], city=London], phone=Phone [phoneNo=222 222-22222]]], " + "[name=Tarkan, contact=Contact [address=Address2 [country=Country [name=Turkey], city=Istanbul], phone=Phone [phoneNo=333 333-3333]]]]", resultList. toString ( ) )
8570	Assert. fail ( )
8571	assertThat ( classesToParse, is ( empty ( ) ) )
8572	assertNotNull ( User. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
8573	assertEquals ( Boolean. FALSE, e. getEnableCounting ( ) )
8574	assertEquals ( expResult, result )
8575	assertEquals ( 2, Asciidoclet. optionLength ( DocletOptions. BASEDIR, mockAdapter ) )
8576	assertEquals ( "", result )
8577	assertEquals ( pushInfoRequest. getUri ( baseURI ), expectedURI )
8578	Assert. assertEquals ( 1, mockService. getMessages ( ). size ( ) )
8579	Assert. assertTrue ( "Failure expected true", r. getLeft ( ) )
8580	assertRowCount ( results, 2 )
8581	assertNotNull ( Member. fetcher ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "MBXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
8582	this. assertAnalyzesTo ( _a, "{\\"foo\\":[true,false]}", new String [ ] { "foo", "true", "false" }, new String [ ] { TypeAttribute. DEFAULT_TYPE, TypeAttribute. DEFAULT_TYPE, TypeAttribute. DEFAULT_TYPE } )
8583	assertEquals ( renderJarTypeOnlyResult ( ), result )
8584	assertEquals ( ImmutableList. of ( Pair. of ( 1, 3.0f ) ), it )
8585	Assert. assertEquals ( 2, analyser. getLoadRightAfterActivity ( route. getActivities ( ). get ( 2 ), route ). get ( 0 ) )
8586	Assert. assertEquals ( "}", model. getUnit ( 0, PlainText. class ). getText ( ) )
8587	assertEquals ( body. toString ( ), "1test final" )
8588	Assert. assertEquals ( 2, violations. size ( ) )
8589	assertions. contains ( values )
8590	Assert. assertEquals ( "/test?queryParams=a%2Cb%2Cc,1%2C2%2C3", result )
8591	assertEquals ( 1, count )
8592	assertTrue ( Iterables. elementsEqual ( result. getSteps ( ), Lists. newArrayList ( new Step ( 0L, 0L, 0L, true ) ) ) )
8593	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"yes\\"?><jaxbModel><first>John</first><last>Citizen</last></jaxbModel>", result )
8594	assertEquals ( "value", exp. asDynamic ( ). asNavigationPropertyPath ( ). getValue ( ) )
8595	Assert. assertNull ( caixa )
8596	classes. assertIsPackagePrivate ( someInfo ( ), clazz )
8597	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
8598	assertThat ( selectionModel. getSelectedClass ( ), is ( Optional. empty ( ) ) )
8599	assertTrue ( filter. matches ( "resilient_pool-0", poolOperation ) )
8600	assertEquals ( expectedNewCookie, parsedNewCookie )
8601	Assert. assertTrue ( response. toString ( ), response. result ( ) )
8602	Assert. assertTrue ( "Port " + referenced. getId ( ) + " must be a reference to an existing port", isReferenced )
8603	assertSeven ( result, testContext, async )
8604	assertEquals ( "whatever", sinkFactory. destDirName )
8605	assertThat ( ( String ) registrationProperties. getValue ( ). get ( "configuration" ), equalTo ( "bundlecontext" ) )
8606	assertEquals ( "OK", r )
8607	assertEquals ( 2, new NQueens ( solution ). attackedQueens ( ) )
8608	Assert. assertTrue ( ev. isEmpty ( ) )
8609	assertEquals ( expected, e. evaluate ( ), 0.0 )
8610	Assert. fail ( "should not be able to ignore type 'host'" )
8611	Assert. assertEquals ( RheemCollections. asSet ( expectedOutputValues ), RheemCollections. asSet ( outputValues ) )
8612	assertEquals ( 123, row. getValue ( ) )
8613	assertEquals ( expected, b )
8614	assertEquals ( path, uri )
8615	assertThat ( reader, is ( notNullValue ( ) ) )
8616	assertSame ( MockChooser1. class, delegate. getClass ( ) )
8617	assertEquals ( formatedValue, "26.637.142/0001-58" )
8618	assertTrue ( FileUtil. findPatternInFile ( new File ( resultFilename ), "Avoid empty if" ) )
8619	assertFalse ( executor. shouldExecute ( action, javax. faces. event. PhaseId. APPLY_REQUEST_VALUES, true ) )
8620	assertTrue ( str. contains ( "QGroup group = new QGroup(\\"group1\\");" ) )
8621	assertEquals ( "Homer", exp. evaluate ( person ) )
8622	assertOut ( "this.b = this.b + 1" )
8623	Assert. assertEquals ( "PersonAddressName", result )
8624	assertEquals ( 'b', in. peekByte ( ) )
8625	assertNull ( result )
8626	Assert. assertNull ( gran )
8627	assertThat ( response, containsString ( "81.80.117.237 - 81.80.117.237" ) )
8628	assertEquals ( "00:00:01", result )
8629	assertThat ( givenStories. getPaths ( ), equalTo ( Arrays. asList ( GIVEN_STORY_PATH1, GIVEN_STORY_PATH2 ) ) )
8630	assertFalse ( isEditable )
8631	assertTrue ( response. contains ( "you" ) )
8632	assertEquals ( "Failed at " + i, reduced. getDouble ( i ), res, 0.001 )
8633	Assert. assertEquals ( state. IDLE, state )
8634	Assert. isTrue ( getUser. getGroups ( ). size ( ) == 0 )
8635	assertLinkWithSameUnitsOk ( LinkInfo. UNIT_TYPE. NETWORK, units )
8636	assertEquals ( DEFAULT_POPULATION_SIZE + evaluations, algorithm. getEvaluations ( ) )
8637	assertEquals ( "Period of time % Milliseconds in a second < 500L", "00:00:10 (hh:mm:ss)", DateTimeUtils. millisecondsToHumanTime ( period ) )
8638	assertEquals ( "V1 Track", wrapper. getTrack ( ) )
8639	assertNotNull ( buildInfo )
8640	assertTrue ( "connectSession did not close", closed. await ( 10, SECONDS ) )
8641	assertEquals ( "3 kuud tagasi", t. format ( new Date ( 0 ) ) )
8642	Assert. assertEquals ( "1 hour from now", p. format ( new Date ( 1000 * 60 * 60 ) ) )
8643	assertEquals ( "+2", expr. getParameterValue ( ) )
8644	assertEquals ( "pmTitleCfgResKeyTest.ContainerPm", container. getPmResKey ( ) )
8645	Assert. assertEquals ( config, result )
8646	assertThat ( client. proxy ( ). address ( ), equalTo ( new InetSocketAddress ( "proxyhost", 1234 ) ) )
8647	assertEquals ( r1, r2 )
8648	assertNotNull ( rs )
8649	assertEquals ( component. getStyleName ( ), "style1 style2" )
8650	Assert. fail ( )
8651	assertSame ( file, new JsonWriter ( job, file ). getCoverallsFile ( ) )
8652	assertEquals ( expectedUrl, url )
8653	assertEquals ( vertices, graph. traversal ( ). V ( ). out ( ). toList ( ) )
8654	assertEquals ( coder. parse ( "-6" ), field. pow ( coder. parse ( "s2 * s3" ), 2 ) )
8655	assertEqualsIgnoreLineEnding ( output, "{\\n" + "  \\"firstProperty\\" : \\"string\\"\\n" + "}" )
8656	Assert. assertEquals ( first. hashCode ( ), bc. hashCode ( ) )
8657	assertEquals ( "{test;param;}", result )
8658	assertThat ( main. getClasspath ( ), arrayContaining ( classPathUrls ) )
8659	assertEnvelopeEquals ( expected, actual, STRICT )
8660	assertFalse ( "isPresent", optional. isPresent ( ) )
8661	assertEquals ( service. getSize ( new String [ ] { "", "", "" } ), 3 )
8662	assertThat ( actual, notNullValue ( ) )
8663	assertEquals ( "/foo/bar/baz", output )
8664	Assert. assertFalse ( conceptService. hasAnyConceptAttribute ( conceptAttributeType ) )
8665	assertTrue ( selector. evaluate ( source ) )
8666	assertFalse ( "Created MulticastSocket", context. datagramSocket instanceof MulticastSocket )
8667	Assert. assertEquals ( 5.1f, value, 0 )
8668	assertCard ( expectedCard, "http://magiccards.info/dgm/en/3.html", "Common", expectedCard. getName ( ) )
8669	assertEquals ( 5, request. getOauthParameters ( ). size ( ) )
8670	assertEquals ( "SELECT\\n" + "c.id, c.name, c.tags, c.category, c.description, \\n" + "c.division, c.experience_level as \\"experienceLevel\\", \\n" + "c.locations, c.type, c.parent_id as \\"parentId\\", \\n" + "g.latitude as \\"latitude\\", g.longitude as \\"longitude\\"\\n" + "FROM campaign c\\n" + "WHERE \\n" + "c.type = 'JOBPAGE' AND c.createts < now() -- {}\\n" + "ORDER BY c.createts\\n" + "LIMIT 100 -- {}\\n" + "OFFSET 1 -- {}", actual )
8671	Assert. fail ( "Should not be able to generate a negative length String" )
8672	context. assertIsSatisfied ( )
8673	assertNull ( retry )
8674	Assert. assertFalse ( ModuleUtil. matchRequiredVersions ( openmrsVersion, requiredVersion ) )
8675	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
8676	assertThat ( renderLayers. size ( ), IsEqual. equalTo ( 0 ) )
8677	Assert. assertNull ( job )
8678	Assert. assertEquals ( 1, repo. getAuditTrail ( eqd2 ). size ( ) )
8679	assertEquals ( expResult, result )
8680	assertEquals ( a1, a2 )
8681	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, n ) + ", rmse = " + rmse, 0.0, rmse, EPS_UNSCALED )
8682	assertThat ( underTest. execute ( underTest, null, null, new Object [ ] { PATH, FORMAT, "group_repo" }, null ), is ( false ) )
8683	assertTrue ( Pattern. matches ( "(?s).*<head>\\\\s*<title>\\\\s*messages01.jsp\\\\s*</title>\\\\s*<style\\\\s*type=\\"text/css\\"\\\\s*media=\\"screen\\">.*\\\\.errors.*</style>\\\\s*</head>\\\\s*<body>\\\\s*<ul\\\\s*class=\\"errors\\">\\\\s*<li>\\\\s*\\\\{0\\\\}:\\\\s*Validation\\\\s*Error:\\\\s*Value\\\\s*is\\\\s*required.\\\\s*</li>\\\\s*</ul>\\\\s*</body>.*", page. asXml ( ) ) )
8684	mockery. assertIsSatisfied ( )
8685	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
8686	assertOut ( "a.splice(2, 1)[0]" )
8687	Assert. assertNull ( foundPid )
8688	assertEquals ( asList ( size, size ), segmentSizes )
8689	assertEquals ( "theSubStart", hpi. getStartActivityId ( ) )
8690	assertDocument ( session. getSessionFactory ( ), "Enterprise", "{ '_id' : 'enterprise-1' }", "{ " + "'_id' : 'enterprise-1', " + "'departments' : {" + "'sawing' : { 'name' : 'Sawing', 'headCount'  : 7 }," + "'sale' : { 'name' : 'Sale', 'headCount'  : 2 }," + "}" + "}" )
8691	Assert. assertEquals ( strExpected, strActual )
8692	assertEquals ( calendar. getTime ( ), toml. getDate ( "a_date" ) )
8693	assertEquals ( dst, doc )
8694	assertEquals ( "isForceSwitched: false, poolCreated: true, hostName: 10.32.20.139, port: 3306", status. toString ( ) )
8695	assertEquals ( "foo", new Mirror ( ). on ( annotation ). invoke ( ). method ( "value" ). withoutArgs ( ) )
8696	AssertJUnit. assertEquals ( startEdge, actualEdge )
8697	runner. assertNotValid ( credentialsService )
8698	Assert. assertTrue ( "output does not contain version", listOutput. startsWith ( "SeqWare version" ) )
8699	assertTrue ( "Russian alphabet not correctly sorted", result )
8700	assertNotNull ( result )
8701	assertEquals ( "a b\\n", found )
8702	assertEquals ( 7, vrp. getJobs ( ). get ( "1" ). getSize ( ). get ( 0 ) )
8703	assertEquals ( "abca", res )
8704	assertEquals ( JobStatus. ENQUEUED, job. status )
8705	assertEquals ( expected, content )
8706	assertEquals ( expResult, result )
8707	assertEquals ( XML_BOOKS, writer. toString ( ) )
8708	assertEquals ( source, select. getSource ( ) )
8709	ITUtils. assertReceivingDifferentRows ( proxy, key, ROW_COUNT )
8710	Assert. assertFalse ( p1. isSameAs ( p2 ) )
8711	assertRoundtrip ( input )
8712	assertSame ( ctrlC, accelerator )
8713	assertThat ( domain. getServer ( "server1", "cluster1" ). getDesiredState ( ), equalTo ( "server" ) )
8714	assertEquals ( before, after )
8715	Assert. assertEquals ( b, a )
8716	assertEquals ( asList ( foo2 ), results )
8717	assertFormat ( number, String. valueOf ( number ) )
8718	assertThat ( converter. convert ( "10/06/2008", Calendar. class, bundle ), is ( equalTo ( ( Calendar ) new GregorianCalendar ( 2008, 5, 10 ) ) ) )
8719	assertConnection ( createUrl ( url ). openConnection ( ) )
8720	assertEquals ( map. keySet ( ). size ( ), 211 )
8721	assertEquals ( defaults, config. getDefaults ( ) )
8722	Assert. assertTrue ( version1. compareTo ( version2 ) < 0 )
8723	Assert. fail ( "Should throw FileNotFoundException" )
8724	assertThat ( uri. getPath ( ), endsWith ( "testing" ) )
8725	assertNotNull ( result )
8726	Assert. assertEquals ( siteFinder. getSiteList ( ). size ( ), 1 )
8727	assertEquals ( "Expected 400 but got " + response. getStatus ( ), 400, response. getStatus ( ) )
8728	assertEquals ( Constants. FOLLOW_PARAM + "=111111111" + UrlCodec. encode ( "," ) + "222222222", endpoint. getQueryParamString ( ) )
8729	assertEquals ( "Expected 0 results!", 0, n )
8730	assertTrue ( latch. await ( 4, SECONDS ) )
8731	assertThat ( time. with ( PlainTime. COMPONENT. setToNextFullHour ( ) ), is ( PlainTime. midnightAtEndOfDay ( ) ) )
8732	Assert. assertEquals ( "John Doe", customer )
8733	assertMockEndpointsSatisfied ( )
8734	assertThat ( parsed, is ( equalTo ( original ) ) )
8735	assertNotNull ( modelFamilyDTOs )
8736	Assert. assertEquals ( ERROR_MESSAGE + input + '"', expected, filter ( input ) )
8737	Assert. assertTrue ( pss. toString ( ). contains ( Integer. toString ( c. get ( Calendar. YEAR ) ) ) )
8738	assertEquals ( "Did not match expected URIs", expected, lookups )
8739	assertEquals ( new Short ( ( short ) 3 ), t )
8740	assertEquals ( "icmp-rule-desc-update", policyRule. getDescription ( ) )
8741	assertFalse ( to. hasListeners ( ) )
8742	assertEquals ( ",", testDelimiter )
8743	Assert. assertEquals ( decompressFlag, methodCalled. get ( 0 ) )
8744	assertThat ( channel. isLongString ( ), equalTo ( true ) )
8745	assertEquals ( HttpStatusCode. OK_200, response. getStatus ( ) )
8746	assertEquals ( "/parent/dir/a/b/c", path. toString ( ) )
8747	assertTrue ( output. isIsomorphicWith ( source ) )
8748	assertArrayEquals ( message, serializer. serialize ( ) )
8749	Assert. assertEquals ( "(aa_change_substitution (aa_point_location (aa_char Cys) 123) (aa_char Arg))", aa_change_substitution. toStringTree ( parser ) )
8750	assertEquals ( "true", Property. buildAll. getValue ( new Properties ( ) ) )
8751	assertions. hasSize ( 3 )
8752	assertThat ( description. toString ( ), is ( "a stage completing with an exception " + "that is an instance of java.lang.RuntimeException" ) )
8753	assertLabelQueryResult ( query. toString ( ), both ( binds ( "xLabel", Literal. class ) ). and ( binds ( "x", URI. class ) ), both ( binds ( "xLabel", Literal. class ) ). and ( notBinds ( "x" ) ) )
8754	assertEquals ( "requests size", 4, requests. size ( ) )
8755	assertEquals ( source, builder. getPropertyState ( ) )
8756	Assert. assertEquals ( json. toString ( ), fromJson. toString ( ) )
8757	assertThat ( error. getCategory ( ), is ( ErrorCategory. DUPLICATE_KEY ) )
8758	assertEquals ( 0, stk. size ( ) )
8759	assertEquals ( 4321, get ( url ). intHeader ( "malformed", 4321 ) )
8760	assertTrue ( Graphene. waitGui ( ). until ( ExpectedConditions. textToBePresentInElementLocated ( By. id ( "username" ), "admin" ) ) )
8761	assertNotNull ( cal )
8762	assertNotNull ( output. list ( ) )
8763	assertEquals ( FAILED, result. get ( OUTCOME ). asString ( ) )
8764	assertThat ( "testSetPrimaryBitstreamID 0", b. getPrimaryBitstream ( ), equalTo ( bs ) )
8765	assertThat ( columnCombination. getContainedOneColumnCombinations ( ), IsIterableContainingInAnyOrder. containsInAnyOrder ( fixture. getExpectedOneColumnCombinations1 ( ) ) )
8766	assertFalse ( nextExecution. isPresent ( ) )
8767	assertFalse ( rw. isValidUtf8 ( buf ) )
8768	Assert. assertEquals ( jdkHand, acHand )
8769	assertEquals ( expectedHome, config. getDroidWorkDir ( ) )
8770	assertEquals ( AuthenticationTypeParser. SAS, parserSAS. getAuthenticationParser ( ). getType ( ) )
8771	assertThat ( true, equalTo ( result ) )
8772	assertTrue ( status. equals ( HardActivityConstraint. ConstraintsStatus. FULFILLED ) )
8773	assertThat ( worker. getAssignedEffort ( today ), equalTo ( hours ( 13 ) ) )
8774	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 06" ) )
8775	assertThat ( props. getProperty ( COLA_REPORT_METHOD ), is ( POST_METHOD ) )
8776	Assert. assertEquals ( 100., time, 0.01 )
8777	assertEquals ( expected, actual )
8778	assertTrue ( instanceConstraintViolationsList. toString ( ), instanceConstraintViolationsList. size ( ) == 0 )
8779	assertEquals ( 0, getMessageQueueSize ( ) )
8780	assertTrue ( jiffle. isCompiled ( ) )
8781	assertEquals ( "Original CurrentInstance should be set after the task has been run", "Original value", CurrentInstance. get ( String. class ) )
8782	assertThat ( response, containsString ( "ERROR:109: invalid combination of flags passed" ) )
8783	assertFalse ( objJPAEdmProperty. isConsistent ( ) )
8784	Assert. assertEquals ( val1, index )
8785	assertNotNull ( factoryBean. createKeyManagerFactory ( ) )
8786	Assert. assertEquals ( 0, actual, 1e-10 )
8787	assertEquals ( dn, dnExpected )
8788	assertEquals ( a1. getName ( ), a2. getName ( ) )
8789	assertTrue ( ex. getCause ( ) instanceof MutationsRejectedException )
8790	Assert. assertFalse ( validator. invalidMessagesFor ( cpf ). isEmpty ( ) )
8791	assertEquals ( auth1. hashCode ( ), auth2. hashCode ( ) )
8792	Assert. assertEquals ( "Verify that the only registered container is returned as default", name, container. getName ( ) )
8793	Assert. assertTrue ( true )
8794	assertMockEndpointsSatisfied ( )
8795	Assert. assertTrue ( o. equals ( obj ) )
8796	assertEquals ( "Unexpected URL address", con. getURL ( ). toString ( ), "http://somewhere.different/" )
8797	Assert. assertEquals ( driver ( ). manage ( ). getCookieNamed ( "name" ), null )
8798	assertEquals ( 1, handlerContainer. onBindMethodCalled )
8799	assertEquals ( list, deserializedList )
8800	assertEquals ( 0.875, aiResponse. getResult ( ). getScore ( ), 1e-6 )
8801	assertHelpLines ( "Option                             Description", "------                             -----------", "--date [MM/dd/yy: your basic date  a date     ", "  pattern]                                    ", EMPTY )
8802	assertThat ( anyTS. contains ( CLOCK_HOUR_OF_AMPM ), is ( true ) )
8803	Assert. assertEquals ( value2, value1 )
8804	assertThat ( action. hashCode ( ), is ( other. hashCode ( ) ) )
8805	assertEquals ( "Connection per hosts", 70 / 5, ioConfig. getMaxConnPerHost ( 5 ) )
8806	assertEquals ( expectedSource, instrumentedSource )
8807	assertEquals ( ValidationResult. OK. getStatus ( ), validationResult. getStatus ( ) )
8808	assertEquals ( 2L, actual )
8809	Assert. assertNull ( c. getAccessLevel ( ) )
8810	assertEquals ( true, Objects. equals ( new JSONObject ( data ), new JSONObject ( data ) ) )
8811	Assert. assertNotNull ( options. getSubOptions ( ConverterRegistry. class ) )
8812	assertEquals ( "scheme://:123/path", uri. toString ( ) )
8813	assertEquals ( dbUrl, ref. toString ( ) )
8814	assertEquals ( true, cf1. hasChildren ( ) )
8815	Assert. assertTrue ( getException )
8816	assertEquals ( "AC", output )
8817	assertions. doesNotContainNull ( )
8818	assertEquals ( 0, ret. size ( ) )
8819	assertEquals ( result, subject. unmodifiableSet ( ) )
8820	assertArrayEquals ( comm. getCommitmentValue ( ), deserializedComm. getCommitmentValue ( ) )
8821	assertTrue ( extension. isUpdateContainerAllowed ( CONTAINER_ID, new KieContainerInstanceImpl ( CONTAINER_ID, KieContainerStatus. STARTED, kieContainer ), new HashMap < > ( ) ) )
8822	assertTrue ( difference. toString ( ), difference. identical ( ) )
8823	assertNotReferenceable ( highlander )
8824	assertEquals ( cache. getMockDef ( ), cache. getActivity ( cache. getIdMock ( ) ) )
8825	assertEquals ( "12 丿���� 丿�诏乇", t. format ( new Date ( 1000 * 60 * 12 ) ) )
8826	assertOut ( "RoyaleTest_A.prototype.royaleTest_a = function() {\\n  var /** @type {number} */ a = NaN;\\n  var /** @type {number} */ b = NaN;\\n  var /** @type {number} */ c = NaN;\\n  //var /** @type {number} */ a = NaN;\\n  //var /** @type {number} */ b = NaN;\\n  //var /** @type {number} */ c = NaN;\\n}" )
8827	assertEquals ( 1, interceptAnnotations. size ( ) )
8828	assertEquals ( "锌�械写懈 3 胁械泻邪", t. format ( new Date ( 0 ) ) )
8829	assertEquals ( "ing", removeSentenceDecorator. toDisplay ( ) )
8830	assertBeanBinding ( camelctx )
8831	assertEquals ( "the notification handler did not receive the " + RESOURCE_ADDED_NOTIFICATION, 1, handler. getNotifications ( ). size ( ) )
8832	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 10" ) )
8833	assertTrue ( Bean81V3BindMap. class. getName ( )!= null )
8834	assertAccessorsCorrect ( multi, "maxSelect", 0, 1, 2 )
8835	Assert. assertEquals ( count1, count2 )
8836	assertEquals ( config. getOozieWorkflowConfig ( ), event. getValue ( ). getNewValue ( ) )
8837	assertEquals ( "ISA02", s. getElement ( 2 ) )
8838	assertEquals ( - 1, fileSystem. getVolptr ( ) )
8839	assertEquals ( "123涓���浜烘��卞����", deserialize. readUTF ( ) )
8840	assertTrue ( "Complex hierarchy entity validation failed", hierarchySchema. validate ( hierarchyEntity ) )
8841	Assert. assertEquals ( foundName, "buthane" )
8842	assertThat ( result, is ( lines ( new String [ ] [ ] { { "\\\\\\\\t" } } ) ) )
8843	assertThat ( mojo. includeResourcesRecursively ( file ), is ( false ) )
8844	Assert. assertEquals ( 78, tm. getCertificates ( ). size ( ) )
8845	assertEqualsIgnoreWhitespace ( result, KnowledgeHelperFixerTest. fixer. fix ( raw ) )
8846	assertThat ( result, is ( Arrays. copyOfRange ( data, 1, 3 ) ) )
8847	assertEquals ( "id", item. getId ( ) )
8848	assertArrayEquals ( getPixels ( expected, 0, 0, expected. getWidth ( ), expected. getHeight ( ), null ), getPixels ( actual, 0, 0, actual. getWidth ( ), actual. getHeight ( ), null ) )
8849	assertNotNull ( cat )
8850	assertEquals ( expectedPanel, actualPanel )
8851	assertTrue ( "testSnappyBlockCompression error!!!", out. toByteArray ( ). length > 0 )
8852	Assert. assertEquals ( "0", sut. objectToString ( activity ) )
8853	Assert. assertEquals ( rawInput, text )
8854	assertEquals ( expected, elements )
8855	Assert. isTrue ( organizations. size ( ) > 0 )
8856	assertEquals ( "hello", obj )
8857	assertThat ( destination. getBodyText ( ), is ( "Navigation Destination from : from the rule link" ) )
8858	assertEquals ( s, "name=" + value )
8859	assertEquals ( 2, Evaluator. evaluate ( ex ) )
8860	assertThat ( result, equalTo ( "setDValue" ) )
8861	assertEquals ( expected, model )
8862	assertEquals ( "setter password expected", "PaZZwor6", user. getPassword ( ) )
8863	assertEquals ( "root.parentq.user1", policy. assignAppToQueue ( "root.default", "user1" ) )
8864	assertThat ( ( ( IMXMLInstanceNode ) node ). getID ( ), is ( "myBtn" ) )
8865	Assert. assertEquals ( expectedIp, AgentUtils. findIpAddress ( AgentConstants. DEFAULT_NETWORK_INTERFACE ) )
8866	assertNullOrEquals ( "remark", "小懈��械屑邪 �械芯写械�懈�械�泻懈� �芯芯�写懈薪胁� 谐芯写邪 1995(小�-95)", crs. getRemarks ( ) )
8867	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
8868	Assert. assertEquals ( biography, dbAbba. getBioSummary ( ) )
8869	Assert. assertEquals ( "a<a-b-c>c", eval ( ctx ) )
8870	assertThat ( jdbcSource, nullValue ( ) )
8871	assertFalse ( "Found message 'Contains'", handler. containsMessageSubstring ( "Contains" ) )
8872	assertThat ( result, is ( equalTo ( ( List < String > ) of ( "AA", "BB" ) ) ) )
8873	assertEquals ( world, result )
8874	assertThat ( reply ( ), is ( anAppendReply ( ). withResult ( false ) ) )
8875	assertNotNull ( result )
8876	Assert. assertEquals ( string, table. getFilterVar ( ) )
8877	assertEquals ( error, "No Such Element found" )
8878	assertEquals ( 1, states. size ( ) )
8879	assertTrue ( res instanceof LinkedList )
8880	assertEquals ( ExpressionFactory. inExp ( "path", Arrays. asList ( artist1, artist2 ) ), exp )
8881	assertEquals ( jsonFromObject, jsonFromString )
8882	assertEquals ( originalFetchCount, timeline. getFetchCount ( ) )
8883	Assert. fail ( "Exception expected" )
8884	assertFalse ( isValid )
8885	assertThat ( unix ( instance, strategy ), equalTo ( "ec2-0-0-0-0.compute-1.amazonaws.com" ) )
8886	assertEquals ( false, result )
8887	assertThat ( employee. getSalary ( ), is ( 100.50D ) )
8888	assertThat ( request. getTimestamp ( ), equalTo ( now ) )
8889	assertEquals ( "(& [* fo.*] [*.*oo] [= foo])", m. toString ( ) )
8890	assertThat ( advisor. getAdvice ( ), instanceOf ( DelegateTpicToAsyncInterceptor. class ) )
8891	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoItemProdutoCombustivel ( ). toString ( ) )
8892	assertNull ( "Removed pool stil available", _poolDeviceMap. getByDeviceId ( ds. getDeviceId ( ) ) )
8893	assertTrue ( "exp(" + arg + ") is " + vFM + " instead of " + vM, Precision. equalsIncludingNaN ( vM, vFM ) )
8894	assertEquals ( 10, digits. size ( ) )
8895	Assert. assertEquals ( "Hello World!", result )
8896	assertTrue ( resultComparator. compare ( od1, od2 ) < 0 )
8897	assertEquals ( 2, nuOfType1Vehicles )
8898	assertEquals ( "dois undecilh玫es de inteiros", actual )
8899	assertThat ( model2. getMyBytes ( ), is ( value ) )
8900	assertEquals ( "Block size", 0, ecipher. getBlockSize ( ) )
8901	assertEquals ( "Compression/Decompression error", inputLine, readLine )
8902	assertThat ( foundResources, contains ( p2id. getValue ( ) ) )
8903	assertEquals ( expectedQuery, actualQuery )
8904	assertTrue ( actionsTriggered. get ( ) )
8905	Assert. assertEquals ( testPath, transMeta. getFilename ( ) )
8906	assertThat ( underTest. buildWhereClause ( emptyList ( ), queryOptions ), is ( nullValue ( ) ) )
8907	assertEquals ( values, ramlRequest. getFormValues ( ) )
8908	assertions. isSorted ( )
8909	assertEquals ( htmlDoc, new String ( output ) )
8910	arrays. assertDoesNotContain ( description, actual, null )
8911	assertEquals ( "Unexpected status code in HTTP response.", SC_UNAUTHORIZED, statusCode )
8912	assertFalse ( validatorLoadbalancer. validate ( meta, POST ). passedValidation ( ) )
8913	assertEquals ( 20, result )
8914	assertThat ( instance. getNaturalKey ( ), is ( ( Object ) "natural key" ) )
8915	assertEquals ( "value", entry. getValue ( ) )
8916	assertNull ( cut. getJobResource ( resource. getID ( ) + 1 ) )
8917	assertNotNull ( WorkerChannel. reader ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "WKXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
8918	Assert. assertEquals ( "{\\"@odata.context\\":\\"../../$metadata#ESMixPrimCollComp(32767)/" + "PropertyComp/olingo.odata.test1.CTBase\\"," + "\\"@odata.metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\"," + "\\"@odata.type\\":\\"#olingo.odata.test1.CTBase\\"," + "\\"AdditionalPropertyString\\":null," + "\\"PropertyInt16\\":111," + "\\"PropertyString\\":\\"TEST A\\"}", resultString )
8919	assertEquals ( "<textarea>&lt;p&gt;Jsoup&lt;/p&gt;</textarea>", doc. body ( ). html ( ) )
8920	assertTrue ( usl. getPenStroke ( ). getLineWidth ( ) == 8.0 )
8921	assertEquals ( "user1", decoded. getUid ( ) )
8922	assertEquals ( expectedOutput, timeConversion. getFormattedTime ( input. split ( ":" ) ) )
8923	assertTrue ( container. getItemIds ( ). contains ( id ) )
8924	assertEquals ( expResult, result )
8925	Assert. assertTrue ( newSql. equals ( "SELECT * FROM cpcplan@dblink" + suffix + " WHERE name = '12'" ) )
8926	Assert. assertEquals ( StringUtils. trimAllWhitespace ( result. toString ( ) ), "{\\"$or\\":[{\\"username\\":{\\"$regex\\":\\"Mistic\\"}}]}" )
8927	assertEquals ( LibUsb. SUCCESS, LibUsb. init ( context ) )
8928	assertNotNull ( "testEmptyCommand expected IllegalArgumentException", e )
8929	assertEquals ( "Null should be compatibilized to 0", 0, val )
8930	assertEquals ( "AttributeType[��city�� : String]", city. toString ( ) )
8931	assertThat ( result, equalTo ( false ) )
8932	assertEquals ( new ArrayList < > ( ), tagsList )
8933	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
8934	assertThat ( renderer, is ( instanceOf ( DefaultListRenderer. class ) ) )
8935	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). resolveVisibility ( "unknown" ) )
8936	assertEquals ( "Announcement table should be populated by 7 announcements", 7, controlPage. announcementTableSize ( ) )
8937	assertNull ( subject. preProcess ( "sql", mock ( Statement. class ), mock ( Connection. class ) ) )
8938	assertEquals ( "<a>c</a>", r )
8939	org. junit. Assert. assertEquals ( expected, actual )
8940	assertFalse ( rootNode. isAuthenticationEnabled ( ) )
8941	assertEquals ( PERSON_COUNT, personCount )
8942	assertEquals ( 1, branch_conditions. size ( ) )
8943	assertEquals ( TEST_MD5, computedDigest )
8944	Assert. assertEquals ( expected, actual )
8945	context. assertSentrySemanticException ( statement, "create view view1 as select a from " + DB1 + ".tb1", semanticException )
8946	assertThat ( result, is ( Arrays. asList ( "getMyField", "isMyField" ) ) )
8947	assertThat ( specification. getUnits ( ), is ( BYTE. multiply ( 1L << 20 ) ) )
8948	Assert. assertEquals ( match. getToken ( ), expected, computed, 0.000000000000001 )
8949	assertEquals ( 0, jobsToSubmit. size ( ) )
8950	assertThat ( studies. size ( ), is ( 0 ) )
8951	assertThat ( score > 0.0f, is ( true ) )
8952	assertEquals ( ZKFailoverController. ERR_CODE_NO_ZK, runFC ( svc ) )
8953	assertEquals ( "SELECT f1, f2 FROM Class", q. toString ( ) )
8954	assertTrue ( true )
8955	Assert. assertEquals ( 0, result. size ( ) )
8956	assertNotEquals ( dnsCache1, dnsCache2 )
8957	assertEquals ( SchemaFromInd2AndSubfield2. class, field. getDefinition ( ). getFieldIndexer ( ). getClass ( ) )
8958	assertEquals ( "Base value is not properly parsed", Long. valueOf ( 1000 ), parsed )
8959	assertTrue ( "Checkout method did not return true.", action. checkout ( launcher, workspace, "viewname" ) )
8960	assertThat ( estimator. getCardinality ( ), is ( 24L ) )
8961	Assert. assertTrue ( JexlASTHelper. equals ( one, two ) )
8962	assertThat ( connection, is ( notNullValue ( ) ) )
8963	Assert. assertTrue ( Math. abs ( maxAbsDeviation ) < 5E-4 )
8964	assertTrue ( rem. equals ( new LineParameters ( new Color ( 0x22, 0x33, 0x44 ), 1.0,.5, "" ) ) )
8965	assertClockEquals ( 5, 8, 12, 2 )
8966	Assert. assertTrue ( "We should get 7 documents after filter", count == 7 )
8967	assertThat ( getWindowHeaderMarginRight ( ), is ( "74px" ) )
8968	assertThat ( elasticSearchDownloader. createQuery ( ). toString ( ), containsString ( QUERY ) )
8969	assertThat ( source. getRetryLimit ( ), is ( i ) )
8970	assertAnnotations ( 0, Location. class )
8971	Assert. assertEquals ( expectedResult, result )
8972	assertHasFooMethod ( dst, dstClass )
8973	assertEquals ( locationRequest. getUri ( baseURI ), expectedURI )
8974	assertEquals ( 3, count )
8975	assertEquals ( "SetArgs{langs=[en, fr]}", setArgs. toString ( ) )
8976	assertTrue ( printError ( report ), report. hasItems ( ) )
8977	assertTrue ( "Expected no metrics to be written due to missing dataType", pairs. isEmpty ( ) )
8978	assertNotNull ( builder )
8979	assertNotNull ( result )
8980	assertNrOfEventListeners ( 1 )
8981	assertEquals ( Integer. valueOf ( 1 ), f. getLowestRanked ( ) )
8982	assertEquals ( results. get ( OutputNames. RETURN_RESULT ), "3" )
8983	Assert. assertTrue ( serviceWadl. length ( ) > 0 )
8984	Assert. assertNotNull ( users )
8985	assertEquals ( expectedRegister, newRegister )
8986	assertEquals ( expResult, result )
8987	assertEquals ( "one million and one hundred and fifty dollars and ninety-nine cents", actual )
8988	assertNotNull ( getStdOut ( ) )
8989	Assert. assertEquals ( "<times><LastModificationTime>2016-01-18T00:00:00</LastModificationTime><CreationTime>2016-01-15T00:00:00</CreationTime><LastAccessTime>2016-01-17T00:00:00</LastAccessTime><ExpiryTime>2016-01-16T00:00:00</ExpiryTime><Expires>True</Expires><UsageCount>23</UsageCount><LocationChanged>2016-01-19T00:00:00</LocationChanged></times>", xml )
8990	assertThat ( prefixDeclarations. isEmpty ( ), Matchers. is ( false ) )
8991	assertTrue ( ret )
8992	assertEquals ( "Mr. Horatio Test Hornblower", providerAttribute. getProvider ( ). getName ( ) )
8993	assertThat ( queen, is ( board. getChessBoard ( ) [ startRow - 1 ] [ startCol - 1 ]. getFigure ( ) ) )
8994	assertArrayEquals ( new int [ ] { 12345, 54321, 678768 }, factory. createDummy ( new ClassBindings ( ) ) )
8995	assertEquals ( expected, Util. underscoredToJava ( "_prop_name_Identifier_123", false ) )
8996	assertEquals ( expectedResult, result )
8997	Assert. assertTrue ( "Capacity did not shrink!", ( ( CapacityBalancingEvictor < Integer > ) evictor ). getCapacity ( ) < 10 )
8998	assertEquals ( map. size ( ), n * nThreads )
8999	Assert. assertNotNull ( new DFPersister ( ). read ( NFEnviaEventoRetorno. class, xml ) )
9000	assertEquals ( 8, sum )
9001	assertEquals ( expResult, result )
9002	assertThat ( connection, instanceOf ( HttpConnection. class ) )
9003	assertTrue ( AuthzResolver. authorizedInternal ( session, "test_security_admin", Arrays. asList ( createdTeam ) ) )
9004	assertThat ( formatter. format ( PlainDate. of ( 1582, 10, 1 ) ), is ( "Sep" ) )
9005	assertTrue ( "Failed to match compatible IPv6 subnet.", match )
9006	Assert. assertEquals ( "did not get expected column", RodsGenQueryEnum. COL_AUDIT_ACTION_ID. getName ( ), actualColumn )
9007	Assert. assertTrue ( _c. canConvertTo ( Long. class ) )
9008	assertNotNull ( service. prepare ( query ). asSingleEntity ( ) )
9009	assertEquals ( "foobar", s )
9010	assertTrue ( intercepted. get ( ) )
9011	assertThat ( status, is ( 201 ) )
9012	assertFalse ( result )
9013	Assert. assertNotNull ( migrationPlan )
9014	N4CliHelper. assertExpectedOutput ( "express properties: application, request, response, Route, Router, query, static", out )
9015	assertEquals ( 3, cheeses. size ( ) )
9016	Assert. assertEquals ( expected, actual, TOl )
9017	assertThat ( registerList. getRegisters ( ), is ( sameInstance ( set ) ) )
9018	assertThat ( MomentInterval. parseISO ( "P4DT1H45M/2012-04-05T16:00Z" ), is ( expected ) )
9019	assertTrue ( entities. size ( ) == 1 )
9020	assertThat ( crownStreetAddress. equalsContent ( rileyStreetAddress ), is ( false ) )
9021	assertEquals ( "The event record should be ignored", 0, changes. size ( ) )
9022	assertTrue ( RangeDefinition. isDocSpecific ( docSpecificRange ) )
9023	assertEquals ( jobConfig, createSut ( ). getOldConfigXml ( PluginUtils. getHistoryDao ( ). getDeletedJobs ( ) [ 0 ]. getName ( ), timestamp ). getFile ( ) )
9024	assertRollupBeanValidation ( json, "rollup[0].query[0].aggregator At least one aggregator must be a range aggregator" )
9025	assertTrue ( reader. isLost ( ) )
9026	assertTrue ( set. isEmpty ( ) )
9027	assertThat ( document, notNullValue ( ) )
9028	Assert. assertNull ( session, "No session should have been created when proxy set is empty" )
9029	Assert. assertEquals ( expected, actual )
9030	assertEquals ( s, r. toString ( ) )
9031	assertThat ( validationErrors ( "/pdf/a4-20pages.pdf", innstillinger ), empty ( ) )
9032	assertEquals ( original. toString ( ), imposter. toString ( ) )
9033	assertEquals ( actual, expected, "Wrong substitution" )
9034	Assert. assertEquals ( 1, statistics. size ( ) )
9035	assertNull ( customPanelDef. getParent ( ) )
9036	assertions. containsOnly ( values )
9037	assertEquals ( "Response HTTP status code should be 200 (OK)", clientResponse. getStatus ( ), 200 )
9038	assertTrue ( CollectionUtils. diff ( correctResults, results ). isEmpty ( ) )
9039	Assert. assertEquals ( "LUCKQVACOGBFYSPPVSSOXJEKNSQQRQKPZC9NXFSMQNRQCGGUL9OHVVKBDSKEQEBKXRNUJSRXYVHJTXBPDWQGNSCDCBAIRHAQCOWZEBSNHIJIGPZQITIBJQ9LNTDIBTCQ9EUWKHFLGFUVGGUWJONK9GBCDUIMAYMMQX", hash )
9040	assertEquals ( "3 weeks from now", "浠�����3�遍��寰�", t. format ( new Date ( 1000 * 60 * 60 * 24 * 7 * 3 ) ) )
9041	assertSame ( shouldFind, selection. textInput ( By. id ( "test" ) ) )
9042	XMLAssert. assertXMLEqual ( "Invalid content received", content, result. toString ( ) )
9043	assertEquals ( "", p01. getContent ( ) )
9044	assertNull ( "Country Albania does not exist anymore", searchedNode )
9045	assertEquals ( pkgId, cache. getPkgId ( orgName, pkgName ) )
9046	assertThat ( value, isOneOf ( "55", "44", "45", "54" ) )
9047	assertEquals ( 1, dao. findByDemographicNo ( 1 ). size ( ) )
9048	assertThat ( bufferedEvents. size ( ), equalTo ( 1 ) )
9049	assertEquals ( expectedSource, instrumentedSource )
9050	assertEquals ( "error message not equal", "Invalid request. Parameter: {jobType} is malformed", message )
9051	assertEquals ( DummyModel. where ( new Object [ ] { "column1", "test123" } ), Arrays. asList ( model ) )
9052	assertEquals ( actual1, actual2 )
9053	assertArrayEquals ( plaintext, result )
9054	assertSeen ( visible )
9055	assertNotEquals ( r1, r2 )
9056	Assert. assertEquals ( clickMe. getText ( ), buttonText )
9057	assertEquals ( docs. getResults ( ). size ( ), 2 )
9058	assertEquals ( keyExpected, keyBuilt )
9059	testRunner. assertAllFlowFilesTransferred ( EncodeContent. REL_FAILURE, 1 )
9060	assertSame ( "control", choice. get ( ) )
9061	assertSqlCanBeParsedAndDeparsed ( stmt )
9062	assertThat ( postResponse. getStatus ( ), is ( 400 ) )
9063	assertFalse ( checker. isFormat ( stream ) )
9064	assertServicesNotUpdated ( )
9065	assertThat ( description. toString ( ), is ( "a stage that completed to a value that is <1>" ) )
9066	assertEquals ( Response. Status. NOT_FOUND. getStatusCode ( ), target. request ( MediaType. TEXT_PLAIN ). get ( ). getStatus ( ) )
9067	Assert. isTrue ( grade. getEmployments ( ). size ( ) > 0 )
9068	assertSame ( initialProperties, contextParameterResolver. resolve ( parameter, applicationContext ) )
9069	assertEquals ( 0.0, rmsd, 0.0001 )
9070	assertTrue ( Modifier. isPrivate ( c. getModifiers ( ) ) )
9071	assertNotNull ( commandDocument )
9072	assertTrue ( "Agent-based allocation should have failed", plan. getAllReservations ( ). size ( ) == 0 )
9073	assertThat ( matcher. matches ( mockResponse ), is ( false ) )
9074	assertEquals ( "d 42\\n", found )
9075	assertThat ( count, is ( 3 ) )
9076	Assert. assertEquals ( 0, defaultJobIdPartitioner. partition ( 5, "application_1479206441898_35343" ) )
9077	assertEquals ( "Header on exchange should indicate success", TenantProcessor. TENANT_POLL_SUCCESS, exchange. getIn ( ). getHeader ( TenantProcessor. TENANT_POLL_HEADER ) )
9078	assertEquals ( adminServletPath, Iterators. getOnlyElement ( environment. getAdminContext ( ). getServletContext ( ). getServletRegistration ( HystrixBundle. SERVLET_NAME ). getMappings ( ). iterator ( ) ) )
9079	assertEquals ( "Test template 2\\n\\nTest template 1\\n\\n", drl )
9080	assertEquals ( 0, counter )
9081	Assert. assertEquals ( expectedList, customerDAO. getAll ( ) )
9082	assertEquals ( "Bef&amp;ore <a href=\\"" + BASE_URL + "#dest1?a=b&amp;c=d\\">Link&amp;1</a> Mid&amp;dle " + "<a href=\\"http://xyz/abc?x=y&amp;z=w\\">Link&amp;2</a> Aft&amp;er", result )
9083	Assert. assertNotNull ( json. getString ( "getFollowedResourceUuid" ) )
9084	Assert. assertEquals ( expectedNode. toString ( ), pdoc. toString ( ) )
9085	assertEquals ( "aTestString", classUnderTest. getSchemaName ( ) )
9086	assertCompletionDetails ( "my.background=<*>", "red", "demo.Color[BLUE, GREEN, RED]", "Hot and delicious" )
9087	assertThatCellReaderWasCalled ( )
9088	assertEquals ( "璁＄����璇�", 1, rs )
9089	assertArrayEquals ( new String [ ] { "1.2.40.0.13.1.1.99.23.1.2", "1.2.40.0.13.1.1.99.23.1.3" }, matches ( query, Tag. SOPInstanceUID ) )
9090	assertArrayEquals ( expectedBytes, serializer. serialize ( ) )
9091	assertEquals ( "/db/", xmldbURI. resolveCollectionPath ( uri ). toString ( ) )
9092	assertEquals ( "Failed on i = " + i, x, ret )
9093	Assert. assertNotNull ( out. getD15 ( ) )
9094	Assert. assertFalse ( "Get Profile  returned no results", json. isEmpty ( ) )
9095	Assert. assertEquals ( decryptedStringExpected, decryptedStringActual )
9096	assertEquals ( "��丿 �丨馗� 倬�卮", t. format ( new Date ( 0 ) ) )
9097	assertEquals ( expected, service. getTimestampInSeconds ( ) )
9098	Assert. assertTrue ( response. getStatus ( ) == OK. getStatusCode ( ) )
9099	Assert. assertEquals ( expected, s )
9100	assertTrue (! it. hasNext ( ) )
9101	assertThat ( serializeWith ( dateTime, formatter ), containsString ( dateTime. format ( formatter ) ) )
9102	assertEquals ( "1,32767,-32768,null", s. serialize ( ( HttpPartSchema ) null, new Short [ ] { new Short ( ( short ) 1 ), Short. MAX_VALUE, Short. MIN_VALUE, null } ) )
9103	assertEquals ( "Changelog parameter in properties file is recognized", "parameterValue", cli. changeLogParameters. get ( "some_changelog_parameter" ) )
9104	Assert. assertEquals ( 1, ret )
9105	assertEqualsIgnoreLineEnding ( xmlString, "<?xml version='1.1' encoding='UTF-8'?><string>string</string>" )
9106	assertFalse ( "Configuration is empty", plist. isEmpty ( ) )
9107	assertEquals ( VALID_DIR, mockPrefHandler. getPref ( PREF_KEY_LAST_TRACE_DIR ) )
9108	assertThat ( subtree. isEmpty ( ), is ( true ) )
9109	assertThat ( entity. globalIdDuringAwakeFromInsertion ( ). isTemporary ( ), is ( true ) )
9110	assertNotNull ( result )
9111	assertTrue ( isCorrectEnqLinkRequest )
9112	assertTrue ( payload. needsBuild ( getProject ( ) ) )
9113	runner. assertAllFlowFilesTransferred ( TailFile. REL_SUCCESS, 0 )
9114	Assert. fail ( "threshold exception expected" )
9115	assertSelected ( get ( 0 ) )
9116	assertEquals ( - 1, aNumber. compareTo ( bNumber ) )
9117	assertEquals ( scale ( value ), ra. get ( ). get ( ) )
9118	assertTrue ( p1. getToArtist ( ). readNestedProperty ( "paintingArray" ) instanceof List <? > )
9119	assertTrue ( ds. getAvailableDataStoreList ( ). size ( )!= 0 )
9120	assertEquals ( "...lead <td> a </td> tail...", example. toString ( ) )
9121	assertEquals ( Result. PASS, name. apply ( item, - 1 ) )
9122	assertEquals ( 1, result. size ( ) )
9123	Assert. assertEquals ( "Stylesheet is empty", 0, ss. size ( ) )
9124	assertTrue ( isContainerPrincipalTypeInResponse ( resp, false ) )
9125	assertNull ( "Required profiles is not null", new ConciergePlatformBuilder ( m_bundleContext, "version" ). getRequiredProfile ( m_platformContext ) )
9126	assertEquals ( "Hash is invalid", PWHASH_DIGEST, result )
9127	assertEquals ( "song1", song. getName ( ) )
9128	assertThat ( result, is ( Boolean. valueOf ( true ) ) )
9129	assertThat ( encryptedPasswordPass1, not ( equalTo ( encryptedPasswordPass2 ) ) )
9130	assertEquals ( "Session file should match", pom1, ( ( ManipulationSession ) FieldUtils. readField ( c, "session", true ) ). getPom ( ) )
9131	assertEquals ( Locale. JAPANESE, metadata. getLanguage ( ) )
9132	assertAnnotations ( 1, Coordinate. class, new TestCoordinate ( 0, "SU 02194 45374", "osgb", "{\\"type\\": \\"Point\\", \\"coordinates\\": [-1.969975,51.206197]}" ) )
9133	assertEquals ( true, results. contains ( "[INSERT], Return=OK, 1" ) )
9134	assertDepth ( "addSubTree", callTree, expectResult )
9135	assertArrayEquals ( expected, actual, DELTA )
9136	Assert. assertNotNull ( dataSourceFactory )
9137	assertEquals ( "urn:collab:group:test.surfteams.nl:nl:surfnet:diensten:hallo", group20Entry. getEntry ( ). get ( 0 ). getId ( ) )
9138	assertTrue ( bs. getSheeps ( ). contains ( s ) )
9139	assertEquals ( "Hello, Earth!", config. getString ( DEFAULT_CONTAINER, "expression" ) )
9140	assertThat ( response. getStatus ( ), is ( 200 ) )
9141	assertDownloadAndInstallMessage ( distributionSet. getModules ( ), controllerId )
9142	assertThat ( r. hasUnrestrictedChild ( LIST, FsPath. ROOT ), is ( equalTo ( true ) ) )
9143	assertEquals ( Unpooled. buffer ( ), actual )
9144	assertEquals ( test, expected )
9145	assertTrue ( ( boolean ) testedMethod. invoke ( tasksManagerImpl, STARTING_BYTE_OF_2_BYTE_CHAR ) )
9146	assertSqlCanBeParsedAndDeparsed ( statement )
9147	Assert. assertEquals ( "Hello Static NAR World!", app. sayHello ( ) )
9148	assertEquals ( expResult, result )
9149	assertEquals ( 1, dataset. getDefaultModel ( ). size ( ) )
9150	assertEquals ( expected, cacheManager. resolveDefaultMaxSize ( ), 1e-9 )
9151	assertEquals ( "$metadata#ESAllPrim(PropertyInt16,PropertyString)", ContextURLBuilder. create ( contextURL ). toASCIIString ( ) )
9152	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
9153	assertThat ( actualEnums, is ( expectedEnums ) )
9154	Assert. assertNull ( object )
9155	assertEquals ( 0, deployments. size ( ) )
9156	assertEquals ( doc1, io. getDocument ( q1 ) )
9157	assertEquals ( LocalDate. now ( zone ). getDayOfYear ( ), test. getValue ( ) )
9158	assertEquals ( expected [ i ] [ y ] [ x ], ra. get ( ). get ( ), 0 )
9159	assertErrorEventDefinition ( "end", "myErrorCode" )
9160	assertEquals ( testInstance. getAllIds ( ), expected )
9161	Assert. assertThat ( actual, Is. is ( expected. trim ( ) ) )
9162	assertEquals ( "<strong>foo</strong>", result )
9163	assertTrue ( ic. imageEqualToReference ( screenshotImage, referenceImage, "google1-masked.png", 0 ) )
9164	mini. assertReadFile ( mini. getLocalFs ( ), fileSpec, "1;one", "2;two" )
9165	Assert. assertTrue ( billingService instanceof BillingPreCalculation )
9166	assertEquals ( expected, actual )
9167	assertArgumentParserException ( args )
9168	assertTrue ( true )
9169	assertEquals ( tmap, readValue )
9170	assertOut ( "var /** @type {string} */ a = unescape('%25')" )
9171	assertThat ( ( TraceeBackend ) FieldAccessUtil. getFieldVal ( interceptor, "backend" ), is ( Tracee. getBackend ( ) ) )
9172	assertTrue ( page. asXml ( ). contains ( "javax.faces.component.html.HtmlInputText" ) )
9173	assertEquals ( 1, groupsToBeProxied. size ( ) )
9174	assertEquals ( layerId, result )
9175	assertEquals ( "an-entry", saved. getString ( "a-field" ) )
9176	assertNotNull ( otherSession. getNode ( "/lockable_clone" ) )
9177	assertThat ( isTransactionRelated, is ( false ) )
9178	assertTrue ( subject. isShortHand ( ) )
9179	assertTrue ( ( Boolean ) result )
9180	assertThat ( ClockInterval. parse ( "07:20 �� 24:00", ChronoFormatter. ofTimePattern ( "HH:mm", PatternType. CLDR_24, Locale. US ) ), is ( interval ) )
9181	assertEquals ( "public static void main(String[] args) {}", actualContent )
9182	assertThat ( injector. getInstance ( Key. get ( TestConfiguration. class, TestAnnotation. class ) ), is ( expectedConfiguration ) )
9183	assertEquals ( "Hello there^", ResponseBodyInterpolator. interpolate ( "Hello there^", req ) )
9184	assertSqlCanBeParsedAndDeparsed ( sql, true )
9185	assertTrue ( xml. matches ( "(?i)<\\\\?xml.*?version=\\"1.0\\".*?\\\\?>.*" ) )
9186	assertDeepEquals ( copy, map )
9187	result. assertErrorFreeLog ( )
9188	assertThat ( actual, is ( equalTo ( "/ab/CD?gh=GH" ) ) )
9189	Assert. assertFalse ( "Failure expected true", r. getLeft ( ) )
9190	assertThat ( target, is ( notNullValue ( ) ) )
9191	assertEquals ( "master", job. getBranch ( ) )
9192	assertEquals ( 1, result. getTotalHits ( ) )
9193	assertThat ( CollectionUtil. join ( list, ", " ), is ( "\\"Aaa\\", \\"Bbb\\", \\"Ccc\\"" ) )
9194	assertFailureValue ( "value of", "array.length" )
9195	assertEquals ( "endLoc", v. getEndLocation ( ). getId ( ) )
9196	Assert. assertEquals ( "Hallo ''Anf眉hrungszeichen''", I18N. gettext ( "helloQuotes" ) )
9197	assertEquals ( "[1,2,3,1,2,3]", returnResult. get ( RETURN_RESULT ) )
9198	assertEquals ( "one", val. get ( ) )
9199	assertEquals ( expecteds, actuals )
9200	assertEquals ( "gzip", decorator. name ( ) )
9201	assertTrue ( true )
9202	assertEquals ( "TEST.", result )
9203	assertLife ( playerB, 7 )
9204	Assert. assertThat ( control, is ( 4 ) )
9205	assertNotNull ( connection )
9206	assertEquals ( 100000000000000000000.0 / 3.0, AviatorEvaluator. execute ( "100000000000000000000.0/3.0" ) )
9207	assertEquals ( 0, searchResultsConverter. getNoOfExecutions ( ) )
9208	assertNull ( mainSource )
9209	assertNull ( request. getVisitorRegion ( ) )
9210	assertEquals ( road, road2 )
9211	assertTrue ( stats. getLen ( ) > 0 )
9212	assertEquals ( "unsortable column must be unsorted", SortOrder. UNSORTED, table. getSortOrder ( 0 ) )
9213	assertEquals ( new SimpleDateFormat ( "yyyy-MM-dd'T'HH" ). format ( dt ), new SimpleDateFormat ( "yyyy-MM-dd'T'HH" ). format ( dueDate ) )
9214	assertThat ( actual, is ( expected ) )
9215	Assert. assertTrue ( lrsRes. getSuccess ( ) )
9216	Assert. fail ( "Exception should have been thrown" )
9217	assertEquals ( expected, actual )
9218	Assert. assertEquals ( expected, actual )
9219	assertEquals ( "Can only add to an array", result. get ( RETURN_RESULT ) )
9220	assertEquals ( "JOHN + SUPERCLASS HOOK", object. getName ( ) )
9221	arrays. assertContainsSequence ( description, actual, sequence )
9222	assertTrue ( result. getBounds ( ). equals ( nonEmpty. getBounds ( ) ) )
9223	assertSame ( expected, result )
9224	assertTrue ( getNoErrorMsg ( ), result )
9225	assertThat ( out. exists ( ), is ( false ) )
9226	assertTrue ( f1. getFlowSteps ( ). size ( ) < f2. getFlowSteps ( ). size ( ) )
9227	assertEquals ( inputs, results )
9228	assertEquals ( 1_080_000, version )
9229	assertEquals ( truth, deserialized )
9230	assertEquals ( testTitle, song. getName ( ) )
9231	assertEquals ( TestClass. class. getName ( ), service. logger. getName ( ) )
9232	assertFalse ( sut. execute ( request ) )
9233	assertEquals ( "'test.multilines' property", property, conf. getString ( "test.multilines" ) )
9234	assertTrue ( response instanceof StateNoContentDTO )
9235	Assert. assertEquals ( false, retval )
9236	assertThat ( "Incorrect pagination", topicsPage, hasPages ( ) )
9237	assertEquals ( expectedPolicy, builtPolicy )
9238	assertTrue ( true )
9239	assertEquals ( obj. toString ( ), "QUERY_SERVICE_CONFIGW{dwServiceType: 1, dwStartType: 2, dwErrorControl: 3, lpBinaryPathName: \\"BinaryPathName1\\", lpLoadOrderGroup: \\"LoadOrderGroup1\\", dwTagId: 4, lpDependencies: [S1, S2], lpServiceStartName: \\"ServiceStartName1\\", lpDisplayName: \\"DisplayName1\\"}" )
9240	Assert. assertNotNull ( ipvo )
9241	assertNotNull ( entity. getId ( ) )
9242	assertNotNull ( field )
9243	assertTrue ( "Boolean result", conn. prepareBooleanQuery ( QueryLanguage. SPARQL, "ask {?s ont:name \\"Alice\\" } " ). evaluate ( ) )
9244	assertFalse ( permissionService. hasPermission ( 0, AclClassName. BRANCH, GeneralPermission. READ ) )
9245	Assert. assertEquals ( "API ID", spanEvent. getApiId ( ), API_ID )
9246	assertEquals ( 4, bs. capacity ( ) )
9247	assertEquals ( "Expected 0 results!", 0, n )
9248	assertTrue ( "same day as lower bound is allowed", model. isSelected ( today ) )
9249	assertFalse ( emptySerializable. asOptional ( ). isPresent ( ) )
9250	assertEquals ( Double. valueOf ( 1 / 10d ), day. inverse ( ). getValue ( ) )
9251	Assert. assertEquals ( "", json, winphone. toJSON ( ) )
9252	assertTrue ( connection ( ). exists ( RDFS. Resource, RDF. type, ex2, ex1, false ) )
9253	assertEquals ( numWatchersToStart - 1, consumersListOfActiveWatchers. size ( ) )
9254	Assert. assertEquals ( IsolationLevels. SERIALIZABLE, connection. getIsolationLevel ( ) )
9255	assertSame ( second, f. apply ( first, second ) )
9256	assertEquals ( "longitude", variableName )
9257	Assert. assertTrue ( in. verifyDigest ( digestPos, handshakeBytes, RTMPHandshake. GENUINE_FMS_KEY, 36 ) )
9258	files. assertHasDigest ( INFO, actual, digest, expected )
9259	assertEquals ( URI, EndpointUtil. decodeEndpointURI ( result ) )
9260	assertTrue ( validator. isValid ( "79927398712", null ) )
9261	assertEquals ( "Wrong list property", list, conf2. getProperty ( prop ) )
9262	assertEquals ( "* 0/5 * * *?", result )
9263	assertEquals ( functionImportList. size ( ), 0 )
9264	assertEquals ( expected, cronExpr. nextTimeAfter ( after ) )
9265	assertSame ( logger1, logger2 )
9266	Assert. assertFalse ( s. containsPrivateIdentifiableInformation ( ) )
9267	assertArrayEquals ( result, authed )
9268	assertEquals ( "geo shape condition serialization is wrong", expected, actual )
9269	assertEquals ( "a b\\n", found )
9270	assertTrue ( new File ( "target/export11" ). exists ( ) )
9271	Assert. assertEquals ( 0, analyser. getTimeWindowViolationAtActivity ( route. getStart ( ), route ), 0.01 )
9272	assertThat ( accessor. isMutable ( ), is ( false ) )
9273	assertThat ( results, is ( new String [ ] { "%Hello, world!%" } ) )
9274	assertNotNull ( metadata )
9275	assertThat ( read ( format, written ), contains ( 1.25f ) )
9276	Assert. assertTrue ( m2. isDone ( ) )
9277	assertEquals ( "CN=Gnubby Pilot", deviceRegistration. getAttestationCertificate ( ). getIssuerDN ( ). getName ( ) )
9278	assertEquals ( 40, new AcceptsLambda < Integer > ( ). accept ( ( a, b ) -> x + a + b ). intValue ( ) )
9279	assertEquals ( expected, actual )
9280	assertTrue ( getNoErrorMsg ( ), result )
9281	assertFalse ( rlg. useNoise ( ) )
9282	Assert. assertEquals ( 2, integer. get ( ) )
9283	assertThat ( cut. getNumberOfFields ( ), is ( 2 ) )
9284	assertEquals ( "case when (cat.toes =?1) then?1 when (cat.toes =?2) then?2 else?3 end", serializer. toString ( ) )
9285	context. assertEquals ( patternStr. hashCode ( ), pH. hashCode ( ) )
9286	assertEquals ( 0, content. refCnt ( ) )
9287	assertEquals ( asList ( trace ( mdcValues, marker, message, args ) ), testLogger. getLoggingEvents ( ) )
9288	assertEquals ( "The value is not correct.", date, value )
9289	assertEquals ( times, result )
9290	assertEquals ( 0, project. getTargets ( ). size ( ) )
9291	assertEquals ( "Revoking grants on " + change. getObjectName ( ) + " that had been given to " + change. getRecipientList ( ), change. getConfirmationMessage ( ) )
9292	Assert. assertEquals ( expectedJsonTree, actualJsonTree )
9293	assertEquals ( "TEXT", sb. toString ( ) )
9294	Assert. assertEquals ( expectedResult, result. getValue ( ) )
9295	AssertEx. assertDoubleEquals ( 10.5, dist )
9296	assertTrue ( properties. safetySwitch. getValue ( ) )
9297	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
9298	Assert. assertEquals ( id. length ( ), length )
9299	assertEquals ( 2, context. getTableCount ( ) )
9300	assertTrue ( weakMap. size ( ) < 2000 )
9301	Assert. assertThat ( bs. strFull, is ( control ) )
9302	assertFalse ( "Only one of @Stateless or @Stateful is allowed", ( stateless!= null && stateful!= null ) )
9303	assertEquals ( expectedClientConfig, actualClientConfig )
9304	assertEquals ( "null", sb. toString ( ) )
9305	assertEquals ( false, result )
9306	assertEquals ( TemplateUtils. encrypt ( "fooValue" ), entity. getValue ( ) )
9307	assertEquals ( 0, result )
9308	assertEquals ( expResult, result )
9309	assertSerializeDeserialize ( ext )
9310	context. assertEquals ( 1, types. size ( ) )
9311	assertDecimalEquals ( dup. getValue ( 1 ), 6 )
9312	assertTrue ( underTest. subDoc ( "studentSectionAssociation" ). create ( entity ) )
9313	assertFalse ( rpcException. hasErrorCode ( ) )
9314	assertThat ( ClockInterval. parse ( "07:20 - 24:00", ChronoFormatter. ofTimePattern ( "HH:mm ", PatternType. CLDR_24, Locale. ROOT ), '-', ChronoFormatter. ofTimePattern ( " HH:mm", PatternType. CLDR_24, Locale. ROOT ), BracketPolicy. SHOW_WHEN_NON_STANDARD, plog ), is ( interval ) )
9315	assertErrorOnExecute ( fStep, "Can't specify attribute value when htmlid or xpath is specified", "" )
9316	assertFalse ( pgql. parse ( query ). isQueryValid ( ) )
9317	assertEquals ( "Expected 1 result!", 1, n )
9318	assertContains ( e. getMessage ( ), "'name'" )
9319	assertArrayEquals ( new int [ ] { 1, 2, 3 }, event. getValues ( ) )
9320	Assert. assertEquals ( HiveRunnerConfig. TIMEOUT_SECONDS_DEFAULT, config. getTimeoutSeconds ( ) )
9321	assertEquals ( expected, Sets. newHashSet ( chunks ) )
9322	assertTrue ( "Checking hasChildChanged updated correctly", _scs. hasChildChanged ( METRIC_NAME ) )
9323	Assert. assertFalse ( errors. hasErrors ( ) )
9324	assertNull ( request. getParameter ( "name3", null ) )
9325	assertEquals ( expResult, result )
9326	assertEquals ( user. get ( "name" ), name )
9327	assertTrue ( ic. imageEqualToReference ( screenshotImage, referenceImage, "google1-masked.png", 0 ) )
9328	Assert. assertEquals ( String. format ( "some %s", this. html ( bb, "10", "text[size=12]" ) ), formatter. format ( "some [size=10]text[size=12][/size]", defaultOptions ( ) ) )
9329	Assert. assertEquals ( activity, resolved )
9330	assertTrue ( requestResult )
9331	Assert. assertEquals ( "should be second string", string2, actual )
9332	assertTrue ( filter. shouldInclude ( source, "some.property" ) )
9333	Assert. assertEquals ( config. getTheClazz ( ), Object. class )
9334	assertNotNull ( findLocalShard ( leaderDistributedDataStore. getActorUtils ( ), ClusterUtils. getCleanShardName ( TestModel. TEST_PATH ) ) )
9335	Assertions. from ( extractor )
9336	assertFalse ( row. equals ( otherRow ) )
9337	iterablesWithCaseInsensitiveComparisonStrategy. assertContainsAnyOf ( someInfo ( ), actual, array ( "LUke" ) )
9338	assertEquals ( "_cat/allocation?h=shards%2Cdisk.indices%2Cdisk.used", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
9339	assertThat ( lines, hasSize ( 1 ) )
9340	assertEquals ( 202, keyCount. get ( ) )
9341	assertEquals ( "Result", dt. getDatatypeURI ( ), RDFS. xsddecimal )
9342	assertEquals ( "%level - %m%n", layout. getConversionPattern ( ) )
9343	assertTrue ( analysis. isTestPassing ( ) )
9344	assertEquals ( "recoveredResult must be Success(84)", recoveredResult, new Try. Success < > ( 84 ) )
9345	assertEquals ( 2, gpxEntries. size ( ) )
9346	assertEquals ( 0, drugs. size ( ) )
9347	assertThat ( result, contains ( likeTriple ( uri ( "http://www.example.org/example/1" ), ANY, ANY ), likeTriple ( uri ( "http://www.example.org/example/2" ), ANY, ANY ) ) )
9348	assertTrue ( true )
9349	assertTrue ( res. code ( ) == Code. ERROR )
9350	assertLine ( "dogfishhead", b, false )
9351	assertNull ( schemaRegistry. getHostnameVerifier ( ) )
9352	assertEquals ( msg, myMessage )
9353	assertEquals ( RdfTestHelpers. parseRdf ( RdfTestHelpers. getResourceFromFile ( "completeRDFDocument.rdf" ) ), model )
9354	assertNull ( "Certificate should be null", cert )
9355	assertEquals ( expectedMessageString, expectedMessage. toString ( ) )
9356	assertSame ( MockChooser1. class, delegate. getClass ( ) )
9357	assertThat ( new JcrValue ( factories, PropertyType. DATE, date ). getDouble ( ), is ( ( double ) date. getTime ( ) ) )
9358	Assert. assertEquals ( "START TRANSACTION WITH CONSISTENT SNAPSHOT;", text )
9359	assertEquals ( expected, statement. toString ( ) )
9360	assertEquals ( "{\\"ns1.thetag\\":{\\"group\\":\\"b\\",\\"name\\":\\"a\\"}}", s )
9361	assertEquals ( "Boolean", result )
9362	assertThat ( generated, is ( "{ {}\\nUNION {?item <eh:/P>?v1}}" ) )
9363	Assert. assertFalse ( isOk )
9364	assertEquals ( path, "redirect:/module/motechmodule/facility.form" )
9365	assertEquals ( "We are testing... things.", out )
9366	assertThat ( beanClass, typeCompatibleWith ( ApplicationDecorator. class ) )
9367	assertTrue ( true )
9368	assertThat ( lines. size ( ), is ( 1 + 4 ) )
9369	assertNotNull ( method )
9370	assertEquals ( expected, passwordEncoder. encode ( plainText ) )
9371	assertEquals ( 0.625d, response, 0.0001d )
9372	Assert. assertEquals ( ServerParse. REPLACE, sqlType )
9373	Assert. assertEquals ( rep, rep1 )
9374	assertEquals ( subThing, newThing )
9375	assertEquals ( newEntry3, res )
9376	Assert. assertTrue ( "Found = " + found + ", Expected = " + expected + ", Left = " + expectedBodies. size ( ) + " " + expectedBodies, expectedBodies. size ( ) == 0 )
9377	assertSame ( descriptor, content )
9378	assertEquals ( "Successful authentication attempt by successfulUser1 from successfulHost1", AuthenticationTokenUtils. generateSuccessfulAuthenticationMessage ( successfulToken ) )
9379	Assert. assertEquals ( 2, s. getPriority ( ) )
9380	assertEquals ( 0, count ( graph. vertices ( ) ) )
9381	assertEquals ( "7::", result )
9382	assertNotNull ( result )
9383	assertEquals ( Bytes. asList ( new byte [ ] { 3 } ), bytes ( producer. getValue ( ). next ( ) ) )
9384	assertEquals ( expectatedMessage. trim ( ), e. getMessage ( ). trim ( ) )
9385	assertEquals ( true, context. isResult ( ) )
9386	assertNotNull ( filter )
9387	assertEquals ( "1", getValue ( ) )
9388	Assert. assertEquals ( 5., Solutions. bestOf ( solutions ). getCost ( ), 0.01 )
9389	assertEquals ( null, result )
9390	assertTrue ( "Http authentication factory should be created", ops. exists ( TEST_AUTHENTICATION_FACTORY_ADDRESS ) )
9391	assertFalse ( id1. equals ( null ) )
9392	assertEquals ( "public class Foo {" + PMD. EOL + "public void bar() {}", sourceCode. getSlice ( 1, 2 ) )
9393	aggregatedExpectations. aggregatedExpectation ( ). uom ( uomRecord ). qty ( qty_105 ). qtyWithIssues ( qty_10_50 ). qtyWithoutIssues ( qty_94_50 ). qualityDiscountPercent ( "10" ). endExpectation ( ). newQualityExpectation ( ). copyFrom ( aggregatedExpectations. aggregatedExpectation ( ) ). endExpectation ( ). assertExpected ( huReceiptLineCandidatesBuilder )
9394	Assert. assertThat ( new String ( obj2. getByteArr ( ), "utf-8" ), is ( "0+1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18+19+20+21+22+23+24+25+26+27+28+29+30+31+32+33+34+35+36+37+38+39+40+41+42+43+44+45+46+47+48+49+50+51+52+53+54+55+56+57+58+59+60+61+62+63+64+65+66+67+68+69+70+71+72+73+74+75+76+77+78+79+80+81+82+83+84+85+86+87+88+89+90+91+92+93+94+95+96+97+98+99+" ) )
9395	switchyard. assertModelValid ( )
9396	assertThat ( nonSerializableResult. getStuff ( ), is ( "damn cool stuff!" ) )
9397	assertions. isNull ( )
9398	Assert. assertTrue ( ( byte ) 0 == _c. convert ( "" ) )
9399	assertEquals ( "<table> <colgroup> <col /> </colgroup><colgroup> <col /> <col /> <col /> </colgroup><thead> <tr> <th> </th><th>2008 </th><th>2007 </th><th>2006 </th></tr></thead><tbody> <tr> <th scope=\\"rowgroup\\"> Research and development </th><td> $ 1,109 </td><td> $ 782 </td><td> $ 712 </td></tr><tr> <th scope=\\"row\\"> Percentage of net sales </th><td> 3.4% </td><td> 3.3% </td><td> 3.7% </td></tr></tbody><tbody> <tr> <th scope=\\"rowgroup\\"> Selling, general, and administrative </th><td> $ 3,761 </td><td> $ 2,963 </td><td> $ 2,433 </td></tr><tr> <th scope=\\"row\\"> Percentage of net sales </th><td> 11.6% </td><
9400	Assert. assertEquals ( "Hello! World", result )
9401	Assert. assertEquals ( json, writer. toString ( ) )
9402	assertEquals ( "Options should be equal to itself", options, options )
9403	assertTrue ( objAssociation. getConsistentEdmAssociationList ( ). size ( ) > 0 )
9404	assertFalse ( generatorUnderTest. validate ( statement, new MySQLDatabase ( ), new MockSqlGeneratorChain ( ) ). hasErrors ( ) )
9405	assertFailureCatalogContains ( AsyncSuspendWithoutForgetBean. class, "The LRA class has to contain @Status and @Forget annotations" )
9406	Assert. assertNotNull ( "ThreadName value is missing", jsonObject. get ( "thread_name" ) )
9407	Assert. assertEquals ( new URI ( "http://absolute-url.fr/folder/f1/f2/f3/readme.txt" ), UriUtils. buildNewURI ( new URI ( url ), suffix ) )
9408	assertEquals ( false, result. isPresent ( ) )
9409	assertTrue ( check )
9410	assertEquals ( id, percolateQueryBuilder. getId ( ) )
9411	assertEquals ( 0, app. executeApplication ( args ) )
9412	assertTrue ( result. contains ( getPreparedResult ( ) ) )
9413	Assert. assertEquals ( "should have found own permissions", FilePermissionEnum. OWN, enumVal )
9414	assertEquals ( "group:artifact:1.0.0:jar:compile:classifier", model. toString ( ) )
9415	assertTrue ( "The word'meme' is found on a page about rickrolling", expectedTextFound )
9416	Assert. assertEquals ( "eins zwei\\ndrei vier\\nfuenf", result )
9417	Assert. assertEquals ( 2, scenario. deployments ( ). size ( ) )
9418	Assert. notNull ( wschu )
9419	assertEquals ( "45090", display. getText ( ) )
9420	assertEquals ( DummyLayout. DUMMY, baos. toString ( ) )
9421	assertFalse ( validator. validate ( certificateMapping, POST ). passedValidation ( ) )
9422	Assert. assertFalse ( "The filter should not have been initialized", TestFilter. INITIALIZED )
9423	assertEquals ( "1388538000000", partition )
9424	assertEquals ( "<csv-set><csv-record number=\\"1\\"><name>Erika Mustermann</name><email>e.m@ex.org</email></csv-record><csv-record number=\\"2\\"><name>Max \\"The Man\\" Mustermann</name><email>m.m@ex.org</email></csv-record></csv-set>", result )
9425	assertEquals ( expectedDateString, actualDateString )
9426	assertEquals ( 2, violations. size ( ) )
9427	assertEquals ( URI. create ( "http://localhost:8080/a/b/c?a=x&b=y#hel%20lo" ), u )
9428	assertOut ( "<Button label=\\"Click me\\"></Button>" )
9429	assertEquals ( "Hello", ( ( BizException ) read ). getMessage ( ) )
9430	Assert. assertEquals ( "hello", result. hello ( ) )
9431	assertThat ( entityFromElasticSearch, is ( notNullValue ( ) ) )
9432	assertThat ( actualAlgorithms, IsIterableContainingInAnyOrder. containsInAnyOrder ( expectedAlgorithms ) )
9433	assertNull ( issueTrackerService. getIssueTrackerTasks ( foundProject, IssueStatus. ASSIGNED ) )
9434	Assert. assertEquals ( bd, value )
9435	assertEquals ( OTHER_ADDRESS, req. tx. getOutputs ( ). get ( 0 ). getScriptPubKey ( ). getToAddress ( PARAMS ) )
9436	assertThat ( cut. apply ( pageObject ), is ( true ) )
9437	assertEquals ( "updatedName", list. get ( 0 ). getName ( ) )
9438	assertTrue ( "yahoocn contacts are empty", contacts. size ( ) > 0 )
9439	assertFalse ( new NopolExample ( ). isEmpty ( list ) )
9440	assertSqlCanBeParsedAndDeparsed ( stmt )
9441	assertThat ( field ( object. getClass ( ), "output" ), is ( notNullValue ( ) ) )
9442	assertDefaultCategories ( categories )
9443	assertEquals ( output, processed )
9444	Assert. assertEquals ( vector, new Vector ( - 10, - 10, - 10 ) )
9445	Assert. assertTrue ( pss. toString ( ). contains ( "123" ) )
9446	assertEquals ( "Wrong message pull back as latest", checkMessage, message2 )
9447	assertEquals ( - 1L, nodeId. getId ( ) )
9448	assertResponse ( testResponse, OK, okResponseText )
9449	assertMockEndpointsSatisfied ( )
9450	assertEquals ( 10, result. getTotalCount ( ) )
9451	assertArrayEquals ( data, ( short [ ] ) deserialize. readObject ( ) )
9452	assertTrue ( violation )
9453	assertEquals ( expResult, result )
9454	Assert. assertTrue ( resp. getColumnList ( ). size ( ) == 2 )
9455	assertEquals ( 2, types. size ( ) )
9456	assertSame ( uri1, uri2 )
9457	assertThat ( t1. atom ( ), is ( 1 ) )
9458	Assert. assertEquals ( expected, pluginForREST. getTypeName ( "test" ) )
9459	assertEquals ( deleteReason, hpi. getDeleteReason ( ) )
9460	assertTrue ( logger. isWarnEnabled ( ) )
9461	assertEquals ( TEST_HOST_NAME, Deencapsulation. getField ( amqpsConnection, "hostName" ) )
9462	assertEquals ( inputString, x12. toString ( ) )
9463	assertFalse ( filter. isActive ( ) )
9464	assertEqualsWithoutWhiteSpaces ( "(empty)", moved )
9465	Assert. assertTrue ( CollectionUtils. isNotEmpty ( consumeInfoList ) )
9466	assertEquals ( "name", name )
9467	assertNotNull ( logStream1 )
9468	Assert. assertEquals ( set1, set2 )
9469	assertFalse ( syncOpt. isDbVersionPresent ( ) )
9470	assertThat ( read ( tmp ), is ( equalTo ( "Helles酶y" ) ) )
9471	assertTrue ( cache. hasActivity ( resource ) )
9472	Assert. assertEquals ( Clazz. class, ReflectionUtils. getObjectPropertyGeneric ( myBean, myBean. getClass ( ). getSuperclass ( ). getDeclaredField ( "t" ) ) )
9473	assertEquals ( expectedResult, result, 0.00001 )
9474	assertEquals ( "width has changed, should remain equal", oldStyle, newStyle )
9475	assertEquals ( HELLO_URI, uri. toASCIIString ( ) )
9476	assertEquals ( "Should return maxInactiveInterval from HttpSession", 100, session. maxInactiveInterval ( ) )
9477	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 2, warnings. size ( ) )
9478	assertArrayEquals ( new String [ ] { "input", "output" }, remaining )
9479	Assert. assertTrue ( edOrgContextRights. isEmpty ( ) )
9480	Assert. assertTrue ( "Number of entities: " + count, count == 2 )
9481	assertEquals ( VALID, credentials. getStatus ( ) )
9482	bytes. assertNotGreaterThan ( description, actual, expected )
9483	assertEquals ( testPlaylist, playlist )
9484	Assert. assertEquals ( expr, "Hello \\nDimitri", value )
9485	assertUnselectableDatesSelectedWhileHasValidSelection ( model )
9486	Assert. assertNull ( person )
9487	assertEquals ( vcard. getFormattedName ( ). getValue ( ), actual )
9488	Assert. assertEquals ( headerValue, actualValue )
9489	assertTrue ( vs. getSpaceId ( ) > 0 )
9490	assertEquals ( "bar", service. getIndex ( indexSpec ). getName ( ) )
9491	assertNotEquals ( reindex1, reindex2 )
9492	assertThat ( value. resolvedSource ( ), endsWith ( "ConcreteAction.properties" ) )
9493	Assert. assertTrue ( "The re-generated and the read record do not match.", k1. equals ( k2 ) && v1. equals ( v2 ) )
9494	assertTrue ( scrollUI!= null )
9495	assertEquals ( s, r )
9496	assertEquals ( "1.407", version )
9497	assertEquals ( file, VirtualDirTgz. getFilenameFromPath ( file ) )
9498	assertEvidence ( evidence, 1, 0, 0, 0 )
9499	assertEquals ( "A:B", f. toString ( ) )
9500	MatcherAssert. assertThat ( new TemplateLexer ( new ANTLRInputStream ( IOUtils. toInputStream ( text ) ) ). nextToken ( ). getText ( ), CoreMatchers. equalTo ( "log" ) )
9501	assertThat ( validator. validateAction ( ). isValid ( ), is ( true ) )
9502	assertThat ( arguments. resolve ( null, null ), contains ( "foo", "bar" ) )
9503	assertFalse ( Misc. containsNulls ( collection ) )
9504	assertEquals ( Arrays. asList ( "1970-01-01\\t1", "1970-01-02\\t2" ), getOutputStrings ( ) )
9505	assertTrue ( method. getReturnType ( ) == Priority. class )
9506	assertions. containsOnly ( values )
9507	rule. assertScenarioEnded ( )
9508	assertEquals ( Integer. valueOf ( 5 ), reference. getRetries ( ) )
9509	assertTrue ( dao. isSuspended ( ) )
9510	assertThat ( content, is ( equalTo ( ( Object ) numberOfElements ) ) )
9511	assertThat ( query ( "bla", "mntner" ), hasSize ( 1 ) )
9512	assertTrue ( closed. await ( 5, SECONDS ) )
9513	Assert. assertNotNull ( req )
9514	assertEquals ( expectedTimestamp, actualTimestamp )
9515	Assert. assertEquals ( "Patient information [Identifier, Name, Onset, Indication for referral]", s. toString ( ) )
9516	assertEquals ( 400, response. statusCode ( ) )
9517	assertTrue ( this. sqlgGraph. tx ( ). getPreparedStatementCache ( ). isEmpty ( ) )
9518	assertEquals ( proxy. echoBack ( "123" ), "123." )
9519	assertEquals ( i1, i2 )
9520	assertArrayEquals ( universe. toArray ( ), e. toList ( ). toArray ( ) )
9521	assertEquals ( documentoVO, infoDocumentoCSV )
9522	assertEquals ( 0, report. getItems ( ). size ( ) )
9523	assertTrue ( constraint. fulfilled ( iContext ) )
9524	assertCoordinates ( 0, TOP_Y - 1 )
9525	Assert. assertEquals ( "Node{edge=FOO, value=null, edges=[]}", node. toString ( ) )
9526	org. junit. Assert. assertEquals ( expected, actual )
9527	assertNotNull ( listener. getLastResponse ( ) )
9528	assertThat ( xmlResult, CompareMatcher. isSimilarTo ( out. toString ( ) ). ignoreWhitespace ( ). withNodeMatcher ( new DefaultNodeMatcher ( ElementSelectors. byNameAndText ) ) )
9529	assertEquals ( 0, children. size ( ) )
9530	assertions. isLessThan ( new BigDecimal ( 2 ) )
9531	assertTrue ( vosManagerEntry. getDirectAdmins ( sess, createdVo ). contains ( user ) )
9532	Assert. assertArrayEquals ( bytes, result )
9533	Assert. assertFalse ( new LogAdapter ( "N/A", mockConfigDefault ( ) ). isErrorEnabled ( ) )
9534	assertEquals ( ESCAPED_USER_VALUE, substituter. getSubstitution ( Type. USER_PREF, USER_NAME ) )
9535	assertMockEndpointsSatisfied ( )
9536	assertEquals ( D, fit. getDiffusionCoefficient ( ), 0.01 )
9537	assertNull ( loadedFile )
9538	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm", result ) )
9539	assertFalse ( list. contains ( null ) )
9540	Assert. assertEquals ( "_ANYFIELD_ == 'email' && ANOTHER_FIELD == 'blah' && filter:includeRegex(FIELDA, '.*all_.*')", JexlStringBuildingVisitor. buildQuery ( result ) )
9541	assertEquals ( result, "2007-12-03 - 10:15:30" )
9542	assertSame ( injectable, injectionTarget. injectable )
9543	assertMockEndpointsSatisfied ( )
9544	assertNull ( loggedInUser )
9545	assertEquals ( asList ( foo4 ), results )
9546	assertTrue ( v1. equals ( v2 ) )
9547	assertEquals ( 3, result. get ( ). getList ( ). size ( ) )
9548	assertNotNull ( dialectConverterForEveryoneElse. get ( "brat" ) )
9549	assertThat ( String. class. equals ( type ), is ( true ) )
9550	assertTrue ( validator. validate ( certificateMapping, PUT ). passedValidation ( ) )
9551	assertThat ( bar, is ( 2 ) )
9552	assertThat ( hasJsonPath. matchesSafely ( json ), is ( false ) )
9553	assertEquals ( CompressionType. Zip, compressionType )
9554	assertModelEqualsFile ( HIT_POLICY_DMN )
9555	assertEquals ( IP_10_123_1_54_80, StringUtils. formatLocalSocket ( socket ) )
9556	Assert. assertEquals ( registry1, registry2 )
9557	assertTrue ( inactiveQuestion. isInactiveForOneMonth ( ) )
9558	Assert. assertNotNull ( counterManager )
9559	assertOrder ( registry, secondPlugin, firstPlugin )
9560	assertTrue ( valid )
9561	assertEquals ( expResult, result )
9562	Assert. assertNotNull ( request. getTableSchema ( ) )
9563	assertEquals ( "name", name )
9564	assertEquals ( "", result )
9565	Assert. assertNotNull ( rb )
9566	assertEquals ( costOf ( context, player, card ), 8 )
9567	assertThat ( changes, hasItems ( RemoveAxiomChange. of ( ontologyId, axiom ), RemoveOntologyAnnotationChange. of ( ontologyId, ontologyAnnotation ) ) )
9568	assertEquals ( expected, dotfileWriter. formatPCollectionNodeDeclaration ( inputCollection, jobPrototype ) )
9569	assertAxisEquals ( 0.9, 1.3, new double [ ] { 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3 }, new String [ ] { "0.90", "0.95", "1.00", "1.05", "1.10", "1.15", "1.20", "1.25", "1.30" }, axis )
9570	Assert. assertEquals ( true, runtimeService. getVariable ( pi. getId ( ), "result" ) )
9571	assertEquals ( "1f8ac10f23c5b5bc1167bda84b833e5c057a77d2", new String ( Hex. encodeHex ( message ) ) )
9572	assertEquals ( 190, maximum )
9573	assertTrue ( myMessage. toString ( ). contains ( "89=FOO\\00193=3\\001" ) )
9574	Assert. assertEquals ( response, resource )
9575	assertThat ( sendScaleRequest ( "cluster1", 3 ). getStatus ( ), equalTo ( HttpURLConnection. HTTP_BAD_REQUEST ) )
9576	assertEquals ( 4, events. size ( ) )
9577	assertResultSet ( res )
9578	assertThat ( result, is ( principalCollection ) )
9579	Assert. assertEquals ( operator. getJobExecution ( id ). getBatchStatus ( ), BatchStatus. ABANDONED )
9580	assertEquals ( null, actualNativeClient. proxy ( ) )
9581	assertSongData ( songs. getContent ( ). get ( 0 ) )
9582	assertions. containsSequence ( 'a', 'b', 'c', 'a', 'c' )
9583	assertEquals ( expected, actual )
9584	assertThat ( actual, is ( expected ) )
9585	assertThat ( lt. check ( "This is a correct sentence.", "en" ). getMatches ( ). size ( ), is ( 0 ) )
9586	assertEquals ( expResult, result )
9587	assertEquals ( "The world loves ABBA but not a sore loser.", this. realiser. realise ( completeSen ). getRealisation ( ) )
9588	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
9589	Assert. assertEquals ( icms10, icms. getIcms10 ( ) )
9590	assertThat ( unlocked. construct ( ). getMyField ( ), equalTo ( "initialized" ) )
9591	assertEquals ( 99, result )
9592	assertThat ( context, body. size ( ), is ( 3 ) )
9593	assertEquals ( 1, i )
9594	assertEquals ( expResult, result )
9595	assertFalse ( "Two violations with different beginColumn should result in not equal nodes", node1. equalsNode ( node2 ) )
9596	assertArrayEquals ( expected, encoder. getEncoded ( ) )
9597	assertEquals ( "/genPath", path )
9598	assertFalse ( job1. addDependingJob ( new ControlledJob ( conf ) ) )
9599	assertThat ( results, containsInAnyOrder ( "Hello, world!" ) )
9600	assertThat ( options. isHelp ( ), is ( true ) )
9601	assertEquals ( count, AuditNotifier. class. cast ( notifier ). getAllNotifications ( alert ). size ( ) )
9602	assertEquals ( "This is my rule name", result )
9603	assertThat ( timeouts ( ). getTimeoutInSecs ( story ), is ( 300L ) )
9604	assertThat ( hasJsonValue. matchesSafely ( json ), is ( false ) )
9605	assertNotNull ( drl )
9606	assertFalse ( result )
9607	Assert. assertEquals ( 13, value )
9608	Assert. assertNotNull ( browser. findElement ( By. id ( "form" ) ) )
9609	assertEquals ( KnightScorer. targetScores [ 2 ], scorer. scorePosition ( board, context ) )
9610	service. callCounter. assertCalls ( "{findIds=1, getItems=1}" )
9611	assertEquals ( args, ImmutableList. of ( "-y", "-v", "error", "-i", "input", "-metadata", "title=Movie Title", "-metadata:c:0", "author=Bob", "-metadata:p:0", "comment=Awesome", "-metadata:s:0", "copyright=Megacorp", "-metadata:s:v", "framerate=24fps", "-metadata:s:v:0", "artist=Joe", "-metadata:s:a:0", "language=eng", "-metadata:s:s:0", "language=fre", "-metadata:s:u", "year=2010", "-metadata:s:m:key", "a=b", "-metadata:s:m:key:value", "a=b", "output" ) )
9612	assertThat ( CalendarDays. between ( d1, d2 ). getAmount ( ), is ( 63L ) )
9613	assertQuery ( true, "deep-equal(/test/*[1], /test/*[2])" )
9614	Assert. assertTrue ( Math. abs ( valueMonteCarlo - valueAnalytic ) < 1E-02 )
9615	assertEquals ( Arrays. asList ( "A", "" ), list )
9616	Assert. assertEquals ( ZonedDateTime. of ( 2017, 2, 21, 16, 5, 19, 0, UTC ), doc. getLastPublicationDate ( ) )
9617	assertThat ( ct. getMeridiems ( TextWidth. WIDE, OutputContext. FORMAT ). print ( Meridiem. AM ), is ( "AM" ) )
9618	Assert. assertEquals ( expected, actual )
9619	Assert. assertEquals ( 0x01020304, argb. randomAccess ( ). get ( ). get ( ) )
9620	assertEquals ( "b", r. get ( "name" ) )
9621	assertEquals ( originalByteStrings, sortedByteStrings )
9622	assertTrue ( CsrfProtectionRefererFilter. isAllowedUri ( uris, "https://" + uuid + ".com", isGetRequest ) )
9623	assertThat ( translatedStatement, is ( expectedTranslatedStatement ) )
9624	assertThat ( provider. getSubject ( axiom ), is ( iriOptional ) )
9625	assertResultSet ( res )
9626	assertThat ( resourcePermission. toString ( ), is ( systemPermissionName ) )
9627	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 09" ) )
9628	assertEquals ( result1, result2 )
9629	Assert. assertEquals ( "[3, 2, 6, 4, 7, 1, 5]", result. toString ( ) )
9630	assertNotNull ( transaction )
9631	assertEquals ( "Identifer/Normalized failed.", expectedNormalized, WebfingerURLNormalizer. serializeURL ( actualNormalized ) )
9632	assertFalse ( pojo. testService. interrupted. get ( ) )
9633	assertFalse ( g1. equals ( g2 ) )
9634	Assert. assertEquals ( 3, books. size ( ) )
9635	Assert. assertTrue ( "should have returned empty collection", irodsTagValues. isEmpty ( ) )
9636	Assert. fail ( "Expected a handler exception due to invalid policy" )
9637	objects. assertIsEqualToComparingFieldByFieldRecursively ( someInfo ( ), actual, other, noFieldComparators ( ), defaultTypeComparators ( ) )
9638	assertThat ( lines. size ( ), is ( tuples. size ( ) + 4 ) )
9639	Assert. assertTrue ( exists )
9640	assertTrue ( "Handler wasn't run", ran. get ( ) )
9641	assertThat ( uut. isColaInjected ( ), is ( true ) )
9642	assertTrue ( zero. exec ( input ) )
9643	assertTrue ( theSelectedPoolsWere ( allAvailablePools ( ) ) )
9644	assertCapturedMessage ( eventMessage ( "sess2", "/topic", "eventMessage" ), eventMessage ( "sess1", "/topic", "eventMessage" ) )
9645	assertThat ( longProperty, is ( equalTo ( 42L ) ) )
9646	Assert. assertEquals ( ServerParse. SELECT, sqlType )
9647	assertFalse ( "Workflow should not be in add mode when a WorkflowState is selected", actual )
9648	assertTrue ( b. isTrue ( ) )
9649	assertThat ( a. overlaps ( b ), is ( true ) )
9650	Assert. assertNull ( dataModelLoadBalancer. getSessionPersistence ( ) )
9651	Assert. assertEquals ( "withLove", ConfigResolver. getPropertyValue ( "ds.test.fromHome" ) )
9652	Assert. assertNotNull ( "Wallets not null", wallets )
9653	assertNull ( client. getJob ( id ) )
9654	assertEquals ( "A", result. toString ( ) )
9655	assertEquals ( newArrayList ( newArrayList ( 4, 2, 3 ), newArrayList ( 5, 2, 3 ), newArrayList ( 1, 4, 3 ), newArrayList ( 1, 5, 3 ), newArrayList ( 1, 2, 4 ), newArrayList ( 1, 2, 5 ) ), shrinks )
9656	assertThat ( tokens. matches ( BasicTokenizer. WORD, BasicTokenizer. WORD ), is ( true ) )
9657	assertEquals ( TEST_STRING, actual )
9658	Assert. assertFalse ( b )
9659	assertEquals ( expectedFont [ i ], foInline. getAttribute ( "font-family" ) )
9660	assertThat ( domainCreatePermissions_post, is ( domainCreatePermissions_pre ) )
9661	Assert. assertTrue ( Precision. equals ( 4.0, MathArrays. distanceInf ( p1, p2 ), 1 ) )
9662	assertEquals ( e. getFreeVars ( ), "b" )
9663	assertEquals ( HttpStatusCodes. TEMPORARY_REDIRECT. getStatusCode ( ), response. getStatusLine ( ). getStatusCode ( ) )
9664	assertThat ( newTableName, equalTo ( proxy. getTableName ( ) ) )
9665	VertxAssert. assertEquals ( "The retrieval of the specified document header resulted in an error: " + arangoResult. getString ( "errorMessage" ), "ok", response. getString ( "status" ) )
9666	Assert. assertNotNull ( cumulates )
9667	assertEqualTokenFeatureLengths ( "ahgsfdajhgsfd����涓��������������广�ㄥ�笺�般����������", tokenizer )
9668	assertEquals ( "find by created date not returning any readings", 1, readingRepos. findByCreatedBetween ( now - 86400000, now + 86400000 ). size ( ) )
9669	assertEquals ( e. getFreeVars ( ), "x", "y", "z" )
9670	TestCase. assertEquals ( ( int ) attribute. match ( t ), 2 )
9671	assertEquals ( 200, response. code ( ) )
9672	assertOut ( "var a:* = undefined" )
9673	assertEquals ( 255, fixture. readInt ( ) )
9674	assertThat ( d. isZero ( ) )
9675	assertTrue ( BufferedImageComparer. isRGBSimilar ( sourceImage, img ) )
9676	assertArrayEquals ( "a\\r\\n.\\r\\n". getBytes ( "US-ASCII" ), out. toByteArray ( ) )
9677	Assert. assertEquals ( 7, i )
9678	assertEquals ( "c\\n", found )
9679	assertThat ( a. getValue ( ), equalTo ( "A1" ) )
9680	assertThat ( endpoints, empty ( ) )
9681	assertEquals ( new BigDecimal ( 12345 ), result )
9682	assertTrue ( anyOf. matches ( "Yoda" ) )
9683	assertEquals ( seconds + ( minutes * DateUtils. MILLIS_PER_MINUTE / DateUtils. MILLIS_PER_SECOND ), testResult )
9684	assertThat ( resourcePermissions. isEmpty ( ), is ( true ) )
9685	assertEquals ( "Expected 2 results!", 2, n )
9686	assertEquals ( expected, seq. getLayer ( "layer" ) )
9687	assertEquals ( "car", car. getName ( ) )
9688	assertSame ( toBeThrown, ex. getCause ( ) )
9689	assertEquals ( "ABC0", query ( ). from ( product ). where ( product. name. eq ( name ) ). set ( name, "ABC0" ). select ( product. name ). fetchFirst ( ) )
9690	assertEquals ( survey, path. getMetadata ( ). getParent ( ) )
9691	assertTrue ( applications. size ( ) > 0 )
9692	Assert. assertTrue ( query. percentileSet == null )
9693	response. then ( ). assertThat ( )
9694	Assert. assertEquals ( false, retval )
9695	assertTrue ( "ObjectClass should still be in the registry after move failure", getObjectClassRegistry ( ). contains ( OID ) )
9696	test. assertResponse ( )
9697	assertNotNull ( configuration )
9698	assertTrue ( timePassed >= TimeUnit. SECONDS. toMillis ( TEST_LIFETIME ) / 2 )
9699	assertEquals ( "public enum Company {; private Company(String name,Integer count);\\n}\\n", cu. toString ( ) )
9700	assertEquals ( in. readObject ( ). getClass ( ), Bean. class )
9701	assertThat ( dbPath. exists ( ), is ( true ) )
9702	Assert. assertTrue ( cmd. apply ( bkFlags, new String [ ] { "-r" } ) )
9703	assertNotNull ( projects )
9704	assertFalse ( builder. hasValues ( ) )
9705	assertEquals ( "A Session should not have been created because create parameter was set to false", null, request. session ( false ) )
9706	assertFalse ( ( Boolean ) rm. getResultsList ( ). get ( 0 ). get ( 0 ) )
9707	assertEquals ( "void f(void* target) {\\n" + "    ((void (*)(void)) target)();\\n" + "}\\n", BridgeMethodCompiler. createBridgeCWrapper ( functionType. getReturnType ( ), functionType. getParameterTypes ( ), functionType. getParameterTypes ( ), "f" ) )
9708	assertThat ( userPermissions, hasItem ( "ROLE_ADMIN" ) )
9709	Assert. assertTrue ( bnet. getConditionalDistributionTimeT ( var ). equalDist ( dynamicNB. getConditionalDistributionTimeT ( var ), 0.05 ) )
9710	assertEquals ( "www.leveluplunch.com/java/examples/?test=a&test=b", uri. toString ( ) )
9711	assertTrue ( services. size ( ) > 0 )
9712	Assert. assertEquals ( sortStringToList ( getElement ( "OBR.3", "EI.1" ) ), sortStringToList ( handler. getFillerOrderNumber ( ) ) )
9713	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, query2 ) )
9714	assertEquals ( true, result )
9715	assertFalse ( validator. validate ( EntityNames. STUDENT_COHORT_ASSOCIATION, cohortIds ). equals ( cohortIds ) )
9716	Assert. assertNotNull ( result )
9717	assertNotEquals ( e1, e2 )
9718	assertEquals ( 1, countResults ( repository. getScanner ( scan ) ) )
9719	assertThat ( sampleEntities. size ( ), is ( equalTo ( 30 ) ) )
9720	assertEquals ( ( long ) 8, result. getLongValue ( ) )
9721	assertMockEndpointsSatisfied ( 1, TimeUnit. MINUTES )
9722	assertEquals ( i, 44 )
9723	assertNull ( lookup )
9724	assertEquals ( 0, rule. match ( langTool. getAnalyzedSentence ( "all right" ) ). length )
9725	assertNotNull ( connector )
9726	assertEquals ( "<main-set><record number=\\"1\\"><field_0>Tom</field_0><field_1>Fennelly</field_1><field_2>Male</field_2><field_3>A</field_3><field_4>B</field_4><field_5>C</field_5><field_6>4</field_6><field_7>IR</field_7><field_8>Ireland</field_8><field_9>2</field_9><field_10>3</field_10></record><record number=\\"2\\"><field_0>Mike</field_0><field_1>Fennelly</field_1><field_2>Male</field_2><field_3>D</field_3><field_4>F</field_4><field_5>G</field_5><field_6>2</field_6><field_7>IR</field_7><field_8>Ireland</field_8><field_9>4</field_9></record></main-set>"
9727	Assert. assertEquals ( errorCode. toString ( ) + " - " + errorMsg, dataXException. getMessage ( ) )
9728	assertNotNull ( Channel. fetcher ( "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
9729	assertTrue ( "Got children", node. getChildren ( ). isEmpty ( ) )
9730	Assert. assertArrayEquals ( ENCODED_VALUE, byteOutputStream. toByteArray ( ) )
9731	assertResultSet ( res )
9732	Assert. assertEquals ( 0, activityListAdapter. getHeaderPositionForItem ( 0 ) )
9733	assertFalse ( "compresseion failed", failed )
9734	assertEquals ( "unexpected phase", "pre-protocol-frontend", li. getPhase ( ) )
9735	assertEquals ( 200, delete. getStatus ( ) )
9736	assertArr ( arr )
9737	assertTrue ( validator. validate ( "student", ids ). containsAll ( ids ) )
9738	assertEquals ( 1, SnowcastTimestampComparator. INSTANCE. compare ( sequence1, sequence2 ) )
9739	Assert. assertEquals ( "risk_set", queryName. getImage ( ) )
9740	assertEquals ( expected, uri )
9741	assertEquals ( cfProvider. getConfiguredProperties ( ), ImmutableMap. of ( "connectionNameList", MULTIPLE_IBM_MQ_BROKERS ) )
9742	assertions. isGreaterThan ( new Integer ( 10 ) )
9743	assertThat ( drbdXml. getPossibleChoices ( option ), is ( new Value [ ] { new StringValue ( ), new StringValue ( "both" ), new StringValue ( "HOST1" ), new StringValue ( "HOST2" ) } ) )
9744	assertFalse ( n. exists ( ) )
9745	assertNull ( next )
9746	assertThat ( inSignature, is ( true ) )
9747	Assert. assertArrayEquals ( bytes, result )
9748	assertEquals ( expectedResults, actualResults )
9749	assertNotNull ( result )
9750	assertTrue ( collection. containsAll ( input ) )
9751	assertEquals ( referenceNode. getId ( ), ( long ) refNodeId )
9752	assertNotNull ( EntityProvider. readServiceDocument ( in, "application/atom+xml" ) )
9753	assertEquals ( "this is the book title", source. getValue ( "Book/name" ) )
9754	assertOutWithMetadata ( "/**\\n" + " * foo.bar.baz.A\\n" + " *\\n" + " * @fileoverview\\n" + " *\\n" + " * @suppress {checkTypes|accessControls}\\n" + " */\\n" + "\\n" + "goog.provide('foo.bar.baz.A');\\n" + "\\n" + "\\n" + "\\n" + "/**\\n" + " * @constructor\\n" + " */\\n" + "foo.bar.baz.A = function() {\\n" + "  if (a) {\\n" + "    for (var /** @type {Object} */ i in obj) {\\n" + "      doit();\\n" + "    }\\n" + "  }\\n" + "};\\n" + "\\n" + "\\n" + "/**\\n" + " * Prevent renaming of class. Needed for reflection.\\n" + " */\\n" + "goog.exportSymbol('foo.bar.baz.A', foo.
9755	assertOut ( "/**\\n * @constructor\\n */\\norg.apache.royale.A = function() {\\n};\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('org.apache.royale.A', org.apache.royale.A);\\n\\n\\n/**\\n * @export\\n * @return {Object}\\n */\\norg.apache.royale.A.prototype.foo1 = function() {\\n  return null;\\n};\\n\\n\\n/**\\n * @export\\n * @return {Object}\\n */\\norg.apache.royale.A.prototype.foo1a = function() {\\n  return null;\\n};\\n\\n\\n/**\\n * @export\\n * @override\\n */\\norg.apache.royale.A.prototype.foo1b = function() {\\n  return org.apache.royale.A.superClass_.foo1b.apply(this);\\n};\\n\\n\\n
9756	assertEquals ( expected, exts )
9757	assertThat ( restored, is ( p ) )
9758	assertNull ( result )
9759	assertEquals ( currSize, fct. getDataSize ( ) )
9760	Assert. assertEquals ( source, dist )
9761	Assert. assertNotEquals ( oldid, id )
9762	assertEquals ( "��匕 3 爻丕毓丕鬲", t. format ( new Date ( 0 ) ) )
9763	assertTrue ( StringUtils. isNotBlank ( content ) )
9764	assertThat ( subjectOf ( axiom ), isOptionalOf ( individual ) )
9765	BaseTest. assertEqualsUnordered ( "find(po)", quads1, quads2 )
9766	assertThat ( list. get ( 1 ), is ( 1 ) )
9767	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
9768	Assert. assertEquals ( 100., time, 0.01 )
9769	assertRequestWithCookie ( endpoint, HttpMethod. GET, name, value )
9770	assertEquals ( 1, tagInode. stat ( ). getUid ( ) )
9771	assertEquals ( 307, cr. getStatus ( ) )
9772	assertThat ( PlainTimestamp. of ( date, time ). toDate ( ), is ( date ) )
9773	assertEquals ( 0, loaded. size ( ) )
9774	assertNotNull ( facility )
9775	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
9776	assertNotNull ( plasmapheresis. getId ( ) )
9777	assertTrue ( page. getBody ( ). asText ( ). indexOf ( "Inserting children" )!= - 1 )
9778	Assert. assertTrue ( "duplicate variant names were not removed", bn. getVariants ( ). size ( ) == 1 )
9779	assertFalse ( validator. validate ( EntityNames. TEACHER_SCHOOL_ASSOCIATION, teacherSchoolAssociations ). equals ( teacherSchoolAssociations ) )
9780	Assert. assertEquals ( 0, points. size ( ) )
9781	assertEquals ( "", result )
9782	org. assertj. jodatime. api. Assertions. assertThat ( indexCreationDate )
9783	assertEquals ( "http://example.com/fallback", uri. getFallbackUri ( ). toString ( ) )
9784	assertTrue ( list. isEmpty ( ) )
9785	assertEquals ( "aeeoauaaooo", slug )
9786	assertThat ( archetypeElementVO. getDescription ( ), equalTo ( "elementIdTest2" ) )
9787	assertEquals ( registerBrokerBody. getTopicConfigSerializeWrapper ( ). getTopicConfigTable ( ). size ( ), decodeRegisterBrokerBody. getTopicConfigSerializeWrapper ( ). getTopicConfigTable ( ). size ( ) )
9788	assertNotNull ( expectedResItem )
9789	assertThat ( command. accept ( state ), is ( true ) )
9790	assertEquals ( 1, deleteOldFormsProtectionIdsCalled [ 0 ] )
9791	Assert. assertEquals ( factory. getRuleParsers ( ). get ( factory. getRuleParsers ( ). size ( ) - 1 ), testParser )
9792	assertEquals ( "Setting message timestamp as java.util.Date results in correct format for elasticsearch", Tools. buildElasticSearchTimeFormat ( dateTime ), esTimestampFormatted )
9793	assertTrue ( s. contains ( "ein negeR mi tgaz ellezaG tim regeN niE" ) )
9794	assertEvents ( context, "Quartz gateway not stopped.", false )
9795	assertEquals ( expectedActivityCosts + expectedTransportCosts, iCosts, 0.01 )
9796	assertEquals ( TEST_IOS_APP_METADATA, iosApp. getMetadataAsync ( ). get ( ) )
9797	assertThat ( entityId, is ( nullValue ( ) ) )
9798	assertEquals ( ChannelzProtoUtil. extractChannelData ( stats ), protoStats )
9799	assertNull ( entity )
9800	assertEquals ( false, CatalogTreeUtils. isDapNode ( noDapNode ) )
9801	assertEquals ( "1.234", doublePrecisionFloat. toString ( ) )
9802	assertNotNull ( Conversation. fetcher ( "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
9803	assertEquals ( Arrays. asList ( 1, 2, 3 ), from ( num, 1, 2, 3, 4 ). where ( num. lt ( 4 ) ). select ( num ). fetch ( ) )
9804	assertEquals ( 1, fixture. mark ( ) )
9805	assertEquals ( NOT_DECODED, PASSWORD, object. getPassword ( ) )
9806	Assert. assertEquals ( "Duke", model. getName ( ) )
9807	assertEquals ( "test", article. getEditSummary ( ) )
9808	assertEquals ( reply, replyCapture. getValue ( ). getResponse ( ) [ 0 ] )
9809	assertEquals ( expected, result )
9810	assertEquals ( 41, p. getAge ( ) )
9811	assertEquals ( "[null,{\\"a\\":999999999,\\"b\\":123,\\"c\\":-444444444,\\"d\\":-123}]", new String ( baos. toByteArray ( ) ) )
9812	assertEquals ( true, result )
9813	assertEquals ( expected, response. getValue ( ) )
9814	assertEquals ( expectedBounds, actualBounds )
9815	assertThat ( domainPresenceInfo. getServerService ( SERVER_NAME ), nullValue ( ) )
9816	assertSame ( tileSize, renderingHints. get ( GPF. KEY_TILE_SIZE ) )
9817	assertEquals ( "UTF-8", response. getEncoding ( ) )
9818	assertEquals ( 0.011, gst. getLongitudeError ( ), 0.001 )
9819	assertEquals ( item40Location. getY ( ), item40Location2. getY ( ) )
9820	assertEquals ( "[null,{\\"a\\":123.123,\\"b\\":true,\\"c\\":3312,\\"d\\":\\"Mystring\\"}]", new String ( baos. toByteArray ( ) ) )
9821	Assert. assertEquals ( 10000, getRowCount ( ) )
9822	Assert. assertFalse ( thriftTransportConfig. isTcpDataSenderCommandAcceptEnable ( ) )
9823	assertThat ( value, is ( valueOfDesc2 ) )
9824	assertEquals ( data, data2 )
9825	Assert. assertEquals ( true, b )
9826	Assert. assertNotNull ( asientoRecibido )
9827	assertEquals ( "Hello " + name, greeter. getMessage ( ) )
9828	assertTrue ( resultComparator. compare ( fd1, fd2 ) > 0 )
9829	assertEquals ( 82, new AcceptsLambda < Integer > ( ). accept ( l ). intValue ( ) )
9830	arrays. assertDoesNotContain ( description, actual, emptyArray ( ) )
9831	assertArrayEquals ( DATA, ByteArray. getAllBytes ( output ) )
9832	assertEquals ( "OK", r )
9833	assertOut ( "var /** @type {boolean} */ a = Boolean(1)" )
9834	assertEquals ( request. getUri ( baseURI ), expectedURI )
9835	Assert. assertTrue ( "This ULR message (CommandCode 316, Request) should be allowed by LUA rules diameter_orig_realm",! sigfw. unitTestingFlags_sendDiameterMessage )
9836	assertEquals ( period, start. until ( end ) )
9837	Assert. assertEquals ( Arrays. asList ( post ), postList )
9838	assertJsonEquals ( ImmutableMap. of ( "topic", "test-topic", "android", data ), message )
9839	assertNull ( expression. evaluate ( record ) )
9840	assertEquals ( m1, m2 )
9841	assertEquals ( result. size ( ), 2 )
9842	assertEquals ( false, result )
9843	assertEquals ( table. getRowHeight ( ), TableUtilities. getPreferredRowHeight ( table, - 1 ) )
9844	assertEquals ( element. getChild ( "b" ), element. getChild ( "b" ) )
9845	assertTrue ( log. debugEnabled ( ) )
9846	editor. assertProblems ( "my-repo|Unused", "other-repo|Unused" )
9847	assertFalse ( tokenizer. hasHeader ( ) )
9848	assertFalse ( ucd. getChild ( 0 ) instanceof ASTImplementsList )
9849	assertNotNull ( classUnderTest. getPluginStatuses ( ) )
9850	assertEquals ( rep [ i ], PatternUtils. revertBrackets ( org [ i ] ) )
9851	Assert. assertEquals ( 0, result. length ( ) )
9852	Assert. assertFalse ( child. isTerminated ( ) )
9853	assertEquals ( "/projects/com.zeroturnaround/jrebel.commons/target/classes", actualObj )
9854	assertThat ( target. parse ( ), is ( false ) )
9855	assertEquals ( "{\\"statements\\" : [{\\"statement\\" : \\"MATCH (n) RETURN n\\"}]}", json )
9856	assertFalse ( filter. isSimplePnfsMatch ( ) )
9857	Assert. assertEquals ( EventType. UNSUSPEND, eventType )
9858	assertNotNull ( createdBreaker )
9859	runner. assertNotValid ( )
9860	assertSame ( newUrl, url )
9861	assertEquals ( value, anotherValue )
9862	assertTrue ( endpointRef. toString ( ). equals ( expectedRef. toString ( ) ) )
9863	assertEquals ( dbName, itemName. getSPARQLName ( ) )
9864	Assert. assertNotNull ( trazas )
9865	Assert. assertTrue ( Precision. equals ( binomial, jacobi. value ( 1.0 ), 1 ) )
9866	assertEquals ( putCounter - removeCounter, index. size ( ) )
9867	assertThat ( DatastoreUtil. getOrNull ( ds, null, lock. key ), is ( nullValue ( ) ) )
9868	Assert. assertEquals ( "cmaio", keyGen. generateKey ( doc ) )
9869	assertTrue (! result )
9870	assertEquals ( 12.0, fontSize, 0.1 )
9871	Assert. assertEquals ( "A:1,C:1,pi:7", networks )
9872	assertEquals ( "Wrong result", defaultValue, config. get ( Integer. class, KEY_PREFIX, defaultValue ) )
9873	assertOut ( expected )
9874	assertNotNull ( "List key not found", keyID )
9875	assertEquals ( rc. request ( ). host ( ), host )
9876	Assert. fail ( "Should throw an exception here" )
9877	assertFalse ( ml. length == 0 )
9878	assertThat ( subject. hasErrors ( preparedUpdate ), is ( true ) )
9879	assertEquals ( 0, fooDao. queryForAll ( ). size ( ) )
9880	Assert. assertEquals ( Constants. GENERIC_SERIALIZATION_BEAN, url. getParameter ( Constants. GENERIC_KEY ) )
9881	assertTrue ( result. isEmpty ( ) )
9882	Assert. assertNull ( actual )
9883	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff34_" ) )
9884	assertEquals ( 0, latch. getCount ( ) )
9885	assertThat ( json, is ( "{" + LS + "  \\"foo\\" : {" + LS + "    \\"string\\" : \\"bar\\"" + LS + "  }" + LS + "}" ) )
9886	assertEquals ( "fakeStream-56789-12345", myTask. getMessageIdFromSource ( envelope ) )
9887	Assert. assertNotNull ( addressResultsDto )
9888	Assert. assertEquals ( RD, rd. getString ( ) )
9889	assertTrue ( site. login ( "email@example.com", "password", http ) )
9890	assertThat ( givenProgram. getChildPrograms ( ), contains ( stringProgram ( "01" ), stringProgram ( "X" ), stringProgram ( "23" ) ) )
9891	assertThat ( provider. getValue ( context ), is ( "I'm a string." ) )
9892	Assert. assertEquals ( 7, response. getTotalHits ( ). value )
9893	assertTrue ( page. asXml ( ). contains ( "custom ResourceResolver /index.xhtml" ) )
9894	Assert. assertEquals ( 7, result. length )
9895	assertFieldValues ( new String [ ] { " ", " ", " ", "0", " " }, showView. getFieldValuesExcludingId ( ) )
9896	maps. assertHasEntrySatisfying ( info, actual, key, isNotDigits )
9897	assertNotNull ( SuccessRate. fetcher ( "BXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
9898	assertEquals ( expected, query. export ( ) )
9899	assertEquals ( "POST /controllink HTTP/1.1\\r\\n" + "Host: fake\\r\\n" + "Content-Type: text/xml\\r\\n" + "SOAPAction: service:type#AddPortMapping\\r\\n" + "Connection: Close\\r\\n" + "Cache-Control: no-cache\\r\\n" + "Pragma: no-cache\\r\\n" + "Content-Length: 559\\r\\n" + "\\r\\n" + "<?xml version=\\"1.0\\"?>" + "<soap:Envelope xmlns:soap=\\"http://schemas.xmlsoap.org/soap/envelope/\\" soap:encodingStyle=\\"http://schemas.xmlsoap.org/soap/encoding/\\">" + "<soap:Body>" + "<u:AddPortMapping xmlns:u=\\"service:type\\">" + "<NewRemoteHost></NewRemoteHost>" + "<NewExternalPort>0</NewExternalPort>" + "<NewProtocol>TCP</NewProtocol>" + "<NewInternalPort>12345</NewInternalPort>" + "<NewInternalClient>5.6.7.8</
9900	assertTrue ( query. toString ( ). contains ( "FROM NAMED <foo>" ) )
9901	assertEquals ( - ONE_HOUR_IN_MILLIS, time. getTime ( ) )
9902	assertTrue ( resultMessage ( result, POST ), result. passedValidation ( ) )
9903	assertThat ( userObject. getPassword ( ), is ( equalTo ( password ) ) )
9904	Assert. assertEquals ( msg, handler. getRcv ( ). toString ( ) )
9905	assertOut ( "var /** @type {string} */ a = String(100)" )
9906	assertEquals ( "geom", ( dump ( ( Node ) r. get ( "node" ) ) ). getProperty ( "layer" ) )
9907	assertEquals ( "dois decilh玫es", actual )
9908	assertThat ( combined, returnsSameItems ( expectedNodes ) )
9909	Assert. assertTrue ( conf. getMountSpecificConf ( ). isEmpty ( ) )
9910	assertContains ( expect, rs. getMergedModel ( ) )
9911	assertTrue ( resourcesManager. getAdminGroups ( sess, resource ). contains ( group ) )
9912	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
9913	assertEquals ( "bar", sb. toString ( ) )
9914	assertThat ( ranking, lessThan ( 0 ) )
9915	assertThat ( list, is ( simples ( "Hello, world!" ) ) )
9916	Assert. assertEquals ( "col", intersect. getPath ( ) )
9917	assertFalse ( pojo. testService. interrupted. get ( ) )
9918	assertEquals ( "[\\"A\\",[\\"foo\\",2],\\"B\\"]", TextUtils. joinJSON ( Arrays. asList ( "A", list, "B" ) ) )
9919	assertEquals ( "[Cookie{name='name', value='test1', version='VERSION_0_NETSCAPE', path=Optional[/], domain=Optional[localhost.local], httpOnly=true, secure=false, maxAge=Optional[-1]}]", httpRequest. getEffectiveCookies ( ). toString ( ) )
9920	assertTrue ( getBody ( response ). length ( ) > 100 )
9921	assertTrue ( cleanExit )
9922	assertEquals ( "my title", configuration. getyAxis ( ). getTitle ( ). getText ( ) )
9923	assertEquals ( "user1,user1", result )
9924	Assert. assertEquals ( "did not set allow resource redirects", true, transferOptions. isAllowPutGetResourceRedirects ( ) )
9925	assertEquals ( describe, n. toJSONString ( false ) )
9926	assertEquals ( readFile ( "src/test/resources/graal3" ), out )
9927	assertThat ( output. toString ( ), is ( "my good little bad son" ) )
9928	assertTrue ( QueryUtil. getExplainPlan ( rs ). contains ( "    SERVER ARRAY ELEMENT PROJECTION" ) )
9929	assertTrue ( fstB. equals ( fstReversed ) )
9930	Assert. assertEquals ( result, collector. output. get ( null ) )
9931	assertNull ( result )
9932	assertEquals ( "a {}", br. readLine ( ) )
9933	Assert. assertTrue ( output. contains ( "walkmod:commons:class-refactor" ) &&! output. contains ( "default" ) )
9934	assertEquals ( expectedFileName, actualFileName )
9935	Assert. assertEquals ( configNew, configOld )
9936	context. assertIsSatisfied ( )
9937	assertEquals ( ChatStatus. ready, chat. getStatus ( ) )
9938	assertEquals ( expected, actual )
9939	assertTrue ( videos. contains ( video ) )
9940	Assert. assertEquals ( expected, getString ( writer ) )
9941	assertTrue ( connectFuture. isConnected ( ) )
9942	assertEquals ( JSON. serialize ( result ), "[ { \\"field1\\" : \\"value1\\"}, { \\"field2\\" : 12}]" )
9943	Assert. assertTrue ( "Body validation failed", isValid )
9944	assertSame ( testTable, column. getTable ( ) )
9945	assertValidationFailures ( deriver, config )
9946	testHelper. assertProcessEnded ( testHelper. snapshotBeforeMigration. getProcessInstanceId ( ) )
9947	assertEquals ( "Fusco", lambdaList. get ( 0 ). getLastName ( ) )
9948	assertTrue ( response. getStatusCode ( ) == 200 )
9949	assertTrue ( "Task retries lower than specified via withTaskRetryLimit()", actualAttempts == expectedAttempts || actualAttempts == expectedAttempts - 1 )
9950	assertFalse ( ret2. equals ( t1 ) )
9951	assertEquals ( "Hello [request?name1] [request?name2]", ResponseBodyInterpolator. interpolate ( "Hello ^[request?name1] ^[request?name2]", req ) )
9952	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
9953	assertEquals ( "1 test case should fail", 1, runTestsResults. getFailedTests ( ). size ( ) )
9954	assertThat ( proc. context ( ). contextAttrs ( ). get ( "__retryCount" ), is ( retryCount ) )
9955	Assert. assertEquals ( 2, failures. size ( ) )
9956	assertEquals ( "3�� 15��臧� 38攵� ��", t. format ( durations ) )
9957	assertEquals ( ByteBuffer. wrap ( EMPTY_STRING. getBytes ( Charsets. UTF_8 ) ), FieldParser. parse ( EMPTY_STRING, schema ) )
9958	assertEquals ( Result. FAIL, nouser. apply ( item ) )
9959	assertEquals ( matchDbIdExp ( "ARTIST_ID", 2 ), createNumericId ( "ARTIST_ID", "Artist", Integer. class ). eq ( id ) )
9960	assertNotNull ( Settings. fetcher ( ). fetch ( ) )
9961	assertNotNull ( result )
9962	assertTrue ( discretionary )
9963	Assert. assertFalse ( itemsGet. accept ( element ) )
9964	assertEquals ( result. build ( ). find ( ArrayElement. class, "retval" ). get ( 0 ). getEntries ( ), myTestInstance. groupBy ( builder ). toList ( ) )
9965	assertAsText ( mockMonitoringRequest, "/path/to/file,CD,**" )
9966	assertFalse ( result. isPresent ( ) )
9967	assertEquals ( "text/csv; charset=UTF-8", layout. getContentType ( ) )
9968	Assert. assertNotSame ( testSubject, newUnion )
9969	assertTrue ( buckets. size ( ) >= 1 )
9970	assertFalse ( meta1. equals ( meta2 ) )
9971	Assert. assertEquals ( config, result )
9972	assertNotNull ( InstalledAddOnExtension. reader ( "XEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
9973	assertThat ( DateInterval. between ( start, end ). getEnd ( ), is ( Boundary. of ( IntervalEdge. CLOSED, end ) ) )
9974	assertEquals ( true, MapUtils. isEmpty ( map ) )
9975	assertThat ( result. size ( ), equalTo ( jedis. size ( ) ) )
9976	assertEquals ( LockMode. WRITE, mLockList. getLockMode ( ) )
9977	assertTrue ( "No business categories returned!", categories!= null && categories. size ( ) > 0 )
9978	assertThat ( books. getContent ( ). size ( ), is ( 1 ) )
9979	assertEquals ( 2026871.8, julDate. getJulianDate ( ), TOLERANCE )
9980	assertThat ( "getChildCount", node. getChildCount ( ), is ( 0 ) )
9981	assertThat ( testOutcome. getResult ( ), is ( ERROR ) )
9982	assertSimpleTerm ( result, "term1", false, false )
9983	Assert. assertTrue ( String. format ( "failed to force pass phrase verification error. expected message '%s...', actual message: '%s'", Application. VERIFY_ERROR, message ), isErrorMessage )
9984	assertEquals ( "WGS 84", epsgDescription )
9985	assertSame ( choice, alternative )
9986	Assert. assertEquals ( "a%2Aa=b%2Ab", getLine ( QUERY_LINE, canonicalRequest ) )
9987	Assert. assertThat ( table. toString ( ), is ( "Hello\\nWorld" ) )
9988	assertTrue ( resource + " is not valid", result. isValid ( ) )
9989	assertTrue ( c. isValidForSqlQuery ( ) )
9990	runner. assertTransferCount ( PutHiveStreaming. REL_RETRY, 1 )
9991	assertEquals ( "{\\"schema\\":\\"string\\"}", request. toJson ( ) )
9992	assertThat ( "Failed test: " + testName, the ( bos. toString ( ) ), isSimilarTo ( the ( filterUnderTest ) ) )
9993	org. junit. Assert. assertEquals ( expected, actual )
9994	Assert. assertEquals ( "SELECT " + fixedColumns + ",COUNT(`foo.bar`) FROM v WHERE _user_ ='me' ORDER BY `foo.bar` DESC", sql )
9995	assertEquals ( Status. FAIL, jxm. getStatus ( ) )
9996	assertEquals ( "first logical column in LToR", BasicMonthViewUI. WEEK_HEADER_COLUMN, dayGridPosition. x )
9997	assertXMLEqual ( new StringReader ( "<body><outer>text</outer></body>" ), new StringReader ( html ( processed ) ) )
9998	assertEquals ( expected, actual )
9999	assertThat ( predicate. getPartitionPredicate ( ), is ( "(p1='value11' AND p2='value22') OR (p1='value1' AND p2='value2')" ) )
10000	Assert. assertTrue ( exceptionThrown )
10001	assertThat ( actual, is ( YESTERDAY_HIT ) )
10002	assertEquals ( "$6$abc$oP/h8PRhCKIA66KSTjGwNsQMSLLZnuFOTjOhrqNrDkKgjTlpePSqibB0qtmDapMbP/zN1cUEYSeHFrpgqZ.GG1", Sha2Crypt. sha512Crypt ( buffer, "$6$abc" ) )
10003	assertEquals ( "<a>One</a> Two Three <i>Four</i> Fix <i>Six</i>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
10004	Assert. assertEquals ( "Session Application-Id should be the same as indicated.", SH_APPID, sessionAppId )
10005	assertEquals ( expResult, result )
10006	assertEquals ( expResult, result )
10007	assertThat ( m. getComponent ( "jmsTest" ), is ( instanceOf ( JMSComponent. class ) ) )
10008	assertEquals ( "Input is an example syslog ", true, ls5424pb. parseLine ( example5424Syslog ) )
10009	assertThat ( editor. getValue ( ), is ( getExistingObject ( ) ) )
10010	assertEquals ( "wrong message", "Test message", dut. getMessage ( ) )
10011	assertEquals ( 'a', ex. charAt ( s, - 5 ) )
10012	Assert. assertEquals ( "Invalid result", true, predicate. test ( new Object ( ) ) )
10013	assertTrue ( lookup. isDefined ( testVariable ) )
10014	assertThat ( axioms. isEmpty ( ), is ( true ) )
10015	assertEquals ( expResult, result )
10016	assertEquals ( Arrays. asList ( arrayOfEmps [ 2 ] ), employees )
10017	assertEquals ( test. getStrings ( ), ImmutableList. of ( "A", "B" ) )
10018	assertEquals ( "^(a 3)b 5\\n", found )
10019	assertEquals ( Status. SUCCESS. getValue ( ), response. getStatus ( ) )
10020	Assert. assertEquals ( 0, Context. getObsService ( ). getObservationCount ( names, true ). intValue ( ) )
10021	assertNull ( "null byte buffer", shouldBeNull )
10022	assertNull ( context. getHeartbeatMode ( ) )
10023	assertEquals ( HttpStatusCode. INTERNAL_SERVER_ERROR. code, response. getStatus ( ) )
10024	assertEquals ( "Testing Course", courses. get ( 0 ). getName ( ) )
10025	assertFalse ( arr. every ( callbackfn ) )
10026	assertEquals ( edit, deleteAction )
10027	assertTrue ( syn instanceof JavassistMethodSynthesizer )
10028	assertSame ( fieldVar, result )
10029	Assert. assertEquals ( message, actualMessage )
10030	assertEquals ( URI. create ( "http://localhost:8080/base/resource/method1" ), u )
10031	assertEquals ( "Option value", "true", commandLine. getOption ( "simpleOption" ) )
10032	assertFalse ( validator. isValid ( resource, MetadataSection. COLLECTIONS_SECTION ) )
10033	assertEquals ( dbUrl + "/foo/bar", ref. toString ( ) )
10034	Assert. fail ( e. getMessage ( ) )
10035	assertTrue ( "There should be errors", countErrors ( chain )!= 0 )
10036	assertEquals ( new HashSet < String > ( Arrays. asList ( "staff1", "staff2", "staff3" ) ), underTest. filterConnectedViaProgram ( new HashSet < String > ( staffIds ), e ) )
10037	assertEquals ( LocalDate. of ( 2012, 7, 6 ), test )
10038	Assert. assertTrue ( activeLedgers. containsKey ( lh. getId ( ) ) )
10039	assertEventEqualAfterSerializeDeserialize ( event )
10040	assertEquals ( expected, mergeAclEntries ( existing, aclSpec ) )
10041	assertThat ( results, samePaths ( new File ( root, "b.txt" ) ) )
10042	assertThat ( result, is ( "1" ) )
10043	assertSame ( de, reg. build ( e ) )
10044	assertThat ( leaseType, is ( lease. getLeaseType ( ) ) )
10045	assertEquals ( expectedQuery, actualQuery )
10046	Assert. fail ( "Every deployment should have defined its own logging profile. But found this line in logs: " + line )
10047	assertEquals ( result, range. exclude ( other ) )
10048	assertEquals ( "aMethod", response )
10049	Assert. assertEquals ( true, MatchResultCompare. oriDbTabCompareWithMatchResult ( result, "NSEARCH_GROUP_2", "nserch_1" ) )
10050	assertEquals ( "Sentence not split correctly for " + language + ": '" + input + "'", "[A sentence., And another one.]", tokenizer. tokenize ( input ). toString ( ) )
10051	assertEquals ( false, check. isRequired ( ) )
10052	assertFalse ( resultMessage ( result, PUT ), result. passedValidation ( ) )
10053	this. assertOneMatcher ( is ( instanceOf ( HeaderRequestMatcher. class ) ) )
10054	assertEquals ( Status. BAD_REQUEST. getStatusCode ( ), r. getStatus ( ) )
10055	assertTrue ( "Script did not timeout", shexc. isTimedOut ( ) )
10056	assertEquals ( 4, i )
10057	assertEquals ( Sets. newHashSet ( "table2", "table3" ), service. getTablesToRepair ( cluster, unit ) )
10058	assertTrue ( "Unexcepted value, exp 1, got " + i, Integer. valueOf ( 1 ). equals ( i ) )
10059	Assert. assertEquals ( projectorForward. getTranscriptStartingAtCDS ( ), resultTranscript )
10060	assertTrue ( globalDomainAccessControlListEditorSubject. updateOwnerRegistrationControlEntry ( orce ) )
10061	assertEquals ( mockResponse, testResponse )
10062	assertEquals ( 0, cacheStorage. size ( ) )
10063	assertEquals ( TOP_LEVEL_CONTAINER_FROM_USES, bindingII )
10064	assertEquals ( expected, elements )
10065	assertTrue ( "Workflow is not in an error state", workflowStatus. errorOccurred ( ) )
10066	assertEquals ( 0, response. size ( ) )
10067	assertEquals ( expResult, result )
10068	assertTrue ( "Identity realm should be created", ops. exists ( TEST_IDENTITY_REALM_ADDRESS ) )
10069	assertEquals ( expect, cpcClass. getTextNormalized ( ) )
10070	assertEquals ( "aX", p1. readNestedProperty ( "toArtist.artistName" ) )
10071	assertSimpleTerm ( result, "term% term_ %term_", false, true )
10072	Assert. assertEquals ( skipResult, TBaseFilter. CONTINUE )
10073	assertThat ( errors, not ( hasFieldErrors ( "degree" ) ) )
10074	Assert. assertTrue ( intersect instanceof EmptyRange )
10075	assertFalse ( isEmoji )
10076	Assert. assertArrayEquals ( expectedResults, actualResults, 0.01 )
10077	assertTrue ( ex. isPrime ( 97 ) )
10078	assertEquals ( jointPointRetureValue, actualReturnValue )
10079	assertEquals ( qn, qnExpected )
10080	assertTrue ( value. size ( ) > 0 )
10081	assertEquals ( this. unpacked, unpacked )
10082	Assert. assertEquals ( subscription. getSubscriptionProperties ( ), setProperties )
10083	assertEquals ( "SELECT * WHERE {?user?_c2?_c3 ;?_c4?user_gender.?user_gender?_c6?user_gender_ordinal. FILTER(?user_gender_ordinal =?_c8) }" )
10084	assertPorts ( "specific-ports-offset", 1 + offset, 5 + offset, 6 + offset )
10085	assertEquals ( 2, filteredMatches. size ( ) )
10086	Assert. assertEquals ( expected, new String ( encoded ) )
10087	assertTrue ( "Something wrong. Returned wadl length is not > 0", applicationWadl. length ( ) > 0 )
10088	assertEquals ( 1., end. getTheoreticalEarliestOperationStartTime ( ), 0.01 )
10089	Assert. assertEquals ( Option. none ( ), a0. optionalInteger ( ) )
10090	assertThat ( confirmation. getStatus ( ), equalTo ( remoteStartStopStatus ) )
10091	assertEquals ( 7, tool. heapCaculation ( ) )
10092	assertEquals ( setOfStrings ( "silver" ), all )
10093	assertTrue ( tc. accept ( BasicTest. class ) )
10094	assertTrue ( getNoErrorMsg ( ), result )
10095	assertTrue ( checker. isZipInputStream ( bufferedInputStream ) )
10096	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getPrivileges ( set ( "producer_group1" ), ActiveRoleSet. ALL ) ). toString ( ) )
10097	assertNull ( array )
10098	assertEquals ( resp, ack + none )
10099	assertTrue ( txtRes. contains ( "Testing" ) )
10100	assertEquals ( true, ( ( DropDownImageListEditor ) presenter ). isEditMode )
10101	Assert. assertEquals ( demoService. getExportedUrls ( ). get ( 0 ). getPort ( ), helloService. getExportedUrls ( ). get ( 0 ). getPort ( ) )
10102	BufferedImageAssert. assertMatches ( result, new float [ ] { 1, 1, 1, 1, 1, 1, 1, 0, 0 } )
10103	assertTrue ( doc. getLabels ( ). isEmpty ( ) )
10104	this. assertIndices ( im ( 0, 0 ), im ( 1, 1 ), im ( 3, 2 ), im ( 2, 3 ) )
10105	assertThat ( codePoints. containsAll ( "��\\n" ), is ( false ) )
10106	assertEquals ( 1, new ReadFuture ( ref. limitToLast ( 1 ) ). timedGet ( ). size ( ) )
10107	assertEquals ( UNSUPPORTED_MEDIA_TYPE, argumentCaptor. getValue ( ). getStatusInfo ( ) )
10108	assertNull ( found )
10109	assertOk ( client. executePost ( "/foo", "{}", ContentType. APPLICATION_JSON ) )
10110	Assert. assertEquals ( false, obs. getValueAsBoolean ( ) )
10111	DocSetAssertions. assertRange ( 0.8, 0.9, c )
10112	assertEquals ( "p" + testPersonId, sut. objectToString ( activity ) )
10113	assertEquals ( schemaName, analysisService. getSchemaName ( "UTF-8", inputStream ) )
10114	Assert. assertTrue ( true )
10115	assertLabelQueryResult ( query. toString ( ), both ( binds ( "p", URI. class ) ). and ( binds ( "pLabel", Literal. class ) ) )
10116	Assert. assertEquals ( true, fr. isSuccess ( ) )
10117	assertEquals ( "x", new Experiment ( ). doIt ( "x" ). join ( ) )
10118	assertEquals ( "helloworld" + System. lineSeparator ( ) + "helloworld2", FileUtils. readFileToString ( testFile, Charset. forName ( "UTF-8" ) ). trim ( ) )
10119	assertEquals ( expected, formatted )
10120	Assert. assertThat ( fromJson. getValue ( ), is ( "0" ) )
10121	Assert. assertEquals ( 2147483647, res )
10122	assertFalse ( problem )
10123	assertEquals ( 8, nodelist. getLength ( ) )
10124	assertEquals ( BYTE_FIELD_VALUE, storedValue )
10125	assertThat ( nonInfo, hasSize ( 2 ) )
10126	assertTrue ( sba instanceof ThickSBA )
10127	assertEquals ( "OK", response. getTitle ( ) )
10128	Assert. assertEquals ( "B", deployment. getName ( ) )
10129	assertNotNull ( validator )
10130	assertTrue ( fail )
10131	assertEquals ( 3, obj. foo )
10132	assertArrayEquals ( Arrays. copyOf ( os. toByteArray ( ), 4 ), MAGIC_BIG_ENDIAN )
10133	assertEquals ( "Please input method name, eg: \\r\\ninvoke xxxMethod(1234, \\"abcd\\", {\\"prop\\" : \\"value\\"})\\r\\ninvoke XxxService.xxxMethod(1234, \\"abcd\\", {\\"prop\\" : \\"value\\"})\\r\\ninvoke com.xxx.XxxService.xxxMethod(1234, \\"abcd\\", {\\"prop\\" : \\"value\\"})", result )
10134	Assert. assertFalse ( itemsGet. accept ( element ) )
10135	assertThat ( instance. getValue ( ), equalTo ( TEST_VALUE ) )
10136	assertArrayEquals ( packet, Proto. arraylist_to_array ( payload ) )
10137	Assert. assertEquals ( row. length, length )
10138	assertTrue ( Configurator. compareFs ( fs1, fs2 ) )
10139	assertEquals ( limit, results. size ( ) )
10140	assertEquals ( "MessageService could not be created because of exception 'IllegalArgumentException with message 'Parameter locale MUST NOT be NULL.'.", ms. getText ( ) )
10141	assertEquals ( 1, destroyed. get ( ) )
10142	assertEquals ( Character. valueOf ( '|' ), CsvBulkImportUtil. getCharacter ( conf, "conf.key" ) )
10143	assertEquals ( in, outStream2. toString ( "UTF-8" ) )
10144	assertEquals ( 5, context. getTableCount ( ) )
10145	assertFalse ( validator. validate ( EntityNames. STAFF, ids ). equals ( ids ) )
10146	assertEquals ( field. getName ( ), NameUtils. canonicalizeForEnumTypes ( region. getRegionId ( ) ) )
10147	AssertUtil. assertNoJSError ( )
10148	assertThat ( is. available ( ), Is. is ( 0 ) )
10149	Assert. assertEquals ( pis. size ( ), 3 )
10150	assertEquals ( 80, sumOfType1Cap )
10151	assertDirectories ( "directories", "hello" )
10152	Assert. assertEquals ( expected, super. parse ( "good.path.here " ) )
10153	assertEquals ( 10., newVrp. getInitialVehicleRoutes ( ). iterator ( ). next ( ). getDepartureTime ( ), 0.01 )
10154	assertE ( "       " + "       " + "      =" + "��      " + "====== " + "       " + "#######" )
10155	assertEquals ( "instance.test(1, 2, 3)", callTest. toJavaSrc ( ) )
10156	assertEquals ( jobService. getJobServersStatus ( namespace, jobName ). size ( ), 1 )
10157	assertNotNull ( Conference. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
10158	assertEquals ( "Configuration 'ogm-config' is applied to the cache", "ogm-config", configuration )
10159	assertThat ( errors. toString ( ), containsString ( "No response found for required item with id = 'link0'" ) )
10160	assertAccessorsCorrect ( table, "expandedRows", Collections. EMPTY_SET, rows1, rows2 )
10161	assertFalse ( cmp. isSuccess ( ) )
10162	assertTrue ( list. isEmpty ( ) )
10163	assertEquals ( expResult, result )
10164	MatcherAssert. assertThat ( "Instance reusedExistingDatabase should be false.",! instances. reusedExistingDatabase ( ) )
10165	assertArrayEquals ( new String [ ] { "5" }, a. getStrings ( ) )
10166	assertEquals ( "http://qun.594sgk.com/s/?wd=10001", url )
10167	assertThat ( maxSide. max ( 10d, 20d, 15d ), is ( 20d ) )
10168	assertFalse ( integer2. equals ( integer3 ) )
10169	assertEquals ( expResult, result )
10170	Assert. assertTrue ( "Cipher must be 31C1F2E6BF714350BE5805216AFC5AFF", Arrays. equals ( ByteUtils. hexStringToByteArray ( "31C1F2E6BF714350BE5805216AFC5AFF" ), header. getCipher ( ) ) )
10171	assertTrue ( conn!= null )
10172	assertElementsOfIterator ( new TemporalValueRange < > ( fromTime, toTime, 10, ChronoUnit. MINUTES ). createRandomIterator ( workingRandom ), LocalDateTime. of ( 2016, 7, 1, 4, 35, 12 ) )
10173	assertNotNull ( injector )
10174	assertEquals ( 0.0, instance. inclusiveHypervolume ( ind ), 0.0 )
10175	Assert. assertEquals ( bytesMap. size ( ), simpleMapPOJO. getBytesMap ( ). size ( ) )
10176	assertEquals ( TIME + 1L, currTime )
10177	Assert. assertNotNull ( str )
10178	Assert. assertTrue ( result. getVersion ( ) == 2 )
10179	assertThat ( checker. detectLanguageOfString ( unsupportedCzech, "en", Arrays. asList ( ), Arrays. asList ( "foo", "cs" ), Collections. emptyList ( ) ). getDetectedLanguage ( ). getShortCodeWithCountryAndVariant ( ), is ( "zz" ) )
10180	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED, status )
10181	assertEquals ( "[10, 8, 6, 4, 2]", IteratorToGeneratorAdapter. adapt ( range ). toCollection ( ). toString ( ) )
10182	assertFalse ( "Should produce different random bytes", Arrays. equals ( new Random ( ). randomBytes ( ), new Random ( ). randomBytes ( size ) ) )
10183	Assert. assertEquals ( "SELECT pet.id, pet.num, pet.name, pet.age, pet.cate, pet.master_id, pet.user_id FROM t_pet pet WHERE id" + fieldAdd + " > 3 ORDER BY id" + fieldAdd + " ASC LIMIT 1;", sql )
10184	assertTrue ( result < 0 )
10185	assertTrue ( "Wrong info: " + result. info, result. info. startsWith ( "2 document" ) )
10186	assertThat ( studies. size ( ), is ( 1 ) )
10187	Assert. assertNotNull ( field. getUuid ( ) )
10188	assertThat ( getMatchingContainerEnv ( domainPresenceInfo, jobSpec ), allOf ( hasEnvVar ( "item1", "value1" ), hasEnvVar ( "item2", "value2" ), hasEnvVar ( "WL_HOME", "/u01/custom_wl_home/" ), hasEnvVar ( "MW_HOME", "/u01/custom_mw_home/" ) ) )
10189	FixtureAsserts. assertStringMatchesJsonFixture ( "Customer retrieve their User as HAL+JSON", actualResponse, "/fixtures/hal/user/expected-customer-retrieve-user.json" )
10190	assertEquals ( cliLoadJob. getJobSpec ( ), createLoadSpec ( ) )
10191	assertNotNull ( "Previous step failed", uri_conferenceInstance )
10192	assertNotNull ( Credential. reader ( ). read ( ) )
10193	assertEquals ( "{\\"a\\":{\\"b\\":1}}", n )
10194	assertEquals ( "Parsing of long option does not match expected result.", PROPERTY_LONG_EXPECTED, parseResult )
10195	Assert. assertEquals ( expected, returned )
10196	assertEquals ( "no-cache", wrapper. getFirstHeader ( "Cache-Control" ). getValue ( ) )
10197	runner. assertValid ( service )
10198	assertEquals ( "{\\"data\\":[{\\"x\\":80,\\"y\\":80,\\"name\\":80},{\\"x\\":20,\\"y\\":20,\\"name\\":20},{\\"x\\":10,\\"y\\":10}]}", toJSON ( containerSeries ) )
10199	assertSqlCanBeParsedAndDeparsed ( stmt )
10200	Assert. assertEquals ( expected, actual )
10201	assertThat ( node, isBrowseNodeWith ( contentRepository, null, "foo", "foo", asset, null ) )
10202	assertFalse ( fieldAccessor. fieldIsPrimitive ( ) )
10203	assertEquals ( true, out. firstElement ( ). get ( ) )
10204	assertActualNodeHasNullConflictWorking ( workingCopy, "file" )
10205	assertEquals ( "percentile = " + percentile, randomMaster. getResult ( percentile ), randomMaster. reduce ( percentile, aggregates ), 5E-3 )
10206	Assert. assertEquals ( NUM_SHIRT_THREADS, collector. size ( ) )
10207	assertMockEndpointsSatisfied ( )
10208	Assert. assertEquals ( "password", secretMap. get ( "serverKeystorePass" ) )
10209	assertEquals ( expected, getStringWithContext ( TestQueryImpl. example ( false ), "/* foo {0} {1} {2} {3} {4} {5} {6} {7} */" ) )
10210	assertParseTree ( rootNode ( "hello world", node ( "greeting", "hello ", "hello world", stringNode ( "hi", "hello " ) ) ), tree )
10211	assertEquals ( res. size ( ), 0 )
10212	Assert. assertEquals ( ans [ i ], count )
10213	assertEquals ( "", contactEditText. getText ( ). toString ( ) )
10214	assertEquals ( before, after )
10215	Assert. fail ( "Missing required input" )
10216	assertThat ( relevant, is ( true ) )
10217	assertTrue ( closed. await ( 2, SECONDS ) )
10218	assertThat ( applied, is ( RuntimeContext. DEFAULT. mode ( ExecutionMode. SIMULATION ) ) )
10219	assertThat ( DateInterval. parseISO ( "2012-W01-1/4" ), is ( expected ) )
10220	Helpers. assertJson ( json, expectedJson )
10221	assertThat ( actual, is ( expected ) )
10222	assertFalse ( retryPolicy. getRetryCondition ( ). shouldRetry ( null, e, 1 ) )
10223	assertEquals ( 0.945f, result, 0.001f )
10224	assertEquals ( now. withTimeAtStartOfDay ( ). plusDays ( 1 ). plusSeconds ( - 1 ). toDate ( ), result. getEndTime ( ) )
10225	assertTrue ( masterCommits. hasNext ( ) )
10226	assertEquals ( "a/b/c", testObj. getObjectTitle ( mem, createURI ( "a/b/c" ) ) )
10227	assertFalse ( options1. equals ( options2 ) )
10228	assertTrue ( sets. contains ( message2 ) )
10229	assertEquals ( meta. isNullable ( 1 ), ResultSetMetaData. columnNullable )
10230	assertTrue ( String. format ( "[%s] should be valid.", coord ), validator. isValid ( coord, null ) )
10231	assertTrue ( instantiator instanceof DefaultClassInstantiator )
10232	Assert. assertNotNull ( userDTO )
10233	assertEquals ( 2, objects. size ( ) )
10234	assertEquals ( 200, response. getStatusLine ( ). getStatusCode ( ) )
10235	assertTrue ( getNoErrorMsg ( ), result )
10236	assertEquals ( "putValue", region. get ( "putKey" ) )
10237	Assert. assertEquals ( msg, n )
10238	Assert. assertEquals ( 1l, handler. convertIdentifier ( v ) )
10239	assertEquals ( "Should get feed with METHOD_NOT_ALLOWED", HttpStatus. METHOD_NOT_ALLOWED, response. getResponseStatus ( ) )
10240	Assert. assertEquals ( BatchStatus. COMPLETED, exec. getStatus ( ) )
10241	Assert. assertArrayEquals ( bytes, result )
10242	assertTrue ( p. getStatusSimple ( ). toString ( ). equals ( "active" ) )
10243	assertTrue ( "Comparator cannot sort empty lists", list2. equals ( list ) )
10244	assertThat ( result, equalTo ( "Hello" ) )
10245	files. assertSameBinaryContentAs ( someInfo ( ), notAFile, expected )
10246	Assert. assertFalse ( itemsGet. accept ( element ) )
10247	assertEquals ( NetPlan. getAttributes ( Arrays. asList ( n1, n2 ), "att" ), ImmutableMap. of ( n1, "1", n2, "2" ) )
10248	assertArrayEquals ( new int [ ] { 1, 1 }, updateExecution. getUpdateCounts ( ) )
10249	assertTrue ( videos. contains ( video ) )
10250	assertEquals ( check. getValue ( ), actual )
10251	assertEquals ( "class CompanyException {\\n  public CompanyException(){\\n  }\\n" + "  public CompanyException(  Throwable cause){\\n" + "    super(cause);\\n  }\\n  public CompanyException(  String message){\\n" + "    super(message);\\n  }\\n" + "  public CompanyException(  String message,  Throwable cause){\\n" + "    super(message,cause);\\n  }\\n" + "}\\n", td. toString ( ) )
10252	Assert. assertNotNull ( addressResultsDto )
10253	assertThat ( context. statement ( ), is ( "'b c'" ) )
10254	assertFalse ( str. endsWith ( "\\0" ) )
10255	Assert. assertTrue ( "Group item should have been added to sub menu", subMenu. getMenuItems ( ). contains ( group ) )
10256	assertThat ( fieldError, is ( nullValue ( ) ) )
10257	assertThat ( underTest. getLabel ( ), is ( DOCUMENT_LABEL ) )
10258	assertTrue ( "proposition not found by RuleId", propositionFound )
10259	PicOutAssert. assertDocIdPicOutsEquals ( expectedOutputDocIdPicOuts, actualOutputDocIdPicOuts )
10260	assertSingleResult ( op, Statistic. SDEV, expSD )
10261	assertEquals ( value2, updatedConfigState. value )
10262	assertTrue ( result )
10263	assertEquals ( 1000D, stats. average ( ), 1E-3 )
10264	Assert. assertEquals ( 3L, jumlah. longValue ( ) )
10265	assertThat ( base. thenSupplyCancelledCancelled ( supplier ), is ( new ImmediateFailed < > ( caller, cause ) ) )
10266	Assert. assertEquals ( 40. + 1000., solution. getCost ( ) )
10267	Assert. assertFalse ( result )
10268	assertEquals ( expected. build ( ), doc )
10269	assertEquals ( expected, actual )
10270	assertTrue ( tasks. size ( ) == 20 )
10271	assertParseOneDoc ( editor, "DOC(0): ---", "  KEY(0): hello:", "    KEY(2): world:", "      RAW(4): message", "      RAW(-1): " )
10272	assertLoadBalanced ( restTemplate )
10273	Assert. assertNotNull ( "null data object, was not found", dataObject )
10274	assertThat ( result, is ( notNullValue ( ) ) )
10275	assertEquals ( "hetki sitten", t. format ( new Date ( 0 ) ) )
10276	assertArrayEquals ( shorts, decoded )
10277	Assert. assertEquals ( expected, rows. next ( ). toString ( ) )
10278	assertEquals ( "0:0,1:0,2:0,3:0,4:0", list. toString ( ) )
10279	assertNull ( w )
10280	assertNotSame ( 0, count )
10281	context. assertFalse ( handled, "PUT Request to some other resource should not be handled" )
10282	assertThat ( response. getStatus ( ), is ( Response. Status. OK. getStatusCode ( ) ) )
10283	assertThat ( uut. getIdeEnabledMethods ( ). size ( ), is ( 0 ) )
10284	Assert. assertEquals ( 1, count )
10285	assertThat ( subject. getCleanValue ( ). toString ( ), is ( "foo bar" ) )
10286	assertEquals ( 0, result. size ( ) )
10287	Assert. assertEquals ( "{\\"" + entityType. getPropertyNames ( ). get ( 0 ) + "\\":{" + "\\"type\\":\\"MultiLineString\\",\\"coordinates\\":[" + "[[1.0,1.0],[2.0,2.0],[3.0,3.0],[4.0,4.0],[5.0,5.0]]," + "[[99.5,101.5],[150.0,151.25]]]}}", IOUtils. toString ( serializerNoMetadata. entity ( metadata, entityType, entity, null ). getContent ( ) ) )
10288	assertTrue ( "queued.push() blocks", ( time2 - time1 ) < delay )
10289	assertThat ( response. buildURI ( ), is ( "http://zazz.bg/?code=a+test+23" ) )
10290	Assert. assertEquals ( "Error while getting ThesaurusType!", expectedThesaurusTypeTitle, actualThesaurusTypeTitle )
10291	assertPostEdgeProducesJson ( response, false, false )
10292	Assert. assertEquals ( "($1,234,567,890.00)", result. getText ( ) )
10293	assertProcessInstanceCompleted ( processInstance. getId ( ), ksession )
10294	assertMockEndpointsSatisfied ( )
10295	assertNull ( result )
10296	assertEquals ( "Exclude pattern", Arrays. asList ( ".*", ".*ha", ".*hb" ), ruleSet2. getIncludePatterns ( ) )
10297	assertNotNull ( a )
10298	assertTrue ( inventory. contains ( mat, amount ) )
10299	Assert. assertTrue ( ( ( Person ) result [ 0 ] ). equals ( array [ 0 ] ) )
10300	Assert. assertEquals ( "[1, 2, 3, 4]", equals )
10301	assertTrue ( page. getBody ( ). getTextContent ( ). contains ( "Username or email" ) )
10302	assertEquals ( map2. getPartitionEntries ( ). toString ( ), map. getPartitionEntries ( ). toString ( ) )
10303	assertEquals ( 1, testList. size ( ) )
10304	assertEquals ( "should be the same age in weeks", expected. intValue ( ), result. intValue ( ) )
10305	Assert. assertNull ( nullValue )
10306	Assert. assertEquals ( result. getResultSize ( ), 1 )
10307	assertThat ( repository. getDescriptor ( "property" ), is ( "value" ) )
10308	assertThat ( MockI18n. passthrough. text ( str ), is ( str ) )
10309	assertTrue ( actual. entrySet ( ). containsAll ( expected. entrySet ( ) ) )
10310	assertEquals ( 0, FileChunkUtil. getNumberOfChunks ( file, 0 ) )
10311	assertThat ( strategy, is ( instanceOf ( ActiveOntologyLocationStrategy. class ) ) )
10312	Assert. assertEquals ( ValidationResult. Result. OK, snowflakeSourceOrSink. validate ( null ). getStatus ( ) )
10313	assertNull ( result )
10314	Assert. assertTrue ( areImagesEqual ( image, reference ) )
10315	Assert. assertEquals ( expResult, result )
10316	Assert. assertEquals ( 2, result. length ( ) )
10317	assertEquals ( null, output )
10318	assertEquals ( "192.168.0.123/24", event. getIp ( ). getAddress ( ) )
10319	assertEquals ( 1, testPr. getTotalEventsReceived ( ) )
10320	assertFalse ( param. isRequired ( ) )
10321	assertEquals ( "milestone", activityType )
10322	assertEquals ( "����", t. format ( date ) )
10323	assertEquals ( builder. buildResponse ( ). getErrors ( ). size ( ), 0 )
10324	assertSame ( reply, myTestInstance. runAdminCommand ( "command", "name", null ) )
10325	assertNotNull ( result )
10326	assertEquals ( 2, slice. events. size ( ) )
10327	Assert. assertEquals ( "helloworld", result )
10328	assertEquals ( "ABCDE", tis. asString ( ) )
10329	assertEquals ( "writeSet should be in original order", origWriteSet, reorderSet )
10330	assertThat ( archetypeCatalog, not ( nullValue ( ) ) )
10331	Assert. assertTrue ( returnT. getCode ( ) == ReturnT. SUCCESS_CODE )
10332	assertFalse ( "Testing ClusterDublicateServiceException", everything. contains ( "DuplicateServiceException" ) )
10333	assertEquals ( true, Evaluator. evaluate ( ex ) )
10334	assertEquals ( "java.io.FileNotFoundException: Directory does not exists: " + tmpDir. getAbsolutePath ( ), gui. getCheckArea ( ). getText ( ) )
10335	assertEquals ( builder. type. toString ( ), ExperimentType. SAVE_MODEL. toString ( ) )
10336	assertFalse ( encounter. getOrders ( ). isEmpty ( ) )
10337	assertEquals ( 0, ShadowToast. shownToastCount ( ) )
10338	assertThat ( userId, is ( Optional. of ( USER_ID ) ) )
10339	assertTrue ( downloader. waitForReportReady ( ) )
10340	assertEquals ( "", s )
10341	assertEquals ( 3, pendingPosts. size ( ) )
10342	assertEquals ( Permissions. UPDATE, testProcessEngineCfg. getDefaultUserPermissionForTask ( ) )
10343	assertFalse ( "The getChanges() method reported a change", hasChange )
10344	assertEquals ( 0, result. length )
10345	assertThat ( families, arrayContaining ( "Processing" ) )
10346	assertTrue ( aa. getModifiedOn ( ). getTime ( ) - aaModifiedOn > 0 )
10347	assertEquals ( "3 anni fa", t. format ( new Date ( 0 ) ) )
10348	assertNotNull ( EndUser. fetcher ( "ITXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
10349	assertMockEndpointsSatisfied ( )
10350	assertEquals ( 2, packetIn. getCount ( ) )
10351	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
10352	assertEquals ( 5l, d. asInt8 ( ) )
10353	assertEquals ( expected, actualQuery )
10354	Assert. assertTrue ( json. getString ( "status" ). equals ( "204.0" ) )
10355	assertNotNull ( numberTypeConverter )
10356	assertThat ( list. strList, hasSize ( 1 ) )
10357	assertEquals ( 0, peopleIds. size ( ) )
10358	Assert. assertEquals ( expected, actual )
10359	assertEquals ( 2, numberOfUsers )
10360	Assert. assertEquals ( Arrays. asList ( "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ), collected )
10361	assertOut ( "b = b + 1" )
10362	Assert. assertTrue ( id == 1 )
10363	assertEquals ( "a < b & b > c", eh. get ( 0 ). getCondition ( ) )
10364	assertEquals ( 0, task. dataSent. size ( ) )
10365	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( url ) )
10366	Assert. assertTrue ( "Bad cost - expected " + 24.0 + " but was " + cost, cost == 24D )
10367	assertEquals ( Integer. of ( 246 ), result )
10368	assertArrayEquals ( TEObjectUtil. TE_LSP_FAST_REROUTE1, ByteArray. getAllBytes ( output ) )
10369	assertEquals ( "", json, ios. toJSON ( ) )
10370	assertDeleteMessage ( sendMessage )
10371	assertThat ( Strings. md5 ( s ), equalTo ( expected ) )
10372	assertFalse ( hasPermission )
10373	assertEquals ( expected, actual )
10374	assertNull ( ret )
10375	assertTrue ( url. equals ( newUrl ) )
10376	assertTrue ( "Document must contain Metal Gear", document. json ( ). contains ( "Metal Gear" ) )
10377	Assert. assertEquals ( "{\\"alice\\":[\\"bob\\"]}", writer. toString ( ) )
10378	assertClientException ( ( ) -> userTaskAdminClient. reassignWhenNotCompleted ( CONTAINER_ID_V2, task. getId ( ), "", reassign ), 400, "Invalid time expression", "Invalid time expression" )
10379	assertArrayEquals ( "replace and replace is replace". getBytes ( ), actuals )
10380	assertThat ( markedWord, is ( "louper" ) )
10381	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. GTE, v, TERM_FACTORY. getConstantLiteral ( "3", XSD. LONG ) ), translation. get ( 0 ) )
10382	assertThat ( path, is ( "../foo-1.0-SNAPSHOT-someClassifier.woa/Contents/test" ) )
10383	assertEquals ( BuilderFactory. start ( ). add ( "a", 12345678901L ). build ( ), doc )
10384	assertEquals ( asOverZp64 ( gcd ). monic ( ), intrp. monic ( ) )
10385	assertThat ( command. accept ( state ), is ( false ) )
10386	assertThat ( PlainTimestamp. of ( 2014, 4, 21, 9, 15 ). with ( MICRO_OF_SECOND, 999999 ), is ( PlainTimestamp. of ( date, time ) ) )
10387	assertContentType ( actual )
10388	assertEquals ( testGenre, song. getGenre ( ) )
10389	assertTrue ( "getAllComponentsByNamespaceCode not retrieved", components!= null && components. isEmpty ( ) )
10390	assertThat ( ( Boolean ) getter. invoke ( instance ), is ( equalTo ( true ) ) )
10391	assertEquals ( "  0x0001\\n  XX", b. asString ( ) )
10392	assertThat ( imageInfo. rootFs ( ), is ( nullValue ( ) ) )
10393	assertTypeListsEqual ( params, expectedParams )
10394	assertArrayEquals ( expected, actual )
10395	assertThat ( comparator. compare ( axiom1, axiom3 ), is ( lessThan ( 0 ) ) )
10396	assertTrue ( actual )
10397	assertTrue ( "font setting in content stream shall be " + fieldFontSetting, contentAsString. indexOf ( fieldFontSetting ) > 0 )
10398	Assert. assertTrue ( contains )
10399	assertEquals ( "From is not properly parsed", lsdf. parse ( "2015/02/28 01:02:03.004 GMT" ), mapper. readFrom ( columns ) )
10400	assertEquals ( "localhost", sampler. getHostName ( ) )
10401	Assert. assertEquals ( 2, tasks. size ( ) )
10402	assertEquals ( reservationName, "res_1" )
10403	assertTrue ( "no exception was thrown", exception )
10404	assertThat ( database. isClean ( ), is ( false ) )
10405	Assert. assertNull ( "Distinct name was expected to be null", jBossWebMetaData. getDistinctName ( ) )
10406	assertTrue ( Files. isRegularFile ( target ) )
10407	assertEquals ( query1, query2 )
10408	Assert. assertNull ( person. getAttribute ( "name3" ) )
10409	Assert. assertEquals ( "Test template val1 and val2", output )
10410	Assert. assertEquals ( "hey,bye", searchRequestBuilder. request ( ). routing ( ) )
10411	assertNotNull ( res )
10412	Assert. assertEquals ( obj, target )
10413	assertThat ( parseArguments. size ( ), is ( 2 ) )
10414	assertNull ( item. getList ( ) )
10415	assertTrue ( descriptor. hasConstrainedParameters ( ), "Setting given for cross-parameter should take precedence" )
10416	assertEquals ( "getPortalHome full url failed", expected, europeanaUrlService. getPortalHome ( ). toString ( ) )
10417	assertEquals ( Integer. valueOf ( 5 ), Integer. valueOf ( list. size ( ) ) )
10418	assertThat ( rendering, is ( "2nd September 2011" ) )
10419	assertFalse ( d1. equals ( d2 ) )
10420	assertTrue ( payload. contains ( "compressionMode=active" ) )
10421	assertThat ( output, containsString ( "\\"text\\":{\\"status\\":\\"generated\\",\\"div\\":\\"<div xmlns=\\\\\\"http://www.w3.org/1999/xhtml\\\\\\"><div class=\\\\\\"hapiHeaderText\\\\\\">John <b>SMITH </b></div>" ) )
10422	Assert. assertEquals ( ahead, WindowGenerator. compareWindowId ( window2, window1, windowWidthMillis ) )
10423	Assert. assertEquals ( 1001, total )
10424	assertEquals ( ClassWithPrivateAndProtectedMethodInSeparatePackage. RESULT, invokeResult )
10425	assertFalse ( "our group shouldn't have set our attribute", retAttr. contains ( attributes. get ( 0 ) ) )
10426	assertNull ( doc )
10427	assertTrue ( results. size ( ) > 1 )
10428	assertEquals ( joinFileDescriptorBo, JoinFileDescriptorBo. EMPTY_JOIN_FILE_DESCRIPTOR_BO )
10429	assertTrue ( plugin. getNameBanStorage ( ). getBan ( player. getName ( ) ). isSilent ( ) )
10430	assertNotEquals ( insertAction, retractAction )
10431	assertEquals ( NodeValue. TRUE, r )
10432	assertEquals ( 2, numberOfElephants )
10433	assertThat ( def. isMultiple ( ), is ( false ) )
10434	assertNotNull ( bindingDOMDataTreeServiceAdapter. createProducer ( ImmutableSet. of ( ) ) )
10435	assertTrue ( elapsed <= 300l && elapsed < 500l )
10436	Assert. assertEquals ( getCssFileContents ( cmpFile ), styleSheet. toString ( ) )
10437	assertEquals ( Version. valueOf ( "1.0.0-alpha+build" ), builder. build ( ) )
10438	assertEquals ( publicationDate, mods. get ( 0 ). getModifiedTime ( ) )
10439	context. assertIsSatisfied ( )
10440	assertNotNull ( result )
10441	assertEquals ( "service", s. getType ( ) )
10442	assertEquals ( "T:12", x. toString ( ) )
10443	assertThat ( foundResources, contains ( p2id. getValue ( ) ) )
10444	assertThat ( result. getItems ( ), hasItems ( new PersonId ( johnSmith_UpperCase. getUserName ( ) ) ) )
10445	assertEquals ( LifecycleState. DEGRADED, node. connect ( ). toBlocking ( ). single ( ) )
10446	assertCompletionsDisplayString ( "spring.http.converters.preferred-json-mapper=<*>\\n", "gson", "jackson" )
10447	Assert. assertNull ( queryResult. getExplanations ( ) )
10448	Assert. assertEquals ( "/prefix1:root/prefix2:otherchild", expression. toString ( ) )
10449	assertOut ( "/**\\n * org.apache.royale.A\\n *\\n * @fileoverview\\n *\\n * @suppress {checkTypes|accessControls}\\n */\\n\\ngoog.provide('org.apache.royale.A');\\n\\n\\n\\n/**\\n * @constructor\\n */\\norg.apache.royale.A = function() {\\n};\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('org.apache.royale.A', org.apache.royale.A);" )
10450	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
10451	assertEquals ( asList ( size * 2 ), segmentSizes )
10452	assertThat ( fe, notNullValue ( ) )
10453	assertEquals ( 1, response. getEntry ( ). size ( ) )
10454	assertThat ( itr. hasNext ( ), is ( false ) )
10455	Assert. fail ( "Test should fail, user shouldn't be allowed to invoke that method" )
10456	Assert. assertNotNull ( addressResultsDto )
10457	assertTrue ( tasks. size ( ) == 20 )
10458	assertEquals ( ScanResult. Status. ERROR, scanResult. getStatus ( ) )
10459	assertThat ( wrapper. get ( 0 ), is ( ( short ) 0x0024 ) )
10460	assertThat ( output, containsString ( "\\"text\\":{\\"status\\":\\"generated\\",\\"div\\":\\"<div xmlns=\\\\\\"http://www.w3.org/1999/xhtml\\\\\\"><div class=\\\\\\"hapiHeaderText\\\\\\">John <b>SMITH </b></div>" ) )
10461	assertThat ( renderer. getShortForm ( entity ), is ( "xsd:negativeInteger" ) )
10462	assertThat ( versionedIdsOf ( units ), bagEquals ( versionedIdList ( LAUNCHER_FEATURE, LAUNCHER_FEATURE_JAR, LAUNCHER_BUNDLE, LAUNCHER_BUNDLE_LINUX, LAUNCHER_BUNDLE_WINDOWS, LAUNCHER_BUNDLE_MAC ) ) )
10463	assertEquals ( "select cat\\nfrom Cat cat fetch all properties, Cat cat1 fetch all properties", query2. toString ( ) )
10464	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE NAME(nodes) >= 'literal'" ) )
10465	assertEquals ( 0, SnowcastTimestampComparator. INSTANCE. compare ( sequence1, sequence2 ) )
10466	assertEquals ( newHashSet ( testObject1, testObject2 ), testSet. stream ( ). collect ( toSet ( ) ) )
10467	Assert. assertEquals ( "Validation warnings/errors were found.", 0, appender. getCount ( ) )
10468	assertEquals ( vNum, pdfNum )
10469	assertTrue ( equals ( statEntity, nativeEntity ) )
10470	Assert. assertEquals ( queue, testQueue )
10471	assertEquals ( "UPDATE EntityWithRelations SET EntityWithRelations.name =? WHERE EntityWithRelations.pk =?", Utils. singleLine ( sql ) )
10472	assertFailureKeys ( "value of", "missing (2)", "though it did contain (3)", "---", "expected to contain at least", "but was" )
10473	assertEquals ( Arrays. asList ( "http://somelink", "" ), new JsonLinkConsumer ( ). readLinks ( reader, null ) )
10474	Assert. assertEquals ( "bla_", Converter. getLabelFromSsdump2FileName ( fileName ) )
10475	Assert. assertTrue ( elements. get ( 0 ) instanceof PolymerTemplateViewElement )
10476	assertEquals ( "getRuntimeVersion timeout", latch. getCount ( ), 0 )
10477	assertEquals ( true, result )
10478	assertEquals ( 0, suggestedConfigUpdates. size ( ) )
10479	assertThat ( tableNames, Matchers. contains ( "SOMETABLE" ) )
10480	Assert. assertTrue ( out. size ( ) > 0 )
10481	assertThat ( returned. getX ( ), is ( 2l ) )
10482	assertEquals ( false, set. contains ( "a/b" ) )
10483	assertEquals ( "Failed on rows: [" + rows + "], columns: [" + columns + "], iteration: [" + i + "]", 1.0f, res, 0.01f )
10484	assertSame ( faultUnMarshaller, factory. getFaultUnMarshaller ( ) )
10485	CheckstyleTestUtils. assertSimilarXmlWithResource ( "/org/sonar/plugins/checkstyle/CheckstyleProfileExporterTest/" + "noCheckstyleRulesToExport.xml", sanitizeForTests ( writer. toString ( ) ) )
10486	assertEquals ( "Call count stability check.", "{findIds=2, getItems=1}", service. callCounter. toString ( ) )
10487	Assert. assertNotNull ( irodsTaggingService )
10488	assertEquals ( 4, timers. size ( ) )
10489	assertThat ( newUser. getViewedBooks ( ). size ( ), is ( 1 ) )
10490	Assert. assertEquals ( TimeValue. NEG_ONE_MILLISECOND, d )
10491	assertThat ( CompositeBlobStore. getStoreSuitabilityCheck ( ), equalTo ( CompositeBlobStore. StoreSuitabilityCheck. EMPTY ) )
10492	assertInEqualsOut ( )
10493	assertEquals ( "groupId:artifactId", softwareProjectId. getProjectId ( ) )
10494	assertEquals ( "flush()", methodCall )
10495	assertEquals ( expected [ counter ++ ], actual )
10496	assertEquals ( "" + "************\\n" + "************\\n" + "++++++++++++\\n" + "************\\n" + "++++++++++++\\n" + "************\\n", raster. toString ( ) )
10497	assertTrue ( "Cannot store DOI as item metadata value.", result )
10498	assertTrue ( target. isModify ( newSettings ) )
10499	assertTrue ( gl. size ( ) > 0 )
10500	assertEquals ( "EXEC \\"DIAL\\" \\"\\"", execCommand. buildCommand ( ) )
10501	assertNull ( mediaType. charset ( ) )
10502	assertUserSettingsCount ( )
10503	Assert. assertEquals ( "Strings are the same after transformation", STANDART, decoded )
10504	JsonAssert. assertJsonEquals ( expectedResult, resultString )
10505	Assert. assertTrue ( expect ( o, true ) )
10506	assertMakeImageCanReadImage ( imageData )
10507	Assert. assertNull ( character. getData ( ) )
10508	assertEquals ( 0, app. executeApplication ( args ) )
10509	assertEquals ( CoordCommandUtils. RESOLVED_UNRESOLVED_SEPARATOR + "${coord:latestRange(-3,0)}", action. getMissingDependencies ( ) )
10510	assertThat ( request. getConnectorId ( ), equalTo ( someInteger ) )
10511	assertEquals ( "Wrong order for " + name, orderMap. get ( name ). intValue ( ), order )
10512	assertNull ( avroField. convertToKettleValue ( array, mock ( Schema. class ), mock ( Schema. class ), false ) )
10513	assertEquals ( i, o )
10514	arrays. assertContainsAnyOf ( someInfo ( ), failures, actual, array ( ) )
10515	assertIsAborted ( tx )
10516	Assert. fail ( "identifier accepted as qname" )
10517	assertPropertiesAreUpdatedOnDoc ( props )
10518	assertEquals ( Type. ACCOUNT, Type. get ( account ) )
10519	assertEquals ( expectedResult, result )
10520	assertEight ( result, testContext, async )
10521	assertEquals ( "{\\"type\\":\\"BUTTON\\",\\"id\\":1,\\"x\\":2,\\"y\\":2,\\"color\\":0,\\"width\\":2,\\"height\\":2,\\"tabId\\":0,\\"label\\":\\"MyButton\\",\\"isDefaultColor\\":false,\\"deviceId\\":0,\\"pin\\":-1,\\"pwmMode\\":false,\\"rangeMappingOn\\":false,\\"min\\":0.0,\\"max\\":0.0,\\"pushMode\\":false}", result )
10522	assertEquals ( exp, arrayX )
10523	assertEquals ( "some return path", mockResult. included ( "returnPath" ) )
10524	assertE ( "----------" + "|        |" + "|        |" + "|    o   |" + "|        |" + "|        |" + "|        |" + "|        |" + "|        |" + "----------" )
10525	assertEquals ( NUM_ITERATIONS, passes. get ( ) )
10526	Assert. assertTrue ( intersect instanceof EmptyRange )
10527	assertTrue ( result. isEmpty ( ) )
10528	assertEquals ( "{key:value}", target. toString ( ) )
10529	assertEquals ( expected, result )
10530	assertEquals ( "ExtHosp2, Zip City", hospitalModel. queryHospitalDataForSample ( "CORE18001224T" ). fullAddresseeString ( ) )
10531	assertEquals ( "hello, world!", out )
10532	assertEquals ( token0, token1 )
10533	assertEquals ( Arrays. asList ( "y=\\"", "\\"" ), results )
10534	assertTrue ( Bytes. equals ( opened, data ) )
10535	Assert. assertEquals ( 1234, multicastSocket. getLocalPort ( ) )
10536	assertEquals ( "<table>... <tr>... <td>a</td>... </tr>... </table>", example. toString ( ) )
10537	assertEquals ( result, expected )
10538	assertEquals ( expected, result )
10539	Assert. assertEquals ( ArrayUtils. toString ( v0. toByteArray ( ) ) + ArrayUtils. toString ( v1. toByteArray ( ) ), udf. getKey ( embedding ) )
10540	Assert. assertEquals ( 76.875, tdCosts. getBackwardTransportTime ( loc ( "from" ), loc ( "to" ), 100., null, null ), 0.01 )
10541	assertEquals ( Lists. newArrayList ( 1 ), listBad )
10542	assertThat ( result. getBins ( ), hasItems ( 1.0, 2.0, 3.0 ) )
10543	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
10544	assertFalse ( "Unexpected match for " + patterns, HostPatternsHolder. isHostMatch ( testHost, 0, patterns ) )
10545	assertTrue ( results. size ( ) == 27 )
10546	assertTrue ( Files. isDirectory ( list ) )
10547	assertArrayEquals ( sentBytes, ArrayConverter. concatenate ( new byte [ ] { 0x17, 0x03, 0x03, 0x00, 0x04 }, "test". getBytes ( Charset. forName ( "ASCII" ) ) ) )
10548	assertNotNull ( result )
10549	assertions. containsSequence ( 6, 6, 8, 10, 10 )
10550	assertEquals ( "void dest5(int, @B int)", toString ( dest ) )
10551	Assert. assertTrue ( "Calling set with an invalid file type does not modify the widget", CollectionUtils. isEqualCollection ( expected, widget. getFileTypes ( ) ) )
10552	Assert. assertNull ( job. sendCommandStr ( "test command" ) )
10553	assertThat ( CollectionNumbers. doubleArrayCopyOf ( summed ), equalTo ( new double [ ] { 0, 0, 0, 0, 0, 0 } ) )
10554	assertThat ( options. isIgnoreFailures ( ), is ( true ) )
10555	assertEquals ( column, fromProto )
10556	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5 ) ) )
10557	Assert. assertTrue ( "There should be no GREService if no gre is configured", greServices. isEmpty ( ) )
10558	assertThat ( g. toSmiles ( ), is ( "CC=[C@]=CC" ) )
10559	assertThat ( f. format ( time ), is ( "17:45 PST" ) )
10560	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
10561	Assert. assertEquals ( "SELECT USER();", text )
10562	assertEquals ( 1, filteredEvidenceItemMap. size ( ) )
10563	assertEquals ( 6, errors. size ( ) )
10564	Assert. assertEquals ( "id2 [" + id2 + "] - id [" + id + "]", ( id2 - id ), ( long ) 1 )
10565	assertTrue (! plan1. equals ( plan2 ) )
10566	assertTrue ( size > BUFFER_SIZE )
10567	assertTrue ( Futures. getUnchecked ( collector ) )
10568	assertThat ( propertyVariable, is ( "alex" ) )
10569	assertSame ( test. m, test. toInject. m )
10570	assertNull ( study )
10571	assertEquals ( "schema", bean. getSchema ( ) )
10572	assertTrue ( retCode == 0 )
10573	assertFalse ( rolesPrivileges. isEmpty ( ) )
10574	assertEquals ( 2, branches. size ( ) )
10575	assertThat ( supplier. authFor ( "gcr.io/foobar/barfoo:latest" ), matchesAccessToken ( accessToken ) )
10576	assertEquals ( 1234, unprocessed. getExpected ( ) )
10577	assertEquals ( HttpStatus. SC_OK, response. getStatus ( ) )
10578	assertFalse ( kbuilder. getErrors ( ). toString ( ), kbuilder. hasErrors ( ) )
10579	Assert. assertNotNull ( "null entries returned", entries )
10580	assertTrue ( clas. getClass ( ). getName ( ), clas instanceof Integer )
10581	runner. assertAllFlowFilesTransferred ( PublishKafka_2_0. REL_SUCCESS, 3 )
10582	Assert. assertNull ( tags )
10583	assertEquals ( "Max Mustermann", result )
10584	assertTrue ( result. length ( ) > 0 )
10585	assertEquals ( map1, map2 )
10586	Assert. assertEquals ( "org.jboss.as:jboss-as-arquillian-container-domain-remote:7.1.1.Final", adapter. dependencies ( ) [ 0 ] )
10587	assertThat ( zonedDateTime, is ( ZonedDateTime. parse ( "1969-07-21T12:56:00+10:00[Australia/Brisbane]" ) ) )
10588	assertEquals ( "<b>1</b>\\n<p><b>2</b>3</p>", doc. body ( ). html ( ) )
10589	assertEquals ( 206, r. getStatus ( ) )
10590	assertEquals ( 3, res. getInt ( "nbHits" ) )
10591	Assert. assertEquals ( "2011-11-01 00:00:00", formater. format ( date. getTime ( ) ) )
10592	Assert. assertFalse ( "server shouldnt supoort case-insensitive", isSupport )
10593	assertEquals ( Arrays. asList ( new CalculatedDatum < String > ( "assessments", "HighestEver", "ACT", "ScaleScore", "28.0" ) ), data. getCalculatedValues ( ) )
10594	assertEquals ( 42, boundBoxFoo. motherFoo ( ) )
10595	Assert. assertTrue ( newSql. equals ( "SELECT * FROM cpcplan" + suffix + " WHERE name = :name" ) )
10596	assertThat ( getRecordedDomain ( ), not ( hasCondition ( Available ) ) )
10597	assertNotNull ( text )
10598	assertThat ( problems. size ( ), is ( 0 ) )
10599	assertEquals ( - 150, scorer. scorePosition ( board, context ) )
10600	Assert. assertEquals ( 0, importHandler. cachedImports. size ( ) )
10601	assertTrue ( mapper. getOntologyIRIs ( ). contains ( df. getIRI ( "http://test.org/compleximports/A.owl" ) ) )
10602	Assert. assertEquals ( resp. getStatus ( ), HttpServletResponse. SC_UNAUTHORIZED )
10603	assertTrue ( getInflatedAuthnRequest ( loc ). contains ( "<saml2p:NameIDPolicy AllowCreate=\\"true\\" " + "Format=\\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\\"/></saml2p:AuthnRequest>" ) )
10604	assertEquals ( "image", os. toString ( ) )
10605	Assert. assertTrue ( StringUtils. equals ( elValue, "emplyee_setDept_2" ) )
10606	assertSame ( out, result )
10607	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
10608	assertTrue ( latch. await ( WAIT_SEC, TimeUnit. SECONDS ) )
10609	Assert. assertTrue ( result. toString ( ), result. isSuccessful ( ) )
10610	assertNull ( factory. newNameResolver ( new URI ( "bbb://foo" ), Attributes. EMPTY ) )
10611	assertEquals ( expected, got )
10612	assertNull ( "Therapy object was null", therapy )
10613	AssertiveInstance. init ( )
10614	Assert. assertNull ( userService. getUser ( 2 ) )
10615	ctx. assertTrue ( res. containsAll ( topics ), "Was expecting topics " + topics + " to be in " + res )
10616	Assert. assertFalse ( policy. isResponseCacheable ( request, response ) )
10617	assertEquals ( inc. get ( ). get ( ), outRA. get ( ). get ( ), 0.0 )
10618	assertFalse ( parameter. isNamed ( ) )
10619	assertEquals ( 0, out. size ( ) )
10620	assertEquals ( 1, livePostManager. getAll ( ). size ( ) )
10621	Assert. assertTrue ( this. manager. connectAll ( this. person1, Arrays. asList ( null, this. family1, null, this. family2 ) ) )
10622	assertArrayEquals ( new byte [ ] { 1, 2, 3, 4 }, sink. toByteArray ( ) )
10623	assertThat ( axioms, hasItem ( axiom ) )
10624	assertEquals ( result, MessageFormat. format ( "{0,date,short} {0,time}", min ) )
10625	assertEquals ( value, returned )
10626	assertEquals ( "onetwo", sb. toString ( ) )
10627	assertThat ( unmarshal ( sb ), allOf ( hasEntry ( "mdc key", "mdc" + HACK_ATTEMPT ), hasEntry ( "explicit key", "explicit" + HACK_ATTEMPT ) ) )
10628	assertEquals ( "NOT (x = 5 AND y <= 5)", c. toString ( ) )
10629	assertNotNull ( jobProperties )
10630	Assert. assertTrue ( fields. size ( ) < klass. getDeclaredFields ( ). size ( ) )
10631	assertThat ( estimator. getCardinality ( ), is ( STATS. getVertexCount ( ) * STATS. getVertexCount ( ) ) )
10632	Assert. assertEquals ( "Application name", "AnnotatedAlias", dag. getAttributes ( ). get ( com. datatorrent. api. Context. DAGContext. APPLICATION_NAME ) )
10633	assertEquals ( IP_10_123_1_54_80, StringUtils. formatSocket ( socket ) )
10634	Assert. assertEquals ( 0, result. getEntities ( ). size ( ) )
10635	assertTrue ( vret. isPassed ( ) )
10636	assertSelect ( tq, binding ( vars, "\\"Alice\\"", "\\"Smith\\"" ), binding ( vars, "\\"Bob\\"", "\\"Cook\\"" ) )
10637	assertEquals ( expected, location )
10638	assertFalse ( Strings. isNullOrEmpty ( column. toString ( ) ) )
10639	assertThat ( excludeProgressLogsFilter. decide ( event ), equalTo ( DENY ) )
10640	assertThat ( c. getResponseCode ( ), is ( 201 ) )
10641	assertEquals ( "tpc/incoming/2014/02/01/03", path )
10642	Asn1UtilTest. assertEncoded ( ENCODED_IPV4_ADDRESS_FAMILY_RESOURCES, subject. ipAddressFamilyToDer ( AddressFamily. IPV4, resources ) )
10643	assertThat ( p1, is ( p2. inverse ( ) ) )
10644	assertTrue ( lineOffsetExpected. equals ( lineOffset ) )
10645	assertEquals ( m1, m2 )
10646	assertEquals ( "http://example.org/{X}/{Y}/", URITemplates. getUriTemplateString ( f1 ) )
10647	assertEquals ( 1, result )
10648	assertEquals ( new PatternComparator ( false ). compare ( recognizedPattern1, recognizedPattern2 ), 0 )
10649	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( url ) )
10650	assertEquals ( expected, cls )
10651	Assert. assertEquals ( VERO, obs. getValueAsString ( Locale. ITALIAN ) )
10652	assertEquals ( end - start, 100, 50 )
10653	assertTrue ( element. getElements ( ). isEmpty ( ) )
10654	Assert. assertEquals ( foo. Quux ( ), result )
10655	Assert. assertEquals ( 10000, result. intValue ( ) )
10656	assertEquals ( HttpStatus. CREATED, statusCode )
10657	assertThat ( renderer. getShortForm ( entity ), is ( "owl:backwardCompatibleWith" ) )
10658	assertEquals ( "auditOperationType must not be null.", e. getMessage ( ) )
10659	assertTrue ( "Row height should increase when changing from Reindeer to Valo", valoHeight > reindeerHeight )
10660	HeadlessTestUtils. assertHeadlessYes ( $. driver ( ). get ( ) )
10661	assertNull ( result )
10662	Assert. assertTrue ( expected. similar ( actual ) )
10663	assertEquals ( expectedId, newId )
10664	Assert. assertEquals ( 1, countNumberOfOccurence ( fullyQualifiedName, "adm2Name" ) )
10665	Assert. assertEquals ( "123\\n--\\n[0:1,1:2,2:3]", html )
10666	assertEquals ( geojsonRDD. rawSpatialRDD. count ( ), 1 )
10667	assertEquals ( 6, runtimeInformation. getSteps ( ). size ( ) )
10668	assertEquals ( 5, response. getJsonArray ( "alerts" ). size ( ) )
10669	assertLookup ( breaks, values, srcImg, DataBuffer. TYPE_DOUBLE )
10670	assertEquals ( appbase, app. getRemoteURL ( "" ) )
10671	Assert. assertEquals ( Arrays. asList ( "bar", "foo", "list" ), new ArrayList < String > ( map. keySet ( ) ) )
10672	assertNotNull ( relatedResult )
10673	assertThat ( foundResources, contains ( p2id. getValue ( ) ) )
10674	assertEquals ( expResult, result )
10675	assertEquals ( expected, result )
10676	assertTrue ( actual. isEmpty ( ) )
10677	assertThat ( getCreatedPod ( ). getSpec ( ). getNodeName ( ), is ( "kube-01" ) )
10678	assertEquals ( "Pattern matches but hostname has over 255 chars ", true, lslp. parseLine ( pattern, 1, 1, 1, 1, 1, longString + ":.COMMAND=nub" ) )
10679	assertTrue ( "Command '" + cmd + "' missing in help.", help. contains ( cmd ) )
10680	assertTrue ( encoded. indexOf ( "\\n" ) == encoded. lastIndexOf ( "\\n" ) )
10681	assertEquals ( "[(test:1>5 --group=test)>(AppNode:file:21>25)]", sn. stringify ( true ) )
10682	assertEquals ( flavour2. name, "Test_Flavour" )
10683	assertEquals ( mav. getViewName ( ), "redirect:/topics/error/" + TOPIC_ID + "?page=null" )
10684	assertEquals ( 1, map. size ( ) )
10685	assertThat ( result, is ( false ) )
10686	Assert. assertEquals ( 0, queue. size ( ) )
10687	Assert. assertEquals ( 2, violations. size ( ) )
10688	assertEquals ( "Find by UOM label not returning a list with one value descriptor", 1, valueDescriptors. size ( ) )
10689	assertThat ( results, is ( Arrays. asList ( "C-A-B", "A", "B", "C" ) ) )
10690	Assert. assertNull ( this. component. resolveEntity ( NONEXISTENT_ID ) )
10691	assertTrue ( bout. toString ( ). contains ( data ) )
10692	assertThat ( cut. apply ( pageObject ), is ( false ) )
10693	assertTrue ( resultMessage ( result, PUT ), result. passedValidation ( ) )
10694	assertThat ( Visitors. readable ( query ), is ( "SELECT * FROM A UNION ALL SELECT * FROM B" ) )
10695	assertThat ( renderingComparator. compare ( axiom1, axiom2 ), is ( lessThan ( 0 ) ) )
10696	assertEquals ( "a<V>\\n", found )
10697	assertTrue ( event. duration ( ). equals ( event. getStartTime ( ) ) )
10698	Assert. assertTrue ( Models. isomorphic ( expected, actual ) )
10699	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. EDIT, this. doc ) )
10700	assertEquals ( 1.0, dataSet. collect ( ). get ( 0 ), 0.001 )
10701	assertThat ( output. toString ( ), Matchers. is ( Matchers. equalTo ( "\\"RUNNING\\"" ) ) )
10702	Assert. assertEquals ( 9, a. getNumberOfMethods ( ) )
10703	assertEquals ( 3, vars. size ( ) )
10704	assertEquals ( 1, events. size ( ) )
10705	assertThat ( c1. call ( 1, 2, 3 ), returns ( 19283 ) )
10706	assertEquals ( 5.25D, toml. getDouble ( "double" ). doubleValue ( ), 0.0 )
10707	assertThat ( parser. getState ( ), is ( State. PREAMBLE ) )
10708	assertSame ( d1, d2 )
10709	assertThat ( ListNumbers. toListNumber ( array ), equalTo ( ( ListNumber ) new ArrayShort ( array ) ) )
10710	assertArrayEquals ( data, stream. toByteArray ( ) )
10711	Assert. assertNotNull ( addressResultsDto )
10712	assertArrayEquals ( params, instance. getParams ( ) )
10713	Assert. assertEquals ( xmlEsperado, icms51. toString ( ) )
10714	assertNotNull ( Query. fetcher ( "UAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "UHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
10715	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 01" ) )
10716	authRule. assertScenario ( scenario )
10717	assertThat ( result, is ( false ) )
10718	assertFalse ( "isLoaded should return false if only element actually displayed is not required" + " when RequireAll annotation is used.", testView. isLoaded ( ) )
10719	Assert. assertEquals ( MedianOf3PivotingStrategy. class, getUnivariateStatistic ( ). getPivotingStrategy ( ). getClass ( ) )
10720	assertEquals ( DecodeQualification. UNABLE, readerPlugIn. getDecodeQualification ( stReader ) )
10721	Assert. assertEquals ( propertyFileString, result )
10722	Assert. assertEquals ( "SecondFirstHi ejbthree1852", result )
10723	AsserterWithLazyInitialisationAlgorithm. ASSERTER. assertInstancesOf ( klasse, areImmutable ( ), provided ( String. class ). isAlsoImmutable ( ) )
10724	assertTrue (! branch_conditions. isEmpty ( ) )
10725	assertTrue ( "Expected VirtualIps", obj instanceof VirtualIps )
10726	assertNotNull ( factory. createContext ( file ) )
10727	assertThat ( underTest. isValid ( Collections. singleton ( "nx-repository-admin-maven2-maven-public-*" ), context ), is ( true ) )
10728	assertThat ( channelDTO, nullValue ( ) )
10729	assertEquals ( expResult, result )
10730	assertEquals ( "MyService1", service. name ( ) )
10731	assertNull ( factoryReference. getObject ( ) )
10732	assertEquals ( DefaultWroManagerFactory. class, victim. getWroManagerFactory ( ). getClass ( ) )
10733	assertEquals ( "scopedName", "mySpace:ABC-123", String. valueOf ( resource. getScopedName ( ) ) )
10734	assertTrue ( "Delta Link missing or wrong!", json. contains ( "__delta\\":\\"http://host:80/service/Rooms?!deltatoken=1234" ) )
10735	assertEquals ( 163, branch_conditions. size ( ) )
10736	Assert. isTrue ( bearAndSteadyGene. minimumReplace ( "GAAATAAA" ) == 5 )
10737	assertTrue ( Modifier. isPrivate ( constructor. getModifiers ( ) ) )
10738	Assert. fail ( "Expecting IllegalStateException with specific message" )
10739	assertEquals ( v, v1 )
10740	assertEquals ( "Generator should have been called once", 1, generator. callCount )
10741	assertThat ( infos. length, is ( 0 ) )
10742	Assert. assertEquals ( "Title incorrect", TITLE_TEXT, fieldSet. getTitle ( ). getText ( ) )
10743	assertEquals ( new EntityTuple ( entity ). getNrCols ( ), 2 )
10744	Assert. assertEquals ( "8080", result )
10745	assertEquals ( 200, client. spacesScreen_getSpace ( this. spaceName ). getStatus ( ) )
10746	assertFalse ( credentials. isPresent ( ) )
10747	Assert. assertFalse ( list. isEmpty ( ) )
10748	assertFalse ( tokenizer. next ( testString ) )
10749	assertUrl ( url, "http", "localhost", 80, "/" )
10750	Assert. fail ( )
10751	Assert. assertNull ( loadedModule )
10752	assertEquals ( tagList1, tagList2 )
10753	assertTick ( 2 )
10754	Assert. assertTrue ( MapEqualityTester. areEqual ( m1, m2 ) )
10755	assertNotNull ( stream )
10756	assertEquals ( "encoded/decoded long do not match", value, decoded )
10757	given ( ). header ( "Origin", "http://127.0.0.1:8888" ). when ( ). get ( "tests/gateleen/cors/TestResource" ). then ( ). assertThat ( )
10758	Assert. assertEquals ( "Built StaticRouteCollection is not equals as the expected one.", srCollection, builtSrCollection )
10759	assertEqualsIgnoreWhitespace ( drl, RuleModelDRLPersistenceImpl. getInstance ( ). marshal ( model ) )
10760	assertEquals ( 5, reporter. getSpans ( ). size ( ) )
10761	assertThat ( result. endsWith ( "[inNode=node01,inPort=port01]" ), is ( true ) )
10762	assertEquals ( sqe, convertResult. get ( 0 ) )
10763	assertOut ( expected )
10764	assertEquals ( ints, ints2 )
10765	assertEquals ( timezone, "GMT+3" )
10766	assertThat ( arguments. getResources ( ), hasSize ( 2 ) )
10767	assertToString ( "(cat.bodyWeight - sum(cat.bodyWeight)) * cat.bodyWeight", path. subtract ( path. sum ( ) ). multiply ( path ) )
10768	assertEquals ( Arrays. asList ( "/dest/test1.txt", "/dest/woo/test2.txt" ), walker. paths )
10769	Assert. assertEquals ( 1, provider. getConvenienceSetters ( Mockito. mock ( Column. class ), "java.util.Date" ). size ( ) )
10770	assertEquals ( ProductData. TYPE_INT16, tiffIFD. getBandDataType ( ) )
10771	assertEquals ( getDataBroker ( ), SouthboundProvider. getDb ( ) )
10772	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
10773	assertNotNull ( instance. getBackground ( ) )
10774	assertThat ( RpslObjectFilter. diff ( original, updated ), is ( "@@ -1,3 +1,3 @@\\n" + " mntner:         UPD-MNT\\n" + "-description:    descr\\n" + "+description:    updated\\n" + " mnt-by:         UPD-MNT\\n" ) )
10775	assertEquals ( expResult, result )
10776	assertTrue ( Initialize. checkInit ( fs, sconf, conf ) )
10777	assertEquals ( defaultExtension0. hashCode ( ), defaultExtension1. hashCode ( ) )
10778	assertEquals ( 0, elements. size ( ) )
10779	assertThat ( processedCount. get ( ), is ( 0 ) )
10780	assertEquals ( JodaBeanUtils. collectionTypeTypes ( test, Person. class ), expected )
10781	Assert. assertEquals ( "1:2.5", ret. toString ( ) )
10782	assertTrue ( result. contains ( "CURRENT LOG APPENDER" ) )
10783	assertNull ( testTarget. cutValue ( null ) )
10784	Assert. assertFalse ( testObj. containsWord ( "test" ) )
10785	assertTrue ( unwrapClass. isAssignableFrom ( unwrappedCacheEntry. getClass ( ) ) )
10786	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
10787	assertThat ( connection, instanceOf ( ReplicaSetConnection. class ) )
10788	Assert. assertEquals ( resourceContent, writer. toString ( ) )
10789	assertNotNull ( SyncListPermission. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "ESXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
10790	assertEquals ( buf. toString ( ), "{\\"a\\":\\"aa\\",\\"b\\":{},\\"c\\":\\"cc\\"}" )
10791	assertTrue ( SpriteUtils. isAliasSprite ( sprite1, sprite1 ) )
10792	assertEquals ( object, cache. get ( url, clazz ) )
10793	assertSame ( testResult. getProvisioningPayload ( ), TEST_CUSTOM_PAYLOAD )
10794	assertUnderflow ( ( long ) x + ( long ) y, result )
10795	assertEquals ( noSubst, result )
10796	assertEquals ( "user2", result )
10797	assertEquals ( UIManager. get ( rootPane. getUIClassID ( ) ), rootPane. getUI ( ). getClass ( ). getName ( ) )
10798	assertNull ( parsedArg )
10799	assertEquals ( "testValue", value )
10800	assertEquals ( 2, all. size ( ) )
10801	assertEquals ( Seconds. of ( - 4 ), test12. dividedBy ( - 3 ) )
10802	assertThat ( results. size ( ), is ( 0 ) )
10803	Assert. assertEquals ( polygon, result. getValue ( ) )
10804	assertTrue ( sut. writeList ( val. getBytes ( ) ) )
10805	assertNotEquals ( reply1, reply2 )
10806	assertEquals ( "Empty name provided for insert action!", result. get ( RETURN_RESULT ) )
10807	Assert. assertEquals ( expected, outValue )
10808	Assert. assertEquals ( "San Diego Chapter", PdfTextExtractor. getTextFromPage ( new PdfDocument ( new PdfReader ( new ByteArrayInputStream ( bytes ) ) ). getPage ( 1 ), createRenderListenerForTest ( ) ) )
10809	arrays. assertContains ( description, new double [ 0 ], null )
10810	assertNotNull ( node )
10811	assertEquals ( 0L, runtimeService. createProcessInstanceQuery ( ). or ( ). processInstanceId ( "undefinedId" ). involvedGroups ( Collections. singleton ( "nonInvolvedGroup" ) ). endOr ( ). count ( ) )
10812	assertThat ( rendered, is ( test [ 1 ] ) )
10813	Assert. assertEquals ( rtpPacket. getTimestamp ( ), 0, "Timestamp should be 0." )
10814	assertMockEndpointsSatisfied ( 1, TimeUnit. MINUTES )
10815	assertEquals ( arr, resultArr )
10816	assertEquals ( input. acceptObjectKey ( JsonEvent. STRING ), expected )
10817	assertEquals ( expected, roads )
10818	Assert. assertEquals ( String. class, t. getType ( ) )
10819	assertThat ( TYPE_HANDLER. getResult ( rs, 1 ), nullValue ( ) )
10820	assertArrayEquals ( "Order should be the same.", first. toArray ( ), test. toArray ( ) )
10821	assertNotNull ( user )
10822	assertThat ( e. getName ( ), is ( "jacob" ) )
10823	Assert. assertEquals ( new ProxyPongEntity ( new HostPort ( "127.0.0.1", server. getPort ( ) ) ), pong )
10824	assertEquals ( Jackson2. createRpMapper ( ). readTree ( expectedJson ), Jackson2. createRpMapper ( ). readTree ( Jackson2. serializeWithoutNulls ( rp ) ) )
10825	assertTrue ( call ( dao -> dao. unlinkAsset ( asset ) ) )
10826	assertThat ( result, is ( notNullValue ( ) ) )
10827	assertEquals ( "ad549ec93687843d638c9a712dff0238", computeTMTextUnitMD5 )
10828	Assert. assertEquals ( "MultiRFileOutputFormatter.setCompressionType failed to set compression type", expected, MultiRFileOutputFormatter. getCompressionType ( createMockConfiguration ( ) ) )
10829	assertEquals ( 0, salaboyTasks. size ( ) )
10830	assertNull ( results. getAttribute ( ValidationActionTypeService. VALIDATIONS_ACTION_ATTRIBUTE ) )
10831	assertThatListContainsOneElement ( "foo" )
10832	assertEquals ( "mm", s )
10833	Assert. assertFalse ( InstanceValidationUtil. hasResourceAssigned ( mock. dataAccessor, TEST_CLUSTER, TEST_INSTANCE ) )
10834	assertTrue ( "Failed to match compatible IPv6 subnet.", match )
10835	assertXMLEqual ( expected, actual )
10836	assertTrue ( "Can't retrieve proper Custom Data", areByteArrayValMapsEqual ( inputCustomMetadataMap, outputCustomMetadataMap ) )
10837	assertTrue ( o. description ( ). startsWith ( "(overridden) " + "<j_org_robovm_objc_CustomClassTest$SubClass1: 0x" ) )
10838	assertTrue ( consumerFile. exists ( ) )
10839	assertEquals ( "31.Jul.2014 13:58:14 UncaughtException in thread: main (id 1, priority 5)\\n" + "java.lang.RuntimeException: Second\\n" + "\\tat SecondClass.secondMethod(SecondClass.java:12)\\n" + "\\tat SecondClass.firstMethod(SecondClass.java:10)\\n" + "Caused by: java.lang.RuntimeException: First\\n" + "\\tat FirstClass.secondMethod(FirstClass.java:12)\\n" + "\\tat FirstClass.firstMethod(FirstClass.java:10)\\n", exceptionTextPane. getText ( ). replaceAll ( "\\\\r\\\\n", "\\\\\\n" ) )
10840	assertNotNull ( object )
10841	assertEquals ( expStr, valStr )
10842	assertTrue ( jsonElement. isJsonNull ( ) )
10843	datesWithCustomComparisonStrategy. assertIsInTheFuture ( someInfo ( ), actual )
10844	assertEquals ( 5, record. size ( ) )
10845	Assert. assertEquals ( "Region (RS Index)", command. getLoad ( ). getLevelClass ( ). getLevelTypeString ( ) )
10846	assertEquals ( 1, adapter. getColumnIndex ( id ) )
10847	assertThat ( ( Integer ) prop0. getClass ( ). getMethod ( "getSeedRatio" ). invoke ( prop0 ), is ( 1500 ) )
10848	assertThat ( "response contains a non-empty fullName", StringUtils. isNotBlank ( response. getFullName ( ) ) )
10849	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
10850	assertThat ( results, is ( new String [ ] { "A,B", "C,D" } ) )
10851	Assert. assertEquals ( testName, actual )
10852	assertThat ( fe, notNullValue ( ) )
10853	SetSpanReceiver. assertSpanNamesFound ( expectedSpanNames )
10854	assertTrue ( response. getMetadata ( ). isEmpty ( ) )
10855	Assert. assertNull ( connection. getWarnings ( ) )
10856	assertNotNull ( ConfigUtils. newInstance ( this, "testProperty", NonStaticInnerClass. class ) )
10857	assertThat ( formatterOutput, sameJSONAs ( expected ) )
10858	Assert. assertEquals ( expected, result )
10859	Assert. fail ( "Exception should be thrown" )
10860	assertThat ( actualResult, equalTo ( expectedResponses ) )
10861	assertNotNull ( presenter. listEditor )
10862	Assert. assertEquals ( "docker-compose -f docker-compose.yml down", commands. get ( commands. size ( ) - 1 ) )
10863	assertNotNull ( desc. name ( ) )
10864	assertTrue ( outAny. equal ( inAny ) )
10865	assertThat ( versions, hasItem ( version ) )
10866	assertTrue ( result. getErrors ( ). size ( ) > 0 )
10867	AssertiveInstance. init ( )
10868	assertTrue ( str. contains ( "<http://dbpedia.org/resource/Torpparinm%C3%A4ki> a rdfs:Resource." ) )
10869	assertFalse ( config. isAdvancedClusterConfigSet ( ) )
10870	assertFalse ( newVrp. getJobs ( ). containsKey ( "4" ) )
10871	Assert. assertEquals ( expected, actual )
10872	assertEquals ( expected, actual )
10873	Assert. assertNotNull ( ewd )
10874	Assert. assertEquals ( Redirect. Status. USE_PROXY. intValue ( ), response. status )
10875	Assert. assertEquals ( records. size ( ), 1 )
10876	Assert. assertEquals ( 1, list. size ( ) )
10877	assertTrue ( "Looks like the given xml response is not the expected one", serviceXml. length ( ) > 0 )
10878	assertEquals ( emptyList ( ), res. get ( "foo" ) )
10879	assertEquals ( "{\\"d\\":{\\"EntitySets\\":[" + "\\"Employees\\",\\"Teams\\",\\"Rooms\\",\\"Managers\\",\\"Buildings\\"," + "\\"Container2.Photos\\"]}}", getBody ( response ) )
10880	assertEquals ( expected, result )
10881	assertEquals ( "https://java.example.com/buz/qux", got. toString ( ) )
10882	assertThat ( ChatColor. stripColor ( subject. toString ( ) ), is ( expected. toString ( ) ) )
10883	Assert. assertEquals ( null, new CompareTool ( ). compareByContent ( output, cmp, outputPath, "diff" ) )
10884	assertEquals ( "hola", ( String ) ext. getValue ( null, obj ) )
10885	assertTrue ( bean. isPrimitiveBoolean ( ) )
10886	assertSame ( "columnControl must have icon from ui", UIManager. getIcon ( ColumnControlButton. COLUMN_CONTROL_BUTTON_ICON_KEY ), control. getIcon ( ) )
10887	Assert. assertTrue ( true )
10888	assertNotNull ( VirtualSchemaTO )
10889	assertEquals ( code [ 0 ], ruleManager. get ( id [ 0 ] ) )
10890	assertEquals ( prev, propertiesConfigurationProperties. remove ( key ) )
10891	Assert. assertEquals ( TimeZone. getTimeZone ( "America/New_York" ), config. getTimeZone ( ) )
10892	assertEquals ( TEST_2007_07_15_PONE, t )
10893	assertSuccess ( services. executeOperation ( udpOperation ) )
10894	Assert. assertTrue ( compatibilityResult. isCompatible ( ) )
10895	assertEquals ( "SELECT * WHERE {?user?_c2?_c3. FILTER(?user!=?_c4) }" )
10896	Assert. assertFalse ( testFailed )
10897	assertNull ( "Retrieved privacy policy should be null", retrievedPrivacyPolicy )
10898	assertNull ( "createTransaction should fail at peer selection and return null.", transaction )
10899	Assert. assertEquals ( "null", writer. toString ( ) )
10900	Assert. assertEquals ( new ArrayNode ( ). add ( new IntNode ( 1 ) ). add ( new IntNode ( 2 ) ). add ( new IntNode ( 3 ) ), node )
10901	assertContains ( indels, 100, "G", "GGATCAT" )
10902	assertCallTree ( callTree, callStack. getStackEvents ( ), true )
10903	assertMockEndpointsSatisfied ( )
10904	assertNotNull ( objJPAEdmProperty. getJPAEdmKeyView ( ) )
10905	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"record\\":{\\"url\\":\\"http://sendme.com/tropo\\",\\"beep\\":true,\\"interdigitTimeout\\":5.0,\\"maxTime\\":300.0,\\"asyncUpload\\":true}}]}" )
10906	Assert. assertEquals ( new Partition ( "0-0" ), partition )
10907	assertBridJFaster ( bridJFaster, 2.5 )
10908	assertSame ( error, failingStream. getError ( ) )
10909	assertEquals ( expectedQuery, actualQuery )
10910	tc. assertEquals ( thread, Thread. currentThread ( ). getName ( ) )
10911	assertThat ( result. getRequest ( ). getSession ( false ), nullValue ( ) )
10912	assertTrue ( ex. canBeDividedby3 ( "-15339" ) )
10913	assertEquals ( "Returns the correct Project Page", ProjectsController. SPECIFIC_PROJECT_PAGE, controller. getProjectSpecificPage ( projectId, model, principal ) )
10914	assertThat ( result, is ( prevComponent ) )
10915	assertEquals ( 45, result )
10916	assertEquals ( "simpleList:\\n" + "  - Value1\\n" + "  - Value2\\n" + "  - Value3\\n", root. toString ( ) )
10917	connection. assertBufferEndsWith ( "Option reset-configuration was specified, but no value was given." + Config. getLineSeparator ( ) )
10918	assertNull ( new PojoPropertyUtilsBean. PersistenceStructureServiceProvider ( ). getCollectionItemClass ( notAnOjbObject, "abcd" ) )
10919	assertEquals ( slice1Assert, slice1Test )
10920	assertEquals ( "192.168.0.123/24", event. getIp ( ). getAddress ( ) )
10921	verifier. assertFileNotPresent ( GENERATED_SCHEMA )
10922	assertEquals ( "Expected another type of analyzer", StandardAnalyzer. class, analyzer. getClass ( ) )
10923	assertThat ( subTrans. getName ( ), is ( "consumerSub" ) )
10924	assertTokenStreamContents ( ts, new String [ ] { "vitajt", "vo", "wikip茅di" }, new int [ ] { 0, 8, 11 }, new int [ ] { 7, 10, 20 }, null, new int [ ] { 1, 1, 1 }, null, 20, null, true )
10925	assertEquals ( actual, count )
10926	Assert. assertEquals ( msg, result )
10927	assertEquals ( expectedResult, verifyOscar. invoke ( audit ) )
10928	assertScenario ( )
10929	Assert. assertEquals ( "name", title )
10930	assertEquals ( 2., matrix. getTransportCost ( loc ( 1 ), loc ( 2 ), 0.0, null, null ), 0.1 )
10931	assertEquals ( "a", r )
10932	Assert. assertNotNull ( o )
10933	assertEquals ( "a = '" + SimpleDBAttributeConverter. encode ( 0.01F ) + "' AND (`b.c` = 'baz' OR d IN ('foo','bar')) ORDER BY x", replacedQuery )
10934	assertEquals ( "Updated value", ( Integer ) 100, ref. deref ( ) )
10935	Assert. assertEquals ( expected, actual )
10936	assertEquals ( "myValue", sessionImpl. get ( "test", String. class ) )
10937	assertEquals ( c1, c2 )
10938	Assert. areEqual ( 0, st. getInt ( 1 ), "验证无数据" )
10939	assertEqualsIgnoreWhitespace ( expected, real )
10940	assertNotNull ( baselineData )
10941	Assert. assertNull ( actual )
10942	assertThat ( response. getDomainSearchResults ( ). get ( 0 ). getHandle ( ), equalTo ( "31.12.202.in-addr.arpa" ) )
10943	assertObjectEquals ( "{type:'object',additionalProperties:{type:'object',properties:{f1:{type:'string'}}},description:'org.apache.juneau.jsonschema.JsonSchemaGeneratorTest$BeanMap<java.lang.Integer,org.apache.juneau.jsonschema.JsonSchemaGeneratorTest$SimpleBean>'}", s. getSchema ( BeanMap. class ) )
10944	assertTrue (! signature. equals ( desc. calculateSignature ( ) ) )
10945	assertEquals ( "sessionCount", sessionCount, SessionListener. getSessionCount ( ) )
10946	assertThat ( TestI18n. testMessage. text ( Locale. FRENCH ), is ( "Message de Test" ) )
10947	Assert. assertTrue ( "Major Java Version Check returned value (" + majorJavaVersion + ") less than minimum (5)?", majorJavaVersion >= 5 )
10948	assertTrue ( dd. isFieldValue ( 65, "FOO" ) )
10949	assertSamples ( )
10950	this. assertVerification ( )
10951	assertProcessInstanceCompleted ( processInstance )
10952	Assert. assertEquals ( "First option should be optionA", optionA, SelectListUtil. getFirstOption ( options ) )
10953	assertEquals ( 6, tokens. size ( ) )
10954	assertEquals ( 5.0, FrontUtils. distanceToClosestPoint ( point2, front ), EPSILON )
10955	assertEquals ( Collections. emptyList ( ), toml. getList ( "a", asList ( 3L, 2L, 1L ) ) )
10956	assertEquals ( "Wrong result", expectedDate ( ), conf. getDate ( "date.string", DATE_PATTERN ) )
10957	assertTrue ( Double. isNaN ( percentile. evaluate ( emptyArray ) ) )
10958	assertEquals ( "Unique identifier for the resource. Example: Universal Product Code (UPC), National Stock Number (NSN).", resources. getString ( "CI_Citation.identifier" ) )
10959	assertEquals ( expectedTextResult, new String ( result ) )
10960	assertEquals ( true, true )
10961	assertEquals ( expected, transformed )
10962	assertEquals ( first. not ( ), builder. getValue ( ) )
10963	assertThat ( bomb. state ( ), is ( "kaboom!" ) )
10964	assertNotNull ( colportor. getId ( ) )
10965	Assert. assertEquals ( urlEsperada, nota. getInfoSuplementar ( ). getQrCode ( ) )
10966	assertTrue ( StoreParams. sameValues ( p, pDft ) )
10967	assertEquals ( true, p. getActive ( ) )
10968	assertTrue ( dbCon. contains ( "some_id" ) )
10969	assertTrue ( "Successful permission check was not logged", loggedSuccessfulPermissionCheck ( AUDIT_LOG_FILE, USER ) )
10970	assertEquals ( 0, userList. indexOf ( user ) )
10971	assertFalse ( "Expected a failure but got successful result: " + status, status. isSuccess ( ) )
10972	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. NOT, TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. GTE, v, TERM_FACTORY. getConstantLiteral ( "1", XSD. LONG ) ) ), translation. get ( 0 ) )
10973	mockery. assertIsSatisfied ( )
10974	Assert. assertNull ( new CompareTool ( ). compareXmp ( destinationFolder + fileName, sourceFolder + "cmp_" + fileName, true ) )
10975	assertEquals ( "ThinkTimeStep :, ", result )
10976	Assert. assertEquals ( "��瑁�|��|��瑁�", words )
10977	assertEquals ( cells. size ( ), 2 )
10978	assertEquals ( expResult, result )
10979	assertEquals ( stat, fromJson )
10980	assertEquals ( ConnAckMessage. IDENTIFIER_REJECTED, m_returnCode )
10981	assertNotNull ( string )
10982	assertFalse ( validator. isValid ( resource, MetadataSection. GEOGRAPHIC_COVERAGE_SECTION ) )
10983	assertTrue ( auth. isAuthenticated ( ) )
10984	Assert. assertEquals ( URLEncoder. encode ( src, "utf-8" ), dest )
10985	assertThat ( Modifier. isPrivate ( constructor. getModifiers ( ) ), is ( true ) )
10986	Assert. assertTrue ( "Time lapsed before message was received by client.", mesageReceivedByClient )
10987	assertTrue ( page. asXml ( ). indexOf ( "one" )!= - 1 )
10988	assertFalse ( "Expected StringSchema integer validation failure did not succeed", schema. validate ( integerEntity ) )
10989	assertEquals ( new Color ( 0, 204, 0 ). getRGB ( ), color. getRGB ( ) )
10990	assertThat ( "Locations created with identical paths and different properties must not be equal", locationA1. equals ( locationA2 ), is ( true ) )
10991	assertEquals ( "Failed to generate invocation using literal parameters", "\\"foo\\".toString()", result )
10992	assertThat ( new File ( pactFoder. getAbsoluteFile ( ) + "/" + CONSUMER_NAME + "-" + PROVIDER_NAME + ".json" ). exists ( ), is ( true ) )
10993	assertEquals ( CubeEdge. i, edge )
10994	assertEquals ( expecting, found )
10995	assertEquals ( "" + unitTestTablePojoRead. getFloatdata ( ), "" + unitTestTablePojo. getFloatdata ( ) )
10996	assertEquals ( expResult, result )
10997	assertEquals ( p, p2 )
10998	Assert. assertEquals ( entity. ttl, reloaded. ttl, 1 )
10999	assertThat ( changes. size ( ), is ( 1 ) )
11000	assertTrue ( iterated )
11001	assertTrue ( multiMap. remove ( key, value ) )
11002	assertThat ( messages. toString ( ), messages. size ( ), is ( 0 ) )
11003	assertEquals ( testClass. isUnableToCreateMoreTransactions ( ), true )
11004	assertThat ( xray. getInterfaceMethods ( ). keySet ( ), hasSize ( UnlockedObject. class. getMethods ( ). length ) )
11005	assertEquals ( expResult, result )
11006	Assert. assertTrue ( "User should be logged in!", browser. findElements ( By. xpath ( "//li[contains(text(), 'Welcome')]" ) ). size ( ) > 0 )
11007	assertThat ( versionedIdsOf ( units ), bagEquals ( versionedIdList ( REFERENCED_BUNDLE_V1, OPTIONAL_BUNDLE ) ) )
11008	assertThat ( response. getStatus ( ), is ( 200 ) )
11009	assertTrue ( testResults. getInvoked ( ) )
11010	Assert. assertEquals ( true, term. equals ( term. getConceptReferenceTermMaps ( ). iterator ( ). next ( ). getTermA ( ) ) )
11011	assertNotNull ( resultMap )
11012	assertTrue ( cv. supports ( Date. class ) )
11013	assertEquals ( 0.0, score, 0 )
11014	assertEquals ( 0, found )
11015	assertEquals ( 10, toTest. deserialize ( ) )
11016	Assert. assertNull ( result )
11017	assertEquals ( 10 * threads. length, AzureMetricsTestUtil. getCurrentBytesRead ( instrumentation ) )
11018	assertThat ( driver. findElement ( MobileBy. xpath ( "//UIAProgressIndicator[@name='default_progress_bar']" ) ). getAttribute ( "value" ), is ( "100%" ) )
11019	assertNotNull ( nestedAnnotation )
11020	AssertAnnotations. assertToken ( tokens, select ( jcas, Token. class ) )
11021	assertEquals ( 654321, ws. getReceiveBufferSize ( ) )
11022	assertFalse ( outputGraphExecutor. equals ( nullOutput ) )
11023	Assert. assertEquals ( 200, ex. getContext ( ). getProperty ( HttpContextMapper. HTTP_RESPONSE_STATUS ). getValue ( ) )
11024	assertEquals ( 1, jobs. size ( ) )
11025	assertTrue ( "isDisplayed should return true if at least a number of elements are displayed as" + " specified to be required, with any number of non-displayed elements.", element. isDisplayed ( ) )
11026	assertEquals ( expected, getString ( TestElementImpl. example ( "vm1.g1", "e1" ) ) )
11027	assertEquals ( Sets. newHashSet ( testWorkflow1v1, testWorkflowPhylogenomics ), workflows )
11028	assertArrayEquals ( TEObjectUtil. TE_LSP_ASSOCIATION_2, ByteArray. getAllBytes ( output ) )
11029	assertArrayEquals ( Doubles. toArray ( huginProbabilities ), Doubles. toArray ( amidstProbabilities ), 0.02 )
11030	assertEquals ( "DSLAM WAN Allocation", orgl. getOrg ( "70.46.123.145" ) )
11031	assertTrue ( smsSettings. isConfigured ( ) )
11032	assertThat ( currentPage, is ( not ( nullValue ( ) ) ) )
11033	Assert. assertEquals ( 11, result )
11034	Assert. assertEquals ( ChineseRemainders. ChineseRemainders ( prime1, prime2, remainder1, remainder2 ), ChineseRemainders. ChineseRemainders ( magic, remainder1, remainder2 ) )
11035	assertEquals ( "The column count was incorrect", 3, listParser. getColumnCount ( ) )
11036	assertEquals ( "aHR0cDovL2xldmVsdXBsdW5jaC5jb20vZXhhbXBsZXMvP3Bhcm09VGhpcyBwYXJhbWV0ZXI=", encodedURL )
11037	Assert. assertEquals ( infoList. size ( ), 0 )
11038	assertEquals ( null, future. get ( ) )
11039	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( query, expectedQuery ) )
11040	Assert. assertTrue ( users. size ( ) >= 0 )
11041	Assert. assertEquals ( "Unexpected coverage: ", 2d / 3d, best. getCoverage ( ), 0.001 )
11042	assertTrue ( permissionEvaluator. hasProjectPermission ( authentication, "project", Permission. EDIT_PAGE ) )
11043	assertThat ( Functions. mapToQuery ( map, null ), is ( "" ) )
11044	context. assertEquals ( new JsonObject ( input ), JoltTransformer. transform ( input, identitySpec ). result ( ), "the output is expected to be equal to the input" )
11045	assertSame ( base. abs ( ), base )
11046	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
11047	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
11048	assertEquals ( result, new TreeMap < Date, List < Activity > > ( ) )
11049	assertTrue ( userCanDeleteBranch )
11050	assertTrue ( timeline. getFetchCount ( ) > 0 )
11051	assertEquals ( "Select scripts are not the same", expectedMergeSimple ( ), testDialect. convertStatementToSQL ( stmt ) )
11052	assertEquals ( "1:xxxy;\\n", found )
11053	assertEquals ( expected, bos. toString ( ) )
11054	org. junit. Assert. assertEquals ( expected, tHandler. getLastRecord ( ). getThrown ( ) )
11055	assertThat ( outputFile. length ( ), is ( 62L ) )
11056	assertNumEquals ( 3.8d, mdd. calculate ( series, tradingRecord ) )
11057	Assert. assertEquals ( 0, violations. size ( ) )
11058	assertEquals ( "{ \\"hello\\" : [1, 2] }", writer. toString ( ) )
11059	assertNotNull ( key )
11060	assertRoundtrip ( input )
11061	assertEquals ( 0., violation, 0.01 )
11062	assertEquals ( Boolean. valueOf ( true ), result )
11063	assertNotNull ( sKey, aCSS )
11064	assertTrue ( "Should get valid parser", parser!= null )
11065	assertFalse ( rule. shouldProceed ( userSession, request ) )
11066	assertEquals ( displayer. isRefreshOn ( ), true )
11067	assertAnnotations ( 2, Quantity. class, new TestQuantity ( 0, "400 square millimetres", 400, "mm^2", 400 * Area. MM2_TO_M2, "m^2", "area" ), new TestQuantity ( 1, "400mm^2", 400, "mm^2", 400 * Area. MM2_TO_M2, "m^2", "area" ) )
11068	assertTrue ( true )
11069	Assert. assertFalse ( "multipart/byteranges". equalsIgnoreCase ( elt. getName ( ) ) )
11070	assertEquals ( "id", id )
11071	assertEquals ( 0, manager. getAll ( ). size ( ) )
11072	assertFalse ( status. equals ( HardActivityConstraint. ConstraintsStatus. FULFILLED ) )
11073	assertNull ( lookUpManager. lookUpWorkingObjectOrReturnNull ( object ) )
11074	assertEquals ( l1, l2 )
11075	approver. assertApproved ( data, Formatters. table ( ) )
11076	assertEquals ( attributes, repositoryRecord. getCurrent ( ). getAttributes ( ) )
11077	assertEquals ( expected, sanitized )
11078	assertTrue ( res. toString ( ). contains ( "HEALTHY" ) )
11079	assertEquals ( "Expected response not seen.", 404, response. getStatus ( ) )
11080	assertThat ( ( String ) Whitebox. invokeMethod ( target, "getDestinationCompId", path ), is ( "network1" ) )
11081	assertEquals ( DefaultSystemUnderDevelopment. class. getName ( ), sut. fixtureFactoryCmdLineOption ( ) )
11082	assertEquals ( "first", Iterables. getOnlyElement ( sink1. getOutputs ( ) ) )
11083	assertNull ( person2 )
11084	assertNotNull ( "IDPSSODescriptor is not null", sp )
11085	context. assertIsSatisfied ( )
11086	Assert. assertEquals ( "private, max-age=600", response. headers. get ( "Cache-Control" ) )
11087	assertEquals ( "Java 1.5", os )
11088	assertTrue ( i + ", " + src. getAbsolutePath ( ), src. delete ( ) )
11089	assertEquals ( 10L, FutureUtils. result ( target ). longValue ( ) )
11090	Assert. assertTrue ( pss. toString ( ). contains ( "test" ) )
11091	assertThat ( result, is ( "((item.lastmodified:[" + escapedFromDate ( DATE ) + " TO *])) AND ((item.collections:" + SET + "))" ) )
11092	Assert. assertEquals ( "should have updated info", "", updatedUser. getInfo ( ) )
11093	assertTrue ( AcceptanceTestUtil. isInterested ( peerComponent, remoteWorkerOID. getServiceID ( ), remoteWorkerMonitorOD. getDeploymentID ( ) ) )
11094	assertEquals ( 1.2e22, ( ( DoubleValue ) ( ( SelectExpressionItem ) ( ( PlainSelect ) select. getSelectBody ( ) ). getSelectItems ( ). get ( 0 ) ). getExpression ( ) ). getValue ( ), 0 )
11095	assertTrue ( "Key not found", nested. containsKey ( "address.private" ) )
11096	assertEquals ( oauthClientId, answer. getReturnVal ( ) )
11097	assertEquals ( true, ( allforums. size ( ) > 0 ) )
11098	assertTrue ( startState )
11099	assertThat ( res. toString ( ), is ( equalTo ( "my last response transactionId is: 123456789" ) ) )
11100	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + destName + ".pdf", sourceFolder + "cmp_" + name + ".pdf", destinationFolder, "diff_" ) )
11101	assertEquals ( "", result )
11102	assertFalse ( iter. hasNext ( ) )
11103	assertThat ( partitionKeyValue. toJson ( ), equalTo ( mapper. writeValueAsString ( Collections. singletonList ( "Seattle" ) ) ) )
11104	assertEquals ( originalFetchCount, timeline. getFetchCount ( ) )
11105	assertEquals ( serverAddress + pid, page1. getTitleText ( ) )
11106	Assert. assertEquals ( "http://localhost" + SonarNavigator. RESOURCE_PATH + "123", url )
11107	assertThat ( "missing owner detected", validation. hasErrorAbout ( "no", "owner" ) )
11108	assertEquals ( testSet, monitorNames )
11109	assertThat ( findFeature ( features, "ChangeAvailability" ), is ( instanceOf ( ChangeAvailabilityFeature. class ) ) )
11110	assertTrue ( "Version Parameter missing", search. getURI ( ElasticsearchVersion. UNKNOWN ). contains ( "version=true" ) )
11111	assertReplacement ( input, regex, replacement, lookBehind, capacityCharBuf, expectedOutput, flags )
11112	assertEquals ( V8Value. V8_OBJECT, type )
11113	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
11114	Assert. assertTrue ( isValid, "Poll with empty title and empty items must be valid" )
11115	assertEquals ( expected, toJSON ( series ) )
11116	assertEquals ( "3 settimane fa", t. format ( new Date ( 0 ) ) )
11117	assertThat ( request. getTargetClassExternal ( ), equalTo ( TestClass. class ) )
11118	assertEquals ( null, params. getString ( new Parameter ( "a.k" ), null ) )
11119	assertThat ( o, nullValue ( ) )
11120	Assert. assertEquals ( entity. publicValue, actualValue )
11121	Assert. assertEquals ( EXISTS, result )
11122	Assert. assertTrue ( "claims empty topics should be merged",! MergeUtils. shouldMerge ( t1, t2 ) )
11123	Assert. assertNull ( cu. getImports ( ) )
11124	Assert. assertNull ( new CompareTool ( ). compareByContent ( filename, sourceFolder + "cmp_copyFields01.pdf", destinationFolder, "diff_" ) )
11125	Assert. assertTrue ( ( Double ) accumulations. getSubOutput ( averageTag, outputValues ) == 5.5 )
11126	assertTrue ( Arrays. equals ( data, ( boolean [ ] ) deserialize. readObject ( boolean [ ]. class ) ) )
11127	assertions. hasSize ( size )
11128	assertEquals ( expected, actual )
11129	assertEquals ( expResult, result )
11130	Assert. assertNotNull ( myBean )
11131	assertThat ( errors, hasFieldErrors ( "givenName", "GivenName.invalid" ) )
11132	Assert. assertEquals ( 0, stat )
11133	Assert. assertNotNull ( reconnectCohort )
11134	Assert. assertEquals ( 1, new QueryRunner ( this. em ( ). unwrap ( DataSource. class ) ). query ( "SELECT COUNT(*) FROM Foo", new SingleValueHandler < Number > ( ) ). intValue ( ) )
11135	assertEquals ( false, new File ( pathOnFileSystem ). exists ( ) )
11136	assertEquals ( 2, table. getById ( "fooId", Td. class ). getColspan ( ) )
11137	assertLongArrayEquals ( expected, toLongArray ( splits ) )
11138	assertEquals ( "Must be Equal", interfaceTypeClass, InterfaceTypeInternal. class )
11139	Assert. assertEquals ( 3, tables. size ( ) )
11140	assertEquals ( 1, rowCount )
11141	Assert. assertEquals ( 1, tp. getArtifacts ( ). size ( ) )
11142	assertEquals ( "This isn't a strict java.lang.Object: aa", b. nonObject ( "aa" ) )
11143	assertGameOver ( )
11144	assertThat ( getInst ( ). findNode ( "" ), equalTo ( masterNode ) )
11145	assertThat ( spanBuilder, is ( instanceOf ( NoopSpanBuilder. class ) ) )
11146	assertFalse ( isAuthenticated )
11147	assertFalse ( voter. voteMatch ( affiliation, organization ) )
11148	Assert. assertTrue ( queueResponse. isOk ( ) )
11149	assertEquals ( 20.0, instance. inclusiveHypervolume ( ind ), 0.0 )
11150	assertEquals ( null, metadata. getLanguage ( ) )
11151	Assert. assertTrue ( comparator. compare ( cell2, cell1 ) == 1 )
11152	assertEquals ( expResult, result )
11153	assertEquals ( expected, actual )
11154	assertThat ( list. size ( ), is ( 3 ) )
11155	assertEquals ( expectedResult, verifyTomcat. invoke ( audit ) )
11156	Assert. assertEquals ( "SELECT * WHERE { <http://example.org> <http://predicate> \\"A multi\\\\nline string\\". }", query. toString ( ) )
11157	Assert. assertEquals ( 0, prefixes. size ( ) )
11158	assertTrue ( cut. getAttributes ( ). isEmpty ( ) )
11159	assertEquals ( expectedIds, Ids )
11160	assertServiceResource ( resource )
11161	Assert. assertEquals ( icmsSetado, icms. getIcmssn102 ( ) )
11162	assertContains ( e. getMessage ( ), "'id'" )
11163	assertEquals ( "a-z", bitSet. characters ( ) )
11164	Assert. assertEquals ( false, objectSet. isEmpty ( ) )
11165	assertThat ( browsers. stream ( ). map ( b -> ( WebDriverBrowser ) b ). map ( WebDriverBrowser :: getWrappedDriver ). map ( TargetedWebDriver :: getWebDriverTarget ). collect ( Collectors. toList ( ) ), containsInAnyOrder ( WebDriverTargets. window ( "window1" ), WebDriverTargets. window ( "window2" ) ) )
11166	assertNotNull ( photoRepository )
11167	Assert. isTrue ( true )
11168	assertEquals ( 0, ShadowToast. shownToastCount ( ) )
11169	assertEquals ( expected, ListUtil. generateCommaSeparatedString ( actual ) )
11170	assertEquals ( profile, copy )
11171	assertEquals ( "Select with order by", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
11172	Assert. assertEquals ( 0, analyser. getWaitingTimeAtActivity ( route. getStart ( ), route ), 0.01 )
11173	Assert. assertEquals ( "center", cell. getHorizontalAlign ( ) )
11174	assertThatSql ( query, is ( "SELECT nodes.col1, nodes.col2 FROM table AS nodes" ) )
11175	assertEquals ( 5.3, result, 0.00001 )
11176	assertThat ( end, is ( PlainDate. of ( 2011, Month. DECEMBER, 31 ). at ( PlainTime. midnightAtStartOfDay ( ) ). inTimezone ( ZonalOffset. ofHours ( AHEAD_OF_UTC, 14 ) ) ) )
11177	repository. findByFirstnameAndLastname ( Single. just ( "Walter" ), "White" ). test ( ). awaitCount ( 1 ). assertNoErrors ( )
11178	Assert. assertEquals ( h2. get ( "key" ), h1. get ( "key" ) )
11179	Assert. assertEquals ( new DoubleNode ( 3 ), result )
11180	assertTrue ( "Path for added node is wrong: actual=" + listener. getEvents ( ). get ( 0 ). getPath ( ) + ", expected=" + addedNode. getPath ( ), containsPath ( listener, addedNode. getPath ( ) ) )
11181	assertTrue ( span. asText ( ). contains ( "NullPointerException" ) )
11182	assertTrue ( tocFile. createNewFile ( ) )
11183	assertTrue ( _receiver. toString ( ), _receiver. isEventHandled ( ) )
11184	assertEquals ( vr. getValidity ( ), Validity. VALID )
11185	assertEquals ( 1, testResults. getDeliveries ( ) )
11186	Assert. assertEquals ( 2, statusTuples. size ( ) )
11187	assertEquals ( expResult, result )
11188	assertEquals ( expectedOutput, actualOutput )
11189	Assert. assertEquals ( 0, terms. size ( ) )
11190	assertNull ( eventScanConfig )
11191	assertTrue ( "Object was determined not to be local", localServer. test182Op ( ) )
11192	assertViolationsThat ( report. getValidationViolations ( ), equalTo ( "Root definition has documentation with missing title" ) )
11193	assertTrue ( nodes. split ( "\\n" ). length > 0 )
11194	assertEquals ( 0, eventSubscriptions. size ( ) )
11195	assertThat ( issues, is ( empty ( ) ) )
11196	assertEquals ( 5.2, tsne. mean ( X [ 3 ] ), epsilon )
11197	assertNotNull ( formattedMessage )
11198	assertSomeDatas ( expected, actual )
11199	assertEquals ( outContent. toString ( ). toLowerCase ( ), message. toLowerCase ( ) )
11200	assertEqualsIgnoreWhitespace ( expectedDRL, RuleModelDRLPersistenceImpl. getInstance ( ). marshal ( model ) )
11201	assertEquals ( data, MustacheEngineBuilder. newBuilder ( ). build ( ). compileMustache ( "myTemplateName", "{{this}}" ). render ( data ) )
11202	assertNull ( data )
11203	Assert. assertEquals ( "ziptest.zip", zipfile. getName ( ) )
11204	Assert. fail ( "TimeoutException expected" )
11205	assertThat ( subject. getMaxSerial ( ), is ( 1 ) )
11206	Assert. assertEquals ( "d16bb375433ad383169f911afdf45e209eabfcf047ba1faebdd8f6a0b39e0a32", result. toStringUtf8 ( ) )
11207	assertEquals ( 8, extension. getHandlersForExceptionType ( IllegalArgumentException. class, bm, qualifiers, TraversalMode. DEPTH_FIRST ). size ( ) )
11208	Assert. assertEquals ( newLastModificationTimeMs, inodeDirectory. getLastModificationTimeMs ( ) )
11209	assertEquals ( expResult, result )
11210	assertEquals ( "hello world", extractedString )
11211	assertTrue ( "testCanEditBooleanAuth2_useInheritance", collectionService. canEditBoolean ( context, collection, true ) )
11212	assertEquals ( 2, cache. listPrivileges ( null, null, null, new Server ( "server1" ) ). size ( ) )
11213	assertEquals ( expected, actual )
11214	assertNull ( cli. getState ( ). getProxyCredentials ( AuthScope. ANY ) )
11215	assertEquals ( "package org.kissmda.test.junit;\\n" + "import java.util.Collection;\\n" + "import java.util.List;\\n" + "public abstract class ClazzName extends Collection {\\n" + "  public abstract List<Integer> asList(  Collection<Integer> values);\\n}", cu. toString ( ). trim ( ) )
11216	assertThat ( localization. getLocale ( ), equalTo ( PT_BR ) )
11217	assertEquals ( false, attributes. isOther ( ) )
11218	assertThat ( result, is ( notNullValue ( ) ) )
11219	assertTrue ( latch. await ( 4, SECONDS ) )
11220	assertEquals ( f1, f2 )
11221	assertEquals ( expecteds, actuals )
11222	assertTrue ( "InetSocketAddress should be cached", inetSocketAddress1 == inetSocketAddress2 )
11223	assertTrue ( conf. getClassLoader ( ) instanceof Fake_ClassLoader )
11224	assertEquals ( packet, p )
11225	assertEquals ( "25", empty. getCommand ( ) )
11226	assertEquals ( ForwardSecrecyBlackList. RSA_WITH_RC4_128_MD5, cipher )
11227	assertEquals ( "Hello there^^", ResponseBodyInterpolator. interpolate ( "Hello there^^", req ) )
11228	assertArrayEquals ( expected, result )
11229	assertEquals ( "file://localhost/etc/password", one. absUrl ( "href" ) )
11230	assertEquals ( "update on the proxy should work ", proxy. getCity ( ), address2. getCity ( ) )
11231	assertThat ( domain. getValidationFailures ( resourceLookup ), empty ( ) )
11232	Assert. assertEquals ( stop, receivedStop )
11233	assertFalse ( jre6Notifier. isSupported ( ) )
11234	Assert. assertNotNull ( result )
11235	assertNotNull ( "Previous step failed", uri_userInstance )
11236	assertEquals ( expected, actual )
11237	assertEquals ( Proxy. NO_PROXY, result. get ( 0 ) )
11238	assertNull ( result )
11239	assertEquals ( expected, out )
11240	assertEquals ( expected, actual )
11241	assertThat ( mFileHelper. mImageFile, is ( nullValue ( ) ) )
11242	assertNull ( store. pull ( key2 ) )
11243	assertThat ( matcher. matches ( "{\\"number\\":10}" ), is ( false ) )
11244	assertEquals ( true, multiServer. getNextStorage ( )!= multiServer. getNextStorage ( ) )
11245	assertThat (! duration. isNegative ( ), equalTo ( true ) )
11246	assertEquals ( "* :123: Arthur Dent\\n", toWikiText ( note ) )
11247	assertEquals ( expResult, result )
11248	assertEquals ( expectedPort, actualPort )
11249	Assert. assertTrue ( "expecting the false positive rate to be lower than 3%", falsePositiveRate < 0.03d )
11250	assertEquals ( "This is the value", cfg. skipsInlineComments ( ) )
11251	assertThat ( e. getCause ( ), Matchers. instanceOf ( ArangoDBException. class ) )
11252	assertNull ( start. getErrorResponseBody ( ) )
11253	assertEquals ( content, "This file is here\\nto test resource loading." )
11254	Assert. assertEquals ( "Unknown destination queue", MicroPipelineValidationResult. UNKNOWN_SOURCE_QUEUE, new MicroPipelineValidator ( ). validateComponent ( cfg, queues, components ) )
11255	assertEquals ( 0, inclusionTerms. size ( ) )
11256	assertEquals ( logs. get ( i ), message )
11257	Assert. assertEquals ( expectedResult, resultString )
11258	assertThat ( DateInterval. parseISO ( "20120101/20140214" ), is ( expected ) )
11259	assertions. contains ( values )
11260	assertEquals ( 2, result. size ( ) )
11261	assertThat ( tracker. getAll ( ) [ firstElementOfArray ], is ( itemTaskEdited ) )
11262	assertTrue ( f. getRecordWriter ( new MockTaskAttemptContext ( ) ) instanceof MongoAggWriter )
11263	assertEquals ( 1, ksession. fireAllRules ( ) )
11264	Assert. assertTrue ( unicodeString. equals ( unicodeString ) )
11265	assertThat ( output, containsString ( "FHIR resource created:" ) )
11266	assertEquals ( "5", exec. getNumMapTasks ( ) )
11267	assertTrue ( fixture. hasSubscriptionId ( ) )
11268	assertParseOneDoc ( editor, "DOC(0): ", "  KEY(0): world:", "    KEY(2): europe:", "      KEY(4): france:", "        RAW(6): cheese", "      KEY(4): belgium:", "        RAW(4): beer", "    KEY(2): canada:", "      KEY(4): montreal: poutine", "      KEY(4): vancouver:", "        RAW(6): salmon", "  KEY(0): moon:", "    KEY(2): moonbase-alfa:", "      RAW(4): moonstone", "      RAW(-1): " )
11269	Assert. assertArrayEquals ( "original array not equals compress/decompressed array", result, bytes )
11270	assertThat ( status, equalTo ( GGDataSource. Status. OK ) )
11271	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "xfdfWithFieldsWithValue.pdf", sourceFolder + "cmp_xfdfWithFieldsWithValue.pdf", destinationFolder, "diff_" ) )
11272	assertEquals ( "XQuery: " + query, "true", result. getResource ( 0 ). getContent ( ). toString ( ) )
11273	assertThat ( count, is ( 1L ) )
11274	assertEquals ( 4, possibleOutcomes. size ( ) )
11275	assertEquals ( expectedExperimentContents, testExperimentResults. getExperimentContents ( ) )
11276	assertNotNull ( result )
11277	assertForbiddenResponse ( response )
11278	assertTrue ( true )
11279	assertArrayEquals ( expecteds, actuals, delta )
11280	assertEquals ( expected, uri. toString ( ) )
11281	assertXMLIdentical ( new Diff ( result, combineWithIdKey ( recessive, dominant ) ), true )
11282	assertEquals ( lines - 1, results )
11283	assertTrue ( ndefMessage. getNdefRecords ( ). length == 1 )
11284	assertThatNothingHappened ( jobExecution, lastCreatedJobId, 1 )
11285	assertEquals ( "Wrong result", value, interpolator. interpolate ( "${" + TEST_NAME + "}" ) )
11286	assertTrue ( all. size ( ) > 0 )
11287	Assert. assertTrue ( dependences. isEmpty ( ) )
11288	assertThat ( builder. toString ( ), equalTo ( "[a RED shape][a BLACK shape][a YELLOW shape]" ) )
11289	assertMatch ( strategyConfiguration, strategy )
11290	assertFalse ( node. equals ( "abc" ) )
11291	assertThat ( testResponse, is ( expectedResponse ) )
11292	assertTrue ( o. description ( ). startsWith ( "(overridden) " + "<j_org_robovm_objc_CustomClassTest$SubClass1: 0x" ) )
11293	assertThat ( response, containsString ( escapedFilename ) )
11294	assertTrue ( follower. isLeader ( ) )
11295	assertEquals ( BAD_REQUEST_400, response. getStatus ( ) )
11296	assertEquals ( 5, calculator. getResult ( ) )
11297	assertEquals ( response. asString ( ), SUCCESS, response. get ( OUTCOME ). asString ( ) )
11298	assertXMLIdentical ( new Diff ( result, combineWithIdKey ( recessive, dominant ) ), true )
11299	assertNull ( res )
11300	assertEquals ( "{key:value,key2:value2}", target. toString ( ) )
11301	assertThat ( resultedQuery, is ( expectedQuery ) )
11302	assertNotNull ( "Clinical data is null for ID", clinicalData )
11303	Assert. assertTrue ( alertMessage. contains ( String. format ( "Location %s for cluster %s must exist.", nonExistent, sourceCluster. getName ( ) ) ), "Alert message should match to expected." )
11304	assertEquals ( new Rectangle ( 11, 0, 10, 100 ), pos )
11305	assertTrue ( r1 instanceof PublicCloneable )
11306	assertTrue ( raises )
11307	assertEquals ( "cast('2003-12-31' AS datetime)", helpGetString ( func ) )
11308	assertEquals ( 200, r. getStatus ( ) )
11309	assertEquals ( "select a LIKE_REGEX ", result )
11310	assertEquals ( 1, in. getByteCount ( ), 0L )
11311	Assert. assertNotNull ( book. getId ( ) )
11312	Assert. assertNotNull ( testSession )
11313	assertArrayEquals ( new long [ ] { 7 }, result )
11314	Assert. assertEquals ( 5, vertices. size ( ) )
11315	assertTrue ( map. containsKey ( JSR166TestCase. six ) )
11316	assertEquals ( false, config. isCacheGzippedContent ( ) )
11317	assertOut ( "/**\\n * @private\\n * @type {boolean}\\n */\\nRoyaleTest_A.prototype.foo" )
11318	assertFalse ( buildIds. isEmpty ( ) )
11319	Assert. assertEquals ( "There is no item here.", responseResult. getText ( ) )
11320	assertNull ( mapValue. getValue ( ) )
11321	assertThat ( "getValue", node. getValue ( ), is ( 2147483647 ) )
11322	assertThat ( lookedUpRelationship, is ( relationship1 ) )
11323	assertEquals ( "foo", classifier. classify ( new Foo ( ) ) )
11324	assertEquals ( expecting, found )
11325	assertEquals ( Result. PASS, type. apply ( item ) )
11326	assertEquals ( 1, testList. size ( ) )
11327	Assert. assertNotNull ( selfInjected )
11328	assertEquals ( "3 泻爷薪 斜冶��薪", t. format ( new Date ( 0 ) ) )
11329	assertEquals ( sampleIn. removeCastToSameType ( oi ), sampleOut. removeCastToSameType ( oi ) )
11330	assertThat ( ( ( CapabilityEvent ) ebRec. getAllValues ( ). get ( 0 ) ). getReference ( ). context ( ). properties ( ). get ( "foo" ), is ( "bar" ) )
11331	Assert. assertEquals ( otfLength, reparsedFont. header. totalSfntSize )
11332	assertMockEndpointsSatisfied ( )
11333	assertEquals ( 200, page. getWebResponse ( ). getStatusCode ( ) )
11334	assertThrows ( InvalidMethodSignatureException. class, ( ) -> new JavaParameterTypeDefinition ( "", "(.*)", method, false, false, false, lookup ) )
11335	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
11336	assertEquals ( expected, sb. toString ( ) )
11337	assertTrue ( "Returned object should be a SynchronizedBag.", bag instanceof SynchronizedBag )
11338	assertThat ( target. onConnectionChangedAddedPre ( msg ), is ( false ) )
11339	assertThat ( res. toString ( ), is ( equalTo ( "My friend Rokko is 30 years old." ) ) )
11340	Assert. assertTrue ( ( Boolean ) person. getFieldValues ( "refDiff" ). get ( 0 ) )
11341	assertDepth ( "addLevel", callTree, expectResult )
11342	assertThat ( "UserId of event is not equal to userId of session", listener. getEvents ( ). get ( 0 ). getUserID ( ), is ( USER_ID ) )
11343	assertTrue ( unitOfWork. contains ( Parent. class, 1 ) )
11344	assertFalse ( validator. isValid ( resource, MetadataSection. BASIC_SECTION ) )
11345	assertEquals ( expectedAst, ast. dump ( "" ) )
11346	assertNotNull ( workflowSource )
11347	assertThat ( condition. isSatisfied ( ), is ( false ) )
11348	assertEquals ( "high", EvaluatorUtil. decode ( prediction ) )
11349	assertEquals ( 2, java. lang. reflect. Array. get ( a1. getArray ( 1, 1 ), 0 ) )
11350	assertEquals ( 0, targets. size ( ) )
11351	assertNotNull ( result )
11352	BigDecimalAssert. assertSameValue ( "ctor", BigDecimal. TEN, sum. getTotal ( ) )
11353	assertTrue ( pregame. before ( superBowlXLV ) )
11354	assertNotNull ( result )
11355	assertEquals ( expResult, result )
11356	assertTrue ( connectFuture. isConnected ( ) )
11357	assertEquals ( "SS:1234", x. toString ( ) )
11358	assertTrue ( uuid. length ( ) == urlToken. length ( ) )
11359	Assert. assertEquals ( str, dataString )
11360	assertEquals ( 3, x )
11361	Assert. assertEquals ( parentKey, key. getParent ( ) )
11362	Assert. fail ( "testCreateSymlink - expected exception is not thrown" )
11363	Assert. assertFalse ( translateService. isTranslated ( field ) )
11364	assertEquals ( "a!,b!,c,xyz", sw. toString ( ) )
11365	assertArrayEquals ( expectedBytes, serializer. serialize ( ) )
11366	assertEquals ( 6, s )
11367	assertThat ( ontologyIds, contains ( rootOntologyId ) )
11368	assertEquals ( "http://localhost:9990/", httpEndpoint )
11369	assertEquals ( new String ( result ), "test parsed" )
11370	Assert. assertNotNull ( response )
11371	assertFalse ( problem )
11372	Assert. assertEquals ( allergies. getAllergyStatus ( ), Allergies. NO_KNOWN_ALLERGIES )
11373	assertTrue ( text. contains ( "Seam Reports Rocks" ) )
11374	assertEquals ( expectedValues, DurationsConverter. convertFromNanos ( input, MINUTES ) )
11375	assertEquals ( "Test15", new NameBasedMessageFormat ( "Test{integer}" ). format ( parameters ) )
11376	given ( ). header ( "x-queue", "gateleen-test" ). body ( "{ \\"foo\\": \\"bar2\\" }" ). when ( ). put ( "res" ). then ( ). assertThat ( )
11377	Assert. assertTrue ( count == 0 || count == runs )
11378	assertSame ( os, XenqttUtil. validateNotEmpty ( "os", os ) )
11379	assertThat ( currentSessionManager. getMeasurementStreams ( ), hasItem ( expected ) )
11380	assertNull ( outbound ( writeTarget ) )
11381	assertTrue ( target_. equals ( "Donald Trump" ) )
11382	assertEquals ( domTreeEntry, domRpcEntry )
11383	Assert. assertEquals ( expected, actual )
11384	assertEquals ( "0gCtTYQAxqCKhIE0sltgx7UgHkAs10vrpuYE7xpRBnE=", signer. sign ( request, params ) )
11385	assertEquals ( "Incorrect string generated", String. format ( "%n    - Set bar to foo from ExampleData and OtherTable, joined on x is y, where z is 1" ), HumanReadableStatementHelper. generateAliasedFieldAssignmentString ( field ) )
11386	assertDateEquals ( new DateTime ( 2013, 5, 20, 15, 0, 0, 0 ), date )
11387	Assert. assertNotNull ( generate )
11388	assertEquals ( "SELECT @type as alias FROM C", q. toString ( ) )
11389	assertAllCommandsUsed ( )
11390	assertThat ( allUsedBindings ( result ), containsInAnyOrder ( "$p" ) )
11391	assertNull ( fileOperationMap. getOperation ( operation. getPnfsId ( ) ) )
11392	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
11393	assertEquals ( "Number of Variant row don't match!!!", VCF_VAR_LINE_COUNT, cnt )
11394	assertEquals ( expectedQuery, query )
11395	assertThat ( result, is ( true ) )
11396	Assert. assertTrue ( pattern2. matcher ( employee. getName ( ) ). matches ( ) )
11397	assertThat ( actual, is ( Key. create ( CounterShardData. class, TEST_COUNTER_NAME + "-1" ) ) )
11398	Assert. assertFalse ( rawClass. isArray ( ) )
11399	assertNull ( query. singleResult ( ) )
11400	Assert. assertEquals ( expected, tested. listRequestInit ( ) )
11401	assertSame ( "requestsCount", 1, ejbCounter. getRequestsCount ( ) )
11402	assertEquals ( msg, client2MessageReceived. get ( ) )
11403	assertEquals ( OTHER_GRAPHITE_IPPORT, backendAlarm. getGraphiteBaseUrl ( ) )
11404	Assert. assertEquals ( TestUtil. expectedXor ( bytes ), streamingXor ( bytes, 0, bytes. length ). getXorHex ( ) )
11405	assertEquals ( actualMimeType, expectedMimeType )
11406	assertEquals ( 3.0, costs, 0.01 )
11407	AssertionUtils. multiAssertEquals ( createAsDocument11, response7. getResponseObject ( ) )
11408	assertThat ( changeList. getChanges ( ), is ( empty ( ) ) )
11409	Assert. assertTrue ( returnedVisibilities. isEmpty ( ) )
11410	assertNotSupported ( result )
11411	assertEquals ( "numhits is wrong", 1104, res. getNumhits ( ). intValue ( ) )
11412	assertThat ( actual, is ( "Object Resolvable" ) )
11413	assertThat ( context. get ( "FOO" ), equalTo ( "BAR" ) )
11414	assertThat ( thrown, instanceOf ( MaximumTimeLimitExceededException. class ) )
11415	assertEquals ( 2, map. size ( ) )
11416	assertThat ( result, is ( new String [ ] [ ] { { "Hello\\nworld!" } } ) )
11417	Assert. assertEquals ( r. getColumnCount ( ), count )
11418	assertTrue ( syn instanceof JavassistMethodSynthesizer )
11419	Assert. assertEquals ( "Response should be bad request", Response. Status. BAD_REQUEST. getStatusCode ( ), argument. getValue ( ). getStatus ( ) )
11420	Assert. assertEquals ( "SELECT 10 IS true;", text )
11421	assertEquals ( 0, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
11422	assertTrue ( humanName. hasGiven ( "test" ) )
11423	assertEquals ( 900, subject. getMinimumDisplayTime ( ). get ( ). intValue ( ) )
11424	Assert. assertEquals ( expected, actual )
11425	assertEquals ( "leading date grid position must return null date", null, ui. getDayInMonth ( month, BasicMonthViewUI. FIRST_WEEK_ROW, BasicMonthViewUI. FIRST_DAY_COLUMN ) )
11426	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><alice>bob</alice>", result. toString ( ) )
11427	assertArrayEquals ( new String [ ] [ ] { new String [ ] { "alias", "index", "filter" }, new String [ ] { "testAlias", "testIndex", "-" }, new String [ ] { "testAlias2", "testIndex2", "-" } }, catResult. getPlainText ( ) )
11428	assertEquals ( "", result )
11429	assertEqArgumentGeneratesXPath ( - 2, eqNegative2XPathExpression )
11430	assertEquals ( "Count = " + digest. size ( ), 3000, actual, 0.001 )
11431	assertEquals ( null, obj. field_pub )
11432	assertEquals ( "(LIST<W> a<V> b<V> c<V>)\\n", found )
11433	assertEquals ( "org.test.dressagedriver", ModelUtilities. getPropertiesKV ( relationshipTemplate ). get ( "Driver" ) )
11434	assertEquals ( "result", controller. postFormBean ( text, null, model ) )
11435	assertEquals ( "Test message", writer. toString ( ) )
11436	Assert. fail ( "Test encountered an unexpected exception." )
11437	assertTrue ( received )
11438	assertThat ( subjectOf ( axiom ), isOptionalOf ( individual ) )
11439	assertSuccess ( taskAfter. getResult ( ) )
11440	Assert. assertEquals ( clusterTbl. getId ( ), newCluster. getId ( ) )
11441	assertEquals ( InitValue + 1, x )
11442	assertEquals ( expected, actual )
11443	assertNotNull ( expectedRequester )
11444	assertEquals ( "[message: hello0, message: hello1]", broadcasts. toString ( ) )
11445	assertResponse ( outputStream, expected )
11446	assertFalse ( features. isPresent ( ) )
11447	assertArrayEquals ( new byte [ ] { 1, 2, 3 }, received )
11448	assertEquals ( getMessage ( MessageKeys. INCORRECTDATE_CUSTOMERBIRTH ), driver. findElement ( By. id ( "customerForm.errors" ) ). getText ( ) )
11449	assertThat ( output. readValuesToList ( ), equalTo ( expectedValues ) )
11450	assertThat ( output, StringContains. containsString ( "<div class=\\"hapiHeaderText\\"> Untitled Diagnostic Report </div>" ) )
11451	Assert. assertTrue ( "The MBean Remote Flag", ( Boolean ) gmx. getProperty ( "remote" ) )
11452	assertThat ( d. getScope ( ), equalTo ( "s" ) )
11453	Assert. fail ( "Datasource " + ds + " is disabled. Test connection can't succeed." )
11454	assertEquals ( TemporalType. DATE, attributeDesc. getTemporalType ( ) )
11455	assertTrue ( features. noneMatch ( f -> f. getId ( ). equals ( "spring/2.5.6.SEC02" ) &&! f. isBlacklisted ( ) ) )
11456	assertEquals ( "https://image.eveonline.com/InventoryType/22436_32.png", urlString )
11457	Assert. assertEquals ( "/h/houses/A%20test?query=Ask%20something&test2=someting%20else", uri )
11458	Assert. assertFalse ( ValidationUtils. isNullOrEmpty ( person ) )
11459	assertEquals ( json. toString ( ), sc. schemaConfAsJSON ( ) )
11460	assertEquals ( BINARY_CONTENT, result )
11461	assertEquals ( 1, col. count ( ) )
11462	assertThat ( result, is ( notNullValue ( ) ) )
11463	assertEquals ( componentName, "${componentNameLowerCase}" )
11464	assertMode ( 040775, mode )
11465	assertSqlQueryFilter ( "Invalid filter", filter, CompositeQueryFilter. DEFAULT_SQL_FALSE, Collections. emptyList ( ) )
11466	assertEquals ( "https://login.microsoftonline.com", config. getSite ( ) )
11467	assertThat ( PlainTime. axis ( ). getBaseUnit ( MILLI_OF_DAY ), is ( unit ) )
11468	assertTrue ( isVisibleForModerator )
11469	assertNotNull ( result )
11470	assertTrue ( true )
11471	Assert. assertEquals ( "f1:2.5", ret. toString ( ) )
11472	assertEquals ( ClusterType. STAND_ALONE, myTestFactory. getClusterType ( ) )
11473	assertThat ( "testGpDefault", is ( functions. globalProperty ( "testGpName", "testGpDefault" ) ) )
11474	assertEquals ( "<p>This is <strong>bold</strong>!</p>", html )
11475	assertTrue ( Files. exists ( tmpFile ) )
11476	assertEquals ( "mail.smtp.starttls.enable=true", descriptor. getAdvProperties ( ) )
11477	assertTrue ( mConfiguration. getBoolean ( PropertyKey. WEB_THREADS ) )
11478	assertFalse ( entity. isValid ( ) )
11479	assertEquals ( HttpStatusCode. NOT_FOUND_404, response. getStatus ( ) )
11480	assertEquals ( "http://schema.org/Recipe", microdata. getFirstType ( ) )
11481	assertEquals ( expectedChildOrganizationProfile. getSid ( ), resultantProfile. getSid ( ) )
11482	assertSame ( DebugSearchResponseContextHandler. INSTANCE, h )
11483	assertEquals ( "DoubleIt isn't working with negative numbers", - 16, response )
11484	assertTrue ( "Stream contains data", stream. size ( ) > 10 )
11485	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, testName + "_diff" ) )
11486	Assert. assertEquals ( Double. doubleToLongBits ( expectedRate ), Double. doubleToLongBits ( rate ) )
11487	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getAllPrivileges ( set ( "jranalyst" ), ActiveRoleSet. ALL ) ). toString ( ) )
11488	org. junit. Assert. assertArrayEquals ( new float [ ] { 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6 }, $. select ( CompressFrequenciesProcessor. class ). compress ( array, 0.5f ), 0 )
11489	assertExtractEquals ( Lists. newArrayList ( "ABC:value ABC" ), extractor. extract ( result ) )
11490	runner. assertNotValid ( )
11491	assertEquals ( undefined1, undefined2 )
11492	Assert. assertEquals ( "Basic url not escaped correctly", in, WebUtilities. percentEncodeUrl ( in ) )
11493	assertThat ( result, is ( "foo" ) )
11494	Assert. assertThat ( bufferCount, is ( 5L ) )
11495	assertThat ( "Initator methionine wrong", initMet. toString ( ), is ( "M" ) )
11496	assertEquals ( response. getContent ( ), "{\\"tropo\\":[{\\"say\\":[{\\"value\\":\\"1234\\",\\"name\\":\\"say\\"}]}]}" )
11497	assertEquals ( msg, includesPropertiesOf, c1. includesPropertiesOf ( c2 ) )
11498	assertThat ( customer, sameInstance ( anotherCustomer ) )
11499	assertArrayEquals ( "The branch name array is incorrect", new String [ ] { "stream" }, scm. getBranchNames ( EMPTY_VARIABLE_RESOLVER ) )
11500	assertEquals ( 0, runnersAfter. size ( ) )
11501	assertTrue ( "JarAnalyzer loaded", found )
11502	assertEquals ( 0, annotatedTypes. size ( ) )
11503	assertEquals ( "xsd:byte", prefixedName )
11504	assertTrue ( usl. getLineColor ( ). equals ( new Color ( 0x88, 0x88, 0x88 ) ) )
11505	assertEquals ( "47.567800", csvValues. get ( "stop_lat" ) )
11506	assertSame ( 0, result. getAppIds ( ). size ( ) )
11507	assertThat ( this. h. getId ( ), is ( equalTo ( componentId ) ) )
11508	assertTrue ( learned. isEquivalentTo ( given, ba ) )
11509	assertEquals ( 123, ( int ) value )
11510	assertThat ( results. size ( ), equalTo ( 2 ) )
11511	Assert. assertEquals ( "baz", manipulation. getColumnToRename ( ) )
11512	assertTrue ( integrationApp. isOnTerminate ( ) )
11513	assertArrayEquals ( NOT_ENCODED, binary, encode ( object ) )
11514	assertEquals ( Json. pretty ( model ), "{" + NEWLINE + "  \\"properties\\" : {" + NEWLINE + "    \\"byteArray\\" : {" + NEWLINE + "      \\"type\\" : \\"array\\"," + NEWLINE + "      \\"readOnly\\" : true," + NEWLINE + "      \\"items\\" : {" + NEWLINE + "        \\"type\\" : \\"string\\"," + NEWLINE + "        \\"format\\" : \\"binary\\"" + NEWLINE + "      }" + NEWLINE + "    }" + NEWLINE + "  }" + NEWLINE + "}" )
11515	assertEquals ( 10, numberOfLines )
11516	Assert. assertThat ( bytes, IsNot. not ( IsEqual. equalTo ( otherBytes ) ) )
11517	editor. assertProblems ( "aggregate|Deprecated", "get: ^versi^|resource does not exist" )
11518	assertEquals ( "eek", t. getMessage ( ) )
11519	assertTrue ( numberFour. isBefore ( newYearsDay ) )
11520	Assert. assertEquals ( eDate, cDate )
11521	assertEquals ( "baz", event. getTags ( ). get ( "foo" ) )
11522	assertEquals ( "currentContext fieldValidationError", classNameForPropertyInputField )
11523	assertions. isEqualTo ( null )
11524	Assert. assertTrue ( sdk. getAaptPath ( )!= null &&! sdk. getAaptPath ( ). equals ( "" ) )
11525	assertEquals ( HttpStatus. SC_INTERNAL_SERVER_ERROR, response. getStatus ( ) )
11526	assertTrue ( bundle. isFile ( ) )
11527	assertEquals ( Collections. emptyList ( ), group. getValue ( ) )
11528	assertTrue ( filter. shouldInclude ( source, "some.property" ) )
11529	assertEquals ( FleetSize. FINITE, vrp. getFleetSize ( ) )
11530	assertEquals ( 100, this. map. size ( ) )
11531	assertEquals ( expected, AuthorizationsUtil. mergeAuthorizations ( methodAuths, userAuths ) )
11532	assertFalse ( actualResult )
11533	assertCapturedMessage ( eventMessage ( "sess1", "/foo/1", "message1" ), eventMessage ( "sess1", "/foo/middle/1", "message2" ), eventMessage ( "sess1", "/foo/test/1", "message3" ), eventMessage ( "sess1", "/foo/middle/test/1", "message4" ), eventMessage ( "sess2", "/foo/test/1", "message3" ), eventMessage ( "sess2", "/foo/middle/test/1", "message4" ) )
11534	assertDataFrame ( frame, streamId, false, Unpooled. EMPTY_BUFFER )
11535	assertEquals ( fileSize, fileSizeActual )
11536	assertThat ( actual, is ( "�惧�ㄣ���ヤ���2015/05/01�������ユ�ャ�с����" ) )
11537	assertEquals ( expected, result )
11538	assertTrue ( bodyTypeAdapter instanceof JSONBodyTypeAdapter )
11539	assertTrue ( foundMethods!= null && foundMethods. size ( ) == 6 )
11540	assertFalse ( credentials. isPresent ( ) )
11541	assertEquals ( FatType. FAT12, fs. getFatType ( ) )
11542	Assert. assertEquals ( borrowed, returned )
11543	assertSame ( serverSpan, request. getAttribute ( ServletHandlerInterceptor. HTTP_SERVER_SPAN_ATTRIBUTE ) )
11544	Assert. assertEquals ( 0., analyser. getWaitingTimeAtActivity ( route. getEnd ( ), route ), 0.01 )
11545	assertTrue ( closed. await ( 2, SECONDS ) )
11546	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Prompt>" + "<Say language=\\"arb\\" loop=\\"1\\" voice=\\"man\\">message</Say>" + "<Play digits=\\"digits\\" loop=\\"1\\">https://example.com</Play>" + "<Pause length=\\"1\\"/>" + "</Prompt>", elem. toXml ( ) )
11547	assertEquals ( "{\\"from\\":1,\\"to\\":2,\\"symbolId\\":\\"btccny\\",\\"version\\":1,\\"msgType\\":\\"reqTimeLine\\",\\"requestIndex\\":0}", json )
11548	assertThat ( result. statusCode, is ( Response. OK ) )
11549	assertFalse ( matcher. match ( msg, rule ) )
11550	Assert. assertEquals ( "OK", result )
11551	assertEquals ( "", sw. toString ( ) )
11552	assertEquals ( con, con )
11553	assertThat ( indexPage. nameRadioButtons. getSelectedValue ( ). get ( ), is ( "2" ) )
11554	ProtoTruth. assertThat ( protoBuf )
11555	assertTrue ( wlsClusterConfig. checkUpdateDynamicClusterSizeJsonResult ( "{}" ) )
11556	assertResponse ( DataMockery. createRESPMODWithGetRequestNoBody ( ), request )
11557	assertTrue ( output. startsWith ( "<!DOCTYPE html PUBLIC \\"-//W3C//DTD XHTML 1.0 Strict//EN\\" \\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\">" ) )
11558	Assert. assertEquals ( expectedJsonObject. toString ( 2 ), model. getJsonObject ( ). toString ( 2 ) )
11559	assertEquals ( "Random script should match expected", "SELECT " + expectedRandomFunction ( ) + " FROM " + tableName ( "NEW1" ), result )
11560	assertThat ( userStoryClass, is ( nullValue ( ) ) )
11561	Assert. assertTrue ( nBits <= modulusBits && modulusBits <= nBits + 1 )
11562	assertNotNull ( "Social Followers (JSON STRING)", friends )
11563	assertSuccess ( validationResult )
11564	assertNotNull ( result )
11565	Truth. assertThat ( callable. call ( 1 ) )
11566	assertEquals ( "1234567890123456789012345678901234567890123456789012345678901234567890" + "1234567890123456789012345678901234567890123456789012345678901234567890" + "1234567890123456789012345678901234567890123456789012345678901234567890" + "1234567890123456789012345678901234567890.txt", entry. getName ( ) )
11567	assertEquals ( 978307200000L, w. getFirstMillisecond ( calendar ) )
11568	assertTrue ( sqlString. contains ( "asc" ) )
11569	assertIsSatisfied ( 2L, TimeUnit. SECONDS, defaultOutbound )
11570	assertEquals ( expected, e. evaluate ( ), 0.0 )
11571	assertEquals ( g1, g2 )
11572	Assert. assertNotNull ( signature )
11573	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), hasEnvVar ( "ADMIN_PORT_SECURE", "true" ) )
11574	assertTrue ( _comp. isEquals ( json, expected ) )
11575	assertEquals ( 1, branch_conditions. size ( ) )
11576	arrays. assertNotEmpty ( description, null )
11577	assertThat ( actual, not ( containsString ( "78ef6f64c2f2" ) ) )
11578	assertEquals ( firefoxDriver, defaultDriver )
11579	assertThat ( keyGenerator. getPrivateKeyAsWIF ( ), equalTo ( EXPECTED_KEYS. get ( i ) ) )
11580	assertEquals ( 9, result. getProperties ( ). size ( ) )
11581	assertTrue ( "Empty job should work", success )
11582	assertNoTaint ( arrayData [ 2 ] )
11583	assertEquals ( Constants. DEFAULT_PARTITION_SIZE * 1, ranges. size ( ) )
11584	Assert. assertEquals ( "������宸ュぇ瀛�", words )
11585	assertNotNull ( "CorporationDepartment is null", entity )
11586	assertComparisonFailure ( "Fichier produit en erreur : " + toFilePath ( "FileAssertWithAlignmentStyle_expected.xls" ) )
11587	assertTrue ( true )
11588	assertEquals ( "Patch", book. getName ( ) )
11589	assertThat ( errors. size ( ), is ( greaterThan ( 0 ) ) )
11590	assertEquals ( ImmutableList. of ( "ghijklmnop" ), namespaces )
11591	assertion. satisfies ( "has no wings" )
11592	assertEquals ( notNull, presentSerializable. asOptional ( ). get ( ) )
11593	assertThat ( consoleStepListener. toString ( ), is ( expectedSteps ) )
11594	assertEquals ( expected, query. export ( ) )
11595	assertTrue ( rs. next ( ) )
11596	assertSame ( url2, url1 )
11597	assertEquals ( 1, bindings. size ( ) )
11598	assertEquals ( "?a=b+c&d=e", qs. toQueryString ( ) )
11599	Assert. assertArrayEquals ( Base64. decode ( "3p8sf9JeGzr60+haC9F9mxANtLM=" ), r )
11600	assertEquals ( Serialization2Bean. class, o )
11601	Assert. assertFalse ( this. manager. disconnect ( this. person1, this. family1 ) )
11602	assertThat ( lt. check ( "Arbeta med var:" ). size ( ), is ( 0 ) )
11603	Assert. assertEquals ( facet1, facet2 )
11604	assertEquals ( propertyValue, p. getValue ( ) )
11605	assertEquals ( EXPECTED_PLAN_DETAILS_PATH, path )
11606	Assert. assertNull ( "should be null..no data", actual )
11607	Assert. assertEquals ( 1, SimpleClass. class. getDeclaredFields ( ). length )
11608	assertThat ( result, equalTo ( false ) )
11609	assertEquals ( "foo=le=2011-03-02", ret )
11610	assertEquals ( "certificate1", auth. getCertificate ( ) )
11611	Assert. assertThat ( dump, equalTo ( "UnionTypeExpressionNode: user | cat[] | hamster | fish (Start: 4, End: 32, On: [artificial node])\\n" + "    NamedTypeExpressionNode user -> {null} (Start: 4, End: 8, On: [artificial node])\\n" + "    ArrayTypeExpressionNode: cat[] (Start: 9, End: 14, On: [artificial node])\\n" + "        NamedTypeExpressionNode cat -> {null} (Start: 9, End: 12, On: [artificial node])\\n" + "    NamedTypeExpressionNode hamster -> {null} (Start: 22, End: 29, On: [artificial node])\\n" + "    NamedTypeExpressionNode fish -> {null} (Start: 28, End: 32, On: [artificial node])" ) )
11612	assertTrue ( x. equals ( y ) )
11613	assertEquals ( expected, query. export ( ) )
11614	assertAnnotations ( 3, Organisation. class, new TestEntity < > ( 0, "Task force 123" ), new TestEntity < > ( 1, "TF4-56" ), new TestEntity < > ( 2, "TF 789" ) )
11615	assertThat ( estimator. estimate ( renderingContext ), equalTo ( 25f ) )
11616	assertThat ( convertedString, equalTo ( EXPECTED_TEST_OUTPUT ) )
11617	assertThat ( revisions, contains ( revision ) )
11618	assertDeviceInstance ( oInstance )
11619	assertTrue ( true )
11620	assertEquals ( expectedValue, result )
11621	assertNotNull ( user )
11622	Assert. assertThat ( result, is ( testResult ) )
11623	assertSame ( tt2, tt )
11624	Assert. assertArrayEquals ( new byte [ ] { 0, 0, 0, 't', 'e','s', 't' }, result )
11625	assertPostFails ( "3", role, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
11626	Assert. assertEquals ( responseBean, userBean )
11627	Assert. assertTrue ( pss. toString ( ). contains ( "123" ) )
11628	assertEquals ( whereClause, Deencapsulation. getField ( querySpecificationBuilder, "where" ) )
11629	assertEquals ( expected, actual )
11630	assertEquals ( "<a name=\\"a-headline\\"></a><h3>A Headline</h3>", removeTextRange ( html ) )
11631	assertSame ( connection, incrementPoolOnTimeoutConnectionAcquiringStrategy. getConnection ( connectionRequestContext ) )
11632	assertNull ( result. getDecisionResultByName ( "time" ). getResult ( ) )
11633	assertEquals ( expResult, result )
11634	assertEquals ( inputDocuments, outputDocuments )
11635	assertThat ( unmarshal ( sb ), hasEntry ( "some key", "some value" ) )
11636	assertTupleEquals ( expected, testFunction. getKey ( testVertex ) )
11637	assertEquals ( "(34 55)\\n", found )
11638	assertEquals ( 3, violations. size ( ) )
11639	assertEquals ( "<body>&amp;x=</body>", result )
11640	assertThat ( ary, arrayContaining ( "a", "b" ) )
11641	assertEquals ( this, vRef )
11642	assertNotNull ( exchangeAdapter )
11643	Assert. assertEquals ( String. format ( "a %s text", this. html ( bb, "10", "sized" ) ), formatter. format ( "a [size=10\\"]sized[/size] text", defaultOptions ( ) ) )
11644	assertEquals ( "GEZDGNBVGY3TQOJQGEZDGNBVGY3TQOJQ", s )
11645	assertEquals ( "Hitpoints(99)", screenshotPlugin. parseLevelUpWidget ( LEVEL_UP_LEVEL ) )
11646	Assert. assertTrue (! testPackage. getPackage ( ). contains ( "Workflow" ) )
11647	assertThat ( getEntityBody, is ( "something" ) )
11648	assertTrue ( result. length ( ) > 0 )
11649	Helpers. assertJson ( twinCollection. toString ( ), JSON_FULL_SAMPLE )
11650	assertEquals ( expected, response. getValue ( ) )
11651	assertEquals ( "{\\"city\\":\\"Roseville\\",\\"country\\":\\"United States\\"}", result. get ( RETURN_RESULT ) )
11652	assertEquals ( "Skipped I_S key_column_usage", 0, skipped )
11653	assertPoint ( 40, 0, change )
11654	Assert. assertEquals ( expected, actual )
11655	assertEquals ( "", toml. getString ( "a" ) )
11656	Assert. assertEquals ( "SELECT * WHERE { \\"with? mark\\" <http://predicate> \\"test\\". }", query. toString ( ) )
11657	assertTrue ( result < 0 )
11658	Assert. assertEquals ( codigoEvento, infoEventoManifestacaoDestinatario. getCodigoEvento ( ) )
11659	assertEquals ( expected, actual )
11660	assertEquals ( - 1, result )
11661	assertTrue ( rec_cnt == 3 )
11662	assertEquals ( sc, actualConfig. getSamplerConfiguration ( ) )
11663	assertEquals ( 1, ksession. fireAllRules ( ) )
11664	assertEquals ( "geom", ( dump ( ( Node ) r. get ( "node" ) ) ). getProperty ( "layer" ) )
11665	Assert. assertTrue ( Arrays. equals ( entry. getBytes ( ), fmt. toBytes ( e ) ) )
11666	assertThat ( mimetype, is ( DEFAULT_MIMETYPE ) )
11667	assertEquals ( "Hello Camel in action", reply )
11668	assertEquals ( 0.39f, new TruncateDecimal ( ). exec ( tuple ) )
11669	assertEquals ( HttpStatusCodes. FOUND, response. getStatus ( ) )
11670	assertions. isGreaterThan ( expected )
11671	Assert. assertTrue ( "Incorrect suffix", hdfsWriter. getOpenedFilePath ( ). endsWith ( Long. toString ( testTime + 1 ) + ".tmp" ) )
11672	Assert. assertEquals ( 200, resp. getStatus ( ) )
11673	assertEquals ( 1, callable. call ( ) )
11674	assertThat ( concat, is ( equalTo ( denyAll ) ) )
11675	assertEquals ( expected, result )
11676	assertEquals ( ReadConcern. DEFAULT, parsedReadConcern )
11677	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getAllPrivileges ( set ( "jranalyst" ), ActiveRoleSet. ALL ) ). toString ( ) )
11678	assertToStringJoinEquals ( ",,", s )
11679	assertEquals ( address, this. nextHop. getGlobal ( ) )
11680	Assert. assertEquals ( 20, result )
11681	assertEquals ( "New York, N.Y. :", map. get ( "Place of publication, distribution, etc." ). get ( 0 ) )
11682	assertEquals ( new JsonObject ( Collections. singletonMap ( "foo", "bar" ) ), event. getBodyAsJson ( ) )
11683	assertThat ( result, contains ( "ABC", "EDF" ) )
11684	assertNotNull ( createdAlbumId )
11685	assertXMLEqual ( getCustomerXml ( CUSTOMER_XML_EXPECTED ), exchange. getOut ( ). getBody ( String. class ) )
11686	assertEquals ( lat, config. getProperty ( "locaiton.lat" ) )
11687	Assert. assertTrue ( "Optimal coverage not reached: " + best_fitness, best_fitness == 0.0 )
11688	Assert. assertTrue ( MathUtil. max ( 2, 3 ) > 2 )
11689	assertTrue ( Arrays. equals ( message. toByteArray ( ), message2. toByteArray ( ) ) )
11690	Assert. assertFalse ( channel. isOpen ( ) )
11691	assertTrue ( document. keySet ( ). contains ( KEY1 ) )
11692	Assert. assertTrue ( "Item was not stale", item. isStale ( newDate ( ) ) )
11693	assertNull ( preferences. getIntValue ( "1" ) )
11694	assertBundleEvent ( BundleEvent. STARTED, "org.knowhowlab.osgi.testing.it.test.bundle", 5, TimeUnit. SECONDS )
11695	assertEquals ( "value", keyInfo. getKey ( ) )
11696	assertTrue ( "Models not isomorphic", isomorphic ( m, model1 ) )
11697	assertEquals ( "Hello World". substring ( 2, 7 ), bytes. parseUtf8 ( CONTROL_STOP ) )
11698	Assert. assertTrue ( appReport. getYarnApplicationState ( ) == YarnApplicationState. ACCEPTED || appReport. getYarnApplicationState ( ) == YarnApplicationState. SUBMITTED )
11699	assertSame ( filter, derive ( filter, "g:a:1" ) )
11700	assertEquals ( Collections. singleton ( TestEnum. ONE ), select. getSelectedItems ( ) )
11701	assertThat ( bookNames, containsInAnyOrder ( "Book1", "Book2", "Book3" ) )
11702	assertEquals ( expected, AuthorizationsUtil. getDowngradedAuthorizations ( methodAuths, principal ) )
11703	assertException ( "FEEL-01015", "''", "< ''", "'camunda'", "< 'camunda'", "false", "< true", "'12.2'", "< '12.2'", "\\"12.2\\"", "< \\"12.2\\"" )
11704	assertEquals ( t, FuturesExtra. getException ( Futures. immediateFailedFuture ( t ) ) )
11705	Assert. assertEquals ( 2, result. length ( ) )
11706	assertThat ( referenceSet. getReferencingOntologyAnnotations ( ), hasItem ( annotation ) )
11707	assertThat ( target. onNodeDeletePre ( ORIGINAL_NW_ID, node1 ), is ( false ) )
11708	assertFalse ( accepted )
11709	assertTrue ( versionFileApp. exists ( ) )
11710	assertEquals ( expected, actual )
11711	assertThat ( indexPage. checkbox. isSelected ( ), is ( true ) )
11712	assertEquals ( newx, result, 0.01 )
11713	assertNotNull ( r. createRuleUnitDescription ( fooBar, org. drools. ruleunit. TestRuleUnit. class ) )
11714	Assert. assertEquals ( " INSERT INTO t_pet(id, name) ", sql )
11715	assertFalse ( routeSpecification. isSatisfiedBy ( itinerary ) )
11716	assertEquals ( asList ( 1, 2, 3, 4, 5, 6, 7 ), newArrayList ( distinct ) )
11717	assertThat ( existingName. toLowerCase ( ), is ( "CamelCaseFXML.fxml". toLowerCase ( ) ) )
11718	assertThat ( response, containsString ( "aut-num:        AS4294967207" ) )
11719	assertTrue ( result )
11720	assertEquals ( assignedVars. size ( ), createdVarNb )
11721	assertEquals ( "foo", s )
11722	assertEquals ( 1, resultComparator. compare ( ind1, ind2 ) )
11723	Assert. assertNotNull ( metadata )
11724	Assert. assertFalse ( result. isValid ( ) )
11725	Assert. assertEquals ( true, path. toFile ( ). exists ( ) )
11726	Assert. assertEquals ( "Hello World!", result )
11727	assertNamesInHierarchy ( ( Hashtable < Object, Object > ) hierarchies. get ( 3 ), names )
11728	Assert. fail ( )
11729	Assert. assertEquals ( string, parse ( string ) )
11730	assertEquals ( "test", constraint. getValue ( ) )
11731	assertEquals ( "Dec 10th + 1 day ", new Date ( Dec11th2015 ), ExtDateTimeUtils. daysAfterWithoutTimeZone ( new Date ( Dec10th2015 ), 1 ) )
11732	assertTrue ( resultComparator. compare ( fd1, fd2 ) < 0 )
11733	assertEquals ( expected, this. fsParser. extractFlowspec ( entry. build ( ) ) )
11734	assertEquals ( Lists. newArrayList ( "A cannot be null.", "B cannot be null." ), errorMessages )
11735	assertThat ( matcher. matches ( value ), is ( true ) )
11736	Assert. assertArrayEquals ( ENCODED_VALUE, byteOutputStream. toByteArray ( ) )
11737	assertEquals ( author, transformer. fromEbXML ( classification ) )
11738	Assert. fail ( "build listing failure" )
11739	assertNotNull ( ExecutionTime. forCron ( parser. parse ( cronexpression ) ) )
11740	assertEquals ( "", json, ios. toJSON ( ) )
11741	assertEquals ( "cayenne", localRuntime. getDataDomain ( ). getName ( ) )
11742	assertEquals ( ChangeLevel. NONE, parseAndRun ( "ALTER TABLE c DROP PRIMARY KEY IF EXISTS" ) )
11743	assertTrue ( feature. isEnabled ( configuration ) )
11744	Assert. assertEquals ( "fooxxxx", result )
11745	assertEquals ( 1.0, response, 0.0 )
11746	assertEquals ( "May", MONTHS_OF_YEAR_BACKWARDS [ 4 ] )
11747	assertTrue ( result. getErrors ( ). size ( ) > 0 )
11748	Assert. assertEquals ( "Parameter has different value than that specified", file, config. getLogging ( ). getFile ( ) )
11749	assertThat ( actualResult, is ( "result" ) )
11750	assertTrue ( userAuthorizedToAccess )
11751	assertFalse ( validator. validate ( EntityNames. GRADE, grades ). equals ( grades ) )
11752	Assert. assertEquals ( new SimpleDateFormat ( "yyyy" ). format ( dt ), new SimpleDateFormat ( "yyyy" ). format ( dueDate ) )
11753	assertEquals ( "see device in partition A", 1, liveUdis1. size ( ) )
11754	assertNotNull ( tomcatProcessorQuery )
11755	assertEquals ( test. minMoves ( input ), 3 )
11756	assertEquals ( propertyClass, TSnowflakeInputProperties. class )
11757	assertAmount ( actual, expected )
11758	assertThat ( widgetset, is ( Constants. DEFAULT_WIDGETSET ) )
11759	assertEquals ( getExpectedSchemaAndValue ( OPTIONAL_INT64_SCHEMA, message, UNSIGNED_RESULT ), result )
11760	assertNotEquals ( searchScroll1, searchScroll2 )
11761	assertEquals ( 2, victim. tocNumberOfPages ( ) )
11762	assertTrue ( result )
11763	assertEquals ( UNSIGNED_PLAIN_JSON_DOCUMENT_AS_B64URL, producer. getUnsignedEncodedPayload ( ) )
11764	assertEquals ( true, request. getPluginPDF ( ) )
11765	assertEquals ( 1, result. size ( ) )
11766	assertEquals ( windowSize * windowSize * products. length * coordinates. length, measurementList. size ( ) )
11767	assertEquals ( addedTriples, triplesAfter - triplesBefore )
11768	assertArrayEquals ( bMessage, bEncrypted )
11769	assertTrue ( latch. await ( 4, SECONDS ) )
11770	Assert. assertThat ( this. mojo. schemaVersions, IsEqual. equalTo ( expectedVersions ) )
11771	assertTrue ( "Number of relationship type are 6", relationshipTypes. size ( ) == 6 )
11772	assertEquals ( "SpringBeanLifecycleTracker", "[setProperty, setMuleContext, springInitialize, start, stop, springDestroy]", springLT. getTracker ( ). toString ( ) )
11773	assertThat ( collections. contains ( "test" ), equalTo ( true ) )
11774	Assert. assertEquals ( 2, this. em ( ). getMetamodel ( ). getEntities ( ). size ( ) )
11775	assertThat ( fe, notNullValue ( ) )
11776	assertThat ( result. isHealthy ( ), is ( true ) )
11777	assertThat ( hours, equalTo ( EffortDuration. zero ( ) ) )
11778	assertNotNull ( result )
11779	Assert. assertEquals ( 0, connection. getNetworkTimeout ( ) )
11780	Assert. assertFalse ( result )
11781	Assert. assertEquals ( "-P0DT2H30M59.0S", EwsUtilities. getTimeSpanToXSDuration ( timeSpan ) )
11782	assertFalse ( folder. isOpen ( ) )
11783	assertSearchYields ( index, "html:body", "b" )
11784	assertThat ( statusCodeOf ( response ), is ( HttpServletResponse. SC_METHOD_NOT_ALLOWED ) )
11785	Assert. assertEquals ( this. msg, entity1 )
11786	assertThat ( fmt. parse ( "2014100x" ), is ( PlainDate. of ( 2014, 10, 4 ) ) )
11787	Assert. assertEquals ( "associated", this. realiser. realise ( ap ). getRealisation ( ) )
11788	assertThat ( "Wrong default logger", config. getLogger ( ). getLog ( ), instanceOf ( NoOpLog. class ) )
11789	assertEquals ( f1. hashCode ( ), f2. hashCode ( ) )
11790	assertEquals ( response. asString ( ), FAILED, response. get ( OUTCOME ). asString ( ) )
11791	assertThat ( sessionId1, is ( not ( equalTo ( sessionId2 ) ) ) )
11792	assertThat ( affOrgPairs, containsInAnyOrder ( expectedAffOrgPairs. toArray ( ) ) )
11793	assertEquals ( "/protected/res/documents/index.html?focus={contractId}&caller=BLUE&referrer=/protected/res/my_contracts/index.html&fragment=/contractDetails/{ref}", affordance. getHref ( ) )
11794	assertNotNull ( Trunk. reader ( ). read ( ) )
11795	assertSimpleTerm ( result, "term\\\\*", false, false )
11796	assertTrue ( getStdOut ( ). indexOf ( "Passed Validation : Valid WSDL" ) > - 1 )
11797	assertThat ( updatedLocation. getName ( ), is ( "New York" ) )
11798	assertTrue ( kept. contains ( new ItemStack ( ItemID. SHADOW_SWORD, 1 ) ) )
11799	XMLAssert. assertXpathExists ( "feed/entry/rights", d )
11800	assertEquals ( "the target object and service object should be equal ", object, target )
11801	assertThat ( copy. getMapProperty ( ), instanceOf ( LinkedHashMap. class ) )
11802	assertE ( "�尖�尖�尖�尖�尖�尖�尖��" + "��      ��" + "��      ��" + "��  ��   ��" + "��  ��   ��" + "��      ��" + "��      ��" + "�尖�尖�尖�尖�尖�尖�尖��" )
11803	Assert. assertEquals ( avulsa, notaInfo. getAvulsa ( ) )
11804	assertMethod ( methodParser, null, null, null, null, testCase. payload, "payload" )
11805	assertEquals ( z1, z2 )
11806	assertFalse ( OAuthUtils. validateScopes ( requestScopes, registeredScopes, true ) )
11807	assertThat ( elementFacade. getTextValue ( ), is ( "text" ) )
11808	assertNull ( TYPE_HANDLER. getResult ( rs, 1 ) )
11809	assertEquals ( buildValue ( i ), new String ( value. getBytes ( ), 0, value. getLength ( ) ) )
11810	Assert. assertEquals ( "anta怒 2 horoj", t. format ( new Date ( new Date ( ). getTime ( ) - 6543990 ) ) )
11811	Assert. assertEquals ( 4, qr. getRank ( 1e-14 ) )
11812	assertEquals ( 70, integer. getInteger ( ). intValue ( ) )
11813	assertEquals ( mimeType, op. getMimeType ( ) )
11814	assertNull ( client. lastBatch )
11815	assertEquals ( "Wrong root node", "table", nodeModel. getNodeHandler ( ). getRootNode ( ). getNodeName ( ) )
11816	assertTrue ( "default renderer expected to be DefaultListRenderer " + "\\n but is " + renderer. getClass ( ), renderer instanceof DefaultListRenderer )
11817	Assert. assertTrue ( isValid ( resp, FORMAT_JSON, true ), "Response is not valid" )
11818	assertEquals ( "msg", sut. getMessage ( ) )
11819	assertEquals ( "Should respond with 422", 422, responseContext. getStatus ( ) )
11820	assertEquals ( 4, index. pairs ( ). size ( ) )
11821	assertEquals ( "2002-03-07T10:00:00", v1. withoutTimezone ( ). toString ( ) )
11822	assertEquals ( p1, p2 )
11823	assertTrue (! out. toString ( ). contains ( "Total size" ) )
11824	assertEquals ( BigInteger. ZERO, new BigInteger ( value. asBytes ( ) ) )
11825	assertNotNull ( obj. getDownloadURL ( ) )
11826	Assert. assertEquals ( "0", result. getReturnCode ( ) )
11827	assertThat ( toUnqualifiedVersionlessIdValues ( myObservationDao. search ( map ) ), containsInAnyOrder ( toValues ( id1, id2 ) ) )
11828	assertEquals ( true, result [ 0 ] )
11829	Assert. assertTrue ( baos. toString ( ). contains ( "OK" ) )
11830	assertThat ( response. getStatusLine ( ). getStatusCode ( ), is ( 418 ) )
11831	assertEquals ( numDocs, results. size ( ) )
11832	context. assertTrue ( event. succeeded ( ) )
11833	assertTrue ( "This test must runs without an error, because we can not guarantee that this test method run as first. " + res, true )
11834	assertThat ( generatedReportText, isSimilarTo ( expectedReport, "timestamp" ) )
11835	assertEquals ( reg. getSoftwareVersion ( ), reg2. getSoftwareVersion ( ) )
11836	assertThat ( jsonOutputStreamParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/jsonmarshallertest/testTimestamp.json" ) ) )
11837	assertTrue ( collection. isEmpty ( ) )
11838	assertEquals ( PATH, asset. name ( ) )
11839	arrays. assertDoesNotContain ( description, new byte [ 6 ], null )
11840	assertEquals ( "(foo void ;)\\n", found )
11841	assertFalse ( validator. validate ( EntityNames. STAFF, staffId ). equals ( staffId ) )
11842	assertEquals ( LocalDate. of ( 2011, 10, 16 ), test )
11843	assertFootersJoined ( )
11844	stringsWithCaseInsensitiveComparisonStrategy. assertDoesNotContain ( someInfo ( ), "Practice makes perfect", values )
11845	assertTrue ( shootist. responses. size ( ) > 10 )
11846	assertFalse ( setupDirectKerberosClient ( ). getCredentials ( context ). isPresent ( ) )
11847	assertEquals ( description, activity. getProperty ( PROPERTY_ACTIVITY_DESCRIPTION ) )
11848	assertTrue ( figures. isEmpty ( ) )
11849	assertTrue ( veh1. getSkills ( ). containsSkill ( "skill2" ) )
11850	assertTrue ( result )
11851	assertThat ( url. toString ( ), is ( "http://localhost/c/?a=b" ) )
11852	Assert. assertEquals ( 720, result )
11853	assertNotNull ( lock )
11854	assertTrue ( keysMap. isValidKey ( getArtifact ( "test.test", "test", "1.2.3" ), getPGPgpPublicKey ( 0x123456789abcdef0L ), null ) )
11855	assertThat ( renderer. getDelegateRenderer ( ), is ( sameInstance ( combo. getWrappedRenderer ( ) ) ) )
11856	assertEquals ( "WIFI:S:some weird SSID;T:WPA;P:aintNoSecret;H:true;", wifi. toString ( ) )
11857	assertions. containsSequence ( sequence )
11858	assertThat ( sulfuras. getQuality ( ), is ( initialQuality + 3 ) )
11859	assertTrue ( "Customs Form was not submitted electronically", shipment. getForms ( ). get ( 0 ). getSubmittedElectronically ( ) )
11860	assertThat ( upload. getHeaderEncoding ( ), is ( encoding ) )
11861	assertFalse ( output. contains ( "-1" ) )
11862	Assert. assertNull ( pox. errorMessage )
11863	Assert. assertNotNull ( this. commandFacade. exists ( SwitchFullScreenCommand. class ) )
11864	assertEquals ( 1, classFileDefinitions. size ( ) )
11865	assertEquals ( "unsortable column must be unsorted", SortOrder. UNSORTED, table. getSortOrder ( 0 ) )
11866	assertThat ( set. size ( ), is ( 2 ) )
11867	assertEquals ( certSubject, certificateChain. get ( 2 ). getSubject ( ) )
11868	assertNull ( change )
11869	assertNotNull ( results )
11870	assertTrue ( true )
11871	Assert. assertSame ( "Should retrieve value set", fieldValue, node. getValue ( ) )
11872	assertNotNull ( metricsFactory )
11873	assertTrue ( cache1. equals ( cache2 ) )
11874	assertTrue ( dbStarted )
11875	assertContentSame ( rs, rc, columnParam1 )
11876	Assert. assertEquals ( 4, loadedEntities. size ( ) )
11877	assertTrue ( expectedFilteredRecommendedItems. containsAll ( actualFilteredRecommendedItems ) )
11878	assertEquals ( "Deployment ID is null for the task:myTask_ORIG", ise. getMessage ( ) )
11879	assertEquals ( child, instance. getChild ( ) )
11880	assertEquals ( - 1, Iter. lastIndex ( iter, filter ) )
11881	assertThat ( result, equalTo ( "/path?query" ) )
11882	assertEquals ( expected, statement. toString ( ) )
11883	assertTrue ( comp. destroyed )
11884	AssertUtil. assertSucceeded ( serviceResponse )
11885	assertEquals ( "1 millisecondo fa", t. format ( new Date ( 0 ) ) )
11886	assertTrue ( out. equals ( "F12.988; Set feedrate" ) )
11887	assertRequest ( "POST", "Conference/%s/Member/%s/Deaf/", confId, memberId )
11888	assertTrue ( SpriteUtils. isAliasSprite ( sprite1, sprite2 ) )
11889	assertEquals ( SortOrder. UNSORTED, controller. getSortOrder ( 0 ) )
11890	Assert. assertEquals ( "Unexpected result: " + result, expectedResult, result )
11891	assertEquals ( "z", textView. text ( ). get ( ) )
11892	assertThat ( searchResults. size ( ), is ( Search. SEARCH_LIMIT ) )
11893	assertEquals ( "a=c", m. getHeader ( "cookie" ) )
11894	assertEquals ( rows - 1, sorter. convertRowIndexToView ( rows - 1 ) )
11895	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Pay action=\\"https://example.com\\" bankAccountType=\\"consumer-checking\\" chargeAmount=\\"charge_amount\\" currency=\\"currency\\" description=\\"description\\" input=\\"dtmf\\" language=\\"de-DE\\" maxAttempts=\\"1\\" minPostalCodeLength=\\"1\\" paymentConnector=\\"payment_connector\\" paymentMethod=\\"ach-debit\\" postalCode=\\"postal_code\\" securityCode=\\"true\\" statusCallback=\\"https://example.com\\" statusCallbackMethod=\\"GET\\" timeout=\\"1\\" tokenType=\\"one-time\\" validCardTypes=\\"visa\\"/>", elem. toXml ( ) )
11896	assertThat ( databaseGiven, is ( database ) )
11897	assertEquals ( expected, actual )
11898	assertEquals ( expected, actual )
11899	assertThat ( address, not ( hasKey ( firstLine ) ) )
11900	Assert. assertTrue ( "Expected AES256 cipher suites, got null", resolved!= null && resolved. size ( )!= 0 )
11901	assertEquals ( origDatagrams [ testIdx ], d )
11902	assertNull ( retVxGroup )
11903	assertTrue ( v1. getSkills ( ). containsSkill ( "skill2" ) )
11904	assertArrayEquals ( Bytes. toBytes ( "starthere" ), opts. getScans ( ). get ( 0 ). getStartRow ( ) )
11905	assertTrue ( "Test file didn't get created.", fs. exists ( file ) )
11906	assertEquals ( "Hello world from a jsp", html )
11907	Assert. assertEquals ( 0, ccs. size ( ) )
11908	assertEquals ( rs2, rs )
11909	assertEquals ( "2\\n", found )
11910	assertTrue ( groups. contains ( everyoneGroup ) )
11911	assertPrehandle ( "methodFeatureTwo", true, HttpStatus. OK. value ( ) )
11912	assertThat ( "getValue", node. getValue ( ), is ( true ) )
11913	assertEquals ( "A string with one expression 4 set", handler. expandExpressions ( "A string with one expression ${here} set", null ) )
11914	Assert. assertTrue ( graphUtil. hasCycle ( graph ) )
11915	assertEquals ( "The attribute value is unchanged.", null, pm. stringAttr. getValue ( ) )
11916	assertTrue ( err <.1 )
11917	assertThat ( resolved, is ( sameInstance ( view ) ) )
11918	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "freeTextAnnotation01.pdf", sourceFolder + "cmp_freeTextAnnotation01.pdf", destinationFolder, "diff_" ) )
11919	assertEquals ( intList, r. get ( "list1" ) )
11920	Assert. assertEquals ( true, aliceFoundFirst )
11921	assertEquals ( "_cat/indices/_all?v=true", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
11922	assertEquals ( 126, templateCache. size ( ) )
11923	Assert. assertTrue ( ra. run ( "\\"n\\\\\\\\\\\\\\"\\"" ) )
11924	assertThat ( description. toString ( ), is ( "x z" ) )
11925	assertThat ( iData. getSelectedVehicle ( ), is ( veh1 ) )
11926	assertFalse ( view. needsLoading ( item ) )
11927	assertThat ( inputStream, notNullValue ( ) )
11928	assertThat ( taskService. createTaskQuery ( ). taskCandidateGroup ( "demo" ). count ( ), is ( 1L ) )
11929	assertEquals ( "val1", result )
11930	assertThat ( response. getPassword ( ), is ( nullValue ( ) ) )
11931	assertEquals ( "debug:My message with 3 parameters : 1, 2, 3", output )
11932	assertThat ( result, is ( true ) )
11933	assertEquals ( 0L, result )
11934	Assert. fail ( "expected IllegalArgumentException" )
11935	Assert. assertNull ( entity2 )
11936	assertEquals ( expected, result. getResult ( ). toString ( ) )
11937	assertEquals ( 1.0, feasibilityRatio ( solutionList ), 0.00000000001 )
11938	Assert. assertNotNull ( victim. create ( ) )
11939	assertTrue ( results. hasNext ( ) )
11940	Assert. assertEquals ( AccessValidator. DEVICE_WITH_REQUESTED_ID_NOT_FOUND, result )
11941	assertThat ( scoreDocs. length, is ( 3 ) )
11942	assertEquals ( new BigDecimal ( "29.959" ), entity. getN73 ( ) )
11943	Assert. assertEquals ( 0, trackable. skip ( 0 ) )
11944	Assert. assertEquals ( weightsSum, TestTools. getObj ( "weightsSum", LinearWindowFilter. class, filter ) )
11945	assertHost ( "host", "myHost" )
11946	assertThat ( "getValue", node. getValue ( ), is ( "abc" ) )
11947	Assert. assertArrayEquals ( expected, actual )
11948	mockery. assertIsSatisfied ( )
11949	assertThat ( listPager. getTotalPages ( ), is ( 2 ) )
11950	Assert. assertEquals ( uri1, uri2 )
11951	assertNull ( newTransports. poll ( ) )
11952	assertThat ( result, is ( jsonString ( "hello" ) ) )
11953	assertions. isNotGreaterThan ( new Integer ( 2 ) )
11954	assertTrue ( d. isUsingStatisticsManager ( ) )
11955	assertFalse ( violation )
11956	assertEquals ( "register", jsp )
11957	assertEquals ( "The test stream content isn't same ", test, result )
11958	Assert. assertEquals ( expected, loc. getAccession ( ). getID ( ) )
11959	assertEquals ( "application/zip", dataSource. getContentType ( ) )
11960	Assert. assertEquals ( 0, errors. size ( ) )
11961	assertFalse ( first. generator. equals ( second. generator ) )
11962	assertFalse ( "Edits dir exists already - it shouldn't", fs. exists ( regionEdits ) )
11963	assertThat ( result. iterator ( ). next ( ). getString ( "value" ), is ( "myValue01" ) )
11964	Assert. assertEquals ( 403, response. getStatus ( ) )
11965	assertNotNull ( driver )
11966	Assert. assertFalse ( secure )
11967	assertOut ( "var /** @type {boolean} */ a = new Boolean(1)" )
11968	assertEquals ( expectedQuery, actualQuery )
11969	assertThat ( cut. apply ( hasText ), is ( true ) )
11970	assertEquals ( EXPECTED_STOPWORDS, stopwords )
11971	assertNotNull ( NonTerminal. IF_COMMAND. buildAbstractSyntaxTree ( tokenStream ) )
11972	assertEqualsJFiglet ( asciiArt )
11973	assertEquals ( Status. NOT_FOUND, response. getClientResponseStatus ( ) )
11974	assertTrue ( _comp. isEquals ( json, expected ) )
11975	assertEquals ( 0, lines. size ( ) )
11976	assertThat ( formatter. rounded ( 1.0, 2 ), is ( "1" ) )
11977	arrays. assertContains ( description, actual, null )
11978	assertTrue ( param2. getValue ( ). get ( 0 ) instanceof QueryParam )
11979	assertEquals ( "?p1=v1&p2=v2", query. toString ( ) )
11980	assertEquals ( nodeId - 1, logicalNodeId )
11981	assertEquals ( RPCTransport. DEFAULT_MAX_RECV_FRAG, transport. getMaxRecvFrag ( ) )
11982	assertApiImpl ( buildClientWithDefaults ( clientBuilder, "http://localhost/" ), V3GitLabApiProxy. class )
11983	assertThat ( unit. filterDeniedParams ( unfiltered, Channel. IncomingRequest ), equalTo ( Collections. < String, String > emptyMap ( ) ) )
11984	assertEquals ( testTxtContents, new String ( contents, "UTF-8" ) )
11985	assertThat ( baos. toString ( ), containsString ( String. format ( "" + "6 Scenarios (1 failed, 1 ambiguous, 1 skipped, 1 pending, 1 undefined, 1 passed)%n" + "6 Steps (1 failed, 1 ambiguous, 1 skipped, 1 pending, 1 undefined, 1 passed)%n" ) ) )
11986	assertEquals ( "keyset iteration order must be stable.", sourceFolderKeys1, sourceFolderKeys2 )
11987	assertThat ( "There should still be no tray matching", trayMatchings. isEmpty ( ), is ( true ) )
11988	Assert. assertEquals ( 2, analyser. getLoadRightAfterActivity ( route. getActivities ( ). get ( 0 ), route ). get ( 0 ) )
11989	assertEquals ( expected, actual )
11990	assertFalse ( latch. await ( 100, TimeUnit. MILLISECONDS ) )
11991	assertEquals ( "Base for floats is wrong", Integer. valueOf ( 3 ), parsed )
11992	assertThat ( allUsedBindings ( result ), is ( empty ( ) ) )
11993	assertThat ( max. get ( ), is ( "ccc" ) )
11994	assertTrue ( threadOne. exception instanceof OptimisticLockingException )
11995	assertEquals ( 0, data. length )
11996	assertTrue ( result. contains ( string ) )
11997	Assert. assertEquals ( "second", res. getStringData ( ) )
11998	assertThat ( options. getGlue ( ), equalTo ( singletonList ( URI. create ( "classpath:/com/example" ) ) ) )
11999	assertEquals ( THIS_IS_HANDY, executor. getOut ( ). trim ( ) )
12000	assertFalse ( isAuthenticated )
12001	assertThat ( connection. shouldProcessSynchronously ( request ), is ( false ) )
12002	Assert. assertNull ( caixa )
12003	Assert. assertEquals ( expectedPortNoStrings [ i ], portNoString )
12004	assertThat ( result, is ( notNullValue ( ) ) )
12005	assertFalse ( noneExistingFile. exists ( ) )
12006	assertEquals ( betweenness [ index2 ], 2.0 )
12007	assertEquals ( job. jobId, lastRecentJob. jobId )
12008	assertNull ( result )
12009	assertEquals ( "!", formatWithRecordSeparator. getRecordSeparator ( ) )
12010	assertEquals ( "windows", PlatformDetector. OS. getName ( ) )
12011	assertNull ( array )
12012	assertTrue ( "MyService is not found", file. exists ( ) )
12013	assertEquals ( "", 0, actual. size ( ) )
12014	assertTrue ( "Pattern <" + entry. getValue ( ) + "> did not match <" + entry. getKey ( ) + ">", matches )
12015	Assert. assertEquals ( "3 days ago", t. format ( new Date ( 0 ) ) )
12016	Assert. assertEquals ( "Testing =E2=82=AC special =2E chars =3D also at the end =3D", toString ( bos. toByteArray ( ) ) )
12017	Assert. assertFalse ( MultiPathSupportUtil. isTableTypeSupported ( this. constraints, AFI_SAFI ) )
12018	Assert. assertEquals ( "http://localhost:8080", webApiClient. getWebApiUrl ( ) )
12019	assertEquals ( expected, result )
12020	assertTrue ( "All messages are marked as read.", unreadMessages. isEmpty ( ) )
12021	assertThat ( result, is ( nullValue ( ) ) )
12022	assertEquals ( "High-Performance Java Persistence", book. getTitle ( ) )
12023	assertPaths ( finder. findAllPaths ( start, end ), "a,b,c,d,e,f,g,i", "a,b,c,d,e,f,h,i" )
12024	assertThat ( panel. findElement ( By. className ( "v-panel-caption" ) ). findElement ( By. tagName ( "span" ) ). getText ( ), is ( "A on" ) )
12025	assertEquals ( urlWithPath, urlString )
12026	assertEquals ( "application/x-www-form-urlencoded", ferp. getClass ( ). getAnnotation ( Consumes. class ). value ( ) [ 0 ] )
12027	assertTrue ( WroUtil. matchesUrl ( request, "wroApi/test" ) )
12028	assertThat ( getAllMessages ( ), hasSize ( 3 ) )
12029	assertNotNull ( expr )
12030	Assert. assertEquals ( 10, result. getResultSize ( ) )
12031	Assert. assertEquals ( headerValue, actualValue )
12032	assertEquals ( MyUI. class, uiClass )
12033	assertEquals ( iterations, cryptor. getPBKDFIterations ( ) )
12034	Assert. assertFalse ( this. manager. disconnect ( this. family1, this. person1 ) )
12035	MatcherAssert. assertThat ( PodHelper. isReady ( pod ), is ( true ) )
12036	assertEquals ( 2, myPm. minLen2. getMinLen ( ) )
12037	assertThat ( lines, is ( Arrays. asList ( "This is a long line that cannot fit on a", "single line and could be wrapped" ) ) )
12038	assertEquals ( Arrays. asList ( "getAttributeDescriptor", "getAttributeDescriptor", "customAction" ), events )
12039	assertTrue ( resultMessage ( res, PUT ), res. passedValidation ( ) )
12040	assertTrue ( true )
12041	assertEquals ( feed_urls. length, response. size ( ) )
12042	assertEquals ( privilege, p )
12043	assertEquals ( "Wrong URL", file. getAbsoluteFile ( ), FileLocatorUtils. fileFromURL ( url ). getAbsoluteFile ( ) )
12044	assertEquals ( p1, p2 )
12045	Assert. fail ( )
12046	assertThat ( DateInterval. atomic ( date ). withOpenEnd ( ). isEmpty ( ), is ( true ) )
12047	assertEquals ( "All received messages are correct.", 0, messageVerifier. getFailures ( ) )
12048	assertEquals ( BPResultType. NO_DATA, testResult. getResultType ( ) )
12049	assertThat ( result, is ( false ) )
12050	assertEquals ( sessionInfo. getIdentity ( ). getIdentifier ( ), username )
12051	assertEquals ( "VALUE_TO_TEST", rsp. getHeaderField ( HEADER ) )
12052	assertEquals ( "Expected another type of analyzer", NorwegianAnalyzer. class, analyzer. getClass ( ) )
12053	assertGalleries ( galleries )
12054	assertResult ( session )
12055	Assert. assertEquals ( "{\\"value\\":\\"test\\",\\"message\\":null,\\"success\\":true}", json )
12056	assertFalse ( detector. isOjbLoadedClass ( DummyDataObjectOjb. class ) )
12057	assertEquals ( 0, engineRule. getHistoryService ( ). createUserOperationLogQuery ( ). count ( ) )
12058	assertNull ( statusFail )
12059	assertOrder ( order, length, comparator )
12060	assertEquals ( HttpStatusCodes. OK. getStatusCode ( ), response. getStatusLine ( ). getStatusCode ( ) )
12061	assertEquals ( "function sample1 ()", functionLibrary. getFunctionLibraryScript ( ) )
12062	assertEquals ( "Count.getReplacementCommand", expected, actual )
12063	Assert. assertEquals ( files. size ( ), 1 )
12064	assertTrue ( encoded. indexOf ( "\\r\\n" ) == encoded. lastIndexOf ( "\\r\\n" ) )
12065	Assert. fail ( "Expected NonSquareMatrixException" )
12066	Assert. assertEquals ( 10, KafkaConsumerUtils. INSTANCE. getNumRead ( ) )
12067	assertFalse ( shouldVote )
12068	assertEquals ( future, underTest. doEventuallyCollectEmpty ( consumer, supplier ) )
12069	assertEquals ( "2\\n", found )
12070	Assert. assertEquals ( 11, patients. size ( ) )
12071	assertEquals ( VALID_BIC11, bic. toString ( ) )
12072	Assert. assertNotNull ( dateTime )
12073	files. assertHasDigest ( INFO, actual, digest, expected )
12074	Assert. assertEquals ( FileUtils. readFileToString ( file0, Charset. forName ( "UTF-8" ) ), expected )
12075	assertEquals ( "", result )
12076	assertEquals ( 10, result )
12077	Assert. assertEquals ( "Incorrect default type", WTabSet. TYPE_TOP, tabset. getType ( ) )
12078	assertEquals ( ab, removeFirst )
12079	assertThat ( envVar. getValue ( ), is ( RAW_VALUE_1 ) )
12080	assertEquals ( "http://help.pentaho.com", spyAppConfigProperties. getHelpUrl ( ) )
12081	assertEquals ( Paths. get ( "test", "bin", "java" ). toString ( ), JavaLocator. findExecutableFromToolchain ( toolchain ) )
12082	assertions. isNotEqualTo ( expected )
12083	assertStat ( result )
12084	Assert. assertEquals ( "monkey", mAuthenticator. getAuthToken ( ) )
12085	assertEquals ( "a/b/c", result. toString ( ) )
12086	assertN ( "...." + "...." + "...." + "....", numbers )
12087	Assert. assertEquals ( "Unexpected count of unmapped reads", EXPECTED_UNMAPPED_READS_COUNT, readCount )
12088	assertEquals ( "Log could not be retrieved as the task instance is not running by the ID: 12345", this. taskExecutionService. getLog ( platformName, taskDeploymentId ) )
12089	assertTypeEquals ( expected, actual )
12090	assertFalse ( "Permission denied", updateSamplesFromAnalysisSubmissionPermission. isAllowed ( authentication, analysisSubmission ) )
12091	assertEquals ( expectedDatetime, strategy. getNextBusinessDay ( ldt ) )
12092	assertThat ( issues. get ( pluginID ). getSynopsis ( ), equalTo ( "An SSH server is listening on this port." ) )
12093	editor. assertProblems ( "notBoolean|boolean", ".subprop|Can't use '.' navigation" )
12094	assertEquals ( "https://server/articlepath/abc:%C3%84%C3%B6%C3%BC_%C3%9F%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8", underTest. provideLink ( "abc:�枚眉 ��°�ゃ�炽���笺��" ) )
12095	assertNull ( user )
12096	assertEquals ( 190, maximum )
12097	assertEquals ( 6, expansion. getExpansion ( ). getContains ( ). size ( ) )
12098	assertNotNull ( Event. fetcher ( "AEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
12099	Assert. assertTrue ( ( ( Long ) first. get ( 0 ) ). longValue ( ) <= ( ( Long ) second. get ( 0 ) ). longValue ( ) )
12100	assertThat ( key. verify ( Algorithm. HMAC_SHA512, "hello". getBytes ( UTF_8 ), sig ), is ( false ) )
12101	assertEquals ( expectedIDs, featureindexer. getAllFeatureIds ( ) )
12102	JSONAssert. assertEquals ( "[\\"Hello\\", \\"world\\"]", result, true )
12103	assertEquals ( Integer. valueOf ( 1 ), results. getResults ( ) [ 0 ]. get ( 0 ) )
12104	Assert. fail ( )
12105	Assert. assertEquals ( 1.0, n, 0.001 )
12106	Assert. assertEquals ( 3L, log. count ( ) )
12107	assertNull ( links )
12108	assertEquals ( expectedResult, result )
12109	Assert. assertEquals ( new Double ( 9999999999.9999d ), _c. convert ( "9999999999.9999" ) )
12110	assertEquals ( expected, elements )
12111	assertEquals ( Result. ERROR, source. validate ( container ). getStatus ( ) )
12112	Assert. assertTrue ( nodeService. detectDuplicateNodes ( lb, lb2 ) )
12113	assertSame ( rmx, rm )
12114	assertTrue ( "Wrong return value for failure", setUpErrorConfig ( ). isEmpty ( ) )
12115	assertEquals ( "jdbc:hive2://testhost:21050/", connectionString )
12116	assertEquals ( 0.0, diff. getValue ( METERS ), 510 )
12117	Assert. assertEquals ( rtpPacket. getVersion ( ), 2, "Expect version = 2" )
12118	Assert. assertEquals ( "Error updating public community file", file. getVersion ( ), version + 1 )
12119	assertEquals ( 7, reader. readFields ( ). size ( ) )
12120	assertEquals ( expectedQuery, actualQuery )
12121	assertEquals ( "LocationSearchFeed [locationList=[]]", result )
12122	context. assertIsSatisfied ( )
12123	Assert. assertNotNull ( lookup )
12124	assertNull ( expression. evaluate ( record ) )
12125	assertEquals ( 1, pixel. get ( ) )
12126	assertThat ( headlineOf ( view ), is ( "2 builds have failed" ) )
12127	assertTrue ( "Expect mapping generated by CoveredbyMapper to be equal to reference mapping", mapper. getMapping ( s, t, "?x", "?y", "top_within(x.asWKT, y.asWKT)", 1.0d ). equals ( referenceMapping ) )
12128	assertEquals ( "baz", config. value ( "bar" ). get ( ) )
12129	assertEquals ( 1, dependency. getVulnerableSoftwareIdentifiers ( ). size ( ) )
12130	assertEquals ( "/" + ORCID + "/funding/123", x. getFundingGroup ( ). get ( 0 ). getFundingSummary ( ). get ( 0 ). getPath ( ) )
12131	assertNull ( apiForUrl )
12132	assertEquals ( 3, exceptions )
12133	assertEquals ( 1, logs. size ( ) )
12134	assertEquals ( 200, response. getStatus ( ) )
12135	assertNotNull ( getStdOut ( ) )
12136	assertThat ( output, is ( Bytes. toArray ( asList ( 0, 1, 2 ) ) ) )
12137	assertThat ( jexlSelector. getType ( ), is ( JexlSelector. TYPE ) )
12138	assertFalse ( shouldVote )
12139	assertFalse ( "hasFacet should return false", hasFacet )
12140	assertTrue ( setCookie == null )
12141	Assert. assertTrue ( m. isVoiceConfig ( ) )
12142	Assert. assertEquals ( 0, chronicle. getNumEvents ( 0, 2000 ) )
12143	assertEquals ( fixture, fixture. removeSuffix ( 0 ) )
12144	assertEquals ( "foo:val1bar:val2", result )
12145	assertNotNull ( relapse. getId ( ) )
12146	assertEquals ( 2, classUnderTest. getCompatibilityLevel ( ) )
12147	Assert. assertEquals ( b. length, 0 )
12148	assertEquals ( "string3", ObjectUtils. getValue ( object, "string3" ) )
12149	assertEquals ( 3, documentCount )
12150	assertEquals ( result, expectedResult )
12151	assertThat ( request. equals ( request2 ), is ( false ) )
12152	assertEquals ( expResult, result )
12153	assertEquals ( "", result )
12154	assertTrue ( mockNode. getEmbeddingMetaData ( ). equals ( node. getEmbeddingMetaData ( ) ) )
12155	assertEquals ( 1, breakpointID )
12156	assertEquals ( 105, bigInteger. intValue ( ) )
12157	Assert. assertEquals ( EJB_RETURN, bean. testIgnoreDefault ( ) )
12158	assertEquals ( 1, executedActionCount. get ( ) )
12159	assertEquals ( result, expecting )
12160	assertEquals ( "[1]", writer. toString ( ) )
12161	Assert. assertEquals ( expected, actual )
12162	Assert. assertEquals ( "12 位蔚��维 ��喂谓 伪��", t. format ( new Date ( 0 ) ) )
12163	assertNotNull ( "Expected a non-null response", result1 )
12164	assertThat ( argument. getValue ( ). getName ( ), is ( "step_with_array: <span class='step-parameter'>{1,2,3}</span>" ) )
12165	assertions. isGreaterThan ( actual )
12166	assertTrue ( binlogEvent. equals ( EventFactory. dml ( 1, 1, "f.1", 3, "a", "b", false, false, DMLType. INSERT ) ) )
12167	assertXMLEqual ( new StringReader ( "<body><outer>test</outer></body>" ), new StringReader ( html ( processed ) ) )
12168	assertNull ( gavSchema. repositoryGroup )
12169	assertTrue ( context. updateAndGetGameOver ( ) )
12170	assertNull ( property )
12171	assertThat ( "author should not exist", author, nullValue ( ) )
12172	assertEquals ( in. toString ( ), out. toString ( ) )
12173	assertFalse ( HttpMessageUtils. isText ( message ) )
12174	assertEquals ( "test", echo. echo ( "test" ) )
12175	assertTrue ( response. contains ( "EJB successfully retrieved HttpServletRequest reference from PolicyContext" ) )
12176	assertThat ( actual, is ( expected ) )
12177	assertTrue ( "Login empty", constraintViolations. size ( ) == 1 )
12178	assertTrue ( collection. add ( getElement ( ONE ) ) )
12179	assertEquals ( doc1, io. getDocumentById ( id1 ) )
12180	assertThat ( traversal. toList ( ), containsInAnyOrder ( likeVertex ( ). withTimId ( "too_soon" ), likeVertex ( ). withTimId ( "too_late" ), likeVertex ( ). withTimId ( "just_right" ) ) )
12181	assertEquals ( "response string", dbCon. callUpdateHandler ( "_design/designDocID", "functionName", "docID", params ) )
12182	assertEquals ( 29, fileSize )
12183	assertEquals ( label, bs. getVolumeLabel ( ) )
12184	assertTrue ( matches )
12185	assertThat ( errorResponse1, is ( errorResponse2 ) )
12186	assertNotNull ( result )
12187	editor. assertProblems ( )
12188	assertEquals ( settings, expected )
12189	Assert. assertEquals ( 0.0, a. transposeMultiply ( b ). subtract ( a. transpose ( ). multiply ( b ) ). getNorm ( ), 1.0e-15 )
12190	assertTrue ( isPropsSupportedByDefault )
12191	assertEquals ( 3, count )
12192	assertEquals ( 1, artists. size ( ) )
12193	assertEquals ( expected, result )
12194	assertTrue ( MatrixUtils. equals ( p, pinvRnk1, 0.05 ) )
12195	assertFailedCompilation ( diagnostics )
12196	assertActionKey ( HttpVerb. PUT, "root-collection-params", true, keys. get ( 0 ) )
12197	assertFalse ( hasPermission )
12198	Assert. assertEquals ( true, retval )
12199	Assert. assertTrue ( "CumulativeLoss is expected to be less than 800: " + udtf. getCumulativeLoss ( ), udtf. getCumulativeLoss ( ) < 800 )
12200	Assert. assertFalse ( "Get Profile  returned no results", jsonList. isEmpty ( ) )
12201	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
12202	assertEquals ( new File ( f, "src/myxcode" ), FolderLayout. getSourceFolder ( project ) )
12203	assertEquals ( 20L, count )
12204	Assert. assertEquals ( "http://rest.genenames.org/", location )
12205	Assert. assertEquals ( null, info. getPassword ( ) )
12206	assertEquals ( b10, b2 [ 0 ] )
12207	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
12208	assertNotNull ( tagUC. getId ( ) )
12209	assertEquals ( SecurityContext. class, writeMethod. getReturnType ( ) )
12210	assertEquals ( 1, application. informAttributeReplaced. get ( ) )
12211	assertThat ( result, is ( sameInstance ( foreignKeysRequest ) ) )
12212	assertEquals ( "Expected that after deleting a tab, it's still tied to the " + "tabGroup, the tabIndex is null, and the tab is marked as deleted", true, deletedFlag. booleanValue ( ) )
12213	assertTrue ( page. asXml ( ). indexOf ( "SUCCESS" )!= - 1 )
12214	assertEquals ( list, parser ( "// comment\\r ( str)" ). object ( "" ) )
12215	assertEquals ( 3, itemsets. size ( ) )
12216	assertEquals ( 'b', r. peekChar ( ) )
12217	assertEquals ( metadata. get ( "LoC" ), "9" )
12218	Assert. assertEquals ( "https://foo.com:8080/things/123/456{?param1,param2}{&param3,param4}#value5,value6", result )
12219	assertTrue ( like. passesFilter ( "id", item ) )
12220	assertThat ( schema, allOf ( containsString ( "input TypeCreationsInput {\\n" + "  short_multiValueList: [PropertyInput!]\\n" + "}\\n\\n" ), containsString ( "input TypeAdditionsInput {\\n" + "  short_multiValueList: [PropertyInput!]\\n" + "}\\n\\n" ), containsString ( "input TypeDeletionsInput {\\n" + "  short_multiValueList: [PropertyInput!]\\n" + "}\\n\\n" ), containsString ( "input TypeReplacementsInput {\\n" + "  short_multiValueList: [PropertyInput!]\\n" + "}\\n\\n" ) ) )
12221	assertVisitorSatisfied ( )
12222	assertThat ( actual, is ( equalTo ( expected ) ) )
12223	assertEquals ( 1, inverses. size ( ) )
12224	assertNull ( result. getItem ( COSName. R ) )
12225	Assert. assertEquals ( CLOUD_SDK_HOME, sdk. getPath ( ) )
12226	assertNotSame ( null, user )
12227	Assert. assertNull ( session. getClassLoader ( NAME1 ) )
12228	Assert. assertEquals ( admin. getWorkspaceId ( ), workspace. getId ( ) )
12229	assertEquals ( output, 29 )
12230	assertFalse ( beanDescriptor. isBeanConstrained ( ), "All classes should be unconstrained due to xml configuration but " + clazz. getName ( ) + "is not." )
12231	assertTrue ( r1 instanceof PublicCloneable )
12232	assertEquals ( "vertx", metrics. baseName ( ) )
12233	Assert. assertEquals ( 1, container. getComponentData ( container. getCurrentComponentId ( ), "NB_LINE" ) )
12234	assertEquals ( 0, serverStatus. getVolume ( ) )
12235	Assert. assertEquals ( "Count of customer", 2, res )
12236	Assert. assertEquals ( "{" + "\\"@odata.context\\":\\"../$metadata#ESAllPrim(32767)/PropertyDecimal\\"," + "\\"@odata.metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\"," + "\\"value\\":\\"34\\"}", resultString )
12237	assertEquals ( endpoint. getDurableSubscriptionName ( ), TEST_VALUE )
12238	Assert. assertTrue ( true )
12239	assertEquals ( 0, p. getMaskGroup ( ). getNodeCount ( ) )
12240	assertEquals ( 15663, HttpUtil. readChunkSize ( new ByteArrayInputStream ( s. getBytes ( ) ) ) )
12241	assertEquals ( Arrays. asList ( Arrays. asList ( 5, 3, 2, 4, 7 ), Arrays. asList ( 5, 3, 2, 7, 4 ), Arrays. asList ( 5, 3, 7, 2, 4 ), Arrays. asList ( 5, 7, 3, 2, 4 ), Arrays. asList ( 5, 3, 4, 2, 7 ), Arrays. asList ( 5, 3, 4, 7, 2 ), Arrays. asList ( 5, 3, 7, 4, 2 ), Arrays. asList ( 5, 7, 3, 4, 2 ) ), s. sequences ( root ) )
12242	Assert. assertFalse ( "Shouldn't exceed - " + LONG_TEXT_2. getBytes ( ). length, payload. isGlobalExceedLength ( ) )
12243	assertMockEndpointsSatisfied ( )
12244	assertEquals ( ShoppingProductChannel. LOCAL, channel. getChannel ( ) )
12245	assertArrayEquals ( message, serializer. serialize ( ) )
12246	assertEquals ( "Concat is TestTest", Text. valueOf ( "TestTest" ), _text )
12247	assertTrue ( dim. width < separator. getPreferredSize ( ). width )
12248	Assert. assertTrue ( testSupport. getDomainMasterLifecycleUtil ( ). areServersStarted ( ) )
12249	assertArrayEquals ( pkgClasses. toArray ( ), defaultClasses. toArray ( ) )
12250	assertEquals ( coordinate. getDatacenter ( ), ctx. dc ( ). getName ( ) )
12251	assertEquals ( 0, rpt. size ( ) )
12252	assertSame ( "Mismatched configured result", expected, actual )
12253	assertThat ( instance, is ( nullValue ( ) ) )
12254	assertEquals ( witness, tl )
12255	assertEquals ( "Configuration did not load correct property file", expected, actual )
12256	JSONAssert. assertEquals ( expected, response. getBody ( ), false )
12257	Assert. assertNotNull ( id )
12258	Assert. assertEquals ( pixel_EXPECTED, pixel_ACTUAL, eps05 )
12259	assertEquals ( 0.5, similarWordRatio, 0.000001 )
12260	assertEquals ( result, "10.2" )
12261	Assert. assertTrue ( set. toIdentityString ( ). contains ( "foo" ) )
12262	assertEquals ( "field.asMap()", p. toString ( ) )
12263	assertEquals ( UNPROCESSEABLE, response. getStatus ( ) )
12264	Assert. assertEquals ( "(aa_change_indel (aa_point_location (aa_char Cys) 123) del (aa_string Cys) ins (aa_string Arg))", aa_change_indel. toStringTree ( parser ) )
12265	Assert. assertEquals ( 1, find. getCount ( ) )
12266	Assert. assertEquals ( "04/04/2016 13:21:25 GMT+02:00", time )
12267	assertEquals ( "[Cookie{name='foo', value='bar', version='VERSION_0_NETSCAPE', path=Optional[/], domain=Optional[localhost.local], httpOnly=true, secure=false, maxAge=Optional[-1]}]", httpRequest. getEffectiveCookies ( ). toString ( ) )
12268	assertEquals ( "0.5", policy. getRate ( ). toString ( ) )
12269	Assert. assertEquals ( expectedTimelineSegments, timeline. getTimelineSegments ( ) )
12270	Assert. assertNotNull ( cm )
12271	assertNotNull ( model1!= model2 )
12272	assertEquals ( "Find by label with unknown label is still returning a list with one reading", 0, readings. size ( ) )
12273	assertEquals ( generatedName, extractedName )
12274	assertTrue ( out. contains ( "Logs not available for entity. Aggregation may not be complete, Check back later or try the nodemanager at localhost:1234" ) )
12275	assertEquals ( 2, nodes. size ( ) )
12276	assertThat ( MODEL. findNextTransition ( utc ). get ( ), is ( SUMMER_END_1947 ) )
12277	assertEquals ( expResult, result )
12278	Assert. assertTrue ( returnedVisibilities. isEmpty ( ) )
12279	assertEquals ( "master", result. get ( ) )
12280	Assert. assertEquals ( 2, segments. size ( ) )
12281	Assert. assertEquals ( sortStringToList ( expected ), sortStringToList ( discipline ) )
12282	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
12283	assertThat ( tokens, equalTo ( Arrays. < Object > asList ( "This is a test", "Another test", "No spaces", "Between these two" ) ) )
12284	assertNotNull ( result )
12285	assertMockEndpointsSatisfied ( )
12286	assertEquals ( count1. get ( ), count2. get ( ) )
12287	assertEquals ( USERNAME, profile. getId ( ) )
12288	assertFalse ( arrayType. isPrimitive ( ) )
12289	Assert. fail ( "distcp failure" )
12290	assertNotNull ( session )
12291	Assert. assertTrue ( createPodcast == CREATED_PODCAST_RESOURCE_ID )
12292	assertTrue ( exists )
12293	assertEquals ( sortedSinged, result )
12294	assertEquals ( body. toString ( ), POST_VAL )
12295	assertEquals ( expResult, result )
12296	assertSame ( t, TEST_2007_07_15 )
12297	assertEquals ( "[\\"bla\\",null,\\"blub\\"]", json )
12298	assertFalse ( status. equals ( HardActivityConstraint. ConstraintsStatus. FULFILLED ) )
12299	Assert. assertEquals ( pointQuadTree, nodeQuadTree )
12300	Assert. assertEquals ( 243, results. collect ( ). size ( ) )
12301	Assert. assertTrue ( irodsFileForSecondaryUser. canWrite ( ) )
12302	assertEquals ( "{\\"version\\": \\"3.0.0\\", \\"gauges\\": {}, \\"counters\\": {}, \\"histograms\\": {}, \\"meters\\": {}, \\"timers\\": {}}", bson. toJson ( ) )
12303	assertEquals ( 4, loadParent ( parentId ). getChildren ( ). size ( ) )
12304	assertEquals ( 1, result. size ( ) )
12305	assertNotNull ( actualSimplePage )
12306	assertNotNull ( perms )
12307	assertThat ( entry. isDeleted ( ), is ( true ) )
12308	Assert. assertEquals ( 2, lexicon. size ( ) )
12309	assertEquals ( "somefield:(%1$s)^5 anotherfield:(%1$s)^10", updatedSearchFormat )
12310	assertThat ( principals, hasItem ( new UserNamePrincipal ( "user" ) ) )
12311	JSONAssert. assertEquals ( expected, result. getResponse ( ). getContentAsString ( ), false )
12312	assertEquals ( 3832, fileWithSize. length ( ) )
12313	assertEquals ( 1.0, result, 0.1 )
12314	assertEquals ( expectedValue, generatedValue )
12315	assertThat ( session, is ( not ( nullValue ( ) ) ) )
12316	assertEquals ( expected, actual )
12317	assertThat ( url. toString ( ), is ( "http://localhost/foo/bar" ) )
12318	assertThat ( listener. getPartitionSpecFilter ( ), is ( "(p1='val1' AND p2=val2) OR (p1='val11' AND p2=val22) OR (p1='val111' AND p2=val222)" ) )
12319	Helpers. assertJson ( result. toString ( ), json )
12320	assertEquals ( new ModelId ( "Car", "com.bosch", "1.0.0" ), ModelId. fromPrettyFormat ( modelId ) )
12321	assertEquals ( testValue. trim ( ), result )
12322	assertEquals ( 2, auc. updatesSize ( ) )
12323	assertThat ( postRestart. processRecordsInput ( ), eqProcessRecordsInput ( expected. processRecordsInput ( ) ) )
12324	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
12325	Assert. assertFalse ( t. sameContent ( ) )
12326	assertEquals ( "693d7ad9-e671-4d66-9911-7f75f6380134", orderId )
12327	Assert. assertTrue ( isEqual ( distance, 0.25 ) )
12328	assertNotNull ( service )
12329	assertThat ( result, is ( false ) )
12330	assertEquals ( expectedPrefix, actualPrefix )
12331	assertNotNull ( regResponse )
12332	assertEquals ( obj, value )
12333	assertEquals ( "", dodgyBase. absUrl ( "relHref" ) )
12334	assertMockEndpointsSatisfied ( )
12335	assertThat ( cr. title ( ), is ( "Comune Amministrativo-1.2.3" ) )
12336	assertEquals ( "foo_value", s )
12337	assertEquals ( sb. toString ( ), retrievedValue )
12338	Assert. assertEquals ( 1, timeZoneDefinition. compare ( first, second ) )
12339	assertOrecValue ( orec, orecValue )
12340	assertNull ( nullConverted )
12341	assertEquals ( executioner. getMetaOpType ( opB ), CudaGridExecutioner. MetaType. NOT_APPLICABLE )
12342	Assert. assertTrue ( arg. getBeginColumn ( ) > pos )
12343	assertEquals ( 0, issues. size ( ) )
12344	assertTrue (! isMineInDirection )
12345	Assert. assertEquals ( true, objectSet. isEmpty ( ) )
12346	assertEquals ( "\\nHello\\r\\n\\n!", mustache. render ( null ) )
12347	assertEquals ( "1b5b33326d611b5b6d", Hex. encodeHexString ( TextUtils. green ( "a" ). getBytes ( ) ) )
12348	Assert. assertEquals ( sentinelHello1, sentinelHello2 )
12349	assertEquals ( stat, stat2 )
12350	assertEquals ( singleton ( "not" ), map. keySet ( ) )
12351	assertFalse ( "No clip information!", result. isEmpty ( ) )
12352	assertThat ( actual, is ( not ( sameJSONArrayAs ( expected, jsonComparator ) ) ) )
12353	assertEquals ( Level. INFO. toString ( ), level. toString ( ) )
12354	assertNoReposPathStartsWithSlash ( workingCopy )
12355	assertTrue ( check. hasBooleanVariable ( methodDeclarationNode ) )
12356	Assert. assertEquals ( "2*4*6*8*", result )
12357	assertThat ( comparator. compare ( axiom1, axiom2 ), is ( 1 ) )
12358	assertEquals ( "alle 2 sekunden", t. describe ( cron ) )
12359	assertEquals ( 10000D, pow )
12360	assertEquals ( expected, successors )
12361	assertEquals ( options, parser. parse ( args ) )
12362	Assert. assertNull ( userService. getUser ( 502 ) )
12363	assertEquals ( "Wrong size of result set.", 0, set. getSize ( ) )
12364	Assert. assertEquals ( new URI ( "http://somehost/./mypath" ), uri )
12365	assertEquals ( CompressionType. TarGz, compressionType )
12366	assertSame ( newMarker, selectedMarker )
12367	assertEquals ( expected, actual )
12368	assertEquals ( metrics. size ( ), 1 )
12369	endpoint. assertIsSatisfied ( )
12370	assertEquals ( timeFrameView, timeFrameEditor. view )
12371	assertEquals ( expectedNode, actualNode )
12372	Assert. assertEquals ( expectedMessage, new CompareTool ( ). compareDocumentInfo ( agpl, licensed ) )
12373	assertThat ( outcome. getIssues ( ), hasItems ( "#ISSUE-123", "#ISSUE-456", "#ISSUE-100", "#ISSUE-200" ) )
12374	assertTrue ( result. hasErrors ( ) )
12375	Assert. assertEquals ( "messageUri should be that of original message", WonMessageUriHelper. getSelfUri ( ), msgAndResponse. getMessageURI ( ) )
12376	Assert. assertTrue ( "Requests should be equal", first. matchesCapabilities ( capabilities ) )
12377	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
12378	assertEquals ( "1.0 * DOUBLECLOSED(+A, 'Foo') = 1.0.", rule. toString ( ) )
12379	assertTrue ( output, output. matches ( "(?s).*dolines 'times' in \\\\d+ms = " + times + ".*" ) )
12380	assertTrue ( "Alias setter is not working correctly", delegate. getAlias ( ). equals ( "myTestAlias" ) )
12381	assertFalse ( new JavaAssistClass ( fakeClass ). canInstantiate ( fakeClass ) )
12382	assertEquals ( "localhost", tchannel. getHost ( ). getCanonicalHostName ( ) )
12383	assertEquals ( valuesRead, valuesCopied )
12384	assertNotNull ( metadata )
12385	Assert. assertFalse ( this. manager. isConnected ( this. family1, this. person1 ) )
12386	assertEquals ( fixture, this. libshout. getFormat ( ) )
12387	assertEquals ( "vehLoc", route. getEnd ( ). getLocation ( ). getId ( ) )
12388	assertEquals ( expecting, found )
12389	Assert. assertTrue ( countDownLatch. await ( 1, TimeUnit. SECONDS ) )
12390	assertionsFailure ( resultMap )
12391	assertNull ( entry )
12392	assertEquals ( lastValue, "EndNode6" )
12393	assertTextEquals ( UIContextRootView. EVENT_PAYLOAD, UIScopedLabel. ID )
12394	assertEquals ( expectedMap, map )
12395	assertEquals ( "Hello :John :Doe", ResponseBodyInterpolator. interpolate ( "Hello :firstName :lastName", req ) )
12396	assertFalse ( listOutput. isEmpty ( ) )
12397	assertEquals ( LONG_STRING, new String ( trie2. get ( cat ) ) )
12398	assertEquals ( cp, "/foo" )
12399	assertEquals ( abort. isUserResourceLimitation ( ), duplicate. isUserResourceLimitation ( ) )
12400	Assert. fail ( )
12401	assertThat ( stringOf ( sut. toDevice ( msg ) ), is ( lua ( pinStateChangeMessage ( anyAnalogPin. pinNum ( ), anyValue ) ) ) )
12402	assertOut ( "function a() {\\n}" )
12403	assertEquals ( "Testing Course", courses. get ( 0 ). getName ( ) )
12404	Assert. assertEquals ( ( Float ) 1f, res )
12405	assertSearchYields ( index, "foo:aaa OR bar:bbb", "fooaaa", "fooccc" )
12406	arrays. assertContains ( description, null, values )
12407	Assert. assertEquals ( functionColumn, ( ( String [ ] ) result ) [ 0 ] )
12408	assertTrue ( success )
12409	assertSame ( "Expected object is not same as the result", expected, result )
12410	assertEquals ( expectedLong, value. longValue ( ) )
12411	assertNotNull ( error )
12412	assertEquals ( 0, n )
12413	sensei. assertWriteJson ( property )
12414	assertSame ( expr. accept ( visitor ), visitResult )
12415	assertPutFails ( role, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
12416	Assert. assertEquals ( "WINDOWS-1252", originalEncoding )
12417	Assert. assertEquals ( "2015-11-23 00:30", results )
12418	assertTrue ( Futures. getUnchecked ( collector ) )
12419	assertThat ( requestHeader ( UNDEFINED_HEADER, mockMatcher ). retrieveValue ( req ), is ( nullValue ( ) ) )
12420	assertPartialOrdered ( storeWithoutCommitThenDeleteWithoutCommit_expected ( stored, deleted ), readLatestJournalEntries ( ) )
12421	Assert. fail ( )
12422	assertEqualsJson ( expected, actual )
12423	assertEquals ( "Wrong number of visited nodes", nodeCount, visitor. getVisitedNodes ( ). size ( ) )
12424	assertThat ( results, hasItem ( new Result ( 49 ) ) )
12425	assertEquals ( resultMock, result )
12426	assertTrue ( result. isEmpty ( ) )
12427	assertVisitorSatisfied ( )
12428	assertEquals ( "5431", arr. reduceRight ( callbackfn ) )
12429	context. assertIsSatisfied ( )
12430	assertNull ( flow )
12431	assertEquals ( xs, ys )
12432	assertThat ( compatibility. getIncompatibility ( ), both ( containsString ( "time" ) ). and ( containsString ( "limits" ) ) )
12433	Assert. assertEquals ( "{\\"value\\":\\"abc\\"}", result )
12434	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
12435	assertEquals ( mockedX509Certificate, actualPublicKeyCertificate )
12436	assertEquals ( text. getText ( ), "" )
12437	Assert. assertEquals ( 10L, template. execute ( callable, retryState ). longValue ( ) )
12438	assertEquals ( "testing idx " + cls, gradIdx, grad. get ( cls ), EPS )
12439	assertEquals ( "Select script should match expected", expectedNestedConcatenations ( ), result )
12440	assertFactorization ( poly, UnivariateSquareFreeFactorization. SquareFreeFactorization ( poly ) )
12441	assertTrue ( constraints. getExpiryTime ( ) < System. currentTimeMillis ( ) )
12442	assertArray ( new double [ ] { 0.035, 0.135, 0.3, 0.529 }, scaleDouble ( 3, node1. getPotentials ( ) ) )
12443	assertEquals ( adjacentRoad, roads )
12444	assertNotNull ( kidless )
12445	assertEquals ( hashMap, CollectionsFactory. createMap ( TMap. entry ( 1, "value" ), TMap. entry ( 2, "value" ) ) )
12446	assertEquals ( data1, data2 )
12447	assertTrue ( state. prefix. length ( ) > ResourceNamePrefixState. MAX_PREFIX_LENGTH )
12448	Assert. assertTrue ( "Error : " + ex + " in :\\n" + test. extraJavaSourceFilesContents, false )
12449	Assert. assertEquals ( expected, actual )
12450	Assert. assertEquals ( "Unexpected result: " + result, expectedResult, result )
12451	Assert. assertFalse ( ( Boolean ) acceptOptions. get ( HTTP_SERVER_HEADER_ENABLED ) )
12452	assertEquals ( expected, actual )
12453	Assert. assertEquals ( json, writer. toString ( ) )
12454	Assert. assertEquals ( "true", result )
12455	assertNotNull ( entity. getId ( ) )
12456	UmaTestUtil. assert_ ( pat )
12457	Assert. assertEquals ( mixer. use ( service. getClass ( ) ), service )
12458	assertEquals ( expResult, result )
12459	Assert. assertArrayEquals ( doubles, grd_ACTUAL [ i ], DELTA_06 )
12460	assertThat ( infos. length, is ( 0 ) )
12461	assertEquals ( "newli01", liList. get ( 2 ). getId ( ) )
12462	assertTrue ( retryPolicy. getRetryCondition ( ). shouldRetry ( null, e, 1 ) )
12463	assertThat ( mid. get ( ), is ( firstMid ) )
12464	assertEquals ( s, r. toString ( ) )
12465	assertTrue ( processor. canProcessEvent ( event ) )
12466	assertTrue ( result )
12467	assertEquals ( ( float ) now, Float. valueOf ( output ), 100 )
12468	assertEquals ( 0, result. getMappingsCount ( ) )
12469	assertEquals ( position, returnedPosition )
12470	assertEquals ( "nextval('myseq')", new SQLSerializer ( new Configuration ( SQLTemplates. DEFAULT ) ). handle ( nextval ). toString ( ) )
12471	assertEquals ( "bar", jsonConfiguration. getString ( "foo" ) )
12472	Assert. assertEquals ( null, new CompareTool ( ). compareByContent ( output, cmp, outputPath, "diff" ) )
12473	Assert. assertTrue ( false )
12474	assertEquals ( new ModelId ( "Test", "com.bosch.si", "1.0.2" ), ModelId. fromPrettyFormat ( modelId ) )
12475	assertEquals ( "TokenExpirationDate not equal to value set by setTokenExpirationDate()", newExpireDate, sut. getTokenExpirationDate ( ) )
12476	assertMessageAndPath ( constraintViolationCreationContextList. get ( 0 ), message, pathWith ( ). property ( "foo" ). property ( "bar", true, null, 3 ) )
12477	assertTrue ( sink. getInvalidConfiguration ( ) )
12478	assertEquals ( expected, actual )
12479	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
12480	assertEquals ( "foo", s )
12481	assertEquals ( result, false )
12482	assertDtoAndMapConstructorAreSame ( 0 )
12483	assertJsonEquals ( ImmutableMap. of ( "topic", "test-topic", "webpush", data ), message )
12484	assertThrows ( IllegalStateException. class, funnel :: run )
12485	assertEquals ( 9, result. getProperties ( ). size ( ) )
12486	assertBrownGCD ( gcd, a, b )
12487	assertEquals ( "Base for strings is wrong", "192.168.0.1", parsed )
12488	assertEquals ( 1.0f / 60.0f, entry. getEffectiveDurationHours ( ), Float. MIN_NORMAL )
12489	assertEquals ( HttpStatus. SC_OK, response. getStatusLine ( ). getStatusCode ( ) )
12490	assertEquals ( "onekey2val2|", hash )
12491	Assert. assertEquals ( 2, batches. size ( ) )
12492	assertEquals ( 1, ksession. fireAllRules ( ) )
12493	assertAnnotations ( 1, Coordinate. class, new TestCoordinate ( 0, "51-30,26 N, 000-07,39 W", DMS, TYPE_POINT_COORDINATES_0_1275_51_507222222222225 ) )
12494	Assert. assertFalse ( context. getResult ( ) )
12495	runner. assertAllFlowFilesTransferred ( AbstractBigQueryProcessor. REL_FAILURE, 1 )
12496	assertEquals ( someObject. someField, "test" )
12497	assertThat ( task. getCloser ( ), nullValue ( ) )
12498	assertEquals ( "All responses should be handled eventually", 0, doneLatch. getCount ( ) )
12499	Assert. assertNotNull ( d )
12500	assertTrue ( dao. tableExists ( ) )
12501	assertTrue ( e. getCause ( ). getMessage ( ). contains ( "ELY05125" ) )
12502	tester. assertErrorMessages ( "Wrong username or password" )
12503	result. assertIsSatisfied ( )
12504	assertThat ( prop. satisfiesConstraints ( value ), is ( true ) )
12505	assertEquals ( 0, tableNames. size ( ) )
12506	assertNotNull ( error )
12507	assertEquals ( expected, result, 0.000001d )
12508	assertEquals ( 1, result )
12509	Assert. assertTrue ( "Single namespace is not supported by protobuf", false )
12510	org. junit. Assert. assertEquals ( expected, actual )
12511	assertFalse ( album1. equals ( album2 ) )
12512	assertTrue ( newRecipe. getTags ( ). isEmpty ( ) )
12513	assertEquals ( "http://localhost.jenkins/git/notifyCommit?" + "url=http%3A%2F%2Fsome.stash.com%2Fscm%2Ffoo%2Fbar.git" + "&branches=refs%2Fheads%2Fmaster" + "&sha1=sha1&TARGET_BRANCH=production", captor. getValue ( ). getURI ( ). toString ( ) )
12514	assertNotNull ( injector )
12515	assertEquals ( expResult, result )
12516	assertTrue ( ( ( BooleanType ) respParam. getParameter ( ). get ( 0 ). getValue ( ) ). booleanValue ( ) )
12517	assertEquals ( 3, cause. length )
12518	assertEquals ( "Echo Text Doesn't Match!", "echo this...", response. getMessageBody ( ) )
12519	assertEquals ( "A", z )
12520	Assert. areEqual ( ConstantsTest. dbmode, zdalDataSource. getDbmode ( ), "init zdalDataSource,then getdbmode" )
12521	assertThat ( result, hasSize ( 0 ) )
12522	assertTrue ( "Snapshot with greater timestamp is greater", greaterSnapshot. compareTo ( snapshot ) > 0 )
12523	assertThat ( bolt. srcDestFieldMapping. size ( ), is ( 2 ) )
12524	assertTrue ( sba instanceof ThickSBA )
12525	Assert. assertTrue ( "The canonicalized conversion from " + filename + " does not match the baseline: " + cxtm + " " + baseline, TestFileUtils. compareFileToResource ( cxtm, baseline ) )
12526	assertEquals ( PMMLUtils. VERSION, model. getVersion ( ) )
12527	assertNotNull ( prov )
12528	assertEquals ( expected, result )
12529	assertEquals ( getLabel ( ), 0.0, prod. minus ( b ). getRMS ( ), TOLERANCE )
12530	assertions. isNotEmpty ( )
12531	assertThat ( os. size ( ), not ( 0 ) )
12532	assertEquals ( "double mapper serialization is wrong", expected, actual )
12533	assertNotNull ( res )
12534	assertEqualLines ( "invalid updating", definedContent, newContent. toString ( ) )
12535	assertEquals ( "very obese", string0 )
12536	assertEquals ( "UNIin_md_", orgSectionHasher. hash ( section ) )
12537	assertEquals ( Orientation. typeOf ( 7 ), orientation )
12538	Assert. assertEquals ( expResult, result )
12539	Assert. assertTrue ( e. getCause ( ). getMessage ( ). contains ( "Fake Exception" ) )
12540	assertArrayEquals ( expected, actual )
12541	Assert. assertTrue ( Models. isomorphic ( actual, expected ) )
12542	assertTrue ( metaMessage. getDurationMs ( ) > 0 )
12543	assertEquals ( instance. size ( ), i )
12544	assertEquals ( "8.2.0", revision )
12545	helper. assertAttributeValue ( country1. getCountryCode ( ), invoiceLine. getM_AttributeSetInstance ( ), attr_Country )
12546	assertThat ( "not default branch", ret, equalTo ( "not default" ) )
12547	assertNotNull ( shareAnalysisSubmissionWithProject. getId ( ) )
12548	Assert. assertNotNull ( obj )
12549	assertEquals ( input. parseString ( ), expected )
12550	assertConnect ( )
12551	assertThat ( cursor. asListRemaining ( ), hasItems ( "movies/TheMatrixRevolutions", "movies/TheMatrixReloaded", "movies/TheMatrix" ) )
12552	assertTrue ( Arrays. equals ( getPacketData ( "00 00 FF 00 00 05" ), version. serialize ( ) ) )
12553	Assert. assertEquals ( 0, a. getNosi ( ) )
12554	assertEquals ( sb. toString ( ), whereSb. toString ( ) )
12555	assertEquals ( str, "" )
12556	assertTextEquals ( "[S1]|#k1b|k1 = v1 # comment|", cm )
12557	assertTrue ( true )
12558	assertThat ( ip. isMoreFragmentsSet ( ), is ( true ) )
12559	assertEquals ( NUM_WRITERS * ENTRIES, countHLog ( logfile, fs, conf ) )
12560	assertEquals ( 2, branch_conditions. size ( ) )
12561	assertFalse ( translationResult. getResult ( ). booleanValue ( ) )
12562	assertEquals ( 0, r. avalie ( avaliaveis, null ). getReal ( ), 0.0001f )
12563	assertEquals ( 2, shacl. nbResult ( gg ) )
12564	assertFalse ( entity. isValid ( ) )
12565	assertThat ( description. toString ( ), is ( "<1> sheet(s)" ) )
12566	assertEquals ( anchorListItem, workbenchMenuCompactNavBarView. getMenuItemWidgetMap ( ). get ( menuId ) )
12567	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. FUNDING_READ_LIMITED )
12568	mock. assertIsSatisfied ( )
12569	assertThat ( target. getQueueId ( ), is ( new Integer ( 1234 ) ) )
12570	assertEquals ( "Hello Tim", resp. getResponseBody ( ). trim ( ) )
12571	Assert. assertEquals ( expected, actual )
12572	assertSelectResultKeys ( selector, "abc", "edf" )
12573	assertEquals ( Coin. valueOf ( 11350 ), request. tx. getFee ( ) )
12574	assertNotNull ( MessageInteraction. reader ( "KSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "KCXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "KPXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
12575	assertNotNull ( result )
12576	assertEquals ( expected, actual )
12577	assertNull ( map )
12578	assertEquals ( "CN=QuoVadis Global SSL ICA, OU=www.quovadisglobal.com, O=QuoVadis Limited, C=BM", importedCertificate. getIssuer ( ) )
12579	assertThat ( ConnectionHeaders. fromString ( "\\n{\\n  \\"key\\"\\t:\\f\\"value\\"\\n,\\n\\"foo\\"   :   \\"bar\\"\\n}\\n\\n" ), is ( expected ) )
12580	assertTrue ( events. size ( ) == 3 )
12581	assertEquals ( "Steven (Frederic) Seagal", victim. readLiteralString ( ) )
12582	assertTrue ( acceptor. validate ( controllerMethod, controllerInstance ) )
12583	assertEquals ( DUMMY_URL, endpoint )
12584	assertEquals ( "out must be a Failure", out. isFailure ( ), true )
12585	assertThat ( tester. request. getParameter ( "aaa" ), is ( "111" ) )
12586	assertEquals ( expected, result )
12587	Assert. assertTrue ( pinyinSet1. size ( ) > 1 )
12588	assertEquals ( "ABC", ObjectInspector. substitute ( ObjectInspector. reVarSubstPattern, "${X~3}", new ZorkaConfig ( props ) ) )
12589	assertFalse ( error )
12590	Assert. assertEquals ( new TableName ( "bar", "foo" ), manipulation. getOriginalTableName ( ) )
12591	assertEquals ( 6, outSize )
12592	assertTrue ( learner. getModelFinal ( equiv )!= null )
12593	assertThat ( pathsInSource, hasItems ( pathInSource1, pathInSource23 ) )
12594	Assert. assertNull ( new CompareTool ( ). compareByContent ( out, cmp, destinationFolder ) )
12595	assertTrue ( "no events should be found", events. isEmpty ( ) )
12596	Assert. assertEquals ( 2, count. get ( ) )
12597	Assert. assertTrue ( validator. validSequence ( 0, inputSequence, outcomesSequence, outcome ) )
12598	assertTrue ( "Syslog audit log should be created", ops. exists ( TEST_SYSLOG_AUDIT_LOG_ADDRESS ) )
12599	Assert. assertEquals ( 0, comparator. compare ( id1, id2 ) )
12600	assertEquals ( 0, argList. size ( ) )
12601	assertTrue ( conn. isClosed ( ) )
12602	Assert. assertEquals ( "scope:stream:subscribe?path=/2010-04-01/Events&appParams=foo%3Dbar", scope. getPayload ( ) )
12603	assertEquals ( "pong!", reply. body ( ) )
12604	assertEquals ( "(| [= foo] [= bar] [= baz])", m. toString ( ) )
12605	assertNotNull ( result )
12606	assertEquals ( generatedJavascript, expectedJavascript )
12607	assertNotNull ( oracleEngine )
12608	assertTrue ( desc. isEmpty ( ) )
12609	assertNotNull ( result )
12610	assertTrue ( "isPresent should return true if only element not present is not required " + "when RequireAll annotation is used.", testView. isPresent ( ) )
12611	assertNull ( future. get ( ) )
12612	Assert. assertEquals ( 2000, JSONUtils. getInt ( jsonObject, "salary" ) )
12613	assertFalse ( "Didn't rewrite when sanitize was '0'.", BODY_CONTENT. equals ( rewrite ( gadget, BODY_CONTENT ) ) )
12614	Assert. assertEquals ( 2, metaUpdate. addKeepers ( dc, cluster, new ShardTbl ( ). setShardName ( shard ) ) )
12615	Assert. fail ( "Expecting MathIllegalStateException" )
12616	assertTrue ( 12345.0d == d. asFloat8 ( ) )
12617	assertThat ( q, is ( "meetingId=10" + "&participants%5B0%5D.age=20" + "&participants%5B0%5D.date=2001-01-01" + "&_participants%5B0%5D.list=" + "&participants%5B0%5D.name=%E5%B1%B1%E7%94%B0" + "&participants%5B1%5D.age=30" + "&participants%5B1%5D.date=1991-01-01" + "&_participants%5B1%5D.list=" + "&participants%5B1%5D.name=%E9%88%B4%E6%9C%A8" ) )
12618	assertTrue ( evaluator. evaluate ( ae ) )
12619	assertEquals ( Result. PASS, or. apply ( pathData ) )
12620	assertEquals ( 1, x. size ( ) )
12621	assertThat ( results, contains ( mrId ) )
12622	assertTrue ( versionFileLib. exists ( ) )
12623	assertThat ( vm. isCheckedOut ( child2. getPath ( ) ), is ( false ) )
12624	Assert. assertEquals ( "value", System. getProperty ( "rocketmq.namesrv.domain" ) )
12625	assertNotNull ( "No events received", event )
12626	assertThat ( root. getString ( ( NamespaceRegistry ) null, encoder, encoder ), is ( "/" ) )
12627	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
12628	assertEquals ( 0, intList. size ( ) )
12629	assertEquals ( "public boolean java.lang.Object.equals(java.lang.Object)", mthd. toString ( ) )
12630	assertObjectEquals ( "{'in':'header',name:'If-Unmodified-Since',type:'string'}", pi )
12631	assertEquals ( expected, result. getTime ( ) )
12632	Assert. assertEquals ( this. shouldBeEqual, Arrays. equals ( this. target1, this. target2 ) )
12633	assertEquals ( 1, type. getCapacityDimensions ( ). getNuOfDimensions ( ) )
12634	assertGraph ( "" + "digraph G1 {\\n" + "  label = \\"10\\\\\\" tall\\";\\n" + "  subgraph cluster2 {\\n" + "    style = filled;\\n" + "    color = lightgrey;\\n" + "    ElectricHeater -> Heater;\\n" + "  }\\n" + "  CoffeeMaker -> Heater;\\n" + "  CoffeeMaker -> Pump;\\n" + "}\\n" )
12635	assertFalse ( loadconstraint. fulfilled ( context ) )
12636	Assert. assertTrue ( "MetadataTableConfigHelper.configure incorrectly populated the Table Properties.", this. tableProperties. isEmpty ( ) )
12637	assertThat ( result, is ( instanceOf ( Success. class ) ) )
12638	assertTrue ( barrier. isAborted ( ) )
12639	assertThat ( specification. getUnits ( ), is ( MILLI ( SECOND ) ) )
12640	assertEquals ( 18, branch_conditions. size ( ) )
12641	assertEquals ( 3, paragraphElement. getElementCount ( ) )
12642	assertEquals ( "Both filters should be used", 17, size )
12643	Assert. assertEquals ( Status. NOT_FOUND. getStatusCode ( ), resp. getStatus ( ) )
12644	assertEquals ( new SchemaAndValue ( Schema. BOOLEAN_SCHEMA, true ), avroData. toConnectData ( avroSchema, true ) )
12645	assertTrue ( result. contains ( "\\"1-0-v0\\":{\\"type\\":\\"LCD\\",\\"values\\":[\\"1\\",\\"2\\"]}" ) )
12646	Assert. assertEquals ( true, null == partition. calculate ( "2012-12-31" ) )
12647	Assert. fail ( "No operation was supplied with multiple service operations - this should fail!" )
12648	assertEquals ( mk. hashCode ( ), mk2. hashCode ( ) )
12649	Assert. assertEquals ( expected, name )
12650	Assert. assertEquals ( HttpServletResponse. SC_SERVICE_UNAVAILABLE, response. getStatusLine ( ). getStatusCode ( ) )
12651	assertEquals ( this. classifier. getDefault ( ), this. classifier. classify ( new RuntimeException ( "Foo" ) ) )
12652	assertFalse ( attributes. isNew ( ) )
12653	Assert. assertNotNull ( addressResultsDto )
12654	assertEquals ( "[5.0, 4.0, 3.0, 2.0, 1.0]", IteratorToGeneratorAdapter. adapt ( range ). toCollection ( ). toString ( ) )
12655	assertEquals ( 144., violation, 0.01 )
12656	assertEquals ( Float. valueOf ( 81.56891f ), testVal )
12657	assertNull ( expr. exec ( new PmExprExecCtxt ( pmConversation ) ) )
12658	assertTrue ( Arrays. deepEquals ( centuryAndTitlesFromInput, centuryAndTitlesFromHadoop ) )
12659	assertThat ( generated, is ( "" ) )
12660	assertEquals ( expected, results )
12661	assertTrue ( details. hasCompensated ( ) )
12662	assertTrue ( "Location not defined", handler. isLocationDefined ( ) )
12663	assertThat ( "interface inherited static method", obj, equalTo ( 44 ) )
12664	Assert. assertTrue ( "No results when search for people", success )
12665	assertEquals ( list ( a, b ), fr. getAuthors ( ) )
12666	assertEquals ( "readonly", exp. s )
12667	assertTrue ( result. isSuccess ( ) )
12668	assertEquals ( expectedResult, actualResult )
12669	assertEquals ( "Failed to generate for loop with declaring initializer and counting expression", FOR_DECLARE_INITIALIZER_COUNTING_EXP, s )
12670	assertThat ( transferer, is ( not ( nullValue ( ) ) ) )
12671	assertThat ( actual, is ( "ABC_ID" ) )
12672	assertEquals ( "Base for doubles is wrong", Double. valueOf ( 3.5d ), parsed )
12673	assertEquals ( IP, profile. getId ( ) )
12674	assertEquals ( 2, getCount ( ) )
12675	assertEquals ( 1, books. size ( ) )
12676	assertEquals ( expected, got )
12677	Assert. assertEquals ( 1, getCountingDummyPersister ( ). getSaveCount ( ) )
12678	assertEquals ( 166, fixedRate )
12679	assertThat ( testOutcome. getCompleteName ( ), is ( "My user story:some_test" ) )
12680	assertEquals ( nextBackoffMillis, factor * 1000 )
12681	assertTrue ( isSorted )
12682	Assert. assertTrue ( res. isEmpty ( ) )
12683	assertTrue (! result. isEmpty ( ) )
12684	assertEquals ( "Float value does not match", bookmark. getVisitRatio ( ), loadedBookmark. getVisitRatio ( ) )
12685	assertThat ( result, containsInAnyOrder ( "Jane", "Adam" ) )
12686	assertEquals ( json, r. toString ( ) )
12687	Assert. assertTrue ( myRecordList. size ( ) == 2 )
12688	assertEquals ( tokenList ( "foo", 7, "bar", 4, Indentation. Punctuation. INDENT, "baz", 4, Indentation. Punctuation. INDENT, "bah", 1, "bah", Indentation. Punctuation. OUTDENT, Indentation. Punctuation. OUTDENT ), parser. parse ( "foo \\\\ \\n\\\\\\n bar \\n  baz\\n   bah bah ", mode ) )
12689	assertNull ( sessionFactory. getCurrentSession ( ). get ( TaskElement. class, taskGroupWithOneChild. getId ( ) ) )
12690	assertArrayEquals ( "odd terminated compact decode fail", expected, CompactEncoder. unpackToNibbles ( test ) )
12691	assertEquals ( new SubmissionSet ( ), result )
12692	assertEquals ( hexString. toUpperCase ( ), result )
12693	assertTrue ( "loader must have addons: fails in security restricted contexts because the loader " + "has no access to the provider configuration file", loader. iterator ( ). hasNext ( ) )
12694	PrismAsserts. assertEquals ( "System configuration was stored incorrectly", after, read )
12695	assertNotNull ( Member. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "QUXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
12696	assertSame ( q1, qr )
12697	Assert. assertEquals ( TEST_CONTENT, payLoad )
12698	Assert. assertSame ( o, p. getExpectedValue ( ) )
12699	assertTrue ( "incorrect value", aNumber. toString ( ). equals ( result ) )
12700	Assert. assertEquals ( expected, actual )
12701	assertTrue ( model. contains ( rxn [ 0 ] ) ^ model. contains ( rxn [ 1 ] ) )
12702	Assert. assertEquals ( "org.wildfly.arquillian:wildfly-arquillian-container-domain-remote:2.2.0.Final", adapter. dependencies ( ) [ 0 ] )
12703	assertFalse ( resp )
12704	Assert. assertEquals ( Rfc1349TrafficClass. IPTOS_LOWCOST. value ( ), socket. getTrafficClass ( ) )
12705	assertEquals ( "bar", p. deref ( ) )
12706	assertEquals ( true, classUnderTest. getSavePreferencesImmediately ( ) )
12707	assertEquals ( c1, c2 )
12708	assertEquals ( expResult, result )
12709	assertEquals ( r1, r2 )
12710	assertCorrectBinaryString ( data, expected )
12711	assertFalse ( clusterStatus. isInSafeMode ( false, DEFAULT ) )
12712	assertRaw ( actual )
12713	Assert. assertEquals ( element. getText ( ), "click me" )
12714	assertEquals ( "163.152.23.222", ip. asChars ( ) )
12715	Assert. assertEquals ( mockUserDetails, userDetails )
12716	Assert. assertFalse ( searchCallback. searched )
12717	Assert. assertEquals ( c. getValue ( ), "unchecked" )
12718	assertEquals ( "test", echo. echo ( "test" ) )
12719	context. assertIsSatisfied ( )
12720	Assert. assertEquals ( "dragged", destination. getText ( ) )
12721	assertNotNull ( Transcription. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "TRXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
12722	Assert. assertTrue ( kernelServices. isSuccessfulBoot ( ) )
12723	assertThat ( "should not register user with existing mail address", registered, is ( false ) )
12724	assertTrue ( "unexpected value", value )
12725	assertNull ( result )
12726	assertInvocations ( invocations )
12727	Assert. assertThat ( builder, CoreMatchers. is ( CoreMatchers. any ( BaseWssFactoryBuilder. class ) ) )
12728	TestUtils. assertEquals ( interesado, interesadoCreado )
12729	assertThat ( testExecutor. invokeTest ( 5001L, ImmutableMultimap. of ( ) ), is ( true ) )
12730	assertEquals ( transformedQuery, expectedQuery )
12731	assertThat ( po. get ( ). getRegisteredCount ( ), is ( 200 ) )
12732	assertTrue ( "Response status should be CREATED. Current value is \\"" + response. getClientResponseStatus ( ) + "\\"", response. getClientResponseStatus ( ) == ClientResponse. Status. CREATED )
12733	Assert. assertNull ( prewritePrimaryRow ( ) )
12734	assertEquals ( expResult, result )
12735	assertEquals ( MessagePackGenerator. class, generator. getClass ( ) )
12736	assertTrue ( true )
12737	assertThat ( axioms, hasItem ( axiom ) )
12738	assertEquals ( tags, taggedMetric. getTags ( ) )
12739	assertEquals ( expected, json )
12740	assertNotNull ( form )
12741	assertTrue ( sut. isAccountNonLocked ( ) )
12742	assertTrue ( ( boolean ) testedMethod. invoke ( tasksManagerImpl, STARTING_BYTE_OF_4_BYTE_CHAR ) )
12743	assertEquals ( "(1,2)", asSequenceStr ( result ) )
12744	assertTrue ( traceHeaderLatch. await ( 3, TimeUnit. SECONDS ) )
12745	assertEquals ( expectedSet, fraudSet )
12746	assertTrue ( rs. next ( ) )
12747	assertEquals ( count + 1l, session. from ( $ ( u ) ). count ( ) )
12748	Assert. assertEquals ( fsAccess. serviceHadoopConf. get ( "foo" ), "FOO" )
12749	assertThat ( output. format ( "failed", "", "failure" ), Matchers. is ( "\\033[31mfailure\\033[0m" ) )
12750	Assert. fail ( "Was able to create two fields with same alias" )
12751	assertThat ( sortDependencies. toString ( ), is ( "DependencySortOrder{childElementNames=[groupId, scope]}" ) )
12752	assertThat ( frame, nullValue ( ) )
12753	assertEquals ( "numericallySafeSum() failed!", 140.5, FunctionUtil. numericallySafeSum ( numbers ), 0.00001 )
12754	assertTokensEqual ( of ( integer ( 1 ) ), lastSeenTokens. get ( ) )
12755	assertNull ( result )
12756	assertEqualsQR ( A, qr. factor ( new DenseMatrix ( A ) ) )
12757	assertThat ( writer. toString ( ), equalTo ( "onetwothree" ) )
12758	assertEquals ( expectedPosition, actualPosition, 0 )
12759	assertEquals ( 406, urlConnection. getResponseCode ( ) )
12760	Assert. assertEquals ( ApplicationEntity. Status. INITIALIZED, applicationAction. getStatus ( ) )
12761	arrays. assertContainsOnly ( description, actual, other )
12762	assertEquals ( 0, query. count ( ) )
12763	Assert. assertEquals ( "foo", XmlUtils. getBody ( child ) )
12764	assertTrue ( future. isDone ( ) )
12765	assertEquals ( prefix, manager. getLogFileNamePrefix ( ) )
12766	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm", result ) )
12767	assertMultilinesEquals ( "GEODCRS[\\"Tokyo\\",\\n" + "  DATUM[\\"Tokyo\\",\\n" + "    ELLIPSOID[\\"Bessel 1841\\", 6377397.155, 299.1528128, LENGTHUNIT[\\"metre\\", 1]]],\\n" + "    PRIMEM[\\"Greenwich\\", 0.0, ANGLEUNIT[\\"degree\\", 0.017453292519943295]],\\n" + "  CS[ellipsoidal, 2],\\n" + "    AXIS[\\"Latitude (B)\\", north, ORDER[1]],\\n" + "    AXIS[\\"Longitude (L)\\", east, ORDER[2]],\\n" + "    ANGLEUNIT[\\"degree\\", 0.017453292519943295]]", wkt )
12768	Assert. assertTrue ( newPointAvailable )
12769	assertEquals ( 2, statistics. size ( ) )
12770	assertTrue ( lt. interpret ( Version. valueOf ( "1.0.0" ) ) )
12771	assertThat ( result, is ( false ) )
12772	assertXsltOutput ( "D", "I" )
12773	assertThat ( "Count of customer", res, is ( 3 ) )
12774	Assert. assertEquals ( "�注�� 3 注砖�专��", t. format ( new Date ( 315569259747L * 3L ) ) )
12775	Assert. assertEquals ( 1, s. x )
12776	assertEquals ( HttpStatus. SC_MOVED_TEMPORARILY, response. getStatus ( ) )
12777	assertEquals ( r1. hashCode ( ), r2. hashCode ( ) )
12778	assertFalse ( Intersects. lineIntersectsCircle. call ( a, c ) )
12779	Assert. assertTrue ( pss. toString ( ). contains ( Integer. toString ( Calendar. getInstance ( ). get ( Calendar. YEAR ) ) ) )
12780	assertEquals ( acceptor, typedMap. get ( accKey ) )
12781	assertEquals ( history, unmarshalledHistory )
12782	assertEquals ( check. toString ( ), 0, check. size ( ) )
12783	assertEquals ( "\\"222\\"'
12784	bigDecimals. assertLessThan ( description, null, BigDecimal. ONE )
12785	assertKeyNotFound ( KEYPAIR_NAME )
12786	assertNameFired ( null, "xx" )
12787	assertEquals ( signatureValue, certificate. getSignature ( ) )
12788	Assert. assertTrue ( hasIndexHashKeyEqualCondition )
12789	assertNotNull ( "Date cannot be null", date )
12790	assertEquals ( expected, parser. getPatternKeySet ( ) )
12791	assertThat ( result. size ( ), is ( 1 ) )
12792	rule. assertScenarioEnded ( )
12793	assertThat ( sentryApiUrl. toString ( ), is ( uri + "api/" + projectId + "/store/" ) )
12794	assertRows ( sequencedPath, 3, TEST_COLUMNS )
12795	assertEquals ( 1, changeEvent [ 0 ]. getElapsedTime ( ) )
12796	assertTrue ( entity. getId ( ) > 0 && entity. getArea ( ) == - Double. MIN_VALUE )
12797	Assert. assertEquals ( VAL6 [ j ] [ 0 ] + "->" + j, VAL6 [ j ] [ 1 ], result. getText ( ) )
12798	assertEquals ( JacksonDeserializer. class, deserializer. getClass ( ) )
12799	Assert. assertEquals ( true, LdapUtil. authenticate ( user, password ) )
12800	assertNotNull ( result )
12801	assertEquals ( "doit avoir la valeur vrai", violations. iterator ( ). next ( ). getMessage ( ) )
12802	assertEquals ( 1, dataStore. getIndices ( MOCK_DATA_TYPE_1 ). length )
12803	assertTrue ( id. equals ( "5qRsgXWRJZXr" ) )
12804	assertEquals ( expected, filterAclEntriesByAclSpec ( existing, aclSpec ) )
12805	Assert. assertEquals ( "i am a block of content\\n\\n\\ni am another block of content", html. trim ( ) )
12806	Assert. assertTrue ( result. ok ( ) )
12807	assertEquals ( "^(\\\\*)$", regex )
12808	assertTrue ( h. getNewURL ( ). equals ( "/NewSimpleRegex" ) )
12809	assertArrayEquals ( new String [ ] { "1.2.40.0.13.1.1.99.27.1.2" }, matches ( query, Tag. SOPInstanceUID ) )
12810	assertTrue ( cloned [ 0 ]!= cloned [ 1 ] )
12811	assertTrue ( ok )
12812	assertTrue ( TEST_UTIL. getHBaseAdmin ( ). isTableEnabled ( TABLENAME ) )
12813	assertEquals ( 2, context. getAssociatedActivities ( ). size ( ) )
12814	assertResolvedModelIsNull ( )
12815	assertThat ( infoTextManager. getNewsText ( ), is ( text ) )
12816	assertEquals ( "wrong message", expectedMessage, noc. toString ( ) )
12817	Assert. assertTrue ( count > 0 )
12818	assertNull ( patientInfo. getName ( ) )
12819	assertEquals ( expected, header. getValue ( ) )
12820	Assert. assertFalse ( json. has ( CONTROLLER_NAME ) )
12821	assertLog ( Log. INFO, "test info argument argument2 argument3" )
12822	Assert. assertArrayEquals ( expected, actual. toArray ( ) )
12823	Assert. assertTrue ( "raml: " + c. getLastReport ( ). toString ( ), c. getLastReport ( ). isEmpty ( ) )
12824	assertTrue ( clientInfoService. isUseProxiesEnabled ( ) )
12825	assertTrue ( metricsService. metricsNames ( ). size ( ) > 0 )
12826	Assert. assertNull ( clientManager. get ( channel ) )
12827	assertThat ( cloths, IsIterableContainingInAnyOrder. < String > containsInAnyOrder ( "shoes", "pants", "shirts", "socks" ) )
12828	assertEquals ( i, fromList )
12829	assertNotNull ( testObj. getPanel ( ) )
12830	assertEquals ( 1, results. size ( ) )
12831	assertEquals ( expectedReprovisionPolicy, individualEnrollment. getReprovisionPolicy ( ) )
12832	assertInstanceOf ( "baseCRS", ProjectedCRS. class, crs. getBaseCRS ( ) )
12833	assertTrue ( emptyMap. isEmpty ( ) )
12834	assertPlanMatches ( project )
12835	Assert. assertEquals ( null, _c. convert ( "" ) )
12836	assertTrue ( criteria. getResultList ( ). containsAll ( criteriaCTO. getResultList ( ) ) )
12837	assertEquals ( 1, result. get ( ). getCount ( ) )
12838	assertEquals ( expected, splitter. split ( expression ) )
12839	Assert. assertEquals ( "Wrong toString()", "msgVersion: 1 objectType: org.opendaylight.yang.gen.v1.urn" + ".opendaylight.openflow.common.action.rev150203.actions.grouping.Action msgType2:" + " org.opendaylight.yang.gen.v1.urn.opendaylight.openflow.common.action.rev150203.action" + ".grouping.action.choice.OutputActionCase", key1. toString ( ) )
12840	assertTrue ( Pattern. matches ( HTableDescriptor. VALID_USER_TABLE_REGEX, tn ) )
12841	Assert. assertFalse ( task. isInitialized ( ) )
12842	assertIterationsEqual ( out1, out2 )
12843	assertEquals ( "build-test", subject. safeProjectName ( ) )
12844	assertions. doesNotContain ( new long [ 0 ] )
12845	assertTrue ( functionsWithName. isEmpty ( ) )
12846	assertEquals ( expected, uri. toString ( ) )
12847	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED, status )
12848	assertEquals ( "num metrics in registry", 3, r. metrics ( ). size ( ) )
12849	assertEquals ( "", propertyValue )
12850	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
12851	Assert. assertEquals ( setOf ( new KeyStatistics < String > ( "Toyota", 6 ), new KeyStatistics < String > ( "Honda", 6 ), new KeyStatistics < String > ( "Ford", 6 ), new KeyStatistics < String > ( "BMW", 2 ) ), keyStatistics )
12852	Assert. assertEquals ( dim. getNumCols ( ), 200 )
12853	assertTrue ( action. isExecuted ( ) )
12854	Assert. assertEquals ( URI. create ( "https://192.168.124.49:8443/won/resource/atom/cbfgi37je6kr" ), atomURI )
12855	assertTrue ( lock. lockConnection. getMetaData ( ). getURL ( ). contains ( database ) )
12856	assertEquals ( "POLYGON ((0 0, 0 3, 1 3, 1 0, 0 0))", ClobType. getString ( c ) )
12857	assertEquals ( testResource, dummyResource )
12858	assertEquals ( arr, resultArr )
12859	assertEquals ( r3, mostRelevantResource )
12860	assertTrue ( result. contains ( "movies" ) )
12861	assertTrue ( jedis. exists ( "foo2" ) )
12862	assertNotNull ( query )
12863	Assert. assertEquals ( "Date " + date + " was not correctly truncated to year", dateTruncExpected, dateTruncActual )
12864	assertNotNull ( Member. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "CHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
12865	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"no\\"?><root>" + "<firstArray><value>firstArrayValue0</value><secondArray><value>secondArrayValue0-0</value></secondArray>" + "<secondArray><value>secondArrayValue0-1</value></secondArray></firstArray>" + "<firstArray><value>firstArrayValue1</value><secondArray><value>secondArrayValue1-0</value></secondArray>" + "<secondArray><value>secondArrayValue1-1</value></secondArray></firstArray><firstArrayRenamed>" + "<secondArrayRenamed><thirdArrayRenamed><value>thirdArrayValue0-0-0</value></thirdArrayRenamed>" + "<thirdArrayRenamed><value>thirdArrayValue0-0-1</value></thirdArrayRenamed></secondArrayRenamed>" + "<secondArrayRenamed><thirdArrayRenamed><value>thirdArrayValue0-1-0</value></thirdArrayRenamed>" + "<thirdArrayRenamed><value>thirdArrayValue0-
12866	assertNull ( t2 )
12867	assertThat ( allDomainPermissions. isEmpty ( ), is ( true ) )
12868	assertThat ( "��瑷�璇ヨ�淇��规��浣�涓��卞奖��浜�3琛�", effect, equalTo ( 3 ) )
12869	assertNotNull ( field. getFill ( null, null ) )
12870	Assert. assertTrue ( "this should be a file", irodsFile. isFile ( ) )
12871	assertEquals ( 1, count. get ( ) )
12872	Assert. assertNotNull ( pojo. testManager )
12873	Assert. assertEquals ( entity, result )
12874	assertArrayEquals ( sniffed, modified. getPacket ( ) )
12875	assertEquals ( "<b>BAR</b>", output )
12876	assertThat ( message, containsString ( "until 2007-12-03T10:15:30Z, " ) )
12877	assertTrue ( true )
12878	Assert. assertEquals ( FileType. MZXML, fileType )
12879	assertTrue ( PropertiesTestUtils. getProperties ( propertyLoader ). isEmpty ( ) )
12880	org. junit. Assert. assertEquals ( 4, count. get ( ) )
12881	assertRowsWithCustomRowFactory ( sequencedRootPath )
12882	Assert. assertNull ( description. getPattern ( ) )
12883	assertTrue ( result. passedValidation ( ) )
12884	Assert. assertEquals ( x, y )
12885	assertThat ( component. getLastActivity ( ), is ( latestActivity ) )
12886	assertThat ( getProcessingError ( ), containsTypeError ( "domainNamespaces", "slice", "bool" ) )
12887	assertTrue ( "Record should be valid", isValid )
12888	assertEquals ( expResult, result )
12889	assertEquals ( 2, commentlList. size ( ) )
12890	assertEquals ( arr, resultArr )
12891	assertEquals ( 1, stopwatch. getCount ( ) )
12892	Assert. assertNotNull ( addressResultsDto )
12893	assertEquals ( value, genericSolutionAttribute. getAttribute ( solution ) )
12894	assertEquals ( 1, selectJobByProcessInstanceId ( processInstance. getId ( ) ). getRetries ( ) )
12895	assertThat ( converter. toJavaObject ( new HiveCharWritable ( hiveChar ) ), is ( ( Object ) hiveChar ) )
12896	assertEquals ( Subscription. State. OK, subscription. getState ( ) )
12897	assertThat ( mid, is ( - 1 ) )
12898	Assert. assertFalse ( this. mocker. getComponentUnderTest ( ). delete ( this. patient ) )
12899	assertEquals ( "abc", result )
12900	assertEquals ( dataType, header. getDataType ( ) )
12901	runner. assertValid ( )
12902	Assert. assertNotNull ( s )
12903	Assert. assertFalse ( "Invalid response from interceptor", result )
12904	assertNull ( attrs. get ( "someInt", Integer. class ) )
12905	assertE ( "�尖�尖�尖�尖��" + "��121��" + "��131��" + "��111��" + "�尖�尖�尖�尖��" )
12906	assertEquals ( name, result )
12907	Assert. assertEquals ( "Error updating public file", file. getVersion ( ), version + 1 )
12908	assertEquals ( "GBP 3.57", test. toString ( ) )
12909	assertFocused ( idView )
12910	assertSame ( reply1, reply2 )
12911	assertEquals ( ++ usage, statsUsageService. getUsage ( StatsUsageType. FULLTEXT ) )
12912	assertEquals ( 1, resultComparator. compare ( ucc1, ucc2 ) )
12913	assertEquals ( new Dimension ( 50, 50 ), ac. getValue ( ). getSize ( ) )
12914	assertEquals ( 1, n )
12915	assertEquals ( 1, ksession. fireAllRules ( ) )
12916	assertFalse ( executableHelper. overrides ( subType, superType ), "Literature#getTitle() is package-private. It should not be possible to override it from a different package." )
12917	assertSingleIssue ( issues, 7, "For statement.", "10min" )
12918	assertDtos ( expected, actual )
12919	assertEquals ( String. format ( Hive2SimbaDatabaseMeta. JDBC_ODBC_S, testDbName ), baseSimbaDatabaseMeta. getURL ( "", "", testDbName ) )
12920	assertEquals ( "unsignedByte", shortForm )
12921	assertEquals ( "Expected 0 results!", 0, count )
12922	assertEquals ( "ALTER TABLE testtable DROP IF EXISTS PARTITION (country='US')", query )
12923	assertThat ( findBook, is ( new Book ( "The Hobbit", 293 ) ) )
12924	assertNull ( "we should have not found an item. '" + item + "'", item )
12925	assertEquals ( statementExecutedLog. getSqlException ( ), readLog. getSqlException ( ) )
12926	assertEquals ( DataTransferStatus. REJECTED, response. getStatus ( ) )
12927	Assert. assertNull ( tree. getLabel ( data ) )
12928	Assert. assertEquals ( result. toStringWithoutTime ( ). trim ( ), expectedResult. trim ( ) )
12929	assertTrue ( disp. getBinding ( ) instanceof SOAPBinding )
12930	assertEquals ( false, foo. _boolean )
12931	Assert. assertNotNull ( referrers )
12932	assertEquals ( "Must parse 6 element", 6, message. getObservations ( ). size ( ) )
12933	assertThat ( result, is ( "'\\r'\\n" ) )
12934	assertNotNull ( result )
12935	assertEquals ( result. size ( ), 1 )
12936	assertEquals ( "{\\"relationship\\":\\"SELF\\",\\"url\\":{\\"value\\":\\"http://orcid.org\\"},\\"workExternalIdentifierType\\":\\"DOI\\",\\"workExternalIdentifierId\\":{\\"content\\":\\"peer-review:subject-external-identifier-id\\"}}", converter. convertTo ( peerReview. getSubjectExternalIdentifier ( ), null ) )
12937	assertEquals ( Sets. newHashSet ( "table2" ), service. getTablesToRepair ( cluster, unit ) )
12938	Assert. fail ( "Should have thrown exception" )
12939	assertTrue ( result. isResultOK ( ) )
12940	Assert. assertTrue ( result. isEmpty ( ) )
12941	assertMapTest ( form )
12942	assertTrue ( latch. await ( 4, SECONDS ) )
12943	assertNotNull ( "its faulty if the master has no value, but there is a translation", review )
12944	assertEquals ( "INVALID_SUBJECT", voValidationService. validate ( request ). getErrorCode ( ) )
12945	assertEquals ( expResult, result )
12946	assertNotNull ( "There are no options for toggling column visibility but there should be.", getColumnHidingToggle ( nestedGrid ) )
12947	assertNegatedNameToken ( ast, "bwahaha" )
12948	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 1, warnings. size ( ) )
12949	assertObjectEquals ( "{name:'foo'}", t )
12950	assertTrue ( LibUsb. getApiVersion ( ) >= 0x1000102 )
12951	assertArrayEquals ( new byte [ ] { 1, 2, 3, ( byte ) 255 }, formatter. decodeFromString ( "010203ff" ) )
12952	assertEquals ( 3, orderService. getOrders ( patient, outPatient, testOrderType, false ). size ( ) )
12953	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( 5L ), mapper. readBitemporalDate ( columns, "ttTo" ) )
12954	validator. assertValid ( value )
12955	assertThat ( errors, not ( hasFieldErrors ( "familyNamePrefix" ) ) )
12956	assertEquals ( "bar1,bar2", containerRequest. getHeaderString ( "foo" ) )
12957	assertTrue ( errorRate >= 0 && errorRate <= 1 )
12958	assertEquals ( 1, rpt. size ( ) )
12959	assertTrue ( actual instanceof SimpleJaxb )
12960	assertNull ( validatingPlugin )
12961	assertEquals ( "4.0", response. getHeader ( HttpHeader. ODATA_VERSION ) )
12962	Assert. assertEquals ( "newId", newActualId )
12963	Assert. assertEquals ( 0, solution. getUnassignedJobs ( ). size ( ) )
12964	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
12965	assertIsAborted ( tx )
12966	Assert. assertEquals ( TestModel. C4. class. getDeclaredField ( "f1" ), f1 )
12967	assertNotNull ( "could not find contract resource", url )
12968	assertTrue ( folder. getProgressState ( ) == ProgressState. IN_PROGRESS )
12969	assertEquals ( result, AuthenticationStatus. AUTHENTICATED, "Authentication existing user with correct credentials should be successful." )
12970	Assert. fail ( "Exception should be thrown" )
12971	Assert. assertThat ( QueryBuilder. getInstance ( ). buildFilterQuery ( co, "", 0, 0, 0, 1, null ), equalTo ( expected ) )
12972	assertNull ( new RandomNodeSelector ( IncludeNoNodes. getInstance ( ) ). selectNode ( database ) )
12973	assertEquals ( "test-value", request. getHeaders ( ). get ( "x-custom-header" ) )
12974	assertThat ( model. getChild ( model. getRoot ( ), 1 ), equalTo ( prueba2 ) )
12975	assertEquals ( "boolean", shortForm )
12976	assertThat ( sw. toString ( ), is ( equalTo ( "\\n    b" ) ) )
12977	assertSeq ( new String [ ] { "<a/>" }, "reverse(//a)" )
12978	assertThat ( asset. formatAttributes ( ). get ( "contributors" ), is ( singletonList ( "Foo <foo@example.com> (http://www.example.com/foo)" ) ) )
12979	assertEquals ( 1, entry. getTotalResults ( ) )
12980	assertSame ( "http://blob", packageUri )
12981	assertMatches ( written, resolved )
12982	assertEquals ( expected, result )
12983	assertEquals ( expectedAst, ast. dump ( "" ) + "\\n" )
12984	assertEquals ( "", digest )
12985	Assert. assertFalse ( entryList. isEmpty ( ) )
12986	Assert. assertEquals ( expected, actual )
12987	assertEquals ( "Unexpected city count", ( long ) expectedCount, result. size ( ) )
12988	assertThat ( result, is ( false ) )
12989	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
12990	Assert. assertArrayEquals ( u, MathArrays. unique ( x ), 0 )
12991	assertThat ( iterImpl. asDocument ( ), is ( b. build ( ) ) )
12992	assertEquals ( "Hello: World: \\"Long field name which is more than 32 characters, Bye\\": ", wire. toString ( ) )
12993	Assert. assertEquals ( env. get ( "java.naming.factory.initial" ), "com.sun.jndi.dns.DnsContextFactory" )
12994	assertEquals ( "http://1.2.3.4:1000/foo/bar", url )
12995	assertEquals ( version, "12" )
12996	assertEquals ( expected, cls )
12997	assertThat ( builder, IsNot. not ( ( Builder ) null ) )
12998	assertEquals ( String. valueOf ( ReturnCode. NO_DIGITS. code ( ) ), eventCaptor. getValue ( ). getParameter ( "rc" ) )
12999	assertThat ( name. getQualifiedName ( ), is ( "aaa.bbb.server.meta.ccc.DddMeta" ) )
13000	assertEquals ( Long. toString ( event. getServerAdapter ( ). getContentLength ( ) ), result )
13001	Assert. assertEquals ( hello, helloFromIrods )
13002	assertFalse ( isDisabled )
13003	assertNotNull ( result )
13004	assertEquals ( true, classUnderTest. getShowToolTips ( ) )
13005	assertThat ( box. has ( thing ), is ( false ) )
13006	runner. assertNotValid ( )
13007	assertMockEndpointsSatisfied ( )
13008	assertTrue ( longArray. length == 3 )
13009	assertEquals ( TextUtil. readUTF8 ( path ), generator. getResult ( ) )
13010	assertEquals ( "Translation failed", PelopsException. class, pelopsException. getClass ( ) )
13011	Assert. assertTrue ( contains )
13012	assertEquals ( arr, resultArr )
13013	Assert. assertEquals ( sum, 285 )
13014	assertFalse ( Strings. isNullOrEmpty ( resp ) )
13015	Assert. assertEquals ( driver ( ). getTitle ( ), "We Arrive Here" )
13016	assertNull ( output )
13017	assertEquals ( "Failed to parse: @[5]", pe. getMessage ( ) )
13018	assertEquals ( expected, actual )
13019	assertTrue ( resultComparator. compare ( fd1, fd2 ) == 0 )
13020	assertNull ( "testIOExceptionInWriterConstructor error!!!", reader. getBloomFilter ( ) )
13021	assertEquals ( g1, g2 )
13022	assertTrue ( matchResult )
13023	assertThat ( description. toString ( ), is ( "cell at \\"G1\\" contained <\\"Text\\"> expected <\\"XXX\\"> sheet \\"Sheet1\\"" ) )
13024	assertTrue ( sta. validateStrokeAndFill ( new PenStroke ( ), new SolidFill ( ) ) )
13025	assertThat ( supplier. authFor ( "foobar" ), is ( nullValue ( ) ) )
13026	assertEquals ( SimpleScore. of ( 42 ), scoreDirector. calculateScore ( ) )
13027	Assert. assertEquals ( testString, HtmlToXMLUtil. unescapeToXML ( testString ) )
13028	Assert. assertFalse ( "A Pig IOException was expected", true )
13029	assertCollection ( response )
13030	assertEquals ( "password_one_time_reset", modelAndView. getViewName ( ) )
13031	assertEquals ( "abc", injected. val )
13032	assertInvocations ( client. getTwoPhaseCommitInvocations ( ) )
13033	assertEquals ( roles, roleListWrapper. getRoles ( ) )
13034	Assert. fail ( "expected exception. Found " + resource )
13035	Assert. assertEquals ( "涓�|浠�涔�", words )
13036	assertThat ( reportGenerator. generateJsonUserSingleJob ( usageStatistics ), equalTo ( "{\\n" + "  \\"memoryUsagePrice\\": \\"1.78\\",\\n" + "  \\"totalFileReadingMb\\": \\"37,826,596\\",\\n" + "  \\"cpuUsagePrice\\": \\"10.33\\",\\n" + "  \\"diskUsageprice\\": \\"415.15\\",\\n" + "  \\"totalPrice\\": \\"427.26\\",\\n" + "  \\"totalFileWritingMb\\": \\"130,388\\",\\n" + "  \\"totalMemoryUsedMbs\\": \\"29,343,671,531\\",\\n" + "  \\"totalCpuTimeSpent\\": \\"6426:17:03\\",\\n" + "  \\"jobsProcessed\\": \\"1381\\",\\n" + "  \\"user\\": \\"cvop\\",\\n" + "  \\"totalVcoresUsed\\": \\
13037	assertThat ( entityId, is ( equalTo ( ( Object ) 100 ) ) )
13038	assertEquals ( "application/xml", response. getEntity ( ). getContentType ( ). getValue ( ) )
13039	assertEquals ( "2008-02-07_00:30", s )
13040	assertEquals ( 0, logRecordList. size ( ) )
13041	assertThat ( top3RichCustomerList, contains ( "Diana", "Andrew", "Chris" ) )
13042	assertNotNull ( menuBarContainerTool )
13043	assertTrue ( entities2. get ( 0 ) == null && entities2. get ( 1 )!= null && entities2. get ( 3 ) == null )
13044	assertEquals ( expected, actual )
13045	Assert. assertEquals ( expected, wire. read ( ). text ( ) )
13046	assertTrue ( pass )
13047	assertEquals ( n, c )
13048	assertEquals ( "Number of columns returned was not expected", 4, table. getModel ( ). getColumnCount ( ) )
13049	assertEquals ( "select sql_cache survey.NAME from SURVEY survey order by survey.NAME asc", toString ( query ) )
13050	Assert. assertEquals ( devices, loadedDevices )
13051	assertMockEndpointsSatisfied ( )
13052	Assert. assertEquals ( 0, resultado )
13053	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5 ) ) )
13054	assertEquals ( schema, schema2 )
13055	assertTrue ( 100 <= duration && duration <= 10000 )
13056	assertEquals ( expected, actual )
13057	Assert. assertEquals ( PriorityBean. PRIORITY, job. getPriority ( ) )
13058	Assert. assertTrue ( concept. isEmpty ( ) )
13059	assertEquals ( "|Monday|Tuesday|Wednesday|Thursday|Friday", days )
13060	Assert. assertEquals ( createValueNode ( 42 ), result )
13061	assertTrue ( matcher. match ( msg, rule ) )
13062	assertEquals ( "LitecoinURI['address'='LQz2pJYaeqntA9BFB8rDX5AL2TTKGd5AuN','amount'='987654321000000000','label'='Hello World','message'='Be well']", testObject. toString ( ) )
13063	assertNull ( sub. receiveMessage ( ) )
13064	assertMockEndpointsSatisfied ( )
13065	Assert. assertTrue ( combiSet. nbOfCombinationsAbove ( 2 ) == 4 )
13066	assertFalse ( victim. isValid ( box, null ) )
13067	Assert. assertEquals ( invokers, fileredInvokers )
13068	assertEquals ( DispatcherType. REQUEST, dispatcherType )
13069	assertThat ( str. length ( ), greaterThan ( Integer. valueOf ( data. size ( ) ) ) )
13070	assertNotNull ( stream )
13071	assertNotNull ( result )
13072	assertTrue ( simpleValue1. equals ( simpleValue2 ) )
13073	assertEquals ( "returned parsed text value was incorrect", expectedReturn, StringUtils. searchAndColor ( text, searchText, dummyColorInt ) )
13074	Assert. assertEquals ( connectionTimeout, victim. create ( ). getConnectionTimeout ( ) )
13075	assertEquals ( frequencyListJSON, etalonFrequencyListJSON )
13076	mock. assertIsSatisfied ( )
13077	assertTrue ( true )
13078	assertEquals ( mod, modSer )
13079	assertE ( "�尖�尖�尖�尖��" + "�� �� ��" + "�� �� ��" + "��   ��" + "�尖�尖�尖�尖��" )
13080	assertThat ( r, hasEntry ( "int", ( Object ) 3 ) )
13081	Assert. assertEquals ( count, 0 )
13082	assertEquals ( "Input key/value json should match output key/value json", objectMapper. readTree ( inputJson ), objectMapper. readTree ( outputJson ) )
13083	assertEquals ( VerifyFailType. WARN, pluginParameters. verifyFailType )
13084	assertEquals ( "[someDataStore] testVM/Renamed.vmdk", testDiskFileNameString )
13085	Assert. assertEquals ( "test create schema with dollar prefixed field", HttpStatus. SC_CREATED, resp. getStatus ( ) )
13086	assertMetric ( "ReqPerSec", "1.99871" )
13087	assertArrayEquals ( expected, actual )
13088	assertNotNull ( result )
13089	Assert. assertEquals ( clientConfig. getUrls ( ), clientConfig2. getUrls ( ) )
13090	assertThat ( taxFactor, equalTo ( TaxService. DEFAULT_TAX_FACTOR ) )
13091	assertTrue ( validator. isValid ( ) )
13092	assertEquals ( lintresult. getIssues ( ). toString ( ), 0, lintresult. getIssues ( ). size ( ) )
13093	assertEquals ( connector, query. getConnection ( ) )
13094	assertStack ( new Object [ ] { null, 3L, null }, stack )
13095	Assert. assertEquals ( expected, actual )
13096	assertThat ( RequiredValidator. INSTANCE. validate ( parameters, "aaa" ), is ( nullValue ( ) ) )
13097	assertScriptEquality ( expectedScript, actualScript )
13098	assertEquals ( "http://apache.org/shindig?foo#foo=bar&hello=world", builder. toString ( ) )
13099	assertEquals ( 0, numEdits )
13100	assertEquals ( expected, actual )
13101	assertEquals ( emptyList ( ), result )
13102	files. assertIsDirectoryContaining ( INFO, actual, JAVA_SOURCE )
13103	Assert. assertEquals ( 100., time, 0.01 )
13104	assertEquals ( response. getStatus ( ), Status. SUCCESS. getValue ( ) )
13105	assertNotNull ( uMapping )
13106	assertEquals ( 1, testSet. getTestResults ( ). size ( ) )
13107	Assert. isTrue ( true )
13108	Assert. assertEquals ( path, "dir" + File. separatorChar + "dir2" )
13109	assertThat ( sw. toString ( ), is ( equalTo ( "    bcd\\n    test" ) ) )
13110	Assert. assertNotNull ( verbSynset. getVerbFrameFlags ( ) )
13111	assertEquals ( Long. valueOf ( 100 ), post. getSequenceId ( ) )
13112	assertThat ( messages, not ( hasItem ( "All observations should have a performer" ) ) )
13113	assertThat ( el, sameInstance ( fs1 ) )
13114	assertEquals ( "" + "organisation:   FOO-ORG\\n" + "source:         RIPE\\n" + "\\n" + "organisation:   BAR-ORG\\n" + "source:         RIPE\\n" + "\\n", response )
13115	Assert. assertEquals ( Integer. class, clazz )
13116	assertTrue ( ex. getMessage ( ). equals ( "Dee on initial crawl!" ) )
13117	assertEquals ( 404, responseGet. getStatus ( ) )
13118	assertEquals ( DataStatus. ACTIVE, empty. getCycleLockStatus ( ) )
13119	assertThat ( effect, is ( 1 ) )
13120	assertThat ( validations. getErrors ( ), hasSize ( 1 ) )
13121	assertTrue ( syncOpt. isDbVersionPresent ( ) )
13122	assertNotNull ( transplant. getId ( ) )
13123	assertTrue ( new File ( path + "\\\\lock" ). exists ( ) )
13124	assertEquals ( "a<V>\\n", found )
13125	assertThatReferenceSetIsEmpty ( referenceSet )
13126	assertEquals ( "DECORATED Hello World!", result )
13127	Assert. assertNotNull ( "did not find collection", actual )
13128	assertEquals ( 22, groupMembers. size ( ) )
13129	assertEquals ( expected, result )
13130	assertEquals ( "Springfield", exp. evaluate ( person ) )
13131	assertTrue ( returnedDomainEntity. getBooleanField ( ) == SAMPLE_BOOLEAN_ATT_VALUE )
13132	assertEquals ( JBossSAMLURIConstants. NAMEID_FORMAT_PERSISTENT. get ( ), nameIDPolicy. getFormat ( ). toString ( ) )
13133	assertEquals ( repo, diConfig. getRepository ( ) )
13134	assertEquals ( "bob", val )
13135	assertThat ( eventCollector. events ( DIGITAL ), hasItems ( eventFor ( digitalPin ( 2 ) ). withValue ( true ) ) )
13136	assertEquals ( "isMinimized() doesn't return the same value as the previous setMinimized()", true, gadget. isMinimized ( ) )
13137	assertEquals ( "http://github.com:suryagaddipati/cancan", template )
13138	assertEquals ( "ProductTypes that only differ in case should be equivalent", 0, comparator. compare ( type1, type2 ) )
13139	assertEquals ( pos. getErrorIndex ( ), 0 )
13140	assertThat ( l, contains ( 9, 8, 7 ) )
13141	assertEquals ( parser. parse ( expectedOutput ), devent. payload )
13142	assertEquals ( expected, got )
13143	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff_width01_" ) )
13144	assertEquals ( "212.34", e. eval ( ). toPlainString ( ) )
13145	assertThat ( html, is ( "<input type=\\"hidden\\" name=\\"w1\\" id=\\"w1\\" value=\\"2014-10-01\\" />" ) )
13146	assertEquals ( 14, res )
13147	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, Right. VIEW, this. doc ) )
13148	assertEquals ( m1, m2 )
13149	assertEquals ( "integer", type )
13150	assertEquals ( "Wrong decoded value", decodedValue, config. getEncodedString ( KEY_PREFIX ) )
13151	assertThat ( subjectOf ( axiom ), isOptionalOf ( atom ) )
13152	assertEquals ( message, baseObject, activity. getBaseObject ( ) )
13153	assertEquals ( expResult, result )
13154	assertParse ( code )
13155	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. ORCID_BIO_EXTERNAL_IDENTIFIERS_CREATE )
13156	assertTrue ( fs. mkdirs ( testFolder ) )
13157	assertEquals ( BuilderFactory. start ( ). addBinary ( "a", ( byte ) 5, "The quick brown fox jumped over the lazy dogs.". getBytes ( "US-ASCII" ) ). build ( ), doc )
13158	assertTrue ( result. contains ( "wavSampleRate" ) )
13159	assertEquals ( 1, service. prepare ( query ). countEntities ( fo ) )
13160	assertEquals ( calculator. LEFT_TURN, calculator. computeTurnCost ( ee + 1, es, StreetMode. CAR ) )
13161	assertEquals ( "application2.properties", bootConf )
13162	assertEquals ( false, namedCluster. isHdfsHostEmpty ( null ) )
13163	Assert. assertNotNull ( personStructure )
13164	assertEquals ( data, ( ( H2HTestData ) target. getDataManager ( ). get ( new Parameters ( ). setLocationKey ( locationKey ). setContentKey ( contentKey ) ) ). getTestString ( ) )
13165	assertEquals ( Arrays. asList ( "col1", "col2" ), subset. getProperty ( "key5" ) )
13166	Assert. assertFalse ( isNewRequired )
13167	assertTrue ( "Waited less than 700ms: " + waited, waited < 700 )
13168	Assert. assertEquals ( "{ \\"_id\\" : { \\"$oid\\" : \\"50b8d63414f85401b9268b99\\"}, \\"label\\" : \\"Hello\\", \\"visible\\" : false, \\"image\\" :  null }", argument. getValue ( ). toString ( ) )
13169	assertNotEquals ( ctx1, ctx2 )
13170	assertFalse ( purchase. getTicket ( ). isDiscount ( ) )
13171	assertEquals ( 0, metadata )
13172	assertFalse ( validator. validate ( Meta, PUT ). passedValidation ( ) )
13173	assertEqualMarginals ( fg, bf, bp, 1e-12 )
13174	assertOut ( "/**\\n * @export\\n */\\nB.prototype.http_$$ns_apache_org$2017$custom$namespace__b = function() {\\n  var self = this;\\n  function c(f) {\\n  };\\n  c(org.apache.royale.utils.Language.closure(this.http_$$ns_apache_org$2017$custom$namespace__b, this, 'http://ns.apache.org/2017/custom/namespace::b'));\\n}" )
13175	assertTrue ( roles. size ( ) > 0 )
13176	Assert. isTrue ( grades. size ( ) > 0 )
13177	assertNull ( item. getList ( ) )
13178	assertEquals ( 6. * 3600. + 6. * 60., sec, 0.01 )
13179	assertEquals ( sample, sample2 )
13180	assertThat ( result. getPayload ( ), is ( instanceOf ( ShippingCostCalculatorResponse. class ) ) )
13181	assertOut ( "/**\\n * @export\\n */\\nB.prototype.b = function() {\\n  var self = this;\\n  function c(f) {\\n    c(org.apache.royale.utils.Language.closure(self.d, self, 'd'));\\n  };\\n  \\n}" )
13182	assertEquals ( ( short ) 0x0009, s. m0_0 ( ) )
13183	assertEquals ( html, sanitized )
13184	Assert. assertTrue ( true )
13185	assertEquals ( expectedSpec, opts. getIndexingSpecification ( ) )
13186	Assert. assertFalse ( "The mail onEvent should not send any exception if properly sent", thrown )
13187	assertEquals ( expectedURI, gotURI )
13188	assertTrue ( indexEngine. isIndexReady ( cluster, TEST_INDEXER ) )
13189	assertThat ( arguments. getAgent ( ), equalTo ( "funky-bot-2" ) )
13190	assertCaret ( 0 )
13191	assertEquals ( acc, acc2, 1e-6 )
13192	assertThat ( output, containsString ( "Value at " ) )
13193	assertTrue ( javaScript. indexOf ( "\\"bootstrap\\":\\"3.1.1\\"" ) > 0 )
13194	assertThat ( dto. isLegacyUser ( ), is ( false ) )
13195	assertTrue ( userCanReadBranch )
13196	assertEquals ( endOfDay ( base. plusDays ( 20 ) ), absoluteTime )
13197	Assert. assertFalse ( handle )
13198	assertEquals ( testPoint, refPoint )
13199	assertNull ( e. abortShutdownReason ( ) )
13200	assertEquals ( 0, p. getStart ( ) )
13201	assertNotNull ( ciudad )
13202	Assert. assertTrue ( authenticator. logout ( ) )
13203	assertEqualsIgnoreWhitespace ( expected, real )
13204	assertEquals ( null, factory. newNameResolver ( URI. create ( "dns:///localhost:443" ), ARGS ) )
13205	assertArrayEquals ( overwrite, readAllBytes ( gfs. getPath ( "/dir/file.txt" ) ) )
13206	assertTrue ( exceptionTestResults. getExceptionThrown ( ) )
13207	assertEquals ( false, result )
13208	assertEquals ( expectedResult, expectedResult )
13209	assertEquals ( 0, count )
13210	assertThat ( sel, is ( datatype ) )
13211	arrays. assertContainsOnly ( description, actual, array ( "Luke", "Yoda", "Leia", null ) )
13212	assertThat ( JDBCAdapter. SQL_TIMESTAMP. from ( PlainTimestamp. of ( 2012, 7, 1, 0, 0, 0 ). plus ( 210, ClockUnit. NANOS ) ), is ( ts ) )
13213	assertEquals ( rdiv, answer )
13214	assertEquals ( "hello", filterResult. getValue ( ) )
13215	assertNotNull ( createdBreaker )
13216	assertNotNull ( parent )
13217	assertFalse ( result. passedValidation ( ) )
13218	assertThat ( encoded, containsString ( "{\\"linkId\\":\\"value123\\",\\"_linkId\\":{\\"extension\\":[{\\"url\\":\\"http://123\\",\\"valueString\\":\\"HELLO\\"}]}}" ) )
13219	assertEquals ( objectName, expectedObjectName )
13220	assertThat ( actualShardNumber, is ( 0 ) )
13221	assertThat ( underTest. isValid ( new TestObj ( "parentRole", Collections. singleton ( "childRole" ) ), context ), is ( false ) )
13222	assertThatSql ( query, is ( "SELECT t1.c1,t2.c2 FROM table1 AS t1 " + "INNER JOIN table2 as t2 " + "CROSS JOIN table3 as t3 ON t1.c0 = t3.c0 ON t1.c0 = t2.c0" ) )
13223	assertThat ( fixture. getConfig ( ). getName ( ), is ( equalTo ( "configName" ) ) )
13224	assertSame ( binder1, binder2 )
13225	assertTrue ( song1. compareTo ( song2 ) == 0 )
13226	assertEquals ( field. getValue ( ), entityField. get ( IndexingUtils. FIELD_STRING ) )
13227	assertEquals ( "IDX", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
13228	assertThat ( out. toString ( ), is ( "/context" ) )
13229	assertEquals ( "getHelper() returns the correct helper", formatterHelper. getName ( ), ( ( HelperInterface ) command. getHelper ( "formatter" ) ). getName ( ) )
13230	assertEquals ( DataTypeManager. DefaultDataClasses. INTEGER, ( ( Expression ) plan. getOutputElements ( ). get ( 0 ) ). getType ( ) )
13231	assertEquals ( "test12", result )
13232	assertEquals ( model. getChangedProperty ( ), "powerValue", "power property changed" )
13233	Assert. assertEquals ( "ita", language. getLang ( ) )
13234	resultEndpoint. assertIsSatisfied ( )
13235	assertEquals ( testUser, user )
13236	assertThatNothingHappened ( jobExecution, lastCreatedJobId, 1 )
13237	assertEquals ( typeDeclaration. toString ( ), td. toString ( ) )
13238	assertFalse ( actualBoolean )
13239	assertTrue ( reader. hasNext ( ) )
13240	Assert. assertEquals ( "UK10KRecord [chrom=1, pos=28589, id=., ref=T, alt=[TTGG], filter=[], " + "altAlleleCounts=[7226], chromCount=7562, altAlleleFrequencies=[0.9555673102353874]]", record. toString ( ) )
13241	assertNotNull ( expression )
13242	assertEquals ( false, result )
13243	assertEquals ( 10, results. getTotal ( ) )
13244	assertTrue ( epollID > 0 )
13245	Assert. assertEquals ( - 1.0, a. minInColumn ( 3 ), Vectors. EPS )
13246	assertThat ( referenceSet. getReferencingAxioms ( ), hasItem ( annotationAssertionAxiom ) )
13247	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. AFFILIATIONS_READ_LIMITED )
13248	assertFalse ( "No results found", result. isEmpty ( ) )
13249	Assert. assertEquals ( 1, analysis. getErrors ( ). size ( ) )
13250	Assert. assertTrue ( HasTopLevelNegationVisitor. hasTopLevelNegation ( script ) )
13251	assertEquals ( notifier, result )
13252	assertEquals ( expectedAst, ast. dump ( "" ) + "\\n" )
13253	assertThat ( result, is ( "ITEM 1" ) )
13254	assertEquals ( GOOD_API_KEY, response )
13255	assertEquals ( exepcted_individual, returned_individual )
13256	assertEquals ( "Permission type doesn't match", expectedPerm, e. getPermission ( ) )
13257	assertThat ( SpringFacesIntegration. isInstalled ( this. servletContext ), is ( true ) )
13258	assertEquals ( "[<cfcomponent><!--- x ---><cfset/></cfcomponent>, <!--- x --->, <cfset/>]", cfmlSource. getAllElements ( ). toString ( ) )
13259	assertEquals ( "Simple delete", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
13260	Assert. assertArrayEquals ( VALUE. toArray ( ), dataItems. toArray ( ) )
13261	Assert. assertTrue ( "did not get a true result from the file delete", result )
13262	assertEquals ( "Name of no op ingestion executor not as expected", NoOpEventsIngestionExecutor. NAME, eventIngestionExecutor. name ( ) )
13263	assertEquals ( true, classUnderTest. isFirstRun ( ) )
13264	assertTrue ( timestamp1 < timestamp2 )
13265	Assert. assertEquals ( "aString", prop. getPropertyName ( ) )
13266	Assert. assertNull ( "No se deber�a haber encontrado la aplicaci�n", aplicacion )
13267	Assert. assertTrue ( event. accept ( element ) )
13268	org. junit. Assert. assertEquals ( 1, count. get ( ) )
13269	Assert. assertEquals ( expected, result )
13270	assertEquals ( "_cat/indices/testIndex", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
13271	assertAppearanceFontSize ( dest, 13.94f )
13272	assertNotNull ( test. getMerger ( ) )
13273	assertEquals ( "Failed to read correct data", new String ( buf1, 0, buf1. length ), fileString. substring ( 3000, 3100 ) )
13274	assertStreamEquals ( expectedBackoffs, policy. toBackoffs ( ) )
13275	assertSame ( conf, table. getConfiguration ( ) )
13276	assertEquals ( 5., serviceActivity. getEndTime ( ), 0.01 )
13277	assertEquals ( AuthorizationResult. ACCESS_GRANTED, permission. getResult ( ) )
13278	assertEquals ( "coap://127.0.0.1:12354/3", coapRequest. getURI ( ) )
13279	this. assertLoadBlob ( departments, true, false )
13280	assertFalse ( resultMessage ( res, PUT ), res. passedValidation ( ) )
13281	assertEquals ( false, result )
13282	assertPayloadEqual ( payload )
13283	assertEquals ( true, result )
13284	Assert. assertTrue ( "Native cipher failed to load!", loaded )
13285	assertNotNull ( edm )
13286	assertEquals ( "default-name", getClusterName ( client ) )
13287	assertSseResponse ( sseResponse, "data:payload" )
13288	assertEquals ( PatientProfileDstu2. class, bundle. getEntry ( ). get ( 0 ). getResource ( ). getClass ( ) )
13289	assertNotNull ( e )
13290	assertEquals ( "Got a modification date", 0, strategy. getLastModificationDate ( ) )
13291	Assert. assertEquals ( tableName, table. getName ( ) )
13292	assertNotNull ( IpAccessControlListMapping. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "SDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "ALXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
13293	assertTrue ( "Pictogram not valid", constraintViolations. size ( ) == 0 )
13294	assertions. isEqualTo ( new BigDecimal ( 2 ) )
13295	assertThat ( job, ownedBy ( user ) )
13296	Assert. assertNull ( "description should have been deleted", actualDescription )
13297	assertEquals ( expected, actual )
13298	assertEquals ( expected, actual )
13299	assertTrue ( info. isEmpty ( ) )
13300	assertThat ( cf. parse ( "30. Februar, AD 1712" ), is ( LocalDate. of ( 1712, 3, 11 ) ) )
13301	assertThat ( lineWriter. getTotalLineLength ( ), equalTo ( 0 ) )
13302	assertFalse ( matchResult )
13303	assertEquals ( "myFaultCode", f. getSubCodes ( ). get ( 0 ). getLocalPart ( ) )
13304	assertEquals ( "overloaded 5.5", b. overload ( 5.5 ) )
13305	assertNotNull ( john )
13306	Assert. assertEquals ( 0, Util. getResultsSize ( result ) )
13307	assertSame ( filter, derive ( filter, "g:a:1" ) )
13308	assertEquals ( HttpServletResponse. SC_OK, response. getStatus ( ) )
13309	assertEquals ( expected, languageVersion )
13310	assertEquals ( original, restored )
13311	result. assertIsSatisfied ( )
13312	assertEquals ( 2, artists. size ( ) )
13313	Assert. assertEquals ( expected, actual )
13314	assertEquals ( 99, count )
13315	assertEquals ( nodeReply, reply )
13316	assertHasInterface ( interfaceClass, dst. toClass ( ) )
13317	Assert. fail ( "Should not be able to send successfully with invalid'reply to'." )
13318	result. assertIsSatisfied ( )
13319	assertEquals ( 1, patient. getIdElement ( ). getExtension ( ). size ( ) )
13320	assertEquals ( 1, constructors. length )
13321	assertEquals ( lineOriginal, lineNew )
13322	assertCommit ( writeTx. submit ( ) )
13323	assertTrue ( order. hasSameOrderableAs ( otherOrder ) )
13324	Assert. assertNull ( ex )
13325	assertEquals ( "Laroche", lastName )
13326	assertNotNull ( store )
13327	assertEquals ( DataTypeManager. getArrayType ( DefaultDataClasses. OBJECT ), c. getType ( ) )
13328	assertEquals ( initialDate, dispatcher. getLastMeasurementHistory ( ). getReferenceDate ( ) )
13329	AssertAnnotations. assertTagset ( POS. class, "ctag-ixa", posTags, jcas )
13330	assertEquals ( "Both lists should be same", Arrays. asList ( richGroup1, richGroup2 ), groupsManagerBl. convertGroupsToRichGroupsWithAttributes ( sess, Arrays. asList ( group, group2 ) ) )
13331	assertResult ( )
13332	assertEquals ( mode, acl. getMode ( ) )
13333	assertEquals ( expResult, result )
13334	assertTrue (! nnList. isEmpty ( ) )
13335	assertEquals ( "Jay-Jenna", ripper. getGID ( url ) )
13336	Assert. assertEquals ( result. getResultSize ( ), 0 )
13337	assertNotNull ( s3PersistWriter. getAmazonS3Client ( ) )
13338	assertEquals ( 2, logs. size ( ) )
13339	assertTrue ( delta < delay + overhead )
13340	assertEquals ( "XMLLiteral", shortForm )
13341	Assert. assertTrue ( state [ i ] == expected )
13342	assertTrue ( failedAsExpected )
13343	assertEquals ( 10, calculator. sub ( 15, 5 ), - 1 )
13344	assertEquals ( 123L, rp. getIdPartAsLong ( ). longValue ( ) )
13345	assertResultList ( target )
13346	assertResult ( )
13347	assertEquals ( expected, out )
13348	assertEquals ( "Unexpected result", "{\\"key\\":\\"val\\"}", sb. toString ( ) )
13349	assertEquals ( PersonGenderCodeType. UNKNOWN, output. getRegularCPRPerson ( ). getPersonGenderCode ( ) )
13350	assertEquals ( "foo foa", tagsRetrieved )
13351	assertEquals ( TimeUtil. parseTime ( time, LONG_DATE_PATTERN_DOUBLE_SLASH ), "2014\\\\11\\\\11 10:11:11" )
13352	assertTrue ( latch. await ( 3, TimeUnit. SECONDS ) )
13353	assertEquals ( "aTestString", classUnderTest. getSchema1 ( ) )
13354	assertTrue ( key. verify ( message. getBytes ( ), output ) )
13355	assertEquals ( 15, atAct1. get ( 0 ) )
13356	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Client method=\\"GET\\" statusCallback=\\"https://example.com\\" statusCallbackEvent=\\"initiated\\" statusCallbackMethod=\\"GET\\" url=\\"https://example.com\\">identity</Client>", elem. toXml ( ) )
13357	UnitTestUtils. assertEquals ( "Kendall's correlation matrix", createRealMatrix ( rData, 5, 5 ), correlationMatrix, 10E-15 )
13358	assertEquals ( "select count(entity_0.code), entity_0.code from Entity entity_0", select. getQuery ( ) )
13359	assertEquals ( "Invalid types passed exclusion", 1, actualOutputs. size ( ) )
13360	assertThat ( getDomainPresenceInfo ( dp, UID ). getServerPod ( "admin" ), equalTo ( pod ) )
13361	assertSame ( val, ConfigUtils. getObject ( config, val, "no-value" ) )
13362	AssertAnnotations. assertPennTree ( pennTree, selectSingle ( jcas, PennTree. class ) )
13363	assertEquals ( "Find all not returning a list with one reading", 1, readings. size ( ) )
13364	assertThat ( domain. getDomainHome ( ), equalTo ( "/shared/domains/uid1" ) )
13365	assertThat ( "Still at the start", tileAt ( g, 1, 0 ), equalTo ( g. getPlayer ( ). getTile ( ) ) )
13366	assertThat ( maxFragmentLengthStructure, is ( EXT_512_BYTES ) )
13367	assertEquals ( 2, pairs. size ( ) )
13368	assertThat ( renderer. score ( context, QueryResult. from ( "data" ) ), is ( 0 ) )
13369	assertEquals ( "^aa$", result )
13370	assertThatSelectedTabIndexIs ( 1 )
13371	assertEquals ( a1, a2 )
13372	assertEquals ( cleanWorkspaceRequired, CascadingUtil. getBooleanProjectProperty ( childProject, AbstractProject. CLEAN_WORKSPACE_REQUIRED_PROPERTY_NAME ). getOriginalValue ( ) )
13373	context. assertIsSatisfied ( )
13374	assertTrue ( "Should be true", dataTypeUtil. isLeaf ( CtxAttributeTypes. ADDRESS_HOME_CITY ) )
13375	Assert. assertFalse ( "Must be invalid", signed. verify ( verifier ) )
13376	Assert. assertEquals ( "Should return exactly one variable", 1, response. jsonPath ( ). getMap ( "" ). size ( ) )
13377	Assert. assertTrue ( "瑙ｆ��姝ｅ父HTTP GET璇锋��ㄤ�", 1 == rst )
13378	assertEquals ( 1, stopwatch. getCount ( ) )
13379	assertTrue ( isValid )
13380	assertEquals ( zpk1, zpk2 )
13381	assertThat ( parseCompileEvaluate ( inputExpression ), is ( mapOf ( entry ( "a value", new BigDecimal ( 10 ) ), entry ( "an applicant", mapOf ( entry ( "first name", "Edson" ), entry ( "last + name", "Tirelli" ), entry ( "full name", "EdsonTirelli" ), entry ( "address", mapOf ( entry ( "street", "55 broadway st" ), entry ( "city", "New York" ) ) ), entry ( "xxx", "Tirelli" ) ) ) ) ) )
13382	assertFalse ( "writeskew detected", writeSkewEncountered. get ( ) )
13383	assertThat ( classes. size ( ), is ( 1 ) )
13384	assertEquals ( "Expected 4 results!", 4, n )
13385	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE UPPER(NAME(nodes)) = $literal" ) )
13386	assertNotNull ( tree. context ( ) )
13387	assertThat ( unlockedExampleObject. useInnerStatic ( s, "" ), is ( true ) )
13388	Assert. fail ( )
13389	assertThat ( streetAddressNumber, matchesRegularExpression ( "[0-9]+.+" ) )
13390	assertThat ( sink. toString ( ), is ( "Database[" + "db" + ": sentBytes=0, sentCount=0, receivedBytes=0, receivedCount=0, " + "lastLatency=0 ms, totalLatency=0 ms]" ) )
13391	assertions. isEqualTo ( expected )
13392	assertEquals ( ansi ( ). a ( INTENSITY_BOLD ). fg ( RED ). a ( "foo bar baz" ). reset ( ). a ( " ick " ). a ( INTENSITY_BOLD ). fg ( RED ). a ( "foo bar baz" ). reset ( ). toString ( ), str )
13393	assertEquals ( "testuuid", sut. transform ( "/blah/whatever/someversionhere_uuid_testUUID.css" ) )
13394	assertTrue ( r1 instanceof PublicCloneable )
13395	assertThatTraceIs ( trace, expected )
13396	assertTrue ( m. isIsomorphicWith ( testModel ) )
13397	Assert. assertNotNull ( value )
13398	assertCollectionCanBeSerialised ( collection, TreSource. ExtendedHeaderData, 2 )
13399	Assert. fail ( "IllegalArgumentException expected" )
13400	assertTrue ( wlsClusterConfig. hasDynamicServers ( ) )
13401	Assert. assertEquals ( 0, sFsShell. run ( "mount", "--option", "key=k=v", mountPoint. toString ( ), ufsPath ) )
13402	assertThat ( resource. contentOf ( "out-of-the-box", "pom.xml" ), is ( originalContent ) )
13403	assertTrue ( "Got " + function. getCallCount ( ) + ", expected 5 <= x <= 15", 5 <= function. getCallCount ( ) && function. getCallCount ( ) <= 15 )
13404	assertAccessorsCorrect ( menu, "selectedMenuItems", Collections. EMPTY_LIST, Arrays. asList ( itemA ), Arrays. asList ( itemB ) )
13405	assertNotNull ( audio )
13406	assertEquals ( "1234", projection. text )
13407	assertSame ( point, droppedFigure. getValue ( ) )
13408	assertEquals ( "V2 Composer", wrapper. getComposer ( ) )
13409	assertThat ( result, is ( nullValue ( ) ) )
13410	assertEquals ( columnPrefix + columName, res )
13411	Assert. assertEquals ( "2011-11-01 23:59:59", formater. format ( date. getTime ( ) ) )
13412	assertNotNull ( result )
13413	Assert. assertNotNull ( "The TestCases should not be null", cases )
13414	assertTrue ( "Walked too far astray: " + walk + "\\nNote: This " + "test will fail randomly about 1 in 100 times.", FastMath. abs ( walk ) < FastMath. sqrt ( N ) * 2.576 )
13415	assertTrue ( "FromEntity empty", constraintViolations. size ( ) == 1 )
13416	assertEquals ( entity, saved )
13417	assertTrue ( isBound ( component, DiscoveryServiceConstants. COMMUNITY_STATUS_PROVIDER, CommunityStatusProvider. class ) )
13418	assertFalse ( unit. isValid ( Money. of ( - 1, "EUR" ), null ) )
13419	assertEquals ( "UPPER(\\"NAME\\") LIKE?", QueryBuilder. getWhereStringForFilter ( f, sh ) )
13420	assertEquals ( 3, exceptions )
13421	assertThat ( searchContributionSupport. escape ( supportedSpecialCharacters ), is ( supportedSpecialCharacters ) )
13422	assertEquals ( "Base value is not properly parsed", "09999.9999", parsed )
13423	Assert. assertNotNull ( str )
13424	assertNotEquals ( "Header height should not be 50px initially", 50, initialHeaderHeight )
13425	assertThatCertificateValidationFailsForEmptyTrustAnchor ( )
13426	assertThat ( result, is ( notNullValue ( ) ) )
13427	Assert. fail ( "Xfdf files are not equal" )
13428	assertEveryChildHasTheSameWeightWithCorrectSum ( )
13429	assertTrue ( entity. getCount ( ) == 3456789 )
13430	Assert. assertEquals ( "", result )
13431	assertThat ( g. topologyOf ( 4 ), is ( Topology. unknown ( ) ) )
13432	Assert. assertTrue ( s. isEnabled ( ) )
13433	assertEquals ( timeAmount. getQuantity ( ), 11 )
13434	Assert. assertEquals ( 3, nr )
13435	TestPlanTest. assertTestRunFails ( testPlan )
13436	assertEquals ( MemoryCacheStrategy. class, actual. getClass ( ) )
13437	assertEquals ( expected, this. output. toString ( ) )
13438	assertEquals ( "anonymous", targetBean. getPrincipalName ( ) )
13439	Assert. fail ( "Wrong date format, should not be validated" )
13440	assertNotNull ( jdbc )
13441	assertEquals ( ( float ) 8, result. getFloatValue ( ), 0.0 )
13442	assertEquals ( "LOCAL:  (test)   \\nUserFN UserLN\\naddr2\\naddr1\\n121212 City1\\nGermany", bpartnerBL. mkFullAddress ( bPartner, bpLocation, user, null ) )
13443	assertThat ( rawJSON, is ( notNullValue ( ) ) )
13444	assertEquals ( "12345", operator. trace )
13445	assertEquals ( expected3, actual3 )
13446	Assert. assertEquals ( "35.0 kB", actual )
13447	assertThat ( robots. getNonGroupDirectives ( ), empty ( ) )
13448	assertFalse ( "Document should not contain metadata", doc. hasContentField ( "test_pdf_Author" ) )
13449	assertEquals ( 2, variables. size ( ) )
13450	Assert. assertEquals ( esperado, obtido )
13451	assertEquals ( "Objects{integerValue=null}", objects. toString ( ) )
13452	checker. assertEquals ( msg, exp, act )
13453	assertEventEqualAfterSerializeDeserialize ( purchaseAdvisedEvent )
13454	assertNull ( p )
13455	assertEquals ( 1, result )
13456	Assert. assertEquals ( "UTC", config. getString ( "service.timezone" ) )
13457	Assert. assertEquals ( "1,\\"my name is \\"\\"repodriller\\"\\", man\\",fim", lines [ 0 ] )
13458	assertEquals ( "Application layer did not receive two requests", 2, applicationLayerGetRequestCount. get ( ) )
13459	Assert. assertEquals ( null, _c. convert ( "" ) )
13460	assertTrue ( scriptEngine. executeFilter ( msg ) )
13461	assertEquals ( simple. getName ( ), find. get ( ). getName ( ) )
13462	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<rdf:RDF\\n" + "\\txmlns:rdf=\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\">\\n" + "\\n" + "</rdf:RDF>", descriptionFile )
13463	assertTrue ( "wrong exception message", e. getMessage ( ). contains ( "maximum number of iterations (3) was reached" ) )
13464	Assert. assertTrue ( dependency1. equals ( dependency2 ) )
13465	Assert. assertEquals ( result. getResultSize ( ), 10 )
13466	assertEquals ( mockResponse, response )
13467	assertListTEquals ( listT, 24, 42 )
13468	assertThat ( weightedCucumberScenarios. scenarios, containsInAnyOrder ( MatchingCucumberScenario. with ( ). featurePath ( "simple_table_based_scenario.feature" ). feature ( "Buying things - with tables" ). scenario ( "Buying lots of widgets" ), MatchingCucumberScenario. with ( ). featurePath ( "simple_table_based_scenario.feature" ). feature ( "Buying things - with tables" ). scenario ( "Buying more widgets" ) ) )
13469	assertTrue ( result. getErrorMessage ( ), result. isSucceeded ( ) )
13470	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
13471	assertThat ( result, is ( Collections. singletonList ( "setMyField" ) ) )
13472	assertTrue (! result )
13473	Assert. assertEquals ( sortStringToList ( getElement ( "OBR.25" ) ), sortStringToList ( handler. getOrderStatus ( ) ) )
13474	assertNotNull ( "preparing an analysis workspace should not return null", analysisWorkspaceService. prepareAnalysisWorkspace ( submission ) )
13475	PositionCollectorTestUtil. assertEmpty ( collector2 )
13476	assertThat ( result, equalTo ( false ) )
13477	assertEquals ( SearchContext. SIMPLIFICATION_BONUS, sut. computeSearchGoalBonus ( current ) )
13478	assertThat ( topology. getTopologyName ( conf ), is ( "TestTopology" ) )
13479	assertThat ( array2, equalTo ( new short [ ] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 } ) )
13480	Assert. assertEquals ( "f", qy. get ( 0 ) )
13481	assertEquals ( true, conn. isOpen ( ) )
13482	assertTrue ( "Returned object should be a PredicatedSortedBag.", bag instanceof PredicatedSortedBag )
13483	assertEquals ( "Johannes", nameField. getValue ( ) )
13484	assertFalse ( response. cancel ( ) )
13485	assertEquals ( expecteds, actuals )
13486	maps. assertContainsOnly ( description, actual, entries )
13487	assertEquals ( Collections. emptyList ( ), s. findPath ( grid ) )
13488	assertEquals ( expectedAwql, serviceQuery. toString ( ) )
13489	assertThat ( removed. get ( ), is ( MAXIMUM ) )
13490	assertEquals ( on ( 5, 2 ), next )
13491	assertEquals ( new Integer ( "2147483647" ), result )
13492	assertArrayEquals ( ArrayConverter. hexStringToByteArray ( "c66cb1aec519df44c91e10995511ac8b" ), expand )
13493	assertMockEndpointsSatisfied ( )
13494	Assert. assertEquals ( 0, byteTally. getTotal ( ) )
13495	assertThat ( cursor. proceedTo ( 'd' ), is ( false ) )
13496	assertEquals ( 20L, out. get ( "T" ) )
13497	Assert. assertTrue ( "No track element contained a video attribute", foundVideo )
13498	assertTrue ( comparator. isDifferent ( lhs, rhs ) )
13499	assertEquals ( "foobar", instance. getProperty ( element ) )
13500	assertEquals ( result, expected, 0.0000001 )
13501	assertDelete ( )
13502	Assert. assertEquals ( "John Doe", customer )
13503	Assert. assertEquals ( String. format ( "some %s search", this. html ( bb, "search[google]" ) ), formatter. format ( "some [google]search[google][/google] search", defaultOptions ( ) ) )
13504	Assert. assertTrue ( isConnected )
13505	assertThat ( result. isCompletedExceptionally ( ), is ( true ) )
13506	assertEquals ( expected, actual )
13507	assertEquals ( 3, g. queryDescendants ( obj ). size ( ) )
13508	assertThat ( result. statusCode, is ( Response. NO_CONTENT ) )
13509	assertEquals ( 400, response. getStatus ( ) )
13510	assertEquals ( expected, replacing. transform ( subject ). getType ( ) )
13511	assertThat ( daNull, is ( nullValue ( ) ) )
13512	assertEquals ( "Bucket should be null", null, bucket )
13513	assertEquals ( expect, result )
13514	Assert. assertEquals ( 5, buffer. getBufferSize ( ) )
13515	assertEquals ( 10, atAct. get ( 0 ) )
13516	assertTrue ( Integer. toString ( i ), sf. isLoggable ( r ) )
13517	assertTrue ( pool. isClosed ( ) )
13518	Assert. assertEquals ( d1, d2 )
13519	assertThat ( subject. getFormattedKey ( ). toString ( ), is ( "[route] 10/8AS333" ) )
13520	Assert. assertEquals ( input, output )
13521	Assert. assertNull ( client. exists ( "/test1" ). get ( 2, TimeUnit. SECONDS ) )
13522	assertEquals ( s. hashCode ( ), Objects. hashCodeFor ( s ) )
13523	assertEquals ( "test", echo. echo ( "test" ) )
13524	assertBreadcrumbsAreEqual ( actualResult, expectedResult )
13525	Assert. assertTrue ( result )
13526	context. assertNotNull ( ip )
13527	assertThat ( readedValue, is ( value ) )
13528	assertFalse ( collector. isMessageComplete ( ) )
13529	assertEquals ( true, result )
13530	assertEquals ( "OK", result )
13531	assertThat ( date, is ( expected ) )
13532	assertTrue ( "Filesystem realm should be created", ops. exists ( TEST_FILESYSTEM_REALM_ADDRESS ) )
13533	Assert. assertNull ( processor. getCurrentEnv ( ) )
13534	assertFalse ( Files. exists ( child ) )
13535	assertEquals ( "/catalog/alert/" + PROVIDER_ID, rc. getPath ( ) )
13536	testContext. assertEquals ( WebsocketRejectedException. class, cause. getClass ( ) )
13537	assertions. isNotLessThan ( new Integer ( 10 ) )
13538	assertThat ( matches. size ( ), is ( 0 ) )
13539	Assert. assertTrue ( validator. valid )
13540	assertTrue ( exceptionThrown )
13541	assertNotNull ( actual )
13542	assertEquals ( "Must return self", sut, result )
13543	assertEquals ( 2, new Mirror ( provider ). on ( fixture ). get ( ). field ( "finalField" ) )
13544	assertEquals ( expected, actual )
13545	assertThat ( allEvents. stream ( ). limit ( events. size ( ) ). collect ( toList ( ) ), containsInOrder ( reverse ( events ) ) )
13546	assertEquals ( mboss. getCar ( ). getBrand ( ), "缇�浜鸿惫" )
13547	assertEquals ( "{a:'xa1x',b:'xb1x',c:'xc1x',e:'xx',g:'xtruex',h:'x123x'}", r )
13548	assertEquals ( assertion, array )
13549	Assert. assertEquals ( "beeline --showHeader FAILED. \\n" + results. get ( "outputStream" ), true, consoleMsg. contains ( "default" ) &&! consoleMsg. contains ( "database_name" ) &&! consoleMsg. contains ( "error" ) &&! consoleMsg. contains ( "exception" ) )
13550	Assert. assertEquals ( result. getResultSize ( ), 0 )
13551	Assert. assertEquals ( "How are you?", result )
13552	assertTrue ( sub. getRow ( subNodes. get ( 0 ) ). get ( CyNetwork. SELECTED, Boolean. class ) )
13553	Assert. assertEquals ( "Invalid csv line", "1,DEVICE0,METRIC0,0,20150203235809-0500,UNDEFINED,1,1001.00", line )
13554	assertTrue ( closed. await ( 2, SECONDS ) )
13555	assertNotNull ( certificate )
13556	assertEquals ( expectedDDL, ddl )
13557	assertEquals ( "Message: 123", ResponseBodyInterpolator. interpolate ( "Message: [request.minor]", req ) )
13558	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). getPatientByExternalId ( "Neuro123" ) )
13559	Assert. assertEquals ( config. getDecoders ( ). size ( ), 2 )
13560	Assert. assertEquals ( 0, connectionManager. getConnectionDetailsByScheme ( DOES_NOT_EXIST ). size ( ) )
13561	assertTrue ( "Comparator did not reorder the List correctly", orderedList. equals ( randomList ) )
13562	assertEquals ( serializedNetwork, network )
13563	assertEquals ( "Solar", map. findPrev ( null, null, Pattern. compile ( Pattern. quote ( "lar" ) ), true, null ). getText ( ) )
13564	assertEquals ( result, "busybox:latest" )
13565	assertNotNull ( fileOperationMap. getOperation ( operation. getPnfsId ( ) ) )
13566	test. assertValue ( expected )
13567	assertTest1 ( )
13568	assertEquals ( "development", value )
13569	assertNull ( requestImpl. accepts ( "test/test", "text/nothing" ) )
13570	assertEquals ( 1, result )
13571	assertEquals ( "hello Billie!", result )
13572	assertResourceWasAdaptedToModel ( )
13573	assertEquals ( 0.0, corrOzone, 1e-3 )
13574	assertEquals ( "3 centuries from now", "浠�����3涓�绱�寰�", t. format ( new Date ( 3155692597470L * 3L ) ) )
13575	assertEquals ( "value1", ( ( TextValue ) value1 ). getValue ( ) )
13576	assertBrownGCD ( gcd, a, b )
13577	assertArrayEquals ( expectedObjects, array )
13578	assertEquals ( NOT_DECODED, object, new ColorTransform ( decoder, context ) )
13579	Assert. assertEquals ( rel. getEndNode ( ), nodes. iterator ( ). next ( ) )
13580	assertEquals ( 10, classUnderTest. getIndex ( ) )
13581	assertArrayEquals ( range. values ( ). toArray ( ), richLex. getSupportedValueRange ( BasicVisualLexicon. NODE_SHAPE ). toArray ( ) )
13582	Assert. assertTrue ( Arrays. equals ( new int [ ] { 2, 2, 2, 0 }, this. getCounts2 ( ) ) )
13583	assertArrayEquals ( data, ( int [ ] ) deserialize. readObject ( int [ ]. class ) )
13584	assertThat ( propertyValues, Matchers. hasItem ( PropertyAnnotationValue. get ( propertyData, iriData, State. ASSERTED ) ) )
13585	testRunner. assertAllFlowFilesTransferred ( PutCassandraQL. REL_FAILURE, 1 )
13586	assertTrue ( AutnumUtil. isValidAutnum ( validAutnum ) )
13587	assertTrue ( "No exception was thrown", exception )
13588	assertEquals ( "Rewritten command was not expected", rewritProc, procReturned )
13589	assertFalse ( rex. isEquivalentTo ( left, ba ) )
13590	assertThat ( domain, is ( notNullValue ( ) ) )
13591	assertEquals ( testId, song. getId ( ) )
13592	assertEquals ( 0.0, trend [ i ] - trend [ i - 1 ], 1.0e-13 )
13593	assertSame ( name, expected, BuiltinIdentities. fromName ( name ) )
13594	Assert. assertEquals ( new PhoneNumber ( "+12345678910" ), pn )
13595	Assert. assertEquals ( 0, engineRule. getManagementService ( ). createJobQuery ( ). count ( ) )
13596	assertFalse ( sut. isEnabled ( ) )
13597	objects. assertIsNotInstanceOfAny ( mock ( Description. class ), actual, null )
13598	assertEquals ( true, isOpened )
13599	assertNotNull ( result )
13600	assertFalse ( target1. equals ( target2 ) )
13601	assertEquals ( 0L, pipeline. getTotalBuildTime ( ) )
13602	assertThat ( filterStrings, IsIterableWithSize. < String > iterableWithSize ( 3 ) )
13603	assertEquals ( "https://10.1.71.80:8181", serviceConf. getString ( "mtwilson.api.baseurl" ) )
13604	Assert. assertEquals ( 0, rule. getRuntimeService ( ). createVariableInstanceQuery ( ). count ( ) )
13605	assertThat ( response, containsString ( "<object type=\\"aut-num\\">" ) )
13606	assertNull ( result )
13607	Assert. assertEquals ( "Value is incorrect", map ( "3141-05", "test" ), value )
13608	assertEquals ( "MurmurHash.hash64(String) returns wrong hash value", expectedHash, actualHash )
13609	assertTrue ( comparator. isDifferent ( lhs, rhs ) )
13610	Assert. fail ( )
13611	assertTrue ( result. contains ( "CURRENT LOG APPENDER" ) )
13612	assertEquals ( resourceSize, getLength ( temp ) )
13613	assertThat ( actual, hasSize ( 10 ) )
13614	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
13615	Assert. assertEquals ( "999999999999.99", produto. getValorTotalBruto ( ) )
13616	assertEquals ( sb. toString ( ), param. getValue ( ) )
13617	assertEquals ( "First Full Functional Build", version. getDescription ( ) )
13618	assertThat ( converted, equalTo ( expected ) )
13619	Assert. assertSame ( EDIT_ACCESS, this. component. getAccessLevel ( this. entity, COLLABORATOR ) )
13620	Assert. assertNotNull ( newProxyInstance )
13621	Assert. assertEquals ( expected, component )
13622	assertEquals ( DependendencyStatus. UNKNOWN, oracle. assess ( access ( "blah", "bar" ) ) )
13623	assertTrue ( predicate. test ( pickle ) )
13624	context. assertIsSatisfied ( )
13625	assertEquals ( "Number of threads is not set correctly.", numThreads, ThreadsEngine. getNumberOfThreads ( ), 0 )
13626	Assert. assertTrue ( cons. canSet ( List ( Pair ( "10", 10 ), Pair ( "20", 20 ), Pair ( "30", 30 ) ) ) )
13627	Assert. assertFalse ( "no query result returned", result. isEmpty ( ) )
13628	assertEquals ( 1, listeners. length )
13629	assertThat ( f. format ( ), containsString ( expected ) )
13630	Assert. assertEquals ( "<?xml version='1.0' encoding='UTF-8'?>\\n" + "<dummyNode eh=' &apos;a &amp;> b\\"'foo='bar' ohio='4'>\\n" + "    <dummyNode o='ha' />\\n" + "    <dummyNode />\\n" + "</dummyNode>\\n", out. toString ( ) )
13631	assertThat ( unit. getProfileName ( ), is ( "FOO" ) )
13632	Assert. assertTrue ( contains )
13633	Assert. fail ( "Properties could not be null" )
13634	Assert. assertTrue ( irodsFile. canRead ( ) )
13635	assertEquals ( PDUType. REQUEST, request. getPDUType ( ) )
13636	assertEquals ( "Select with descending order by", expectedSelectFirstOrderByNullsLastDesc ( ), testDialect. convertStatementToSQL ( stmt ) )
13637	assertEquals ( dto, dto2 )
13638	assertTrue ( "Intersection between lines is incorrect", pi. equals ( p, 0.1 ) )
13639	assertEquals ( 119999L, m. getLastMillisecond ( ) )
13640	assertTrue ( rec_cnt == 4 )
13641	assertEquals ( "\\"2014-03-10T23:32:47+00:00\\",,hello\\n", csv )
13642	Assert. assertNotNull ( addressResultsDto )
13643	assertEquals ( expected, actual )
13644	assertEquals ( 0, OldCache. getOldStoreSize ( ) )
13645	assertEquals ( model, actual )
13646	Assertions. assertFalse ( result )
13647	assertThat ( new JcrValue ( factories, cache, PropertyType. LONG, 0L ). getDate ( ). getTimeInMillis ( ), is ( expectedValue. getTimeInMillis ( ) ) )
13648	Assert. assertEquals ( 0, memberships. size ( ) )
13649	AssertAnnotations. assertToken ( tokens, select ( jcas, Token. class ) )
13650	Assert. assertTrue ( context. getResult ( ) )
13651	assertEquals ( 4, ( long ) rpt. getLongMetric ( RollSink. A_ROLLS ) )
13652	Assert. assertTrue ( Arrays. equals ( new int [ ] { 1, 1 }, this. getCounts1 ( ) ) )
13653	Assert. assertEquals ( 400, response. getStatus ( ) )
13654	assertEquals ( false, config. isCacheGzippedContent ( ) )
13655	assertEquals ( expectedMsg, faultSoap12 )
13656	assertEquals ( "DebugClassLoading", false, config. isDebugClassLoading ( ) )
13657	assertEquals ( collection. toString ( ), results. toString ( ) )
13658	assertEquals ( 400, ( int ) caller. getSentError ( ) )
13659	Assert. assertEquals ( options. getTargetPath ( ), new Path ( "hdfs://localhost:8020/target/" ) )
13660	assertThat ( "Combined vars", IteratorUtils. transformedIterator ( combined. iterator ( ), VarDef :: getPathName ), visitsMembers ( "Color.Lightness", "Color.Saturation" ) )
13661	Assert. assertEquals ( 100., tdCosts. getTransportTime ( loc ( "from" ), loc ( "to" ), 0., null, null ), 0.01 )
13662	Assert. assertArrayEquals ( expected, values )
13663	assertThat ( getServers ( ), empty ( ) )
13664	Assert. assertEquals ( "\\"name=name\\" \\"event_id=event-id\\" \\"key=129\\"", event. toString ( ) )
13665	Assert. assertArrayEquals ( b, a, MathUtils. EPSILON )
13666	assertEquals ( "ñòó", result )
13667	assertThat ( extractMonitorables ( histogramAdapter ). get ( COUNT ). get ( ), Matchers. < Object > is ( newCount ) )
13668	assertEquals ( expectedSource, instrumentedSource )
13669	assertNotNull ( i )
13670	Assert. assertEquals ( "somehost", authscope. getHost ( ) )
13671	assertTrue ( registry. getMonitorables ( ). isEmpty ( ) )
13672	assertTrue ( failedAsExpected )
13673	assertEquals ( expected, filterAclEntriesByAclSpec ( existing, aclSpec ) )
13674	assertEquals ( "Response body is not correct.", USER_IN_REALM1_WITH_INFIX_AND_SUFFIX, Utils. makeCallWithBasicAuthn ( principalServlet ( webAppURL ), USER_IN_REALM1_WITH_INFIX_AND_SUFFIX, CORRECT_PASSWORD, SC_OK ) )
13675	assertEquals ( expResult, result )
13676	assertThat ( unescaped, is ( "\\thello\\nworld!" ) )
13677	assertGridIndexes ( data, new boolean [ ] { true, true, true, true }, new boolean [ ] { false, false, false, false }, new Expected [ ] [ ] { { Expected. build ( true, 4, false ) }, { Expected. build ( true, 0, false ) }, { Expected. build ( true, 0, false ) }, { Expected. build ( true, 0, false ) } } )
13678	assertEquals ( "test", echo. echo ( "test" ) )
13679	assertFalse ( constraint. fulfilled ( iContext ) )
13680	assertEquals ( 4.0, median, 0.0000001 )
13681	assertNotSame ( listener. getEvent ( ), null )
13682	Assert. assertEquals ( datahoraRecebimento, dados. getDatahoraRecebimento ( ) )
13683	Assert. assertEquals ( "1", eventoCancelamento. getIdLote ( ) )
13684	Assert. assertEquals ( 0.0, a. transposeMultiply ( b ). subtract ( a. transpose ( ). multiply ( b ) ). getNorm ( ), 1.0e-15 )
13685	assertEquals ( "", result )
13686	assertThat ( dateTime, equalTo ( today. toDateTimeAtStartOfDay ( ) ) )
13687	assertThat ( certList, is ( context. getClientCertificateTypeDesiredTypes ( ) ) )
13688	assertThat ( retrieved, isPresent ( not ( infoEquals ( 2 ) ) ) )
13689	Assert. assertTrue ( "reification relationship was lost on export and reimport", topic2!= null )
13690	Assert. assertEquals ( "0", prefix. getPrefix ( ) )
13691	Assert. assertTrue ( "user cannot read file even though he has group permissions", actual. canRead ( ) )
13692	assertE ( "�尖�尖�尖�尖�尖��" + "��    ��" + "��    ��" + "�� ��  ��" + "��    ��" + "�尖�尖�尖�尖�尖��" )
13693	assertEquals ( request. getUri ( baseURI ), expectedURI )
13694	Assert. assertEquals ( "Test File Content\\n", result )
13695	assertTrue ( "failed to stat file", st!= null && st. isFile ( ) )
13696	assertEquals ( 0, content. refCnt ( ) )
13697	assertThat ( isEquals, is ( true ) )
13698	Assert. assertEquals ( "{\\"task_routing\\":{\\"filters\\":[{\\"expression\\":\\"skill == \\\\\\"HR\\\\\\"\\",\\"targets\\":[{\\"queue\\":\\"WQaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\",\\"priority\\":54333,\\"timeout\\":30}],\\"friendlyName\\":\\"4354\\"}],\\"default_filter\\":{\\"queue\\":\\"WQaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\"}}}", workflow. toJson ( ) )
13699	assertEquals ( "Mouse, Jerry", result. getStringAttribute ( "cn" ) )
13700	assertEquals ( "Invalid size for VARIANT", expectedSize, size )
13701	assertEquals ( "SELECT *\\nWHERE {\\n ?s?p?o,?o2,<toto> ;?b?c ;<name>?e.\\n}\\n", processed )
13702	assertTrue ( converters. existsFor ( MyData. class ) )
13703	Assert. assertNotNull ( oembedService. executeRequest ( request ) )
13704	assertFalse ( String. format ( "[%s] should be valid.", coord ), validator. isValid ( coord, null ) )
13705	assertDeletedIDs ( expDeletedIIDs, deletedLinkIDs )
13706	assertNull ( p )
13707	assertEquals ( expected, d_meas. toString ( ) )
13708	assertEquals ( 2, collectorManager. collectorsByCorrelationId. size ( ) )
13709	assertTrue ( flipConditionEvaluator instanceof DefaultFlipConditionEvaluator )
13710	Assert. assertNotNull ( "rule should be successfully parsed", rule )
13711	Assert. assertEquals ( DateUtil. truncateToSeconds ( expectedDate ), newConceptSource. getDateCreated ( ) )
13712	assertNotNull ( injector )
13713	assertThat ( proxy. wasCalled ( ), is ( true ) )
13714	assertEquals ( HttpStatus. SC_NOT_FOUND, response. getStatus ( ) )
13715	assertXmlMarshaling ( referenceObjectBinding, XML )
13716	assertNotNull ( initializer )
13717	ctx. assertTrue ( records. result ( ). isEmpty ( ) )
13718	assertTrue ( details. hasCancelled ( ) )
13719	assertSame ( hello, uriTools. resolveUri ( HELLO_URI, wfBundle ) )
13720	assertTrue ( l. size ( ) == 2 )
13721	assertEquals ( request. getUri ( baseURI ), expectedURI )
13722	assertEqualsIgnoreLineEnding ( output, "{\\n" + "  \\"additionalProp1\\" : \\"string\\",\\n" + "  \\"additionalProp2\\" : \\"string\\",\\n" + "  \\"additionalProp3\\" : \\"string\\"\\n" + "}" )
13723	assertThat ( "Expecting serializable set", instanceOf ( Serializable. class ) )
13724	assertTrue ( "OptimisticLockException Should Not Be Thrown (retry failed)",! optimisticLockExceptionWasThrown [ 0 ] )
13725	assertTrue ( prtition_num == KafkaTestUtil. DEFAULT_TEST_PARTITION_NUM )
13726	assertNotNull ( entityGroup )
13727	Assert. assertEquals ( "NewCreatedCity==>{\\"universe\\":0,\\"time\\":0,\\"uuid\\":1,\\"data\\":{\\"name\\":\\"MySmartCity\\"}}\\n" + "ModifiedCity==>{\\"universe\\":0,\\"time\\":0,\\"uuid\\":1,\\"data\\":{\\"name\\":\\"MySmartCity\\",\\"districts\\":[2,3]}}\\n" + "Navigated districts:\\n" + "{\\"universe\\":0,\\"time\\":0,\\"uuid\\":2,\\"data\\":{\\"name\\":\\"District_1\\",\\"op_City_districts\\":[1]}}\\n" + "{\\"universe\\":0,\\"time\\":0,\\"uuid\\":3,\\"data\\":{\\"name\\":\\"District_2\\",\\"sensors\\":[4],\\"op_City_districts\\":[1]}}\\n" + "\\n" + "\\n" + "Districts extracted:2\\n" + "{\\"universe\\":0
13728	assertThat ( config. getFailTopic ( ), is ( "y" ) )
13729	assertTrue ( "Failed to match host with netmask.", match )
13730	assertTrue ( cli. getProcessExitValue ( )!= 0 )
13731	assertEquals ( Collections. singletonMap ( "foo", "foo_value" ), sharedMap )
13732	assertEquals ( Action. SUCCESS, action. execute ( ) )
13733	Assert. assertTrue ( "The output of the test with id " + id + " does not match the baseline: " + cxtm + " " + baseline, TestFileUtils. compareFileToResource ( cxtm, baseline ) )
13734	Assert. assertEquals ( "scope:client:outgoing?appSid=AP123&clientName=CL123&appParams=foo%3Dbar", scope. getPayload ( ) )
13735	assertEquals ( "treeTable autoCreateRowSorter must be false", false, table. getAutoCreateRowSorter ( ) )
13736	Assert. assertEquals ( result. getResultSize ( ), 1 )
13737	assertNull ( mergeReport )
13738	assertEquals ( "{\\"version\\": \\"3.0.0\\", \\"gauges\\": {}, \\"counters\\": {}, \\"histograms\\": {}, \\"meters\\": {}, \\"timers\\": {\\"foobar\\": {\\"count\\": 1, \\"max\\": 5.0, \\"mean\\": 5.0, \\"min\\": 5.0, \\"p50\\": 5.0, \\"p75\\": 5.0, \\"p95\\": 5.0, \\"p98\\": 5.0, \\"p99\\": 5.0, \\"p999\\": 5.0, \\"stddev\\": 0.0, \\"m15_rate\\": 0.0, \\"m1_rate\\": 0.0, \\"m5_rate\\": 0.0, \\"mean_rate\\": 1, \\"duration_units\\": \\"milliseconds\\", \\"rate_units\\": \\"calls/second\\"}}}", bson. toJson ( writerSettings ). replaceAll ( "\\"mean_rate\\": [0
13739	assertNull ( val. get ( 0 ) )
13740	Assert. assertEquals ( HttpServletResponse. SC_FORBIDDEN, response. getStatus ( ) )
13741	assertEquals ( expResult, result )
13742	assertNotNull ( objJPAEdmProperty. getJPAEdmNavigationPropertyView ( ) )
13743	Assert. assertEquals ( THIRTEEN_BYTE, pi. getThirteenByte ( ) )
13744	assertJson ( "{'some':'data','levelProgress':{'total':5,'current':2,'lastPassed':1}}" )
13745	assertThat ( baseStepListener. aStepHasFailed ( ), is ( false ) )
13746	assertEquals ( new Date ( nowDate ), job. getNextRun ( ) )
13747	assertNull ( previous )
13748	assertEquals ( expectedQuery, actualQuery )
13749	assertEquals ( 3, toml. getTable ( "a" ). getTable ( "b" ). getTables ( "c" ). get ( 0 ). getLong ( "id" ). intValue ( ) )
13750	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
13751	Assert. assertFalse ( FlowDifferenceFilters. FILTER_ADDED_REMOVED_REMOTE_PORTS. test ( flowDifference ) )
13752	assertFalse ( "No keywords found", result. isEmpty ( ) )
13753	assertEquals ( rows, sorter. getViewRowCount ( ) )
13754	assertEquals ( expResult, result )
13755	assertNotNull ( source )
13756	assertEquals ( simpleGet ( keyEquiv ( 12345 ) ), valEquiv ( 54321 ) )
13757	assertOut ( "/**\\n * @constructor\\n * @implements {custom.TestInterface}\\n * @implements {custom.TestOtherInterface}\\n */\\norg.apache.royale.A = function() {\\n};\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('org.apache.royale.A', org.apache.royale.A);" )
13758	assertEquals ( 1, acquiredTriggers. size ( ) )
13759	assertEquals ( out, frame2 )
13760	assertEquals ( instance. errorTextArea. getText ( ). length ( ), 0 )
13761	assertThat ( readBytes ( testee, 4 ), is ( "World|!" ) )
13762	assertEquals ( geo, expResult )
13763	assertValueModelFires ( model, interval, expected )
13764	assertArrayEquals ( content, readContent )
13765	assertEquals ( "pork", fattest. getName ( ) )
13766	Assert. assertArrayEquals ( expected, result )
13767	assertThat ( age, nullValue ( ) )
13768	assertThat ( plugin. getClass ( ), is ( equalTo ( HTMLFormatter. class ) ) )
13769	assertEquals ( PCEPErrors. UNKNOWN_PLSP_ID, this. errorsSession1. get ( 0 ) )
13770	assertTrue ( "value was " + Arrays. toString ( target ), Arrays. equals ( expected, target ) )
13771	Assert. assertFalse ( errors. hasGlobalErrors ( ) )
13772	assertEquals ( 0, wire. bytes ( ). readRemaining ( ) )
13773	assertEquals ( "OK", reply. getMessage ( ) )
13774	assertEquals ( 1, this. chartChangeEvents. size ( ) )
13775	assertEquals ( 2, resultList. size ( ) )
13776	assertFalse ( fail )
13777	Assert. assertSame ( list, Args. notEmpty ( list, "List" ) )
13778	assertNull ( tr. findCertInfo ( null ) )
13779	assertEquals ( "[{\\"t\\":\\"doc\\"}]", r. readEntity ( String. class ) )
13780	assertEquals ( i, number )
13781	Assert. assertTrue ( errors. hasFieldErrors ( "loser" ) )
13782	assertArrayEquals ( new byte [ ] { 0, 17, 34, 51, 68, 85, 17 }, result )
13783	assertEquals ( expected, this. fsParser. extractFlowspec ( entry. build ( ) ) )
13784	assertThat ( items, arrayWithSize ( 0 ) )
13785	Assert. assertTrue ( resultFound )
13786	assertThat ( issues, hasItems ( "#123", "#456", "#789" ) )
13787	assertArrayEquals ( location, o )
13788	assertSame ( jedi. powers, powers )
13789	assertEquals ( total / correctResults. length, result, 0.0001 )
13790	Assert. assertFalse ( validator. validSequence ( 0, inputSequence, outcomesSequence, outcome ) )
13791	assertEquals ( 0, patterns. size ( ) )
13792	assertEquals ( "2005-10-11T10:00:00.5", v. getStringValue ( ) )
13793	Assert. fail ( "DalRuntimeException expected" )
13794	assertThat ( attributes, contains ( new Attribute ( "mnt-routes", "OWNER-MNT {10.0.0.0/8}", null, "mntner", new Link ( "locator", "http://localhost/lookup/TEST/mntner/OWNER-MNT" ), null ) ) )
13795	Assert. assertNull ( queue. removeHead ( transactionID ) )
13796	assertEquals ( expected, readOutputFile ( conf ) )
13797	assertSame ( toTest, toTest. setMethodsRetryHandler ( RetryHandler. class ) )
13798	assertEquals ( out. readableBytes ( ), 0 )
13799	assertThat ( orgToCreate. getCreateDate ( ), is ( date ) )
13800	assertEquals ( HttpStatusCodes. BAD_REQUEST. getStatusCode ( ), result. getStatusLine ( ). getStatusCode ( ) )
13801	Assert. assertFalse ( "Response has fault", response. getSOAPBody ( ). hasFault ( ) )
13802	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
13803	assertFalse ( drug. getRetired ( ) )
13804	assertFalse ( validator. isValid ( resource, MetadataSection. ADDITIONAL_SECTION ) )
13805	assertLookup ( breaks, values, srcImg, DataBuffer. TYPE_DOUBLE )
13806	assertTrue ( "Added nodes are not saved", c2. getBoolean ( "test.autosave.addNodesTest" ) )
13807	Assert. assertEquals ( node, r. get ( "node" ) )
13808	assertNotNull ( EndUserType. reader ( ). read ( ) )
13809	Assert. assertNotNull ( out. getD6 ( ) )
13810	assertTrue ( extractor instanceof SingleCellExtractor )
13811	assertNotNull ( state )
13812	Assert. assertEquals ( 100, terminatedAfter )
13813	assertOperation ( ( ) -> roleClient. getProject ( SPACE_NAME, name ) )
13814	assertEquals ( 654321, wsss. getReceiveBufferSize ( ) )
13815	PSLTest. assertModel ( dataStore, input, expected )
13816	assertEquals ( HttpURLConnection. HTTP_NOT_FOUND, connection. getResponseCode ( ) )
13817	assertEquals ( 3, count )
13818	assertThat ( table. asString ( ), equalTo ( "|one|two|\\n|11|12|\\n|21|22|\\n" ) )
13819	assertTrue ( FlagDelegate. isVisited ( ) )
13820	Assert. assertEquals ( 5, set. size ( ) )
13821	Assert. fail ( "callMethod should not have been called" )
13822	Assert. assertTrue ( threadPoolConfig. getQueue ( ) instanceof SynchronousQueue )
13823	assertNull ( result. getFirstHeader ( "Warning" ) )
13824	Assert. assertFalse ( "failure - expected numbers to be diff", CMC. equals ( CMC2 ) )
13825	assertions. containsOnly ( expected )
13826	context. assertIsSatisfied ( )
13827	assertEquals ( VARCHAR, columnDifference. getCol1Type ( ) )
13828	assertEquals ( Double. doubleToLongBits ( resultKthSelector ), Double. doubleToLongBits ( resultSort ) )
13829	Assert. assertEquals ( "Expected all rights", ALL_AUTHS, auths )
13830	assertEquals ( true, uploadResult. isValid ( ) )
13831	assertEquals ( "2012-01-02", date. getValueAsString ( ) )
13832	assertThat ( numFound ( query ( "q=Company" ) ), is ( 1L ) )
13833	assertThat ( actual, is ( expected ) )
13834	assertTrue ( "Agent-based allocation should have failed", plan. getAllReservations ( ). size ( ) == numJobsInScenario )
13835	assertEquals ( expected, reference. get ( ) )
13836	assertEquals ( "m Foo, {abc},, null, 123.00, {5} {foe}", msg. getMessage ( ) )
13837	assertEquals ( "test", s. trim ( ) )
13838	assertEquals ( "someHost", requestImpl. host ( ) )
13839	Assert. assertEquals ( false, retval )
13840	Assert. assertNotNull ( ff4j. getFeatureStore ( ) )
13841	assertTrue ( result. getErrors ( ). size ( ) > 0 )
13842	Assert. assertNull ( caixa )
13843	Assert. assertEquals ( StormEnvironment. class, mockStormApplication. getEnvironmentType ( ) )
13844	assertEquals ( "getField1", name )
13845	assertDtoAndMapConstructorAreSame ( 0 )
13846	assertions. doesNotHaveDuplicates ( )
13847	assertE ( "�尖�尖�尖�尖�尖�尖��" + "��     ��" + "��     ��" + "��  ���� ��" + "��     ��" + "��     ��" + "�尖�尖�尖�尖�尖�尖��" )
13848	assertEquals ( tenantId, connection. getClientInfo ( PhoenixRuntime. TENANT_ID_ATTRIB ) )
13849	Assert. assertNotNull ( addressResultsDto )
13850	assertEquals ( component. getStyleName ( ), "style1 style2" )
13851	Assert. assertTrue ( got. contains ( "Created device: {" ) )
13852	assertEquals ( expected, actual )
13853	assertTrue ( sm. getRegistries ( ). getAttributeTypeRegistry ( ). contains ( "cn" ) )
13854	assertThat ( "new", localRepo. getPulls ( ), hasKey ( 1 ) )
13855	assertTrue ( true )
13856	Assert. assertTrue ( deadLockDetected. booleanValue ( ) )
13857	assertMessageAndPath ( constraintViolationCreationContextList. get ( 0 ), message, pathWith ( ). property ( "foo" ). property ( "bar", true, "test", null ). property ( "fubar", true, null, null ) )
13858	Assert. assertNotNull ( BuildVersion. version ( ), version )
13859	assertNull ( jobEntryHadoopCopyFiles. loadURL ( testUrl, testNcName, metaStore, mappings ) )
13860	assertEquals ( "http://www.effektif.com/", link )
13861	assertFalse ( processor. canProcessEvent ( event ) )
13862	assertTrue ( expectedMaxPoolingActivation. compare ( poolingActivation, TOLERANCE ) )
13863	assertThat ( restfulServerConfig. getPort ( ), is ( 8899 ) )
13864	assertTrue ( prefs. matches ( t ) )
13865	Assert. assertEquals ( expected, MessageFormatter. format ( message, "p1", "p2", "p3", "p4", "p5" ) )
13866	assertEquals ( "Unexpected server selection timeout", MongoClientOptions. builder ( ). build ( ). getServerSelectionTimeout ( ), clientOptions. getServerSelectionTimeout ( ) )
13867	Assert. assertEquals ( expected, printer. toString ( ) )
13868	assertEquals ( 2, removeEmpty. size ( ) )
13869	assertEquals ( ".outer { margin: 2px; }.outer.inner { padding: 3px; }", normalize ( css ) )
13870	Assert. assertEquals ( 1, compareResult )
13871	assertEquals ( 20, header. getCallID ( ) )
13872	assertEquals ( actual, expected, "Wrong substitution" )
13873	assertTrue ( cli. isConnected ( ) )
13874	assertEquals ( rs2, rs )
13875	Assert. assertEquals ( expectedResult, resultString )
13876	Assert. assertNull ( testPatientData )
13877	assertThat ( tuple. getSetOrEmpty ( "field" ), empty ( ) )
13878	assertThat ( buf. size ( ), is ( 0 ) )
13879	assertEquals ( expectedMessage, result )
13880	assertEquals ( 400, response. getStatus ( ) )
13881	assertEquals ( expResult, result )
13882	Assert. assertArrayEquals ( oldbb, bb )
13883	assertThat ( extension. getFragmentLength ( ). length ( ), is ( 512 ) )
13884	assertEquals ( expected, actual )
13885	assertEquals ( "[Function released]", v8Object. toString ( ) )
13886	Assert. assertTrue ( "CumulativeLoss is expected to be less than 1200: " + udtf. getCumulativeLoss ( ), udtf. getCumulativeLoss ( ) < 1200 )
13887	assertEquals ( 0, fired )
13888	assertXMLStringsEquals ( "<Root>\\n" + "   <Intermediate>\\n" + "      <X>\\n" + "         <Y>Passed</Y>\\n" + "      </X>\\n" + "      Value\\n" + "   </Intermediate>\\n" + "</Root>\\n", test. toString ( ) )
13889	assertFalse ( violation )
13890	assertNotEquals ( 0, con. hashCode ( ) )
13891	assertNull ( actual )
13892	Assert. assertEquals ( expected, component )
13893	assertThat ( defn. getDeclaringNodeType ( ), is ( nullValue ( ) ) )
13894	assertEquals ( 6, anchors. size ( ) )
13895	N4CliHelper. assertExpectedOutput ( "foo === 36: true, bar === 'bar': true", out )
13896	Assert. assertEquals ( 200, newMergedRecord. getIncomingTransferSsl ( ) )
13897	assertEquals ( packet, p )
13898	Assert. assertNotNull ( target )
13899	assertFalse ( condition. evaluate ( new RowMeta ( ), new Object [ ] { "test" } ) )
13900	assertTrue ( Boolean. FALSE. equals ( value ) )
13901	assertEquals ( expResult, result )
13902	assertEquals ( "Expected: " + expectedNumber + " items which pass the search criterion, Seeing: " + numberOfItems, expectedNumber, numberOfItems )
13903	assertThat ( studies. size ( ), is ( 1 ) )
13904	assertEquals ( 1, set. size ( ) )
13905	Assert. assertEquals ( 0, inventoryItems. size ( ) )
13906	assertThat ( reader. nextKeyValue ( ), is ( false ) )
13907	assertEquals ( 100, getCache ( provider, "foo" ). capacity )
13908	Assert. assertTrue ( evaluator. hasPermission ( authentication, targetId, targetType, permission ) )
13909	assertions. contains ( expected )
13910	assertFalse ( isTransposed ( m ) )
13911	assertEquals ( seqId + 1, sentryStore. alterSentryRoleGrantPrivilege ( grantor, roleName, sentryPrivilege ). getSequenceId ( ) )
13912	assertDateEquals ( dateTime, result )
13913	Assert. assertEquals ( Type. High, type )
13914	assertFalse ( info. isComplete ( ) )
13915	assertTrue ( "user in admin group should have access", val )
13916	Assert. fail ( "Can't cd into a non-existing nodepath." )
13917	assertStat ( result )
13918	assertArrayEquals ( output, output2 )
13919	assertEquals ( timeInstant. getTimeMode ( ), TimeInstant. TimeMode. NOW )
13920	assertEquals ( result, toTypedExpression ( "someB#ICB.onlyConcrete()", ICA. class ). getExpression ( ). toString ( ) )
13921	assertEquals ( 2, response. getReturn ( ). size ( ) )
13922	assertEquals ( "Method #toString is wrong", "PrefixCondition{field=name, value=tr}", condition. toString ( ) )
13923	assertEquals ( "Should get a 200 response", HttpStatus. OK, mongodbFeedSource. getEntry ( getEntryRequest ). getResponseStatus ( ) )
13924	sets. assertEmpty ( description, null )
13925	assertEquals ( 1, Utils. encodeFlags ( msg ) )
13926	assertFalse ( strategy. isCrawable ( url, 2 ) )
13927	assertEquals ( "JSON Form", result, json. toString ( ) )
13928	Assert. assertNotNull ( mediaId )
13929	assertDepth ( right, rightSource, 2 )
13930	assertTrue ( wordsFedFound )
13931	Assert. assertTrue ( fallbackRan )
13932	assertTrue ( ids. contains ( createdMember. getId ( ) ) )
13933	assertEquals ( "chrome", result. getUserAgent ( ) )
13934	Assert. assertEquals ( "Invalid html output with XML", TransformXMLTestHelper. EXPECTED, output )
13935	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
13936	Assert. assertEquals ( decompressFlag, methodCalled. get ( 0 ) )
13937	assertThat ( fieldError, is ( not ( nullValue ( ) ) ) )
13938	assertEquals ( "check plugins empty", _plugins, Collections. emptySet ( ) )
13939	Assert. assertTrue ( "value~~~~~~~". equals ( value ) )
13940	assertTrue ( "Sub category does not exist.", DAO. exist ( deleteCategory. getId ( ) ) )
13941	assertAnnotationCompletions ( "@Value(\\"#{345${spring.prop1<*>}}\\")" )
13942	assertArrayEquals ( ordered, result. toArray ( new String [ 0 ] ) )
13943	assertEquals ( EntityUtil. createDuration ( "PT1396M" ), d_wtp. getBean ( ). getOffset ( ) )
13944	Assert. assertTrue ( "It should return Parameter Values", Arrays. equals ( values, parameterValues ) )
13945	tester. assertRenderedPage ( HomePage. class )
13946	assertThat ( text ( written ), is ( "\\n" ) )
13947	assertEquals ( "/t/test", templateUri. toString ( ) )
13948	assertEquals ( 5445, result )
13949	assertFalse ( EntitySearcher. getSuperClasses ( dataFactory. getOWLClass ( IRI. create ( "http://example.org/B" ) ), input ). contains ( dataFactory. getOWLThing ( ) ) )
13950	testRunner. assertNotValid ( )
13951	assertEquals ( refPoint, testPoint )
13952	assertThat ( wrapAnyException ( callable, with ( SomeOtherCheckedException. class ) ), is ( "value" ) )
13953	assertTrue ( installedModuleServices. contains ( module ) )
13954	assertArrayEquals ( result, domainRoles )
13955	assertEquals ( 1, ( ( ObjectWithOptions2 ) ( ( ObjectWithOptions ) options. optOp ). optionsOp ). value )
13956	context. assertIsSatisfied ( )
13957	assertEquals ( 0.0, epsilon. evaluate ( front ), EPSILON )
13958	assertThat ( orchestrator. getPlugin ( TestPlugin. class ). getStarted ( ), not ( hasItem ( new Id ( "disabled" ) ) ) )
13959	assertTrue ( testModelView instanceof MyModelView )
13960	assertEquals ( "protection domain has to be inherited from the PluginClassLoader. ", pd1, pd2 )
13961	assertEquals ( Integer. valueOf ( 2 ), deque. getLast ( ) )
13962	assertEquals ( "a\\tb\\tc\\n" + "b\\tc\\td\\n", out. toString ( ) )
13963	assertEqualDoubleArrays ( pymin, min, epsilon )
13964	assertEquals ( MyMedication. class, mo. getContained ( ). get ( 0 ). getClass ( ) )
13965	Assert. assertFalse ( subscriptionsResult. accept ( element ) )
13966	assertThat ( testValues, is ( expectedValues ) )
13967	assertEquals ( expectedContainers, actualContainers )
13968	assertThat ( parsed. properties ( ), emptyMap ( ) )
13969	assertEquals ( "duzentos reais", actual )
13970	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<samlp:Response Consent=\\"urn:oasis:names:tc:SAML:2.0:consent:unspecified\\" Destination=\\"https://samlcent/Shibboleth.sso/SAML2/POST\\" ID=\\"_fd601e21-5f81-469e-88c7-da72dccf1357\\" InResponseTo=\\"_545e60fe3602a06d25f241b622c5a773\\" IssueInstant=\\"2015-04-06T06:42:39.213Z\\" Version=\\"2.0\\" xmlns:samlp=\\"urn:oasis:names:tc:SAML:2.0:protocol\\"><Issuer xmlns=\\"urn:oasis:names:tc:SAML:2.0:assertion\\">http://SAMLWIN.saml.lan/adfs/services/trust</Issuer><samlp:Status><samlp:StatusCode Value=\\"urn:oasis:names:tc:SAML:2.0:status:Success\\"/></samlp
13971	assertThat ( ratio, closeTo ( 0.01, 0.002 ) )
13972	assertThat ( testListener. isDelivered ( ), is ( true ) )
13973	assertThat ( logRecords, containsFine ( testFacade. getServiceExistsLogMessage ( ) ) )
13974	GenericTestUtils. assertExceptionContains ( "does not match CTime of NN", ive )
13975	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 06" ) )
13976	resultEndpoint. assertIsSatisfied ( )
13977	assertEquals ( "Should return a serialized point", ALICE_PUBLIC_KEY, mult )
13978	Assert. assertNotNull ( "Did not receive a session", this. session )
13979	Assert. assertFalse ( pti. equals ( null ) )
13980	assertTrue ( isValid )
13981	assertGameOver ( )
13982	assertTrue ( "Configurable sasl server factory should be created", ops. exists ( TEST_SERVER_FACTORY_ADDRESS ) )
13983	assertions. isNotLessThan ( new Integer ( 10 ) )
13984	assertNull ( nn. vecLpDist ( 0.0, null, false ) )
13985	assertCallTree ( callTree, callStack. getStackEvents ( ), true )
13986	assertEquals ( simple. getName ( ), find. getName ( ) )
13987	assertDependencyResolvedToEmptyOptional ( )
13988	assertThat ( mode, is ( equalTo ( ShellMode. batch ( "replay c:\\\\Users\\\\franckc\\\\script.txt" ) ) ) )
13989	assertEquals ( expected, wire. read ( ( ) -> "VALUE" ). int64 ( ) )
13990	assertEquals ( 0d, p. evaluate ( d ), Double. MIN_VALUE )
13991	assertEquals ( "No data source", dsc. getDisplayName ( ) )
13992	assertTrue ( ( Boolean ) result )
13993	verify ( messages ). assertAbsenceOfErrors ( )
13994	assertThat ( tags. size ( ), is ( 0 ) )
13995	Assert. assertNull ( HtmlFormEntryUtil. getLocation ( "SessionAttribute:someSessionAttribute", formEntryContext ) )
13996	assertEquals ( 2, results. length )
13997	Assert. assertTrue ( "qname resolved incorrectly: " + found, topic == found )
13998	assertLdapPassword ( ACCOUNT_JACK_SAM_ACCOUNT_NAME, ACCOUNT_JACK_FULL_NAME, ACCOUNT_JACK_PASSWORD )
13999	assertEquals ( "Failed authentication was not logged", "testingValue:" + SecurityAuthenticationFailedEvent. class. getName ( ), getContent ( ) )
14000	assertTrue ( getRecordsAsXmlString. contains ( "hopCount=\\"2\\"" ) )
14001	assertEquals ( tags. all ( ). size ( ), originalSize + 1 )
14002	assertEquals ( 9, result. getProperties ( ). size ( ) )
14003	assertEquals ( expResult, result )
14004	Assert. assertEquals ( expect, cnt )
14005	assertResultSet ( res )
14006	assertTrue ( Bytes. compareTo ( bytes1, bytes2 ) < 0 )
14007	assertEquals ( "subSubName", expr. exec ( new PmExprExecCtxt ( pmConversation ) ) )
14008	assertEquals ( obj. get ( "jsonNode" ), "asdf" )
14009	Assert. assertEquals ( node, r. get ( "node" ) )
14010	Assert. assertFalse ( service. isAlertSystemOn ( ) )
14011	mockery. assertIsSatisfied ( )
14012	assertNull ( resp. getLinkWith ( "Dummylege" ) )
14013	assertEquals ( expected, actual )
14014	Assert. assertTrue ( true )
14015	Assert. assertEquals ( "Numer of tuples in database", DATABASE_SIZE, databaseSize )
14016	assertTrue ( e instanceof E_StrUpperCase )
14017	Assert. assertTrue ( parameter. evaluate ( rewrite, context ) )
14018	assertSame ( GBP_2_34, test )
14019	assertEquals ( expected, result )
14020	assertTrue ( check ( "a", input, output ) )
14021	assertTrue ( StringUtils. isNotBlank ( report ) )
14022	assertEquals ( expResult, result )
14023	assertEquals ( 2, builder. getAddedVehicleTypes ( ). size ( ) )
14024	assertEquals ( test. expected ( ), test. actual ( ) )
14025	assertEquals ( creditCardXML, writer. toString ( ). trim ( ) )
14026	Assert. assertEquals ( inverse. size ( ), fields. length )
14027	assertEquals ( "-something", commandLine. getOptionValue ( 't' ) )
14028	assertEquals ( sqe, convertResult. get ( 0 ) )
14029	assertThat ( tableNames, Matchers. containsInAnyOrder ( "SOMETABLE_A", "SOMETABLE_C" ) )
14030	Assert. assertEquals ( 0, reactorHandlerRegistry. getEntrypoints ( ). size ( ) )
14031	assertEquals ( "dois undecilh玫es", actual )
14032	assertEquals ( EmailState. DELETED, result. getState ( ). getState ( ) )
14033	assertPermanentCount ( playerA, "Elite Vanguard", 1 )
14034	assertNotNull ( result )
14035	Assert. assertEquals ( 130560, result, 0 )
14036	assertThat ( getRecordedDomain ( ), not ( hasCondition ( Progressing ) ) )
14037	assertArray ( new double [ ] { 0.01, 0.019, 0.055, 0.073, 0.137, 0.163, 0.254, 0.289 }, scaleDouble ( 3, node1. getPotentials ( ) ) )
14038	assertEquals ( expResult, result )
14039	assertEquals ( expected, actual )
14040	Assert. assertEquals ( quantidade, tamanho )
14041	assertEquals ( expected, identity )
14042	assertArrayEquals ( new String [ ] [ ] { new String [ ] { "alias", "index", "filter" }, new String [ ] { "testAlias", "testIndex", "-" } }, catResult. getPlainText ( ) )
14043	assertEquals ( a1, a2 )
14044	assertNull ( property )
14045	assertThat ( info. isRequired ( ), is ( true ) )
14046	assertTrue ( inv1. fire ( "foo" ) )
14047	assertEquals ( 8, someNotSoRandomAsciiAsList. size ( ) )
14048	Assert. assertEquals ( "Hello World", ejbInstance. sayHello ( ) )
14049	assertTrue ( selector. evaluate ( source ) )
14050	Assert. assertEquals ( EstadoAsientoRegistralEnum. RECHAZADO. getValue ( ), estado. getEstado ( ) )
14051	assertEquals ( Math. sqrt ( 0.02 ), distance. compute ( point1, point2 ), EPSILON )
14052	assertEquals ( 3, encounters. size ( ) )
14053	assertThat ( notSent, containsInAnyOrder ( mail, anotherMail ) )
14054	assertEquals ( FooA. class, dummy. foo. getClass ( ) )
14055	MatcherAssert. assertThat ( domainPresenceInfo. getServerPod ( SERVER_NAME ), nullValue ( ) )
14056	assertEquals ( "Expected 1 result!", 1, n )
14057	assertXMLEqual ( "Invalid contents of header", "<Header xmlns='http://www.w3.org/2003/05/soap-envelope' >" + "<NotUnderstood qname='spring-ws:NotUnderstood' xmlns:spring-ws='http://www.springframework.org' />" + "</Header>", result. toString ( ) )
14058	assertTrue ( monitor. isLeader ( ) )
14059	Assert. assertNotNull ( this. mocker. getComponentUnderTest ( ). getLock ( this. currentDocumentReference ) )
14060	assertFalse ( config. isAdvancedClusterConfigSet ( ) )
14061	assertThat ( sampleTestClass. driver, is ( not ( nullValue ( ) ) ) )
14062	rule. assertScenarioEnded ( )
14063	assertTrue ( cp. isReadOnly ( ) )
14064	assertEquals ( "Hello :Tim", ResponseBodyInterpolator. interpolate ( "Hello ::name", req ) )
14065	Assert. isTrue ( rows == 1 )
14066	assertEquals ( MetaEndpoint. VERSION, version )
14067	Assert. assertEquals ( connectionTimeout, victim. create ( ). getConnectionTimeout ( ) )
14068	assertEquals ( expected, result )
14069	assertEquals ( "", propositionDefinition. getRuleId ( ), returnPropositionDefinition. getRuleId ( ) )
14070	assertEquals ( IS_NULL. toString ( ), res. getHibernateCriterion ( ). toString ( ) )
14071	logSpy. assertInfoWithExceptionWasLogged ( ElementNotVisibleException. class )
14072	assertEquals ( 1, constraints. size ( ) )
14073	assertFalse ( collection. isEmpty ( ) )
14074	Assert. assertEquals ( "Fail count record of room", i, cr )
14075	Assert. assertFalse ( tcpConnectivity. supports ( requirement ) )
14076	assertEquals ( LineText. LEFT, lineText. getAlignment ( ) )
14077	assertThat ( anyTS. contains ( SECOND_OF_DAY ), is ( true ) )
14078	assertEquals ( "Expected 0 results!", 0, n )
14079	assertEquals ( 0, list. size ( ) )
14080	assertEquals ( 0, curatedDrugs. size ( ) )
14081	assertAxisEquals ( 0.9, 1.3, new double [ ] { 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3 }, new String [ ] { "0.90", "0.95", "1.00", "1.05", "1.10", "1.15", "1.20", "1.25", "1.30" }, axis )
14082	assertAllCommandsUsed ( )
14083	assertThat ( selectedCell, is ( "B2" ) )
14084	assertThat ( new SearchArgumentFilter ( searchArgument, structTypeInfo ). accept ( corc ), is ( true ) )
14085	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff_overflowNewContent02_" ) )
14086	assertEquals ( 1, CommandCollectorVisitor. getCommands ( command ). size ( ) )
14087	assertExtendedEquals ( expected, dd, PRODUCT_TOLERANCE_FACTOR )
14088	assertEquals ( 3, numberOfTests. getLength ( ) )
14089	assertNull ( result )
14090	assertEquals ( 0, tasks. size ( ) )
14091	assertEquals ( "vertical scrollbar policy must be always", JScrollPane. VERTICAL_SCROLLBAR_ALWAYS, scrollPane1. getVerticalScrollBarPolicy ( ) )
14092	Assert. assertEquals ( 4, tables. size ( ) )
14093	assertNotNull ( result )
14094	r. assertEqualBeans ( orig, received, "ami,zone,description,remoteFS,type,jvmopts,stopOnTerminate,securityGroups,subnetId,iamInstanceProfile,connectionStrategy" )
14095	assertEquals ( expected, actual )
14096	assertTrue ( rs. next ( ) )
14097	assertEquals ( 2011, Evaluator. evaluate ( ex ) )
14098	assertTrue ( "Got sources", config. getSources ( "non.existing,key" ). isEmpty ( ) )
14099	assertThat ( result, is ( "Network2" ) )
14100	assertEquals ( 0, instance. getNeuronsCount ( ) )
14101	context. assertIsSatisfied ( )
14102	ModuleTestUtils. assertGradientCorrectByFd ( topo, x, 1e-5, 1e-8 )
14103	assertEquals ( null, encryption )
14104	Assert. assertNotNull ( instance. getFirstAtomMapping ( ) )
14105	assertThat ( followInitiativeDao. listFollowers ( initiativeId ), hasSize ( 1 ) )
14106	dataLoader. assertDataToJsonEqualsExpectedFileContent ( "shouldReturnFieldsOnly.json", result )
14107	assertNull ( "Unexpected value in outputTriple: " + outputTriple, outputTriple )
14108	assertTrue ( map instanceof HashMap )
14109	assertTrue ( map. size ( ) == 1 )
14110	assertThat ( type, equalTo ( DBR_TIME_String. TYPE ) )
14111	assertEquals ( "Wrong super type", ConfigurationBuilderEvent. ANY, builderResetType. getSuperType ( ) )
14112	assertEquals ( 3, allClasses. size ( ) )
14113	assertThat ( getConfiguredDomainSpec ( ). getAdminServer ( ). getEnv ( ), allOf ( hasItem ( createConfigMapKeyRefEnvVar ( "VARIABLE1", "my-env", RAW_VALUE_1 ) ), hasItem ( createSecretKeyRefEnvVar ( "VARIABLE2", "my-secret", RAW_VALUE_1 ) ), hasItem ( createFieldRefEnvVar ( "MY_NODE_IP", RAW_VALUE_1 ) ) ) )
14114	assertEquals ( expected, actual )
14115	assertThat ( getPodSpec ( jobSpec ). getContainers ( ), not ( hasContainer ( "container1", "busybox", "sh", "-c", "echo admin server && sleep 120" ) ) )
14116	assertTrue ( "Initialization time exceeded threshold; elapsed " + elapsed, elapsed < 1000000000 )
14117	assertEquals ( BatchStatus. COMPLETED, execution. getStatus ( ) )
14118	assertThat ( groupUnderTest. isFeatureEnabled ( ), is ( equalTo ( false ) ) )
14119	assertEquals ( content. get ( numberOfContent - 1 ), ( ( H2HTestData ) nodeB. getDataManager ( ). get ( parameters ) ). getTestString ( ) )
14120	assertEquals ( "6.3 3 1 + 5 / 3.14 + 600 * 2 3 + 6 4.3 9 - + - % -", this. codeGenerator. getPostFixExpression ( ) )
14121	assertTrue ( "JTA should be enabled.", isJtaEnabled ( ) )
14122	assertNull ( processEngine. getRuntimeService ( ). createProcessInstanceQuery ( ). singleResult ( ) )
14123	Assert. assertEquals ( expected, actual. getName ( ) )
14124	assertEquals ( literal, builder. toString ( ) )
14125	assertEquals ( 64, aggregator. generateId2OutcomeFile ( ). split ( "\\n" ). length )
14126	assertEquals ( expResult, stringBuilder. toString ( ) )
14127	assertThat ( page. clickTargetButton. isVisible ( ), is ( true ) )
14128	assertEquals ( expectedFolderPath, buildFolderPath )
14129	assertChildren ( moveTo )
14130	assertNotNull ( p )
14131	assertEquals ( "Latitude is not properly parsed", 5.3f, mapper. readLatitude ( columns ), 0 )
14132	Assert. assertEquals ( testcrypt, client. getCryptoSuite ( ) )
14133	assertThat ( result ( ), not ( containsString ( "\\"client\\"" ) ) )
14134	assertEquals ( "somefield:(%1$s)^10 fieldwithweight:(%1$s)^1 superfield:(%1$s)^10000", updatedSearchFormat )
14135	assertThat ( result, notNullValue ( ) )
14136	Assert. fail ( "Should have thrown SQLFeatureNotSupportedException" )
14137	assertThat ( Material. matchMaterial ( String. valueOf ( material. getId ( ) ) ), is ( material ) )
14138	assertNotNullOrEmpty ( "Tags should never be null.", tags )
14139	Assert. isTrue ( users. size ( ) > 0 )
14140	assertTrue ( ( "actual count: " + count ), count <= 2 )
14141	assertEquals ( "Audit log count should be equal", 5, auditLogs. size ( ) )
14142	assertEquals ( 0., iCosts, 0.01 )
14143	Assert. assertEquals ( "Mismatch between system property (or default) and OgnlRuntime _useFirstMatchGetSetLookup flag state?", optionDefinedInEnvironment? flagValueFromEnvironment : defaultValue, OgnlRuntime. getUseFirstMatchGetSetLookupValue ( ) )
14144	assertEquals ( 1, cache. listPrivileges ( null, null, null, new Server ( "server1" ), new Database ( "db1" ) ). size ( ) )
14145	assertEquals ( "Hello There. Here is some text.", text )
14146	assertEquals ( "false! 456.5 [\\\\d\\\\.]+ =~ ||", this. codeGenerator. getPostFixExpression ( ) )
14147	mockery. assertIsSatisfied ( )
14148	assertEquals ( columns, total )
14149	assertXmlEqual ( expected, formatterOutput )
14150	assertEquals ( publisher, result )
14151	assertTrue ( AbstractAnalyticsService. hasMetrics ( css1 ) )
14152	assertTrue ( setCookie. contains ( "; HTTPOnly" ) )
14153	assertThat ( PlainDate. of ( 2000, 12, 1 ). with ( model. weekOfYear ( ). atFloor ( ) ), is ( PlainDate. of ( 2000, 11, 26 ) ) )
14154	assertEquals ( "LOCAL:  \\nFrau\\nUserFN UserLN\\naddr2\\naddr1\\n121212 City1\\nGermany", bpartnerBL. mkFullAddress ( bPartner, bpLocation, user, null ) )
14155	Assert. assertFalse ( FileUtil. gitDirectoriesAreEqual ( neq1, neq2 ) )
14156	assertEquals ( asList ( info ( mdcValues, marker, message ) ), testLogger. getLoggingEvents ( ) )
14157	assertEquals ( null, t. name )
14158	Assert. assertEquals ( "EXCEPTION: class java.lang.IllegalStateException", response )
14159	Assert. assertEquals ( true, authServerName. equals ( serverName ) )
14160	assertThat ( confirmation. validate ( ), equalTo ( true ) )
14161	Assert. assertEquals ( "io.selendroid.test:0.13.0", defaultApp )
14162	assertEquals ( "hello, world!", result )
14163	assertTrue ( "Repository should contain newly added statement", testCon. hasStatement ( name, name, nameBob, false ) )
14164	assertEquals ( expectedValue, advice. cacheSingleAssign ( pjp ) )
14165	assertEquals ( expected, actual )
14166	assertEquals ( "A Value with an interpolated data and real data added then removed should return the interpolated value on getValue().", interpolatedValue, victim. getValue ( ), EPSILON )
14167	Assert. assertEquals ( 1, dao. listPolicies ( ). size ( ) )
14168	assertThat ( result, is ( jsonBoolean ( false ) ) )
14169	assertTrue ( pattern. matches ( "-1.1" ) )
14170	assertThat ( adapterHelloWorld. helloWorld ( ), is ( "Hello Adapter!" ) )
14171	assertThat ( sel, is ( cls ) )
14172	assertThat ( result, is ( 8L ) )
14173	assertBeanValidation ( json, "end_relative.value must be greater than or equal to 1" )
14174	assertEquals ( "Failed to mark correct position", 'W', cr. read ( ) )
14175	assertEquals ( 40, rs. getInt ( 1 ) )
14176	assertTrue ( output, output. matches ( "(?s).*get 'x' in \\\\d+ms = " + val + ".*" ) )
14177	assertThat ( dest. get ( "ccc" ), is ( nullValue ( ) ) )
14178	Assert. assertEquals ( "[a, b, c, d, e]", inv. invokeFunction ( "split", "a.b.c.d.e" ). toString ( ) )
14179	assertEquals ( list, parser ( "( \\"s//tr\\" )" ). object ( "" ) )
14180	assertThat ( repository. getWorkspaceNames ( ), is ( workspaceNames ) )
14181	assertThat ( branchFilter, instanceOf ( AllBranchesFilter. class ) )
14182	Assert. assertEquals ( HostState. Disabled, vo. getState ( ) )
14183	assertTrue ( resolver. resolve ( ) == null )
14184	Assert. assertEquals ( 0, analyser. getVariableTransportCostsAtActivity ( route. getStart ( ), route ), 0.01 )
14185	assertNull ( fileOperationMap. getOperation ( operation. getPnfsId ( ) ) )
14186	assertEquals ( 0, errors. get ( ) )
14187	assertMultilinesEquals ( localize ( Level. INFO, "INFO\\t First line\\n" + "\\t   Indented line\\n" + "\\t Last line\\n" ), formatted )
14188	Assert. assertEquals ( AgentConstants. PLATFORM_VMWARE, this. agent. parameters )
14189	assertEquals ( 26, predict. size ( ) )
14190	assertEquals ( "<p><img src=\\"http://example.com/\\" alt=\\"Image\\"></p><p><img></p>", TextUtil. stripNewlines ( cleanHtml ) )
14191	assertEquals ( TextField. FIELD_TYPE, f. getFieldType ( ) )
14192	assertEquals ( 0, errors. size ( ) )
14193	assertTrue ( "script is locktime-verify", script. isSentToCLTVPaymentChannel ( ) )
14194	assertNotNull ( start. getLastBuild ( ) )
14195	assertThat ( boundSql. getSql ( ), Matchers. equalTo ( "select " ) )
14196	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED, status )
14197	assertEquals ( generatedJavascript, expectedJavascript )
14198	assertEquals ( expected, actual )
14199	Assert. assertEquals ( ( Long ) 11l, res )
14200	assertTrue ( false )
14201	assertEquals ( 6. * 3600. + 6. * 60. + 12., sec, 0.01 )
14202	assertThat ( str, contains ( "refer", "level" ) )
14203	assertThat ( result, is ( equalTo ( ( List < String > ) of ( "AA", "BB" ) ) ) )
14204	assertEquals ( 1, findings. size ( ) )
14205	assertValid ( "//xsd:element[@name='data'][@type='xsd:base64Binary']", doc )
14206	assertNoMessage ( getMockEndpoint ( ) )
14207	assertEquals ( "123 Some Road", result )
14208	assertThat ( selected, is ( infoPresenter ) )
14209	assertEquals ( body. toString ( ), "hello" )
14210	assertNotNull ( "EngineFactory is not configured.", factory )
14211	assertEquals ( 1, objects. size ( ) )
14212	assertEquals ( subset. fields ( ). length, 0 )
14213	assertTrue ( AlgorithmContentEquals. contentEquals ( algorithm, equalAlgorithm ) )
14214	TestCase. assertTrue ( result )
14215	assertTrue ( result )
14216	assertEquals ( SliceReadStatus. StreamDeleted, slice. status )
14217	assertNotNull ( conversions. newInstance ( 1, 2 ) )
14218	assertTrue ( result. getErrors ( ). size ( ) > 0 )
14219	assertThat ( POSIX_FORMATTER. format ( utc ), is ( "2012-06-30 23:59:59.123456789Z" ) )
14220	assertEquals ( createMessageFrame ( message ), sentFrame )
14221	assertTrue ( determinized. equals ( fstDeterminized ) )
14222	assertTrue ( ok )
14223	assertEquals ( "", result )
14224	assertEquals ( "x", vdb. getName ( ) )
14225	Assert. assertEquals ( "Value is incorrect", map, value )
14226	assertFalse ( tagNode. isSelfClosing ( template ) )
14227	Assert. assertEquals ( "in", listLoopStatement. getExpression ( ) )
14228	assertPowerToughness ( playerA, "Amoeboid Changeling", 4, 4 )
14229	assertThat ( testUriStr, is ( anyOf ( equalTo ( expectedUriStr0 ), equalTo ( expectedUriStr1 ) ) ) )
14230	assertNotNull ( store. get ( key, new String [ 0 ] ) )
14231	Assert. assertEquals ( 1, factory. getNumCarvedTestCases ( ) )
14232	assertEquals ( expFilter, filter )
14233	assertNotNull ( base64 )
14234	assertEquals ( 1, result. getNuOfDimensions ( ) )
14235	assertEquals ( "server-test-1", server. getName ( ) )
14236	assertEquals ( "����浣�濂�", person. myName ( "浣�濂�" ) )
14237	assertEquals ( 1, inProgressMessages. size ( ) )
14238	assertTrue ( importedSample. getCurrentState ( ). equals ( "b" ) )
14239	assertThat ( repo1 == repo2, is ( true ) )
14240	assertTrue ( rec_cnt == 1 )
14241	Assert. assertFalse ( result )
14242	assertMatrixEquals ( Ad, A )
14243	assertNull ( twinMetadata )
14244	assertNotNull ( "First transcript in the collection must be returned", transcript )
14245	assertThat ( control. matches ( "/clients/15" ), is ( equalTo ( true ) ) )
14246	assertEquals ( "Adverse event", pm_ade. getCategoryName ( ) )
14247	assertThatReplicatorWillCommitUpToIndex ( receivedCommitIndex )
14248	assertArrayEquals ( expected, result, 0.000001 )
14249	assertTrue ( Transforms. abs ( sub1. sub ( arr2 ). div ( sub1 ) ). maxNumber ( ). doubleValue ( ) < 0.01 )
14250	Assert. assertEquals ( dataHoraRecibo, consultaRetorno. getDataHoraRecibo ( ) )
14251	assertArrayEquals ( expected, numbers )
14252	Assert. assertNotNull ( "Default module not found", def )
14253	assertEquals ( "Hello", message. toString ( ) )
14254	assertEquals ( bitApi. getKey ( ), BitcodinApiTest. settings. apikey )
14255	assertThat ( valid, is ( equalTo ( false ) ) )
14256	assertEquals ( 0, position, 0 )
14257	assertFalse ( array. isView ( ) )
14258	assertEquals ( new Response ( ), result )
14259	assertEquals ( ChargingCapability. V_480V_3_PHASE_32A, ChargingCapability. fromConnector ( connector ) )
14260	Assert. assertFalse ( facetFactory. register ( faceted, facetFactory. create ( faceted, MockExceptionFacet. class ) ) )
14261	assertEquals ( 204, response. getStatus ( ) )
14262	assertThat ( abc, is ( "eureka" ) )
14263	assertEquals ( expResult, result )
14264	assertEquals ( hash64_1, hash64_2 )
14265	Assert. assertEquals ( "136.5", response )
14266	assertEquals ( "world&bar", builder. getQueryParameter ( "hello world" ) )
14267	assertEquals ( "<html><head><title>One</title></head><frameset><frame /><frame /></frameset></html>", TextUtil. stripNewlines ( doc. html ( ) ) )
14268	assertEquals ( "Value is incorrect", map, value )
14269	assertTrue ( baseConsumerClass. exists ( ) )
14270	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
14271	Assert. assertEquals ( motivo, consultaRetorno. getMotivo ( ) )
14272	assertProcessInstanceCompleted ( processInstance )
14273	assertEquals ( expectedQuery, actualQuery )
14274	assertEquals ( "/my/bar/is/COOL", rewriteEngine. processInbound ( null, null, c, url ) )
14275	Assert. assertFalse ( wizard. isVisible ( ) )
14276	assertIsSatisfied ( 2L, TimeUnit. SECONDS, secondOutbound )
14277	Assert. assertEquals ( expected, actual )
14278	assertThat ( qualifier, is ( testCase. toString ( ) ) )
14279	context. assertIsSatisfied ( )
14280	assertEquals ( Sets. newHashSet ( 1, 2 ), Sets. newHashSet ( q. asList ( ) ) )
14281	assertThrown ( val, promise2 )
14282	assertNotNull ( result )
14283	assertListEquals ( "Attempt #" + index, expected, actual )
14284	assertTrue ( cc. toString ( ). contains ( "private=\\"a,b\\"" ) )
14285	assertThat ( response. getBody ( ), containsString ( "Hello World, Buddy" ) )
14286	assertNull ( cs. getWarnings ( ) )
14287	assertEquals ( featureService1, aspect. getFeatureService ( ) )
14288	arrays. assertNotEmpty ( description, null )
14289	assertTrue ( result == null )
14290	Assert. assertEquals ( b, m. getBook ( ) )
14291	assertEquals ( new Float ( 123.4 ), result )
14292	Assert. assertEquals ( expResult, result, 0.0 )
14293	assertTrue ( actionServiceRegistered )
14294	Assert. assertEquals ( new Path ( "obj1.nestedSimpleInteger" ), fullPath )
14295	Assert. assertEquals ( "Block result is wrong", new Integer ( 2 ), o )
14296	assertEquals ( 0, maxByColumns. length )
14297	assertEquals ( map, ( ( Map < String, Object > ) map. get ( "child" ) ). get ( "parent" ) )
14298	assertEquals ( - 1, tree. getBeforePosition ( ZERO ) )
14299	assertEquals ( "(k1=(f=1))", o )
14300	assertThat ( emptyDatabase. isClean ( ), is ( true ) )
14301	assertEquals ( "jsmith@aaa.bbb", mappedIdentity )
14302	assertThat ( txId1. get ( ), is ( not ( txId2. get ( ) ) ) )
14303	assertThat ( uri. isTemplate ( ), equalTo ( true ) )
14304	Assert. assertTrue ( true )
14305	assertEquals ( "Expected 0 results!", 0, n )
14306	assertTrue ( HttpTestUtils. equivalent ( req, wrapper ) )
14307	assertEquals ( "Wrong average value for not connected graph, should be 0.0", 0.0, average, 0.0 )
14308	assertThat ( underTest. readFile ( ), is ( "testpass" ) )
14309	assertFalse ( violation )
14310	assertTrue ( fs. exists ( srcFilePath ) )
14311	assertEquals ( actual, pluginConfiguration )
14312	assertEquals ( expectedQuery, actualQuery )
14313	assertNotEquals ( getMapping1, getMapping2 )
14314	assertEquals ( "#: expected type is one of String or Map, found: Integer", actual )
14315	assertEquals ( tag. doStartTag ( ), Tag. SKIP_BODY )
14316	assertTrue ( events. size ( ) == 1 )
14317	assertEquals ( false, result )
14318	Assert. assertEquals ( 2, searchScreenshots. size ( ) )
14319	assertEquals ( "Expected 5 results!", 5, n )
14320	Assert. assertTrue ( children. size ( ) > 0 )
14321	Assert. assertNotNull ( rangerServiceDef )
14322	Assert. assertEquals ( "host", endpoint. getSystemName ( ) )
14323	assertEquals ( "blah", result. getProperty ( "test" ) )
14324	Assert. assertEquals ( "current", authzDepConf. get ( currentVar. getVar ( ) ) )
14325	iterables. assertIsSubsetOf ( someInfo ( ), actual, newArrayList ( "Yoda", "Yoda", "C-3PO" ) )
14326	assertEquals ( 2, em. createQuery ( query ). getResultList ( ). size ( ) )
14327	assertTrue (! response. isEmpty ( ) )
14328	assertTrue ( true )
14329	Assert. assertEquals ( getElement ( "PV1.3", "PL.1" ) + " " + getElement ( "PV1.3", "PL.4" ), handler. getPatientLocation ( ) )
14330	Assert. assertArrayEquals ( expected, actual. toArray ( ) )
14331	Assert. assertEquals ( builder. toString ( ), expected, actual, tol )
14332	assertEquals ( count1, repository. execute ( countOp ). longValue ( ) )
14333	Assert. assertEquals ( "(nt_change_duplication (nt_point_location (nt_base_location (nt_number 123))) dup)", nt_change_duplication. toStringTree ( parser ) )
14334	assertBothAlbums ( repository. findByTracksNameLike ( "*it*" ) )
14335	assertEquals ( newValue, rot. getRateOfTurn ( ), 0.1 )
14336	Assert. assertEquals ( expected, new HtmlEntitiesFormatter ( ). format ( input, options ) )
14337	assertEquals ( "There should be one remaining key in the directory tree", 1, keys )
14338	Assert. assertEquals ( expected, FileCommands. ftGetFileInfo ( channelIds, channelPasswords, filePaths ). toString ( ) )
14339	assertEquals ( server. getConfig ( ). get ( "testserver.a" ), "default" )
14340	assertThat ( response. getStatus ( ). getCode ( ), is ( HttpStatus. BAD_REQUEST ) )
14341	assertNotNull ( extractorInstance1 )
14342	Assert. assertTrue ( success )
14343	assertEquals ( "(SSN, SSM) IN ('11111111111111', '22222222222222')", result. toString ( ) )
14344	Assert. assertEquals ( "涓�|瑗夸集�╀�", words )
14345	Assert. assertThat ( values, Matchers. contains ( "compress", "gzip", "*", "gzip", "gzip", "compress", "identity" ) )
14346	assertEquals ( uploadLocation + FileUtils. toDir ( stateToken ) + filename + "." + subExt + pngExtension, absFile )
14347	assertTrue ( MessageEncodeDecode. checkIsSameList ( m1. trackerDataList ( ), m2. trackerDataList ( ) ) )
14348	assertNotNull ( result )
14349	assertCapturedHint ( expected, capture, EncodeHintType. CHARACTER_SET )
14350	Assert. assertNull ( "Provided mechanism must be null.", httpServerAuthenticationMechanism )
14351	Assert. assertEquals ( "select by sym from test", select. toQ ( ) )
14352	assertEquals ( "喔о副喔�喙�喔�喔侧福喙�, 喔∴�喔｀覆喔�喔� 01", DateUtils. formatFriendlyDate ( DateUtils. nowUtc ( ), new Locale ( "th", "TH", "TH" ) ) )
14353	assertTrue ( getAlphaConstraint ( ksession ) instanceof LambdaConstraint )
14354	assertTrue ( true )
14355	assertTrue ( newYearsEve. isBefore ( newYearsDay ) )
14356	assertLookup ( breaks, values, srcImg, DataBuffer. TYPE_USHORT, roi, defaultV )
14357	assertEquals ( 0, multimap. size ( ) )
14358	assertThat ( subject. toString ( ), is ( "" + "***RDNS: (related to 0.2.193.in-addr.arpa) CRITICAL: Fatal error in delegation for zone 0.2.193.in-addr.arpa.\\n\\nNo name servers found at child or at parent. No further testing can be performed." ) )
14359	assertEquals ( "my-content-type", connection. getHeaders ( ). get ( "Content-Type" ) )
14360	assertTrue ( getNoErrorMsg ( ), result )
14361	assertThat ( qsCallback. asDocument ( ), is ( b. build ( ) ) )
14362	Assert. assertEquals ( fileComparer. replaceAbstractClasses ( file1AsList ), expectedResult )
14363	Assert. assertEquals ( getDao ( ). count ( ), count - 1 )
14364	assertEquals ( "[true]", buffer. toString ( ) )
14365	Assert. assertFalse ( policy. isResponseCacheable ( "GET", response ) )
14366	assertEquals ( i1, i2 )
14367	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Sms action=\\"https://example.com\\" from=\\"+15017122661\\" method=\\"GET\\" statusCallback=\\"https://example.com\\" to=\\"+15558675310\\">message</Sms>", elem. toXml ( ) )
14368	assertSame ( cache, nativeCache )
14369	Assert. assertEquals ( score, smsd1. getFragmentSize ( 0 ) )
14370	Assert. assertFalse ( "Capabilities should match", first. matchesCapabilities ( map ) )
14371	assertEquals ( true, bm. isBitSet ( 63 ) )
14372	Assert. assertEquals ( expected, Strings. unCapitalizeFirstChar ( data ) )
14373	assertNotNull ( pi )
14374	Assert. fail ( "Test encountered an unexpected exception." )
14375	assertNotNull ( spy. getSchemaNames ( null ) )
14376	assertEquals ( "string", param. toJson ( ) )
14377	Assert. assertTrue ( report. isSuccess ( ) )
14378	assertNull ( token )
14379	assertEquals ( TypeConversionFixture. class, type. getUnderlyingClass ( ) )
14380	assertEquals ( expectedQuery, actualQuery )
14381	assertEquals ( "distance($current.x, $current.y, 1.1, 1.2)", p. toString ( ) )
14382	Assert. assertNotNull ( url )
14383	assertEquals ( testNewUrl, jobEntryHadoopCopyFiles. loadURL ( testUrl, testNcName, metaStore, mappings ) )
14384	assertThatSql ( query, is ( "SELECT t1.c1,t2.c2 FROM table1 AS t1 INNER JOIN table2 as t2 ON t1.c0 = t2.c0" ) )
14385	assertEqualsIgnoreWhitespace ( expected, drl )
14386	assertEquals ( 0, changes. size ( ) )
14387	assertThat ( collectionName, not ( startsWith ( ADMIN_VRE ) ) )
14388	assertThat ( ( String ) value. getArguments ( ) [ 0 ], is ( equalTo ( "test" ) ) )
14389	assertSame ( value, XenqttUtil. validateGreaterThan ( "integer", value, max ) )
14390	Assert. assertEquals ( ( Integer ) 1, res )
14391	assertThat ( testOutcome. getTags ( ), allOf ( hasItem ( TestTag. withName ( "A user story in a feature" ). andType ( "story" ) ), hasItem ( TestTag. withName ( "A feature" ). andType ( "feature" ) ) ) )
14392	Assert. assertEquals ( "driver.navigate().back();", result )
14393	assertEquals ( expected, result )
14394	assertScheduleWhenTuplesAvailableStrategy ( strategy, 1 )
14395	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
14396	assertTrue ( "SecurityWrapperRequest should return an empty String when an exception occurs in validation", rval. isEmpty ( ) )
14397	assertThat ( tester. response. getStatus ( ), is ( equalTo ( HttpServletResponse. SC_OK ) ) )
14398	assertEquals ( linearChainFg, fgfile )
14399	Assert. assertEquals ( "other", config. getName ( ) )
14400	assertNull ( "Required profiles is not null", new EquinoxPlatformBuilderF321T372 ( m_bundleContext, "version" ). getRequiredProfile ( m_platformContext ) )
14401	assertThat ( route, canHandle ( ClientsController. class, "list" ) )
14402	assertEquals ( expectedResult, result )
14403	assertContains ( e. getMessage ( ), "'first'" )
14404	assertBuildException ( "password" )
14405	assertEquals ( "Wrong interpolated value", "${DB2UNIVERSAL_JDBC_DRIVER_PATH}/db2jcc.jar,${DB2UNIVERSAL_JDBC_DRIVER_PATH}/db2jcc_license_cu.jar", config. getString ( "mypath" ) )
14406	assertEquals ( extSource, extSource2 )
14407	Assert. fail ( "A processor without message filters should fail on creation" )
14408	assertEquals ( "bar", lr. get ( 2 ). get ( ) )
14409	assertNotSame ( fixture, copy )
14410	assertNotEquals ( update1, update2 )
14411	assertTrue ( "result must be a failure", result. isFailure ( ) )
14412	assertEquals ( "Base for floats is wrong", Double. valueOf ( 3.6f ), parsed )
14413	assertThat ( response. getStatusLine ( ). getStatusCode ( ), is ( HttpStatus. SC_INTERNAL_SERVER_ERROR ) )
14414	Assert. assertTrue ( true )
14415	assertThat ( result, is ( jsonNumber ( 4 ) ) )
14416	assertNotNull ( rc. user ( ) )
14417	assertEquals ( outerJson, BsonCodec. bsonObjectToJsonObject ( outerBson ) )
14418	Assert. assertEquals ( "Remote asynchronous invocation of EJB was not successful", StatefulBeanRemote. ANSWER, response )
14419	Assert. assertEquals ( "le plus lentement", this. realiser. realise ( lentement ). getRealisation ( ) )
14420	assertNotNull ( exception )
14421	assertThat ( b. join ( ), is ( 20 ) )
14422	assertSame ( is, this. testee. getData ( cn ) )
14423	assertLife ( playerB, 14 )
14424	assertEquals ( "X='foo=bar%26baz=quz'", s. serialize ( m ) )
14425	assertNotEquals ( putMapping1, putMapping2 )
14426	assertObjectEquals ( "{}", t )
14427	assertEquals ( 1, posts. size ( ) )
14428	assertThat ( results, is ( Arrays. asList ( "C-A-B", "A", "B", "C" ) ) )
14429	assertSame ( array, data. getData ( type ) )
14430	Assert. assertEquals ( "f9d76aae4799610a3c904df073dc79f430b408b1", fp )
14431	assertFalse ( post. isVotedUpBy ( user ) )
14432	assertEquals ( 78, p. getTotalPages ( ) )
14433	assertTrue ( handler. isCalledOnce ( ) )
14434	assertThat ( testOutcome. lastStep ( ). getDescription ( ), is ( "Step 3" ) )
14435	assertTrue ( "Second auth with same API key was refused", wasException )
14436	assertFalse ( aggregator. usages ( ). iterator ( ). hasNext ( ) )
14437	assertThat ( result, isFailedCommand ( ) )
14438	assertEquals ( 1, ksession. fireAllRules ( ) )
14439	assertEquals ( Collections. EMPTY_LIST, articles )
14440	assertEquals ( "Expenses 9/12/2002\\n" + "\\n" + "Meal expenses $0.00\\n" + "Total $0.00", printer. getText ( ) )
14441	Assert. assertTrue ( "should be empty children", resources. isEmpty ( ) )
14442	assertEquals ( "Should return failure", "failure", jsonObj. get ( "status" ). getAsString ( ) )
14443	Assert. assertEquals ( "Value is incorrect", map, value )
14444	assertEquals ( "Captured BatchedModifications count", 1, batchedModifications. size ( ) )
14445	assertEquals ( original, result )
14446	assertEquals ( expResult. getId ( ), result. getId ( ) )
14447	assertThat ( new JSONObject ( actual ), sameJsonAs ( LOADER. readObj ( "arrayschema-list.json" ) ) )
14448	assertNotNull ( referenceObjectBinding )
14449	assertTvShowResultsPage ( results )
14450	assertThat ( house. cat. firstLeg. birthDay, is ( equalTo ( ( Calendar ) new GregorianCalendar ( 2010, 4, 10 ) ) ) )
14451	assertEquals ( mockPom, converter. convertFromText ( moduleName, null, null ) )
14452	assertSimpleMigration ( beforeFile, afterFile )
14453	this. assertLoadBlobViaTuples ( tuples, false, true )
14454	assertTrue ( "should passively ignore unknown, add plain if empty", jdbcAuthProvider. comparePasswords ( PASSWORD, PASSWORD ) )
14455	Assert. assertNotNull ( json. getString ( "uid" ) )
14456	assertFalse ( runtimeExceptionCalled [ 0 ] )
14457	Assert. fail ( "Version should fail: " + version )
14458	assertEquals ( "3.yes,1.A;3.yes,1.C;3.yes,1.D;3.yes,5.hello;3.yes,5.world;", stringWriter. toString ( ) )
14459	assertTrue ( "Got items while expected empty set", container. size ( ) == 0 )
14460	assertEquals ( "", converter. format ( null ) )
14461	assertSame ( provider, comboBox. getDataProvider ( ) )
14462	assertEquals ( 0, taskScheduler ( ). list ( ). size ( ) - initialSize )
14463	assertEquals ( ( Integer ) 2, counter. getCount ( ) )
14464	assertArrayEquals ( expected, oneZero. split ( ) )
14465	assertEquals ( Long. valueOf ( 67 ), resultMap. get ( "Age" ) )
14466	assertions. endsWith ( sequence )
14467	assertEquals ( 6, tokens. size ( ) )
14468	assertArrayEquals ( transactionViewModel. trits ( ), TransactionViewModel. fromHash ( tangle, transactionViewModel. getHash ( ) ). trits ( ) )
14469	Assert. assertTrue ( systemUnderTest. propertyOverridesExist ( ) )
14470	assertThat ( results. getTotal ( ), is ( 0l ) )
14471	assertions. hasSize ( 5 )
14472	Assert. assertFalse ( policy. isResponseCacheable ( request, response ) )
14473	assertEquals ( "Expected resolved parent", parent, instance. getParent ( ) )
14474	assertFalse ( ( ( Collection < IndexedRecord > ) writer. getSuccessfulWrites ( ) ). isEmpty ( ) )
14475	assertEquals ( "Wrong value", TEST_VALUE, interpolator. resolve ( TEST_NAME ) )
14476	Assert. assertTrue ( isOk )
14477	assertEquals ( Integer. valueOf ( Color. BLACK ), value )
14478	assertEquals ( BAD_REQUEST. getStatusCode ( ), response. getStatus ( ) )
14479	assertEquals ( "[= foo]", m. toString ( ) )
14480	assertEquals ( "Counts [follows=1, followed_by=1, media=1]", result )
14481	Assert. assertEquals ( 4, collector. actualResults. size ( ) )
14482	assertFalse ( checkTest )
14483	Assert. assertEquals ( 0.0, getMetric ( ). calculate ( getSession ( ) ), getDelta ( ) )
14484	Assert. fail ( "Have not found 'doDynamic' function for FooClass" )
14485	assertEquals ( 2, a. i )
14486	assertThat ( token. expiresAt ( new DateTime ( newTime ( 9, 59, 59 ) ) ), is ( false ) )
14487	assertEquals ( 1, hookClass. markPossiblyBroken )
14488	assertNotNull ( NonTerminal. STATEMENTS. buildAbstractSyntaxTree ( tokenStream ) )
14489	assertTrue ( resourceRelationBoundary. isAddableAsProvidedResourceToResourceGroup ( master, slaveName ) )
14490	assertEquals ( null, cache. get ( key ) )
14491	Assert. assertTrue ( true )
14492	assertNoErrorNotifications ( )
14493	assertTrue ( result instanceof XMLTextChunkBuilder )
14494	assertFalseForPropertyValidation ( )
14495	assertThat ( properties, is ( expected ) )
14496	assertThat ( ids, contains ( pid. getValue ( ) ) )
14497	assertThat ( log. getLogEntries ( 1, 5, quorumId ), resultsIn ( equalTo ( entries ) ) )
14498	assertEquals ( NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
14499	assertThat ( noOfSolutions, is ( xSize ) )
14500	Assert. assertEquals ( 0, exitCode )
14501	assertEquals ( date2. toString ( ), "" + date )
14502	Assert. assertEquals ( "Value is incorrect", map ( MONTH_DAY_STRING, "test" ), value )
14503	assertEquals ( result, "10 years ago" )
14504	assertEquals ( VALUE1 + VALUE2, client. get ( KEY1 ). toCompletableFuture ( ). get ( ) )
14505	assertEquals ( permissionToSet, result. getPermission ( ) )
14506	Assert. assertArrayEquals ( "Not all expected favorites are returned.", expectedResult ( queryResult ). toArray ( ), results. toArray ( ) )
14507	assertEquals ( "Progress=100", 100, lastProgress )
14508	Assert. assertEquals ( 1, this. newDao ( ). getTotalUnreadPrivateMessages ( user ) )
14509	assertThat ( result, is ( expected ) )
14510	assertFalse ( con. getAutoCommit ( ) )
14511	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"conference\\":{\\"id\\":\\"1234\\",\\"mute\\":false,\\"playTones\\":false,\\"interdigitTimeout\\":3.5,\\"required\\":true,\\"terminator\\":\\"#\\"}}]}" )
14512	assertTrue ( "There should be at least 1 revision", revisions. getTotalElements ( ) > 0 )
14513	assertThat ( underTest. maybeUpdateLastDownloaded ( asset ), is ( false ) )
14514	Assert. assertEquals ( "select babyfish_shared_alias_0 " + "from org.babyfishdemo.jpacriteria.entities.Employee babyfish_shared_alias_0 " + "inner join babyfish_shared_alias_0.department babyfish_shared_alias_1 " + "where babyfish_shared_alias_1.name like :babyfish_literal_0", createQueryTemplate ( cq ). toString ( ) )
14515	assertEquals ( "?p1=v1&p2=v2&p3=v3", query. toString ( ) )
14516	assertThat ( rdtTag. shortDescriptionOf ( tag ). toString ( ), startsWith ( "Commit" ) )
14517	assertEquals ( 1, instance. evaluations )
14518	assertNotNull ( helper. getOwlClass ( TEST_IRI ) )
14519	assertThat ( fe, notNullValue ( ) )
14520	assertNoDataValue ( targetPoduct. getBand ( FLOAT_BAND_NAME ), new PixelPos ( 23.5f, 13.5f ), 299.0, 299.0 )
14521	testHelper. assertJobMigrated ( "eventSubProcessStart", "eventSubProcessStart", AsyncContinuationJobHandler. TYPE )
14522	assertEquals ( 1, CollQueryFactory. from ( entity, Collections. singleton ( new Entity ( ) ) ). where ( $ ( entity. isBoolean1 ( ) ). eq ( Boolean. TRUE ) ). fetchCount ( ) )
14523	assertThat ( result, contains ( v_121, v_122, v_11 ) )
14524	Assert. assertEquals ( 2, map. size ( ) )
14525	assertPresent ( "range" )
14526	Assert. assertEquals ( "bob", token. getUserName ( ) )
14527	assertFalse ( canHandle ( handlerInput ) )
14528	assertEquals ( "Wrong root name", newName, root. getNodeName ( ) )
14529	Assert. assertNotNull ( savedTenant2 )
14530	assertThat ( form. format ( result ). contains ( expected ), is ( true ) )
14531	assertResultSet ( res, "testTimezonedTable3.result" )
14532	assertEquals ( System. getProperty ( "test" ), pnr. getProperty ( "test" ). get ( ) )
14533	assertTrue ( diff > - TIME_DIFF && diff < TIME_DIFF )
14534	assertEquals ( expectedQuery, actualQuery )
14535	Assert. assertEquals ( 0.0, getMetric ( ). calculate ( getSession ( ) ), getDelta ( ) )
14536	assertEquals ( dataSet. getRowCount ( ), 19 )
14537	assertTrue ( "Headers tar file '" + headersTarFile + "' for sdk '" + sdk + "' and configuration '" + configuration + "' does not exist.", headersTarFile. exists ( ) )
14538	assertLQEquals ( Ac, lq. factor ( new DenseMatrix ( Ac ) ) )
14539	assertEquals ( "Hawk id=\\"x\\",mac=\\"vCpcm60p09FRSeEkciww6hqMeb+bHwv6w16dMypL/gY=\\",hash=\\"dMihgvOJ+wzpELyqj4yl72U0mv8ZWI4tvEFcIXk+iD8=\\",ts=\\"1\\",nonce=\\"abc\\"", h. toString ( ) )
14540	assertTrue ( "Failed permission check was not logged", loggedFailedPermissionCheck ( AUDIT_LOG_FILE, USER ) )
14541	assertEquals ( "x\\n", found )
14542	Assert. assertEquals ( jsonString, "[{\\"name\\":\\"涓���\\",\\"id\\":1,\\"brithDate\\":null,\\"money\\":1.1},{\\"name\\":\\"涓���\\",\\"id\\":1,\\"brithDate\\":null,\\"money\\":1.1}]" )
14543	assertEquals ( ( VecTools. multiply ( newOutput, outputGrad ) - VecTools. multiply ( output, outputGrad ) ) / eps, grad. get ( i ), 1e-5 )
14544	assertTrue ( check )
14545	assertThat ( identityService. createUserQuery ( ). userId ( user. getId ( ) ). count ( ), is ( 0L ) )
14546	Assert. assertEquals ( "test", stack. top ( ). get ( "test", null ) )
14547	assertNull ( entry )
14548	assertEquals ( 30.0, v. getLatestArrival ( ), 0.01 )
14549	assertThat ( runtime ( ). toString ( result ), is ( "null" ) )
14550	Assert. assertEquals ( expectedOutput, output )
14551	assertEquals ( response. getHeader ( SecWebSocketVersionInterceptor. SEC_WEB_SOCKET_PROTOCOL_HEADER ), protocol )
14552	assertEquals ( "<p>Hello</p>\\n<p>There</p>", divs. html ( ) )
14553	assertEquals ( customUiTemplateUpdated. getTemplateValue ( ), customUiTemplate. getTemplateValue ( ) )
14554	assertEquals ( "regexp condition serialization is wrong", expected, actual )
14555	assertFalse ( "WorkflowDocument should not indicate quickstart as SuperUser", document. isValidAction ( ActionType. SU_BLANKET_APPROVE ) )
14556	assertThat ( description. toString ( ), is ( "A JSON array with size: a value less than <2>" ) )
14557	org. assertj. core. api. Assertions. assertThat ( searchResponse. getHits ( ). totalHits ( ) )
14558	assertAllCommandsUsed ( )
14559	assertTrue ( getNoErrorMsg ( ), result )
14560	Assert. assertNotNull ( vm. getInstanceOfferingUuid ( ) )
14561	assertNotNull ( entity. getId ( ) )
14562	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
14563	assertThat ( formatter. parse ( "April/14, Heisei 29" ), is ( expected ) )
14564	assertMedianIs ( 49.5 )
14565	assertEquals ( false, test5. equals ( null ) )
14566	Assert. assertArrayEquals ( answer, result, 1e-5 )
14567	assertEquals ( testGen1. getInsertGroup ( testLSN ). toString ( ), testGen2. getInsertGroup ( testLSN ). toString ( ) )
14568	assertEquals ( header, conditionals. toHeaders ( ). getFirstHeader ( HeaderConstants. IF_MODIFIED_SINCE ). get ( ) )
14569	assertEqualsIgnoreWhitespace ( expected, real )
14570	assertEquals ( "<!DOCTYPE html><!-- a comment -->One <qux />Two", TextUtil. stripNewlines ( doc. html ( ) ) )
14571	Assert. assertEquals ( "<body>\\n" + "<div class=\\"metadata\\"/>\\n" + "<h1>assertionSummaryWithSuccess</h1>\\n" + "<div>\\n" + "<h2>Assertions</h2>\\n" + "<table border=\\"1\\" cellspacing=\\"0\\">\\n" + "<tr>\\n" + "<th class=\\"pass\\">2 right, 0 wrong, 100.0% correct</th>\\n" + "</tr>\\n" + "</table>\\n" + "</div>\\n" + "<div id=\\"assertionSummaryWithSuccess.name\\">\\n" + "<h2>name</h2>\\n" + "<table border=\\"1\\" cellspacing=\\"0\\">\\n" + "<tr>\\n" + "<th class=\\"pass\\">Col 1</th>\\n" + "</tr>\\n" + "<tr>\\n" + "<td class=\\"pass\\">A1</td>\\n" + "</tr>\\n" + "</table>\\n" + "</div>\\
14572	assertEquals ( 80.0, columnInformation. getInformationContent ( 3 ), 0.0 )
14573	assertTrue ( page. getContent ( ). contains ( "ENABLED_FOR_CK = true" ) )
14574	assertEquals ( 2, graph. countVertices ( "V" ) )
14575	assertMockEndpointsSatisfied ( )
14576	Assert. assertTrue ( permissions. toString ( ), permissions. isEmpty ( ) )
14577	assertEquals ( "dois nonilh玫es", actual )
14578	assertProductEvidence ( result, product )
14579	assertNotNull ( result )
14580	Assert. assertNotNull ( addressResultsDto )
14581	assertEquals ( 1, result )
14582	assertEquals ( false, maybeName. isPresent ( ) )
14583	assertThat ( page. hasError ( ), is ( false ) )
14584	assertTrue ( exitCallHook. exitCalled )
14585	assertTrue ( list. isEmpty ( ) )
14586	assertNotNull ( result )
14587	assertEquals ( 1, getStartBatchCount ( ) )
14588	assertUnselectableDatesSelectedWhileHasValidSelection ( model )
14589	assertTrue ( result instanceof V8Function )
14590	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"transfer\\":{\\"to\\":\\"tel:+14157044517\\"}}]}" )
14591	assertFalse ( Files. exists ( source ) )
14592	assertNotNull ( result )
14593	Assert. assertEquals ( "org.wildfly.arquillian:wildfly-arquillian-container-managed:2.2.0.Final", adapter. dependencies ( ) [ 0 ] )
14594	assertEquals ( 0, message. getAttachments ( ). size ( ) )
14595	Assert. assertEquals ( "distributedTransactionTimeout=42", getReplHeader ( ) )
14596	assertEquals ( "[null throwable] on [null channel]", webbitException. getMessage ( ) )
14597	assertEquals ( "(SOURCEFIELD1 =='sourceValue' AND TARGETFIELD1 == 'targetValue') OR (SOURCEFIELD2 =='sourceValue' AND TARGETFIELD2 == 'targetValue')", transformed )
14598	assertTrue ( "Duplicate insert failed at " + failedAt + " Expected value is (2*BUCKET_SIZE)+victim cache = 9", failedAt == 9 )
14599	iterables. assertIsSubsetOf ( someInfo ( ), actual, newArrayList ( ) )
14600	assertTrue ( blobStore. delete ( tileRange ) )
14601	assertLabelText ( "Browser offset", offsetMillis )
14602	assertEquals ( true, classUnderTest. isSelected ( ) )
14603	Assert. assertTrue ( "did not pass filter when no last good path", testControlBlock. filter ( "bbb" ) )
14604	assertEquals ( 2, tree. calculateDepth ( ) )
14605	assertEquals ( afterAesEncrypt2, pc. encrypt ( randomStr, replyMsg2 ) )
14606	assertEquals ( 1, e. getMessageReference ( ). getContent ( ). size ( ) )
14607	assertTrue ( responseBody. contains ( "Frederic Fall MODIFIED" ) )
14608	Assert. assertTrue ( expect ( o, false ) )
14609	assertResourceContains ( "function toggleUnresolvedResourceTypes()" )
14610	assertEquals ( expected, result )
14611	assertCorrectList ( )
14612	assertPaintingResult ( objects )
14613	assertEquals ( ( short ) 0xffff, result )
14614	assertEquals ( "The view path is not the same as the load rules", "loadrules", scm. getViewPaths ( null, null, launcher ) [ 0 ] )
14615	assertEquals ( id, act. getId ( ). toString ( ) )
14616	assertEquals ( "x=(b a);(b a)\\n", found )
14617	assertFalse ( result. getErrorMessage ( ), result. isSucceeded ( ) )
14618	assertThat ( m1, is ( not ( m2 ) ) )
14619	assertTrue ( rh. getXAResource ( ) instanceof MicroserviceXAResource )
14620	softly. assertThat ( skipInstallationChecker )
14621	Assert. assertEquals ( 0, result [ 0 ], 1e-7 )
14622	assertEquals ( resources, parser. derToIpAddressBlocks ( Asn1Util. decode ( RFC3779_APPENDIX_B_EXAMPLE_1 ) ) )
14623	testHelper. assertProcessEnded ( testHelper. snapshotBeforeMigration. getProcessInstanceId ( ) )
14624	Assert. fail ( "expected org.apache.maven.plugin.MojoExecutionException" )
14625	Assert. assertEquals ( expResult, result )
14626	assertNull ( mostRecentId )
14627	assertThat ( values. toString ( ), values, containsInAnyOrder ( patientId. getValue ( ), encId. getValue ( ), conditionId. getValue ( ), epId. getValue ( ) ) )
14628	assertEquals ( HttpStatus. SC_NO_CONTENT, getStatus ( patchReq ) )
14629	assertFalse ( store. isResourceEvictable ( "key", mock ( FileStatus. class ) ) )
14630	assertEquals ( "org/apache/logging/log4j/core/pattern/RegexReplacementConverterTest This is a test" + Strings. LINE_SEPARATOR, sb. toString ( ) )
14631	assertGroups ( ldapUserGroupCallback, true, true, true, true )
14632	assertEquals ( Vector. create ( expected, false ), Vector. create ( array, false ). reverse ( ) )
14633	assertNotEquals ( column1, column2 )
14634	Assert. assertEquals ( urlEsperada, nota. getInfoSuplementar ( ). getQrCode ( ) )
14635	assertEquals ( expected, sorted )
14636	assertEquals ( expected [ i ] [ y ] [ x ], ra. get ( ). get ( ), 0 )
14637	Assert. assertFalse ( validator. validSequence ( 1, inputSequence, outcomesSequence, outcome ) )
14638	assertEquals ( USERNAME, principal. getName ( ) )
14639	assertEquals ( 1L, result. getLongValue ( ) )
14640	assertEquals ( 3, kSession. fireAllRules ( ) )
14641	assertFalse ( appender. isStarted ( ) )
14642	assertEquals ( "CFBundleVersion in file '" + infoPList + "' is not the expected version '" + dynamicVersion + "'.", dynamicVersion, new PListAccessor ( infoPList ). getStringValue ( PListAccessor. KEY_BUNDLE_VERSION ) )
14643	assertEquals ( expectedQuery, actualQuery )
14644	assertEquals ( "Close", close )
14645	assertThat ( validator. getErrors ( ), hasSize ( 0 ) )
14646	assertEquals ( id, sut. getId ( ) )
14647	assertResultsMatch ( select ( field ( "id" ), field ( "partitionValue1" ), windowFunction ( sum ( field ( "aggregationValue" ) ) ). partitionBy ( field ( "partitionValue1" ) ). orderBy ( field ( "id" ) ). build ( ). as ( "runningTotal" ) ). from ( tableRef ( "WindowFunctionTable" ) ), "1-A-2.1", "2-A-5.3", "4-A-9.1", "5-A-11", "3-B-5.7", "6-B-9.1", "7-B-19.3" )
14648	assertTrue ( filter. matches ( operation, poolInfoMap ) )
14649	assertFalse ( fs. deleteOnExit ( path ) )
14650	assertTrue ( "Wrote incorrect char[] string: " + s, s. equals ( "Hello World" ) )
14651	ValidationTestUtils. assertPatternMatches ( pattern, expected )
14652	assertThat ( result, is ( true ) )
14653	should. assertEquals ( 2, res. result ( ). principal ( ). getInteger ( "provider" ) )
14654	assertEquals ( tags, new MetricResources ( configuration, security, api ). getTags ( null ) )
14655	assertEquals ( expResult, result )
14656	Assert. assertEquals ( simple. getName ( ), name )
14657	assertEquals ( 25, cap. get ( 0 ) )
14658	assertThat ( coords, equalTo ( actualCoords ) )
14659	assertEquals ( "http://tempuri.org", w. getWorkGroup ( ). get ( 0 ). getWorkSummary ( ). get ( 0 ). getUrl ( ). getValue ( ) )
14660	Assert. assertEquals ( "(3.14)", this. pi. toHaskell ( ) )
14661	assertEquals ( params. size ( ) + pdiParams. size ( ), result. size ( ) )
14662	assertEquals ( 200, test. getVal ( ) )
14663	assertMockEndpointsSatisfied ( )
14664	assertThat ( newValues, hasSize ( 0 ) )
14665	assertEquals ( MLContextUtil. BUILD_TIME_NOT_AVAILABLE, buildTime )
14666	assertEquals ( "SELECT * WHERE {?user?_c2?_c3 } LIMIT 4" )
14667	assertThat ( new SelectBest ( ). selectSolution ( Arrays. asList ( sol1, sol2 ) ), is ( sol1 ) )
14668	assertEquals ( ImmutableMap. of ( "as", "thrift", "$abc$trace-id", "12345" ), headers )
14669	assertEquals ( expected, actual )
14670	assertEquals ( 1, comparator. compare ( null, solution2 ) )
14671	Assert. assertEquals ( "%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%3CConnect%2F%3E", elem. toUrl ( ) )
14672	assertTrue ( results. size ( ) == 2 )
14673	assertEquals ( "Merged table should have 2 additional records now", 2, finalNumberOfRecords - initialNumberOfRecords )
14674	assertEquals ( goldenResponse, responseObserver. firstValue ( ). get ( ) )
14675	assertNotNull ( testObj. getPanel ( ) )
14676	Assert. assertTrue ( error. getErrorDetails ( ). contains ( "In alternate oru r01 parser" ) )
14677	assertEquals ( 0, branch_conditions. size ( ) )
14678	assertEquals ( 3, JSONObject. getNames ( actual ). length )
14679	assertEquals ( 2 * Math. cos ( Math. E ), e. evaluate ( ), 0d )
14680	assertEquals ( "myTestId", history. getIdElement ( ). getIdPart ( ) )
14681	assertArrayEquals ( refar, d. getResult ( ) )
14682	this. assertLoadBlob ( departments, true, false )
14683	assertTrue ( container. getValidationErrors ( ). isEmpty ( ) )
14684	assertThat ( result, is ( true ) )
14685	Assert. assertTrue ( "Node " + addedNode. getYarnRMNode ( ). getNodeID ( ), rm. getRMContext ( ). getRMNodes ( ). containsKey ( addedNode. getYarnRMNode ( ). getNodeID ( ) ) )
14686	assertTrue ( "Rollover created a new journal file", count2 > count1 )
14687	assertTrue ( "Error ratio=" + errorRatio + " < " + maxSlopRatio, errorRatio < maxSlopRatio )
14688	assertEquals ( "padRight() To 10", Text. valueOf ( "Test******" ), _text )
14689	assertTrue ( doc. getStatementGroups ( ). isEmpty ( ) )
14690	assertTrue ( "Can't find statement", m. contains ( expectedStatement ( APP_BASE ) ) )
14691	assertProcessInstanceCompleted ( instance )
14692	assertFalse ( selectedFile. exists ( ) )
14693	assertTrue ( getLinkHeaders ( getObjMethod ( id ) ). contains ( NON_RDF_SOURCE_LINK_HEADER ) )
14694	assertThat ( resultCommand, is ( expectedCommand ) )
14695	assertEquals ( 735, result )
14696	assertTrue ( resp. isSuccess ( ) )
14697	MockInterceptor. assertContent ( new String [ ] { "Mock1", "Mock2", "Mock3" }, new String [ ] { "Mock3", "Mock2", "Mock1" }, new String [ ] { } )
14698	assertNull ( connectorConfig. getString ( StorageCommonConfig. STORE_URL_CONFIG ) )
14699	assertThat ( tester. getMessages ( FeedbackMessage. ERROR ). size ( ), is ( 1 ) )
14700	assertEquals ( "Expected another type of analyzer", KeywordAnalyzer. class, analyzer. getClass ( ) )
14701	Assert. assertEquals ( SQLBinaryOperator. Equality, last. getOperator ( ) )
14702	assertAnnotations ( 1, Quantity. class, new TestQuantity ( 0, "2 cubic metres", 2, "m^3", 2, "m^3", VOLUME ) )
14703	assertSame ( dt. toLocalTime ( ), t )
14704	assertNoneEqual ( otherCapabilityFqans )
14705	assertEqualsWithoutWhiteSpaces ( "", union )
14706	assertEquals ( "hello", result )
14707	assertTrue ( subject. isModified ( ) )
14708	Assert. assertTrue ( logLatch. await ( 10, TimeUnit. SECONDS ) )
14709	assertThat ( result, equalTo ( true ) )
14710	out. assertIsSatisfied ( )
14711	assertSame ( t, TEST_2007_07_15 )
14712	assertEquals ( BigDecimal. TEN, dto. getQty ( ) )
14713	assertEquals ( 0, sparseView. nnz ( ) )
14714	assertTrue ( "Token realm should be created", ops. exists ( TEST_TOKEN_REALM_ADDRESS ) )
14715	assertEquals ( IProcess. URN_XPATH_1_0_IN_BPEL_2_0, process. getExpressionLanguage ( ) )
14716	assertNull ( placeHolder. getParentClass ( ) )
14717	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"message\\":{\\"say\\":[{\\"value\\":\\"This is an announcement\\"}],\\"to\\":\\"+13055551212\\",\\"from\\":\\"3055551000\\",\\"voice\\":\\"kate\\",\\"timeout\\":10.0,\\"answerOnMedia\\":false}}]}" )
14718	assertThat ( supers, contains ( superProperty ) )
14719	Assert. assertEquals ( "File size differes", FILE_DATA. length ( ), FileUtils. sizeOf ( new File ( testFM. outputDir, testFM. outputFileName ) ) )
14720	assertEquals ( UNPROCESSEABLE, response. getStatus ( ) )
14721	SerializableObjects. assertEquals ( bar, parsedBar )
14722	assertEquals ( expected, e. evaluate ( ), 0.0 )
14723	Assert. assertEquals ( "Result is not last evaluated expression", "World", o )
14724	context. assertEquals ( "pong! 12", reply. body ( ) )
14725	assertEquals ( 0, program. getMemSize ( ) )
14726	assertTrue ( "Thread.sleep did not wait enough", duration >= 100 )
14727	assertThat ( exists, is ( false ) )
14728	Assert. assertTrue ( queryResult. getSize ( ) >= 1000 )
14729	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
14730	Assert. assertEquals ( 3, ( int ) sync ( list. get ( 0 ) ) )
14731	assertEquals ( 28, results. length )
14732	Assert. assertNotNull ( id )
14733	assertTrue ( graphContains ( gStore. getGraph ( graphIRI ), new Triple ( s, p, NodeFactoryExtra. parseNode ( "123" ) ) ) )
14734	assertThat ( scriptContent, is ( "Class Annotation" ) )
14735	assertEquals ( 1, result )
14736	assertTrue ( true )
14737	assertEquals ( driver. findElement ( By. cssSelector ( ".error" ) ). getText ( ), "Please enter a value", "Message not found" )
14738	assertFalse ( passed [ 0 ], passed [ 0 ] == null )
14739	assertTrue ( result. isResultOK ( ) )
14740	assertEquals ( prefix + "hello" + suffix, result )
14741	Assert. assertNotNull ( match )
14742	assertEquals ( "a,c", out )
14743	assertEquals ( testSet, board. getCacheId ( ) )
14744	assertThat ( candidates. size ( ), is ( not ( 0 ) ) )
14745	assertEquals ( NativeSelectSetNull. EMPTY_SELECTION_TEXT, getSelect ( ). getValue ( ) )
14746	assertEquals ( "Value not as expected!", Long. valueOf ( 1L ), bi. getValue ( ) )
14747	assertEquals ( - 1, query. getOrderBy ( ). getExpressionPosition ( 0 ) )
14748	assertTrue ( GerritVersionChecker. isCorrectVersion ( GerritVersionChecker. Feature. fileTrigger, testServer ) )
14749	Assert. assertEquals ( unidadeFederativa, eventoRetorno. getOrgao ( ) )
14750	assertObjectEquals ( "{type:'string'}", x. getSchema ( ) )
14751	assertTrue ( listener. onComplete )
14752	assertEquals ( 44, result. length ( ) )
14753	assertEquals ( 0, score ( ) )
14754	assertTrue ( ( Boolean ) result )
14755	Assert. assertEquals ( expected, actual,.00000000001 )
14756	assertEquals ( stream, streamAfterParse )
14757	assertNotEquals ( playlist1. hashCode ( ), playlist2. hashCode ( ) )
14758	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + destPdf, sourceFolder + cmpPdf, destinationFolder ) )
14759	assertEquals ( "GraphHeads were not equal", inputGraphHead, outputGraphHead )
14760	assertNotNull ( testObj. getFieldDataManager ( ) )
14761	assertContainsAllGames ( games )
14762	assertThat ( taskService. createTaskQuery ( ). taskAssignee ( "demo" ). count ( ), is ( 1L ) )
14763	Assert. assertEquals ( displayNameExpected, displayNameActual )
14764	assertTrue ( matchResult )
14765	assertFalse ( satisfiesPrecondition ( cu ) )
14766	assertEquals ( expResult, result, 0.001 )
14767	Assert. assertEquals ( "Wrong key created", comparationKey, createdKey )
14768	assertEquals ( new org. apache. http. client. utils. URIBuilder ( SERVICE_ROOT + "/$metadata" ). build ( ), uri )
14769	assertFalse ( resultMessage ( res, PUT ), res. passedValidation ( ) )
14770	assertNotNull ( dataset )
14771	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Say>" + "<genericTag key=\\"value\\">" + "someText" + "</genericTag>" + "</Say>", elem. toXml ( ) )
14772	assertNotEquals ( testConfig. getEnvironment ( ). getTables ( ). getPrefix ( ), targetEnv. getTables ( ). getPrefix ( ) )
14773	assertEquals ( expectedPlots, sprites )
14774	assertTrue ( "The entityGroup should be present in online entityGroups list.", fs. getOnlineEntityGroups ( ). contains ( eg ) )
14775	assertTrue ( wkt, wkt. matches ( WGS84 ) )
14776	Assert. assertEquals ( d, voidable. getDateVoided ( ) )
14777	assertEquals ( str, decrypted )
14778	Assert. assertEquals ( "updated", result. getReturnMsg ( ) )
14779	assertEquals ( 0, lostWorkersInfo. size ( ) )
14780	assertThat ( testInstance. getMyInjection ( ), is ( nullValue ( ) ) )
14781	assertTrue ( root. containsNetwork ( s1 ) )
14782	assertCloseTo ( "Scroll position should be 0", newRowLocation, rowLocation0 )
14783	assertEquals ( 14, v. count )
14784	runner. assertAllFlowFilesTransferred ( PublishKafka. REL_FAILURE, 3 )
14785	assertEquals ( "3.1415927", method. invoke ( normalizer, literal, false ) )
14786	Assert. assertEquals ( "�驻�� 41 �拽�转", prettyTime. format ( prettyTime. calculatePreciseDuration ( new Date ( new Date ( ). getTime ( ) - 40 * 60 * 1000 - 40 * 1000 ) ) ) )
14787	assertNotNull ( reservation )
14788	assertThat ( result. fullName ( ), is ( "double" ) )
14789	assertEquals ( "[s,e,c]", s. getContext ( ). toString ( ) )
14790	Assert. assertEquals ( ExchangePhase. OUT, exchange. getPhase ( ) )
14791	assertThat ( PrettyTime. of ( Locale. UK ). print ( duration, TextWidth. WIDE ), is ( "1 year and 1 day" ) )
14792	assertThat ( isEquals, is ( true ) )
14793	assertTrue ( p1. impliesName ( p2 ) )
14794	Assert. assertEquals ( CORSFilter. CORSRequestType. PRE_FLIGHT, requestType )
14795	assertTrue ( reportData. size ( ) > 0 )
14796	assertEqualsWithoutWhiteSpaces ( "union(){translate([10,20,30]) rotate([10,20,30]) (empty) translate([30,10,20]) rotate([10,20,30]) (empty)}", moved )
14797	assertEquals ( pageSize, postIds. size ( ) )
14798	Assert. assertTrue ( isFile ( fc, f ) )
14799	assertIpAddress ( )
14800	Assert. assertEquals ( schema. getSubsequentVersionField ( ), "subsequent_version_number" )
14801	assertEquals ( expResult, result )
14802	assertTrue ( icheck. getFaults ( ). length > 0 )
14803	assertEquals ( "Body", reader. getLocalName ( ) )
14804	assertArrayEquals ( ARRAY2, ( Object [ ] ) memcache. get ( KEY1 ) )
14805	assertEquals ( expResult, result )
14806	Assert. assertEquals ( patientPrograms. size ( ), Util. getResultsSize ( result ) )
14807	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
14808	assertFalse ( cmpTo. matches ( new Object ( ) ) )
14809	assertTrue ( value. contains ( "cas" ) )
14810	assertEquals ( expected, actual )
14811	assertTrue ( s. contains ( "." ) )
14812	assertEquals ( "<http://www.semanticweb.org/ontologies/2013/7/untitled-ontology-150#Country3-112>", val )
14813	assertEquals ( 0.3008, density,.001 )
14814	assertTrue ( Futures. getUnchecked ( collector ) )
14815	assertEquals ( mod, modSer )
14816	assertEquals ( expected, modelWriter. toString ( ) )
14817	Assert. assertThat ( reader. readLine ( ), is ( "Hello World" ) )
14818	assertHasMethod ( model, "com.artemis.generator.strategy.e.Proof proofFluid(com.artemis.generator.strategy.e.Proof p0)" )
14819	assertTrue ( connectFuture. isConnected ( ) )
14820	Assert. assertEquals ( jsc, jscs. get ( 0 ) )
14821	assertEquals ( wrapWithMarkdownClassDiv ( "<p>This is <del>deleted</del> text</p>\\n" ), result. message ( ). get ( 0 ). getData ( ) )
14822	assertEquals ( testPlatform. getPlatformValue ( ), pValue )
14823	assertThat ( "Message with invalid level defaults to info", ( Long ) object. get ( "level" ), is ( 6L ) )
14824	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 09" ) )
14825	Assert. assertEquals ( 1, countingNotifier. getNotificationCount ( ) )
14826	assertThat ( result. statusCode, is ( Response. OK ) )
14827	assertMockEndpointsSatisfied ( )
14828	assertEquals ( "select * from ( select row_.*, rownum rownum_ from ( select * from user ) row_ ) where rownum_ <= 10+100 and rownum_ > 10", sql )
14829	assertResultsEqual ( renderChild ( net, sum ), 6.0 )
14830	assertTrue ( facilitiesManagerEntry. getAdmins ( sess, facility ). isEmpty ( ) )
14831	assertThat ( content, is ( sameInstance ( ( Object ) pageContent ) ) )
14832	assertThat ( totalHammingDistance ( nums ), Matchers. is ( 6 ) )
14833	assertTrue ( page. asXml ( ). contains ( "Hello world, from JSF!" ) )
14834	assertTrue ( this. requirejsManagerInitIsCalled ( response, null ) )
14835	assertThat (! duration. isNegative ( ), equalTo ( true ) )
14836	assertNotNull ( todo )
14837	Assert. assertEquals ( aString, sut. getName ( ) )
14838	Assert. assertEquals ( "messageUri should be that of original message", WonMessageUriHelper. getSelfUri ( ), msgAndResponse. getMessageURI ( ) )
14839	assertDurationEquals ( d, t1. minus ( t2 ) )
14840	assertEquals ( "en_US", h. getLanguage ( ). toString ( ) )
14841	JSONAssert. assertEquals ( "{objectType:error,context:a,errorCode:b,msg:c}", s, false )
14842	assertThat ( configuration. isPresent ( ), is ( false ) )
14843	assertNotNull ( diagnosis. getId ( ) )
14844	Assert. assertEquals ( list, result )
14845	Assert. assertEquals ( 2, vm. getStack ( ). size ( ) )
14846	assertTrue ( true )
14847	assertNotNull ( HostedNumberOrder. fetcher ( "HRXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
14848	Assert. assertEquals ( HttpServletResponse. SC_FORBIDDEN, response. getStatus ( ) )
14849	assertTrue ( twoBackoffIntervalsMs < ( endTimeMs - startTimeMs ) )
14850	assertEquals ( n149_ZERO, getSubject ( ). componentAt ( new int [ ] { 149, 0 }, 0 ),.001 )
14851	assertThat ( node. getEntities ( ), is ( Collections. singleton ( owlNothing ) ) )
14852	assertYaml ( "", Samples. PROJECT_STRATEGY_ROLESMAPPING_UNIQUE_KIBANA_MODE. getContent ( ), rolesMapping )
14853	assertThat ( slider. getValue ( ), is ( 5.0 ) )
14854	assertDecimalEquals ( highestValue. getValue ( 12 ), "6" )
14855	assertEquals ( "Expected another type of analyzer", SimpleAnalyzer. class, analyzer. getClass ( ) )
14856	assertThat ( handledResponse, is ( equalTo ( response ) ) )
14857	assertEquals ( expectedSqlForMathOperations15 ( ), result )
14858	assertEquals ( mockQuery, queryPlan. getQuery ( ) )
14859	assertEquals ( Result. PASS, group. apply ( item ) )
14860	assertEquals ( 20000, testLong )
14861	assertRows ( filePath, 4, TEST_COLUMNS )
14862	assertSame ( "Wrong children", node. getChildren ( ), node2. getChildren ( ) )
14863	Assert. assertEquals ( "2 futuredays from now", p. format ( new Date ( 1000 * 60 * 60 * 24 * 2 ) ) )
14864	assertEquals ( "OK", reply )
14865	assertResponseContainsModel ( "<span class=\\"unresolved\\">nt:unstructured</span>", Model. class, 123L, "modelName" )
14866	assertEquals ( "Expected 2 result!", 2, n )
14867	assertEquals ( "Expecting null to be return", null, inprogressNodePath )
14868	assertEquals ( DEFAULT. foreground ( BRIGHT + RED ), style )
14869	collections. assertContains ( description, actual, new Object [ ] { } )
14870	assertEquals ( "simple test", entries. get ( 0 ). getMessage ( ) )
14871	assertEquals ( Collections. < String > emptyList ( ), descendants )
14872	assertArrayEquals ( checksum. getBytes ( ), sb. toString ( ). getBytes ( ) )
14873	assertEquals ( jsonFromObject, jsonFromString )
14874	assertEquals ( expResult, result )
14875	Assert. assertEquals ( identificador, protocoloInfo. getIdentificador ( ) )
14876	assertNull ( f. evaluate ( ) )
14877	assertIsCommitted ( tx )
14878	assertEquals ( expected, userCache. getUser ( ) )
14879	assertResult ( metrics )
14880	assertEquals ( "yes", html )
14881	assertEquals ( expected, bsos. toBitString ( ) )
14882	assertEquals ( 18, instance. evaluations )
14883	assertEquals ( expected, uri. toString ( ) )
14884	assertThat ( filter. include ( artifact ), is ( false ) )
14885	assertEquals ( "joinName", options. getString ( "belongsToFieldName" ) )
14886	assertThat ( confirmation. getStatus ( ), equalTo ( clearCacheStatus ) )
14887	assertFalse ( "Cannot guarantee a public method is called only from constructor.", result )
14888	assertEquals ( expectedQuery, actualQuery )
14889	assertEquals ( successInterpreterResult, spyInterpretJob. getReturn ( ) )
14890	assertTrue ( page. asText ( ). contains ( "MESSAGE 1 MyConverter.getAsString" ) )
14891	assertTrue ( GenomeWarpTestUtils. equivalentRangeWithoutType ( got, want ) )
14892	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
14893	Assert. assertEquals ( "<table border=\\"1\\" cellspacing=\\"0\\">\\n" + "<tr>\\n" + "<th class=\\"pass\\">Col 1</th>\\n" + "<th class=\\"pass\\">Col 2</th>\\n" + "</tr>\\n" + "<tr>\\n" + "<td class=\\"pass multi\\" colspan=\\"2\\">2 matched rows...</td>\\n" + "</tr>\\n" + "</table>", TableTestUtils. getHtml ( this. tableVerifier, "table" ) )
14894	assertEquals ( data, new String ( baos. toByteArray ( ), StandardCharsets. UTF_8 ) )
14895	assertEquals ( "{\\n" + "  'player2':{\\n" + "    'board':'some_board2',\\n" + "    'boardSize':12,\\n" + "    'gameName':'game',\\n" + "    'heroesData':{\\n" + "      'coordinates':'coordinates1',\\n" + "      'group':[\\n" + "        'player1',\\n" + "        'player2'\\n" + "      ]\\n" + "    },\\n" + "    'info':'some_info2',\\n" + "   'score':546,\\n" + "   'scores':{\\n" + "      'player1':100,\\n" + "      'player2':200\\n" + "    }\\n" + "  }\\n" + "}", JsonUtils. prettyPrint ( result ) )
14896	Assert. assertTrue ( strategy. shouldRetry ( null, 0, null ) )
14897	assertTrue ( it. next ( ). asText ( ). contains ( "Hello World" ) )
14898	assertThat ( target. parse ( ), is ( true ) )
14899	assertThat ( new CodePrinter. Builder ( statement ). setCompilerOptions ( options ). build ( ), equalTo ( "_$jscoverage['test.js'].branchData['4'][2].init(12,15)" ) )
14900	Assert. assertEquals ( 20, lambda. testAddInt ( 15, 5 ) )
14901	assertEquals ( expected, actual )
14902	assertEquals ( 50 * 50 / 2, i )
14903	Assert. assertNotNull ( t )
14904	assertNull ( "The validateArgTypes() method is buggy.", sf. validateArgTypes ( argTypes ) )
14905	assertEquals ( "200", sc. getCode ( ) )
14906	assertEquals ( entry, result )
14907	assertTrue ( ok )
14908	assertEquals ( "zero", actual )
14909	assertEquals ( 10L, ( long ) version )
14910	Assert. assertTrue ( classpath. isPackage ( CharOperation. splitOn ( '.', "org". toCharArray ( ) ), "xml". toCharArray ( ) ) )
14911	assertEquals ( new AffineTransform ( 1, 3, 2, 1, 10, 20 ), g2. getTransform ( ) )
14912	Assert. assertTrue ( cubes. size ( ) <= MostProfitableCubeCollector. CUBE_SIZE_SHRESHOLD )
14913	assertTrue ( con. getTimeout ( ) < 50 )
14914	assertResponse ( outputStream, expected )
14915	Assert. assertEquals ( SPECIFICATION, shape. decompress ( ). decompress ( ). build ( ). getSpecification ( ) )
14916	assertThat ( t, is ( u ) )
14917	Assert. assertEquals ( expected, testIndex. findConc ( "[word = 'jumps' | lemma = 'over']" ) )
14918	assertEquals ( DependendencyStatus. FORBIDDEN, oracle. assess ( access ( "foo", "bar" ) ) )
14919	assertNotNull ( result )
14920	assertEquals ( originalService, event. getServiceForData ( ) )
14921	PSLTest. assertRule ( rule, "@Max[|A|, |B|] * SINGLECLOSED(+A) + 1.0 * SINGLECLOSED(+B) = 1.0.", true )
14922	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE NAME(nodes) < 'literal'" ) )
14923	assertThat ( new SearchArgumentFilter ( searchArgument, structTypeInfo ). accept ( corc ), is ( false ) )
14924	assertUrlsEqual ( expected, url )
14925	Assert. assertEquals ( expected, testIndex. findConc ( " 'May' 'Force' " ) )
14926	assertSqlCanBeParsedAndDeparsed ( statement )
14927	assertTrue ( "Differences: " + differences + "/" + rounds, differences > rounds * 0.9 && differences <= rounds )
14928	assertTrue ( "Short Title empty", constraintViolations. size ( ) == 1 )
14929	Assert. fail ( "Expected to fail, but didn't" )
14930	assertEquals ( "1.0", serviceMetadata. getDataServiceVersion ( ) )
14931	assertSame ( test1, test2 )
14932	assertEquals ( asList ( foo5 ), results )
14933	assertNull ( deltaDays )
14934	assertEquals ( "[(AppNode:foo --name=value:0>16)]", ast. stringify ( true ) )
14935	assertThat ( testDescription. getName ( ), is ( "Should do this" ) )
14936	assertThat ( envelope. getValue ( ). getMessageObject ( ). toString ( ), is ( "test" ) )
14937	assertEquals ( "operator", operator. getOperator ( ) )
14938	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 04" ) )
14939	assertThat ( locationManager. getTableLocation ( ), is ( new Path ( TABLE_BASE_PATH ) ) )
14940	assertEquals ( possibleValues, exValues )
14941	Assert. assertEquals ( String. format ( "some %s here", this. html ( bb, "http://something", "url description" ) ), formatter. format ( "some [UrL=http://something]url description[/URL] here", defaultOptions ( ) ) )
14942	Assert. assertEquals ( expected, result )
14943	assertThat ( target, is ( instanceOf ( OFPFlowActionPopPbbQuery. class ) ) )
14944	assertEquals ( val, results. getTimestamp ( colN ) )
14945	assertEquals ( 20, tasks. size ( ) )
14946	Assert. assertFalse ( nullObserver. get ( ) )
14947	Assert. assertEquals ( "404|NOT_FOUND|{\\"error\\":\\"IndexMissingException[[test-index-missing] missing]\\",\\"status\\":404}", response )
14948	assertTrue ( stream. idempotent )
14949	Assert. assertArrayEquals ( "Invalid binary data", data, dataActual )
14950	assertEquals ( newHashSet ( objectFactory ), everrestApplication. getFactories ( ) )
14951	assertThat ( actual, is ( equalTo ( expected ) ) )
14952	assertEquals ( expectedScriptNode, actualScriptNode )
14953	Assert. assertSame ( configuration, victim. getConfiguration ( ) )
14954	assertEquals ( template, view. getTemplate ( ) )
14955	assertEquals ( expResult, result )
14956	Assert. fail ( "should have exceptioned out with an unknown reference" )
14957	assertEquals ( "{X}", URITemplates. getUriTemplateString ( f1 ) )
14958	assertArrayEquals ( new int [ ] { 0, 0, 1 }, closed )
14959	Assert. assertEquals ( "Expected to wrap around to first penguin.", 1, penguins [ 0 ]. pokes )
14960	assertTrue ( ScriptTestUtil. scriptIsInstanceOfScript ( testScript, expectedScript ) )
14961	assertTrue ( resolved. getPaths ( ). get ( "/test" ). getPost ( ). getRequestBody ( ). getContent ( ). get ( "application/json" ). getSchema ( ) instanceof BinarySchema )
14962	assertEquals ( 0, sqlMetadataQueryExec. driverClassesToForceMeta. size ( ) )
14963	Assert. assertNotNull ( dbvEnum )
14964	assertEquals ( ImportConfirmAction. SUCCESS, action. execute ( ) )
14965	assertTrue ( page. asXml ( ). contains ( "foo-0:bar" ) )
14966	org. junit. Assert. assertEquals ( expected, tHandler. getLastRecord ( ). getThrown ( ) )
14967	assertNotNull ( caught )
14968	Assert. assertEquals ( "Shadow Button 1", button. getText ( ) )
14969	assertEquals ( expecteds, actuals )
14970	assertEquals ( 5, getHistoryLength ( ) )
14971	Assert. assertEquals ( "dest_name1", conf. getDestinationName ( ) )
14972	assertEquals ( 5, x )
14973	assertTrue ( m. nextInt ( 4 ) < 4 )
14974	assertTrue ( "Expected the DependencyCheck report to be generated", report. exists ( ) )
14975	assertFalse ( foo. tList. isEmpty ( ) )
14976	assertEquals ( "Option value", "-Dhttp.port=80", commandLine. getOption ( "simpleOption" ) )
14977	Assert. assertEquals ( 1, count )
14978	assertAllTargetsCount ( 0 )
14979	assertTrue ( resultComparator. compare ( fd1, fd2 ) > 0 )
14980	assertThat ( sut. isMatch ( real, expected ), is ( false ) )
14981	Assert. assertEquals ( expectedGeoJson, geoJson )
14982	assertShapeCoordinates ( boundaryEventBounds, 343, 200 )
14983	Assert. assertEquals ( "tz:" + tz. getID ( ) + " locale:" + locale. getDisplayName ( ), expected, actual )
14984	assertFalse ( "The request is marked to be of type preview", request. isPreviewMessage ( ) )
14985	assertEquals ( "street1city1", me. getLikes ( ) )
14986	assertValidQuery ( query )
14987	Assert. assertEquals ( "ActionInvoker.ERROR_0007 - Unable to execute the remote endpoint \\"" + url + "\\": Map = " + NL + "{" + NL + "    key1 = val1 java.lang.String" + NL + "    key2 = val2 java.lang.String" + NL + "} java" + ".util.HashMap" + NL, messages. getRemoteEndpointFailure ( url, params ) )
14988	assertTrue ( result )
14989	assertNotNull ( binding )
14990	assertThat ( formattedValue, is ( "A big story (<a target=\\"_blank\\" href=\\"http://my.issue.tracker/MYPROJECT/browse/MYPROJECT-123\\">#MYPROJECT-123</a>,<a target=\\"_blank\\" href=\\"http://my.issue.tracker/MYPROJECT/browse/MYPROJECT-456\\">#MYPROJECT-456</a>)" ) )
14991	assertFalse ( result. getMap ( ). getGlyph ( ). isEmpty ( ) )
14992	assertReflectionEquals ( expectedLineItem, actualLineItem )
14993	assertTrue ( statisticManager. findTaskRunningStatisticsWeekly ( ). isEmpty ( ) )
14994	assertOut ( "/**\\n * @constructor\\n * @implements {custom.TestOtherInterface}\\n */\\nB = function() {\\n  org.apache.royale.utils.Language.as(b, custom.TestOtherInterface, true).type = '';\\n};\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('B', B);" )
14995	assertThat ( response, hasItem ( "Car" ) )
14996	assertEquals ( EnumTest. class, c. resolveType ( "EnumTest" ) )
14997	Assert. assertEquals ( "{}", MapUtils. toString ( map ) )
14998	assertEquals ( "messages", joined ( "starting SimpleGamma", "started SimpleGamma" ), Strings. join ( DummyInterfaces. messages ( ) ) )
14999	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE (nodes.col1 IS NOT NULL " + "AND ((nodes.col2 IS NOT NULL " + "AND nodes.col3 IS NOT NULL) " + "AND CONTAINS(nodes,'expression')))" ) )
15000	assertEquals ( new BigDecimal ( "9.0" ), ticket. getDiscountPrice ( ) )
15001	assertThat ( localTime. toString ( ), is ( "23:07:03.100" ) )
15002	assertThat ( sentGetRequest ( "http://127.0.0.1:19000/api/job/events/statusTraces?" + buildFindJobEventsQueryParameter ( ) ), is ( GsonFactory. getGson ( ). toJson ( new JobEventRdbSearch. Result < > ( 0, Lists. newArrayList ( jobStatusTraceEvent ) ) ) ) )
15003	assertEquals ( ref, item )
15004	Assert. assertEquals ( profile. getName ( ), "Christian Holm" )
15005	Assert. assertTrue ( "Listener added", listenerAdded. get ( ) )
15006	assertEquals ( true, clusterBarrierManager. manageAckBarrier ( barrierPath, nodesExpected ) )
15007	assertEquals ( Integer. valueOf ( "1" ), result. getValue ( ) )
15008	assertEquals ( columnInfoList, fromConfig )
15009	assertThat ( found, is ( equalTo ( method ) ) )
15010	assertEquals ( "DefaultParam[name=name,value=[a, b]]", toTest. toString ( ) )
15011	assertEquals ( "last 3s=1", counter. toString ( ) )
15012	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE LOCALNAME(nodes) = 'literal'" ) )
15013	assertThat ( config. getWebinfClassesDirectory ( ), is ( "/x/WEB-INF/classes/" ) )
15014	assertEquals ( npLoad, test )
15015	assertEquals ( 8, count )
15016	assertThat ( tableMetas. size ( ), is ( 0 ) )
15017	Assert. assertEquals ( "1\\n2\\n3\\n", eval ( sb. toString ( ) ) )
15018	assertEquals ( "", result )
15019	assertEquals ( expected, actual )
15020	assertThat ( jsonOutputStreamParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/jsonmarshallertest/testEnvironment.json" ) ) )
15021	assertSingleElementCollection ( regionClientId, executeIds )
15022	assertEquals ( Quaternionf. IDENTITY, readQuaternion ( buf ) )
15023	assertNotNull ( "PdfCounterRequestContextReport", report )
15024	assertEquals ( "payload" + i, result )
15025	Assert. assertEquals ( "unexpected pruning delay", 10000, iotaConfig. getLocalSnapshotsPruningDelay ( ) )
15026	assertNotNull ( processInstanceId )
15027	assertTrue ( slice. events. isEmpty ( ) )
15028	assertEquals ( 1, result. getFieldErrorCount ( "doublePrimitiveField" ) )
15029	assertEquals ( witnessList, partList )
15030	Assert. assertEquals ( "StringColumns:\\n" + "[2]\\n" + "[2]\\n" + "[S2]\\n" + "[S2]\\n" + "[2]\\n" + "[2]\\n" + "[2]\\n" + "[2]\\n" + "[2]\\n" + "[2]\\n" + "[2]\\n" + "[2]\\n" + "[\\n" + "[S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3, S3,
15031	assertNumEquals ( 2, getCriterion ( ). calculate ( series, tradingRecord ) )
15032	assertEquals ( 1.0, errorRatio. evaluate ( FrontUtils. convertFrontToSolutionList ( frontApproximation ) ), EPSILON )
15033	assertThat ( options. toJSON ( ), is ( ( JsonElement ) json ) )
15034	listener. assertTestFailedWith ( AssertionError. class )
15035	Assert. assertEquals ( newValue, readValue, 0d )
15036	assertEquals ( "TESTNS", process. getTargetNamespace ( ) )
15037	assertEquals ( expected, mapper. valueToTree ( resource ) )
15038	assertThat ( content, is ( nullValue ( ) ) )
15039	runner. assertValid ( )
15040	assertEquals ( expResult, result )
15041	assertTrue ( r1 instanceof PublicCloneable )
15042	assertEquals ( 1, violations. size ( ) )
15043	Assert. assertTrue ( portA!= portB )
15044	assertEquals ( "C1", "{f1:'J',f2:100,f3:true}", s. serialize ( a ) )
15045	assertThat ( output, CoreMatchers. containsString ( "Successfully wrote 2 rows" ) )
15046	assertEquals ( body. toString ( ), "123" )
15047	assertTrue ( callableInterceptor. executed. get ( ) )
15048	assertEquals ( 258, map. get ( 190, 210 ) )
15049	assertEquals ( "Set of bytes not matching any bitmask " + bitmask, expected, result )
15050	MatrixTestAbstract. assertMatrixEquals ( e, c )
15051	assertEquals ( "<input type=\\"hidden\\" name=\\"amount\\" value=\\"10.00\\" />\\n" + "<input type=\\"hidden\\" name=\\"server_url\\" value=\\"http://mydomain.com/callback\\" />\\n" + "<input type=\\"hidden\\" name=\\"description\\" value=\\"code2 x 1, bob@doe.com, 1234\\" />\\n" + "<input type=\\"hidden\\" name=\\"pay_way\\" value=\\"card\\" />\\n" + "<input type=\\"hidden\\" name=\\"result_url\\" value=\\"http://mydomain.com/result\\" />\\n" + "<input type=\\"hidden\\" name=\\"type\\" value=\\"buy\\" />\\n" + "<input type=\\"hidden\\" name=\\"order_id\\" value=\\"234-1324-1324-1324sdf-sdf\\" />\\n" + "<input type=\\"hidden\\" name=\\"currency\\" value=\\"USD\\" />\\n" + "<input type=\\"hidden\\" name=\\"public_key\\" value=\\"00001\\" />\\
15052	assertDateEquals ( r, t. plus ( d ) )
15053	assertEquals ( String. class. getName ( ), propertyType. getName ( ) )
15054	Assert. assertTrue ( reuseStrategy. keepAlive ( null, response, context ) )
15055	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
15056	assertThat ( candidateSteps. size ( ), Matchers. equalTo ( 0 ) )
15057	Assert. assertEquals ( icmsSetado, icms. getIcms90 ( ) )
15058	Assert. assertEquals ( expected, actual )
15059	assertThat ( h. toSmiles ( ), is ( "O(CC)CC" ) )
15060	assertThat ( ChronoHistory. from ( history. getVariant ( ) ), is ( history ) )
15061	assertEquals ( "(| (& [* fo.*] [*.*oo]) [= bar])", m. toString ( ) )
15062	assertThat ( TimestampInterval. parseISO ( "P4DT1H45M/2012-096T16:00" ), is ( expected ) )
15063	mockOutput. assertIsSatisfied ( )
15064	assertNull ( resolvedMatrixParameter )
15065	assertEquals ( expectedDocument, editedDocument )
15066	assertPostFails ( null, "foo", OntopiaRestErrors. INDEX_NOT_SUPPORTED )
15067	assertEquals ( 1, result )
15068	assertTrue ( result. isEmpty ( ) )
15069	assertEquals ( true, result )
15070	listener. assertEventFired ( new SortOrder ( "foo", SortDirection. ASCENDING ), new SortOrder ( "bar", SortDirection. ASCENDING ), new SortOrder ( "baz", SortDirection. DESCENDING ) )
15071	assertEquals ( Integer. valueOf ( 4 ), transform. evaluate ( 1, 2 ) )
15072	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "colorTest03.pdf", sourceFolder + "cmp_colorTest03.pdf", destinationFolder, "diff_" ) )
15073	assertEquals ( "av0c", nodeToStringTransformer. transform ( ) )
15074	Assert. assertEquals ( DefaultJobPriorityProvider. DEFAULT_PRIORITY_ON_RESOLUTION_FAILURE, job. getPriority ( ) )
15075	Assert. assertTrue ( factory. verify ( password, longKeyAlt. toCharArray ( ) ) )
15076	assertThat ( parser. parsePath ( tokens ( identifier ), typeSystem ), is ( identifier ) )
15077	assertVideos ( videos )
15078	Assert. assertTrue ( exclusion1. hashCode ( ) == exclusion2. hashCode ( ) )
15079	assertThat ( int_gt_1, description ( "an instance of java.lang.Integer and a value greater than <1>" ) )
15080	assertEquals ( expected, emptyGraph. getSuccessors ( ) )
15081	assertRequest ( "POST", "Call/%s/Speak/", callId )
15082	assertEquals ( expected, actualQuery )
15083	assertEquals ( DecodeQualification. UNABLE, plugIn. getDecodeQualification ( path ) )
15084	assertEquals ( "V1 Title", wrapper. getTitle ( ) )
15085	assertTrue ( cvs. size ( ) > 0 )
15086	assertNotSame ( "Auditor re-election is not happened for auditor failure!", auditor, newAuditor2 )
15087	assertThat ( actual, notNullValue ( ) )
15088	assertEquals ( argumentCaptor. getValue ( ). getExposedPorts ( ), expectedExposedPorts )
15089	assertNotNull ( getStdOut ( ) )
15090	Assert. assertEquals ( assinatura, eventoManifestacaoDestinatario. getAssinatura ( ) )
15091	assertSame ( service1, service2 )
15092	TestUtil. assertSuccess ( result )
15093	assertThat ( result, is ( "LowerNwNodeId" ) )
15094	assertEquals ( expected, actual )
15095	assertEqualsIgnoreWhitespace ( expected, real )
15096	assertNotNull ( result )
15097	assertThat ( event. getExtra ( ). get ( key ), equalTo ( expectedValue ) )
15098	Assert. assertEquals ( "Double decode brackets not correct", out, WebUtilities. doubleDecodeBrackets ( in ) )
15099	assertEquals ( "<source>{{foo}}</source>", engine. compileMustache ( "embed_helper02", "{{embed 'template'}}" ). render ( null ) )
15100	assertNotNull ( Session. reader ( "KSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
15101	assertQuery ( ( String ) q [ 0 ], ( String ) q [ 2 ] )
15102	Assert. assertNull ( new CompareTool ( ). compareByContent ( filename, sourceFolder + "cmp_copyLargeFile.pdf", destinationFolder, "diff_" ) )
15103	assertEquals ( 0, result. size ( ) )
15104	assertTrue ( mapCell. isAtSameLocationAs ( other ) )
15105	assertEquals ( c1, c2 )
15106	assertThat ( returnedMode. getData ( ), is ( instanceOf ( SpecificData. class ) ) )
15107	assertEquals ( "value ${escaped}", sub. replace ( org ) )
15108	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
15109	assertTrue ( page. getPlugins ( ). get ( "breakjs" ). getDescription ( ). contains ( "All Good" ) )
15110	assertEquals ( policy, dest. getServer ( ) )
15111	assertEquals ( "2", r )
15112	Assert. assertEquals ( hash, LongHashFunction. farmUo ( ). hashBytes ( s ) )
15113	assertEquals ( Collections. singletonList ( 9L ), result )
15114	assertEquals ( change. getChangeData ( ), data )
15115	assertEquals ( expected, consistencyChecker. getErrorCollector ( ). getErrorList ( ) )
15116	assertThat ( c. toString ( ), is ( "myString >= aaa" ) )
15117	assertTrue ( worker. getTimeForQueryMs ( "select * {?s?p?o} LIMIT 10", "10" ) [ 0 ] > 0 )
15118	assertEquals ( "Rule 2 should be fired once as we have firing rule as one of criteria checking rule only fire once", 1, cc. getValue ( ) )
15119	assertNull ( n )
15120	assertEquals ( 1, value. value )
15121	assertThat ( resultFilters. get ( "publisherId" ). size ( ), is ( 1 ) )
15122	assertSizes ( validator, double [ ]. class )
15123	assertIsomorphic ( validExpected, parsed )
15124	assertThat ( actual, is ( equalTo ( n ) ) )
15125	assertEquals ( 1, stat. getDev ( ) )
15126	assertThat ( e. getMessage ( ), equalTo ( "Rejecting illegal call to synthetic constructor: private Subclass(org.kohsuke.groovy.sandbox.impl.Checker$SuperConstructorWrapper). " + "Perhaps you meant to use one of these constructors instead: public Subclass()" ) )
15127	assertEquals ( Color. blue. getRGB ( ), thumbnail. getRGB ( 49, 99 ) )
15128	assertFalse ( lhs. equals ( rhs ) )
15129	assertSame ( expectedResp, FutureUtils. result ( rrStore. getNamespace ( expectedReq ) ) )
15130	assertThat ( result, is ( true ) )
15131	assertEquals ( "om 3 氓r", t. format ( new Date ( 2629743830L * 12L * 3L ) ) )
15132	assertEquals ( result. build ( ). find ( ArrayElement. class, "retval" ). get ( 0 ). getEntries ( ), myTestInstance. groupByAsync ( builder ). get ( ). toList ( ) )
15133	Assert. assertEquals ( Character. valueOf ( 'F' ), node. getIncomingEdgeFirstCharacter ( ) )
15134	assertOut ( "visible=\\"false\\"" )
15135	assertEquals ( superClass. hashCode ( ) ^ Objects. hashCode ( value ), doublePrecisionFloat. hashCode ( ) )
15136	assertEquals ( ( ( Number ) results. iterator ( ). next ( ). getValue ( ) ). intValue ( ), 48 )
15137	assertThat ( storedProcResultAsString, equalTo ( "\\"a is my temp value\\"" ) )
15138	assertEquals ( getExpectedItemSize ( allStrings ), DynamoDBUtil. getItemSizeBytes ( item ) )
15139	assertTrue ( latch. await ( 4, SECONDS ) )
15140	Assert. assertEquals ( result, aggregator. getResult ( 0 ) )
15141	assertEquals ( 7, AviatorEvaluator. execute ( "a=3;\\r\\na+4" ) )
15142	assertMockEndpointsSatisfied ( )
15143	assertEquals ( TagUtils. getTaggedCommit ( "source_tag", repo ), BranchUtils. getHeadCommit ( "test_branch", repo ) )
15144	assertNotNull ( "PlacementChangeRequest is null", entity )
15145	assertEquals ( date, avg )
15146	assertNull ( ent. getName ( ) )
15147	assertEquals ( expectedQuery, actualQuery )
15148	assertEquals ( 1, listener. updatedInjectedFilters. size ( ) )
15149	assertEquals ( "a\\nB\\nc\\nD\\nd\\ne", readAsString ( gfs. getPath ( "/test_file.txt" ) ) )
15150	Assert. fail ( "Assignment should fail because of insufficient capacity." )
15151	assertEquals ( 0, instance. getInterfaces ( ). size ( ) )
15152	assertNotNull ( result )
15153	assertNull ( "Should not find user", MCRUserManager. getUser ( this. user. getUserName ( ), this. user. getRealm ( ) ) )
15154	assertFalse ( kieModule instanceof CanonicalKieModule )
15155	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
15156	Assert. assertEquals ( expResult, result )
15157	assertTrue ( foundSetting )
15158	assertNotNull ( handler. getImportBundleDocument ( new StringBufferInputStream ( xml ) ) )
15159	assertThat ( response, is ( "+" ) )
15160	assertThat ( referenceSet. getReferencingAxioms ( ), hasItem ( axiom ) )
15161	assertTrue ( connectFuture. isConnected ( ) )
15162	mockEndpoint. assertIsSatisfied ( )
15163	Assert. assertEquals ( firstLoyaltyAbilityRulesText, "+1: Return up to one target land card from your graveyard to your hand." )
15164	assertSqlCanBeParsedAndDeparsed ( stmt )
15165	assertEquals ( "1 test case was supposed to be created", 1, foundTestCases. size ( ) )
15166	assertEquals ( mav. getViewName ( ), "pm/pmForm" )
15167	Assert. assertFalse ( context. getResult ( ) )
15168	assertArrayEquals ( result, ByteArray. getAllBytes ( aggregator ) )
15169	assertNotNull ( Country. reader ( ). read ( ) )
15170	assertEquals ( "uuml 眉", p. getName ( ). get ( 0 ). getFamily ( ). get ( 0 ). getValue ( ) )
15171	assertEquals ( result, result )
15172	Assert. assertEquals ( "AroundConstructPostConstruct", bean. getMessage ( ) )
15173	Assert. assertTrue ( "Invalid result", result )
15174	assertEquals ( "", unrender. toXmlString ( ) )
15175	assertEquals ( zero, result )
15176	assertEquals ( "bc", sb. toString ( ) )
15177	assertEquals ( 1, ksession. fireAllRules ( ) )
15178	Assert. assertNotNull ( addressResultsDto )
15179	paths. assertHasDigest ( INFO, actual, digest, expected )
15180	assertArrayEquals ( " { 'BSON': ['awesome', 5.05, 1986] } not the expected bytes.", arrayDocument, out. toByteArray ( ) )
15181	assertCurrentTestFileName ( currentHtmlFileName )
15182	assertEquals ( 13, buffer. get ( ) )
15183	assertThat ( ages, everyItem ( greaterThanOrEqualTo ( 18 ) ) )
15184	assertLastEventIsType ( XAxesExtremesChangeEvent. class )
15185	assertTrue ( onto. containsAxiom ( factory. getOWLDatatypeDefinitionAxiom ( factory. getOWLDatatype ( IRI. create ( tns, "Enumerated" ) ), factory. getOWLDataOneOf ( factory. getOWLLiteral ( "A", OWL2Datatype. XSD_STRING ), factory. getOWLLiteral ( "B", OWL2Datatype. XSD_STRING ), factory. getOWLLiteral ( "C", OWL2Datatype. XSD_STRING ) ) ) ) )
15186	assertThat ( manager. registerVoter ( "foo" ), is ( 123L ) )
15187	this. assertServiceInstanceGetRequest ( serviceInstance, true, "failed" )
15188	assertFalse ( post. getTopic ( ). getSubscribers ( ). contains ( user ) )
15189	Assert. assertTrue ( Math. abs ( a. diagonalProduct ( ) - 45.0 ) < Matrices. EPS )
15190	assertEquals ( 1, countValue )
15191	assertTrue ( closed. await ( 2, SECONDS ) )
15192	Assert. fail ( "should have thrown SQLFeatureNotSupportedException" )
15193	assertOut ( "var /** @type {*} */ a = ((a + b) - (c + d)) * e" )
15194	assertThat ( p, is ( nullValue ( ) ) )
15195	assertEquals ( "onetwo", sb. toString ( ) )
15196	assertNotNull ( testee )
15197	assertEquals ( i, list. head ( ). get ( ) )
15198	assertEquals ( expResult, result )
15199	assertNotNull ( entity. getId ( ) )
15200	Assert. assertEquals ( itemExportacaoIndireta, detalheExportacao. getExportacaoIndireta ( ) )
15201	assertTrue ( Double. valueOf ( f ). equals ( output. get ( ) ) )
15202	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
15203	Assert. assertTrue ( result. equals ( "11 �拽�转" ) )
15204	assertTrue ( hasNoise )
15205	assertTrue ( comparePomFiles ( reactorProjects ) )
15206	assertThat ( actualExceptionCode, is ( "bus001" ) )
15207	assertThat ( result ( ), not ( containsString ( "\\"comments\\"" ) ) )
15208	Assert. assertTrue ( false )
15209	assertEquals ( 8, someNotSoRandomAsciiAsList. size ( ) )
15210	assertTrue ( stack. getDurability ( ) == potion. toDamageValue ( ) )
15211	Assert. assertEquals ( Arrays. asList ( record1, record2, record3, record4, record5 ), listToSort )
15212	Assert. assertTrue ( monitorConfig. getWangwangList ( ). contains ( "无花" ) )
15213	assertNotNull ( result )
15214	Assert. fail ( "Was able to set properties when referencing sensitive parameter from within EL" )
15215	assertTrue ( isKeyEntity )
15216	assertThat ( s1, containsString ( str ) )
15217	Assert. assertTrue ( enabled )
15218	assertEquals ( 1, membersFiltered. getMembers ( ). size ( ) )
15219	assertArrayEquals ( expected, actual )
15220	assertEquals ( RESULT, result )
15221	assertions. isLessThan ( actual )
15222	assertTrue ( lines. stream ( ). anyMatch ( l -> l. contains ( "SF: Hello World!" ) ) )
15223	assertEquals ( expected, result )
15224	assertEquals ( 100., calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
15225	assertTrue ( detector. evaluate ( "", 10, 15 ) )
15226	assertThat ( parse ( contents ), contains ( map ( "value", "1.0" ) ) )
15227	assertEquals ( r1, r2 )
15228	assertTrue ( true )
15229	Assert. assertNotNull ( addressResultsDto )
15230	assertEquals ( new ParseResult ( new Doc ( "ParserTest", Pkg. _Pkg ( list ( _JavaEOLComment ( "//a start comment" ) ), "hello.world" ), list ( Imprt. _Imprt ( list ( IMPORTS_COMMENT ), "wow.man" ), Imprt. _Imprt ( NO_COMMENTS, "flim.flam" ) ), list ( new DataType ( NO_COMMENTS, NO_ANNOTATIONS, "FooBar", NO_FORMAL_TYPE_ARGUMENTS, NO_EXTENDS, NO_IMPLEMENTS, list ( new Constructor ( NO_COMMENTS, "foo", Util. < Arg > list ( ) ), new Constructor ( NO_COMMENTS, "bar", list ( new Arg ( Util. < ArgModifier > list ( ), _Primitive ( _IntType ( ) ), "hey" ), new Arg ( list ( _Final ( ) ), _Ref ( _ArrayType ( _Ref ( _ClassType ( "String", NO_ACTUAL_TYPE_ARGUMENTS ) ) ) ), "yeah" ) ) ) ) )
15231	assertEquals ( ko1, ko2 )
15232	assertEquals ( indexRollover1, indexRollover2 )
15233	assertNull ( "The result should be null.", config )
15234	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), allOf ( hasEnvVar ( "item1", "value1" ), hasEnvVar ( "item2", "value2" ) ) )
15235	assertEquals ( 592, orbitFiles. length )
15236	assertEquals ( "FRED", name )
15237	Assert. assertTrue ( match )
15238	Assert. assertTrue ( "this should be a collection", isDir )
15239	Assert. assertNotNull ( savedBook. getBookId ( ) )
15240	Assert. assertEquals ( 0, errors. size ( ) )
15241	assertHandleEquals ( expected, dest )
15242	Assert. assertEquals ( value + 1, nextValue )
15243	assertNull ( "Analyzer must be null", mapper. analyzer )
15244	Assert. fail ( "RuntimeException should be thrown!" )
15245	assertNotNull ( reporter )
15246	assertThat ( decorator. getGrid ( ), Is. < Grid > is ( grid ) )
15247	assertEquals ( "test email", reply )
15248	Assert. assertNotNull ( result )
15249	assertNotNull ( proveedorFacturas. getId ( ) )
15250	Assert. assertEquals ( 4, f15. getPartialDerivative ( 1 ), EPS )
15251	assertSame ( tokenCell ( 0 ), sync. getPair ( ( TextTokenCell ) tokenCell ( 1 ) ) )
15252	assertEquals ( keyExpected, keyBuilt )
15253	assertEquals ( expect, strategy. write ( new FunctionData4 ( ) ) )
15254	assertEquals ( expectedKeys, actualKeys )
15255	assertFalse ( "syntaxChecker OID should no longer be present", schemaManager. getSyntaxCheckerRegistry ( ). contains ( OID ) )
15256	assertParser ( twig )
15257	Assert. assertFalse ( diff. identical ( ) )
15258	assertTrue ( result. get ( RETURN_RESULT ). toLowerCase ( ). startsWith ( "com.fasterxml.jackson.core.jsonparseexception: unrecognized token 'newcategory'" ) )
15259	assertEquals ( expResult, result )
15260	assertThat ( del. getDeadline ( ), is ( nullValue ( ) ) )
15261	assertEquals ( 0, task. poll ( ). size ( ) )
15262	assertNull ( "was supposed to pass", status )
15263	assertNull ( GeodeticDatum. ANCHOR_POINT_KEY, properties. put ( GeodeticDatum. ANCHOR_POINT_KEY, "Origin Z" ) )
15264	Assert. assertNotNull ( result )
15265	Assert. assertEquals ( "whole file not read back", fileLength, bytesRead )
15266	assertThat ( builder, hasToString ( "<a href=\\"https://flattr.com/thing/123546/a-demo-thing\\">" + "<img src=\\"http://api.flattr.com/button/flattr-badge-large.png\\"" + " width=\\"93\\" height=\\"20\\" alt=\\"Flattr this\\" title=\\"Flattr this\\" border=\\"0\\" />" + "</a>" ) )
15267	assertThat ( allowed, equalTo ( true ) )
15268	assertTrue ( listEditor. getList ( ). isEmpty ( ) )
15269	assertThat ( DatastoreUtil. referenceToKey ( reference ), is ( key ) )
15270	Assert. assertEquals ( dbLoadBalancers. size ( ), dbLoadBalancers1. size ( ) - 1 )
15271	Assert. assertEquals ( 1, detailC. size ( ) )
15272	Assert. assertEquals ( "Attributed not setted", new Integer ( 8999 ), cnx. getPort ( ) )
15273	assertEquals ( - 1, idx )
15274	assertEquals ( 10, fetchIterationLimit )
15275	assertArrayEquals ( data, ( short [ ] ) deserialize. readObject ( short [ ]. class ) )
15276	assertThat ( condition. isSatisfied ( ), is ( true ) )
15277	assertArrayEquals ( new String [ ] { "1.2.40.0.13.1.1.99.16.2", "1.2.40.0.13.1.1.99.17.2" }, matches ( query, Tag. SeriesInstanceUID ) )
15278	assertResultSet ( res )
15279	assertThat ( underTest. extract ( request ), is ( nullValue ( ) ) )
15280	assertThat ( cb. getForwardCallback ( ), sameInstance ( mockResults ) )
15281	Assert. assertEquals ( true, a. compareTo ( b ) > 0 )
15282	Assert. assertEquals ( "somethingmock", ret. getValue ( ) )
15283	assertOut ( "var /** @type {Object} */ a = Object(\\"1\\")" )
15284	Assert. assertEquals ( expect_sql, sql )
15285	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
15286	Assert. fail ( e. getMessage ( ) )
15287	assertEquals ( 4 * 550, outputs. size ( ) )
15288	assertResultsEqual ( results, 42.0 )
15289	assertTrue ( true )
15290	assertEquals ( "mickey@disney.com", descriptor. getDefaultRecipients ( ) )
15291	assertFalse ( recordResultSet. next ( ) )
15292	Assert. assertNotEquals ( forwardInfo. getForwardServers ( ). size ( ), clone. getForwardServers ( ). size ( ) )
15293	assertEquals ( "fileName-" + TIMESTAMP + ".js", result )
15294	assertEquals ( 0, trace. allProperties ( ). size ( ) )
15295	assertEquals ( STATUS_NO_CONTENT, updated. getStatus ( ) )
15296	Assert. assertEquals ( i, InetAddress. getByName ( "10.0.1.2" ) )
15297	assertEquals ( null, result )
15298	assertFeatureValues ( expected, testQuery, testText, new UnigramFeatureExtractor ( ) )
15299	assertArrayEquals ( result, new byte [ ] { 0, 1 } )
15300	assertEquals ( "viewport background must be unchanged", viewportColor, scrollPane. getViewport ( ). getBackground ( ) )
15301	Assert. assertEquals ( 202, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
15302	Assert. assertEquals ( "(nt_point_location (nt_base_location * (nt_number 123)) (nt_offset - (nt_number 4)))", loc. toStringTree ( parser ) )
15303	Assert. assertThat ( list, Is. is ( Arrays. asList ( "1", "1_1", "1_2", "1_3", "1_4", "2_1", "2_2", "2_3", "2_4", "3", "4", "5", "6", "7" ) ) )
15304	assertThat ( f. format ( PlainDate. of ( 2017, 10, 1 ) ), is ( "Sunday, October 1, 106 Juche" ) )
15305	assertEquals ( 0, dureation )
15306	assertFalse ( content. contains ( "Related pages" ) )
15307	assertThat ( subject. getUriForRedirect ( "/rdap/autnum/3546", Query. parse ( "-T aut-num AS3546" ) ). toString ( ), is ( "one.net/autnum/3546" ) )
15308	Assert. assertEquals ( object ( ). getIdentifier ( ), historyProxy. getIdentifier ( ) )
15309	assertThat ( router. allRoutes ( ), hasItem )
15310	assertEquals ( expected, result )
15311	assertEquals ( "{\\"d\\":{\\"__metadata\\":{\\"id\\":\\"" + getEndpoint ( ) + "Rooms('3')\\"," + "\\"uri\\":\\"" + getEndpoint ( ) + "Rooms('3')\\",\\"type\\":\\"RefScenario.Room\\"," + "\\"etag\\":\\"W/\\\\\\"3\\\\\\"\\"}," + "\\"Id\\":\\"3\\",\\"Name\\":\\"Room 3\\",\\"Seats\\":2,\\"Version\\":3," + "\\"nr_Employees\\":{\\"__deferred\\":{\\"uri\\":\\"" + getEndpoint ( ) + "Rooms('3')/nr_Employees\\"}}," + "\\"nr_Building\\":{\\"__metadata\\":{\\"id\\":\\"" + getEndpoint ( ) + "Buildings('2')\\"," + "\\"uri\\":\\"" + getEndpoint ( ) + "Buildings('2')\\",\\"type\\":\\"RefScenario.Building\\"}," + "\\"Id\\":\\"2\\",\\"Name\\":\\"Building 2\\",\\"Image\\":null," + "\\"nb_Rooms\\":{\\"__
15312	assertEquals ( 20, tasks. size ( ) )
15313	assertDocContent ( doc )
15314	assertFalse ( empty. notifyAboutGene ( "DoesNotExist" ) )
15315	assertTrue ( Arrays. equals ( NetPlan. getAttributeValues ( Arrays. asList ( n1, n2, n3 ), "att", 7 ). toArray ( ), new double [ ] { 1.0, 2.0, 7.0 } ) )
15316	assertEquals ( expectedTag, true )
15317	Assert. assertEquals ( HttpURLConnection. HTTP_FORBIDDEN, conn. getResponseCode ( ) )
15318	assertNotNull ( data. getString ( 0, data. length ( ) ) )
15319	assertEquals ( first, builder. getValue ( ) )
15320	assertThat ( userArg. getValue ( ), is ( user ) )
15321	assertEquals ( imports. size ( ), tree. getModelObject ( ). getChildCount ( tree. getModelObject ( ). getRoot ( ) ) )
15322	assertEquals ( "aTestString", classUnderTest. getClientName ( ) )
15323	Assert. assertEquals ( "curl -X GET -L --cookie \\"test-cookie=test-value;test-cookie=test-value2;test-cookie3=test-value4\\" 'https://eatstreet.com/api/v2/CitiesByState.json'", curl )
15324	assertThat ( parse ( contents ), contains ( map ( "a", "120000000000" ) ) )
15325	assertEquals ( timeFrameEditor. isFirstMonthAvailable ( ), true )
15326	assertColumnFamilyResource ( resource, false )
15327	assertThat ( result. isEmpty ( ), is ( true ) )
15328	assertEquals ( String. format ( p, r. getMillis ( ) ), cf. format ( r ) )
15329	assertThat ( formatMsg ( jmc, OBJ_MSG ), is ( OBJ_MSG ) )
15330	assertEquals ( actual, expected )
15331	assertEquals ( HttpStatusCode. OK_200, response. getStatus ( ) )
15332	assertThat ( result, is ( nullValue ( ) ) )
15333	assertOut ( "/**\\n * @type {*}\\n */\\nRoyaleTest_A.prototype.a = undefined" )
15334	Assert. assertEquals ( 5, es. size ( ) )
15335	TestUtils. assertBuildSuccess ( build )
15336	assertTrue ( user == null )
15337	assertEquals ( "wrong size", 0, properties. size ( ) )
15338	assertEquals ( originalText, scriptPanel. getText ( ) )
15339	assertEquals ( "logical1", manager2. getLogicalNode ( "logical-watch" ). get ( 0 ) )
15340	assertEquals ( personList. length, 2 )
15341	assertParameterIsUnsupported ( )
15342	assertEquals ( 0, database. getNumberOfEmployees ( ) )
15343	assertTrue ( namespace. getId ( )!= null && namespace. getId ( ). compareTo ( BigInteger. ZERO ) > 0 )
15344	Assert. fail ( "IllegalArgumentException should occur but didn't!" )
15345	assertTrue ( reason!= null && reason. equals ( "device.executeShellCommand FAILED:" ) )
15346	assertEquals ( "SQL to select for update", "SELECT * FROM " + tableName ( TEST_TABLE ) + expectedForUpdate ( ), testDialect. convertStatementToSQL ( stmt ) )
15347	assertArrayEquals ( asciiData, binaryData, 0.001f )
15348	assertEquals ( child, instance. getChild ( ) )
15349	assertEquals ( "SALTY", helper. getParameterStringValue ( "flavour" ) )
15350	assertResponse ( outputStream, expected )
15351	assertOut ( "this.knownMember" )
15352	assertMockEndpointsSatisfied ( )
15353	assertThat ( requests, is ( 1 ) )
15354	assertEquals ( "Three selected items iteration result", "[a, c, d]", IterableUtil. shallowCopy ( selection ). toString ( ) )
15355	assertEquals ( 80., stateManager. getActivityState ( route. getActivities ( ). get ( 1 ), vehicle, InternalStates. LATEST_OPERATION_START_TIME, Double. class ), 0.01 )
15356	assertEquals ( "Incorrect number of roles", 0, roles. size ( ) )
15357	assertThat ( c. toString ( ), is ( "myString == aaa" ) )
15358	assertSame ( expectedT, t )
15359	assertEquals ( plugins, runningInForumPlugins, "Plugins should be returned by calling plugins loader" )
15360	assertOptionsSetViaConfigurator ( )
15361	Assert. assertEquals ( createArrayNode ( 1, 2, 3 ), result )
15362	assertEquals ( "Conversion did not match", value, to )
15363	Assert. assertEquals ( 0, fileredInvokers. size ( ) )
15364	this. assertAnalyzesTo ( _a, "{\\"foo\\":[true,false]}", new String [ ] { "foo", "true", "false" }, new String [ ] { TypeAttribute. DEFAULT_TYPE, TypeAttribute. DEFAULT_TYPE, TypeAttribute. DEFAULT_TYPE } )
15365	assertEquals ( result, "10:15:30 AM UTC" )
15366	assertEquals ( value, evaluated )
15367	assertException ( "FEEL-01015", "''", "< ''", "'camunda'", "< 'camunda'", "false", "< true", "'12'", "< '12'", "\\"12\\"", "< \\"12\\"" )
15368	assertTrue (! client. getStack ( ). getBlockwiseLayer ( ). isEmpty ( ) )
15369	Assert. areEqual ( true, countA == 10 && countB == 0, "countA值" )
15370	assertEquals ( "failed to generate class with JSNI method", CLASS_WITH_JSNI_METHOD, cls )
15371	assertEquals ( asList ( warn ( mdcValues, marker, message, args ) ), testLogger. getLoggingEvents ( ) )
15372	assertEquals ( "2017-01-19 05:05:00", spec. interpret ( "1484802359000" ) )
15373	assertNotNull ( render. getRuleRenderOptions ( ) )
15374	assertEquals ( expected, actual )
15375	assertTrue ( COUNTER > 0 )
15376	assertTrue ( getNoErrorMsg ( ), result )
15377	assertEquals ( expected, result )
15378	assertEquals ( now, target. getCreatedOn ( ) )
15379	assertEquals ( "POLYGON ((-180 -90, 180 -90, 180 90, -180 90, -180 -90))", binningFormModel. getRegion ( ). toText ( ) )
15380	Assert. assertEquals ( position, lastPosition )
15381	assertEquals ( "bug", berr. toString ( ). trim ( ) )
15382	assertUrl ( url, "http", "localhost", 80, "/" )
15383	assertEquals ( "locationUpdate", subscriptionRequest. getValue ( ). getSubscriptionName ( ) )
15384	assertThat ( result, is ( Arrays. copyOfRange ( data, 1, 2 ) ) )
15385	Assert. assertTrue ( bd. compareTo ( exp ) == 0 )
15386	assertEquals ( "myspecialcharsfamilyname", person. getName ( ). getFamilyName ( ) )
15387	assertEquals ( "sort field condition serialization is wrong", expected, actual )
15388	assertThat ( result. statusCode, is ( Response. OK ) )
15389	assertEquals ( NOT_FOUND. getStatusCode ( ), response. getStatusCode ( ) )
15390	assertEquals ( "streams aborted in " + streamStatistics, 4, streamStatistics. aborted )
15391	assertEquals ( 400, fail )
15392	assertTrue ( "This". equals ( form. firstName. getValue ( ) ) )
15393	assertEquals ( "Spilled records: " + spill, out, spill )
15394	assertFalse ( outputGraphExecutor. equals ( nullOutput ) )
15395	Assert. assertTrue ( httpAcceptor. emptyBindings ( ) )
15396	Assert. assertEquals ( 2, result )
15397	assertThat ( codes, containsInAnyOrder ( "ParentWithNoChildrenA", "ParentWithNoChildrenB", "ParentWithNoChildrenC", "ParentA", "childAAA", "childAAB", "childAA", "childAB", "ParentB" ) )
15398	assertEquals ( "Mismatched message at line #" + i, message, line )
15399	assertTrue ( logContainsText ( "ItemClick: 0 | 1" ) )
15400	assertEquals ( expResult, result )
15401	assertEquals ( "13", cfg. primeNumber ( ) )
15402	assertTrue ( requestContext. getSecurityContext ( ). isSecure ( ) )
15403	assertEquals ( field. getXrefLabelNames ( ), Arrays. asList ( "1", "2", "3" ) )
15404	assertEquals ( HttpStatusCode. INTERNAL_SERVER_ERROR. code, response. getStatus ( ) )
15405	assertNodeGetsCorrectPriority ( compoundWrite, LEAF_NODE, PriorityUtilities. NullPriority ( ) )
15406	assertThat ( runtime. exitStatus ( ), is ( equalTo ( ( byte ) 0x1 ) ) )
15407	Assert. assertEquals ( 0, BigDecimal. ONE. compareTo ( result ) )
15408	Assert. assertTrue ( agent. needsModel ( ) )
15409	assertTrue ( "Not all generated enum values were unique.", enumValuesSet. isEmpty ( ) )
15410	Assert. assertNotNull ( zoo )
15411	assertThat ( underTest. execute ( underTest, null, null, new Object [ ] { assetDocument, "jexlexpression", "*", repoToContainedGroupMap }, null ), is ( false ) )
15412	assertEquals ( new Long ( 0L ), n )
15413	assertTrue ( new UriTokenizer ( "12345678-abcd-ef12-1234-567890ABCDEF" ). next ( TokenKind. GuidValue ) )
15414	assertThat ( contributors, hasSize ( 30 ) )
15415	assertEquals ( expecting, result )
15416	assertEquals ( "<foo 'completed'->kill '*'->custard || bar>", ctn. stringify ( ) )
15417	assertTrue ( s. startsWith ( "str in com.querydsl.core.DefaultQueryMetadata@c" ) )
15418	assertEquals ( view, compassDropController. dropTarget )
15419	assertEquals ( 1, filterA. filter ( aciContext, OperationScope. ENTRY, null ). size ( ) )
15420	assertTrue ( references. isEmpty ( ) )
15421	assertEquals ( 0, g. size ( ) )
15422	assertOut ( "a *= b" )
15423	assertEquals ( "(TYPE int a) (TYPE int b 3)\\n", found )
15424	assertThat ( "Atom idx=" + i + " had a different hydrogen count before/after kekulization", g1. implHCount ( i ), is ( g2. implHCount ( i ) ) )
15425	Assert. assertThat ( item, is ( returnedItem ) )
15426	Assert. assertEquals ( getBean ( GenericDao. class ). getCount ( User. class ). intValue ( ), data. length ( ) )
15427	assertThat ( entities. getTotalElements ( ), equalTo ( 1L ) )
15428	Assert. assertEquals ( 1, results. size ( ) )
15429	assertTrue ( deleteSecurityGroupIPSetsResponse. getRet_code ( ) == 0 )
15430	assertEquals ( 1, result. size ( ) )
15431	assertEquals ( HttpStatusCode. BAD_REQUEST_400, response. getStatus ( ) )
15432	Assert. assertTrue ( dict. contains ( entry2 ) )
15433	assertNotNull ( services )
15434	assertEquals ( 10, routeState. get ( 0 ) )
15435	assertTrue ( dsc. getPanel ( )!= null )
15436	assertThatThrownBy ( ( ) -> graphQlExecutor. executeRequest ( request ) )
15437	Assert. assertNotNull ( cache. get ( id, User. class ) )
15438	assertXMLEqual ( getContent ( "testInsertObjectWithDeclaredFactAndQuery.expected.1", fh. toExternalForm ( ) ), outXml )
15439	BufferedImageAssert. assertMatches ( result, new float [ ] { 1, 1, 1, 1, 1, 1, 1, 0, 0 } )
15440	assertEquals ( aNumber, result, 10.0 )
15441	Assert. assertEquals ( "John,Doe", result. trim ( ) )
15442	assertEquals ( 4, hg19. size ( ) )
15443	assertEquals ( l1, l2 )
15444	assertEquals ( row. isPresent ( ), false )
15445	assertNull ( topicDraftService. getDraft ( ) )
15446	assertEquals ( "Removal failed", 0, newPerms & Perms. CREATE )
15447	assertSqlCanBeParsedAndDeparsed ( stmt )
15448	assertEquals ( "test", echo. echo ( "test" ) )
15449	Assert. assertEquals ( 2, p. h ( 6, - 1 ) )
15450	Assert. assertEquals ( BatchStatus. FAILED, exec. getStatus ( ) )
15451	assertThat ( digest. getAlgorithm ( ), equalTo ( "MD5" ) )
15452	Asserts. check ( targetHosts. size ( ) > 0, "fail setTargetHostsFromJsonPathTest" )
15453	assertEquals ( 2, trends. size ( ) )
15454	Assert. assertTrue ( "A1 text". equals ( sheetController. getMergedCellContent ( "A1" ) ) )
15455	assertEquals ( request. getRemoteHost ( ), result )
15456	assertEquals ( "00000000a6e5eb79dcec11897af55e90cd571a4335383a3ccfbc12ec81085935", block. getHashAsString ( ) )
15457	assertThat ( emptySession. getEnd ( ), equalTo ( date ) )
15458	assertThat ( convertedSalt, is ( encodedString ) )
15459	assertEquals ( "to string is wrong", expected, actual )
15460	Assert. assertNotSame ( result1. get ( 2 ), result2. get ( 2 ) )
15461	Assert. assertFalse ( nodes. isEmpty ( ) )
15462	assertEquals ( "test-value", clientWrapper. get ( "key1" ) )
15463	Assert. assertTrue ( result )
15464	assertNull ( getParameterRepositoryService ( ). getParameterValueAsBoolean ( key ) )
15465	assertEquals ( "Hibernate Master Class", _post. getTitle ( ) )
15466	assertStyleEquals ( css, styleSheet )
15467	assertEquals ( expected, actual )
15468	assertDepth ( "addComplex", callTree, expectResult )
15469	assertEquals ( 1, capturedEvent. getValue ( ). getFirstIndex ( ) )
15470	Assert. assertEquals ( getRgb ( b. getCssValue ( "background-color" ) ), highDriver. getHighlightColor ( "put" ) )
15471	Assert. fail ( "InvalidFormatException must be thrown" )
15472	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
15473	lowLevelElasticSearchOperations. assertThatConnectionToElasticsearchIsPossible ( anyString ( ), anyInt ( ) )
15474	assertThat ( localName, is ( "thename" ) )
15475	assertEquals ( DecodeQualification. SUITABLE, readerPlugIn. getDecodeQualification ( headerFile ) )
15476	assertOut ( "a.setTime(10)" )
15477	assertTrue ( true )
15478	assertEquals ( Integer. valueOf ( 1 ), myTestInstance. insertAsync ( doc ). get ( ) )
15479	assertEquals ( new BigDecimal ( "11" ), lambda. apply ( BigDecimal. TEN ) )
15480	Assert. assertTrue ( new File ( jar ). exists ( ) )
15481	assertStat ( result )
15482	assertGridBodyCellEditContext ( editContextArgumentCaptor. getValue ( ), 0, 1, ROW_HEIGHT, col2. getWidth ( ), GRID_ABSOLUTE_Y + HEADER_HEIGHT, GRID_ABSOLUTE_X + col1. getWidth ( ), GRID_ABSOLUTE_Y + HEADER_HEIGHT, visibleBounds. getX ( ) )
15483	assertScoreAndParse ( content, null, 1 )
15484	Assert. assertEquals ( "[1, 2, 3, 4, 6, 7, 5]", result. toString ( ) )
15485	Assert. assertTrue ( isEqual ( distance, 0 ) )
15486	assertValidLicenseKeyFormat ( licenseKey )
15487	assertThat ( fileConfig. getConfigProperties ( ), contains ( configProperty ( INSERT_FINAL_NEWLINE, false ) ) )
15488	assertThat ( downstreamJobs, Matchers. containsInAnyOrder ( "my-downstream-pipeline-1" ) )
15489	assertEquals ( ImmutableList. of ( "/bin/sh foo.sh", "echo 'hello world'" ), lclp. getCommands ( ) )
15490	assertNotNull ( "Resource not found", in )
15491	this. assertPostReport ( report, reports. get ( 0 ) )
15492	Assert. assertThat ( migrationJob. getExceptionMessage ( ), CoreMatchers. containsString ( "Cannot migrate process instance '" + processInstance. getId ( ) + "' without tenant to a process definition with a tenant ('tenant1')" ) )
15493	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Message action=\\"https://example.com\\" from=\\"from\\" method=\\"GET\\" statusCallback=\\"https://example.com\\" to=\\"to\\">body</Message>", elem. toXml ( ) )
15494	Assert. assertEquals ( absoluteDir, fSys. getWorkingDirectory ( ) )
15495	assertEquals ( ImmutableList. of ( json ), ImmutableList. copyOf ( evaluate ( "${iter}", Iterable. class ) ) )
15496	arrays. assertEndsWith ( description, actual, null )
15497	assertEquals ( "Wrong key", "key...test.more...tests", key. toString ( ) )
15498	assertEquals ( participantId1, foundEntry. getParticipantId ( ) )
15499	assertThat ( testOutcome. getPendingCount ( ), is ( 4 ) )
15500	assertThat ( ebs1, not ( equalTo ( ebs2 ) ) )
15501	assertSame ( "wrapping renderer must use list's default on null", renderer. getDelegateRenderer ( ), list. getWrappedCellRenderer ( ) )
15502	assertEquals ( "Enclosing class is not ClassicEscalatableCreator", c. getCanonicalName ( ), "org.hyperic.hq.events.server.session.ClassicEscalatableCreator" )
15503	assertTrue ( bestStats. getFinalScore ( ) == 94.5 )
15504	assertEquals ( Arrays. asList ( "PREPARE_REQUEST_1", "PREPARE_REQUEST_2", "SEND_REQUEST_1", "SEND_REQUEST_2", "RECEIVE_RESPONSE_1", "RECEIVE_RESPONSE_2", "DISPATCH_RESPONSE_1", "DISPATCH_RESPONSE_2" ), events )
15505	Assert. assertFalse ( payload. needsBuild ( getProject ( ) ) )
15506	assertThat ( result, isFailedCommand ( ) )
15507	assertEquals ( expected, json )
15508	assertEquals ( "2015-10-05", mo. getDateWrittenElement ( ). getValueAsString ( ) )
15509	assertThat ( document, is ( nullValue ( ) ) )
15510	assertTrue ( s. stopCalled )
15511	assertEquals ( "getSongsBySongId", Names. resourceMethodName ( resource, method ) )
15512	assertTrue ( or. isDefined ( ) )
15513	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, slices, rows, columns ) + ", rmse = " + rmse, 0.0, rmse, EPSF )
15514	assertTrue ( "Enlish alphabet not correctly sorted", result )
15515	assertFalse ( JodaBeanSer. COMPACT. smartReader ( ). isKnownFormat ( bytes ) )
15516	assertHeader ( header, name, value )
15517	assertThat ( config. hasBasePackages ( ), is ( false ) )
15518	assertThat ( r. reduce ( Arrays. asList ( 1.0 ) ), equalTo ( 1.0 ) )
15519	assertTrue ( descriptor. isBeanConstrained ( ) )
15520	assertThat ( objectMapper. writeValueAsString ( dto ), equalTo ( "{\\"twoWords\\":\\"value\\"}" ) )
15521	assertEquals ( fileId, mFileSystemMaster. getFileInfo ( NESTED_FILE_URI, GET_STATUS_CONTEXT ). getFileId ( ) )
15522	assertTrue ( r1 instanceof PublicCloneable )
15523	assertEquals ( new BigInteger ( "2" ), bookCount )
15524	assertEquals ( expectedSqlForMathOperations7 ( ), result )
15525	assertEntityHasValue ( key, value )
15526	assertEquals ( 202, WebClient. client ( proxy ). getResponse ( ). getStatus ( ) )
15527	assertEquals ( count, 3 )
15528	assertEquals ( "Wrong # of triggers in incompleteActivationRule", 2, incompleteActivationRule. getTriggers ( ). size ( ) )
15529	assertThat ( builder. toSettings ( ). isAllowRespondByVRK ( ), is ( true ) )
15530	assertNull ( "Edit type was not null", element. getEditType ( ) )
15531	assertEquals ( "../../subFolder1/fileName1", relPath )
15532	assertEquals ( "AAPL", obj. symbol )
15533	assertRequest ( "POST", "Conference/%s/Member/%s/Speak/", confId, memberId )
15534	assertEquals ( "Chuck Norris", victim. readLiteralString ( ) )
15535	assertEquals ( 200, containerResponse. getStatus ( ) )
15536	assertEquals ( res, 1 )
15537	assertMessage ( "<type>DELEGATED</type>", 4 )
15538	assertions. hasSize ( 0 )
15539	assertEquals ( 1, ksession. fireAllRules ( ) )
15540	assertEquals ( expectedRestriction, restriction )
15541	assertEquals ( "inet mapper serialization is wrong", expected, actual )
15542	assertEquals ( expectedScriptNode, actualScriptNode )
15543	Assert. assertFalse ( hasIndexRangeKeyCondition )
15544	assertEquals ( GOOD_IP, credentials. getToken ( ) )
15545	assertEquals ( "message with 2 cookies and milk", logRecord. getMessage ( ) )
15546	assertEquals ( DSTransform. NTv2, crsStore. getPreferedTransformationType ( ) )
15547	assertThat ( json, equalTo ( expectedJson ) )
15548	assertEquals ( "success", configuration. getString ( "test.outcome" ) )
15549	Assert. assertEquals ( Permission. ASK, providerPermission )
15550	assertEquals ( cal. getTime ( ), d. getEnd ( ) )
15551	assertEquals ( "/a/b/c", path. toString ( ) )
15552	assertEquals ( 1, things. getNumOfEntities ( ) )
15553	assertObjectEquals ( "[{f1:'x1'}]", p. run ( bs, in, sa ) )
15554	assertTrue ( ex. isPrime ( 19 ) )
15555	assertTrue ( resultFromJPQL. size ( ) == 1 )
15556	assertEquals ( allocator. wrap ( ByteBuffer. wrap ( expect ) ), out )
15557	assertEquals ( "URI is not built correctly", "http://bar/", newUri. toString ( ) )
15558	assertThat ( result, is ( jsonBoolean ( false ) ) )
15559	assertEquals ( expected, result )
15560	assertNoValidationFailures ( tm, config )
15561	Assert. assertTrue ( state [ i ] == expected )
15562	assertThat ( target. matchExactly ( ( FlowAction ) action ), is ( true ) )
15563	assertEquals ( "          UVWXY  ", targetId. textValue ( ) )
15564	assertEquals ( m1, m2 )
15565	Assert. assertTrue ( isEqual ( distance, 0 ) )
15566	Assert. assertFalse ( "SearchByTags returned no results", jsonList. isEmpty ( ) )
15567	Assert. assertEquals ( 1L, vm. getStack ( ). pop ( ) )
15568	assertThat ( token. getType ( ), is ( PCRELexer. POSIXNegatedNamedSet ) )
15569	assertEquals ( TestModel. class, model. getModelClass ( ) )
15570	assertFalse ( OpenmrsUtil. isInNormalNumericRange ( 5.64f, concept ) )
15571	assertEquals ( as, result. toString ( ) )
15572	assertTrue ( p1. equals ( p2 ) )
15573	assertEquals ( expResult, result, 0.001 )
15574	assertFalse ( authorizer. isAuthorized ( MockWebContext. create ( ), profiles ) )
15575	assertNotEquals ( 0, tokenLists. size ( ) )
15576	assertThat ( t. getTitle ( ), notNullValue ( ) )
15577	assertEquals ( "Expected 0 results!", 0, n )
15578	assertEquals ( "Empty selection returns no items.", "[]", IterableUtil. shallowCopy ( selection ). toString ( ) )
15579	assertTrue ( "p2 is assigned to g1 and g1 assigned to r2", getRoleService ( ). principalHasRole ( "p2", roleIds, Collections. < String, String > emptyMap ( ) ) )
15580	assertEquals ( "dubbo://127.0.0.1:20887", result )
15581	Assert. assertEquals ( RheemCollections. asSet ( - 1 + expectedOffset, 1 + expectedOffset, 5 + expectedOffset ), RheemCollections. asSet ( result ) )
15582	assertFalse ( TestService. LIFECYCLE. contains ( "serverStatusChange" ) )
15583	assertTrue ( instance. runCommand ( ) )
15584	assertEquals ( rootNode. getPermissionList ( ). size ( ), 4 )
15585	assertEquals ( types. length, index. estimateTotalCount ( ) )
15586	assertEquals ( "XML Equals", jdkXml, javolutionXml )
15587	Assert. assertTrue ( tables. contains ( "KVPair_table". toUpperCase ( ) ) )
15588	assertEquals ( "http://home.dir.com", client. getBasePath ( ) )
15589	assertEquals ( 22, stopTimes. size ( ) )
15590	assertEquals ( 0, peopleIds. size ( ) )
15591	Assert. assertEquals ( 100, count )
15592	assertEquals ( 1, new ArrayList < > ( results. values ( ) ). get ( 0 ). getWidgetUsages ( results. values ( ) ). size ( ) )
15593	assertEquals ( aNumber, - Float. MAX_VALUE, 1E32 )
15594	assertUpdate ( result, 1 )
15595	assertNotNull ( response )
15596	assertAllTargetsCount ( 0 )
15597	assertTrue ( attributes. isNew ( ) )
15598	Assert. assertTrue ( gid >= 0 )
15599	assertThat ( I18nUtil. marktr ( TEST_STRING ), is ( TEST_STRING ) )
15600	assertEquals ( "Does not compare " + nv5 + " & " + nv7, NodeValue. CMP_LESS, NodeValue. compare ( nv5, nv7 ) )
15601	Assert. assertEquals ( '\\'', decChar. charValue ( ) )
15602	Assert. assertEquals ( ANY, desc. getImplementation ( ) )
15603	assertAllCodesOfSubChainSelector ( subChainSelector, "[a1, a2, a3]", "[a2, a3, a4]" )
15604	assertEquals ( userAddCL1. toString ( ), userAddCL2. toString ( ) )
15605	assertEquals ( 3, docksBars. getDocksBars ( ). size ( ) )
15606	assertEquals ( 0., violation, 0.01 )
15607	assertEquals ( "", "[one|2|[three|4]]", elr. getMessage ( ). toString ( ) )
15608	assertTrue ( m. isIsomorphicWith ( m2 ) )
15609	Assert. assertNotNull ( "no checksum", actual )
15610	assertThat ( gson. fromJson ( gson. toJson ( ldt ), LocalDateTime. class ), is ( ldt ) )
15611	assertEquals ( expResult, result )
15612	assertTrue ( userCanBuildProject )
15613	assertEqualDoubleArrays ( pydiv, div, epsilon )
15614	Assert. fail ( src + ": Should have failed" )
15615	Assert. assertEquals ( oc. toString ( ), oc2. toString ( ) )
15616	Assert. assertEquals ( "GcsTest_123", result )
15617	Assert. assertSame ( o, p. getExpectedValue ( ) )
15618	assertEquals ( "pong", response. getEntity ( ) )
15619	assertTrue ( b )
15620	Assert. assertTrue ( "RotateButton should be present", driver. findElement ( By. xpath ( "//*[@data-id='RotateButton']" ) ). isDisplayed ( ) )
15621	assertEquals ( "fre_01-01-13.xliff", res )
15622	context. assertEquals ( Arrays. asList ( "bar", "baz" ), candidates. stream ( ). sorted ( ). collect ( Collectors. toList ( ) ) )
15623	Assert. assertEquals ( 2, terms. size ( ) )
15624	assertHelpLines ( "Option                        Description                   ", "------                        -----------                   ", "-d [Integer: double dizzle]   dizzle (default: [2, 3, 5, 7])", EMPTY )
15625	Assert. assertEquals ( 0, total )
15626	assertEquals ( "lesson_05/_json_configs/lesson_05/_json_configs/smooks-config-reader-only.xml", uri. toString ( ) )
15627	assertThat ( requestedShutdownCallable. call ( ), equalTo ( false ) )
15628	assertEquals ( 172703, size )
15629	assertTrue ( "Manufacturer should exist.", manufacturerService. doesManufacturerExists ( name ) )
15630	JSONAssert. assertEquals ( "{a:[9]}", ARRAY_OF_JSONARRAYS, new CustomComparator ( JSONCompareMode. LENIENT, customization ) )
15631	assertEquals ( prefix_not_search_result, result )
15632	assertNotNull ( childProject. blockBuildWhenUpstreamBuilding )
15633	assertThat ( targetLocator. getUntargetedDriver ( ), instanceOf ( FirefoxDriver. class ) )
15634	Assert. assertEquals ( "Gen 1:2", v. getName ( ) )
15635	Assert. assertTrue ( "This path features normally 5 revisions", result. size ( ) == 5 )
15636	assertEquals ( "Theme doesn't match", theme, sut. getTheme ( ) )
15637	Assert. assertNotNull ( PropertyUtils. getProperty ( newObs, "allergen" ) )
15638	assertEquals ( 500, page. getWebResponse ( ). getStatusCode ( ) )
15639	assertImage ( null, destImg, e )
15640	assertEquals ( c1, c2 )
15641	Assert. assertEquals ( expectBucketName, bucketName )
15642	assertEquals ( "Hello World", testPage. newElement. getText ( ) )
15643	assertThat ( ShortTypeValidator. INSTANCE. validate ( parameters, "aaa" ), is ( "Aaa must be a short." ) )
15644	Assert. assertEquals ( "aa", mvcResult. getRequest ( ). getAttribute ( "aa" ) )
15645	assertEquals ( 1, statements. size ( ) )
15646	assertFalse ( one. equals ( two ) )
15647	Assert. assertEquals ( 1, patientCount )
15648	Assert. assertEquals ( "Hasan", person. getName ( ) )
15649	assertThat ( result. isValid ( ), is ( true ) )
15650	assertEquals ( sentPayload, receivedPayload )
15651	assertEquals ( expResult, result )
15652	Assert. isTrue ( organizations. size ( ) > 0 )
15653	assertBeanValuesUnchanged ( )
15654	assertEquals ( expectedJson, actualJson )
15655	assertEquals ( expected, jsonString )
15656	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
15657	Assert. assertEquals ( expected, actual )
15658	Assert. assertTrue ( theFlows. isEmpty ( ) )
15659	assertFalse ( svn. getProperties ( ). containsKey ( "hasChanges?" ) )
15660	assertThat ( count - 1, is ( 29 ) )
15661	assertThat ( "Testing out of order date", date, nullValue ( ) )
15662	assertEquals ( s, LittleEndianInputStream. wrap ( b ). readUnsignedShort ( ) )
15663	assertTrue ( group. isStudent ( student ) )
15664	Assert. assertEquals ( "Hello valA valB", result. getBody ( ) )
15665	approver. assertApproved ( "banana" )
15666	assertFalse ( "Model should contain RDF types", rdfTypes. isEmpty ( ) )
15667	Assert. assertEquals ( 1L, ctx2. tQueryForLongValue ( "select count(*) from users where name=#{name} and address=:addr", bind ( "name", "Tom", "addr", "China" ) ) )
15668	assertEquals ( this. view, view )
15669	assertEquals ( "numhits is wrong", 2160, res. getNumhits ( ). intValue ( ) )
15670	assertEquals ( "123", map. get ( "v" ) )
15671	Assert. assertNotNull ( added )
15672	assertEntityHasValue ( key, value )
15673	assertSuggestions ( suggestions, "foo", "fooba" )
15674	assertSame ( defaultDurability, result )
15675	assertEquals ( metaView2. getSd ( ). getCols ( ), metaView3. getSd ( ). getCols ( ) )
15676	assertThrows ( InvalidMethodSignatureException. class, ( ) -> new JavaDefaultParameterTransformerDefinition ( threeArg, lookup ) )
15677	assertEquals ( "Failed to generate 1-dimensional String array", "new String[] { \\"1\\", \\"2\\" }", s )
15678	assertEquals ( 1, tags. size ( ) )
15679	assertEquals ( entityBundle, clone )
15680	assertTrue ( new Matcher ( ). matchRelationshipInstance ( output, input ) )
15681	assertTrue ( objmap. containsKey ( "field_priv" ) )
15682	assertTrue ( "expecting no start rules; found " + msg. getClass ( ). getName ( ), msg instanceof GrammarSemanticsMessage )
15683	Assert. assertEquals ( 0, map. size ( ) )
15684	assertEquals ( "Running [port " + port + "]", response )
15685	assertTrue ( "uri should be defined in: " + uri, ti. wasDefinedIn ( Collections. singleton ( uri ) ) )
15686	Assert. fail ( e. getMessage ( ) )
15687	Assert. assertTrue ( "foo". equals ( generator. formatTableName ( "foo", DefaultSqlGenerator. LockIntent. NONE ) ) )
15688	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
15689	assertTokenStreamContents ( ts, new String [ ] { "hello", "Hello", "world", "World" }, new int [ ] { 0, 0, 10, 10 }, new int [ ] { 5, 5, 15, 15 }, null, new int [ ] { 1, 0, 2, 0 }, null, 15, null, true )
15690	assertEquals ( r1, r2 )
15691	Assert. assertEquals ( 10, buttons. size ( ) )
15692	Assert. assertTrue ( deal. isAccepted ( ) )
15693	Assert. assertNotSame ( exporter, exporter2 )
15694	assertEquals ( "Matching", VersionMatchResult. MATCHED, p. matches ( info ) )
15695	assertEquals ( 0x18, acia. read ( 0x0001, true ) )
15696	Assert. assertEquals ( 0, count )
15697	Assert. assertEquals ( 1, issues. length )
15698	assertThatSelectedValueIs ( "z2" )
15699	assertEquals ( SentryStoreSchemaInfo. getSentryVersion ( ), sentryStore. getSentryVersion ( ) )
15700	assertEquals ( "test", echo. echo ( "test" ) )
15701	assertThat ( SimpleFormatter. ofMomentPattern ( "dd.MM.yyyy hh:mm a z", Locale. UK, tzid ). format ( Moment. UNIX_EPOCH ), is ( expected ) )
15702	assertNull ( lease. getTenancyDuration ( ) )
15703	assertEquals ( expected, x )
15704	assertTrue ( "the method \\"vote\\" must return ACCESS_GRANTED", voteGenericTest ( authorities, configAttributes, AccessDecisionVoter. ACCESS_GRANTED ) )
15705	assertEquals ( 1, traverseCount )
15706	assertEquals ( 0l, theValue. get ( ). longValue ( ) )
15707	assertNotNull ( DocumentPermission. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "ETXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
15708	assertEquals ( new ComparisonExpression ( b ), orPredicate. getRhs ( ) )
15709	assertEquals ( modulus, clonedCertificate. getPublicKeyModulus ( ) )
15710	assertEquals ( SecurityGroupEntityMgr. findById ( this. em, SG_SFC_UNBIND_DELETE_SFC. getId ( ) ). getNetworkElementId ( ), null )
15711	assertNull ( entity. getCoordinates ( ) )
15712	assertNotNull ( target )
15713	assertFalse ( result. isSucceeded ( ) )
15714	assertNull ( query )
15715	assertEquals ( expected. substring ( 0, 5 ), sb. toString ( ) )
15716	Assert. assertNull ( changed. getReifier ( ) )
15717	assertEvalTrue ( new File ( "abssamples/backend/ObjectTests/recover1.abs" ) )
15718	assertEquals ( 0, ( long ) redis. objectIdletime ( key ) )
15719	assertTrue ( "content-type application/json should be valid", mediaTypeChecker. isContentTypeValid ( mockHeaders ) )
15720	assertEquals ( "{\\"resourceType\\":\\"Observation\\",\\"valueAttachment\\":{\\"contentType\\":\\"text/plain\\",\\"data\\":\\"AAECAw==\\",\\"url\\":\\"http://foo\\",\\"size\\":123}}", encoded )
15721	assertEquals ( xs, ys )
15722	Assert. assertFalse ( bpInfo1. equals ( bpInfo2 ) )
15723	assertNotNull ( "daysOfTheWeek must not be null", monthView. getDaysOfTheWeek ( ) )
15724	assertThat ( comment, equalTo ( "Simple field comment from classpath" ) )
15725	assertThat ( info. isRequired ( ), is ( true ) )
15726	assertEquals ( BigInteger. valueOf ( 536879104L ), work )
15727	assertEquals ( same. sum ( 1 ), sum )
15728	assertEquals ( PrimitiveTypeProducer. class, typeProducer. getClass ( ) )
15729	assertEquals ( n, rids. size ( ) )
15730	assertEquals ( VLWSentence. KM, empty. getTotalUnits ( ) )
15731	assertThat ( file ( retry ). lastModified ( ), is ( timestamp ) )
15732	assertTrue ( "Random vector for unknown words should always be the same.", Arrays. equals ( unk1, unk2 ) )
15733	assertEqualsJson ( expected, actual )
15734	assertThat ( res. toString ( ), is ( equalTo ( "my last response statusCode is: 200" ) ) )
15735	Assert. assertEquals ( 2, arrayList. size ( ) )
15736	assertEquals ( expResult, result )
15737	assertFalse ( hasConfigurationChanged )
15738	assertThat ( target. getBodyAsMap ( String. class ), is ( nullValue ( ) ) )
15739	Assert. fail ( "Xfdf files are not equal" )
15740	assertEquals ( 1, result. getSize ( ) )
15741	assertThat ( "My OU should have been returned", dns, hasItems ( "ou=Groups,dc=root" ) )
15742	assertEquals ( "!!org.yaml.snakeyaml.issues.issue332.Data {}", new Yaml ( ). dump ( data ). trim ( ) )
15743	assertResolvedDependencyIsNull ( )
15744	assertEquals ( AM_UXS, 3, rd. size ( ) )
15745	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
15746	assertEquals ( string1, string2 )
15747	assertEquals ( expectedSqlInsertIntoValuesWithComplexField ( ), testDialect. convertStatementToSQL ( testStatement, schema, null ) )
15748	Assert. assertEquals ( expected, filterResult )
15749	assertTrue ( AcceptanceTestUtil. isInterested ( component, remoteWorkerStub. getDeploymentID ( ). getServiceID ( ), rwmOD. getDeploymentID ( ) ) )
15750	Assert. assertNotNull ( value )
15751	assertNotNull ( credit. getVoteCount ( ) )
15752	assertEquals ( ExpressionFactory. exp ( "path not in (1,2,3)" ), exp )
15753	assertNull ( createSchema ( map, 1 ). getName ( ) )
15754	assertEquals ( "admin", jsp )
15755	assertTrue ( code == 401 )
15756	Assert. assertEquals ( "SELECT '0' = 0;", text )
15757	assertEquals ( ProcessInstance. STATE_COMPLETED, processInstance. getState ( ) )
15758	assertEquals ( expected, actual )
15759	assertThat ( sslContextSelector. select ( httpContext ), is ( nullValue ( ) ) )
15760	assertEquals ( out, Utils. decodeUTF8 ( in ) )
15761	assertNotNull ( WorkersRealTimeStatistics. fetcher ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
15762	assertEquals ( 0, walEdit. getKeyValues ( ). size ( ) )
15763	assertServiceInstanceCreateRequest ( serviceInstance )
15764	assertMockEndpointsSatisfied ( )
15765	assertOut ( "function B(msg, count) {\\n\\tthis.barfoo = (A._ || A._$get()).bar(3);" + "\\n\\tSuper.call(this, msg);\\n\\tthis.count = count;\\n\\ttrace(\\"now: \\" + B.now);\\n}" )
15766	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
15767	Assert. assertEquals ( metric, metric2 )
15768	assertThat ( normalize ( results ), is ( path ( "a/a.csv", "b/b.csv", "c/c.csv" ) ) )
15769	assertThat ( DateUtil. clearDatePart ( date ), is ( cal. getTime ( ) ) )
15770	Assert. assertEquals ( expected, rewriter. rewriteCookie ( cookie ) )
15771	assertEquals ( 2, ( ( List ) session. getGlobal ( "messages" ) ). size ( ) )
15772	assertNotNull ( actual )
15773	assertTrue ( error. getMessage ( ). contains ( "Missing" ) )
15774	assertEquals ( branches, Functions. getBranchesPageIsSharedWith ( PROJECT, BRANCH, PAGE ) )
15775	assertObjectEquals ( "{type:'array',items:{type:'object',properties:{f1:{type:'string'}}}}", s. getSchema ( BeanList. class ) )
15776	assertEquals ( expected, actual )
15777	assertEquals ( 4, doubler. doubleIt ( 2 ) )
15778	assertEquals ( foo, deserialized )
15779	assertTrue ( "haveLifetime after setting a value", _info. hasLifetime ( ) )
15780	assertEquals ( 2, actualExpectedWorkerLinkCount )
15781	assertFalse ( p. getContent ( ). isEmpty ( ) )
15782	assertTrue ( result. length == 0 )
15783	assertThat ( testFacade. getRecordedService ( domainPresenceInfo ), is ( serviceWithName ( testFacade. getServiceName ( ) ) ) )
15784	assertEquals ( "Select with null check clause", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
15785	Assert. assertEquals ( "define stream " + "testStreamName" + "(eagleAlertContext object,attrName1 string,attrName2 long);", siddhiStreamDef )
15786	assertSame ( first, second )
15787	assertFalse ( params. doesCodingListMatch ( codings ) )
15788	context. assertIsSatisfied ( )
15789	assertEquals ( - 1, t. indexOfUnquoted ( str, ">>" ) )
15790	assertEquals ( aNumber, result, 1E14 )
15791	assertThat ( document. toDBObject ( ). containsField ( "_id" ), equalTo ( true ) )
15792	assertEquals ( 0, estimatedSizeBytes )
15793	assertEquals ( response, res )
15794	assertArrayEquals ( new double [ ] { 0.017453292519943295, 0.03490658503988659, 0.05235987755982988 }, degToRads, 1e-8 )
15795	Assert. assertTrue ( cmd. apply ( bkFlags, new String [ ] { "-l", "1" } ) )
15796	assertTrue ( resourceBundle. getObject ( "filetypes.new-folder" ) instanceof Image )
15797	assertNull ( topic )
15798	Assert. assertTrue ( "RunJar failed", outFile. exists ( ) )
15799	assertThat ( ContractClass. invariantCalled, is ( true ) )
15800	assertEquals ( context, builder. getContext ( ) )
15801	assertThat ( applicationSettings. getProjectCreationSetting ( ), is ( EMPTY_PROJECT_CREATION_NOT_ALLOWED ) )
15802	assertResults ( chain )
15803	assertTrue (! databaseMeta. getDisplayName ( ). equals ( databaseMeta2. getDisplayName ( ) ) )
15804	assertEquals ( "?a=b%26c%3Dd", qs. encode ( ). toQueryString ( ) )
15805	assertThat ( out. toString ( ), sameJSONAs ( json ) )
15806	assertResult ( 1, - 1 )
15807	assertEquals ( "Expected 4 results!", 4, n )
15808	assertThat ( value, CustomMatchers. equalToOptional ( headerName ) )
15809	assertEquals ( HttpStatus. BAD_REQUEST, response. getStatusCode ( ) )
15810	assertEquals ( 5, testDescriptor. getChildren ( ). size ( ) )
15811	assertNotNull ( hit )
15812	assertEquals ( "test (REG_SZ)", value. toString ( ) )
15813	assertFalse ( iter. hasNext ( ) )
15814	Truth. assert_ ( )
15815	assertNull ( result )
15816	assertThat ( driver. getTitle ( ), containsString ( "JUnit 5 extension for Selenium" ) )
15817	assertRowExists ( 5, "Row 5" )
15818	assertEquals ( tree. predict ( x [ loocv. test [ i ] ] ), evalPredict ( tree, x [ loocv. test [ i ] ] ) )
15819	assertTrue ( e instanceof E_NotEquals )
15820	assertThat ( "default security group", sut. getIs64os ( ), is ( equalTo ( VM. DEFAULT_64_OS ) ) )
15821	assertThat ( toUnqualifiedVersionlessIds ( result ), contains ( ( IIdType ) new IdDt ( "ValueSet/testSearchWithUriParam" ) ) )
15822	assertTrue ( types. containsAll ( expectedTypes ) )
15823	assertEquals ( "Learn. Eat. Code.", phraseDecodedToString )
15824	assertThat ( result. message ( ). get ( 0 ). getData ( ), CoreMatchers. containsString ( "<img src=\\"http://yuml.me/diagram/" ) )
15825	assertEquals ( "Expected 4 result!", 4, n )
15826	assertEquals ( date, result. getModified ( ) )
15827	CallTreeAssert. assertDepth ( "corrupted", callTree, expectResult )
15828	context. assertIsSatisfied ( )
15829	assertContainsOnly ( testee. getFileFilters ( ), filter1, filter2, filter3 )
15830	assertEquals ( "<y-axis><plot-lines value=\\"0\\" width=\\"2\\"></plot-lines></y-axis>", removeWhitespacesBetweenTags ( parent. child ( 0 ). toString ( ) ) )
15831	assertFailure ( mode, scanner, "/* */", 1, 3, IllegalStateException. class )
15832	assertThat ( whereClause, is ( equalTo ( CONTENT_AUTH_WHERE + " AND " + FILTER_WHERE ) ) )
15833	Assert. assertEquals ( instancesCount, InstanceHelpers. getAllInstances ( this. app ). size ( ) )
15834	assertNotNull ( descuento. getId ( ) )
15835	assertAccessorsCorrect ( control, "delay", 0, 1, 2 )
15836	assertAccessorsCorrect ( table, "currentPage", 0, 5, 7 )
15837	assertThat ( response. getStatus ( ), equalTo ( Response. Status. OK. getStatusCode ( ) ) )
15838	assertEquals ( "HTTP ERROR 500", heading. getText ( ) )
15839	assertThat ( iter. hasNext ( ), is ( true ) )
15840	assertThatIsMaximized ( )
15841	assertTrue ( true )
15842	assertTrue ( settings. isInfinitestEnabled ( ) )
15843	Assert. assertEquals ( value + 1, value1 )
15844	Assert. assertTrue ( appTableColumnsMeta. indexOf ( "natural" )!= - 1 )
15845	assertTrue ( ( codeGenFailedEx. getMessage ( )!= null ) && ( codeGenFailedEx. getCause ( )!= null ) )
15846	assertThat ( credentials, is ( notNullValue ( ) ) )
15847	assertNotNull ( actual )
15848	assertNotNull ( mpp )
15849	assertTrue ( "No wait", System. currentTimeMillis ( ) - start < SHUTDOWN_WAIT )
15850	assertThat ( result, is ( alicia ) )
15851	assertTrue ( sut. getDVDImages ( ). getDVDImage ( )!= null )
15852	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
15853	assertTrue ( ( fTime - sTime < 7000L ), "Immediate trigger did not fire within a reasonable amount of time." )
15854	Assert. assertTrue ( evaluator. evaluate ( offsets ) )
15855	assertEquals ( 0, x. size ( ) )
15856	assertNotNull ( "Skill is null", entity )
15857	Assert. assertEquals ( Assign. class, assign. getTagActionClass ( ) )
15858	assertEquals ( "History filename provider", name )
15859	Assert. assertTrue ( ( max - min ) <= defaultCapacity / 100 )
15860	Assert. assertEquals ( 1, analysis. getWarnings ( ). size ( ) )
15861	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. AFFILIATIONS_UPDATE )
15862	assertSame ( result, instance. unwrap ( String. class ) )
15863	assertThat ( validationErrors. size ( ), equalTo ( 0 ) )
15864	assertNull ( entity. getProperty ( "user" ) )
15865	assertSetDirty ( )
15866	assertThat ( result, is ( Matchers. < SetProjectPrefixDeclarationsResult > not ( new SetProjectPrefixDeclarationsResult ( projectId, otherDecls ) ) ) )
15867	assertEqualsIgnoreLineEnding ( Json. pretty ( ExampleBuilder. fromSchema ( new Schema ( ). $ref ( "User" ), definitions ) ), "{\\n  \\"id\\" : \\"string\\"\\n}" )
15868	assertEquals ( "Wrong number of unread messages", checkNumberUnreadMessages, 2 )
15869	assertThatContainsOnly ( archive, scriptPath )
15870	assertNotNull ( struct )
15871	assertEquals ( timeOut, mpd. getTimeout ( ) )
15872	assertEquals ( 0, t. getOutputError ( ). getTotalNetworkError ( ), 0.1 )
15873	assertTrue ( ex. canBeDividedby3 ( "8142" ) )
15874	assertEquals ( detailMethods, result )
15875	N4CliHelper. assertExpectedOutput ( expectedString, out )
15876	assertEquals ( HttpStatus. NO_CONTENT, responseEntity. getStatusCode ( ) )
15877	assertEquals ( "world", st. hello )
15878	assertEquals ( expectedResult, result )
15879	Assert. assertEquals ( 20, analyser. getLoadAtEnd ( route ). get ( 0 ), 0.01 )
15880	assertEquals ( URL + "?param%201=%22&param%202=%22", uri. toString ( ) )
15881	assertNotNull ( x509Attestation )
15882	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4 ) ) )
15883	Assert. assertEquals ( Status. CONFLICT. getStatusCode ( ), resp. getStatus ( ) )
15884	assertThat ( windows. minus ( earlier ), is ( windows ) )
15885	Assert. assertNotSame ( connection, HConnectionManager. getConnection ( TEST_UTIL. getConfiguration ( ) ) )
15886	assertEquals ( String. format ( "%sbar", value ), result )
15887	assertArrayEquals ( result1, result2 )
15888	assertThat ( javaDocComment, not ( containsString ( "(Required)" ) ) )
15889	assertRange ( q, Long. class, time ( "2000-01-01" ), time ( "2010-02-04" ) )
15890	PatternAssert. assertThat ( myProvider. connectionStringPattern ( ) )
15891	assertEquals ( actual1, actual2 )
15892	assertEquals ( messagesToSend, container. getRecordsProcessed ( ) )
15893	Assert. assertEquals ( "simpleInteger", found. getName ( ) )
15894	Assert. assertEquals ( "User should be Logged in since the GaeAuthClient is initialized.", "true", answer. getReturnVal ( ) )
15895	Assert. assertEquals ( Response. Status. BAD_REQUEST. getStatusCode ( ), response. getJerseyResponse ( ). getStatus ( ) )
15896	assertEquals ( v1. length + buf. length * count, value. length )
15897	assertEquals ( "2007-12-03~~~10:15:30", result )
15898	assertEquals ( 2, res. getInt ( "nbHits" ) )
15899	assertThat ( exitStatus. exitStatus ( ), is ( equalTo ( ( byte ) 0x1 ) ) )
15900	assertIncluded ( node )
15901	assertThat ( nextToken, is ( notNullValue ( ) ) )
15902	assertFailureValue ( "differs at index", "[0]" )
15903	assertEquals ( 1L, result )
15904	Assert. assertNotNull ( page. getPageTimings ( ) )
15905	Assert. assertNotNull ( xhtmlOptions )
15906	Assert. assertEquals ( "Wrong port", 0x00010203, out. readUnsignedInt ( ) )
15907	assertEquals ( Double. valueOf ( 200 ), trigger. getThreshold ( ) )
15908	assertEquals ( selectedInterval. getName ( ), "Engineering" )
15909	assertThat ( tester. request. getServletPath ( ), is ( "/" ) )
15910	assertTrue ( msg, dynAny. equal ( dynAny2 ) )
15911	assertTaskEvents ( task, TaskListener. EVENTNAME_COMPLETE )
15912	assertEquals ( "Thank you.", email. getVisibleText ( ) )
15913	Assert. fail ( "MathIllegalArgumentException expected" )
15914	TestUtils. assertResponseStatus ( response, Status. NOT_FOUND )
15915	Assert. assertEquals ( 40., route. getActivities ( ). get ( 0 ). getEndTime ( ), 0.01 )
15916	assertEquals ( 3, count )
15917	assertTrue ( Script. matchNamed ( MatchType. EQUALS, "bar", null, "{ hello: null }", ctx ). pass )
15918	Assert. assertEquals ( true, errors. hasErrors ( ) )
15919	assertNotNull ( jobResult )
15920	Assert. assertTrue ( "XML are similar " + myDetailedDiff, myDetailedDiff. similar ( ) )
15921	assertTrue ( guangdong. notExisted ( ) )
15922	assertEquals ( expectedQuery, actualQuery )
15923	assertNotNull ( annotation )
15924	arraysWithCustomComparisonStrategy. assertDoesNotContainSubsequence ( someInfo ( ), actual, sequence )
15925	assertTrue ( ( ( IMAPFolder ) test ). getUIDNotSticky ( ) )
15926	assertEquals ( unQuotedString, ocsvTransformer. getCellContent ( singleQuotedString ) )
15927	assertThat ( result, is ( nullValue ( ) ) )
15928	assertEquals ( Arrays. asList ( "/parent/child", "/parent/child/descendant", "/parent/child/descendant[2]" ), allChildrenPaths ( parent ) )
15929	assertEquals ( Location. LOCATION_LHS_INSIDE_CONDITION_START, getLastIntegerValue ( parser. getEditorInterface ( ). get ( 0 ). getContent ( ) ) )
15930	assertEquals ( 1.2, cs. getX ( 0 ), TOL )
15931	assertTrue ( notify. matches ( 10, TimeUnit. SECONDS ) )
15932	Assert. assertEquals ( "12345.6789", getCell ( 0, 10 ). getText ( ) )
15933	assertTrue ( drug. getRetired ( ) )
15934	Assert. assertEquals ( "[3, 2, 4, 1, 5]", result. toString ( ) )
15935	assertEquals ( "OK", reply )
15936	Assert. assertTrue ( mod. exists ( ) )
15937	assertTrue ( sut. getFile ( ). size ( ) >= 0 )
15938	assertEquals ( "a,b\\\\c" + recordSeparator, sw. toString ( ) )
15939	assertEquals ( "action", actionOut. getType ( ) )
15940	assertEquals ( "https://[::1]:6443", builder. getBasePath ( ) )
15941	assertMsg ( )
15942	assertEquals ( expectedArg, parsedArg )
15943	assertEquals ( null, objmap. get ( "field_unknown" ) )
15944	assertThat ( PrettyTime. of ( Locale. GERMANY ). withReferenceClock ( clock ). printRelative ( PlainTimestamp. of ( 2014, 9, 10, 14, 0 ). atUTC ( ), ZonalOffset. UTC ), is ( "in 1 Woche" ) )
15945	assertThat ( deletes, StreamMatchers. empty ( ) )
15946	assertQuotientReminder ( MultivariateDivision. divideAndRemainder ( dividend, divider ), dividend, divider )
15947	assertTrue ( redisServer. isActive ( ) )
15948	assertNotNull ( writer )
15949	assertEquals ( "Max Time", result )
15950	assertAllCommandsUsed ( )
15951	assertEquals ( 0, comparator. compare ( car, car ) )
15952	assertEquals ( cVector, normalizedCVector )
15953	assertNull ( myDtoInstance )
15954	assertEquals ( "", writer. toString ( ) )
15955	assertEquals ( "SecondPath.foo", o. foo ( ) )
15956	assertThat ( representation. getString ( "value" ), is ( "-44.56" ) )
15957	assertTrue ( ModelInterceptor. exists ( DummyModel. class. getMethod ( "exists", Serializable. class ), model2. getId ( ) ) )
15958	Assert. assertEquals ( expected, actual )
15959	assertEquals ( endpoint. getPostParamString ( ), "filter_level=medium" )
15960	assertMatch ( e, s )
15961	assertEquals ( 200, connection. getResponseCode ( ) )
15962	assertEquals ( expected, sql [ 0 ]. toSql ( ) )
15963	assertThat ( orderLine. getAdvancePercentage ( ), sameValueAs ( division. divide ( 60, 100 ) ) )
15964	assertEquals ( 2, cc. size ( ) )
15965	assertEquals ( 20000, builder. getMaxIterations ( ) )
15966	assertFalse ( accepted )
15967	assertTrue ( validationErrors. hasErrors ( ) )
15968	assertEquals ( "", doc. text ( ) )
15969	assertEquals ( actualMime, "bundle/mime-from-bundle" )
15970	assertEquals ( 1, results. size ( ) )
15971	assertEquals ( filter, config. getBuildConfiguration ( ). getFilter ( ) )
15972	Assert. assertEquals ( Sets. newHashSet ( 1, 2 ), parser. getSecureResultIndices ( ) )
15973	assertEquals ( "foo", jc. get ( "51" ) )
15974	assertEquals ( true, result )
15975	assertTwoInstancesAreStarted ( firstProcessDefinition, secondProcessDefinition )
15976	assertTrue ( "An Uninitialized Value should return NaN on getValue().", Double. isNaN ( victim. getValue ( ) ) )
15977	assertTrue ( plan. getRootNode ( ) instanceof ProjectNode )
15978	assertFalse ( profile. isExpired ( ) )
15979	Assert. assertEquals ( "lukas podolski", result )
15980	assertEquals ( 1, result )
15981	assertTrue ( expectedDirection. equals ( reflectedDirection ) )
15982	assertOut ( "var a:Boolean = isFinite(1000000.9)" )
15983	assertEquals ( FAILING, collector. getStatus ( ) )
15984	assertNull ( nullResourceComposite. getResourceIdentifier ( RTest. one. id1 ) )
15985	assertTrue ( timeTaken < 5 )
15986	verify ( messages ). assertAbsenceOfErrors ( )
15987	assertThat ( iframeStr. matches ( "<iframe>.*</iframe>" ), is ( true ) )
15988	Assert. assertEquals ( 202, response. getStatus ( ) )
15989	assertStat ( result )
15990	assertEquals ( "Response body is not correct.", SimpleSecuredServlet. RESPONSE_BODY, Utils. makeCallWithBasicAuthn ( servletUrl, "elytron1", "password", 200 ) )
15991	assertEquals ( "Should have not constraint violation", 0, validator. validate ( product ). size ( ) )
15992	assertTrue ( language. contains ( country ) )
15993	assertThat ( new File ( uri ). getName ( ), is ( file. getName ( ) ) )
15994	assertEquals ( "3", testConfiguration. get ( "dfs.replication.initial" ) )
15995	Assert. assertEquals ( 11, patients. size ( ) )
15996	assertTrue ( a. compareTo ( b ) == 0 )
15997	Assert. assertTrue ( pss. toString ( ). contains ( "true" ) )
15998	assertEquals ( expResult, result )
15999	assertNotEquals ( otherHashCode, foreignableFieldHashCode )
16000	assertThat ( step. getScreenshots ( ). size ( ), is ( 1 ) )
16001	assertNotNull ( emptyChain )
16002	assertSame ( val, ConfigUtils. getObject ( config, null, "no-object", "some-object" ) )
16003	assertRemoveSubsystemResources ( servicesB )
16004	assertThat ( errors, not ( hasFieldErrors ( "familyName2" ) ) )
16005	assertTrue ( configurationDeserialized )
16006	assertEquals ( HTML, result )
16007	Assert. assertArrayEquals ( s. toCharArray ( ), ( char [ ] ) klass. getField ( "value" ). get ( s ) )
16008	assertExceptionContainsCorrectMessage ( ( ) -> userTaskAdminClient. addPotentialOwners ( BAD_CONTAINER_ID, task. getId ( ), false, add ), "Container '" + BAD_CONTAINER_ID + "' is not instantiated or cannot find container for alias '" + BAD_CONTAINER_ID + "'", "Container '" + BAD_CONTAINER_ID + "' is not instantiated or cannot find container for alias '" + BAD_CONTAINER_ID + "'" )
16009	assertEquals ( "{}", result )
16010	assertThat ( exitStatus. exitStatus ( ), is ( equalTo ( ( byte ) 0x0 ) ) )
16011	assertTrue ( passwordResetPage. checkSuccess ( ) )
16012	assertThat ( applied, is ( RuntimeContext. DEFAULT. mode ( ExecutionMode. PRODUCTION ) ) )
16013	assertEquals ( 2, deltas. size ( ) )
16014	assertTrue ( dashboardService. inser ( dashboardCondition ) == - 1 )
16015	assertNotEquals ( original, objectId ( "/dir" ) )
16016	assertEquals ( "select concat('a', 'b'), textcat+('a', 'b')", result )
16017	Assert. assertNotNull ( c )
16018	assertEquals ( Status. NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
16019	assertTrue ( Arrays. equals ( new int [ ] { 0x0D, 0x02, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0xFF }, request. getOutputBuffer ( ) ) )
16020	assertRequest ( "POST", "Message/" )
16021	assertThat ( actual, equalTo ( expected ) )
16022	assertEquals ( "name: $1\\n" + "releases:\\n" + "- name: $2\\n" + "  version: $3\\n" + "stemcells:\\n" + "- alias: $4\\n" + "  version: $5\\n" + "update:\\n" + "  canaries: $6\\n" + "  max_in_flight: $7\\n" + "  canary_watch_time: $8\\n" + "  update_watch_time: $9\\n" + "instance_groups:\\n" + "- name: $10\\n" + "  azs:\\n" + "  - $11\\n" + "  instances: $12\\n" + "  jobs:\\n" + "  - name: $13\\n" + "    release: $14\\n" + "  vm_type: $15\\n" + "  stemcell: $16\\n" + "  networks:\\n" + "  - name: $17", generator. getSnippets ( v2Schema ). iterator ( ). next ( ). getS
16023	assertEquals ( "<#function name >impl</#function>", result )
16024	assertTrue ( transactionClosed. get ( ) )
16025	assertNull ( r. getMetadata ( ). getFirst ( "Allow" ) )
16026	assertEquals ( "This file is required for FileUtilsTest.", contents )
16027	Assert. assertEquals ( "4", head. getId ( ) )
16028	assertArrayEquals ( "missing key getAll() returns empty array", new String [ 0 ], GQLToQueryBuilderConverter. getAll ( request, "nonexistent" ) )
16029	assertThat ( resources, contains ( patientId, orgId, parentOrgId, parentParentOrgId ) )
16030	assertEquals ( "test-123", val )
16031	org. junit. Assert. assertEquals ( list. toArray ( ) [ 0 ], "testa" )
16032	assertEquals ( quatrmsd, qcprmsd, 0.001 )
16033	assertThat ( terminologyService. isTerminologySupported ( cp ), is ( true ) )
16034	assertNotNull ( cacheConfig )
16035	assertEquals ( 0, runtimeService. createProcessInstanceQuery ( ). processInstanceId ( processInstance. getId ( ) ). count ( ) )
16036	assertEquals ( ( byte ) 34, s. m0_0 ( ) )
16037	assertEquals ( OutputDeviceEnum. TPM2, ph. getOutputDevice ( ) )
16038	assertThat ( readEmailAddress, is ( emailAddress ) )
16039	assertEquals ( 1, interfaces. size ( ) )
16040	assertFalse ( result )
16041	assertEquals ( "DEPLOYMENTID in deployment1, deployment2", dataSetLookup. getFirstFilterOp ( ). getColumnFilterList ( ). get ( 0 ). toString ( ) )
16042	assertEquals ( "Expected 4 results!", 4, n )
16043	assertEquals ( solution, result )
16044	assertExec ( "Methods defined in Object", Classes. class, "listObject__Ljava_lang_String_2ZLjava_lang_String_2", methods, true, "toStr" )
16045	assertTrue ( "Revision must contain hell", revision. json ( ). contains ( "hell" ) )
16046	assertMockEndpointsSatisfied ( )
16047	Assert. assertEquals ( MurmurHash3. murmurhash3 ( s, 16777216 ), MurmurHash3. murmurhash3 ( s ) )
16048	assertTrue ( r. get ( String. class ). contains ( "Anonymous" ) )
16049	assertBoard ( "�尖�尖�尖�尖��\\n" + "��***��\\n" + "�尖�尖��*��\\n" + "��***��\\n" + "�尖�尖�尖�尖��\\n" )
16050	Assert. assertTrue ( contains )
16051	assertCompleted ( "fff" )
16052	assertTrue ( result )
16053	assertTrue ( dump. contains ( JP_TEXT ) )
16054	Assert. assertEquals ( 5, analyser. getLoadRightAfterActivity ( route. getEnd ( ), route ). get ( 0 ) )
16055	TestUtil. assertEquals ( exp, getSpans ( ) )
16056	assertEquals ( 16, profile. dashBoards [ 0 ]. widgets. length )
16057	assertOut ( "/**\\n * @export\\n */\\nfoo.bar.B.prototype.b = function() {\\n  var /** @type {custom.TestProxy} */ a = new custom.TestProxy();\\n  a.setProperty('foo', a.getProperty('foo') + 'bar');\\n}" )
16058	assertThat ( ( double ) stopwatch. getMinimumDuration ( ). getDuration ( TimeUnit. MILLISECONDS ), is ( closeTo ( 50, 20 ) ) )
16059	assertEqualsSet ( "ComplexSubProperty.rdf", df. getOWLSubPropertyChainOfAxiom ( chain, R ) )
16060	assertEquals ( "Base for integer is wrong", Double. valueOf ( 3 ), parsed )
16061	assertEquals ( 2, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
16062	assertFalse ( handler. process ( null, consumer, Direction. In, null, null ) )
16063	assertEquals ( "dummy:0", toBeUpdated. getTitle ( ) )
16064	assertNotNull ( result )
16065	assertThat ( cursor. asListRemaining ( ), hasItems ( "actors/Keanu", "actors/Hugo", "actors/Emil", "actors/Carrie", "actors/Laurence" ) )
16066	assertTrue ( equals ( stat, nativeEntity ) )
16067	assertThat ( axioms. isEmpty ( ), is ( true ) )
16068	assertGridIndexes ( data, new boolean [ ] { true, true, true }, new boolean [ ] { false, false, false }, new Expected [ ] [ ] { { Expected. build ( true, 3, "(0, 2)" ), Expected. build ( false, 1, "(1, 0)" ) }, { Expected. build ( true, 0, "(0, 2)" ), Expected. build ( false, 1, "(1, 1)" ) }, { Expected. build ( true, 0, "(0, 2)" ), Expected. build ( false, 1, "(1, 2)" ) } } )
16069	assertEquals ( "directive-name, directive-value", "plugin-types a/b c/d", d1. show ( ) )
16070	assertTrue ( LocaleHelper. getLocale ( ). equals ( new Locale ( TEST_LOCALE_LANG, TEST_LOCALE_COUNTRY ) ) )
16071	assertThat ( now. getZone ( ), is ( DateTimeZone. UTC ) )
16072	assertEquals ( 1, one. getAsDouble ( ), 0 )
16073	assertTrue ( satisfiesPrecondition ( cu ) )
16074	assertEquals ( BKException. Code. OK, syncObj1. rc )
16075	assertEquals ( "Method #toString is wrong", "GeoDistanceCondition{boost=0.4, field=name, " + "latitude=9.0, longitude=-1.0, " + "minGeoDistance=GeoDistance{value=1.0, unit=KILOMETRES}, " + "maxGeoDistance=GeoDistance{value=3.0, unit=KILOMETRES}}", condition. toString ( ) )
16076	assertEquals ( expResult, result )
16077	Assert. assertTrue ( properties. get ( ). isEmpty ( ) )
16078	assertThat ( config. getMaxFileSizeBytes ( ), equalTo ( maxFileSizeBytes ) )
16079	Assert. assertEquals ( "durability=1 distributedTransactionTimeout=2 transactionLatencyCount=3 transactionLatencyTimeout=42", getReplHeader ( ) )
16080	assertTrue ( weakMap. size ( ) < 2000 )
16081	assertArrayEquals ( expectedResult, output )
16082	Assert. assertEquals ( "[1, 2, 3, 4, 5]", result. toString ( ) )
16083	assertThat ( generatedReportText, containsString ( "<error>Oh nose!</error>" ) )
16084	assertNull ( presenter. getValue ( ) )
16085	assertEquals ( 4, results. size ( ) )
16086	Assert. assertEquals ( test, expected )
16087	assertThat ( queryMapping. transformOutboundDatabaseName ( metaStoreMapping, query ), is ( "SELECT " + PREFIX + "bdp.hellobdp1(), " + PREFIX + "bdp.hellobdp2()" ) )
16088	Assert. assertEquals ( project. getShortName ( ), projectService. findRelatedProjectShortNameByEventId ( eventId ) )
16089	this. assertLoadBlobViaTuples ( tuples, true, true )
16090	assertSqlCanBeParsedAndDeparsed ( stmt )
16091	assertEquals ( "Value: a=b", resp. getResponseBody ( ). trim ( ) )
16092	assertEquals ( RDF. type, editor. getValue ( ) )
16093	assertTrue ( tpk. windowing instanceof Time )
16094	assertEquals ( TMP, A. arrayRightDivideEquals ( B ) )
16095	assertEquals ( group, identity. getGroup ( ) )
16096	assertFalse ( "Converter was not set.", converters. isEmpty ( ) )
16097	tester. assertRenderedPage ( LoginPage. class )
16098	assertEquals ( asList ( asList ( 1, 4, 5, 6 ), asList ( 2, 4, 5, 6 ), asList ( 3, 4, 5, 6 ) ), result )
16099	assertFalse ( property. isPersistent ( ) )
16100	assertNull ( log )
16101	Assert. assertEquals ( "Hello", cdiEjb. getEjb ( ). sayHello ( ) )
16102	assertOutput ( expected )
16103	assertTrue ( out. contains ( "User [owner] is not authorized to view the logs for entity" ) )
16104	assertStack ( new Object [ ] { null, 3.0d, null }, stack )
16105	Assert. assertTrue ( actualUrl. endsWith ( "/resetPassword" ) )
16106	assertEquals ( digest, readMessage ( status ). digest ( ) )
16107	assertEquals ( 10, vrp. getJobs ( ). get ( "1" ). getSize ( ). get ( 0 ) )
16108	assertEquals ( 1, result. size ( ) )
16109	assertEquals ( origItemsJson, outJson )
16110	Assert. assertFalse ( result )
16111	assertThat ( schema, hasEntry ( is ( UNKNOWN ), hasProperty ( "predicates", allOf ( hasItem ( predicate ( ). withName ( PROP_I ). withDirection ( IN ). withReferenceTypeCount ( 1 ) ), hasItem ( predicate ( ). withName ( PROP_I ). withDirection ( OUT ). withReferenceTypeCount ( 1 ) ) ) ) ) )
16112	Assert. assertEquals ( i + "! ", expected, f. value ( i ), 0d )
16113	assertThat ( targetSubdirectory, is ( expectedTargetSubDirectory ) )
16114	assertThat ( dummified. getAttributes ( ), contains ( new RpslAttribute ( "inetnum", "193.0.0.0 - 193.0.7.255" ), new RpslAttribute ( "netname", "RIPE-NCC" ), new RpslAttribute ( "descr", "RIPE Network Coordination Centre" ), new RpslAttribute ( "descr", "Amsterdam, Netherlands" ), new RpslAttribute ( "remarks", "Used for RIPE NCC infrastructure." ), new RpslAttribute ( "country", "NL" ), new RpslAttribute ( "admin-c", "JDR-RIPE" ), new RpslAttribute ( "admin-c", "BRD-RIPE" ), new RpslAttribute ( "tech-c", "OPS4-RIPE" ), new RpslAttribute ( "notify", "***@ripe.net" ), new RpslAttribute ( "status", "ASSIGNED PI" ), new RpslAttribute (
16115	assertEquals ( "Results were not deleted.", 0, set. getSize ( ) )
16116	assertTrue ( problemState )
16117	assertEquals ( 1, newSize - initialSize )
16118	assertThat ( aClass. getCompilationUnitAsString ( ), equalToIgnoringWhiteSpace ( expectedResult ) )
16119	assertThat ( view, is ( instanceOf ( FacesView. class ) ) )
16120	assertEquals ( this. getClass ( ), callingClass )
16121	Assert. assertTrue ( new LogAdapter ( "logger.name.here", mockConfigThreadCompact ( ) ). isInfoEnabled ( ) )
16122	assertNull ( exampleTest. objectUnderTest. getCollaborators ( ) )
16123	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5, 6 ) ) )
16124	assertEquals ( 70, map. size ( ) )
16125	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 1, warnings. size ( ) )
16126	assertFalse ( rootDAO. existsDatabase ( DB_NAME ) )
16127	assertEquals ( "select entity_0 from Entity entity_0 where entity_0.code in ( select entity_1.code from Entity entity_1 )", select. getQuery ( ) )
16128	assertThat ( problems. size ( ), is ( 0 ) )
16129	assertEquals ( 10, count )
16130	assertEquals ( "", result )
16131	assertThat ( output. toString ( ). startsWith ( "Error: unable to connect to the database.\\n" ), is ( true ) )
16132	Assert. assertEquals ( expect_sql, sql )
16133	assertThat ( ChronoFormatter. ofPattern ( "yyyy", PatternType. CLDR, Locale. ROOT, CalendarYear. chronology ( ) ). format ( cy ), is ( "2016" ) )
16134	assertEquals ( 0.0001, r, 0 )
16135	assertEquals ( "0.5", out. toPlainString ( ) )
16136	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC )
16137	assertEquals ( 4, actualEntries. size ( ) )
16138	assertNotNull ( methodInjectable. getInjectionTarget ( ) )
16139	assertEquals ( "OFF", level. toString ( ) )
16140	assertThatWritableIs ( false )
16141	assertTrue ( ComponentCopyPropertiesMatch ( dataFieldOriginal, dataFieldCopy ) )
16142	assertEquals ( test, size )
16143	JSONAssert. assertEquals ( expected, flowsJson, false )
16144	Assert. fail ( )
16145	assertEquals ( 0, firehoseItemCount )
16146	assertThat ( this. pagedDataRows, is ( sameInstance ( wrapped ) ) )
16147	assertNull ( "principal should not be found", principal )
16148	assertEquals ( 10, totalNumberOfLines )
16149	assertThat ( PlainTimestamp. of ( date, time ). getCalendarDate ( ), is ( date ) )
16150	assertEquals ( expectedKeys, globalTags. keySet ( ) )
16151	assertEquals ( "Value {0[1]}", result )
16152	Assert. assertEquals ( "Incorrect condition", "(WTextField=\\"1\\" or ((WTextArea=\\"2\\" and WDropdown=\\"3\\") or WMultiSelect=\\"4\\"))", builder. build ( ). toString ( ) )
16153	assertEquals ( "1 minute 0 seconds", repairStatus. getDuration ( ) )
16154	assertEquals ( CONSTRUCTOR_CLASS, sink. result ( ) )
16155	assertEquals ( cls. getNNF ( ), nnf )
16156	assertEquals ( res, ImmutableList. of ( idfac. createAttributeID ( "IDART" ), idfac. createAttributeID ( "UPC" ), idfac. createAttributeID ( "PVP1" ), idfac. createAttributeID ( "PVP2" ), idfac. createAttributeID ( "PVP3" ), idfac. createAttributeID ( "PVP4" ), idfac. createAttributeID ( "PVP5" ), idfac. createAttributeID ( "FECALTA" ), idfac. createAttributeID ( "FECBLO" ), idfac. createAttributeID ( "FECBLO1" ), idfac. createAttributeID ( "STCMIN" ), idfac. createAttributeID ( "PRECIOFINAL" ) ) )
16157	assertNotEquals ( threadName, doAsync. get ( ) )
16158	Assert. assertEquals ( 0, doc. getFirstPage ( ). getResources ( ). getPdfObject ( ). size ( ) )
16159	assertTrue ( WMService. WMS_1_3_0. equals ( vers ) )
16160	assertThat ( output. readValuesToList ( ), equalTo ( expectedValues ) )
16161	assertEquals ( 10000L, connStr )
16162	assertNotNull ( entryRelationship )
16163	Assert. assertTrue ( ref. hasPolicyRequirement ( POLICY_BAR ) )
16164	assertGenerators ( result, generator. getClass ( ), AnInt. class )
16165	assertEquals ( nrOfProcessInstances, COUNTER. get ( ) )
16166	assertEquals ( "com.sdl.odata.edm.factory.annotations.WrongFunctionImportSample", fullyQualifiedFunctionImportName )
16167	assertEquals ( "9208675309", parsedTelePhoneNumber )
16168	assertEquals ( OperatingSystem. MAC_OSX, OperatingSystem. get ( ) )
16169	Assert. areEqual ( 1, rownum, "验证test1" )
16170	assertEquals ( "Expected 0 results!", 0, n )
16171	assertThat ( terminologyService. isSubclassOf ( c1, c2 ), is ( false ) )
16172	assertTrue ( fortyNinersSuck. after ( superBowlXLV ) )
16173	assertTrue ( output. startsWith ( "<!DOCTYPE html PUBLIC \\"-//W3C//DTD XHTML 1.0 Strict//EN\\" \\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\">" ) )
16174	assertEquals ( RequestParameter. create ( true ), validator. isValid ( null ) )
16175	assertEquals ( r1, r2 )
16176	assertTrue ( skillConstraint. fulfilled ( insertionContext ) )
16177	assertThat ( result, is ( false ) )
16178	assertThat ( isTransactionRelated, is ( false ) )
16179	assertMockEndpointsSatisfied ( )
16180	assertFalse ( prefs. matches ( t ) )
16181	Assert. assertArrayEquals ( expected, actualNames )
16182	Assert. assertTrue ( t instanceof ScriptException )
16183	assertEquals ( object. _id, result. _id )
16184	Assert. assertEquals ( "Value is incorrect", map ( OFFSET_0_STRING, "test" ), value )
16185	assertEquals ( "1969-12-31 04:00:00,001", printer. toString ( ) )
16186	assertResultSet ( res )
16187	assertEquals ( y, z )
16188	assertTrue ( mockedProvider. getExternal ( ) )
16189	assertNoViolations ( violations )
16190	assertNotNull ( Event. fetcher ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "EVXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
16191	assertEquals ( expResult, result )
16192	Assert. fail ( "Retrieving UNKNOWN AnnotationKey should throw IllegalStateException" )
16193	Assert. assertNotNull ( token )
16194	assertEquals ( 1.2, cs. getX ( 0 ), TOL )
16195	Assert. assertEquals ( 1, countNumberOfOccurence ( fullyQualifiedName, "adm2Name" ) )
16196	assertEquals ( ( short ) 0, mutNum. shortValue ( ) )
16197	assertEquals ( response, webRespose )
16198	assertTrue ( latch. await ( 4, SECONDS ) )
16199	assertTrue ( of. endsWith ( "/bin" ) || of. endsWith ( "/bin/main" ) )
16200	Assert. assertEquals ( "110_${package}.domain.TestEntity", converter. getAsString ( null, null, testEntity ) )
16201	assertCapturedMessage ( eventMessage ( "sess1", "/topic", "eventMessage" ) )
16202	assertEquals ( 4, contentRepo. getClaimsRemoved ( ) )
16203	assertEquals ( SimpleScore. of ( 42 ), scoreDirector. calculateScore ( ) )
16204	assertSingleSortProperty ( objectColumn, "foo" )
16205	assertEquals ( "fa uns instants", t. format ( new Date ( 0 ) ) )
16206	assertEquals ( "blob mapper serialization is wrong", expected, actual )
16207	assertOut ( "with (a)\\n\\tb;" )
16208	assertEquals ( "A", mat. group ( ) )
16209	assertNotNull ( response. body ( ). asString ( ) )
16210	Assert. assertTrue ( yt. videoHasCaptionsInLanguage ( "ycentbQV_oc", "amh" ) )
16211	assertTrue ( "Random braces - three", "Paired { begin an escaped sequence". equals ( result ) )
16212	Assert. assertTrue ( children. size ( ) > 0 )
16213	assertEquals ( "1 屑械��� 薪邪蟹邪写", t. format ( then ) )
16214	Assert. assertEquals ( String. class, ( ( ParameterizedType ) con. getGenericParameterTypes ( ) [ 0 ] ). getActualTypeArguments ( ) [ 0 ] )
16215	EngineTestUtils. assertContentEquals ( inputFile, reconstructed )
16216	assertEquals ( Status. FAIL, jxm. getStatus ( ) )
16217	assertTrue ( ParseUtil. paramClassesMatch ( true, memberClassList, sigclassList, true ) )
16218	Assert. assertTrue ( uniqueUnits. size ( ) > 0 )
16219	assertEquals ( "test", response. getBody ( ) )
16220	assertEquals ( s_expected_1, Hex. toHexString ( item1. getData ( ) ). toUpperCase ( ) )
16221	assertEquals ( "239 122 87 154 40 7 171 115 207 12 130 71 155 254 129 237", visualized )
16222	assertNull ( result )
16223	assertEquals ( ResultType. ERROR, result. getType ( ) )
16224	Assert. assertTrue ( this. ontologyServiceResult == 0 )
16225	assertNotNull ( processInstance )
16226	assertTrue ( abc. size ( ) == 3 )
16227	assertMockEndpointsSatisfied ( )
16228	assertEquals ( "(" + template + ")", test. build ( ) )
16229	assertEquals ( Address. of ( "three" ), fixture. removePrefix ( parent ) )
16230	assertThat ( target, notNullValue ( ) )
16231	Assert. assertEquals ( cds, mRNAPos )
16232	assertNull ( myTestInstance. restart ( b ) )
16233	assertThat ( isPresent, is ( false ) )
16234	assertEquals ( data, change. getChangeData ( ) )
16235	assertEquals ( "Column sortability changed when re-adding", sortable, grid. getColumn ( "column1" ). isSortable ( ) )
16236	Assert. assertEquals ( 404, response. getStatus ( ) )
16237	Assert. assertTrue ( testedStore. exist ( "fx1" ) )
16238	assertEquals ( consoleResult, tajoCli. getContext ( ). getConf ( ). getVar ( TajoConf. ConfVars. ROOT_DIR ) + "\\n" )
16239	assertTrue ( "Credential store should be created", ops. exists ( TEST_CREDENTIAL_STORE_ADDRESS ) )
16240	Assert. assertEquals ( addonCount + 1, registry. getAddons ( ). size ( ) )
16241	assertEquals ( 2, c. getRowCount ( ) )
16242	assertions. containsOnly ( )
16243	assertTrue ( isDisabled )
16244	Assert. assertTrue ( response!= null )
16245	Assert. assertEquals ( "some [img]image here", formatter. format ( "some [img]image here", defaultOptions ( ) ) )
16246	assertNotNull ( Key. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "SKXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
16247	assertEquals ( "Expected 0 results!", 0, n )
16248	assertFalse ( entry. containsAttribute ( "administrativeRole" ) )
16249	assertEquals ( "application/json;odata.metadata=minimal", request. getResponseContentType ( ). toContentTypeString ( ) )
16250	assertEquals ( expectedDescription, description )
16251	Assert. assertEquals ( "DB number is not correct", 1, ( int ) redisURI. select ( ) )
16252	assertEquals ( in. value, out. value )
16253	assertTrue ( output. startsWith ( "<!DOCTYPE html PUBLIC \\"-//W3C//DTD XHTML Basic 1.1//EN\\">" ) )
16254	assertNull ( getFixture ( ). review ( null, master, slave ) )
16255	assertArrayEquals ( TEST_DATA, actualBytes )
16256	assertEquals ( "string[]", jmp. getRuntimeType ( Types. ARRAY, "varchar[]", 100, 0 ) )
16257	maps. assertHasEntrySatisfying ( info, actual, null, isNull )
16258	assertPutResult ( ResponseCode. MESSAGE_ILLEGAL )
16259	assertThat ( email. toSimpleMail ( ). getSubject ( ), equalTo ( DEFAULT_SUBJECT ) )
16260	assertEquals ( text, adapter. getStringAt ( 2, 2 ) )
16261	Assert. assertEquals ( 300, li. getValue ( 50 ), 1e-5 )
16262	assertArrayEquals ( array1, array )
16263	assertThat ( "丁", matches ( exp ) )
16264	assertDataFrame ( frame, streamId, true, Unpooled. EMPTY_BUFFER )
16265	Assert. assertEquals ( result, collector. output. get ( Utils. DEFAULT_STREAM_ID ) )
16266	assertEquals ( 82, x. value )
16267	assertThatLineHasBeenDisplayed ( "Nazwa: filename.txt" )
16268	assertEquals ( "&#171;Test of &#8222;quotes &quot; &#8222;in quotes&#8220; in title&#8220;&#187;", actualResult )
16269	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Stream>" + "<genericTag key=\\"value\\">" + "someText" + "</genericTag>" + "</Stream>", elem. toXml ( ) )
16270	assertEquals ( Status. DEGRADED, impl. getStatus ( ) )
16271	assertNotNull ( fixture )
16272	Assert. assertEquals ( 5, e. getAllObs ( ). size ( ) )
16273	assertEquals ( localeImportHandler. loadPropertiesByXml ( repFileBundleMock ). size ( ), 2 )
16274	assertThat ( unlockKey, is ( notNullValue ( ) ) )
16275	test. assertResult ( )
16276	assertThat ( z_F4JInternalParseUtil. getLong ( "Long", json ), is ( nullValue ( ) ) )
16277	assertEqualLines ( "invalid renaming in another.p.A", getFileContents ( getOutputTestFileName ( type, folder ) ), cu. getSource ( ) )
16278	assertThat ( testDataSourcePath. getInstanciatedPath ( "$USERDIR/simple-semicolon-data.csv" ), is ( "/home/john/work/simple-semicolon-data.csv" ) )
16279	assertSame ( node, transform ( node ) )
16280	assertEquals ( fileData. getBytes ( ) [ ( int ) Files. size ( file ) - 1 ], fileRequest. getByte ( Files. size ( file ) - 1 ) )
16281	assertArrayEquals ( new Class [ ] { char. class }, c. getParameterTypes ( ) )
16282	assertEquals ( expResult, result )
16283	assertEquals ( asStatementList ( "\\"foo;\\\\; b  a r\\\\\\"\\"'foo;\\\\; \\\\'b  a r\\\\\\"'''\\"foxlov  e \\"" ), splitter. split ( expression ) )
16284	assertEquals ( "http://localhost/?foo=test", uri. toString ( ) )
16285	assertNotNull ( ShortCode. fetcher ( "KSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "SCXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
16286	Assert. assertEquals ( 403, response. getStatus ( ) )
16287	Assert. assertEquals ( 135, ( ( IntegerMemberValue ) clonedAttr. getAnnotation ( "java.lang.Integer" ). getMemberValue ( "origAnno" ) ). getValue ( ) )
16288	assertEquals ( body. toString ( ), "test" )
16289	assertTrue ( permitted )
16290	assertEquals ( Integer. MAX_VALUE, victim. readInt ( ) )
16291	assertEquals ( FragmentSpecification. W3C_MEDIA_FRAGMENTS. toString ( ), ( ( FragmentSelector ) ( ( SpecificResource ) queriedAnnotation. getTargets ( ). toArray ( ) [ 0 ] ). getSelector ( ) ). getConformsTo ( ). getResourceAsString ( ) )
16292	Assert. assertSame ( bitmap, ic. getBitmap ( ) )
16293	assertXMLEqual ( "Invalid result", expectedDocument, result )
16294	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
16295	assertNotNull ( sourceLoader )
16296	assertEquals ( 4, count )
16297	assertEquals ( identifier1, identifier1 )
16298	assertObjectEquals ( "[{f:1},{f:true},{f:'a'}]", p. run ( bs, in, sa ) )
16299	assertEquals ( 0, ivy. getModifications ( null, artifacts ). size ( ) )
16300	assertEquals ( Arrays. asList ( 5 ), procedureExecution. getOutputParameterValues ( ) )
16301	assertTrue ( found )
16302	assertTrue ( s1. equals ( s2 ) )
16303	assertArrayEquals ( d. toString ( ). getBytes ( ), d. asTextBytes ( ) )
16304	assertFalse ( rv. isEmpty ( ) )
16305	assertRequest ( "POST", "Call/%s/Play/", callId )
16306	assertThat ( ValidatorUtil. formatMessages ( validate ), validate. size ( ), is ( 0 ) )
16307	Assert. assertEquals ( v1, KCVSUtil. get ( store [ 0 ], k, c1, tx [ 0 ] [ 0 ] ) )
16308	assertEquals ( 1, session. from ( $ ( noteVar ) ). where ( where ). list ( $ ( noteVar ) ). size ( ) )
16309	assertNotNull ( result )
16310	assertGreater ( "Row below a spacer was not pushed down", newTop, oldTop )
16311	assertFalse ( path. getFileSystem ( ). provider ( ). isHidden ( path ) )
16312	assertEquals ( 5, p1. distance ( r ), PRECISION )
16313	assertThat ( event, is ( expected ) )
16314	assertEquals ( "pub field value", objmap. get ( "field_pub" ) )
16315	assertEquals ( 600084223, widget. color )
16316	assertEquals ( expected, actual )
16317	assertTrue ( "Value descriptor controller unable to update value descriptor", controller. update ( valueDescriptor ) )
16318	Assert. assertNotNull ( node )
16319	assertEquals ( p1, p2 )
16320	assertThat ( CompUInt128. extractValue ( actual ), Is. is ( expected ) )
16321	assertTrue ( String. valueOf ( writer ). contains ( "    @Override\\n" + "    public String toString()" ) )
16322	assertTrue ( correct. get ( namedEntity. getLabel ( ) ). equals ( disambiguatedURL ) )
16323	assertEquals ( expected, actual )
16324	Assert. assertThat ( e. getMessage ( ), containsString ( expected ) )
16325	TestCase. assertEquals ( dpidStr, testStr )
16326	Assert. assertEquals ( "/lincoln/orders/24", path. build ( map ) )
16327	assertThat ( sheet. sheetName, is ( "绶ㄩ���′欢锛�1锛�" ) )
16328	assertEquals ( expected, actual )
16329	assertEquals ( warning, result. getFirstHeader ( "Warning" ). getValue ( ) )
16330	context. assertTrue ( gotit. get ( ) )
16331	assertTrue ( count > 0 )
16332	assertTrue (! _event. hasStartTime ( ) )
16333	assertEquals ( expected, actualQuery )
16334	assertEquals ( 0.5, Capacity. divide ( cap1, cap2 ), 0.001 )
16335	assertSeen ( visible, g1 )
16336	assertThat ( databaseHelper. lookupObject ( ObjectType. PERSON, "PP1-TEST" ). containsAttribute ( AttributeType. CHANGED ), is ( false ) )
16337	assertCapacityUnitEqual ( cu, new CapacityUnit ( 2, 0 ) )
16338	assertNotNull ( result )
16339	runner. assertAllFlowFilesTransferred ( PutHiveQL. REL_RETRY, 1 )
16340	assertEquals ( mockJaxbList, response )
16341	assertEquals ( expResult, result, 0.000001 )
16342	assertThat ( result. getValueForAttribute ( AttributeType. ROUTE ). toString ( ), is ( "212.166.64.0/19" ) )
16343	assertEquals ( "file Name, fileName1, fileName2 ", message )
16344	assertEquals ( d. get ( new CellIndex ( 1, 1 ) ), Double. valueOf ( 1.0 ), 1e-10 )
16345	assertNull ( encodedText. toString ( ) )
16346	assertNotNull ( "Profiles are null", profiles )
16347	assertThat ( appl, is ( JavaSignatureComparator. MATCH_BOXING ) )
16348	assertThat ( findFeature ( features, "StatusNotification" ), is ( instanceOf ( StatusNotificationFeature. class ) ) )
16349	assertThat ( isEquals, is ( true ) )
16350	assertFalse ( listener. hasChanges ( ) )
16351	assertTrue ( "userKey1.equals(userKey2)", userKey1. equals ( userKey2 ) )
16352	assertThat ( reporters, is ( not ( reporters2 ) ) )
16353	assertThat ( option, is ( new IntOption ( 100 ) ) )
16354	Assert. fail ( "Caught unexpected exception: " + e. getClass ( ). getSimpleName ( ) )
16355	assertEquals ( caseDefinition. getId ( ), activity. getKey ( ) )
16356	assertEquals ( 4, taskService. sortingTasksByIssueTracker ( logins. iterator ( ). next ( ). getIssueTracker ( ). getUrl ( ) ). size ( ) )
16357	assertThat ( user, equalTo ( expected ) )
16358	assertEquals ( Inode. wrap ( child ), mStore. getChild ( mRoot, child. getName ( ) ). get ( ) )
16359	Assert. assertEquals ( shifted. getPos ( ), 109 )
16360	assertNotNull ( result )
16361	assertEquals ( expectedQuery, actualQuery )
16362	assertThat ( description. toString ( ), is ( "a stage that completed with a value that was <2>" ) )
16363	assertEquals ( expect, converter. convert ( src, Types. unbox ( destType ) ) )
16364	assertEquals ( fi. getFeature ( ). getId ( ), workTree. findUnstaged ( appendChild ( pointsName, idP1 ) ). get ( ). getObjectId ( ) )
16365	assertEquals ( expectedQuery, actualQuery )
16366	assertNotSame ( 0, files. length )
16367	MockEndpoint. assertIsSatisfied ( camelContext )
16368	assertEquals ( expected, actual )
16369	assertNoProblems ( )
16370	assertFiles ( "audit", "audit.1970-01-01", "audit.1970-01-02" )
16371	assertions. contains ( value, index )
16372	editor. assertProblems ( "bork|Expecting a 'int'", "logging.level.org.springframework.kafka.listener.[KafkaMessageListenerContainer$ListenerConsumer]|Unknown property", "bogus|Unknown property" )
16373	assertExpectedResponse ( r, Response. Status. OK. getStatusCode ( ), Boolean. FALSE. toString ( ) )
16374	assertNotNull ( result )
16375	assertNotNull ( "No header returned", header )
16376	assertThat ( rendered, is ( test [ 1 ] ) )
16377	Assert. assertNotNull ( dbRangerPolicyList )
16378	assertEquals ( 35, cap. get ( 0 ) )
16379	assertSame ( obj. getNetName ( ), netName )
16380	assertEquals ( map, map2 )
16381	assertThat ( foundResources, contains ( p1id. getValue ( ) ) )
16382	assertTrue ( future. isCancelled ( ) )
16383	assertEquals ( "dump is complete", dumpException )
16384	assertEquals ( "person found inside range", person, found )
16385	assertEquals ( j * ( long ) TIME, fieldValueGenerator. generatePreviousValue ( value ) )
16386	assertEquals ( 0, messageLatch. getCount ( ) )
16387	assertEquals ( m, r. get ( "map1" ) )
16388	assertEquals ( "13.05.2014 23:52:28", dateAsString )
16389	Assert. assertEquals ( simpleModel, models. get ( SIMPLE_MODEL ) )
16390	assertEquals ( state, cp. restoreState ( ( byte [ ] ) InstantiationUtil. deserializeObject ( serialized, Thread. currentThread ( ). getContextClassLoader ( ) ) ) )
16391	assertThat ( query. count ( ), is ( 3L ) )
16392	Assert. assertEquals ( test. getExpectedEntropy ( ), test. getEntropy ( ), test. getDelta ( ) )
16393	assertTrue ( contextMapRef. get ( ). isEmpty ( ) )
16394	assertEquals ( expected, query. export ( ) )
16395	assertMessage ( "<type>FORWARDED</type>", 4 )
16396	assertEquals ( 200, output. getStatusCode ( ) )
16397	assertTrue ( entity. getId ( ) > 0 && entity. getDistanceFromEarth ( ) == 2400000000000000L )
16398	assertEquals ( expectedQuery, actualQuery )
16399	assertTrue ( result )
16400	Assert. assertFalse ( StraightOrder. is ( p1, p2, p3, IntegerNumberSystem. getInstance ( ) ) )
16401	assertThat ( any. contains ( DAY_OF_QUARTER ), is ( true ) )
16402	assertEquals ( 255, result. getVoxel ( 0, 4, 0 ),.01 )
16403	assertEquals ( "\\"user\\"", database. escapeTableName ( null, null, "user" ) )
16404	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( 5L * 24L * 60L * 60L * 1000L ), mapper. readBitemporalDate ( columns, "ttFrom" ) )
16405	Assert. assertTrue ( explodeDeploymentContentAndGetOutcome ( TEST_DEPLOYMENT_NAME, "web.war" ) )
16406	Assert. assertTrue ( optimum. getValue ( ) > 0.1 )
16407	assertFalse ( configuration. buildDownstream )
16408	assertPutFails ( occurrence, OntopiaRestErrors. MANDATORY_OBJECT_IS_NULL )
16409	Assert. assertEquals ( "{\\"statusCode\\":401,\\"code\\":\\"ERR10001\\",\\"message\\":\\"AUTH_TOKEN_EXPIRED\\",\\"description\\":\\"Jwt token in authorization header expired\\",\\"severity\\":\\"ERROR\\"}", status. toString ( ) )
16410	assertEquals ( "An &#x1f600;awesome &#x1f603;string with a few &#x1f609;emojis!", result )
16411	assertLog ( Log. VERBOSE, "test trace argument argument2" )
16412	assertEquals ( Months. of ( - 4 ), test12. dividedBy ( - 3 ) )
16413	assertEquals ( "value", requestImpl. cookie ( "key" ). getValue ( ) )
16414	assertNull ( remotingAbstract. responseTable. get ( dummyId ) )
16415	Assert. assertArrayEquals ( convert ( new long [ ] { 2467, 9625, 6865 } ), r )
16416	assertFalse ( result )
16417	assertEquals ( uri. toString ( ), "/sub" )
16418	assertEquals ( exp, arr2 )
16419	assertEquals ( expected, output )
16420	Assert. assertEquals ( car, received. getPayload ( ) )
16421	Assert. assertTrue ( ExpectedConditions. textToBePresentInElement ( By. id ( "indexPage" ), "You arrived at index page" ). apply ( driver ) )
16422	assertTrue ( runTool ( conf, args, true ). contains ( "value" ) )
16423	assertEquals ( ( short ) 0x8000, result )
16424	assertEquals ( 1, constructors. length )
16425	assertEquals ( new BigDecimal ( "1234.45" ). toBigInteger ( ), bigD. toBigInteger ( ) )
16426	assertNull ( result )
16427	assertEquals ( androidAppMetadata, ANDROID_APP_NO_DISPLAY_NAME_METADATA )
16428	Assert. assertEquals ( new String ( read ), dataString )
16429	assertEquals ( true, result [ 0 ] )
16430	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
16431	assertEquals ( 1, count )
16432	assertThat ( subject. getResponseHeader ( ), is ( " - From-Host: 127.0.0.1\\n - Date/Time: Sun Mar 3 12:55:00 2013\\n" ) )
16433	assertEquals ( resolver. getClassLoader ( ), Thread. currentThread ( ). getContextClassLoader ( ) )
16434	Assert. assertEquals ( legacyVariantString, variant. toLegacyString ( ) )
16435	assertThat ( target. parse ( ), is ( false ) )
16436	Assert. fail ( errorMessage )
16437	assertTrue ( "The file handler should be created", ops. exists ( TEST_FILE_HANDLER_ADDRESS ) )
16438	assertEquals ( 4, fixture. mark ( ) )
16439	assertThat ( builder. reverse ( ). toString ( ), is ( "9876543210" ) )
16440	assertFalse ( builder. isOptimized ( ) )
16441	assertSame ( fieldVar, result )
16442	Assert. assertEquals ( testEx, infEx. getCause ( ) )
16443	assertEquals ( expected, actualQuery )
16444	assertArrayEquals ( new Object [ ] { 5, "five" }, ( Object [ ] ) execution. next ( ). get ( 0 ) )
16445	assertThat ( checkFailed, is ( true ) )
16446	assertSame ( val, ConfigUtils. getMap ( config, null, "no-object", "some-map" ) )
16447	assertFalse ( r. isLastPublishedVersionPublic ( ) )
16448	assertEquals ( 150, mockHttpClient. postedData. size ( ) )
16449	assertNull ( ( ( ValueExpr ) newVal. value ( ) ). val. get ( ) )
16450	assertEquals ( "test", read. getString ( db. DATA. VALUE ) )
16451	Assert. fail ( "unrecognized property" )
16452	assertThat ( options. isMonochrome ( ), equalTo ( true ) )
16453	assertEquals ( expResult, result )
16454	assertEquals ( "NaN", sb. toString ( ) )
16455	assertEquals ( 10, all. size ( ) )
16456	Assert. fail ( )
16457	assertThat ( rule. getSQLValue ( ). getSql ( ), equalTo ( "select * from `userinfo` where 1 order by age desc" ) )
16458	assertTrue ( hibernateHandler. transform ( nativeQuery, projection ) )
16459	assertEquals ( "<p>This is <em>Sparta</em></p>\\n", renderer. render ( document ) )
16460	given ( ). when ( ). get ( resourcePrefix + "/fs" ). then ( ). statusCode ( 200 ). assertThat ( )
16461	assertThat ( "truncate should have triggered block recovery.", isReady, is ( false ) )
16462	assertEquals ( nrOfActThreads, executedActionCount. get ( ) )
16463	assertEquals ( "value", properties. getProperty ( "key" ) )
16464	assertTrue ( entity. isValid ( ) )
16465	assertResponseContains ( "Warning: No amendment mapping for io.neba.neba-core:" )
16466	assertArrayEquals ( uncompressed, data )
16467	assertEquals ( "Rooted Android Data Collector", testResult )
16468	assertSame ( cause, CRestException. handle ( e ) )
16469	assertTrue ( result )
16470	Assert. assertEquals ( TxStatusMediaType. TX_PREPARED, content )
16471	assertThat ( delegate. op ( 4.0, 5.0 ), equalTo ( 4.0 * 5.0 ) )
16472	this. assertGet ( "servicetemplates/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fservicetemplates%252Fponyuniverse%252Fdriverinjection/DriverInjectionTest/topologytemplate", "entitytypes/servicetemplates/DriverInjection.json" )
16473	assertEquals ( mp. getCount ( ), 2 )
16474	assertEquals ( TarUtils. calculateTarSize ( new File ( dir. getAbsolutePath ( ) + "/tartest" ) ), new File ( dir. getAbsolutePath ( ) + "/tartest.tar" ). length ( ) )
16475	assertEquals ( 0, exporter. getExportManifest ( ). getMetadataList ( ). size ( ) )
16476	Assert. assertEquals ( 3, deserializedSpec. getRouterSpecs ( ). size ( ) )
16477	arrays. assertContains ( description, new float [ 1 ], new float [ 0 ] )
16478	assertions. isNotEqualTo ( expected )
16479	assertNotNull ( "Social Friends (JSON STRING)", friends )
16480	assertEquals ( "%F0%9F%98%83", Encoder. encode ( s ) )
16481	assertEquals ( inStatus. getLen ( ), outStatus. getLen ( ) )
16482	assertEquals ( "v0", nodeToStringTransformer. transform ( ) )
16483	Assert. assertArrayEquals ( expectedSums, determiner. getCooccurrenceCounts ( ) )
16484	assertNotNull ( "Messages are not null", messages )
16485	assertEquals ( schedulingIterations * noOfAlerts, list. size ( ) )
16486	Assert. assertFalse ( GeneralUtilities. safeEquals ( null, zero ) )
16487	assertSame ( sseq, manager. getSequence ( inSid, message, null ) )
16488	Assert. assertEquals ( 3, deserializedSpec. size ( ) )
16489	assertEquals ( ( short ) 8, ( short ) result. getShortWrapperValue ( ) )
16490	assertThat ( token. getType ( ), is ( PCRELexer. HorizontalWhiteSpace ) )
16491	assertEquals ( "http://example.com:signed:owner:0:0:0:0:0:0", builder. build ( ) )
16492	Assert. assertFalse ( isTmp )
16493	Assert. assertTrue ( out. contains ( "customized handler:AdvancedCustomException->CustomException" ) )
16494	Assert. assertEquals ( chave, infoEventoManifestacaoDestinatario. getChave ( ) )
16495	assertThat ( actual, contains ( likeVertex ( ). withTimId ( "id3" ), likeVertex ( ). withTimId ( "id2" ), likeVertex ( ). withTimId ( "id1" ) ) )
16496	assertThat ( result, contains ( 4, 4, 4, 3 ) )
16497	assertEquals ( 33100, timeout )
16498	assertFalse ( actualResult )
16499	assertEquals ( "wrong result", new BigDecimal ( "24" ), expression. getValue ( ). asNumber ( ) )
16500	assertSame ( result, arg )
16501	assertEquals ( propValue, result )
16502	TestCase. assertTrue ( result )
16503	assertEquals ( "aTestString", classUnderTest. getName ( ) )
16504	assertEquals ( 2, result. size ( ) )
16505	assertEquals ( 223, ssdbClient. incr ( "counter", 100 ) )
16506	assertTrue ( sink. getInvalidConfiguration ( ) )
16507	assertEquals ( p1. getFirst ( ). subtract ( p2. getFirst ( ) ), p1. getSecond ( ). subtract ( p2. getSecond ( ) ), 0d )
16508	assertEquals ( ZonedDateTime. parse ( "2017-10-02T09:00-07:00" ), getNextExecutionTime ( myCron, time ) )
16509	assertEquals ( animal, deserialized )
16510	assertEquals ( 2, searcher. search ( q, 100 ). totalHits )
16511	assertNotNull ( "The connection exists", stubConnectionHandle. getConnection ( CLUSTER_NAME ) )
16512	assertThat ( rendered, is ( test [ 1 ] ) )
16513	assertEquals ( EnumField. Size. SMALL, entity. getSize ( ) )
16514	assertEquals ( result1, result2 )
16515	assertEquals ( credentialsAuthenticator. getId ( ), basicAccessAuthenticator. authenticate ( request ). get ( ) )
16516	assertThat ( inputStream, notNullValue ( ) )
16517	assertEquals ( 0, messageLatch. getCount ( ) )
16518	assertTrue ( "Button click should be logged", logContainsText ( "Button clicked!" ) )
16519	assertEquals ( "public static void main(String[] args){}", actualContent )
16520	assertNotNull ( item )
16521	assertNull ( identifiable )
16522	assertNotNull ( SyncList. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
16523	Assert. assertSame ( currentUser, currentUser2 )
16524	assertTrue ( member. isPresent ( ) )
16525	assertEquals ( forwardBlz, manager. getRules ( ). get ( 0 ) )
16526	assertEquals ( "1true", mustache. render ( Json. createReader ( new StringReader ( "[\\"1\\",true,null]" ) ). read ( ) ) )
16527	assertEquals ( "snapshots", ConnectionStringUtils. blobContainer ( connectionString ) )
16528	Assert. assertFalse ( errors. hasErrors ( ) )
16529	assertTrue ( entity. isValid ( ) )
16530	assertEquals ( "01234", result. toString ( ) )
16531	assertEquals ( 0, violations. size ( ) )
16532	assertThat ( proxy, not ( sameInstance ( actual ) ) )
16533	assertEquals ( 200, resp. getStatusLine ( ). getStatusCode ( ) )
16534	assertChangeResultsPage ( changeResultsPage )
16535	assertEquals ( "https://api-fxtrade.oanda.com/v1/accounts/123456/trades/1800805337", service. getTradeForAccountUrl ( tradeId, OandaTestConstants. accountId ) )
16536	assertFalse ( Arrays. equals ( randBytes1, randBytes2 ) )
16537	assertThat ( list. size ( ), is ( not ( 0 ) ) )
16538	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5 ) ) )
16539	Assert. assertEquals ( 0, engineRule. getHistoryService ( ). createUserOperationLogQuery ( ). entityType ( EntityTypes. PROCESS_INSTANCE ). count ( ) )
16540	assertThat ( result. size ( ), is ( 4 ) )
16541	assertThat ( stdOutContent. toString ( ), equalsIgnoringOSSpecificLineSeparators ( "##teamcity[setParameter name='env.PROJECT_VERSION' value='1.7.2-SNAPSHOT']\\n" + "##teamcity[message text='Project version: 1.7.2-SNAPSHOT']\\n" ) )
16542	assertFalse ( validator. validate ( connectionLimits, PUT ). passedValidation ( ) )
16543	Assert. assertEquals ( "0", result. getReturnCode ( ) )
16544	Assert. assertEquals ( expected, quickTypeDependencyList )
16545	assertTrue ( hv > 0.96 )
16546	assertArrayEquals ( Arrays. toString ( d. getResult ( ) ), refar, d. getResult ( ) )
16547	assertFalse ( instance. isBuilding ( event ) )
16548	assertBoard ( "�尖�尖�尖�尖��\\n" + "��   ��\\n" + "�尖�尖�衡�尖��\\n" + "�尖�烩�� ��\\n" + "�尖�尖�尖�尖��\\n" )
16549	assertEquals ( Arrays. asList ( null, NoteType. A, NoteType. B, NoteType. TYPE1 ), session. from ( $ ( n ) ). orderBy ( $ ( n. getType ( ) ). asc ( ) ). list ( $ ( n. getType ( ) ) ) )
16550	assertEquals ( "SELECT TO_DATE(TEST_HIST_PARTITION1.CREATED_AT) DT, " + "COUNT(TEST_HIST_PARTITION1.ID) NUM_QUERIES " + "FROM PUBLIC.TEST_HIST_PARTITION1 INNER JOIN H2.PUBLIC.UINFO " + "ON TEST_HIST_PARTITION1.QBOL_USER_ID = UINFO.QU_ID INNER JOIN H2.PUBLIC.ACC " + "ON UINFO.A_ID = ACC.ID " + "WHERE ACC.CUSTOMER_NAME LIKE 'amogh' AND " + "(TO_DATE(TEST_HIST_PARTITION1.CREATED_AT) >= " + "DATE_SUB(FROM_UNIXTIME(UNIX_TIMESTAMP()), 30) " + "AND TEST_HIST_PARTITION1.COMMAND_TYPE = 'HiveCommand' " + "AND TEST_HIST_PARTITION1.QLOG LIKE '%\\\\\\"HIVE_VERSION\\\\\\":\\\\\\"1.2\\\\\\"%') " + "GROUP BY TO_DATE(TEST_HIST_PARTITION1.CREATED_AT
16551	Assert. assertEquals ( 1, ret. getId ( ) )
16552	assertSame ( MockSoapClient. EXCEPTION, testRemoteCallReturn. getException ( ) )
16553	assertEquals ( "subscriptionId1", app. getSubscriptionId ( ) )
16554	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
16555	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
16556	Assert. assertArrayEquals ( convert ( expected ), solution )
16557	assertEquals ( a, b )
16558	assertEquals ( 0, found )
16559	Assert. assertNull ( doc. getContentField ( "out" ) )
16560	assertEquals ( true, block. checkProofOfWork ( true ) )
16561	assertEquals ( 1, instance. counter )
16562	assertEquals ( "Required profiles", "123", new FelixPlatformBuilderF160 ( m_bundleContext, "version" ). getRequiredProfile ( m_platformContext ) )
16563	assertTrue ( Graphene. waitGui ( ). until ( ExpectedConditions. textToBePresentInElementLocated ( By. className ( "error" ), UNAUTHORIZED ) ) )
16564	Assert. assertEquals ( DateFormat. SHORT, numericValue. intValue ( ) )
16565	Assert. assertEquals ( 0.0, diag. getEntry ( 1, 2 ), Precision. SAFE_MIN )
16566	assertScoreAndParse ( content, null, 6 )
16567	assertEquals ( "SELECT firstname, lastname UNION ALL SELECT a, b", statement. toString ( ) )
16568	assertTrue ( dbStopped )
16569	assertEquals ( "Evelyn Waugh", book. getAuthor ( ) )
16570	assertThat ( result, is ( sameInstance ( primaryKeysRequest ) ) )
16571	Assert. assertEquals ( 5967, tweetsByUser. count ( ) )
16572	assertEquals ( 0, argList. size ( ) )
16573	assertThat ( changes, containsInAnyOrder ( "+<s1> <p1> <o1> <graph>.\\n", "-<s2> <p2> <o2> <graph>.\\n", "+<s3> <p3> \\"o3\\"^^<http://www.w3.org/2001/XMLSchema#string> <graph>.\\n", "-<s4> <p4> \\"o4\\"^^<http://www.w3.org/2001/XMLSchema#string> <graph>.\\n", "+<s5> <p5> \\"o5\\"@en <graph>.\\n", "-<s6> <p6> \\"o6\\"@en <graph>.\\n" ) )
16574	assertTrue ( rowChange. compareTo ( rowChange2 ) == 0 )
16575	assertEquals ( 5, x )
16576	assertThat ( paginate, is ( not ( nullValue ( ) ) ) )
16577	assertEquals ( prefs, actualPrefs )
16578	assertEquals ( expected. getTime ( ), parsedDate. getTime ( ) )
16579	assertThat ( thread. getName ( ), CoreMatchers. containsString ( "prefix-test" ) )
16580	assertEquals ( "http://localhost/things/100", affordance. expand ( 100 ). getHref ( ) )
16581	assertTrue ( result. contains ( expectedResult ) )
16582	assertEquals ( "Find by name and device not returning a list with one reading", 1, readings. size ( ) )
16583	assertTrue ( jobCounters == jobCounters2 )
16584	Assert. assertEquals ( polygon, result. getValue ( ) )
16585	assertEquals ( response. getStatus ( ), 503 )
16586	assertEquals ( count, TRIPLES )
16587	Assert. assertEquals ( "/wro4j/wro/path/to/", Context. get ( ). getAggregatedFolderPath ( ) )
16588	UmaTestUtil. assert_ ( authorization )
16589	assertEquals ( expected, actual, 0.0 )
16590	assertThat ( coll, equalTo ( reference ) )
16591	assertThat ( url, is ( notNullValue ( ) ) )
16592	assertEquals ( ref. getUri ( ). toString ( ), obj. get ( "uri" ) )
16593	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoVolume ( ). toString ( ) )
16594	Assert. assertNotSame ( "Pass phrases should not match", phrase1, phrase2 )
16595	assertionHelper. assertLocalScratchFileLengthEquals ( IRODS_TEST_SUBDIR_PATH + "/" + testRetrievedFileName, testFileLength )
16596	assertThat ( meanTaxFactor, equalTo ( TAX_FACTOR ) )
16597	assertThat ( list, contains ( startedRecently, startedLongAgo, noStartOrEnd, endedRecently, endedLongAgo, voided ) )
16598	assertThat ( result, is ( nullValue ( ) ) )
16599	assertEquals ( "<mongodb-datastore name=\\"name\\">\\n" + "  <hostname>hostname</hostname>\\n  <port>1234</port>\\n" + "  <database-name>database</database-name>\\n" + "  <username>user</username>\\n" + "  <password>" + PASSWORD_ENCODED + "</password>\\n</mongodb-datastore>\\n", transform ( externalized ) )
16600	assertEquals ( expecting, found )
16601	assertEquals ( "c", result. toString ( ) )
16602	assertThat ( expected, equalTo ( actual ) )
16603	assertEquals ( out. get ( ), 2.0, 0.0 )
16604	assertThat ( joynrVersionnAnnotation. major ( ), equalTo ( 47 ) )
16605	assertEquals ( parseCalendar ( "20131103-07:45:00", TimeZone. getTimeZone ( "UTC" ) ), dh. getCalendarAfter ( easternTime ) )
16606	assertEquals ( getFailureMessage ( ), assertion, slice )
16607	assertTrue ( ref. isAssignableTo ( bundle, A. class. getName ( ) ) )
16608	assertTrue (! result )
16609	assertEquals ( PojomatorFactory. makePojomator ( Simple. class ). doToString ( new Simple ( ) ), "Simple{x: {foo}}" )
16610	assertFalse ( "Did not expected to find GROUP BY limit optimization in: " + query, explainPlan. contains ( " LIMIT 3 GROUPS" ) )
16611	assertTrue ( seq. getNumberOfSubSequences ( ) == 0 )
16612	assertEquals ( "Wrong boundaries", Arrays. asList ( "0123456789abcdef", "0123456789abcdef" ), boundaries )
16613	assertTrue ( "empty sort string element not discarded", q. matches ( "(?s).*item <eh:/B> \\\\?___0.*ORDER BY +\\\\?___0.*" ) )
16614	assertEquals ( testString. substring ( 1, 3 ), writer. toString ( ) )
16615	assertEqualHash ( byteBuffer, murmur3a )
16616	assertEquals ( "7e47820975c51a762e63caa95cc76e45", classFile. getHash ( ) )
16617	assertEquals ( count, puts. size ( ) )
16618	BPartnerImportTestHelper. assertImported ( ibpartner )
16619	Assert. assertTrue ( "found instances in empty set", instances. isEmpty ( ) )
16620	assertEquals ( sum, victim. getSum ( ), EPSILON )
16621	assertSqlCanBeParsedAndDeparsed ( stmt )
16622	assertCommandLineArgs ( "localhost", null, "etc/jmxetric.xml", "multicast", "true", "ProcessName", "SpoofName" )
16623	assertEquals ( "a}\\n", found )
16624	assertMessageAndPath ( constraintViolationCreationContextList. get ( 0 ), message, pathWith ( ). property ( "foo" ). property ( "bar", true, "test", null ). property ( "fubar", true, null, 10 ) )
16625	assertEquals ( "S-4-327686-7", new SIDTypeNode ( testBinaryReaderBuilder. build ( ), chunkHeader, parent, - 1 ). getValue ( ) )
16626	assertTrue ( false )
16627	assertEquals ( "Hello", new ImportsToFQCN ( imports ). resolveFQCN ( "Hello" ) )
16628	assertEquals ( 2 * Math. cos ( Math. E ), e. evaluate ( ), 0d )
16629	assertThat ( rows, is ( 1 ) )
16630	assertEquals ( NUMBER_OF_COMMANDS, testCommands. size ( ) )
16631	assertThat ( test ( mock. getVerifier ( ), "Hello1", "Hello2", "Hello3" ), hasSize ( 1 ) )
16632	Assert. assertEquals ( expected, Strings. unCapitalizeFirstChar ( data ) )
16633	assertEquals ( obj. toString ( ), "LSAPR_POLICY_AUDIT_EVENTS_INFO{AuditingMode:0, EventAuditingOptions:null, MaximumAuditEventCount:0}" )
16634	Assert. assertEquals ( threadNum, res. size ( ) )
16635	Assert. assertEquals ( "", expected, actual, 0d )
16636	assertEquals ( LocalDate. of ( 2012, 7, 20 ), test )
16637	assertNull ( "2MB allocation shouldn't be satisfied by LAB.", alloc )
16638	assertTrue ( "Schemas", schemaHomology. schemasMatch ( schema1, schema2, exclusionRegex ) )
16639	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
16640	assertTrue ( "Output bytes are not the expected value", Arrays. equals ( new byte [ ] { 0x30, 0x20, 0x48, 0x45, 0x41, 0x44, 0x0A, 0x31, 0x20, 0x43, 0x48, 0x41, 0x52, 0x20, 0x41, 0x4E, 0x53, 0x45, 0x4C, 0x0A, 0x40, 0x20, 0x75, 0x6E, 0x6D, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6C, 0x65, 0x20, 0x69, 0x6E, 0x20, 0x61, 0x6E, 0x73, 0x65, 0x6C, 0x0A, ( byte ) 0xA1, 0x20, 0x6D, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6C, 0x65, 0x20, 0x69,
16641	assertEquals ( "<html>" + "<head><style> span {font-family: Verdana;} </style></head>" + "<body><span style=\\"font-size: 10px; color: red;\\">Red text</span></body></html>", output )
16642	assertNull ( route )
16643	assertThat ( logRecords, containsInfo ( CM_REPLACED ) )
16644	assertEquals ( expected, actual )
16645	assertFalse ( observer. accept ( path ) )
16646	Assert. assertEquals ( OVERRIDING_USERNAME, callIntermediateWhoAmI ( ) )
16647	Assert. assertEquals ( CatalogResponseMessage. INTERNAL_SERVER_ERROR, response. getCode ( ) )
16648	assertions. contains ( expected )
16649	assertEquals ( "/:whoami", ModelNodeOperationToCliString. convert ( op ) )
16650	assertEquals ( this. multipleCom, result. getAttributes ( ) )
16651	Assert. assertEquals ( Explain. ExplainType. RUNTIME, o. explainType )
16652	assertEquals ( "Incorrect last unfixed alert", testPlatformAlert3. getId ( ), lastUnfixed. getId ( ) )
16653	Assert. assertEquals ( 1, n )
16654	assertMessageFound ( goodMessage )
16655	Assert. assertEquals ( idSet. size ( ), 16000 )
16656	assertEquals ( "C:\\\\this\\\\is\\\\a\\\\file.extension", result. getAbsolutePath ( ) )
16657	assertEquals ( "{\\"version\\":10,\\"id\\":100,\\"schema\\":\\"string\\"}", request. toJson ( ) )
16658	Assert. fail ( "Neither source listing not source paths present" )
16659	Assert. assertEquals ( Arrays. asList ( new IntegerValue ( 1 ) ), res. getValues ( ) )
16660	assertResultSet ( res )
16661	assertEquals ( mockCellWithTags, newCell )
16662	assertTrue ( authenticate ( ) )
16663	assertTrue ( exception. getMessage ( ). contains ( "must be a Collection with Generics" ) )
16664	assertEntityHasValue ( DEFAULT_PROPERTY_KEY, newValue )
16665	Assert. assertEquals ( "/album/" + funeral. getId ( ) + ".test", objectTree. get ( "href" ) )
16666	this. assertVerification ( )
16667	assertEquals ( "Base value is not properly parsed", Long. valueOf ( 3 ), parsed )
16668	assertEquals ( 0.303, comparator. getSimilarity ( cb1. getJCas ( ), cb2. getJCas ( ) ), epsilon )
16669	assertNotNull ( scriptStatement )
16670	assertEquals ( i + "," + expected + "-" + actual, expected, actual )
16671	assertThat ( sampleEntities. getTotalElements ( ), is ( greaterThanOrEqualTo ( 1L ) ) )
16672	assertEquals ( expected, actual )
16673	assertTrue ( server. isAuthenticated ( ) )
16674	assertThat ( userCount, is ( 0 ) )
16675	assertThat ( locationManager. getTableLocation ( ), is ( new Path ( TABLE_LOCATION ) ) )
16676	assertThat ( systemMessagesProvider, instanceOf ( CdiSystemMessagesProvider. class ) )
16677	assertEquals ( 3, stack. size ( ) )
16678	assertTrue ( table. getColumn ( "Test" ). getWidth ( ) == w )
16679	assertEquals ( encodedSignature, "IZsXiRrRfP9eNFj6snm_MGEnrtfvX8vOF43Z-FuFkRj29y0WUaPR50IXRDI5uGatJvVdr_i7eJCJ4N_EwwrIhQ" )
16680	assertEquals ( pp. getValue ( ), new Payload < > ( "hello1" ). getValue ( ) )
16681	assertTrue ( found )
16682	Assert. assertEquals ( result, true )
16683	assertEquals ( moonsBefore - 1, moonsAfter )
16684	assertEquals ( org. drools. core. test. model. Person. Nested1. Nested2. class, resolver. resolveType ( "Person.Nested1.Nested2" ) )
16685	assertThat ( router. parse ( url, HttpMethod. POST, null ). getMethod ( ), is ( equalTo ( method ) ) )
16686	MatrixTestAbstract. assertMatrixEquals ( eI, c )
16687	assertArray2dEquals ( test, roundtrip, 0.01f )
16688	Assert. assertEquals ( expectedPorts, EC2NetworkValidator. getPortRangeFromAclEntry ( networkAclEntry ) )
16689	assertFalse ( "The same keys, but different objects, must not match:", key1. equals ( key2 ) )
16690	assertTokens ( new IntValueToken ( 4 ), new IntValueToken ( 4 ) )
16691	assertEquals ( 1, result. size ( ) )
16692	Assert. assertEquals ( logProb, ef_logProb, 0.0001 )
16693	assertNull ( x )
16694	assertFalse ( ord. isCaseInsensitive ( ) )
16695	assertTrue ( joined,! joined. equals ( "A E" ) )
16696	assertEquals ( "", cm. toString ( ) )
16697	assertEquals ( ( i < 5? i : 5 ), result. get ( result. size ( ) - 1 ). longValue ( ) )
16698	assertEquals ( expected, actual )
16699	assertMockEndpointsSatisfied ( )
16700	assertThat ( ( Person ) oie. getValue ( ). getObject ( ), is ( person ) )
16701	assertEquals ( writer. position, 0 )
16702	assertTrue ( validator. validate ( EntityNames. SECTION, sectionIds ). equals ( sectionIds ) )
16703	Assert. assertEquals ( "Wrong number of records in join result.", NUM_KEYS * BUILD_VALS_PER_KEY * PROBE_VALS_PER_KEY, numRecordsInJoinResult )
16704	assertThat ( desc. toString ( ), is ( "<1> was equal to <1> and <1> was less than <5>" ) )
16705	assertEquals ( someCert, actualPublicKeyCert )
16706	assertThat ( isValid, is ( false ) )
16707	Assert. assertEquals ( "2014:01:01", this. vocabulary. getVersion ( ) )
16708	Assert. assertEquals ( "Hello World!", sc. saySomething ( ) )
16709	Assert. assertNull ( tmp )
16710	assertEquals ( "[['s1','s2'], ['s3','s4','s5']]", ToString. toStringOf ( array ) )
16711	assertEquals ( witnessList, tokenList )
16712	assertNull ( dataset )
16713	assertFalse ( job. getConfiguration ( ). getBoolean ( AvroJob. INPUT_IS_REFLECT, true ) )
16714	Assert. assertFalse ( testMatcher. matches ( examplePath ) )
16715	Assert. assertEquals ( icmsSetado, icms. getIcms90 ( ) )
16716	assertUnderflow ( ( double ) x * ( double ) y, result, x * y )
16717	assertTrue ( filter. matches ( operation, poolInfoMap ) )
16718	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
16719	Assert. assertTrue ( ps1 == ps2 )
16720	assertTrue ( "Latch not fired", cdl1. await ( 5000, TimeUnit. MILLISECONDS ) )
16721	assertEquals ( blockers. size ( ), 0 )
16722	doubles. assertEqual ( description, null, 8d )
16723	assertEquals ( 121.75, RestaurantBill. calculateTotal ( mealCharge, tax, tip ), 0 )
16724	assertThat ( testOutcome. toString ( ), is ( "App should work:Grouped steps [Nested step one, Nested step two, Nested step one, Nested step two]" ) )
16725	assertFalse ( listOutput. isEmpty ( ) )
16726	assertNotNull ( ksl. getSlaveServerConfigNode ( new StringBufferInputStream ( xml ) ) )
16727	assertEquals ( new BigDecimal ( 300 ), list. get ( 0 ) )
16728	assertThat ( userId, is ( 502 ) )
16729	assertNotNull ( projectionRef )
16730	assertEquals ( 5, client. getIdleConnections ( ) )
16731	assertEquals ( 200, changes. getStatus ( ) )
16732	Assert. assertTrue ( _c. canConvertTo ( Long. TYPE ) )
16733	assertEquals ( trueConcept, ObsResource1_8. getValue ( obs ) )
16734	assertThat ( ( Counter ) c1. delta ( c0 ), is ( new Counter ( 10L ) ) )
16735	assertNotNull ( prorroga. getId ( ) )
16736	assertSame ( a. getClass ( ), a. getClass ( ) )
16737	assertEquals ( group1, actaul )
16738	assertFalse ( JobUtils. isJobExecutionAbandonable ( jobExecution ) )
16739	assertEquals ( 1, handlerContainer. onUnbindMethodCalled )
16740	assertTrue ( elements. isEmpty ( ) )
16741	assertProcessInstanceCompleted ( processInstance )
16742	Assert. assertEquals ( 4, MathArrays. distanceInf ( p1, p2 ) )
16743	assertThat ( diagnosedFailuresOf ( job ). value ( ), hasItem ( rogueAi ) )
16744	Assert. assertEquals ( "Invalid username", "Ernie", passwordCallback. getPassword ( ) )
16745	assertTrue ( closed. await ( 4, SECONDS ) )
16746	assertEquals ( false, result )
16747	Assert. assertEquals ( expected, actual )
16748	tester. assertRenderedPage ( PageUser. class )
16749	assertEquals ( userGroupDao. selectUserGroupByUserGroupId ( "Group" ). size ( ), 2 )
16750	assertEquals ( expected, actual, 0.0 )
16751	assertEquals ( 13, ret )
16752	assertFalse ( AuthzResolver. authorizedInternal ( session, "test_groupadmin_voadmin", Arrays. asList ( createdVo, createdGroup ) ) )
16753	assertEquals ( Long. valueOf ( 1L ), myTestInstance. updateAsync ( doc, update ). get ( ) )
16754	assertEquals ( "1", output. getStringWriter ( ). getBuffer ( ). toString ( ) )
16755	assertEquals ( TypeInfoCreator. createBoolean ( ), orcType )
16756	Assert. assertTrue ( result )
16757	Assert. assertThat ( andrew, is ( userStore. get ( andrew. getId ( ) ) ) )
16758	assertThat ( builder. getPatches ( ), hasItemInArray ( "REPLACE /status/replicas 3" ) )
16759	assertNull ( response )
16760	assertThat ( effect, is ( 0 ) )
16761	assertThat ( output, is ( equalTo ( "dq_____dq :d2q__________d2q dsds_____ de c__________ ________ a________xy" ) ) )
16762	assertEquals ( VendorOptionManager. getInstance ( ). getDefaultVendorOptionVersion ( ), field. getVendorOption ( ) )
16763	assertThat ( ConfigurationDetecter. execute ( output, testLoader ), is ( not ( 0 ) ) )
16764	assertThat ( ( ( AtomicInteger ) packet. get ( ProcessingConstants. REMAINING_SERVERS_HEALTH_TO_READ ) ). get ( ), is ( 2 ) )
16765	Assert. assertNotNull ( new Bean80BindMap ( ) )
16766	assertEquals ( "{\\"error\\":{\\"code\\":null,\\"message\\":\\"ErrorMessage\\",\\"details\\":[]}}", jsonString )
16767	assertEquals ( expectedString, formattedDate )
16768	assertEquals ( "<!---->", result )
16769	assertTrue ( result )
16770	assertFalse ( elPresent )
16771	assertArrayEquals ( new String [ ] { "leftLeaf", "root" }, treeContent )
16772	Assert. assertEquals ( parentConfig. getUserID ( ), result. getUserID ( ) )
16773	assertFalse ( game. isGameOver ( ) )
16774	assertThat ( id, is ( Optional. of ( "OTHER_THING:0001234" ) ) )
16775	assertFalse ( store. getMetadata ( ). getContacts ( ). isEmpty ( ) )
16776	mock. assertIsSatisfied ( )
16777	assertThat ( result, is ( equalTo ( newFile ) ) )
16778	assertEquals ( null, result )
16779	assertThatWorkflowInstanceCompletedAfter ( workflowInstanceKey, "end-2" )
16780	assertEquals ( notAfter, certificate. getNotAfter ( ) )
16781	assertThat ( typifiedElement. exists ( ), is ( true ) )
16782	assertExpression ( jc, "foo.bar", "123" )
16783	assertEquals ( 10.5, v, 0.0000001 )
16784	assertThat ( output, containsString ( "Dicom store instances found:" ) )
16785	assertEquals ( exp, z )
16786	assertEquals ( keyExpected, keyBuilt )
16787	assertThat ( subject. shouldProcess ( message ), is ( false ) )
16788	assertTrue ( getNoErrorMsg ( ), result )
16789	assertNull ( "Must be null", ovsdbBridgeAugmentation )
16790	assertSqlCanBeParsedAndDeparsed ( stmt )
16791	assertThat ( text ( contents ), is ( "0a,0b,0c\\r\\n1a,1b,1c\\r\\n2a,2b,2c\\r\\n" ) )
16792	assertTrue ( output. indexOf ( "sayHiArray" ) > - 1 )
16793	assertNotNull ( c )
16794	BeanAssert. assertBeanEquals ( bean, parsed )
16795	assertEquals ( map, ( ( Map < String, Object > ) map. get ( "child" ) ). get ( "parent" ) )
16796	assertEquals ( Sets. newHashSet ( "Ke3+", "Kf4+", "Kd3+", "Kf5+", "Ke5+" ), moves )
16797	Assert. assertEquals ( expected, actual )
16798	assertThat ( initiativeInfo. hasTotalSupportCountAtLeast ( 101 ), is ( false ) )
16799	assertThat ( result, is ( "Result From Target Endpoint" ) )
16800	assertEquals ( expected, clusters )
16801	Assert. assertNull ( data. getData ( ) )
16802	assertNull ( reader. overflowAtoms ( ) )
16803	assertNull ( graph )
16804	assertArrayEquals ( "invalid tokens", expected, check. getRequiredTokens ( ) )
16805	assertThat ( result. fullName ( ), is ( Object. class. getName ( ) ) )
16806	assertThat ( StringUtils. join ( diff, "\\n" ), diff. size ( ), is ( 0 ) )
16807	assertEquals ( 0, allViolations. size ( ) )
16808	assertEquals ( "", result )
16809	assertThat ( PrettyTime. of ( new Locale ( "ar" ) ). print ( duration, TextWidth. WIDE ), is ( "佟佶 爻�丞� 伲 兀卮�乇� 兀爻亘�毓� ����丕�" ) )
16810	assertThat ( outputDirectory. getPath ( ), is ( "target" + FILE_SEPARATOR + "reports" + FILE_SEPARATOR + "thucydides" ) )
16811	assertTrue ( verifyReadRandomFile ( path1, BLOCK_SIZE, SEED ) )
16812	assertFalse ( "Unable to update non existing user", success )
16813	Assert. assertEquals ( 2, patients. size ( ) )
16814	assertEquals ( 1, endpointMapping. getOrder ( ) )
16815	assertEquals ( result. getStrategy ( ), DYNAMIC )
16816	Assert. assertEquals ( 0, cache. size ( ) )
16817	assertEquals ( "3 喔�喔ㄠ抚喔｀福喔� 喔�喙�喔�喔�", t. format ( new Date ( 0 ) ) )
16818	Assert. assertEquals ( 2, count. longValue ( ) )
16819	Assert. assertTrue ( response. toString ( ), response. result ( ) )
16820	assertEquals ( dog, ExternalizableHelper. fromBinary ( binDog, v2 ) )
16821	Assert. assertEquals ( 70, analyser. getLoadDelivered ( ). get ( 0 ), 0.01 )
16822	assertEquals ( "child" + childIdx, child. getName ( ) )
16823	Assert. assertNull ( ret )
16824	assertEquals ( 6, sum. get ( ) )
16825	Assert. assertEquals ( "Geometric mean not expected", 2.213364, u. getGeometricMean ( ), 0.00001 )
16826	assertEquals ( sub. toString ( ), sub. accept ( visitor ) )
16827	assertEquals ( ByteString. decodeHex ( "00000072000000610000006e00000259" ), data. readByteString ( ) )
16828	assertThat ( action. action, is ( RetryPolicy. RetryAction. RetryDecision. RETRY ) )
16829	assertFalse ( result )
16830	assertEquals ( buf. toString ( ), expected )
16831	Assert. fail ( )
16832	assertThat ( dispatched, is ( ASYNC_PRIVATE_FLOW_MSG + ".main1@" + ASYNC_MAIN_FLOW_THREAD_NAME + "." + ASYNC_PRIVATE_FLOW_NAME + "@" + ASYNC_PRIVATE_FLOW_THREAD_NAME ) )
16833	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "gifImageTest05.pdf", sourceFolder + "cmp_gifImageTest05.pdf", destinationFolder, "diff_" ) )
16834	assertEquals ( expected, actualQuery )
16835	assertTrue ( prefData. equals ( actual ) )
16836	assertEquals ( "Expected null but exception found", null, ex )
16837	assertTrue ( "There was uncacheable headers", HeaderUtils. hasCacheableHeaders ( headers ) )
16838	Assert. assertEquals ( 0.0, diag. getEntry ( 1, 2 ), Precision. SAFE_MIN )
16839	assertEquals ( ( Integer ) 30, task. join ( ) )
16840	assertEquals ( 0, result. numFindings ( ) )
16841	assertEquals ( 1, graph. countVertices ( "Test" ) )
16842	assertFalse ( topic. isPlugable ( ) )
16843	Assert. assertEquals ( descricaoEvento, eventoRetorno. getDescricaoEvento ( ) )
16844	assertThat ( description. toString ( ), containsString ( "but the string was not valid JSON" ) )
16845	assertXpathNotExists ( "/a:feed/at:deleted-entry", xmlString )
16846	assertEquals ( val, result )
16847	assertEquals ( 1, count )
16848	assertTrue ( wrapper. isRunInTx ( ) )
16849	assertTrue ( r1 instanceof PublicCloneable )
16850	assertEquals ( Result. PASS, name. apply ( item, - 1 ) )
16851	assertEquals ( FooB. class, dummy. foo. getClass ( ) )
16852	Assert. fail ( e. getMessage ( ) )
16853	assertEquals ( Integer. valueOf ( 1 ), result )
16854	assertEquals ( this. object, ( ( Pcerr ) b ). getPcerrMessage ( ). getErrors ( ). get ( 0 ). getErrorObject ( ) )
16855	assertEquals ( value, bean. getiPad ( ) )
16856	assertThat ( gavceForRecord ( record ), is ( equalTo ( GROUP + ARTIFACT + VERSION + "n/a" + ":" + EXTENSION ) ) )
16857	assertNull ( namedConfig. get ( "key" ) )
16858	assertEquals ( expected, rewrite ( input ) )
16859	assertThat ( output2, equalTo ( output1 ) )
16860	assertNotNull ( ucioLoaded )
16861	assertEquals ( 1L, entity. getVersion ( ) )
16862	assertEquals ( false, start )
16863	assertEquals ( expectedMap, map )
16864	assertEquals ( i - 1, ret )
16865	Assert. assertEquals ( 0, patientCount )
16866	assertArrayEquals ( expectedResult, actualResult, 0.0003 )
16867	assertEquals ( expected, calc, 1e-5 )
16868	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff53" ) )
16869	assertEquals ( normalize ( source ), normalize ( out. toString ( ) ) )
16870	Assert. assertEquals ( cana, notaInfo. getCana ( ) )
16871	assertChangeResultsPage ( changeResultsPage )
16872	assertEquals ( "Folder/", uriTools. relativePath ( base, uri ). toASCIIString ( ) )
16873	assertTrue ( validated )
16874	assertThat ( EventDispatcher. pending. get ( ), is ( empty ( ) ) )
16875	assertEquals ( "<html><body> <p>FOO</p> </body> </html>", engine. compileMustache ( "minify_html", "<html><body>   <!-- My comment -->  <p>{{foo}}</p>  </body>\\n  </html>" ). render ( ImmutableMap. < String, Object > of ( "foo", "FOO" ) ) )
16876	assertEquals ( "foo, bar", result )
16877	assertEquals ( "No blueprint specified", response )
16878	Assert. assertFalse ( processor. isComplete ( ) )
16879	assertInvocations ( client. getTwoPhaseCommitInvocations ( ) )
16880	assertEquals ( "(= 34 abc)\\n", found )
16881	assertNotNull ( certificate )
16882	assertEquals ( messageOne, result )
16883	assertThat ( systemOutRule. getLog ( ), containsString ( "Hello World!" ) )
16884	assertTrue ( testFailed. isEmpty ( ) )
16885	Assert. assertEquals ( expResult, result )
16886	assertEquals ( KEY_HANDLE_BASE64, response. getKeyHandle ( ) )
16887	assertThat ( resizedImage, is ( image ) )
16888	Assert. assertEquals ( description, value )
16889	assertEquals ( ( long ) 8, result. getLongValue ( ) )
16890	assertNotNull ( result )
16891	assertTrue ( params. hasValue ( "a" ) )
16892	assertEquals ( expected, actual )
16893	tester. assertCompleteMatch ( )
16894	assertThat ( testUriStr, is ( expectedUriStr ) )
16895	assertEquals ( sink, actualSink )
16896	assertTrue ( Wxs. check ( token, signature, timestamp, nonce ) )
16897	assertNotNull ( timestamp )
16898	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( tree ) instanceof WTreeRenderer )
16899	Assert. assertEquals ( valorTest, valor )
16900	assertTypeImportsAndSpellings ( types, "foo.bar", ImmutableList. of ( "java.math.BigInteger", "java.util.List", "java.util.Map", "java.util.Timer", "java.util.regex.Pattern" ), ImmutableList. of ( "int", "Pattern", "List<Timer>", "Map<? extends Timer,? super BigInteger>" ) )
16901	assertArgumentParserException ( args )
16902	assertSame ( gav0, ReleaseIdComparator. getEarliest ( list ) )
16903	assertNull ( model. getChangedProperty ( ), "No observed value change" )
16904	files. assertIsDirectoryContaining ( INFO, actual, JAVA_SOURCE )
16905	assertEquals ( 1, empty. get ( nameMatcher. getKeyDefinition ( ) ). allValues ( ). size ( ) )
16906	assertEquals ( "SELECT FROM V WHERE? = 5", q. toString ( ) )
16907	assertThat ( model. size ( ), is ( 0 ) )
16908	assertThat ( result, is ( mockBundle ) )
16909	Assert. assertFalse ( success. get ( ) )
16910	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
16911	Assert. assertEquals ( format ( "Got incorrect best ask and bid %s, %s", a1, b1 ), BookSanityChecker. hasErrors ( book ) )
16912	assertThat ( message. toJSON ( ), is ( ( JsonElement ) json ) )
16913	assertThat ( request. getStagingDirectory ( "product-00" ), equalTo ( "systemUser/product-00" ) )
16914	assertThat ( families, arrayContaining ( "Business/JIRA" ) )
16915	assertEquals ( LANE_COUNT, roadMapping. laneCount ( ) )
16916	assertDeploySucceeded ( build )
16917	assertThat ( matcher, notNullValue ( ) )
16918	assertRendering ( repeat ( "> ", x ) + "a\\n", repeat ( "<blockquote>\\n", x ) + "<p>a</p>\\n" + repeat ( "</blockquote>\\n", x ) )
16919	assertEquals ( 2, tasks. size ( ) )
16920	assertNotNull ( model )
16921	Assert. assertFalse ( verifyRes )
16922	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"yes\\"?>" + "<test><date>20120101</date></test>", stringifiedTestObject )
16923	assertTrue ( e. getMessage ( ). contains ( badCell ) )
16924	assertThat ( outputDirectory, not ( containsText ( "javax.validation" ) ) )
16925	assertEquals ( 2, wiser. getMessages ( ). size ( ) )
16926	assertTrue ( contentC. isVisible ( ) )
16927	assertEquals ( 204, response. getStatus ( ) )
16928	assertEquals ( "field.asInteger()", p. toString ( ) )
16929	Assert. assertEquals ( "Node{edge=FOO, value=-, edges=[]}", node. toString ( ) )
16930	assertEquals ( "mock arg1=one&arg2=2\\r\\n", writer. toString ( ) )
16931	assertServletWasInvokedWith ( entity )
16932	assertThat ( log, containsString ( "" + "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"no\\"?>\\n" + "<dbupdate created=\\"2012-12-01 00:00:00\\">\\n" + "    <messages/>\\n" + "    <updates>\\n" + "        <update attempt=\\"1\\" time=\\"2012-12-01 00:00:00\\">\\n" + "            <key>[mntner] DEV-ROOT-MNT</key>\\n" + "            <operation>DELETE</operation>\\n" + "            <reason>reason</reason>\\n" + "            <paragraph><![CDATA[paragraph]]></paragraph>\\n" + "            <object><![CDATA[mntner:         DEV-ROOT-MNT\\n" + "]]></object>\\n" + "            <query>\\n" + "                <sql><![CDATA[sql]]></sql>\\n" + "                <params>\\n" + "                    <param idx=\\"1\\">p1
16933	assertTrue ( flag )
16934	assertDefaultStepTimeout ( "1m" )
16935	Assert. assertEquals ( response. getStatusLine ( ). getStatusCode ( ), HttpStatus. SC_BAD_REQUEST, "We should not get internal server error" )
16936	assertThat ( response, is ( equalTo ( expected ) ) )
16937	assertThatToolBarIsFloating ( oldAncestor )
16938	assertEquals ( "Classpath streamflow config should match ConfigLoader streamflow config", classpathConfig, loadedConfig )
16939	assertEqualsEvenUnderWindows ( "{\\n" + "  \\"from\\" : 0,\\n" + "  \\"size\\" : 10,\\n" + "  \\"query\\" : {\\n" + "    \\"match_all\\" : { }\\n" + "  },\\n" + "  \\"aggregations\\" : {\\n" + "    \\"source_filter\\" : {\\n" + "      \\"filter\\" : {\\n" + "        \\"match_all\\" : { }\\n" + "      },\\n" + "      \\"aggregations\\" : {\\n" + "        \\"source\\" : {\\n" + "          \\"terms\\" : {\\n" + "            \\"field\\" : \\"dc:source\\",\\n" + "            \\"size\\" : 10,\\n" + "            \\"min_doc_count\\" : 10,\\n" + "            \\"order\\" : {\\n" + "              \\"_count\\" : \\"asc\\"\\n" + "            },\\n" + "
16940	assertEqualsStoreParams ( paramsExpected, paramsActual )
16941	assertDegenerate ( scan )
16942	Assert. assertEquals ( 5, loc )
16943	Assert. assertEquals ( "select a,(select a,b from d where b=1 ", SqlObject. removeOrderBy ( sql ) )
16944	TestUtil. assertSuccess ( testResultWriter )
16945	Assert. assertEquals ( "logger", pl. getPluginName ( ) )
16946	assertNotNull ( National. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "US" ). read ( ) )
16947	assertEquals ( expResult, result )
16948	assertThat ( formatter. format ( PlainDate. of ( 1582, 10, 14 ) ), is ( "AD 1582-10-14 (Q4)" ) )
16949	assertEquals ( getExpectedSchemaAndValue ( Schema. OPTIONAL_BOOLEAN_SCHEMA, expectedValue, expectedName ), result )
16950	assertEquals ( post, posts [ 2 ] )
16951	assertEquals ( input, output )
16952	assertEquals ( expected, actualQuery )
16953	assertEquals ( 1, ksession. fireAllRules ( ) )
16954	assertEquals ( PersonGenderCodeType. UNKNOWN, output. getRegularCPRPerson ( ). getPersonGenderCode ( ) )
16955	assertNotNull ( basicBean )
16956	assertNoCause ( "message" )
16957	AssertJUnit. assertEquals ( "lijz", ret )
16958	mockEndpoint. assertIsSatisfied ( )
16959	Assert. assertEquals ( "Hello World", ejbInstance. sayHello ( ) )
16960	TestCase. assertEquals ( 1, result )
16961	assertEquals ( "Generic Error.", message )
16962	iterables. assertContainsExactlyInAnyOrder ( info, actual, expected )
16963	assertEquals ( typicalPrice, typicalPriceIndicator. getValue ( i ) )
16964	assertEquals ( "Base for strings is wrong", "192.168.0.1", parsed )
16965	assertThat ( actualExceptionLevel, is ( expectedExceptionLevel ) )
16966	assertEquals ( null, acualValue )
16967	assertEquals ( r1, r2 )
16968	Assert. assertFalse ( seen. contains ( pet1 ) )
16969	assertEquals ( check. getValue ( ), actual )
16970	assertEquals ( "SuccessHello", StateHolder. get ( ) )
16971	Assert. fail ( "createErrorProbabilities(null) expected IllegalArgumentException" )
16972	assertTrue ( output, output. matches ( "(?s).*Invalid object name.*" ) )
16973	assertEquals ( expectedAutoExpireDate, drugOrder. getAutoExpireDate ( ) )
16974	assertRoundtrip ( input )
16975	assertThat ( anyTS. isValid ( MILLI_OF_DAY, 86399999 ), is ( true ) )
16976	assertToString ( fromExpr ( "Hello", f. newMethodInvocationExpression ( null, Collections. emptyList ( ), f. newSimpleName ( "asList" ), Arrays. asList ( Models. toLiteral ( f, "Hello, world!" ) ) ) ), "Hello", "[Hello, world!]" )
16977	assertThat ( output, containsString ( "HL7v2 message created: " ) )
16978	assertEquals ( 1, ksession. fireAllRules ( ) )
16979	assertEquals ( dao. getCountAll ( ), 0 )
16980	assertEquals ( 204, result. getStatusCode ( ) )
16981	assertNotNull ( ple )
16982	assertThat ( values, is ( empty ( ) ) )
16983	Assert. assertEquals ( TestModuleFactory. class, moduleFactory. getClass ( ) )
16984	assertTrue ( strategy. isCrawable ( url, 2 ) )
16985	assertEquals ( true, CollectionUtils. isEmpty ( coll ) )
16986	assertEquals ( 1000L * ( ( inUserCount + 1 ) * inUserPeriod + inUserCount * flightTime ), thread. getEndTime ( ) - thread. getStartTime ( ) )
16987	assertNull ( cause )
16988	assertEquals ( roleListWrapper, userRoleResource. getRoles ( ) )
16989	Assert. assertEquals ( "Unexpected distinct name", "simple-foo-bar", ejbJarMetaData. getDistinctName ( ) )
16990	assertEquals ( "<p>Hello</p>", doc. getElementsByTag ( "div" ). get ( 0 ). html ( ) )
16991	assertNotNull ( result )
16992	assertFailureKeys ( "expected", "but was" )
16993	assertEquals ( frameData, frameData )
16994	assertEquals ( 1, newSize - initialSize )
16995	Assert. assertTrue ( res. booleanValue ( ) )
16996	assertEquals ( "------------ Response ------------\\n    null\\n\\n------------ Body ------------\\nnull\\n\\n", result )
16997	assertThat ( engine. evaluate ( TESTSUITE_NAME_ATTRIBUTE, document ). length ( ), is ( not ( 0 ) ) )
16998	assertFalse ( d instanceof Cloneable )
16999	assertNotNull ( e )
17000	assertTrue ( topic. isHasUpdates ( ) )
17001	assertEquals ( 200, status. getStatusLine ( ). getStatusCode ( ) )
17002	assertEquals ( Constants. DWC_ROWTYPE_TAXON, resource. getCoreRowType ( ) )
17003	Assert. assertThat ( QueryBuilder. getInstance ( ). buildFilterQuery ( co, "", 0, 0, 1, 0, null ), equalTo ( expected ) )
17004	assertEquals ( revision, currentRevision )
17005	Assert. assertEquals ( extractor. generateKey ( host, req1 ), extractor. generateKey ( host, req2 ) )
17006	assertMissingFilesError ( )
17007	assertEquals ( "<html><head><script></script><noscript></noscript></head><frameset><frame src=\\"foo\\" /><frame src=\\"foo\\" /></frameset></html>", TextUtil. stripNewlines ( doc. html ( ) ) )
17008	assertResultSet ( fc. getMembers ( filter, new TypedObjectNodeXPathEvaluator ( ) ), "PHILOSOPHER_1" )
17009	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
17010	assertEquals ( 0x7777777777777777L, frame. getLong ( ) )
17011	assertEquals ( test. toString ( ), test. resultExpected, res )
17012	assertThat ( result. getId ( ), is ( notNullValue ( ) ) )
17013	assertTrue ( Arrays. equals ( expectedResult, buffer. array ( ) ) )
17014	assertThat ( rendered, is ( test [ 1 ] ) )
17015	assertThat ( hasJsonPath. matchesSafely ( json ), is ( false ) )
17016	assertEquals ( response. asString ( ), FAILED, response. get ( OUTCOME ). asString ( ) )
17017	assertEquals ( comment, newId3tag. getItunesComment ( ) )
17018	assertNoViolations ( constraintViolations )
17019	assertThat ( specificResourceAllocation. getAssignments ( ), haveHours ( 4, 8, 4, 8 ) )
17020	assertThat ( markedWord, is ( "louper" ) )
17021	assertTrue ( observer. waitForSentCalls ( 1, 1, TimeUnit. SECONDS ) )
17022	assertSame ( instance, instance2 )
17023	assertEquals ( VALUE, value )
17024	assertTrue ( "SecurityConstraint is expected to be deployed as provider", everrestApplication. getSingletons ( ). stream ( ). filter ( e -> e instanceof SecurityConstraint ). count ( ) == 1 )
17025	assertThat ( cache. getHostname ( ), is ( EventBuilder. DEFAULT_HOSTNAME ) )
17026	assertThat ( list. size ( ), is ( 0 ) )
17027	Asserts. check ( targetHosts. size ( ) > 0, "fail test" )
17028	assertThat ( asset, is ( mockAsset ) )
17029	assertTrue ( "timestamp equal to zero?", timestamp > 0 )
17030	Assert. assertEquals ( cpf, eventoRetorno. getCpf ( ) )
17031	Assert. assertFalse ( "There are no sequencer runs!", runs. isEmpty ( ) )
17032	assertNotNull ( response )
17033	assertThat ( auth. createSaslClient ( credential, null ), instanceOf ( ScramSaslClient. class ) )
17034	assertThat ( builder. toString ( ), is ( "abcdefgh" ) )
17035	Assert. assertFalse ( "Only invoices are supported for write-off", executed )
17036	assertThat ( t. getName ( ), is ( "maven-surefire-plugin@NotThreadSafe" ) )
17037	Assert. assertThat ( list, Is. is ( Arrays. asList ( "1", "1_1", "1_2", "1_3", "1_4", "2_1", "2_2", "2_3", "2_4", "3", "4", "5", "6", "7" ) ) )
17038	assertEquals ( 100, results. size ( ) )
17039	assertNotNull ( result )
17040	assertThat ( content. getNodeAt ( "/Cars/Hybrid/Toyota Prius" ). getProperty ( "msrp" ). getFirstValue ( ), is ( ( Object ) "$21,500" ) )
17041	assertThat ( FloatTypeValidator. INSTANCE. validate ( parameters, "aaa" ), is ( "Aaa must be a float." ) )
17042	assertTrue ( match == null )
17043	assertEquals ( 2, count )
17044	Assert. assertEquals ( "'", HtmlToXMLUtil. unescapeToXML ( testString ) )
17045	assertPlanMatches ( expected )
17046	assertEquals ( response. getStatus ( ), 500 )
17047	assertEquals ( 0.43, x. getValue ( ) )
17048	assertEquals ( new QName ( "http://winery.opentosca.org/test/artifacttypes", "MiniArtifactType" ), new QName ( typeForTemplate. getTargetNamespace ( ), typeForTemplate. getName ( ) ) )
17049	assertEquals ( assertion, matrix )
17050	assertEquals ( msg, redis. bgsave ( ) )
17051	assertNotNull ( "I have some records inside the schema", records )
17052	Assert. assertEquals ( "M盲rz", month )
17053	assertEquals ( NullType. Nullable, db. getMetadataStore ( ). getDatatypes ( ). get ( "text" ). getNullType ( ) )
17054	assertThat ( this. support. getAllSelectedOptions ( webElement ), is ( equalTo ( "select1.getAllSelectedOptions()" ) ) )
17055	assertOnResponseAttachment ( f3gbServer, MAX_SIZE2 )
17056	assertThat ( ISO8601DateTimeParser. yearMonthDay ( "2015-03-31" ). withZone ( dateTimeZone ). toString ( ), startsWith ( "2015-03-31T" ) )
17057	assertTrue ( theSelectedPoolsWere ( allPoolsNotOnSameHostAsSource ( ) ) )
17058	assertEquals ( expected, actual )
17059	assertEquals ( "HTTP/1.1 404 Not Found", sb. toString ( ). trim ( ) )
17060	assertEquals ( true, bm. isBitSet ( bitNumber ) )
17061	assertThat ( steps, is ( notNullValue ( ) ) )
17062	assertEquals ( 1, persistence. getAllManagers ( ). size ( ) )
17063	assertTrue ( deps. size ( ) == 66 )
17064	assertEqualsIgnoreLineEnding ( Json. pretty ( rep ), "{\\n" + "  \\"unboundedInteger\\" : 4321\\n" + "}" )
17065	assertEquals ( "Token[, ]", result )
17066	assertPostCodegenRules ( mojo )
17067	Assert. assertEquals ( 2, list. size ( ) )
17068	Assert. assertEquals ( 1, observations. size ( ) )
17069	assertTrue ( descriptor. isTypeConstrained ( ) )
17070	assertSame ( plots. get ( 0 ), plot1 )
17071	assertEquals ( "Barninger", object. getString ( "lastname" ) )
17072	assertThat ( this. subject, is ( not ( otherUser ) ) )
17073	assertEquals ( "100000", String. valueOf ( Integer. parseInt ( result ) + rejected ) )
17074	assertIsAborted ( tx )
17075	assertEquals ( 1, command. getMcCounter ( ) )
17076	assertNotNull ( uaiCriteria )
17077	Assert. assertEquals ( 10, generatedTests. size ( ) )
17078	Assert. assertEquals ( "SELECT mvalue FROM metadata WHERE mkey ='version';", queryVersion )
17079	assertEquals ( Arrays. asList ( "\\r", "\\r", "\\r\\n", "\\n", "\\n", "\\r\\n" ), lines )
17080	Assert. assertTrue ( "Menu should contain a seperator", menuBar. getMenuItems ( ). get ( 0 ) instanceof WSeparator )
17081	assertTrue ( "No top rated movies found",! results. isEmpty ( ) )
17082	assertTrue ( executeTestMethod ( test, Boolean. class, null, Boolean. TRUE ). booleanValue ( ) )
17083	assertThat ( date. with ( YEAR_OF_WEEKDATE, 1996 ), is ( PlainDate. of ( 1996, 1, 2 ) ) )
17084	Assert. assertEquals ( interestingness, sut. computeInterestingness ( activity ) )
17085	assertEquals ( 0, server. getCalls ( ). size ( ) )
17086	assertEquals ( 1, count. get ( ) )
17087	MatcherAssert. assertThat ( values, Matchers. contains ( "VALUE1", "VALUE2" ) )
17088	Assert. assertFalse ( patientService. isIdentifierInUseByAnotherPatient ( patientIdentifier ) )
17089	assertEquals ( 1, map. size ( ) )
17090	assertTrue ( "locator not expired from cache",! locatorCache. isLocatorCurrentInBatchLayer ( LOCATOR ) )
17091	assertEquals ( "substring(cat.name,locate(?1,cat.name)-1 +?2)", serializer. toString ( ) )
17092	assertEquals ( 3.7599806708583481, bo. value ( 0.0 ), 1e-8 )
17093	assertEquals ( 1, testResult )
17094	Assert. assertEquals ( 2, response. getTotalHits ( ). value )
17095	assertNotNull ( result )
17096	assertEquals ( 0x0000002d, s. m0_0 ( ) )
17097	Assert. assertNotNull ( vmComponent )
17098	assertEquals ( "next node must be node2", node2, currentRouter. getNextNode ( msg ) )
17099	assertEquals ( expectedEnv, env )
17100	assertSame ( expected, CRest. getOAuthInstance ( "a", "b", "c", "d", "e", "f" ) )
17101	assertEquals ( expecting, result )
17102	Assert. assertEquals ( expectedManifest, actualManifest. replaceAll ( "\\r", "" ). trim ( ) )
17103	assertThat ( "Width of color picker is overridden by " + "default caption feature", width, is ( greaterThan ( 149 ) ) )
17104	assertNotNull ( room1. getId ( ) )
17105	assertEventsEquals ( expectedEvent, getOnlyElement ( events ) )
17106	assertEquals ( expected, bos. toString ( ) )
17107	assertTrue ( "Connection closed, shutdown listeners should have been called", latch. await ( 1, TimeUnit. SECONDS ) )
17108	assertTrue ( session. markRecordAsRead ( epoch, 2 ) )
17109	assertEquals ( "Root NSEC SOA and without DS must be secure", SecurityStatus. SECURE, s )
17110	assertEquals ( _expected, new String ( out. toByteArray ( ) ) )
17111	assertNotNull ( Alert. fetcher ( "NOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
17112	Assert. assertTrue ( "The response entity didn't contain the string 'testdir'", str. indexOf ( "testdir" ) >= 0 )
17113	assertEquals ( 800000000, result )
17114	assertEquals ( WstxParsingException. class, e. getCause ( ). getClass ( ) )
17115	assertThat ( c. value, is ( "aaa" ) )
17116	assertTrue ( adapter. getArtifact ( ). isOptional ( ) )
17117	assertEquals ( expected, output )
17118	Assert. assertEquals ( "Expect a nd b to be unselected", SELECTED_A_B, multi. getNotSelected ( ) )
17119	assertEquals ( 1, list. size ( ) )
17120	assertTrue ( r. isSuccess ( ) )
17121	assertThat ( validationList, is ( Collections. < String > emptyList ( ) ) )
17122	assertEquals ( 0, violations. size ( ) )
17123	assertEquals ( "[Test] expecting:\\n<['Yoda', 'Luke']> to start with:<['Han', 'Leia']>", message )
17124	Assert. assertEquals ( Response. Status. NO_CONTENT. getStatusCode ( ), status )
17125	assertTrue ( transform instanceof Modifier. Definr )
17126	assertEquals ( unQuotedString, ocsvTransformer. getCellContent ( doubleQuotedString ) )
17127	assertStat ( result )
17128	assertEquals ( 1403602380000L, getTimeWithoutZoneOffset ( format. parse ( "1406240933" ) ) )
17129	assertTrue ( "Incorrect result: " + result, result == 1 )
17130	assertEquals ( profile. startPort, result. startPort )
17131	assertNull ( probe )
17132	assertEquals ( expResult, result )
17133	assertTrue ( es2. hasInserted )
17134	assertThat ( augmented. relationshipToOrdinaries ( ), hasItem ( ordinary ) )
17135	assertThat ( given. getScreenshots ( ). size ( ), greaterThan ( 0 ) )
17136	assertEquals ( workflow. getID ( ), "defaultWorkflow" )
17137	assertTrue ( uvp. getFirstData ( ) ==.0 )
17138	Assert. assertNotNull ( jsonPatch )
17139	Assert. assertTrue ( result. isTestBoolean ( ) )
17140	assertEquals ( "Failed on iteration " + i, z1, z2 )
17141	Assert. assertEquals ( 85814, distinct )
17142	assertThat ( sd. toString ( ), is ( "a JSON object matching JSONpath \\"$.foo\\"" ) )
17143	assertThat ( actualSubsets, IsIterableContainingInAnyOrder. containsInAnyOrder ( fixture. getExpectedSubsetsFromQuery ( ) ) )
17144	assertEquals ( "join - <(join <(" + cat + " file1) <(" + cat + " file2)) <(" + cat + " file3)", p2. render ( ) )
17145	assertTrue ( bw > 0 )
17146	assertEquals ( expResult, result )
17147	assertTrue ( condition. matches ( testEvent ) )
17148	assertSame ( connection, incrementPoolOnTimeoutConnectionAcquiringStrategy. getConnection ( connectionRequestContext ) )
17149	assertEquals ( "anonymous class", myColumn. toString ( ) )
17150	Assert. assertArrayEquals ( new char [ ] { 'a', 'b', 'c' }, stringAppender. getChars ( 0, 3 ) )
17151	assertNotNull ( result )
17152	assertEquals ( "a", book. getName ( ) )
17153	assertEquals ( src, dst )
17154	Assert. assertTrue ( langs. size ( ) > 100 )
17155	mongoDbChecker. assertThatConnectionIsPossible ( anyString ( ), anyInt ( ) )
17156	assertArrayEquals ( NOT_ENCODED, binary, encode ( object ) )
17157	Assert. assertTrue ( "The " + ext + " file extensions in " + lang1 + " was already used", lang2 == null || lang1 == lang2 )
17158	assertEquals ( "Volgon-Swatter Prefect", sut. execute ( "fordp" ) )
17159	assertEquals ( "", t )
17160	get ( "/internalError" ). then ( ). assertThat ( )
17161	assertTrue ( actualDataFlavour. length > 0 )
17162	assertions. isEqualTo ( "some value" )
17163	assertInsert ( INSERT_ARRAY_TYPES_STMT, 1, schemasAndValuesForArrayTypes ( ) )
17164	assertThat ( hijri. with ( CommonElements. weekOfYear ( HijriCalendar. family ( ), model ). atFloor ( ) ), is ( expected ) )
17165	assertNotNull ( request. getSession ( ). getAttribute ( Constants. PREFERRED_LOCALE_KEY ) )
17166	assertEquals ( merging, policy. merge ( "map", entryMerging, entryExisting ) )
17167	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><xxxxxx/>", result. getResult ( ) )
17168	assertNull ( node. get ( "entityInfo" ). get ( "hooks" ) )
17169	assertIsUnchecked ( botTestPage. checkBox2WebComponentExtended )
17170	assertFalse ( result )
17171	assertThat ( findFeature ( features, "ClearCache" ), is ( instanceOf ( ClearCacheFeature. class ) ) )
17172	assertEquals ( expectedQuery, actualQuery )
17173	assertThat ( completedHistoricActivityInstances. size ( ), is ( 3 ) )
17174	assertEquals ( "aTestString", classUnderTest. getCatalogFilterInclude ( ) )
17175	assertAccount ( userAfter, RESOURCE_DUMMY_CLASSIFIER_OID )
17176	Assert. fail ( "Found class where none should exist" )
17177	Assert. assertEquals ( "{\\"@odata.context\\":\\"$metadata#ESMixEnumDefCollComp/$entity\\"," + "\\"@odata.metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\"," + "\\"PropertyEnumString\\":\\"String2,String3\\"," + "\\"CollPropertyEnumString\\":[]," + "\\"PropertyDefString\\":\\"Test\\"," + "\\"CollPropertyDefString\\":[]," + "\\"PropertyCompMixedEnumDef\\":null," + "\\"CollPropertyCompMixedEnumDef\\":[]}", resultString )
17178	assertTrue ( latch. await ( 15, TimeUnit. SECONDS ) )
17179	assertTrue ( victim. isIncrementalBuild ( ) )
17180	assertEquals ( false, testTx. isShortLived ( ) )
17181	Assert. assertNull ( "Password is not null", redisURI. password ( ) )
17182	assertEquals ( expectedValues, actualValues )
17183	assertNotNull ( result )
17184	Assert. assertEquals ( "<th>type</th> \\n" + "<th>name</th> \\n" + "<th>website</th>", title )
17185	assertThat ( target. parse ( ), is ( false ) )
17186	assertEquals ( "UserFeedData [id=, profilePictureUrl=, userName=, fullName=, website=, bio=]", result )
17187	assertThat ( count, is ( 2L ) )
17188	assertEquals ( WORKER_NUMBER, set. size ( ) )
17189	assertTrue ( "Route node fetched correctly", rn!= null && StringUtils. equals ( routeNodeId, rn. getRouteNodeId ( ) ) )
17190	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getPrivileges ( set ( "job1_2_operator" ), ActiveRoleSet. ALL ) ). toString ( ) )
17191	assertSQLException ( statement :: executeBatch )
17192	Assert. assertFalse ( file. isDirectory ( ) )
17193	assertThat ( the ( name, be ( equalTo ( "Alex" ) ). and ( be ( startsWith ( "B" ) ) ). or ( be ( startsWith ( "C" ) ) ) ), is ( false ) )
17194	assertEquals ( lovedTracks, dbLovedTracks )
17195	Assert. assertEquals ( ( Integer ) 443, port )
17196	Assert. assertEquals ( 3, allServices. size ( ) )
17197	JsonPathAssert. assertThat ( doc )
17198	assertTrue ( result. get ( 0 ) )
17199	Assert. assertThat ( item. isNullValue ( "isNull" ), is ( true ) )
17200	assertTrue ( builder. build ( ). getAdaptationConfig ( ). isAdaptationEnabled ( ) )
17201	this. assertServiceInstanceGetRequest ( serviceInstance, true, "in progress" )
17202	assertEquals ( tknzn. getTokens ( ). length, 0 )
17203	Assert. assertEquals ( OBJECT, clone )
17204	assertEquals ( title, d_threeArmModel. getTitle ( ) )
17205	assertEquals ( 0, mTestDir1. getAvailableBytes ( ) )
17206	assertEquals ( "Locally updated value", ( Integer ) 10, localState. commit ( globalState ). deref ( ) )
17207	assertThat ( after, is ( "2->3->3->4->5->8->NULL" ) )
17208	assertEquals ( 2, FastMath. exp ( chart. getLogPartitionFunction ( ) ), 1e-3 )
17209	Assert. assertEquals ( localDate. toString ( ddMMMyyyy, Locale. ENGLISH ), "25-Oct-2013" )
17210	Assert. assertTrue ( "Test isAttributePresent returns true", element. isAttributePresent ( "randomAttrib" ) )
17211	assertTrue ( "hasNext should return false",! loop. hasNext ( ) )
17212	Assert. assertArrayEquals ( ENCODED_VALUE, byteOutputStream. toByteArray ( ) )
17213	assertEquals ( response. getStatus ( ), 200 )
17214	Assert. assertEquals ( "[\\"\\",\\"abc\\",\\"\\\\b\\\\f\\\\n\\\\r\\\\t\\",\\"\\\\\\"\\",\\"\\\\\\\\\\",\\"\\\\u001F\\"]", writer. toString ( ) )
17215	assertTrue ( "Cleanup not called", cleanupCalled [ 0 ] )
17216	assertEquals ( "The unique value in the collection", "unique", Utils. getUnique ( col ) )
17217	Assert. assertEquals ( "org.wildfly.arquillian:wildfly-arquillian-container-domain-managed:2.2.0.Final", adapter. dependencies ( ) [ 0 ] )
17218	assertTrue ( authorizer. isAuthorized ( context, profiles ) )
17219	assertNull ( lock )
17220	assertEquals ( "http://localhost:" + ourPort + "/fhir/Patient?_revinclude=Provenance%3Atarget&_format=json", ourRequestUri )
17221	assertThat ( array2, nullValue ( ) )
17222	assertThat ( renderer. getShortForm ( entity ), is ( "xsd:unsignedByte" ) )
17223	assertEquals ( true, lineArgs. isClearCacheAfterRowWrite ( ) )
17224	assertThat ( jsonOutputStreamParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/jsonmarshallertest/testServerName.json" ) ) )
17225	assertEquals ( mockDatabaseObjectInfo, classUnderTest. getRelatedObjectInfo ( ) )
17226	assertEquals ( 608512271, checksum )
17227	assertEquals ( "<b></b><b>bbb</b><table><tbody><tr><td>aaa</td></tr></tbody></table><b>ccc</b>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
17228	assertEquals ( jsonResponse. getStatus ( ), JsonResponseStatus. SUCCESS )
17229	assertEquals ( expected, actual )
17230	assertNotNull ( requestToken )
17231	assertEquals ( "incorrect no of objects returned", 1, genericManager. deleteAllByPropertyValue ( property, value ) )
17232	assertThat ( mojo. mavenProjectFor ( "updating-the-version" ). getVersion ( ), is ( "1.7.2-build.2.sha.16f0eb28" ) )
17233	assertThat ( confirmationCode, validCodeFormat ( ) )
17234	Assert. assertFalse ( signatureUtil. signatureCoversWholeDocument ( "Signature1" ) )
17235	assertSame ( expected, actual )
17236	assertNotNull ( certificate )
17237	Assert. assertEquals ( "(nt_string CGAT)", nt_string. toStringTree ( parser ) )
17238	Assert. assertEquals ( 42. * 2., analyser. getVariableTransportCostsAtActivity ( route. getEnd ( ), route ), 0.01 )
17239	assertEquals ( expected, actual )
17240	assertNull ( dsg. getGraph ( gn ) )
17241	Assert. assertEquals ( expectedRanges, actualRanges )
17242	assertEquals ( i, new ReadOnlyOneBitSet ( i ). cardinality ( ) )
17243	assertEquals ( "Change set number was incorrect", "", changesetNumber )
17244	assertTrue ( errors. equals ( noErrors ) )
17245	assertEquals ( dmatrix [ i ] [ j ], diag [ 0 ] [ i ], epsilon )
17246	assertFalse ( "The provider incorrectly handles null values.", instance. canProvide ( Errors. class ) )
17247	assertEquals ( "token 1\\ntoken 1\\n", found )
17248	Assert. fail ( "Test should fail, user shouldn't be allowed to invoke that method" )
17249	assertEquals ( - 11234.345f, executeTestMethod ( test, Float. class, null, - 11234.345f ). floatValue ( ), 0.0f )
17250	assertEquals ( reference, output, mapContentType ( fFormat ) )
17251	Assert. assertThat ( serverHelper. establishedServerSession. getPeer ( ), is ( clientEndpoint ) )
17252	assertEquals ( ( Character ) Character. MAX_VALUE, extractedChar )
17253	Assert. assertFalse ( result. contains ( Double. POSITIVE_INFINITY ) )
17254	assertEquals ( 1, list. size ( ) )
17255	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
17256	Assert. assertFalse ( "did not get results", metadataElements. isEmpty ( ) )
17257	assertEquals ( 0, delete. execute ( ) )
17258	assertTrue ( obj instanceof String )
17259	context. assertIsSatisfied ( )
17260	assertEquals ( newArrayList ( new AcceptToken ( "*" ) ), charsetList )
17261	assertWindowSizeIsIdeal ( from, to, idealWindowSize )
17262	assertNotEquals ( expResult, result )
17263	assertEquals ( "11.1.10", result )
17264	assertTrue ( result. contains ( "jentrata/bin" ) )
17265	assertEquals ( "Wrong var-len encoded value read.", val, read )
17266	assertEquals ( "SELECT E1 FROM SalesOrderHeader E1 WHERE E1.soID >= 1234", jpqlSelectStatementBuilder. build ( ). toString ( ) )
17267	assertEquals ( "123", converter. getAsString ( facesContext, new UIPanel ( ), "123" ) )
17268	assertEquals ( 0, song. getTrack ( ) )
17269	Assert. assertTrue ( children. size ( ) > 0 )
17270	assertEquals ( "Invalid random bytes", size, new Random ( ). randomBytes ( ). length )
17271	Assert. assertEquals ( expectedIds, actual )
17272	assertEquals ( 1, builder. build ( ). getElementValues ( ). size ( ) )
17273	Assert. assertNull ( result )
17274	Assert. assertNull ( this. mocker. getComponentUnderTest ( ). getAllConsentsForPatient ( "P0123456" ) )
17275	assertThat ( resource, is ( equalTo ( method ) ) )
17276	assertThat ( secondPage. getUrl ( ). toString ( ), endsWith ( "/page/foo%20bar?query=foo+bar" ) )
17277	assertEquals ( "Mike Tesla", name )
17278	assertArrayEquals ( arr. shape ( ), new long [ ] { 3, 2, 2 } )
17279	Assert. assertTrue ( "did not read back any data", dataRead )
17280	assertROIEquivalent ( g, shape, "Checkerboard" )
17281	assertEquals ( "http://ipt.gbif.org/resource?id=ants", cfg. getResourceGuid ( "ants" ) )
17282	assertNull ( "", column )
17283	assertEquals ( document, mapper. readValue ( JSON_ITEM_STATEMENTS, ItemDocumentImpl. class ) )
17284	assertThat ( getServers ( ), containsInAnyOrder ( "wls1", "wls3" ) )
17285	assertEquals ( asSet ( "firstRegion" ), resolvedIds )
17286	Assert. assertEquals ( "18", calculator. toString ( ) )
17287	assertTrue ( page. asXml ( ). indexOf ( "&lt;script&gt;alert('mytest');&lt;/script&gt;" )!= - 1 )
17288	Assert. assertNotNull ( doc )
17289	assertEquals ( 1, v1. query ( ). direction ( Direction. OUT ). has ( "edgeProp1" ). count ( ) )
17290	assertDelete ( newZipFile )
17291	assertNotNull ( response. getGetMediaMetadataResult ( ) )
17292	assertQuery ( "//*[(jcr:like(@prop, 'aaa%') and jcr:like(@prop, 'bbb%') and jcr:like(@prop, 'ccc%'))]", "xpath", ImmutableList. of ( "/content/two" ) )
17293	assertEquals ( expected, TestUtils. findMetadata ( clz ) )
17294	assertThat ( captor. getValue ( ), StringContains. containsString ( "search-type - Patient -?_id=1" ) )
17295	assertEquals ( Arrays. asList ( lengthColumn, objectColumn, randomColumn ), grid. getColumns ( ) )
17296	assertThat ( fieldError, is ( nullValue ( ) ) )
17297	assertNotNull ( result )
17298	assertNotNull ( result )
17299	assertFalse ( or. isDefined ( ) )
17300	assertEquals ( "Expected 0 results!", 0, n )
17301	Assert. fail ( "build listing failure" )
17302	assertTrue ( jobService. getExecutionStatus ( namespace, jobName ). isEmpty ( ) )
17303	assertThat ( unknownUser, is ( not ( present ( ) ) ) )
17304	assertThat ( response. getHeaders ( ), hasEntry ( "Server", "server-name" ) )
17305	assertNotNull ( inputWriteOperation )
17306	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
17307	Assert. assertEquals ( "1 year ago", t. format ( c ) )
17308	assertThatTestCaseObeysOracle ( 16 )
17309	assertOut ( "var a:Number = Infinity" )
17310	assertEquals ( body. toString ( ), "123" )
17311	Assert. fail ( buildExceptionMessage ( "Reset identity do not affect the method invoke on the service", testInstance. deviceTestManager. client ) )
17312	validator. assertTestSuiteResults ( 5, 0, 0, 0 )
17313	Assert. assertEquals ( expected, builder. toString ( ). replaceAll ( "\\\\s+", "" ) )
17314	assertEquals ( this. urlConnection. getRealURL ( ). getPath ( ), "/rest/v1/" + this. sauceREST. getUsername ( ) + "/tunnels" )
17315	assertEquals ( Arrays. asList ( "http://somelink", "" ), new JsonLinkConsumer ( ). readLinks ( reader, null ) )
17316	assertTrue ( resultSq == Position. NOPOSITION )
17317	assertTrue ( "Similarity must be positive, this must be an integer overflow bug!", aligner. getSimilarity ( ) > 0 )
17318	assertTrue ( "the notification handler did receive the notification", handler. getNotifications ( ). isEmpty ( ) )
17319	assertEquals ( stuff, Tools. fromHtml ( Tools. toHtml ( stuff ) ) )
17320	assertTrue ( "Should have received publisher confirm", latch. await ( 1, TimeUnit. SECONDS ) )
17321	assertEquals ( "variableKey", result )
17322	Assert. assertEquals ( 2, count )
17323	assertThat ( target. parse ( ), is ( false ) )
17324	assertEquals ( "Found attributes", 0, iteratorSize ( it ) )
17325	assertEquals ( ace, parsed )
17326	Assert. assertEquals ( 2, jsonCategories. length ( ) )
17327	this. assertGet ( "artifacttypes/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fartifacttypes%252Ffruits/JAR/inheritance", "entitytypes/artifacttypes/jar_initial_inheritance.json" )
17328	Assert. assertEquals ( "/Value", WebUtil. getContextPath ( ) )
17329	assertTrue ( messageProcessed. await ( 2, TimeUnit. SECONDS ) )
17330	assertEquals ( "[�ユ������|japanese food]��涓��с��[涓���|first and foremost][缇��炽����|tasty]����[��瀵垮��|sushi][���ㄦ�����俱��|i think]������[�ユ��|japan]��甯般�������с�
17331	assertSame ( shouldFind, selection. radio ( By. id ( "test" ) ) )
17332	assertTrue ( results. get ( 0 ). getContentReference ( ). getSize ( ) > 10 )
17333	assertEquals ( "one", ( String ) event. getField ( "$.arr[0]" ) )
17334	Assert. assertTrue ( result )
17335	assertIterators ( Collections. EMPTY_LIST, allMatchingQueryParamsFilter )
17336	assertSqlCanBeParsedAndDeparsed ( stmt )
17337	assertThat ( configuration. get ( ), is ( expectedSelector ) )
17338	Assert. assertEquals ( "Connect failed: Connection refused", dMsg )
17339	assertEquals ( 1, vehicles. size ( ) )
17340	Assert. assertEquals ( "fffd", hexes. get ( 0 ) )
17341	assertEquals ( 2, query. getResultCount ( ) )
17342	Assert. assertArrayEquals ( encodedValue, byteOutputStream. toByteArray ( ) )
17343	assertThat ( f. format ( m ), is ( "Amete Mihret, 2008-03-09 09:45 pm +03:00" ) )
17344	assertEquals ( "Invalid response", validatedResponse, ( ( SaajSoapMessage ) context. getResponse ( ) ). getSaajMessage ( ) )
17345	assertEquals ( "(((dependencyBuilder.combine(\\"A\\",\\"B\\").build()) && (dependencyBuilder.input(\\"C\\").build()" + " || dependencyBuilder.input(\\"D\\").build())) && (dependencyBuilder.combine(\\"E\\",\\"F\\").build()))", inputLogicParser. parse ( root ) )
17346	Assert. isTrue ( roles. size ( ) > 0 )
17347	assertEquals ( 20, maxResults )
17348	assertEquals ( "Parent should only have one mutation event (remove slot)", 1, mutationEvents. intValue ( ) )
17349	assertEquals ( "IDX", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
17350	assertTrue ( verify )
17351	assertEventFired ( DeployDeployment. class, 0 )
17352	Assert. assertNotNull ( poolStatistics )
17353	assertTrue ( "expected ConstraintViolationException but got " + constraintViolationException, constraintViolationException instanceof ConstraintViolationException )
17354	assertEquals ( 1, selectCovered ( mergeCAs. getCas ( ), type, 0, 0 ). size ( ) )
17355	assertTrue ( mconn. getOpenTime ( ) > 0 && mconn. getOpenTime ( ) <= System. currentTimeMillis ( ) )
17356	assertEquals ( "a", render )
17357	assertTrue ( ( RedditScope. EDIT. value ( ) + RedditScope. SEPARATOR + RedditScope. FLAIR. value ( ) ). equals ( builder. build ( ) ) || ( RedditScope. FLAIR. value ( ) + RedditScope. SEPARATOR + RedditScope. EDIT. value ( ) ). equals ( builder. build ( ) ) )
17358	Assert. assertEquals ( sql, expected. replaceAll ( "#ALIAS#", EntityMetaDataCache. getMetaData ( RestrictionTestEntity. class ). getAlias ( ) ) )
17359	assertAllSerializable ( classToTest, 1 )
17360	assertEquals ( 0, list. size ( ) )
17361	assertEquals ( Timestamp. valueOf ( "2013-03-27 23:18:40.123456" ), jstOi. getPrimitiveJavaObject ( result. get ( "five" ) ) )
17362	assertNotFound ( client. executePost ( "/foo", "incorrect", ContentType. TEXT_PLAIN ) )
17363	assertNotSame ( va, vA )
17364	assertTrue ( "syntaxChecker should still be in the registry after move failure", schemaManager. getSyntaxCheckerRegistry ( ). contains ( OID ) )
17365	tc. assertNotNull ( post1. getId ( ) )
17366	assertEquals ( Boolean. FALSE, statement. getOnlyUpdate ( ) )
17367	assertEquals ( 0, tasks. size ( ) )
17368	assertTrue ( page. asXml ( ). contains ( "IllegalStateException: true" ) )
17369	assertEquals ( 1, exts. size ( ) )
17370	assertTrue ( "The line numbers should be same", expectedLineNumber == Integer. parseInt ( result ) )
17371	assertThat ( "default OS", sut. getOs ( ), is ( equalTo ( VM. DEFAULT_OS ) ) )
17372	Assert. assertNotNull ( commands )
17373	Assert. assertEquals ( "An error message should be provided when no message is specified ", IoutputFormatVisitor. DEFAULT_ERROR_MESSAGE, geolocErrorVisitor. getErrorMessage ( ) )
17374	assertEquals ( "#test{width:100px}#test2{width:100px}", minified )
17375	assertFalse ( clientConnection2Closed. isDone ( ) || serverConnection2Closed. isDone ( ) )
17376	assertNotNull ( jobProperties )
17377	assertEquals ( "Clock should've returned fake time", fakeTime, clock )
17378	assertThat ( name. hashCode ( ), is ( other. hashCode ( ) ) )
17379	assertEquals ( 0, rc. acceptableLanguages ( ). size ( ) )
17380	assertTrue ( result. contains ( "\\"1-0-v0\\":{\\"type\\":\\"LCD\\",\\"values\\":[\\"1\\"]}" ) )
17381	assertEquals ( V8Value. V8_TYPED_ARRAY, array. getV8Type ( ) )
17382	assertTrue ( resultComparator. compare ( od1, od2 ) == 0 )
17383	assertEquals ( "Message not found", "Please enter a value", driver. findElement ( By. cssSelector ( ".error" ) ). getText ( ) )
17384	assertEquals ( "Script Loops Completed", result )
17385	Assert. assertNotNull ( "No message context", messageContext )
17386	assertNotNull ( client )
17387	assertEquals ( 3, xy2d ( 32, point ) )
17388	Assert. assertEquals ( 3, result. size ( ) )
17389	assertTrue ( msg, dynAny. type ( ). equal ( tc ) )
17390	assertTrue ( "Login did not succeed.", success )
17391	assertFalse ( files. isEmpty ( ) )
17392	assertEquals ( vals, templates )
17393	assertEquals ( to1, to2 )
17394	assertEquals ( JSON_ARRAY, json )
17395	this. assertGet ( "nodetypes/allvisualappearancedata", "entitytypes/nodetypes/test.visualappearances.json" )
17396	assertEquals ( Status. BACKOFF, status )
17397	assertTrue ( Pattern. matches ( "(?s).*/valueBinding06.jsp PASSED.*", page. asXml ( ) ) )
17398	Assert. assertEquals ( expectedResult, resultString )
17399	assertEquals ( 64 * 64 * 32, cn. getCells ( ). length )
17400	assertThat ( builder. getDom ( "test-state" ), isEmptyString ( ) )
17401	Assert. assertNull ( caixa )
17402	assertNotNull ( Query. reader ( "UAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
17403	Assert. assertTrue ( c_xml. createCoreXml ( new File ( "e:/shark-context.xml" ) ) )
17404	assertThat ( new RsPrint ( response ). printBody ( ), containsString ( "identity was not found" ) )
17405	assertThat ( token. image, equalTo ( "user-agent" ) )
17406	assertEquals ( 50, reader. position ( ) )
17407	assertTrue ( lastName. equals ( "Levin" ) )
17408	assertThat ( response, not ( containsString ( "Unreferenced" ) ) )
17409	assertEquals ( "[{},{}]", writer. toString ( ) )
17410	Assert. assertEquals ( before + 1, Context. getProviderService ( ). getAllProviders ( ). size ( ) )
17411	assertEquals ( 2, container. children. size ( ) )
17412	assertEquals ( String. format ( "[%d,\\"%s\\",\\"%s\\",\\"%s\\",\\"%s\\"]", WampMessage. CALL_ERROR, callId, errorCode, errorDescription, errorDetails ), jsonMessage )
17413	assertThat ( converter. getClass ( ), is ( typeCompatibleWith ( ReflectionConverter. class ) ) )
17414	assertEquals ( MICRO ( METRE ), u )
17415	assertEquals ( "renderer must have null leaf icon", null, renderer. getLeafIcon ( ) )
17416	assertTrue ( result. getRightOnly ( ). contains ( "only.type2.value" ) )
17417	assertThat ( status, is ( 201 ) )
17418	assertTrue ( ptu == ptu. asPrimitiveTypeUsage ( ) )
17419	assertEquals ( 123L, book. getId ( ) )
17420	assertGoodKey ( result )
17421	assertEquals ( HomeController. HOME_VIEW, view )
17422	Assert. assertEquals ( "employee", tableName )
17423	assertEquals ( new RawSignResponse ( RawSignResponse. USER_PRESENT_FLAG, COUNTER_VALUE, SIGNATURE_SIGN ), rawSignResponse )
17424	assertNotNull ( testTx )
17425	Assert. assertEquals ( "(aa_change_extension (aa_point_location (aa_char Ala) 124) (aa_char Thr) ext *?)", aa_change_extension. toStringTree ( parser ) )
17426	Assert. assertEquals ( hh. getUserName ( ), newHH. getUserName ( ) )
17427	context. assertIsSatisfied ( )
17428	assertEquals ( "a", i. next ( ) )
17429	Assert. assertEquals ( hash, checksum. getValue ( ) )
17430	Assert. assertEquals ( buffer. toString ( ), "(1, 2, 3)" )
17431	Assert. assertEquals ( expectedMethod, m )
17432	assertEquals ( "read -  - Patient/1 - ", captor. getValue ( ) )
17433	assertEquals ( expecting, found )
17434	assertNotNull ( TollFree. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "US" ). read ( ) )
17435	assertThat ( pong, containsString ( "OK" ) )
17436	Assert. assertNull ( janus. getServer ( ) )
17437	assertEquals ( aux. getName ( ), user. getName ( ) )
17438	Assert. assertTrue ( result. isEmpty ( ) )
17439	assertEquals ( "ranzzz", Bytes. toString ( res ) )
17440	assertEquals ( true, getLoadLayerDefinitionAction ( ). isEnabled ( ) )
17441	Assert. assertEquals ( 1L, vm. getStack ( ). pop ( ) )
17442	assertThat ( rule. match ( sentence ). length, is ( 0 ) )
17443	assertTrue ( copy. getAreNodeLabelsAcceptedByRM ( ) )
17444	assertEquals ( "fra 3 giorni", t. format ( new Date ( 1000 * 60 * 60 * 24 * 3 ) ) )
17445	assertResultsFormularioSonda ( formularioSondaReturn )
17446	Assert. assertNull ( found )
17447	assertEquals ( "select subEntity_1 from Entity entity_0 inner join entity_0.subEntityMap subEntity_1", query )
17448	assertEquals ( "GBP 3.00", test. toString ( ) )
17449	assertEquals ( "Response body is not correct.", USER_IN_REALM1, Utils. makeCallWithBasicAuthn ( principalServlet ( webAppURL ), USER_IN_REALM1, CORRECT_PASSWORD, SC_OK ) )
17450	assertThat ( options. getCannedAcl ( ), is ( ConfigurationVariable. CANNED_ACL. defaultValue ( ) ) )
17451	assertThat ( result, equalTo ( false ) )
17452	assertEquals ( nw. getScore ( ), alignment. getScore ( ) )
17453	assertEquals ( result. getFeatureMatrix ( ). length ( ), 32 * 32 * 3, 0.0 )
17454	Assert. assertNotNull ( writer )
17455	assertEquals ( 1, count )
17456	assertEquals ( testStyle, classUnderTest. getIdentifierStyle ( ) )
17457	assertThat ( child. getAngle ( ), IsEqual. equalTo ( 25f ) )
17458	Assert. assertEquals ( "did not get expected data length", testLen, result. length ( ) )
17459	assertKernel ( kernel, RECT, e )
17460	assertTrue ( extender. getZoomLevel ( ) == zoomLevel )
17461	assertNull ( chain. getForwardURL ( ) )
17462	assertResultIs ( c )
17463	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
17464	assertNotNull ( AvailableAddOn. fetcher ( "XBXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
17465	assertEquals ( expResult, true )
17466	assertEquals ( "茅", methodName )
17467	assertEquals ( "{\\"d\\":{\\"__metadata\\":{\\"id\\":\\"" + BASE_URI + "Rooms('1')\\"," + "\\"uri\\":\\"" + BASE_URI + "Rooms('1')\\",\\"type\\":\\"RefScenario.Room\\",\\"etag\\":\\"W/\\\\\\"1\\\\\\"\\"}," + "\\"nr_Building\\":{\\"__metadata\\":{\\"id\\":\\"" + BASE_URI + "Buildings('1')\\"," + "\\"uri\\":\\"" + BASE_URI + "Buildings('1')\\",\\"type\\":\\"RefScenario.Building\\"}," + "\\"Id\\":\\"1\\",\\"Name\\":null,\\"Image\\":null," + "\\"nb_Rooms\\":{\\"__deferred\\":{\\"uri\\":\\"" + BASE_URI + "Buildings('1')/nb_Rooms\\"}}}}}", json )
17468	assertTrue ( previousNumberOfIndividuals + " supposed to be larger than " + size, previousNumberOfIndividuals > size )
17469	assertEquals ( "[0.0, 2.0, 4.0, 6.0, 8.0]", IteratorToGeneratorAdapter. adapt ( range ). toCollection ( ). toString ( ) )
17470	assertThat ( path1. equals ( path2 ), is ( true ) )
17471	assertThat ( generatedType, is ( notNullValue ( ) ) )
17472	assertTrue ( "Exception for empty keytabfile name was expected", gotException )
17473	assertNotNull ( scriptStatement )
17474	assertThat ( mock. get ( ), is ( "joo" ) )
17475	assertEquals ( 10, results. size ( ) )
17476	assertEquals ( "nove quintilh玫es, duzentos e vinte e tr锚s quatrilh玫es," + " trezentos e setenta e dois trilh玫es, trinta e seis bilh玫es," + " oitocentos e cinquenta e quatro milh玫es, setecentos e setenta" + " e cinco mil e oitocentos e sete inteiros", actual )
17477	assertNull ( container. child. get ( ) )
17478	Assert. fail ( "Authorization failure expected" )
17479	Assert. assertEquals ( "url", new JdbcRuntimeInfo ( properties, null ). removeQuote ( "\\"url\\"" ) )
17480	assertEquals ( "Address", nameStr )
17481	assertEquals ( "", result )
17482	assertEquals ( actualKeys, expectedKeys )
17483	assertEquals ( "ok", resp. getResponseBody ( ). trim ( ) )
17484	assertThat ( validationList, is ( Collections. < String > emptyList ( ) ) )
17485	assertThat ( entry. getName ( ). contains ( "\\\\" ), is ( false ) )
17486	assertThat ( i, equalTo ( 2 ) )
17487	assertTrue ( result. matches ( ) )
17488	assertEquals ( injectedBus, injectedObject )
17489	assertEquals ( packet, p )
17490	assertCallTree ( callTree, callStack. getStackEvents ( ), true )
17491	assertEquals ( "filename.thumbnail", filename )
17492	assertEquals ( "found index must be last occurence", text. lastIndexOf ( "fo" ), foIndex )
17493	assertThat ( allUsers, not ( contains ( user ) ) )
17494	assertEquals ( 2, slices )
17495	assertEquals ( "Expenses 9/12/2002\\n" + " \\tDinner\\t$16.78\\n" + "\\n" + "Meal expenses $16.78\\n" + "Total $16.78", printer. getText ( ) )
17496	assertEquals ( response. getStatusLine ( ). getStatusCode ( ), HttpStatus. SC_INTERNAL_SERVER_ERROR, "Group has been created with less than minimum characters" )
17497	assertNull ( mockResult. included ( "returnPath" ) )
17498	assertEquals ( 73, screenshotPlugin. gettheatreOfBloodNumber ( ) )
17499	assertThat ( clock. currentTime ( ). getNanosecond ( ), is ( 0 ) )
17500	assertTrue ( egip. compareTo ( egic ) > 0 )
17501	Assert. assertEquals ( ImmutableMap. < String, Object > builder ( ). put ( "feed", "alerts" ). put ( "timestamp", event. getCreatedTime ( ). toString ( ) ). put ( "service", "test" ). put ( "host", "localhost" ). put ( "severity", "service-failure" ). put ( "description", "blargy" ). put ( "data", ImmutableMap. < String, Object > of ( "something1", "a", "something2", "b" ) ). build ( ), event. toMap ( ) )
17502	assertEquals ( e1, e2 )
17503	assertWalkValid ( jsonCompressor, "[{\\"a\\":\\"b\\"}]", "*+a>b", "[{\\"a\\":\\"b\\"}]" )
17504	assertThat ( "getValue", node. getValue ( ), is ( 0L ) )
17505	assertEquals ( property. getType ( ), String. class )
17506	assertThat ( target. TYPE, is ( "InPacketAdded" ) )
17507	assertThat ( method. propertyName ( ), is ( "name" ) )
17508	assertEquals ( "expected user should equal with result obtained from SCIM REST API", expectedResponse. getEntity ( ), result. getEntity ( ) )
17509	assertEquals ( "world", res )
17510	assertPlanEquals ( expect, plan )
17511	assertions. isLessThan ( actual )
17512	assertFalse ( proxyHttpHeader. isValid ( ) )
17513	assertThat ( target. getFlow ( nwIf, null ), is ( nullValue ( ) ) )
17514	assertEquals ( "Additional pre-authentication required", ErrorType. KDC_ERR_PREAUTH_REQUIRED, error. getErrorCode ( ) )
17515	assertTrue ( getNoErrorMsg ( ), result )
17516	assertFalse ( "Should be done with split!", reader. continueItr ( ) )
17517	assertEquals ( ZippelGCD ( a, b ). monic ( ), EZGCD ( a, b ). monic ( ) )
17518	assertNotNull ( response )
17519	assertJson ( "{'value': 1.1}", serialize ( bean ) )
17520	assertEquals ( expectedResp, testResp )
17521	assertEquals ( "", result )
17522	assertTrue ( nicHandle. equals ( NicHandle. parse ( "DW", source, countryCodes ) ) )
17523	assertEquals ( expectedBindingString, relativizedVolumeString )
17524	assertEquals ( perspective. concat ( BookmarkableUrlHelper. PERSPECTIVE_SEP ). concat ( screens ), url )
17525	assertTrue ( isEqual ( expectedStream, actualStream ) )
17526	Assert. assertTrue ( "no file count found", actual > 0 )
17527	Assert. assertTrue ( responseList. size ( ) == 0 )
17528	assertEquals ( explainUserKramer, explainUserKramerDuplicate )
17529	Assert. assertEquals ( headerValue, actualValue )
17530	Assert. assertEquals ( expected, hexString )
17531	assertCount ( 0L, "set =?", Collections. emptyList ( ) )
17532	assertThat ( text, is ( "Spider Man" ) )
17533	Assert. assertEquals ( 1, jobs. size ( ) )
17534	assertThat ( this. graphBuilder, hasNodesAndEdges ( new String [ ] { "\\"groupId:parent:jar:version:compile\\"", "\\"groupId:child1-1:jar:version:compile\\"", "\\"groupId:child1-2:jar:version:compile\\"", "\\"groupId:subParent:jar:version:compile\\"", "\\"groupId:child2-1:jar:version:compile\\"", "\\"groupId:child2-2:jar:version:compile\\"" }, new String [ ] { "\\"groupId:parent:jar:version:compile\\" -> \\"groupId:child1-1:jar:version:compile\\"[style=dotted]", "\\"groupId:parent:jar:version:compile\\" -> \\"groupId:child1-2:jar:version:compile\\"[style=dotted]", "\\"groupId:parent:jar:version:compile\\" -> \\"groupId:subParent:jar:version:compile\\"[style=dotted]", "\\"groupId:subParent:jar:version:compile\\" -> \\"groupId:child2-1:jar:version:compile\\"[style=dotted]", "\\"groupId:sub
17535	assertEquals ( "Must be valid quantity (default is one)", BigDecimal. ONE, item. getQty ( ) )
17536	assertEquals ( 6, changes. size ( ) )
17537	assertThat ( "default image id", sut. getImageId ( ), is ( equalTo ( VM. DEFAULT_IMAGE_ID ) ) )
17538	assertTrue ( validator. validate ( sslTermination, PUT ). passedValidation ( ) )
17539	assertOut ( "public class A {\\n}" )
17540	Assert. assertEquals ( "1080::8:800:200c:417a", v )
17541	assertEquals ( 0, branch_conditions. size ( ) )
17542	Assert. assertEquals ( expResult, result )
17543	assertThat ( generator. getKubernetesSchemaMarkdownFile ( ), equalTo ( reference. getK8sMarkdownLink ( ) ) )
17544	assertThat ( switchYardExchange. getMessage ( ). getContent ( Integer. class ), is ( equalTo ( new Integer ( 10 ) ) ) )
17545	assertSame ( temporaryQueue, stompJmsSession. createTemporaryQueue ( ) )
17546	assertStat ( result )
17547	assertThat ( errors, hasFieldErrors ( "middleName" ) )
17548	Assert. assertThat ( NumberProcessUtils. toUnsigned31bitsInteger ( i ), is ( j ) )
17549	assertEquals ( expResult, result )
17550	assertNotNull ( paquete )
17551	assertEquals ( "no return type", null, parsed. returnType )
17552	assertEquals ( "echoPath/a1/b1/c1//true/123", r )
17553	Assert. assertFalse ( condition. evaluate ( new MockRewrite ( ), new MockEvaluationContext ( ) ) )
17554	assertEquals ( 10, c. renamedGetValue ( ) )
17555	assertNotNull ( ShortCode. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
17556	assertNumEquals ( 10, sma. getValue ( 105 ) )
17557	assertEquals ( 1.0, result, 0.1 )
17558	assertTrue ( pid > 0 )
17559	assertEquals ( "12 丿���� 倬�卮", t. format ( new Date ( 0 ) ) )
17560	assertEquals ( packed, sw. toString ( ) )
17561	Assert. assertNotNull ( "no uri", actual )
17562	assertEquals ( "parameter_rejected", response. getMetadata ( ). get ( "oauthError" ) )
17563	assertTrue ( true )
17564	Assert. assertEquals ( JavaConfigContainer. class, container. context. getBean ( "container" ). getClass ( ) )
17565	Assert. assertEquals ( templateInfo. getTenantId ( ), new Integer ( SUPER_TENANT_ID ) )
17566	assertFalse ( displayable )
17567	assertThat ( domainName, is ( queriedResourceDomain ) )
17568	assertFalse ( evaluator. isLoggingScopedEnabled ( ) )
17569	assertEquals ( PASSWORD_BYTE_ARRAY, credentials. getPassword ( ) )
17570	Assert. assertTrue ( pss. toString ( ). contains ( "123" ) )
17571	assertEquals ( concernedDPC. getPointCode ( ), concernedDPC2. getPointCode ( ) )
17572	assertEquals ( 3, cheeses. size ( ) )
17573	Assert. assertEquals ( attribute, 2L )
17574	assertTrue ( s1. equals ( s2 ) )
17575	assertNotNull ( flux )
17576	Assert. assertEquals ( "complexType restricts name", restriction )
17577	assertEquals ( expected, actual, 0.0001 )
17578	assertEquals ( "SSS:1234trueW:5", x. toString ( ) )
17579	assertEquals ( " Echo Message = vasu", response )
17580	assertEquals ( result, "2007-12-03 - 10:15:30" )
17581	assertEquals ( "getApplicationManifest timeout " + options. getUUID ( ), latch. getCount ( ), 0 )
17582	assertNotSame ( monthView. getDaysOfTheWeek ( ), monthView. getDaysOfTheWeek ( ) )
17583	assertEquals ( "&#x", writer. toString ( ) )
17584	assertEquals ( "om 3 timmar", t. format ( new Date ( 1000 * 60 * 60 * 3 ) ) )
17585	paths. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE )
17586	Assert. assertEquals ( d, a. select ( rowInd, colInd ) )
17587	assertThat ( tenantIdProvider. dmnParameters. size ( ), is ( 0 ) )
17588	assertThat ( differences, contains ( ciString ( "dev-MNT-2" ) ) )
17589	MatcherAssert. assertThat ( readTag, is ( tag ) )
17590	assertTrue ( "Document should be in exception routing", document. isException ( ) )
17591	assertNotNull ( mh )
17592	assertEquals ( EdmSimpleTypeKind. DateTime, edmDateType )
17593	assertEquals ( expected, result )
17594	assertThat ( ChronoFormatter. ofPattern ( "yyyy", PatternType. CLDR, Locale. ROOT, CalendarYear. threeten ( ) ). parse ( "2016" ), is ( expected ) )
17595	assertThat ( new File ( basedir, "target/classes/annotation/AnnotatedClass.class" ), hasAnnotation ( "annotation.Annotation" ) )
17596	assertNotNull ( p2 )
17597	assertions. isNotEqualByComparingTo ( null )
17598	assertArrayEquals ( decrypted. getMessage ( ), Base64. decodeBase64 ( base64ExpectedBytes ) )
17599	mockEndpoint. assertIsSatisfied ( )
17600	assertEquals ( new ApacheLogFormat ( "%%\\\\t\\\\b\\\\n\\\\r\\\\f\\\\%" ). unsafeFormat ( response, date, nanos ), "%\\t\\b\\n\\r\\f%" )
17601	Assert. assertEquals ( uri, result )
17602	assertNull ( result )
17603	Assert. assertEquals ( CREATE_SIZE, response. getThreadDumpsSize ( ) )
17604	assertFalse ( keyDefinition. isUpdatable ( ) )
17605	Assert. assertEquals ( "[a, 3]", result )
17606	assertThat ( "static int value", obj, equalTo ( 5 ) )
17607	assertTrue ( rowChange. compareTo ( rowChange2 ) == 0 )
17608	assertCompleted ( "a" )
17609	Assert. assertTrue ( "null should match null.", sut. matches ( null ) )
17610	assertEquals ( 7, count )
17611	assertEquals ( "Address", nameStr )
17612	Assert. assertEquals ( dataInicioAtividade, retorno. getDataInicioAtividade ( ) )
17613	assertTrue ( store1. getExperimentById ( experiment. getId ( ) ). getConstraintCollections ( ). size ( ) == 1 )
17614	assertEquals ( new BigDecimal ( "-0.100" ), entity. getN73 ( ) )
17615	Helpers. assertJson ( actualJsonQuery, testJsonQuery )
17616	Assert. assertTrue ( ExpectedConditions. textToBePresentInElement ( By. id ( "homePage" ), "You arrived at home page" ). apply ( driver ) )
17617	assertThat ( result, is ( true ) )
17618	Assert. assertEquals ( setMember, secondConceptSet. getConcept ( ) )
17619	assertEquals ( "Config", caller. getResponseBody ( ) )
17620	assertThat ( result, is ( true ) )
17621	assertEquals ( "{ \\"fieldname\\" : { \\"$mod\\" : [\\"?\\", \\"?\\"] } }", filterParameters. toString ( ) )
17622	Assert. assertEquals ( "PUT: Michael", result )
17623	assertEquals ( 5, value. asInt ( 10 ) )
17624	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
17625	assertTrue ( message. contains ( HOSTNAME ) )
17626	assertNegatedNameToken ( ast, "bwahaha" )
17627	assertEquals ( "urn:oid:0.1.2.3", parsed. getEntry ( ). get ( 0 ). getResource ( ). getId ( ). getValue ( ) )
17628	assertEquals ( HttpStatusCode. BAD_REQUEST. getStatusCode ( ), connection. getResponseCode ( ) )
17629	assertEquals ( 5, d. asByte ( ) )
17630	Assert. assertEquals ( "{\\"alice\\":{\\"bob\\":[\\"charlie\\"]}}", result. toString ( ) )
17631	assertEquals ( Optional. of ( VALUE ), value )
17632	assertEquals ( "dist job res is not 0:", 0, res )
17633	assertThat ( result, is ( notNullValue ( ) ) )
17634	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
17635	assertAllTargetsCount ( 0 )
17636	assertEquals ( 0, historicIncidents )
17637	assertIsAborted ( tx )
17638	assertThat ( cookieJar. get ( Jar. < Jar. Cookie > contents ( ) ), is ( tenCookies ( ) ) )
17639	assertEquals ( 1, ksession. fireAllRules ( ) )
17640	Assert. assertEquals ( "Doe", result )
17641	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
17642	Assert. assertEquals ( "QCD-1-000003", generated )
17643	assertEquals ( 1, kb. getResults ( ). getMessages ( ). size ( ) )
17644	assertOut ( "(is(a, b)? a : null)" )
17645	assertEquals ( ConcreteSubclass. class, test. getStatement ( 1 ). getReturnClass ( ) )
17646	assertThat ( result. getPayload ( ), is ( not ( instanceOf ( ExceptionPayload. class ) ) ) )
17647	assertEquals ( fakeResult, authentication )
17648	assertEquals ( expectedValue, expression. evaluate ( document ) )
17649	assertThat ( builder, hasToString ( "<a href=\\"https://flattr.com/thing/123546/a-demo-thing\\">" + "<img src=\\"http://api.flattr.com/button/flattr-badge-small.png\\"" + " width=\\"16\\" height=\\"16\\" alt=\\"Flattr this\\" title=\\"Flattr this\\" border=\\"0\\" />" + "</a>" ) )
17650	assertProcessEnded ( processInstance. getId ( ) )
17651	Assert. assertEquals ( expectedId, id )
17652	Assert. assertEquals ( PropertyValue. create ( "Alice" ), result. get ( 0 ). getProperty ( 0 ) )
17653	assertEquals ( result, range. exclude ( other ) )
17654	assertThat ( filteredVersions, arrayContaining ( version ( "1.1.1" ) ) )
17655	assertEquals ( "00111111000000000000000000000000", value. getDataAsBinaryStr ( ) )
17656	Assert. assertEquals ( 1, a. getNumberOfFinalMethods ( ) )
17657	assertEquals ( 2, validationProviders. size ( ) )
17658	assertEquals ( "boolean mapper serialization is wrong", expected, actual )
17659	assertOut ( "baz: function baz() {\\n\\tvar tmp = AS3.bind(this, " + "\\"secret$1\\");\\n\\treturn tmp(\\"-bound\\");\\n}" )
17660	assertEquals ( input, result )
17661	assertEquals ( expResult, result )
17662	assertResultSet ( fc. getMembers ( filter, new TypedObjectNodeXPathEvaluator ( ) ), "PHILOSOPHER_1" )
17663	assertEquals ( expectedDouble, executeAndReturnNumber ( FloatToInt. class ), 0 )
17664	assertEquals ( p1, p2 )
17665	assertThat ( p5. toString ( ), is ( "/Users/local/lib" ) )
17666	assertThat ( result, is ( "Hello, world!\\n" ) )
17667	assertThat ( event. getRelease ( ), equalTo ( expectedValue ) )
17668	assertTrue ( selector. evaluate ( source ) )
17669	Assert. assertEquals ( props. getProperties ( ). get ( FileSystemCredentials. FILESYSTEM_PATH ), wfAppPath )
17670	assertNotNull ( bss )
17671	assertTrue ( content. length ( ) > 0 )
17672	assertNotNull ( union )
17673	assertNotNull ( homepage )
17674	assertTrue ( editFilter instanceof LinkIndexUpdaterEditFilter )
17675	Assert. fail ( "Expected to fail, but didn't" )
17676	assertEquals ( expectedQuery, actualQuery )
17677	assertEquals ( expResult, result )
17678	assertValiadationResult ( validationMessages )
17679	assertEquals ( EXPECTED. replace ( "},\\"response", ",\\"headers\\":{\\"" + HttpHeaders. CONTENT_TYPE + "\\":\\"" + HttpContentType. APPLICATION_JSON + "\\"}},\\"response" ). replace ( "}}}", "},\\"headers\\":{\\"" + HttpHeaders. CONTENT_TYPE + "\\":\\"" + HttpContentType. APPLICATION_JSON + "\\"}}}" ), entity )
17680	assertEquals ( "Native and term comparisons are different", nativeComparison, mapperComparison )
17681	assertEquals ( 0, cmd. args. size ( ) )
17682	this. assertAnalyzesTo ( _a, "\\"Test tesT2\\"@en", new String [ ] { "Test", "tesT2" }, new String [ ] { "word", "word" } )
17683	Assert. assertTrue ( allRight )
17684	assertEquals ( expectedNumEntries, actualNumEntries )
17685	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
17686	assertUnderflow ( ( double ) x - ( double ) y, result, x - y )
17687	assertThat ( sut. getField ( "foobar" ), is ( field ) )
17688	assertThat ( issues, is ( empty ( ) ) )
17689	assertEquals ( "( foo = bar )", par ( base ). toString ( ) )
17690	assertTrue ( getNoErrorMsg ( ), result )
17691	assertEquals ( 0, latch. getCount ( ) )
17692	assertEquals ( expecting, found )
17693	Assert. assertEquals ( true, config. isDebug ( ) )
17694	assertTrue ( ( Boolean ) result )
17695	assertNotNull ( Challenge. fetcher ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "identity", "YFXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "sid" ). fetch ( ) )
17696	assertThat ( panel. getBackgroundPainter ( ), is ( nullValue ( ) ) )
17697	assertThat ( "Expected the property to not be set", getSettings ( ). getString ( "key" ), nullValue ( ) )
17698	assertEqualsWithoutWhiteSpaces ( "cylinder(h=10, r=5, $fn=8, center=true);", prism )
17699	assertThat ( options. getUploadBufferSize ( ), is ( 0 ) )
17700	assertNotNull ( result )
17701	assertEquals ( 24, result )
17702	assertThat ( out. value, is ( new StringOption ( "Hello, world!". substring ( 0, 10 ) ) ) )
17703	assertNotNull ( openAPI )
17704	assertNull ( result )
17705	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + destPdf, sourceFolder + cmpPdf, destinationFolder ) )
17706	assertEquals ( "1590595823", book. getIsbn ( ) )
17707	assertEquals ( 0, command. length )
17708	Assert. assertTrue ( field. contains ( input ) )
17709	Assert. assertEquals ( expected, actual )
17710	Assert. assertEquals ( "Object.property", property. toString ( ) )
17711	assertEquals ( CONTENT, action. getYaml ( ) )
17712	assertOut ( "var /** @type {Array} */ a = new Array('Hello', 'World')" )
17713	assertTrue ( replayService. getPlayers ( ). isEmpty ( ) )
17714	assertTrue ( upstreamCtx. isInvokable ( operatorDef, strategy ) )
17715	assertEquals ( expectedFilename, fileName )
17716	Assert. assertTrue ( result. isSetUnitOfMeasurement ( ) && result. isSetObservationType ( ) && result. isSetName ( ) && result. isSetDescription ( ) && result. isSetThing ( ) && result. isSetObservedProperty ( ) && result. isSetSensor ( ) && result. isSetObservedArea ( ) && result. isSetPhenomenonTime ( ) && result. isSetResultTime ( ) )
17717	Assert. assertTrue ( cover. getBoundaries ( ). getZ ( ). getMin ( ) < TEST_MODEL. getBoundaries ( ). getZ ( ). getMin ( ) )
17718	assertTrue ( "Failed authentication with wrong password was not logged", loggedFailedAuth ( AUDIT_LOG_FILE, USER ) )
17719	out. assertIsSatisfied ( )
17720	assertQ ( req, "//result[@name='response'][@numFound='1']", "//result[@name='response']/doc[1]/str[@name='id'][.='3']" )
17721	assertTrue ( instance. isBuilding ( event, project ) )
17722	Assert. assertEquals ( "(A124_C125del2)", del. toHGVSString ( AminoAcidCode. ONE_LETTER ) )
17723	assertEquals ( "both allocations should have been merged into one allocation", Lists. newArrayList ( new Allocation ( control, 0, 10 ) ), allocations. getAllocations ( ) )
17724	assertTrue ( action. isExecuted ( ) )
17725	assertEquals ( _isOrientationInverted_slow ( vel. clone ( ), q ), Util. isOrientationInverted ( vel, q ) )
17726	assertThat ( link. waitForArduinoToBoot ( 3, DAYS, READY_MESSAGE_ONLY ), is ( true ) )
17727	assertEquals ( true, result )
17728	assertEqualsIsTransitive ( child1, child2, child3 )
17729	assertEquals ( ElasticSearchIndexProvider. ES_KEYWORD_TYPE, type )
17730	assertEquals ( 0, app. executeApplication ( args ) )
17731	assertEquals ( expectedValue, propertyValue )
17732	assertEquals ( 0, userList. indexOf ( user ) )
17733	assertNotEquals ( playlist1, playlist2 )
17734	statusSupport. assertReloadOccured ( )
17735	assertThat ( impl. containsAxiomIgnoreAnnotations ( axiom, ontologyId ), is ( true ) )
17736	assertEquals ( expected, actual )
17737	assertEquals ( "61 00 63 64 65 66 67 68   69 6a 6b 6c 6d 6e 6f 70 a.cdefgh ijklmnop" + EOL + "71 72 73 74                                       qrst" + EOL, os. toString ( ) )
17738	assertEquals ( "TestValue", context. lookup ( "test" ) )
17739	assertEquals ( "bar", output )
17740	assertThat ( target. getMatches ( ), is ( matches ) )
17741	assertTrue ( definition. contains ( STRING_FLOAT ) )
17742	assertOngoingMappingsResolvedValueIsNull ( )
17743	TestCase. assertTrue ( result )
17744	Assert. assertNull ( testSubject. subModel ( new ScadGenerationContextFactory ( ). exclude ( 11 ). create ( ) ) )
17745	assertMetadata ( is )
17746	Assert. fail ( "create object with wrong Content-MD5 should fail" )
17747	assertEquals ( arr, resultArr )
17748	assertTrue ( builder instanceof NamedClusterConfigBuilder )
17749	assertEquals ( one. hashCode ( ), two. hashCode ( ) )
17750	assertEquals ( expected, actual )
17751	assertEquals ( 4, result. size ( ) )
17752	assertNull ( client. lastMessage )
17753	assertEquals ( "�械�械蟹 3 写薪�", t. format ( new Date ( 1000 * 60 * 60 * 24 * 3 ) ) )
17754	Assert. assertTrue ( isEqual ( distance, 0.269098 ) )
17755	assertNotEquals ( right, left )
17756	Assert. assertTrue ( "SifAgent should extend agent", agent instanceof Agent )
17757	assertEquals ( "abc\\n", found )
17758	assertEquals ( "", result )
17759	assertEquals ( 0, SnowcastSequenceUtils. compareTimestamp ( sequence1, sequence2 ) )
17760	assertThat ( toUnqualifiedVersionlessIdValues ( result ), containsInAnyOrder ( pt0id. getValue ( ) ) )
17761	assertNotNull ( c )
17762	editor. assertProblems ( "version:^^|cannot be blank", "version:^^|cannot be blank" )
17763	assertEquals ( "00001234567890", actual )
17764	assertEquals ( "aTestString", classUnderTest. getClientName ( ) )
17765	assertEquals ( expectedFormKey, actualFormKey )
17766	assertEquals ( 90, ( ( Service ) vrp. getJobs ( ). get ( "2" ) ). getServiceDuration ( ), 0.1 )
17767	assertThat ( slice. events. get ( 0 ). event, equalTo ( events. get ( 7 ) ) )
17768	assertEquals ( relSet, new HashSet < Relationship > ( IteratorUtil. asCollection ( relIterable ) ) )
17769	Assert. assertEquals ( 1, simpleFactory. validateCounter )
17770	assertThat ( session. isEnabled ( ), equalTo ( false ) )
17771	assertEquals ( "String", name. getImage ( ) )
17772	Assert. assertEquals ( 0, allMembers ( ) )
17773	assertions. endsWith ( )
17774	assertTrue ( content. contains ( "javax.faces.resource/jsf.js.jsf" ) || content. contains ( "javax.faces.resource/faces/jsf.js" ) )
17775	Assert. assertEquals ( expected, actual )
17776	assertEquals ( "The event record should be ignored", 0, changes. size ( ) )
17777	Assert. assertEquals ( "0", result. getReturnCode ( ) )
17778	assertEquals ( "specialRequest", target. request ( ) )
17779	Assert. assertNull ( agent. getMessagingClient ( ) )
17780	assertEquals ( true, result )
17781	Assert. assertEquals ( String. format ( msg, r, c ), expected, actual, 0. )
17782	assertTrue ( url!= null &&! url. isEmpty ( ) )
17783	assertTrue ( result. get ( RETURN_RESULT ). toLowerCase ( ). startsWith ( "com.fasterxml.jackson.core.jsonparseexception: unrecognized token 'new'" ) )
17784	assertEquals ( expected, found )
17785	assertOutWithMetadata ( outTemplate. replaceAll ( "AppName", appName ) )
17786	assertEquals ( "The Decoded Data should be the same as the input Data", data, embedding. getDecodedData ( ) )
17787	Assert. assertTrue ( comparator. getScript ( ). getModifications ( ) <= nbCom )
17788	assertJsonEquals ( ImmutableMap. of ( "topic", "test-topic", "apns", data ), message )
17789	assertEquals ( 0, variableInstances. size ( ) )
17790	assertDocument ( session. getSessionFactory ( ), "Enterprise", "{ '_id' : 'enterprise-1' }", "{ " + "'_id' : 'enterprise-1', " + "'revenueByDepartment' : {" + "'sawing' : 2000," + "'sale' : 1000," + "'planting' : 3000," + "}" + "}" )
17791	assertEquals ( 2, userCredentials. size ( ) )
17792	assertThat ( connection2, not ( is ( connection ) ) )
17793	Assert. assertTrue ( score > 0 )
17794	assertFalse ( ss. validate ( ) )
17795	assertEquals ( FullEntity. newBuilder ( taskKey ). build ( ), datastore. get ( taskKey ) )
17796	assertEquals ( 200, c. getResponseCode ( ) )
17797	assertEquals ( policyName, policy. getName ( ) )
17798	assertEquals ( "Sales.Pattern'Yellow'", URIUtils. escape ( pattern. toUriLiteral ( "Yellow" ) ) )
17799	assertThat ( javaSource, containsString ( "蝎些��懈��携" ) )
17800	assertThat ( rf. format ( result ), is ( sb. toString ( ) ) )
17801	UnitTestUtils. assertEquals ( expected, randomData. nextSampleWithReplacement ( 0, weights ) )
17802	assertEquals ( "Base value is not properly parsed", "09999.9999", parsed )
17803	Assert. assertEquals ( "Soft line   Hard line\\r\\n", readText ( decoder ) )
17804	characters. assertLowerCase ( description, null )
17805	assertEquals ( expectedQuery, actualQuery )
17806	assertThat ( checkpoint. getCheckpoint ( shardId ), equalTo ( extendedSequenceNumber ) )
17807	assertEquals ( "Find by start and end time with none in that period is still returning a list with one event", 0, events. size ( ) )
17808	assertThat ( testInstance. toList ( ), contains ( ( Document ) EmptyDocument. INSTANCE ) )
17809	assertThat ( output. toString ( ), containsString ( "The following are not valid: 'foo,bar'" ) )
17810	assertEquals ( expResult, result )
17811	assertEquals ( 1, fixture. readByte ( ) )
17812	assertEquals ( 16L, statistics. getQueryPlanCacheMissCount ( ) )
17813	arrays. assertContainsOnly ( description, null, newArray ( 'a' ) )
17814	Assert. assertEquals ( 8.0, y [ 0 ], 1.0e-12 )
17815	assertTimerWithDuration ( "catch", TIMER_DURATION )
17816	assertThat ( sub. shouldNotify ( dateTime ( "1015" ), AlertType. ERROR ), is ( false ) )
17817	Assert. assertTrue ( responseList. size ( ) < 1 )
17818	Assert. assertNotNull ( irodsFile )
17819	assertEquals ( "(2 1 a)\\n", found )
17820	assertReportEntries ( reportEntries, 0, 0, 0, 0, 0, 0 )
17821	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. REGEX, v, TERM_FACTORY. getConstantLiteral ( "^Ste(v|ph)en$" ), TERM_FACTORY. getConstantLiteral ( "i" ) ), translation. get ( 0 ) )
17822	assertEquals ( 9, connPerRoute. getMaxPerRoute ( route ) )
17823	assertThat ( testValue, is ( expectedValue ) )
17824	assertEquals ( firstUserWrapper. getID ( ), secondUserWrapper. getID ( ) )
17825	assertAnnotationCompletions ( "@Value(\\"#{345${data.prop2}<*>}\\")", "@Value(\\"#{345${else.prop3}<*>}\\")", "@Value(\\"#{345${spring.prop1}<*>}\\")" )
17826	assertThat ( count, is ( 2L ) )
17827	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
17828	assertEquals ( testValue, outValue, 0.0 )
17829	assertEquals ( FileUtils. read ( new File ( tmp, "test.xml" ), System. getProperty ( "file.encoding" ) ), "<assembly>" + LS + "" + "    <id>project</id>" + LS + "" + "</assembly>" + LS + "" )
17830	Assert. assertEquals ( expectedMessage, createString ( out ) )
17831	assertThat ( query. isBriefAbuseContact ( ), is ( false ) )
17832	assertStatisticalSummaryEquals ( totalStats. getSummary ( ), aggregatedStats, 10E-12 )
17833	Assert. assertTrue ( success )
17834	assertThat ( matcher. matches ( "foo", "bar" ), is ( true ) )
17835	assertArrayEquals ( expected, Proto. build_lenenc_int ( 0 ) )
17836	assertThat ( datastore. getCount ( ApplicationPreferences. class ), is ( 1L ) )
17837	assertParsingIsCorrect ( nativeQuery, expectedCacheName, expectedProjections )
17838	assertTrue ( payload. getThreadId ( ). get ( ). equals ( "woof" ) )
17839	assertEquals ( "<bar>foo_value</bar>", elt. getAttribute ( "bar" ) )
17840	assertEquals ( 72D, hours, 0 )
17841	assertThat ( bolt. getColumnVisibility ( record ), is ( vis ) )
17842	Assert. assertFalse ( result )
17843	assertTrue ( c1 instanceof PublicCloneable )
17844	assertEquals ( "Basic cmludGludGluOnN1cGVyZG9n", BasicAuth. makeHeader ( user, pass ) )
17845	Assert. assertEquals ( "TestA", name )
17846	Assert. assertEquals ( 5f, vm. getStack ( ). pop ( ) )
17847	assertEquals ( "Failed to generate foreach loop using a List<?>", FOREACH_OBJECT_IN_LIST_TWO_STATEMENTS, foreachWithList )
17848	assertTokens ( new IdentifierToken ( "x" ), Tokens. LP_CALL, Tokens. RP, Tokens. FACTORIAL )
17849	assertTrue ( authorizer. isAuthorized ( context, profiles ) )
17850	assertTrue ( messageLatch. await ( 3, TimeUnit. SECONDS ) )
17851	assertEquals ( testData. length - 2, is. available ( ) )
17852	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, testName + "_diff" ) )
17853	assertEquals ( 7, tuple. len ( ) )
17854	assertEquals ( true, isGood )
17855	Assert. fail ( "Should throw BadRequestException" )
17856	assertTrue ( page. getBody ( ). asText ( ). indexOf ( "SUCCESS" )!= - 1 )
17857	assertNoViewCalls ( )
17858	Assert. assertNotNull ( json. getJsonObject ( "entry" ). getString ( "id" ) )
17859	Assert. assertEquals ( s, "A/:B/:C" )
17860	assertThat ( request. equals ( request2 ), is ( false ) )
17861	assertEquals ( "", result )
17862	assertCanTake ( manager, 0, 1 )
17863	assertThat ( probe. count, equalTo ( 4 ) )
17864	assertEquals ( "Expected 0 results!", 0, n )
17865	assertEquals ( "<table><tbody><tr><td>aaa</td><td>bbb</td></tr></tbody></table>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
17866	assertEquals ( m1, m2 )
17867	assertEquals ( fileInfo. getFileId ( ), fileId )
17868	assertMarshalling ( f )
17869	assertEquals ( 0, resultSet. getColumnCount ( ) )
17870	assertEquals ( "test", t1. toString ( ) )
17871	assertNull ( idxConf. getRecordFilter ( ). getIndexCase ( "myrecordtable", record ) )
17872	assertEquals ( "String value does not match", bookmark. getDescription ( ), loadedBookmark. getDescription ( ) )
17873	assertTrue ( result. isSuccess ( ) )
17874	Assert. assertArrayEquals ( testData32bitFloat, result, 0.0f )
17875	Assert. assertEquals ( "HTML class should have been appended without a space separator", expected, comp. getHtmlClass ( ) )
17876	assertEquals ( "value from bytes", BigInteger. valueOf ( Long. MAX_VALUE ). shiftLeft ( 1 ), zl. getValue ( ) )
17877	assertEquals ( "/dev/", property )
17878	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
17879	assertNull ( engineRule. getHistoryService ( ). createHistoricProcessInstanceQuery ( ). singleResult ( ) )
17880	assertSame ( Byte. class, value. getValue ( ) )
17881	assertThat ( mySignalHandler. wasCalled, IsEqual. equalTo ( false ) )
17882	assertThat ( found, is ( false ) )
17883	assertArrayEquals ( new long [ ] { 2, 2 }, res. getShape ( ) )
17884	assertThat ( r, hasEntry ( "set", ( Object ) ImmutableList. of ( "cat", "dog", "fish", "cow" ) ) )
17885	assertEquals ( 0, daemon. getEvents ( ) )
17886	assertEquals ( expected, victim. process ( prefix, nameRequest ( ). fileNumber ( fileNumber ) ) )
17887	Assert. assertTrue ( signed. verify ( cert ) )
17888	Assert. assertEquals ( dateString, "2011021513" )
17889	assertEquals ( "30 骞� ��", t. format ( new Date ( 0 ) ) )
17890	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff23_" ) )
17891	assertEquals ( expected, cls. getCodeBlock ( ) )
17892	assertThat ( getCreatedPod ( ). getSpec ( ). getVolumes ( ), allOf ( hasPvClaimVolume ( "volume-admin-server", "admin-server-claim" ) ) )
17893	assertTrue ( cache. isCachedDb ( dbName ) )
17894	assertEquals ( ( long ) 8, ( long ) result. getLongWrapperValue ( ) )
17895	assertThat ( result. statusCode, is ( Response. ACCEPTED ) )
17896	assertTrue ( idxSet. contains ( column. getIndex ( ) ) )
17897	assertFeatureValues ( expected, queryText, Arrays. asList ( "single document test case", "another document" ), getChain ( new TFIDFFeatureExtractor ( ) ), 0 )
17898	assertEquals ( 613388L, borrowOrderResult. getBorrowId ( ) )
17899	assertThat ( ( double ) stopwatch. getAverageDuration ( ). getDuration ( TimeUnit. MILLISECONDS ), is ( closeTo ( 100, 50 ) ) )
17900	assertEquals ( "setName", service. getMutatorName ( col ) )
17901	Assert. assertEquals ( _expectedAddress, _frodo. getAddress ( ) )
17902	editor. assertContextualCompletions ( "<*>", "other-release<*>", "some-release<*>" )
17903	assertThat ( mfp. getProperty ( ), equalTo ( "private" ) )
17904	assertEquals ( "Di Fusco", person. getLastName ( ) )
17905	Assert. assertEquals ( "test", response. getBody ( ) )
17906	assertFalse ( component. isReducible ( ) )
17907	assertThat ( ( String ) c. value, is ( "ASCENDING" ) )
17908	assertEquals ( "{b=2, a=1, c=1}", union. toString ( ) )
17909	assertEquals ( "SELECT g1.e2 FROM g1 WHERE g1.e1 = 'a\\\\'b\\\\\\\\c'", sqlVisitor. toString ( ) )
17910	Assert. assertEquals ( 0755, FilePermissionHelper. toOctalFileMode ( perms ) )
17911	assertSame ( toTest, toTest. setParamsListSeparator ( "a" ) )
17912	assertNotNull ( entry. getCategory ( ) )
17913	assertNotNull ( strategy )
17914	Assert. assertTrue ( id == 1 )
17915	Assert. assertEquals ( expected, actual )
17916	assertMockEndpointsSatisfied ( )
17917	assertResultSet ( res )
17918	assertEquals ( 38, eventListener. getEvents ( ). size ( ) )
17919	assertNotNull ( adminUsersController )
17920	assertThat ( driver. findElement ( By. id ( "left.errors" ) ). getText ( ), is ( "invalid combination of left and right" ) )
17921	assertEquals ( sum, victim. getSum ( ), EPSILON )
17922	Assert. assertEquals ( infoCancelamento, cancelamento. getInfoCancelamento ( ) )
17923	Assert. assertTrue ( hash == - 302989728 )
17924	Assert. assertTrue ( migrationCheckingState. getStateActionState ( ) instanceof Done )
17925	assertNull ( result )
17926	assertThat ( link, is ( instanceOf ( AlLinkWithoutArealLinkFactoryWithConfig. class ) ) )
17927	assertTrue ( referenceManager. remove ( referenceManager. add ( "bar" ) ) )
17928	assertEquals ( "result count mismatch for: " + xpath, baseResult. size ( ), results. size ( ) )
17929	assertTrue ( address. getId ( )!= null )
17930	assertTrue ( quickViewComponent. isHidden ( ) )
17931	mockery. assertIsSatisfied ( )
17932	assertNull ( doc )
17933	assertTrue ( notificationService. getCurrentFileTransferIds ( ). isEmpty ( ) )
17934	assertions. isNotNull ( )
17935	assertFalse ( rrc. matches ( context, metadata ) )
17936	Assert. assertEquals ( expected, calculated )
17937	assertTrue ( dt2 - dt <= 3 )
17938	assertEquals ( PREVIOUS_RESPONSE, argumentCaptor. getValue ( ) )
17939	assertThat ( filters. getResponseFilters ( ). size ( ), is ( 1 ) )
17940	assertTrue ( selectedFile. exists ( ) )
17941	Assert. assertTrue ( true )
17942	assertThat ( mapper. writeValueAsString ( Status. PENDING ), is ( "\\"" + Status. PENDING. name ( ). toLowerCase ( ) + "\\"" ) )
17943	assertEquals ( "toString() not equal", expResult, result )
17944	assertNull ( "Expected null, but got: " + plugin, plugin )
17945	assertEquals ( response. readEntity ( String. class ), OK_200, response. getStatus ( ) )
17946	assertSame ( littleEndianBytes. toByteArray ( ), bigEndianBytes. toByteArray ( ), "littleEndian", "bigEndian" )
17947	assertions. isGreaterThan ( null )
17948	assertEquals ( expResult, result )
17949	assertions. isNotLessThan ( expected )
17950	assertTrue ( pattern. matches ( "-.1" ) )
17951	assertEquals ( expectedUuid, actualUuid )
17952	assertEquals ( x, result )
17953	assertEquals ( "Expected 0 results!", 0, n )
17954	assertEquals ( 2L, result )
17955	assertEquals ( "failed to generate class definition implementing an interface", CLASS_IMPLEMENTING_INTERFACE, cls )
17956	Assert. assertEquals ( ABS_URL + "/plugins/servlet/stashbot/build-reporting/$repoId/verification/successful/$BUILD_NUMBER/$buildHead/$mergeHead/$pullRequestId", url )
17957	Assert. assertTrue ( "Variant DocumentIF has " + fields. size ( ) + " fields", fields. size ( ) == 3 )
17958	assertEquals ( expectedAutoGeneratedAllView, result. get ( "all" ). getMap ( ) )
17959	assertEquals ( TRUTH, VcfToVariant. convertVcfToVariant ( vcfFile ) )
17960	assertResponse ( response, 403, "[{\\"Forbidden\\": \\"QUERY API methods are disabled on this KairosDB instance.\\"}]\\n" )
17961	assertArrayEquals ( expectedOrder. toArray ( new Monitoring [ 0 ] ), monitorings. values ( ). toArray ( new Monitoring [ 0 ] ) )
17962	assertEquals ( f1. hashCode ( ), f2. hashCode ( ) )
17963	Assert. assertEquals ( 42, calc. getResult ( ) )
17964	assertEquals ( "<a href=\\"https://github.com/danielflower/maven-gitlog-plugin/issues/10\\">#10</a> Some commit message", actual )
17965	Assert. fail ( "build listing failure" )
17966	Assert. assertEquals ( this. compressed. length ( ), compressed. length ( ) )
17967	assertTrue ( query ( ). from ( show ). fetchCount ( ) > 0 )
17968	assertThat ( storedValue, is ( true ) )
17969	assertEquals ( "0.00", service. getOrderAmount ( "A-OK-223-45" ). toPlainString ( ) )
17970	assertEquals ( 0, messageLatch. getCount ( ) )
17971	assertEquals ( "Does not compare " + nv1 + " & " + nv2, NodeValue. CMP_LESS, NodeValue. compare ( nv1, nv2 ) )
17972	assertNotNull ( order )
17973	Assert. assertEquals ( 23, val )
17974	Assert. assertEquals ( 2, buffer. length ( ) )
17975	Assert. assertTrue ( target. exists ( ) )
17976	Assert. assertNotNull ( "Could not find test-wildfly-config.xml", WILDFLY_CONFIG )
17977	Assert. assertTrue ( value )
17978	assertEquals ( 3, read )
17979	assertThat ( subject. location ( ), is ( nullValue ( ) ) )
17980	assertEquals ( expected, modelWriter. toString ( ) )
17981	Assert. assertEquals ( "alert present", a. getText ( ) )
17982	assertThat ( copy. getListProperty ( ), instanceOf ( LinkedList. class ) )
17983	Assert. assertEquals ( expected, browser. getCurrentUrl ( ) )
17984	Assert. assertEquals ( numeroSequencialEvento, eventoRetorno. getNumeroSequencialEvento ( ), 0 )
17985	assertThatSql ( query, is ( "SELECT nodes.col1, nodes.col2 FROM table1 AS nodes UNION SELECT edges.col3, edges.col4 FROM table2 AS edges" ) )
17986	Assert. assertEquals ( "The dog, a rottweiler, runs.", this. realiser. realiseSentence ( _sent ) )
17987	Assert. assertEquals ( rate, pop. getElitismRate ( ), 1e-6 )
17988	assertEquals ( 0, metrics. meter ( MetricRegistry. name ( SessionManager. SESSIONS_METRIC_PREFIX, "deleted" ) ). getCount ( ) )
17989	Assert. assertNull ( holePunchScheduler )
17990	Assert. assertFalse ( sut. isWeekday ( cal. getTime ( ) ) )
17991	assertTrue ( entity. getId ( ) > 0 && entity. getCount ( ) == 3456789 )
17992	assertThatSql ( query, is ( "SELECT __ALLNODES__.col1,__ALLNODES__.col2 FROM __ALLNODES__" ) )
17993	assertEquals ( 10, workspace. get ( ). size ( ) )
17994	Assert. assertEquals ( "Hello World!", result. get ( 1, TimeUnit. SECONDS ) )
17995	Assert. assertEquals ( payloadString, response. getMessage ( ) )
17996	assertEquals ( DB_NAME, HiveDatabase. create ( udbContext, new UdbConfiguration ( ImmutableMap. of ( ) ) ). getName ( ) )
17997	assertEquals ( "Expected 0 results!", 0, n )
17998	assertThat ( Sets. newHashSet ( viewAttributes ), equalTo ( Sets. < ViewAttributeBinder > newHashSet ( viewAttributeBinder ) ) )
17999	assertEquals ( 3, defaultConfig. getParameterNames ( ). size ( ) )
18000	assertThat ( fieldError, is ( nullValue ( ) ) )
18001	assertNotNull ( Credential. fetcher ( "CRXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
18002	assertEquals ( expecting, found )
18003	assertEquals ( "Unexpected item count", "2", actualCart. getItemTotal ( ) )
18004	assertEquals ( r, pos )
18005	assertEquals ( r1, r2 )
18006	assertThat ( baseDelegate. doPost ( "foo", new HttpEntity < > ( new HttpHeaders ( ) ), null ), is ( equalTo ( responseEntity ) ) )
18007	assertEquals ( e1, e2 )
18008	assertSearchYields ( index, "author:(bob OR ((rose OR tom) AND jones))", "bm", "rj", "tj" )
18009	assertEquals ( "[5, 1, 22, 4, 8, 9, 3, 989]", res. toString ( ) )
18010	assertEquals ( arr2, arr3 )
18011	assertEquals ( "scoreHolder.addMultiConstraintMatch(kcontext, new int[] {-1, -2}, new int[] {-3, -4})", marshaledAction )
18012	Assert. assertEquals ( "�注�� 3 ����", t. format ( new Date ( 1000 * 60 * 60 * 24 * 3 ) ) )
18013	assertEquals ( "http://www.example.com/service/endpoint", uri. toString ( ) )
18014	assertEquals ( typedValue. getValue ( ), variableValue )
18015	assertNotNull ( Country. fetcher ( "US" ). fetch ( ) )
18016	assertThat ( stream. iterator ( ). hasNext ( ), equalTo ( true ) )
18017	Assert. assertArrayEquals ( testAgents, buf )
18018	assertEquals ( "Deserialization failed", 0, buffer. readableBytes ( ) )
18019	assertEquals ( resultList, new ArrayList < Activity > ( ) )
18020	assertThat ( fileConfig. getConfigProperties ( ), contains ( configProperty ( TAB_WIDTH, 8 ), configProperty ( CHARSET, "utf8" ) ) )
18021	assertEquals ( new BigInteger ( "200" ). subtract ( fieldDefinition. getModulus ( ) ), actual )
18022	assertEquals ( java. getName ( ), javaPage. getTagName ( ) )
18023	ImgLib2Assert. assertImageEqualsRealType ( source, destination, 0 )
18024	assertEquals ( null, column. getParent ( ) )
18025	Assert. assertEquals ( "Payload table key test", expectedPayloadTableRowKey, result )
18026	assertEquals ( expected, result )
18027	assertEquals ( DataSourceConnector. class, dsp. getDataSourceConnector ( ). getClass ( ) )
18028	assertEquals ( json, array. toString ( ) )
18029	Assert. assertEquals ( String. format ( msg, s, r, c ), expected, actual, 0. )
18030	assertEquals ( expected_derivative, result, FloatingAccuracy. ACCURACY )
18031	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
18032	Assert. assertEquals ( 101, result. intValue ( ) )
18033	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 9, warnings. size ( ) )
18034	Assert. assertEquals ( tree. ret. limit, 42 )
18035	assertEqualsIgnoreWhitespace ( expected, real )
18036	assertThat ( validationResult. isValid ( ), is ( false ) )
18037	Assert. assertEquals ( BitTag. SERVICENET_LB. tagValue ( ) + BitTag. SSL. tagValue ( ) + + BitTag. SSL_MIXED_MODE. tagValue ( ), mappedUsage. getTagsBitmask ( ) )
18038	assertEquals ( Writables. strings ( ), t. getSubTypes ( ). get ( 0 ) )
18039	assertThat ( uri, is ( equalTo ( "/clients/" ) ) )
18040	assertThat ( statusCode, equalTo ( 401 ) )
18041	assertThat ( customerId, notNullValue ( ) )
18042	Assert. assertFalse ( result )
18043	assertEquals ( SCROLL_VALUE, getScrollLeftValue ( panel ) )
18044	assertThat ( action. action, is ( RetryPolicy. RetryAction. RetryDecision. FAIL ) )
18045	assertThat ( instanceOne. equals ( instanceTwo ), is ( false ) )
18046	assertArrayEquals ( new String [ ] { "High" }, ( String [ ] ) filterResult. getValue ( ) )
18047	assertEquals ( "12", ids )
18048	assertFalse ( result )
18049	Assert. assertEquals ( BooleanNode. FALSE, result )
18050	assertEquals ( 2, services. size ( ) )
18051	Assert. assertEquals ( "the_other_value", o )
18052	Assert. fail ( )
18053	assertThat ( updatedItem. getQuantity ( ), equalTo ( item. getQuantity ( ) - increment ) )
18054	assertEquals ( 5, newses. size ( ) )
18055	assertEquals ( "try(final java.io.OutputStream os = new java.io.ByteArrayOutputStream()) {" + CRLF + "    os.read();" + CRLF + "}" + CRLF, CodeModelTestsHelper. toString ( aTB ) )
18056	assertResultSet ( res )
18057	assertEquals ( expectedQuery, actualQuery )
18058	assertEquals ( 2, accounts. size ( ) )
18059	assertNoViolations ( constraintViolations )
18060	assertTrue ( output. startsWith ( "<!DOCTYPE HTML PUBLIC \\"-//W3C//DTD HTML 4.01//EN\\" \\"http://www.w3.org/TR/html4/strict.dtd\\">" ) )
18061	assertThat ( result. endsWith ( "[experimenterId=12345,body={1,10}]" ), is ( true ) )
18062	assertNull ( "result should be null because feature is disabledStatus", invoker. invoke ( sayHelloWithAnnotation, new Object [ ] { } ) )
18063	Assert. assertEquals ( expected, actual )
18064	assertOut ( "/**\\n * @export\\n */\\n" + "RoyaleTest_A.prototype.foo = function() {\\n" + "  var self = this;\\n" + "  function localFunction() {\\n    org.apache.royale.utils.Language.trace(self.bar);\\n  };\\n" + "  localFunction();\\n}" )
18065	Assert. assertEquals ( to, actual )
18066	assertEquals ( "1.1", actual )
18067	assertThat ( filteredVersions, arrayContaining ( version ( "1.1.1.1-sp1" ), version ( "1.1.1.2" ), version ( "1.1.2.21" ), version ( "1.1.3.0" ), version ( "1.2.0" ), version ( "1.2.0.1" ), version ( "2.0.0-SNAPSHOT" ) ) )
18068	assertThat ( provider. getSubject ( axiom ), is ( iriOptional ) )
18069	Assert. assertEquals ( "french lexical value", actualLabel )
18070	Assert. assertEquals ( true, isSuccess )
18071	assertTrue ( ( ( ToCellMapping ) sync ). getSource ( focusedCell ) instanceof CallExpr )
18072	Assert. assertTrue ( deal. isAccepted ( ) )
18073	assertFalse ( entity. isValid ( ) )
18074	assertEquivalentMutate ( Arrays. asList ( m1, m2 ) )
18075	assertEquals ( defaultSourceCodeNamesList, result )
18076	Assert. assertEquals ( splits, splits2 )
18077	assertEquals ( 1, allObjects. size ( ) )
18078	assertEquals ( "fcr:acl", relativizeSubpath ( rootObjectId, resourceId ) )
18079	assertEquals ( res, 256 )
18080	Assert. assertNotNull ( ss1 )
18081	assertEquals ( 1, graph. getNodeCount ( ) )
18082	Assert. assertTrue ( TestValidConfigDescriptorValidator. called )
18083	Assert. assertEquals ( "Unknown destination queue", MicroPipelineValidationResult. OK, new MicroPipelineValidator ( ). validateComponent ( cfg, queues, components ) )
18084	assertFalse ( redisServer. isActive ( ) )
18085	assertEquals ( 2, RecorderTaskListener. getEventCount ( TaskListener. EVENTNAME_UPDATE ) )
18086	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
18087	assertEquals ( "Should be a 201 Created!", CREATED. getStatusCode ( ), getStatus ( method ) )
18088	assertFalse ( metaInterface. isAssignableFrom ( metaObject ) )
18089	assertThat ( result, CoreMatchers. is ( true ) )
18090	assertEquals ( HttpServletResponse. SC_FORBIDDEN, recorder. getHttpStatusCode ( ) )
18091	assertSame ( mockConnection, conn. getProxiedConnection ( ) )
18092	assertThat ( PlainDate. of ( 2000, 12, 2 ). with ( element. decremented ( ) ), is ( PlainDate. of ( 2000, 11, 25 ) ) )
18093	Assert. assertEquals ( "Wrong number of unregistered PI: ", 2, numOfUnregisteredPI )
18094	Assert. assertEquals ( ambiente, protocoloInfo. getAmbiente ( ) )
18095	assertTrue ( result. length ( ) > 0 )
18096	Assert. assertTrue ( "Capabilities are not valid!", errors. isEmpty ( ) )
18097	assertEquals ( new HashSet < Integer > ( asList ( 2, 3, 4 ) ), results )
18098	assertThat ( results, contains ( "\\"hello-world\\"", "\\"hello,world\\"" ) )
18099	assertEquals ( getItem. xmlText ( ), GetItemHelper. getGetItemsRequest ( new ArrayList < String > ( ) ). xmlText ( ) )
18100	runner. assertAllFlowFilesTransferred ( SelectHive3QL. REL_FAILURE, 1 )
18101	assertArrayEquals ( new double [ ] { 0, 0, 0, 1 }, h. values, 0.001 )
18102	assertInstanceOf ( "Unexpected implementation.", AffineTransform2D. class, transform )
18103	assertTrue ( matches )
18104	assertEquals ( "foo", x. f1. get ( ) )
18105	assertNotNull ( m_receivedMessage )
18106	Assert. assertEquals ( expected, impl. getCurrentSize ( ) )
18107	Assert. assertEquals ( "Expected column basic json", TestColumnBasic. columnBasicJson, json )
18108	Assert. assertTrue ( "user object not retrieved", isFileTreeNode )
18109	assertTrue ( command. valid ( options, optionParser ) )
18110	assertEquals ( "2", c. consume ( ) )
18111	assertTrue ( 5.0d == d. asFloat8 ( ) )
18112	Assert. assertEquals ( "user1", echoValue )
18113	assertEquals ( "_", setting. getUniqueIDPrefix ( ) )
18114	assertNumberOfMappingsIs ( 114 )
18115	assertEqualsIgnoreWhitespace ( expected, real )
18116	assertEquals ( paths. get ( path ), acl. getPath ( ) )
18117	assertTrue ( testFacet. isInstalled ( ) )
18118	Assert. assertEquals ( 1, this. sqlgGraph. traversal ( ). E ( friend. id ( ) ). next ( ). property ( "weight" ). value ( ) )
18119	assertSame ( conn, foundConnection )
18120	assertTrue ( "Errors expected", errors. size ( ) > 0 )
18121	assertEquals ( VALUE1, client. get ( KEY1 ). toCompletableFuture ( ). get ( ) )
18122	assertEquals ( expResult, result )
18123	assertOutputSameTextFile ( gen, "DefineEventMethods_PM.java.txt" )
18124	assertEquals ( 200, statusCode )
18125	assertTrue (! t. get ( ) )
18126	assertTrue ( "size must be 1, but it is - " + queryModel. size ( ), queryModel. size ( ) == 1 )
18127	assertEquals ( "1, 3", prettyPrinter. formatChangeScriptList ( Arrays. asList ( change1, change3 ) ) )
18128	assertEquals ( "geDeviceId timeout", latch. getCount ( ), 0 )
18129	assertTrue ( containsSymbol ( symbols, "@/postData -- POST", docUri, 24, 1, 24, 26 ) )
18130	Assert. assertEquals ( 3, result. size ( ) )
18131	Assert. assertTrue ( true )
18132	assertTrue ( set. contains ( any ( set ) ) )
18133	assertNotNull ( injector )
18134	Assert. assertEquals ( 0, result. getEntities ( ). size ( ) )
18135	Assert. assertTrue ( result. isEmpty ( ) )
18136	assertSame ( StackLocatorUtilTest. class, reversed. pop ( ) )
18137	assertEquals ( 3.0, median, 0.0000001 )
18138	assertThat ( isTransactionRelated, is ( false ) )
18139	assertEquals ( true, ispcapng )
18140	assertThat ( actual, is ( expected ) )
18141	assertEquals ( 444L, WebClient. create ( address ). get ( Book. class ). getId ( ) )
18142	assertNotNull ( jobId )
18143	runner. assertAllFlowFilesTransferred ( PublishKafka. REL_SUCCESS, 3 )
18144	assertNotNull ( Activity. reader ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
18145	assertEquals ( "d'aqu铆 a 12 minuts", t. format ( new Date ( 1000 * 60 * 12 ) ) )
18146	assertSame ( "Should also work for a copy", httpResponse, httpResponseProviderIgnoreAdditionalHeaders. getResponse ( requestCopy ) )
18147	assertNull ( shopEntity. getAddressFormatByCountryAndLocaleAndCustomerTypeAndAddressType ( "GB", "en", "B2B", "B" ) )
18148	assertEquals ( script, observedScript )
18149	assertEquals ( getMessage ( MessageKeys. E_TR_FW_0001 ), driver. findElement ( By. cssSelector ( "p" ) ). getText ( ) )
18150	assertJson ( "{'value': 'foo'}", serialize ( bean ) )
18151	assertEquals ( 1, LogUtil. findMessage ( "The service method com.alibaba.dubbo.rpc.support.DemoService.echo(String) is DEPRECATED" ) )
18152	Assert. assertEquals ( "(nt_change_misc spl?)", nt_change_misc. toStringTree ( parser ) )
18153	Assert. assertEquals ( 10, result. size ( ) )
18154	assertTrue ( "Expected " + N + " >= " + numResults, numResults <= N )
18155	assertMissingBoth ( "one", "set", 2L )
18156	assertEquals ( SC_OK, response. getStatus ( ) )
18157	assertEquals ( 1, httpsUsageEntries. size ( ) )
18158	Assert. assertEquals ( Double. valueOf ( config. getDoubleValue ( ) ), Double. valueOf ( result. getDoubleValue ( ) ) )
18159	assertEquals ( expResult, result )
18160	assertTrue ( response. contains ( environmentModuleConfig ) )
18161	assertTrue ( ruleNames. remove ( "Wrong eval order 1" ) )
18162	assertArrayEquals ( expected, array )
18163	assertEquals ( 11120, ( int ) ( EarthCalc. vincentyDistance ( buenosAires, kew ) / 1000 ) )
18164	assertExpectationsToDatabase ( apiConnectionThrottle, dbConnectionLimit )
18165	assertEquals ( view, response )
18166	dsUtil. assertTaskParamsMatchEntityProperties ( expectedParams, entity )
18167	Assert. assertEquals ( 1, compareResult )
18168	assertTrue ( "attempting to persist entity with transactional entity manager and no transaction, should fail with a TransactionRequiredException" + " but we instead got a " + error, error instanceof TransactionRequiredException )
18169	assertEquals ( sapper. getY ( ), oldYPosition + 1 )
18170	assertEquals ( "Test message ab c", result )
18171	assertEquals ( expResult, result )
18172	Assert. assertEquals ( 10, o )
18173	assertEventCount ( events, 2 )
18174	assertEquals ( 0, bpt. getOutputError ( ). getTotalNetworkError ( ), 0.1 )
18175	assertThat ( extractor. supports ( sheet ), is ( true ) )
18176	assertPerms ( perms )
18177	Assert. assertEquals ( "Invalid result", 42D, result, 0D )
18178	Assert. assertEquals ( 2, consumerHolders. size ( ) )
18179	Assert. assertEquals ( "(aa_change_deletion (aa_point_location (aa_char Cys) 123) del)", aa_change_deletion. toStringTree ( parser ) )
18180	assertEquals ( expectedString, DomUtils. removeNewLines ( html ) )
18181	assertEquals ( "Expected 1 results!", 1, n )
18182	assertEquals ( instance. getUuid ( ), result )
18183	assertEquals ( "No regression here.", destination. getValue ( ) )
18184	assertEquals ( "VALID", testObject. getObjectState ( ) )
18185	assertEquals ( size + 1, notifierManager. internal. size ( ) )
18186	assertNoTaint ( d1. getDescription ( ) )
18187	assertQuery ( true, "declare namespace n = 'urn:blah'; declare namespace p = 'urn:foo'; declare namespace q = 'urn:blah'; deep-equal(//e1/@n:a, //e2/@n:a)" )
18188	assertEquals ( "durp2", res. getHeader ( "X-woop" ) )
18189	assertEquals ( DbEntityState. DELETED_TRANSIENT, entityState )
18190	assertEquals ( expectedDate, actualDate )
18191	assertNotNull ( "result cannot be null", result )
18192	assertTrue ( TracingHandlerInterceptor. isTraced ( request ) )
18193	Assert. assertNotNull ( pack )
18194	Assert. assertTrue ( expect ( o, true ) )
18195	assertEquals ( new Double ( 20.5 ), request. getVisitorLongitude ( ) )
18196	assertAllCommandsUsed ( )
18197	Assert. assertEquals ( true, errors. hasFieldErrors ( "code" ) )
18198	assertTrue ( false )
18199	assertThat ( mojo. getClassifierAsString ( ), is ( "" ) )
18200	Assert. assertEquals ( expected, resultString )
18201	Assert. assertTrue ( "XML are similar " + myDetailedDiff, myDetailedDiff. similar ( ) )
18202	Assert. assertEquals ( "SELECT DATE_ADD('2009-01-01', INTERVAL 6 / 4 MINUTE_SECOND);", text )
18203	assertTrue ( selectedCells. isEmpty ( ) )
18204	assertTokens ( Tokens. RP )
18205	Assert. assertEquals ( 40., route. getActivities ( ). get ( 0 ). getEndTime ( ), 0.01 )
18206	assertEquals ( 3, postCommentScores. size ( ) )
18207	assertTrue ( today. isAfter ( sinceGraduation ) )
18208	assertEquals ( "noParams", b. noParams ( ) )
18209	files. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE_PATTERN )
18210	assertEquals ( 0, managementService. createJobQuery ( ). processInstanceId ( processInstance. getId ( ) ). count ( ) )
18211	assertEquals ( "--payload", props. get ( "expression" ) )
18212	assertEquals ( topic. getUnsubscribeLinkForSubscribersOf ( Branch. class ), "/branches/1/unsubscribe" )
18213	assertEquals ( path, DockerConnectorConfiguration. DEFAULT_DOCKER_MACHINE_CERTS_DIR )
18214	assertEquals ( "3F000000", value. getDataAsHexStr ( ) )
18215	assertEquals ( "hello", result )
18216	assertEquals ( "", event. getField ( EventFieldName. COMMENT ). getValue ( ) )
18217	assertEquals ( wrappedTemplate + " <=?", test. build ( ) )
18218	assertMockEndpointsSatisfied ( )
18219	assertTrue ( "Interceptor should apply", result )
18220	Assert. assertEquals ( message, o1. getResultQuality ( ), mapper. valueToTree ( found. getResultQuality ( ) ) )
18221	assertEquals ( expResult, result )
18222	assertEquals ( expected, parsed )
18223	assertEquals ( this. setup ( ). getUri ( baseURI ), expectedURI )
18224	assertThat ( exceptions. getFirst ( ). getExceptionClassName ( ), is ( "SentryExceptionTest$InnerClassThrowable" ) )
18225	assertEquals ( AnalysisState. ERROR, loadedSubmission2. getAnalysisState ( ) )
18226	assertNotNull ( action )
18227	assertEquals ( true, r. invokeMethod ( "startsWith", new Class [ ] { java. lang. String. class }, new Object [ ] { "obj" } ) )
18228	assertTrue ( resourceExists ( resourceURI ) )
18229	assertEquals ( new Integer ( 400 ), MethodFixture. getArgNum ( ) )
18230	assertThat ( adds, StreamMatchers. empty ( ) )
18231	assertTrue ( "Incorrect statement in the Block", stmt. equals ( TestCommandStatement. sample2 ( ) ) )
18232	Assert. fail ( "Xfdf files are not equal" )
18233	assertEquals ( "Inserted count", 1, count )
18234	Assert. fail ( )
18235	assertThat ( PrettyTime. of ( Locale. US ). print ( dur, TextWidth. WIDE, false, 1 ), is ( "124 milliseconds" ) )
18236	Assert. assertTrue ( uploadedFile. exists ( ) )
18237	assertEquals ( "Error when reading bytes in " + MINIMAL_CHARSETS [ i ], expected ++, largeBuffer [ j ++ ] )
18238	assertEquals ( count, rows. size ( ) )
18239	assertTrue ( hashSet. contains ( p1 ) )
18240	assertEquals ( "Encoding a null string should return null", null, encoded )
18241	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
18242	Assert. assertEquals ( SchemaOrgConstants. TYPE_VISUAL_ARTWORK, SchemaOrgTypeFactory. createObject ( fb ). getTypeName ( ) )
18243	assertThat ( numFound ( query ( "q=10.0.0.0/24" ) ), is ( 1L ) )
18244	assertEquals ( 5, d. asInt4 ( ) )
18245	assertEquals ( "org.jivesoftware.util.SetCharacterEncodingFilter", result )
18246	Assert. assertEquals ( 0, result. size ( ) )
18247	assertEquals ( 0, instance. getNeuronsCount ( ) )
18248	assertFalse ( mock. booleanReturningMethod ( 12 ) )
18249	assertTrue ( "Http authentication factory should be created", ops. exists ( TEST_AUTHENTICATION_FACTORY_ADDRESS ) )
18250	assertThatStepsInstancesAre ( builderAnnotated. buildCandidateSteps ( configuration ), FooSteps. class )
18251	assertNotNull ( result )
18252	assertEquals ( false, new String ( generatedfile. getContent ( ), "utf-8" ). contains ( "testEvent" ) )
18253	assertNotNull ( response )
18254	Assert. assertEquals ( ref, Preconditions. checkNotNull ( ref, "Reference should not be null" ) )
18255	assertEquals ( response, webRespose )
18256	Assert. assertEquals ( expectedResponse, proxy. sayHello ( message ) )
18257	Assert. assertEquals ( functionColumn, ( ( String [ ] ) result ) [ 0 ] )
18258	Assert. assertEquals ( expectedResult, resultString )
18259	assertTrue ( p1. equals ( p2 ) )
18260	Assert. assertEquals ( absChild, ResolverMap. combine ( parent, absChild ). replaceAll ( "/", "\\\\\\\\" ) )
18261	assertSame ( con. nativeSQL ( "select * from foo" ), "select * from foo" )
18262	Assert. assertEquals ( "<br/>b", out. toString ( ) )
18263	assertMockEndpointsSatisfied ( )
18264	Assert. assertEquals ( "(aa_change_deletion (aa_range (aa_point_location (aa_char Cys) 123) _ (aa_point_location (aa_char Arg) 125)) del (aa_string Cys Cys Arg))", aa_change_deletion. toStringTree ( parser ) )
18265	Assert. assertTrue ( "TMRAP servlet accepted bad syntax", code == 400 )
18266	assertEquals ( "{\\"id\\": 1}", r. toString ( ) )
18267	assertTrue ( response. getBody ( ). contains ( "<ns2:out>test</ns2:out>" ) )
18268	Assert. assertNull ( pdoc. get ( new Path ( "field7" ) ) )
18269	assertThat ( date. get ( PlainDate. axis ( ). element ( ) ), is ( date ) )
18270	assertPostFails ( "4", variant, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
18271	assertNotNull ( TOKEN )
18272	assertEquals ( 4, packetIn. getCount ( ) )
18273	assertSame ( new JList ( ). getUIClassID ( ), list. getUIClassID ( ) )
18274	assertEquals ( emptyList ( ), tags )
18275	assertEquals ( 5, generators. size ( ) )
18276	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
18277	assertEquals ( pdop, instance. getPositionDOP ( ), 0.1 )
18278	Assert. fail ( "Failure expected on an unauthorized call" )
18279	assertTrue ( s. execute ( "select part_id from parts" ) )
18280	assertQ ( req, "//result[@name='response'][@numFound='1']", "//result[@name='response']/doc[1]/str[@name='id'][.='3']" )
18281	assertThat ( versionedIdsOf ( units ), bagEquals ( versionedIdList ( ) ) )
18282	assertEquals ( "Axxxx", result )
18283	assertThat ( response. getResponseCode ( ), equalTo ( 204 ) )
18284	assertEquals ( 20, rowCount )
18285	assertThat ( other, LocalTimeMatchers. sameSecondOfMinute ( date ) )
18286	assertEquals ( exp ( "substring(path, offset, len)" ), property. substring ( offset, length ). getExpression ( ) )
18287	assertPermanentCount ( playerB, "Treacherous Pit-Dweller", 1 )
18288	assertListTEquals ( listDot, 1, 2, 3, 4, 5 )
18289	assertTrue ( sub. addEdge ( e4 ) )
18290	assertEquals ( "test@elasticinbox.com:123", key )
18291	assertEquals ( subset. fields ( ). length, 0 )
18292	assertEquals ( expected, stringUtils. capitalizedAsConstant ( "abCe" ) )
18293	assertThat ( id, equalTo ( tweet. getId ( ) ) )
18294	assertEquals ( d1, d2 )
18295	assertE ( "�尖�尖�尖�尖��" + "��   ��" + "�尖��  ��" + "��   ��" + "�尖�尖�尖�尖��" )
18296	assertEquals ( "{\\"options\\":{}}", result )
18297	assertEquals ( 11, matchingMtTableList. size ( ) )
18298	assertNull ( "Intersections should be null", p )
18299	Assert. assertEquals ( "incorrect number of branches", 3, branchesData. size ( ) )
18300	assertTrue ( true )
18301	assertCandidateList ( expectedCandidates, actualCandidates )
18302	assertTrue ( isEqual )
18303	assertThat ( mergedCss. toString ( ), is ( "div" ) )
18304	assertEquals ( true, active )
18305	assertEquals ( 4, result )
18306	assertEquals ( "SELECT fname || \\" \\" || lname AS full_name FROM tutorial", statement. toString ( ) )
18307	Assert. assertTrue ( prefix. equals ( "Cache|KeyCache|Capacity|" ) )
18308	assertNotNull ( dealershipDocument. get ( ). getAutomobiles ( ) )
18309	assertEquals ( "<div xmlns=\\"http://www.w3.org/1999/xhtml\\">HELLO WORLD</div>", actual. getText ( ). getDiv ( ). getValueAsString ( ) )
18310	Assert. assertNull ( header )
18311	assertThat ( propertyGetter. propertyByType ( testInstance, Collection. class ), sameInstance ( ( Collection ) testInstance. list ) )
18312	assertResponseDoesNotContainContain ( "Warning: No amendment mapping for io.neba.neba-core:" )
18313	assertThat ( partitions, is ( nullValue ( ) ) )
18314	Assert. assertEquals ( record, expectRecord, "Should be equal." )
18315	assertEquals ( 3, graph. size ( ) )
18316	assertEquals ( 2, helper. updateFriendsOf ( new JUser ( "test" ) ). size ( ) )
18317	assertEquals ( 7, result )
18318	assertThat ( iterateModel. getIncrement ( ), is ( 30 ) )
18319	assertTrue ( stack. isEmpty ( ) )
18320	assertTrue ( inmemoryDOMDataTreeShardWriteTransaction. isFinished ( ) )
18321	assertSchema ( expected, plan. getOutSchema ( ) )
18322	assertTrue ( true )
18323	assertTrue (! nnList. isEmpty ( ) )
18324	assertThat ( allRootDescendants ( ), everyItem ( not ( canBeUnsheduled ( ) ) ) )
18325	assertTrue ( game2. isGameOver ( ) )
18326	Assert. assertTrue ( i == b )
18327	assertTrue ( out. equals ( "G0 AXIS_A10.12" ) )
18328	assertEquals ( Transliterator. SPACES, code )
18329	assertNotNull ( result )
18330	assertEquals ( releaseId, kmodule. getReleaseId ( ) )
18331	assertThat ( softDrink, instanceOf ( Object. class ) )
18332	assertThat ( source. getModel ( ), is ( nullValue ( ) ) )
18333	assertTrue ( "Windows icon exists", icon. exists ( ) )
18334	assertEquals ( "a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a", DigestUtils. sha3_256Hex ( EMPTY_STRING ) )
18335	assertEquals ( TEST_CONTEXT_ROOT_BASE_URI, actualBaseUri )
18336	assertEquals ( "DATA" + -- i, new String ( buffer, "UTF-8" ) )
18337	Assert. assertEquals ( 70, analyser. getLoadDelivered ( ). get ( 0 ), 0.01 )
18338	assertNotNull ( envelope )
18339	assertThat ( content, is ( "This is the Document Title\\n \\nand this is the document body.\\n \\n \\n" ) )
18340	assertEquals ( 3, handler. recover ( new Object [ ] { "Randell" }, new RuntimeException ( "Planned" ) ) )
18341	Assert. assertEquals ( "org.jvnet.jaxb2_commons.tests.issues.IssueGH31ComplexType[testEnum=Male(default)]", t. append ( null, new StringBuilder ( ), s ). toString ( ) )
18342	assertThat ( "keywordProperties.size()", keywordProperties. size ( ), is ( 0 ) )
18343	assertEquals ( 4, albumsView. getAlbumPreviews ( ). size ( ) )
18344	assertNonNullTaint ( path )
18345	assertThat ( options. toJSON ( ), is ( ( JsonElement ) json ) )
18346	assertTrue ( Ordering. natural ( ). isOrdered ( array ) )
18347	assertEquals ( "void ;\\n", found )
18348	assertTrue ( job. waitForCompletion ( true ) )
18349	Assert. assertEquals ( 1, this. cq ( "select COUNT(c) from Customer c where c.deleted = FALSE" ). getResultList ( ). size ( ) )
18350	assertEquals ( expResult, result, 0.0001 )
18351	assertReflectionEquals ( product, existingProduct )
18352	Assert. assertEquals ( "value1", pyObjectValue. get ( ) )
18353	Assert. assertNull ( userValidated )
18354	assertTrue ( diff. conflicts ( diff2 ) )
18355	assertEquals ( new HashSet < String > ( Arrays. asList ( "toplea2" ) ), underTest. findGoverningEdOrgs ( courseTranscript ) )
18356	assertTrue ( "bar". equals ( c. getValue ( ) ) && "foo". equals ( c. getName ( ) ) && 1 == c. getVersion ( ) && "/path". equals ( c. getPath ( ) ) && null == c. getDomain ( ) )
18357	assertNull ( "getAsync for unset key should have returned null", result )
18358	assertEquals ( STATIC_COUNT, count )
18359	assertTrue ( metadata. contains ( "<ComplexType Name=\\"ComplexType\\" Abstract=\\"true\\" OpenType=\\"true\\">" + "<Property Name=\\"prop1\\" Type=\\"Edm.String\\"></Property>" + "<Property Name=\\"prop2\\" Type=\\"Edm.String\\"></Property>" + "</ComplexType>" ) )
18360	assertMockEndpointsSatisfied ( )
18361	assertThat ( selected. entrySet ( ), is ( empty ( ) ) )
18362	Assert. fail ( "Should have Assert.failed on the second parameter to 'contains' not " + "being bound." )
18363	assertEquals ( "http://example.com/fhir/Patient?_format=json", capt. getAllValues ( ). get ( idx ). url ( ). toString ( ) )
18364	assertResultSet ( fc. getMembers ( filter, new TypedObjectNodeXPathEvaluator ( ) ), "PHILOSOPHER_1" )
18365	assertEquals ( ScheduledServiceUtil. generateTime ( date2, 2, date3 ), date )
18366	assertThat ( actual. get ( ), equalTo ( "hello world!!" ) )
18367	assertEquals ( sink, writeOperation. getSink ( ) )
18368	assertThat ( result, is ( jsonNull ( ) ) )
18369	Assert. assertEquals ( 2, locations. getPeerAddresses ( ). size ( ) )
18370	assertEquals ( 16, getValue ( map, "?t" ). intValue ( ) )
18371	assertEquals ( 3, execute ( Painting. class, parsed1 ). size ( ) )
18372	authRule. assertScenario ( scenario )
18373	assertEquals ( 851042397000L, date. getTime ( ) )
18374	assertEquals ( "0", out. toString ( ) )
18375	assertThat ( result, equalTo ( emailMessage ) )
18376	assertTrue ( year. equals ( SEASON_YEAR ) )
18377	assertThat ( command. accept ( state ), is ( true ) )
18378	assertEquals ( proxyPort, sut. getProxyPort ( ) )
18379	assertEquals ( "Hello World!", response )
18380	assertEquals ( true, result )
18381	assertTrue ( EqualsBuilder. reflectionEquals ( expectedPatient. getGender ( ), patient. getGender ( ) ) )
18382	assertTrue ( failure )
18383	assertNull ( "Last Task in the list should not have a 'next' task", nextTask )
18384	assertEquals ( "Ten, Ten", route. getLongName ( ) )
18385	assertEquals ( - 1, BufferTools. indexOfTerminator ( buffer, 0, 2 ) )
18386	assertCreateUser ( userB )
18387	assertThat ( statement. createStatement ( ), is ( "ALTER TABLE testTable ADD COLUMN \\"Entity\\" object AS (\\"field1\\" string)" ) )
18388	assertThat ( plugin. out, is ( equalTo ( new URL ( "http://halp/" ) ) ) )
18389	assertEquals ( Double. valueOf ( 5 ), Double. valueOf ( value. asDouble ( 10.0 ) ) )
18390	JsonAssert. assertJsonEquals ( "{id:id,error:{message:'badRequest: FAILURE_MESSAGE',code:400}}", getOutput ( ) )
18391	assertNotSame ( c1. getValues ( ). iterator ( ). next ( ), c2. getValues ( ). iterator ( ). next ( ) )
18392	Assert. assertEquals ( notaInfo, nota. getInfo ( ) )
18393	assertEquals ( "Did not find 1 statement in named graph", 1, m. size ( ) )
18394	assertEquals ( "\\"NORMAL\\"", toJson ( severity ) )
18395	assertEquals ( expected, zero. getInferredGenericTypeArgumentClass ( superClass, argIndex ) )
18396	assertNull ( sublist )
18397	Assert. assertEquals ( 2, s. y )
18398	assertEquals ( expectedQuery, actualQuery )
18399	assertNotNull ( Cells. indentBounds ( c1 ) )
18400	assertEquals ( rpcsid. getSubAuthority ( ). length, 0 )
18401	assertXmlEquals ( "<gex:EX_Extent" + " xmlns:gex=\\"" + Namespaces. GEX + '"' + " xmlns:gco=\\"" + Namespaces. GCO + "\\">\\n" + "  <gex:description>\\n" + "    <gco:CharacterString>World</gco:CharacterString>\\n" + "  </gex:description>\\n" + "  <gex:geographicElement>\\n" + "    <gex:EX_GeographicBoundingBox>\\n" + "      <gex:extentTypeCode>    <gco:Boolean> true </gco:Boolean></gex:extentTypeCode>\\n" + "      <gex:westBoundLongitude><gco:Decimal> -180 </gco:Decimal></gex:westBoundLongitude>\\n" + "      <gex:eastBoundLongitude><gco:Decimal>  180 </gco:Decimal></gex:eastBoundLongitude>\\n" + "      <gex:southBoundLatitude><gco:Decimal>  -90 </gco:Decimal></gex
18402	assertSame ( DefaultParamProcessor. INSTANCE, actual )
18403	Assert. assertEquals ( "doubleNestedString", found. getName ( ) )
18404	assertEquals ( LibUsb. SUCCESS, LibUsb. init ( null ) )
18405	assertEquals ( 3, counter. getBeforeFileTreeWalkCount ( ) )
18406	org. junit. Assert. assertEquals ( 3, synonyms. size ( ) )
18407	assertTrue ( result. length ( ) > 0 )
18408	assertEquals ( testString, testObject. getLabel ( ) )
18409	assertThat ( query, is ( queryTmpl ) )
18410	mojos. assertBuildOutputs ( new File ( basedir, "target" ), "classes/proc/Source.class", "generated-sources/annotations/proc/GeneratedSource.java" )
18411	assertEquals ( "test", echo. echo ( "test" ) )
18412	assertOut ( "/**\\n * @export\\n */\\nB.prototype.b = function() {\\n  var self = this;\\n  function c(s, f) {\\n  };\\n  function d() {\\n  };\\n  c('foo', d);\\n  \\n}" )
18413	assertThat ( target. readValue ( value ), is ( true ) )
18414	assertEquals ( 7100, ceosReader. readB4 ( ) )
18415	assertEquals ( expected, actual )
18416	Assert. assertEquals ( 3, new Calculator ( ). add ( 1, 2 ) )
18417	assertOutWithMetadata ( "/**\\n * foo.bar.baz.A\\n *\\n * @fileoverview\\n *\\n * @suppress {checkTypes|accessControls}\\n */\\n\\ngoog.provide('foo.bar.baz.A');\\n\\n\\n\\n/**\\n * @export\\n */\\nfoo.bar.baz.A = function() {\\n}" )
18418	assertEquals ( 4, g. size ( ) )
18419	Assert. assertEquals ( toArray ( "json", "aaa" ), merged )
18420	assertEquals ( Avros. doubles ( ), t. getSubTypes ( ). get ( 0 ) )
18421	org. junit. Assert. assertEquals ( expectedCount, EvaluationData. countEvaluationDatas ( ) )
18422	assertThat ( configuration, is ( instanceOf ( BaseConfiguration. class ) ) )
18423	assertNotNull ( ExecutionTime. forCron ( parser. parse ( "0/1 * * * * *" ) ) )
18424	assertEquals ( "3 卅丕� 卅��诏�乇�", t. format ( new Date ( 0 ) ) )
18425	Assert. assertEquals ( outputString, outStream. toString ( ) )
18426	assertThat ( chargingSchedule. getDuration ( ), equalTo ( anInteger ) )
18427	assertEquals ( client. testEnhancedRest ( param0 ). getOut ( ), "MixedMode" )
18428	Assert. fail ( "Remote invocation on a local view " + LocalEcho. class. getName ( ) + " was expected to fail" )
18429	CompileUtils. assertCompiles ( "QEntity", writer. toString ( ) )
18430	assertThat ( testOutcome. getSuccessCount ( ), is ( 2 ) )
18431	assertEquals ( true, result )
18432	assertOut ( "switch (i) {\\n\\tcase 1:\\n\\t\\tbreak;\\n}" )
18433	assertFalse ( rangeLock. tryWriteLock ( 8192 * 3, 8192 ). isPresent ( ) )
18434	assertEquals ( t1, UUIDUtils. min ( null, t1 ) )
18435	assertMapping ( node, 0, 15, 0, 30, 0, 31 )
18436	assertNthArgumentGeneratesXPath ( 0, nth0XPathExpression )
18437	mockOut. assertIsSatisfied ( )
18438	assertTrue ( isEqual ( d1, d2 ) )
18439	assertTrue ( appValidationService. validate ( "AAA", ApplicationType. task ) )
18440	assertFalse ( retryCommandSpy. shouldShowUsage ( ) )
18441	Assert. assertTrue ( "did not find null", foundNull )
18442	assertEquals ( numberOfExceptions, 9 )
18443	assertAnnotations ( 4, Quantity. class, new TestEntity < > ( 0, "300 m", "300 m" ), new TestEntity < > ( 1, "300 metres", "300 metres" ), new TestEntity < > ( 2, "300meters", "300meters" ), new TestEntity < > ( 3, "1m", "1m" ) )
18444	Assert. assertEquals ( StringUtils. trimAllWhitespace ( result. toString ( ) ), "{\\"$or\\":[{\\"age\\":{\\"$nin\\":[1,5,10]}}]}" )
18445	assertEquals ( params, repoType. marshallize ( ) )
18446	assertEquals ( "getSongsBySongIdAndSongId", Names. resourceMethodName ( resource, method ) )
18447	assertEquals ( 40.0, Solutions. bestOf ( solutions ). getCost ( ), 0.1 )
18448	Assert. assertEquals ( "Hello", r. getGreet ( ) )
18449	assertEquals ( result, subject. unmodifiableSet ( ) )
18450	assertEquals ( "{\\"d\\":{\\"isScrumTeam\\":false}}", StringHelper. inputStreamToString ( ( InputStream ) response. getEntity ( ) ) )
18451	assertEquals ( expected, output )
18452	assertNoDataValue ( targetPoduct. getBand ( FLOAT_BAND_NAME ), new PixelPos ( 23.5f, 13.5f ), 42.0, 42.0 )
18453	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE NAME(nodes) <= 'literal'" ) )
18454	assertFiltersDefined ( configurationUnit, filter ( "Name field filter", "name" ) )
18455	assertEquals ( person, findOne )
18456	Assert. assertEquals ( oid, commit. getId ( ) )
18457	assertEquals ( "456/i_have_spaces.log", tokenId )
18458	assertSerializedEquals ( c )
18459	assertEquals ( "S.ab\\n", found )
18460	assertEquals ( "TestPassword", envVars. get ( "COVERITY_PASSPHRASE" ) )
18461	assertEquals ( expectedResult, entityParser. parseObservedProperty ( json ) )
18462	assertEquals ( "Conversion did not match", value, to )
18463	Assert. assertEquals ( dataString. trim ( ), outString )
18464	assertFalse ( ProtocolConstants. StatusCodes. Create. Follow. FOLLOWED_NOT_EXISTING. equals ( this. jsonResponse. get ( ProtocolConstants. STATUS_MESSAGE ) ) )
18465	assertEquals ( fOk. get ( ), new Integer ( 4 ) )
18466	assertEquals ( "(| (& [* fo.*] [*.*oo]) [= bar])", m. toString ( ) )
18467	assertNull ( array )
18468	arrays. assertDoesNotHaveDuplicates ( description, actual )
18469	Assert. assertEquals ( ABS_URL_WITH_CREDS, url )
18470	assertResultsEqual ( renderNode ( getNumberNode ), 42L )
18471	assertEquals ( String. class, method. getReturnType ( ) )
18472	assertEquals ( "anonymous", p. getUser ( ) )
18473	assertEquals ( 202, result )
18474	assertNotNull ( fixture )
18475	assertTrue ( response. getBody ( ). contains ( "Editor Service" ) )
18476	assertThat ( immutableTypes, everyItem ( immutable ( ) ) )
18477	Assert. assertTrue ( cmd. apply ( bkFlags, new String [ ] { "-p", password, "-l", ledgerIds } ) )
18478	assertEquals ( expectedMap, map )
18479	Assert. assertEquals ( expected, actual )
18480	assertNotNull ( CommonInjector. getHolmesHomeSubDirectory ( "ui" ) )
18481	Assert. assertNull ( person. getPersonVoidReason ( ) )
18482	Assert. assertEquals ( true, tableColumnMeta. isAutoUpdated ( ) )
18483	Assert. assertArrayEquals ( VALUE. toArray ( ), dataItems. toArray ( ) )
18484	assertThat ( issues, is ( empty ( ) ) )
18485	Assert. assertThat ( runtimeInfo. getRuntimeClassName ( ), is ( "org.talend.components.processing.runtime.typeconverter.TypeConverterFunction" ) )
18486	assertTrue ( isDynamicCSVFormat )
18487	assertTrue ( this. testThirdMapRequestHandlerAdvice. executeLatch. await ( 10, TimeUnit. SECONDS ) )
18488	assertEquals ( 90., violation, 0.01 )
18489	assertEquals ( extractedYAML, expectedYAML )
18490	assertFalse ( "our member-group shouldn't have set our attribute", retAttr. contains ( attributes. get ( 0 ) ) )
18491	Assert. assertEquals ( fieldsCountExpected. get ( clazz ). intValue ( ), fieldsMetadata. getFields ( ). size ( ) )
18492	assertEquals ( 1, links. size ( ) )
18493	assertOperationLog ( decisionDefinition )
18494	assertThat ( readString, is ( not ( nullValue ( ) ) ) )
18495	Assert. assertEquals ( "byte I read does not match the first byte I wrote", expectedReadData, readData )
18496	assertEquals ( map, map2 )
18497	assertionHelper. assertTwoFilesAreEqualByRecursiveTreeComparison ( localFile, ( File ) targetFile )
18498	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
18499	assertEquals ( ClassName. get ( Integer. class ), adder. parameters. get ( 0 ). type )
18500	assertThat ( noOfSolutions, is ( 791208 ) )
18501	assertTrue ( Files. isRegularFile ( gfs. getPath ( "/test_file.txt" ) ) )
18502	assertEquals ( "_cat/segments", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
18503	assertEquals ( 2, result )
18504	assertArrayEquals ( data, value. getData ( ) )
18505	assertEquals ( expectedSignature, signature )
18506	assertTrue ( "'destroy sub-branch' was configured to be ignored", filter. accept ( "destroy sub-branch \\"esmalling_branch\\" of branch", "/main/sit_r6a/11" ) )
18507	Assert. assertEquals ( actual, expected, "Returned an invalid property value." )
18508	assertEquals ( "did not get expected number of entitlements ", 74, list. size ( ) )
18509	Assert. assertEquals ( query, interpretedQuery )
18510	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
18511	assertEquals ( doc1, io. getDocument ( q1 ) )
18512	assertTrue ( result. isUndefined ( ) )
18513	Assert. assertNull ( entry )
18514	assertEquals ( textualTokenJson. get ( "token" ). getAsString ( ), textualToken. getToken ( ) )
18515	assertNotNull ( x509Attestation. getCAReferencesFinal ( ) )
18516	assertThat ( expectedResult, is ( actualResult ) )
18517	assertEquals ( iqEntityTimeHandler. formatsTimeZone ( TimeZone. getTimeZone ( "GMT-8:00" ) ), "-08:00" )
18518	assertTrue ( constraintValidator. isValid ( Money. of ( 1, "EUR" ), null ) )
18519	assertTrue ( resultSq == Position. NOPOSITION )
18520	assertEquals ( "127.0.0.1", holder. dbManager. getUserServerIp ( email, AppNameUtil. BLYNK ) )
18521	maps. assertContainsOnly ( info, actual, expected )
18522	assertFalse ( impl. getIsApiToken ( ) )
18523	Assert. assertEquals ( 1, lifeMembers ( ) )
18524	assertEquals ( a1, a2 )
18525	assertSame ( shouldFind, selection. fileSelect ( By. id ( "test" ) ) )
18526	assertEquals ( 100, array. length )
18527	assertEqualsJson ( expected, actual )
18528	Assert. assertEquals ( expectedSpec, actualSpec )
18529	assertEquals ( "baz/\\n" + "  foo/\\n" + "    bar/\\n" + "      wooz 0 (S_IFREG)\\n" + "    rooz -> bar/wooz\\n", sw. toString ( ) )
18530	assertEquals ( ( double ) 8, result. getDoubleValue ( ), 0.0 )
18531	Assert. fail ( )
18532	assertThat ( out. toString ( ), is ( String. format ( "Same cell%s", sep ) ) )
18533	assertThatCellReaderWasCalled ( )
18534	assertMap ( expected, result )
18535	Assert. assertEquals ( "Num tasks not correct", 1, job. getTasks ( ). size ( ) )
18536	Assert. assertNotNull ( view )
18537	Assert. assertEquals ( 6, handler. getCount ( ) )
18538	assertNotNull ( applicationContext. getBean ( "rewardNetwork" ) )
18539	Assert. assertTrue ( isDiscountApplied )
18540	Assert. assertEquals ( originStat + FILE_LEN, sStatistics. getBytesWritten ( ) )
18541	assertEquals ( "message", result )
18542	Assert. assertTrue ( outContent. toString ( ). startsWith ( "## Version 1.0.0 to 1.0.2" ) )
18543	assertEqualsIgnoreWhitespace ( expected, real )
18544	assertThat ( output, containsString ( "Dataset deleted." ) )
18545	assertThat ( time. with ( PlainTime. COMPONENT. setToNextFullHour ( ) ), is ( PlainTime. of ( 1 ) ) )
18546	Assert. assertArrayEquals ( EXPECTED, data )
18547	Assert. assertEquals ( expectedOne, actual )
18548	assertThat ( extension. getServerNames ( ), is ( nullValue ( ) ) )
18549	assertTrue ( info. isEmpty ( ) )
18550	assertNull ( changeEvent [ 0 ] )
18551	assertTrue ( psa. getLegend ( ) instanceof UniqueSymbolPoint )
18552	Assert. assertTrue ( futureDigest. digest ( ). keyDigest ( ). isEmpty ( ) )
18553	assertEquals ( sampleTodolist, ret )
18554	assertFalse ( topic. hasTopic ( ) )
18555	assertThat ( list. size ( ), is ( 0 ) )
18556	assertThat ( "Note: " + "if this test fails, then the ICU4J library in use does not maintain our bounded expansion " + "and could leak passwords; use a different library or adjust the expansion factor", actualDestLen, lessThanOrEqualTo ( expectedMaxExpansionSize ) )
18557	assertFalse ( hasPermission )
18558	assertNoViolations ( violations )
18559	assertEquals ( "", result )
18560	assertEquals ( "Invalid argument passed", value, supportedArgument )
18561	assertEquals ( AnsiEscapeCode. values ( ). length, codes. size ( ) )
18562	assertEquals ( "test", msg. getText ( ) )
18563	assertParseTree ( rootNode ( "hello world", stringNode ( "greeting", "hello world", stringNode ( "hi you", "hello world" ) ) ), tree )
18564	assertEquals ( "something == x", result )
18565	assertArrayEquals ( refar, d. getResult ( ) )
18566	assertThat ( report, is ( not ( nullValue ( ) ) ) )
18567	assertEquals ( expected, actual )
18568	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Pause>" + "before" + "<Child>content</Child>" + "after" + "</Pause>", builder. build ( ). toXml ( ) )
18569	assertThat ( downstream, hasSize ( 0 ) )
18570	assertEquals ( r, sw. toString ( ) )
18571	Assert. fail ( )
18572	assertEquals ( "Ask Question", createTopicBtnDto. getDisplayNameKey ( ) )
18573	assertEquals ( classFile1, previous )
18574	assertEquals ( count, expectedCount )
18575	assertThat ( block. instructionCount ( ), is ( 4 ) )
18576	Assert. assertNull ( header )
18577	Assert. assertFalse ( result )
18578	assertEquals ( 5D / 60D, end, 0.001 )
18579	assertEquals ( expected, actual )
18580	assertNotSame ( oldPipelineFactory, b. getPipelineFactory ( ) )
18581	assertEquals ( "? hello?,?,?", s. sql ( ) )
18582	assertTrue ( Arrays. equals ( getPacketData ( "34 00 10 01 F9 FF 3C 00 10 0E 08 08 00" ), request. serialize ( ) ) )
18583	assertEquals ( expected, actual )
18584	assertEquals ( "failed to generate variable declaration using a literal initialization and type inference", "String n = \\"10\\";", declaration )
18585	assertSchemaValue ( subject, version, 1, "{\\"type\\":\\"record\\",\\"name\\":\\"myrecord\\"," + "\\"fields\\":[{\\"name\\":\\"f1067572235\\",\\"type\\":\\"string\\"}]}", false, schemaValue )
18586	assertEquals ( "34567890QWERTYU", converted )
18587	Assert. assertEquals ( 2, ddf2. getNumRows ( ) )
18588	Assert. assertEquals ( 10, controller. getCurrentRunLevel ( ) )
18589	assertDtos ( expected, actual )
18590	assertThat ( taskService. createTaskQuery ( ). taskId ( task. getId ( ) ). count ( ), is ( 1L ) )
18591	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "\\n" + "<pmd-cpd/>", log. getLog ( ) )
18592	assertTrue ( "Should return a TVariable", t instanceof TVariable )
18593	Assert. assertEquals ( expected, actual )
18594	assertEquals ( InstancesPerListener * IterationsPerThread * ConcurrentUnits, DeadMessagHandler. deadMessages. get ( ) )
18595	assertThat ( new SelectBest ( ). selectSolution ( Arrays. asList ( sol1, sol2 ) ), is ( sol1 ) )
18596	assertEquals ( expectedResult, actualResult )
18597	assertEquals ( rightsString, fr. getFeedRights ( ) )
18598	assertEquals ( "<font size=+1>test</font>", largeSizeDecorator. toDisplay ( ) )
18599	Assert. assertEquals ( valueWrapper, valueWrapperResult )
18600	assertEquals ( queryId, fromJson. build ( ) )
18601	assertEquals ( this. sqlgGraph. traversal ( ). V ( ). toList ( ), this. sqlgGraph1. traversal ( ). V ( ). toList ( ) )
18602	assertFileExists ( file )
18603	assertEquals ( expResult, result )
18604	Assert. assertEquals ( 50f, rad, EPSILON )
18605	test. assertResult ( )
18606	assertThat ( user, is ( new User ( "alex", 32 ) ) )
18607	assertThat ( status, is ( ApplicationLauncher. CLIENT_ERROR ) )
18608	softly. assertThat ( skipInstallationChecker )
18609	assertEquals ( CSV_FILE, writer. toString ( ) )
18610	Assert. assertEquals ( "1 1 3", formatted )
18611	assertEquals ( "0001", Hex. toHexString ( outputStream. toByteArray ( ) ) )
18612	assertEquals ( "output must be empty array", 0, output. length )
18613	assertEquals ( "echo:", result )
18614	assertEquals ( uri, f. getBaseUrl ( ) )
18615	Assert. assertEquals ( expectedNode. toString ( ), pdoc. toString ( ) )
18616	Assert. assertEquals ( config. getEnumValue ( ), result. getEnumValue ( ) )
18617	assertEquals ( "git-upload-pack", fc. getCommand ( ) )
18618	assertStates ( fsm, INITIAL, TRYING, RINGING, IN_CALL, COMPLETED )
18619	assertEquals ( male, repository. getSingleResult ( query ) )
18620	assertEquals ( 1000L, end - start, 50L )
18621	assertEquals ( "^/cntrl/([^/]+)/actn$", pattern )
18622	assertTrue ( form. equals ( formUpdate ) )
18623	Assert. assertNotNull ( returnedValue )
18624	assertEquals ( 6f, a. intersectionArea ( b ), 0.0001 )
18625	assertThat ( cf. getClientProperties ( ). entrySet ( ), hasSize ( defaultClientProperties ( ). size ( ) ) )
18626	assertThat ( serialisedBatches, hasSize ( 2 ) )
18627	assertCompare ( String. valueOf ( i ), String. valueOf ( j ), expected )
18628	assertNotNull ( "PersonInformationStructure should never be null, it should at least be an empty list", personInformationStructure )
18629	assertThat ( request1. equals ( request2 ), is ( false ) )
18630	assertEquals ( distribution, partitionService. getPartitionDistribution ( regionId ) )
18631	assertDrlHasCompilationError ( drl1, 1 )
18632	AssertionUtils. multiAssertEquals ( createAsDocument9, response5. getResponseObject ( ) )
18633	assertEquals ( 200, page. getWebResponse ( ). getStatusCode ( ) )
18634	Assert. assertEquals ( "Value is incorrect", map ( TIME_2_STRING, "test" ), value )
18635	assertions. isNull ( )
18636	assertFalse ( peerAcceptanceUtil. isPeerInterestedOnRemoteWorker ( remoteClientOID. getServiceID ( ) ) )
18637	UnitTestUtils. assertEquals ( new double [ ] { 1, 2, - 1.66666666666667, 1.0 }, b. toArray ( ), 1.0e-12 )
18638	Assert. assertNull ( ( ( HibernateCallback <? > ) this. mocker. getComponentUnderTest ( ) ). doInHibernate ( this. session ) )
18639	Assert. assertFalse ( config1. equals ( config2 ) )
18640	assertTrue ( result )
18641	assertTrue ( result1 == result2 )
18642	assertNull ( "Unexpected value in outputTriple: " + outputTriple, outputTriple )
18643	Assert. assertEquals ( "Count of customer", 2, res )
18644	Assert. assertEquals ( SECRET + "-test", secret. get ( "serverKeystorePass" ) )
18645	assertEquals ( "mystring", result )
18646	Assert. assertEquals ( "123", Integer. toString ( 123 ) )
18647	assertEquals ( 0, BufferTools. indexOfTerminator ( buffer, 0, 1 ) )
18648	assertAllCommandsUsed ( )
18649	Assert. assertEquals ( "travelInTime(0).travelInTime(0).createNode().addToVar('root').createNode().addToVar('root').createNode().addToVar('root').readVar('root').println('{{result}} avec echap \\\\'')", t. toString ( ) )
18650	assertEquals ( expected, actual )
18651	assertFlowState ( ACCEPTED_FIRST_MONTH_FAILED )
18652	Assert. assertEquals ( ServerParse. UNSUPPORT, sqlType )
18653	Assert. assertEquals ( "acd", stringAppender. toString ( ) )
18654	assertEquals ( "Hello, ${audience!", value. evaluateAttributeExpressions ( createFlowFile ( attributes ) ). getValue ( ) )
18655	assertMessagesEquals ( expected, actual )
18656	assertTrue ( verifyProps ( a, LIST_AB ) )
18657	Assert. assertTrue ( EqualsBuilder. reflectionEquals ( expected, store. findVirtualServer ( "www" ), true ) )
18658	assertXpathNotExists ( "/a:entry/m:properties", xmlString )
18659	assertTrue ( uuid. length ( ) == urlToken. length ( ) )
18660	assertEquals ( "gerrit approve --project projectname --message \\"Error message\\" --code-review -2 1,2", command )
18661	assertThat ( xmlResult, CompareMatcher. isSimilarTo ( out. toString ( ) ). ignoreWhitespace ( ). withNodeMatcher ( new DefaultNodeMatcher ( ElementSelectors. byNameAndText ) ) )
18662	assertTrue ( lastReadPostList. isEmpty ( ) )
18663	assertThat ( ctx. getParameterDescriptors ( ), equalTo ( pds ) )
18664	Assert. assertEquals ( expectedRegex, pattern. compiled ( ). toString ( ) )
18665	assertThat ( rubyVersion, equalTo ( "1.9.3-p125" ) )
18666	Assert. assertArrayEquals ( new String [ ] { ".sql" }, language. getFileSuffixes ( ) )
18667	assertEquals ( "InputStreamTest", toString ( stream ) )
18668	assertEquals ( GitSCM. class, whitelist. getClassLoader ( fakeProject ). loadClass ( GitSCM. class. getName ( ) ) )
18669	assertEquals ( "from SURVEY SURVEY\\njoin functionCall() as fc\\nwhere SURVEY.NAME is not null", query. toString ( ) )
18670	assertFalse ( constraint. fulfilled ( iContext ) )
18671	Assert. assertEquals ( "SELECT 'Monty!' REGEXP '.*';", text )
18672	assertEquals ( expectedValue, propertyValue )
18673	assertEquals ( "wrong number of enumerated values... test should be examined and updated", 9, ParseMessage. values ( ). length )
18674	assertEquals ( getFailureMessage ( ), assertion, sigmoid )
18675	assertThatSql ( query, is ( "SELECT * FROM table AS nodes WHERE (nodes.col1 IS NOT NULL AND nodes.col2 IS NOT NULL)" ) )
18676	assertTrue ( readVrp. getJobs ( ). get ( "1" ). getRequiredSkills ( ). containsSkill ( "skill2" ) )
18677	assertToRegexSearch ( "/", 0, "/" )
18678	assertOut ( "var /** @type {Array} */ a = new Array(30)" )
18679	Assert. assertEquals ( "(aa_change_deletion (aa_point_location (aa_char Cys) 123) del 1)", aa_change_deletion. toStringTree ( parser ) )
18680	assertEquals ( "GBP 5.83", test. toString ( ) )
18681	Assert. assertEquals ( count + 2, nowcount )
18682	assertClosed ( toClose )
18683	assertEquals ( entry. getValue ( ), actual )
18684	assertThat ( expected. equals ( document ), is ( true ) )
18685	assertEquals ( vars, variablesTyped )
18686	Assert. assertTrue ( Arrays. equals ( new String ( entry + "\\n" ). getBytes ( ), fmt. toBytes ( e ) ) )
18687	Assert. assertTrue ( score <= 0.0 )
18688	Assert. assertNotNull ( dbRangerPolicy )
18689	assertEquals ( "AccuRev", descriptor. getDisplayName ( ) )
18690	assertEquals ( future, underTest. collect ( futures ) )
18691	assertEquals ( 0, x )
18692	assertEquals ( ROUTE_KEY, instanceIdentifier. firstKeyOf ( L3vpnMcastRoute. class ) )
18693	Assert. assertNotNull ( resultEntity )
18694	assertNotNull ( modularLauncher. getInjector ( ) )
18695	Assert. assertEquals ( "Wrong toString()", "msgVersion: 4 objectClass: org.opendaylight.yang.gen.v1.urn" + ".opendaylight.openflow.oxm.rev150225.match.entries.grouping.MatchEntry" + " msgType: 32768 oxm_field: 42 experimenterID: null", key1. toString ( ) )
18696	Assert. assertEquals ( expectedUuid, datatype. serialize ( location ) )
18697	assertEquals ( 42, boundBoxFoo. motherFoo ( 1 ) )
18698	assertEquals ( "package org.kissmda.test.junit;\\n" + "import org.kissmda.AException;\\n" + "public class ClazzName {\\n" + "  public void doSomething(  Name values){\\n" + "    try {\\n" + "      assertNotNull(values);\\n" + "    }\\n" + " catch (    AException ex) {\\n" + "      assertNotNull(values);\\n" + "    }\\n" + "  }\\n" + "}", cu. toString ( ). trim ( ) )
18699	assertThat ( dao. getById ( co. getId ( ) ), equalTo ( co ) )
18700	assertThrows ( IllegalArgumentException. class, ( ) -> AccumuloInputFormat. configure ( ). clientProperties ( clientProps ). store ( Job. getInstance ( ) ) )
18701	assertEquals ( size, buffer. capacity ( ) )
18702	assertThat ( manager. evaluate ( selectorConfiguration, variableSource ), is ( false ) )
18703	Assert. assertEquals ( new URI ( "http://user:password@localhost:80/?param=stuff" ), result )
18704	assertThat ( message, equalTo ( INTERPOLATED_EXAMPLE_MESSAGE ) )
18705	assertConnection ( sqlInputs, 2, "jdbc:oracle:thin:@//localhost:30/dbName", null )
18706	assertTrue ( "Comparaison de fichier PDF en erreur", comparator. compare ( ) )
18707	assertNotNull ( solution )
18708	context. assertIsSatisfied ( )
18709	assertThat ( underTest. called, is ( 3 ) )
18710	assertions. contains ( values )
18711	assertTrue ( result. getErrors ( ). size ( ) > 0 )
18712	assertNotNull ( codes )
18713	assertThat ( client. getNamesOfRepositories ( ), hasItems ( "Aircraft", "Cars", "Vehicles" ) )
18714	assertEquals ( "Incorrect add news", 2, news. size ( ) )
18715	assertEquals ( originalFetchCount, timeline. getFetchCount ( ) )
18716	assertSame ( "control", choice. get ( ) )
18717	assertEquals ( Lists. newArrayList ( "value1", "false", "1.02", "1,-1" ), Pql. getRowStringValues ( row ) )
18718	Assert. assertEquals ( "PK2222", result )
18719	assertEquals ( 0., absFixedCosts. getCosts ( context ) + relFixedCosts. getCosts ( context ), 0.1 )
18720	assertTrue ( ex. canBeDividedby3 ( "33" ) )
18721	assertEquals ( 3, list. size ( ) )
18722	assertEquals ( expecting, found )
18723	Assert. assertEquals ( NULL_CV_MAPPING, mapping )
18724	assertEquals ( expResult, result )
18725	Assert. assertEquals ( "John,Doe", result. trim ( ) )
18726	this. assertGet ( "nodetypeimplementations/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fnodetypeimplementations%252Ffruits/baobab_impl/inheritance/", "entityimplementations/nodetypeimplementations/baobab_initial_inheritance.json" )
18727	Assert. assertTrue ( command instanceof AuditEndpointCommand )
18728	assertFalse ( connectionManager. isConnected ( ) )
18729	assertEquals ( expectedEntry, result )
18730	Assert. assertNotNull ( jurl. getResponseJsonObject ( EatStreetApiError. class ) )
18731	assertEquals ( 0, counter. getCount ( ) )
18732	assertEquals ( "The return value is not correct.", Tag. EVAL_PAGE, this. tag. doEndTag ( ) )
18733	assertThat ( ip, is ( new Ip ( getPublicIp ( ) ) ) )
18734	assertFalse ( list. hasMore ( ) )
18735	assertEquals ( 3, container. size ( ) )
18736	assertNotNull ( error )
18737	assertEquals ( "<<b>bold text</b>" + "intermediate text" + "<i>italic text</i>" + "<br/>" + "<u>underlined text</u>" + "intermediate text" + "<font color=\\"red\\" face=\\"Sans\\" point-size=\\"20\\">special</font>" + "intermediate text>", label )
18738	assertEquals ( "abc, def\\n", found )
18739	assertTrue ( lhs. equals ( rhs ) )
18740	assertThat ( log, instanceOf ( Log4j2Impl. class ) )
18741	assertTotalDocs ( )
18742	assertThat ( verifyModelVersionsSaved ( ), is ( ImmutableMap. of ( "foo", "1.2" ) ) )
18743	assertEquals ( "Failed at index " + i, assertions [ i ], arr )
18744	assertFalse ( violated )
18745	assertSame ( ConvertUtils. lookup ( String. class ), converter )
18746	assertEquals ( valueOf ( v ), s. serialize ( ( HttpPartSchema ) null, v ) )
18747	assertEquals ( "Incorrect number of children returned", 2, numChilds )
18748	assertTrue ( "Time spent: " + average + " instead of " + expected, average > expected * 0.9 && average < expected * 1.1 )
18749	assertTrue ( triggeredBy. isEmpty ( ) )
18750	assertFalse ( formatter. hasNext ( ) )
18751	Assert. assertEquals ( "Invalid result", "text", result )
18752	Assert. assertFalse ( "Authenticated", authenticated )
18753	Assert. assertTrue ( errors. hasFieldErrors ( "states" ) )
18754	assertThat ( data, is ( test ) )
18755	assertFalse ( last == childLast [ 0 ] )
18756	Assert. assertNotNull ( tasks )
18757	assertThat ( studies. size ( ), is ( 1 ) )
18758	assertNotEquals ( array, result )
18759	assertEquals ( "Incorrect unsigned byte value", MAGIC, s. u8. shortValue ( ptr ) )
18760	context. assertIsSatisfied ( )
18761	assertTrue ( groups. contains ( everyoneGroup ) )
18762	assertNull ( "Got an unexpected number of rows - no data should be returned with the NoDataFromScan coprocessor. Found: " + r, r. list ( ) )
18763	assertEquals ( Order. sellAt ( 0 ), uncoveredTrade. getEntry ( ) )
18764	assertThat ( channelCaptor. getValue ( ), is ( "@slackbot" ) )
18765	assertAnnotations ( 2, MilitaryPlatform. class, new TestEntity < > ( 0, "HMJS Troutbridge", "HMJS Troutbridge" ), new TestEntity < > ( 1, "H.M.P.N.G.S. Hidden Dragon", "H.M.P.N.G.S. Hidden Dragon" ) )
18766	assertEquals ( request. toHexString ( ), "000000008e3039708fdd9f488f9665426d0d9c5702000000020000001a001a00000002001c001c00040002000d000000000000000d000000410064006d0069006e006900730074007200610074006f00720000000e000000000000000e000000410064006d0069006e006900730074007200610074006f007200320000000000000000000300000000000000" )
18767	assertEquals ( "FAIL:Failure Demonstration", result )
18768	assertNotNull ( at. convert ( null, null, "foo" ) )
18769	assertTrue ( loader. load ( "scrypt", true ) )
18770	assertNull ( testVal. getEarliestChildExpiryDate ( ) )
18771	result. assertIsSatisfied ( )
18772	assertEquals ( "http://example.com:4510/my_db/my_doc?startKey=%22test%22&endKey=%22test%22", uri. toString ( ) )
18773	assertTrue ( Arrays. equals ( data, ( boolean [ ] ) deserialize. readObject ( ) ) )
18774	assertTrue ( Pattern. compile ( ordered_data ). matcher ( rows. get ( 0 ). toJSON ( ) ). find ( ) )
18775	assertThat ( DateUtil. toDate ( cal ), is ( date ) )
18776	assertFalse ( match )
18777	assertEquals ( vr. getValidity ( ), Validity. INVALID )
18778	assertEquals ( 1, change1 )
18779	Assert. assertEquals ( Constants. GENERIC_SERIALIZATION_BEAN, url. getParameter ( Constants. GENERIC_KEY ) )
18780	assertEquals ( 4, route. getTourActivities ( ). getActivities ( ). size ( ) )
18781	assertTrue ( true )
18782	assertEquals ( ( - 2762 ), int0 )
18783	assertEquals ( str, quote ( ExampleBuilder. SAMPLE_EMAIL_PROPERTY_VALUE ) )
18784	assertThat ( list. toString ( ), is ( copy. toString ( ) ) )
18785	Assert. assertTrue ( success )
18786	Assert. assertEquals ( expected, actual )
18787	assertEcssEquals ( ".menu{background-position:\\"#{notemptya4jSkin.menu1?a4jSkin.menu2:''}\\";}", convertFragment ( xcss ) )
18788	assertThat ( task, is ( nullValue ( ) ) )
18789	Assert. assertNull ( notification )
18790	Assert. assertEquals ( expected, actual )
18791	arraysWithCustomComparisonStrategy. assertContainsExactlyInAnyOrder ( someInfo ( ), actual, expected )
18792	assertNodeTriggered ( processInstance. getId ( ), "Start", "User Task", "MyBoundaryErrorEvent" )
18793	Assert. assertEquals ( DefaultJobPriorityProvider. DEFAULT_PRIORITY_ON_RESOLUTION_FAILURE, job. getPriority ( ) )
18794	assertArrayEquals ( new int [ ] { 0 }, findFusionStartIndices ( schedulingStrategies ) )
18795	assertThat ( result, is ( lines ( new String [ ] [ ] { { "a", "b", "c" } } ) ) )
18796	assertEquals ( machine, MACHINE_NAME_USED. getValue ( ) )
18797	assertEquals ( ( i / 3 ) + " : " + testData [ i ] + ", " + testData [ i + 1 ], expectedResult, actualResult )
18798	assertEquals ( "Expected 5 results!", 5, n )
18799	assertEquals ( 0, map. size ( ) )
18800	assertFalse ( "Wrong result", stream. skipFrame ( ) )
18801	assertEquals ( "20060725224801143085000000", d. getId ( ) )
18802	assertTrue ( "Timeout reached. Message latch value: " + messageLatch. getCount ( ), messageLatch. await ( 5, TimeUnit. SECONDS ) )
18803	Assert. assertTrue ( "JavaScript is enabled", htmlDriver. isJavascriptEnabled ( ) )
18804	Assert. assertEquals ( 1024.0, a. divide ( b ). doubleValue ( ), 1.0e-15 )
18805	assertEquals ( t, HttpURL. toAbsolute ( absURL, s ) )
18806	assertEquals ( "kHz", khz. toString ( ) )
18807	assertEquals ( " WHERE (\\"NAME\\" LIKE? OR \\"AGE\\" >?)", QueryBuilder. getWhereStringForFilters ( filters, sh ) )
18808	assertEquals ( post. getUnsubscribeLinkForSubscribersOf ( PostSubClass. class ), "/topics/1/unsubscribe" )
18809	assertEquals ( BatchStatus. FAILED, jobExecution. getBatchStatus ( ) )
18810	assertThat ( toUnqualifiedVersionlessIdValues ( results ), hasItems ( bundleId ) )
18811	assertEquals ( ( long ) 8, result. getLongValue ( ) )
18812	assertTrue ( reset. await ( 10, TimeUnit. SECONDS ) )
18813	assertFlowState ( ACCEPTED_UNCONFIRMED )
18814	assertEquals ( offset, options. getOffset ( ) )
18815	assertTrue ( page. asXml ( ). contains ( "IllegalStateException" ) )
18816	assertEquals ( "Failed to generate two dimensional array", "new Object[][] { { 1, 2 } }", s )
18817	assertThat ( plugin. getClass ( ), is ( equalTo ( TimelineFormatter. class ) ) )
18818	assertEquals ( "value " + i, ( i / 32 ) * 32, m. getMeanGrayValue ( ), 0.0001 )
18819	Assert. assertEquals ( "none", token )
18820	Assert. assertTrue ( concepts. isEmpty ( ) )
18821	assertArrayEquals ( plaintext, correctPlaintext )
18822	assertEquals ( ValidationResult. Result. OK, result. getStatus ( ) )
18823	assertEquals ( 4, fixture. mark ( ) )
18824	assertContentEquals ( style, Collections. < String > emptyList ( ) )
18825	assertTrue ( page. asXml ( ). contains ( "UIViewRoot" ) )
18826	assertEquals ( b1, b2 )
18827	assertThat ( termCollection, is ( empty ( ) ) )
18828	Assert. assertEquals ( orig, clone )
18829	Assert. assertEquals ( "9999999999.9999", cide. getValorAliquota ( ) )
18830	Assert. assertNotNull ( freeTaggingService )
18831	assertEquals ( "reduce=false&group=true&debug=true&descending=true&startkey=%5B%22foo%22%2Ctrue%5D", query. toQueryString ( ) )
18832	assertTrue ( LibUsb. getDeviceList ( context, deviceList ) >= 0 )
18833	assertEquals ( val, 9 )
18834	assertTrue ( Objects. equals ( metadata. getVersionMetadata ( ), metadata. getPropertyMetadata ( "version" ) ) )
18835	assertEquals ( "XPath: " + query, 1, result. getSize ( ) )
18836	assertThat ( unit. shouldGenerateInvocationId ( ), is ( false ) )
18837	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm:ss", result ) )
18838	assertNull ( callback. convert ( reply ) )
18839	assertEquals ( 0, profileEntries. size ( ) )
18840	assertEquals ( "\\"a,b,c\\"", ctxName )
18841	Assert. assertNotNull ( imposto. toString ( ) )
18842	assertSame ( test. withMonth ( 6 ), test )
18843	Assert. assertTrue ( ctx. getResult ( ) )
18844	assertEquals ( nestedMap. get ( "stringValue" ), complexPojo. getNestedSimplePojo ( ). getStringValue ( ) )
18845	assertNotNull ( result )
18846	assertNull ( "Namespace was not removed.", service. getNamespace ( "hell" ) )
18847	assertEquals ( Arrays. asList ( str ), metadata. getGroupBy ( ) )
18848	assertNotNull ( result )
18849	assertTrue ( testProcessEngineCfg. initMethodCalled )
18850	Assert. assertEquals ( expect, socketIoData )
18851	assertEquals ( "GET:testGetRequestWithParameters-params=2;age=120;gender=Male", responseBody )
18852	assertNotNull ( fieldInjectable. getInjectionTarget ( ) )
18853	assertEquals ( Integer. valueOf ( 400 ), state. status )
18854	assertEquals ( expResult, result )
18855	assertEquals ( "EF3E40D7B5A64C1DAE6B". toLowerCase ( Locale. ROOT ), ByteIterator. ofBytes ( output ). hexEncode ( ). drainToString ( ) )
18856	Assert. assertEquals ( 1, nbConceptsAlignedToMyThes. longValue ( ) )
18857	assertFalse ( fencer. fence ( MOCK_TARGET ) )
18858	assertIsOutputEqualTo ( "Using table annotated name 'name' for parameter position 0" )
18859	assertEquals ( 0., violation, 0.01 )
18860	Assert. assertFalse ( "Failure expected true", r. getLeft ( ) )
18861	this. assertGet ( "patternrefinementmodels/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fconcrete%252Fpatternrefinementmodels/myExample_w1-wip1/", "patternrefinementmodels/first_patternrefinementmodel.json" )
18862	Assert. assertEquals ( 40, analyser. getLoadAtBeginning ( ). get ( 0 ), 0.01 )
18863	assertThat ( map. getTerrainMap ( ), is ( "RRR\\n" + "RRR\\n" + "RRR\\n" ) )
18864	assertEquals ( "", engine. compileMustache ( "helper_dummy1", "{{#each this}}EACH{{/each}}{{#if this}}IF{{/if}}" ). render ( new String [ ] { "hey" } ) )
18865	Assert. assertArrayEquals ( "Wrong data", data, builtByFactory. getData ( ) )
18866	assertThat ( withResult ( TestResult. FAILURE ). matches ( testOutcome ), is ( false ) )
18867	assertEquals ( "<html><head></head><body><span class=\\"foo\\">bar</span></body></html>", TextUtil. stripNewlines ( doc. html ( ) ) )
18868	assertEquals ( "", ft. getContent ( ) )
18869	assertEquals ( Arrays. asList ( "myForm:outerOutput", "myForm:table:0:nestedOutput", "myForm:table:1:nestedOutput" ), trackingVisitCallback. getVisitedIds ( ) )
18870	assertTrue ( false )
18871	assertEquals ( messagePage. getContent ( ). size ( ), pageSize, "Incorrect count of message in one page." )
18872	assertFalse ( lockAquired )
18873	assertThat ( edges. isEmpty ( ), is ( true ) )
18874	assertF ( "�� ��  " + " �� �� " + "�� �� ��" + " �� �� " + "�� �� ��", game. getPlayers ( ). get ( 0 ) )
18875	assertNotEquals ( column1, column2 )
18876	Assert. assertTrue ( clickMe. getText ( ). contains ( buttonText ) )
18877	assertEquals ( "user_uuid", persistentNameIdentifier )
18878	assertNotNull ( json )
18879	assertSimilarXml ( TestUtils. getResource ( "/org/sonar/plugins/groovy/codenarc/exportProfile/exportProfile.xml" ), writer. toString ( ) )
18880	assertEquals ( 2, mapper. get ( e ). other. size ( ) )
18881	assertEquals ( HttpMethod. GET, HttpMethod. of ( request ) )
18882	assertTrue ( result. isRightSide ( ) == false )
18883	Assert. assertEquals ( "select SUM(STUDENT.ID) from student", getSql0 ( node ) )
18884	assertThat ( fetchCount ( ), is ( 1L ) )
18885	assertEquals ( "+a -a/b", s. getPattern ( ) )
18886	assertEquals ( Integer. valueOf ( 1 ), result )
18887	assertThat ( errorResponse1, is ( not ( errorResponse2 ) ) )
18888	assertPutFails ( name, OntopiaRestErrors. MANDATORY_OBJECT_IS_WRONG_TYPE )
18889	assertThat ( result. getName ( ), is ( "Mircosoft涓���" ) )
18890	assertSame ( cause, err )
18891	assertEquals ( asList ( listener1, listener2 ), listeners )
18892	assertEquals ( "", result )
18893	assertEquals ( "om 3 m氓nader", t. format ( new Date ( 2629743830L * 3L ) ) )
18894	assertThat ( results, is ( new String [ ] [ ] { { "", "A", "B", "" } } ) )
18895	assertThat ( controller, is ( equalTo ( method ) ) )
18896	assertEquals ( "Continue", x. getDescription ( ) )
18897	assertNotNull ( response )
18898	assertThat ( parameters, is ( "?searchView=own&orderBy=createdNewest&show=closeToTermination&minSupportCount=0" ) )
18899	assertEquals ( 1, results. length )
18900	context. assertIsSatisfied ( )
18901	assertThat ( applicationSettings. getAccountCreationSetting ( ), is ( ACCOUNT_CREATION_ALLOWED ) )
18902	assertNull ( "First invocation is not null", MorphlineUtils. getPipeline ( "morphlineFile", "morphlineId" ) )
18903	assertThat ( index, is ( 1 ) )
18904	assertThat ( planet. isPresent ( ), is ( false ) )
18905	assertContains ( "Here is a footer in the center area", content )
18906	Assert. assertEquals ( 5, sut. getWeekdayCountBetweenDates ( start, end ) )
18907	assertEquals ( OffsetDate. of ( LocalDate. of ( 2007, 6, 15 ), OFFSET_PONE ), t )
18908	assertNotEquals ( left, right )
18909	assertThat ( result, is ( expected ) )
18910	assertEquals ( 6, template. getRootSegment ( ). getSegmentsSize ( true ) )
18911	assertThat ( result, is ( equalTo ( expected ) ) )
18912	assertThat ( isValid, is ( true ) )
18913	assertThat ( geometry. getArea ( ), is ( 100.0 ) )
18914	assertEquals ( 0, BulkImport. filterInvalid ( files ). size ( ) )
18915	assertTrue ( shifter. hasAttribute ( Attribute. DEFLECT ) )
18916	assertEquals ( expected, actual )
18917	assertThat ( plugin. isNoOutput ( ), equalTo ( true ) )
18918	assertNull ( "State returned is not null", state )
18919	Assert. assertSame ( sampleHandler, challengeHandler )
18920	assertAllCommandsUsed ( )
18921	assertArrayEquals ( projContents, IOUtils. toByteArray ( swapStore. openDownloadStream ( "proj" ) ) )
18922	assertThat ( "missing offers detected", validation. hasWarningAbout ( "no", "offer" ) )
18923	assertThat ( result, is ( notNullValue ( ) ) )
18924	assertEquals ( expected, actual )
18925	assertThat ( location, is ( "/html" ) )
18926	assertTrue ( text. matches ( "(?s).*<head.*alert\\\\(\\\\'ok\\\\'\\\\);.*</head.*" ) )
18927	assertArrayEquals ( new String [ 0 ], args )
18928	assertThat ( interval. isEmpty ( ), is ( true ) )
18929	assertEquals ( expected, actual, delta )
18930	assertThat ( "Got feedback error", cpmf. err, equalTo ( "Not a classpath component: /unknown/path" ) )
18931	Assert. assertTrue ( response. contains ( blogTitle ) )
18932	assertEquals ( "%%LEVEL%%", node. getDictionary ( ). findValuesByID ( "logLevel" ). getValue ( ) )
18933	assertStat ( result )
18934	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
18935	assertTrue ( found )
18936	Assert. assertEquals ( m, support. convert ( m ) )
18937	assertEquals ( DecodeQualification. INTENDED, plugIn. getDecodeQualification ( path ) )
18938	assertEquals ( ints, ints2 )
18939	assertEqual ( "&<>'\\"", query. next ( ) )
18940	assertTrue ( executor. awaitTermination ( 5, TimeUnit. SECONDS ) )
18941	Assert. assertEquals ( expected1, predicted )
18942	assertNull ( KeyValueStoreRW. get ( vutDiv, vutKey1 ) )
18943	assertNotNull ( ShortCode. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "SCXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
18944	assertNotNull ( Config. get ( request. getSession ( ), Config. FMT_LOCALE ) )
18945	Assert. assertEquals ( "Copy of Sample Sheet", sheets. getData ( ). get ( 0 ). getName ( ) )
18946	assertEquals ( previous + 1, size )
18947	assertEquals ( expected, d_smd. getCohenVariance ( ), 0.0001 )
18948	Assert. assertEquals ( expResult, result )
18949	assertEquals ( "e40ee529b406f33efb8f53ee5e26bcbf", checksum )
18950	assertThat ( attributeValueNs, is ( "true" ) )
18951	assertPlaces ( places )
18952	Assert. assertEquals ( "{?var}", e. toString ( ) )
18953	assertEquals ( STRING, s )
18954	assertThat ( sampledValue. getContext ( ), equalTo ( readingContext ) )
18955	assertEquals ( expected, actual )
18956	assertEquals ( testString, avroField. convertToKettleValue ( map, schema, mock ( Schema. class ), false ) )
18957	assertEquals ( HttpStatus. SC_OK, result. getCode ( ) )
18958	assertThat ( builder. getPatches ( ), hasItemInArray ( "REPLACE /status/message 'new and hot'" ) )
18959	assertEquals ( "<form action='bar'><fieldset><legend>foo:</legend>Name:<input type='text'/><br/>Email:<input type='text'/><br/>X:<keygen name='X'/><label for='Name'>label</label></fieldset></form>", r )
18960	Assert. assertEquals ( dataHoraProcessamento, retornoConsultaCadastroDados. getDataHoraProcessamento ( ) )
18961	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5, 6 ) ) )
18962	assertEquals ( 1, cli. getProgramArguments ( ). length )
18963	assertTrue ( validator. validate ( EntityNames. STUDENT_SECTION_ASSOCIATION, associations ). equals ( associations ) )
18964	assertEquals ( "<shopping>\\n" + "    <category type=\\"groceries\\">\\n" + "        <item>Luxury Chocolate</item>\\n" + "        <item>Luxury Coffee</item>\\n" + "    </category>\\n" + "    <category type=\\"supplies\\">\\n" + "        <item>Paper</item>\\n" + "        <item quantity=\\"6\\" when=\\"Urgent\\">Pens</item>\\n" + "    </category>\\n" + "    <category type=\\"present\\">\\n" + "        \\n" + "    <item>Mum's Birthday</item><item when=\\"Oct 15\\">Monica's Birthday</item></category>\\n" + "</shopping>", result. getResult ( ) )
18965	assertEquals ( 2, numberUsersWithPreference )
18966	assertThat ( valueModel. size ( ), is ( size ) )
18967	assertEquals ( expected, pu. getCharsetProperty ( "sun.err.encoding" ) )
18968	assertEquals ( 1L, ( long ) rs. at ( 0 ). getInt ( 0 ) )
18969	assertEquals ( "abc\\n", found )
18970	Assert. assertEquals ( jdkHands, acHands )
18971	assertTreeEquals ( top, result )
18972	assertNull ( output )
18973	assertEquals ( "void dest7(int, @A @B @C int, @B @C @D int, @C @D @E int)", toString ( dest ) )
18974	assertTrue ( handler instanceof RoundRobinDisruptorBasedRelatedContentSearchRequestProcessorHandler )
18975	Assert. assertTrue ( tempFontFile. exists ( ) )
18976	assertResultSet ( res )
18977	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
18978	assertThat ( getRecordedDomain ( ), hasCondition ( Available ) )
18979	assertTrue ( isValid ( "foobar" ) )
18980	context. assertTrue ( ex instanceof IllegalArgumentException )
18981	assertTrue ( result. getException ( ) instanceof FlowExecutionException )
18982	Assert. assertEquals ( 0, norm, 6.0e-13 )
18983	assertEquals ( newEndingDateTime, topic. getPoll ( ). getEndingDate ( ) )
18984	assertEquals ( expected [ i ], actual )
18985	Assert. assertEquals ( "�注�� 3 砖���", t. format ( new Date ( 2629743830L * 12L * 3L ) ) )
18986	assertTrue ( translator. isMethodSupported ( "refreshServiceAcl" ) )
18987	Assert. fail ( "'MustUnderstand headers' exception should be thrown." )
18988	assertEquals ( "Wrong child index", 3, handler. indexOfChild ( parent, child ) )
18989	assertThat ( domain. isLogHomeEnabled ( ), is ( false ) )
18990	assertTrue ( errorsContainer. equals ( errors ) )
18991	assertTrue ( "static Base64.encodeBase64Chunked() test-" + i, b )
18992	assertEquals ( expectedLayer, actualLayer )
18993	assertFalse ( victim. accept ( request ) )
18994	assertThat ( result, is ( new String [ ] [ ] { { "Hello, world!" } } ) )
18995	assertEquals ( TEST_CLUSTER_NAME, hadoopFileOutputMeta. getSourceConfigurationName ( ) )
18996	assertEquals ( key. length, Sodium. crypto_aead_xchacha20poly1305_ietf_keybytes ( ) )
18997	Assert. assertThat ( actual, CoreMatchers. is ( "a,b,c" ) )
18998	assertThat ( ruleManager. getAllGlobalsOfType ( "java.util.Random" ), hasItems ( "bla1", "bla2" ) )
18999	assertEquals ( ".ext", Util. stripFileExtension ( fullName ) )
19000	assertThat ( codedTextVOs. size ( ), equalTo ( 2 ) )
19001	assertTrue ( futures [ 0 ]. isClosed ( ) )
19002	assertEquals ( actualAfterProcess, expectedAfterProcess )
19003	junit. framework. Assert. assertEquals ( before, update. toThrift ( ) )
19004	assertEquals ( childName, mappedStart. getTo ( ) )
19005	assertThat ( true, equalTo ( result ) )
19006	Assert. assertNotNull ( clientLayers )
19007	assertEquals ( "validating the bean", obj, new TestBean ( ) )
19008	assertEquals ( "1", output. toString ( ) )
19009	assertEquals ( edit, hadoopClusterDelegateBridge. editNamedCluster ( iMetaStore, namedCluster, shell ) )
19010	assertEquals ( "http://example.com/fhir/Patient/_search?name=james", capt. getValue ( ). getURI ( ). toString ( ) )
19011	assertTrue ( offset == 0 )
19012	assertFalse ( result. passedValidation ( ) )
19013	assertNotNull ( injector )
19014	assertEquals ( "http://localhost:8080/rest-converters/spring/users/2", newUserLocation. toString ( ) )
19015	Assert. assertEquals ( userRepo, settings. getLocalRepository ( ) )
19016	assertEquals ( parent. models. size ( ), 1 )
19017	assertEquals ( 1, tapeEquilibrium. solution ( array ) )
19018	assertTrue ( "Exception for empty keytabfile name was expected", gotException )
19019	Assert. assertEquals ( "user1", echoValue )
19020	assertEquals ( 2, pResult. getValues ( ). size ( ) )
19021	assertFalse ( result )
19022	assertEquals ( Status. NOT_FOUND, response. getClientResponseStatus ( ) )
19023	assertEquals ( "unexpected errors: " + equeue, 0, equeue. errors. size ( ) )
19024	assertFalse ( panelManager. mapPanelDefinitionToPresenter. containsKey ( customPanel ) )
19025	assertTrue ( "Inner transaction must be able to see the transient state", flag )
19026	assertTrue ( victim. find ( ). isEmpty ( ) )
19027	Assert. assertEquals ( "helloWorld", result )
19028	assertEquals ( Location. LOCATION_LHS_INSIDE_CONDITION_START, getLastIntegerValue ( parser. getEditorInterface ( ). get ( 0 ). getContent ( ) ) )
19029	assertEquals ( "Index Is 3", "3", _index. toString ( ) )
19030	assertFalse ( YubicoClient. isValidOTPFormat ( otp ) )
19031	assertTrue ( mockListener. propertyChangedFired )
19032	Assert. assertFalse ( context. getResult ( ) )
19033	assertEquals ( "orig", gx. getPerson ( ). getFirstFactOfType ( FactType. Adoption ). findExtensionOfType ( AlternateDate. class ). getOriginal ( ) )
19034	assertSelectResults ( results, one, two, three )
19035	Assert. assertTrue ( ( Boolean ) result )
19036	assertEquals ( TextSearchConfig. JENA_TEXT_QUERY, s. getTextSearchConfig ( ). getTextQueryProperty ( ) )
19037	assertNull ( "the rule FooRule must not be found!", rs. getRuleByName ( "FooRule" ) )
19038	assertThat ( action. remove ( server ), is ( true ) )
19039	assertThat ( "ssh key", sut. getSshKey ( ), is ( equalTo ( sshKey ) ) )
19040	assertEquals ( "Dest should have just the first field altered", new FourLongs ( 1, 0, 0, 0 ), dest )
19041	assertThat ( PreV200HiveCliEmulator. INSTANCE. preProcessor ( ). script ( hiveSql ), is ( "set x=1;" ) )
19042	assertEquals ( 40, new AcceptsLambda < Integer > ( ). accept ( ( a, b ) -> x + a + b ). intValue ( ) )
19043	assertEquals ( firstInvocation, secondInvocation )
19044	assertEquals ( 3, adaptiveGrid. occupiedHypercubes ( ) )
19045	assertNull ( edmProvider. getEntityContainerInfo ( new FullQualifiedName ( "Test.ContainerName" ) ) )
19046	Assert. assertEquals ( 16., analyser. getDistanceAtActivity ( route. getActivities ( ). get ( 2 ), route ), 0.01 )
19047	Assert. assertEquals ( "That monkey.", this. realiser. realiseSentence ( sentence_1 ) )
19048	assertEquals ( asList ( sampleShortAlbum, aLoveSupreme ), result )
19049	assertTrue ( "unknown ID should have no class", classdb. getClass ( "id3" ). isEmpty ( ) )
19050	assertThat ( argument. getValue ( ). getName ( ), is ( "step_with_parameter: <span class='step-parameter'>Joe</span>" ) )
19051	assertEquals ( 100, getSlowTestTimeLimit ( ) )
19052	assertTrue ( FileUtil. gitDirectoriesAreEqual ( getResource ( "/canCloneARepository/state/testproj" ), testprojDir. toPath ( ) ) )
19053	Assert. assertNotNull ( cache. get ( id, User. class ) )
19054	assertThat ( ( String ) FieldAccessUtil. getFieldVal ( interceptor, "profile" ), is ( "testProf" ) )
19055	assertEquals ( "result FALSE", aspect. aroundFlippableMethods ( pjp, flipAnnotation ) )
19056	assertEquals ( myByte, adapter. getByte ( index ) )
19057	context. assertIsSatisfied ( )
19058	assertEquals ( "value returned by getter does not match", skipLines, element. getSkipLines ( ) )
19059	assertEquals ( "foo,bar,,:1,3,,", engine. compileMustache ( "list", templateContents ). render ( data ) )
19060	assertEquals ( 1, list. size ( ) )
19061	assertEquals ( expected, elements )
19062	Assert. assertEquals ( codigoStatusReposta, eventoRetorno. getCodigoStatusReposta ( ), 0 )
19063	Assert. assertTrue ( myRecordV3. equals ( result ) )
19064	assertEquals ( MAX_TOKENS - 2, bucket. getCurrentTokenCount ( ) )
19065	assertEquals ( "on failure", pp. getValue ( ) )
19066	assertCandidateEquals ( candidate, payload. getCandidate ( ). getValue ( ) )
19067	assertEquals ( 200, page. getWebResponse ( ). getStatusCode ( ) )
19068	assertEquals ( mockResponse, testResponse )
19069	Assert. assertEquals ( key1, key2 )
19070	Assert. assertEquals ( 3, query. getResultList ( ). size ( ) )
19071	Assert. assertEquals ( "unexpected XML protocol result", sb. toString ( ), tagOut )
19072	Assert. assertTrue ( isActive )
19073	assertions. isNotEqualTo ( expected )
19074	assertEquals ( crossoverProbability, crossover. getCrossoverProbability ( ), EPSILON )
19075	assertTrue ( response. getHeaders ( ). isEmpty ( ) )
19076	assertNotNull ( resp )
19077	assertEquals ( 4 * diffusioncoefficient * timelag, res, 0.01 )
19078	assertFalse ( matcher. matches ( mockElement ) )
19079	TestCase. assertTrue ( result )
19080	assertNull ( position )
19081	assertEquals ( Color. blue. getRGB ( ), thumbnail. getRGB ( 49, 99 ) )
19082	assertEquals ( expected, actual )
19083	assertTrue ( entity. getPassword ( ) == null )
19084	Assert. assertTrue ( _c. canConvertTo ( Float. TYPE ) )
19085	assertEquals ( "`id` int,`country` string", HiveUtility. getColumns ( writable ) )
19086	Assert. assertEquals ( "\\"bob\\"", writer. toString ( ) )
19087	Assert. assertEquals ( 0, a. rank ( ) )
19088	Assert. assertEquals ( " VALUES(?,?) ", sql )
19089	assertThat ( exit, is ( not ( 0 ) ) )
19090	assertEquals ( true, new ObjectMapper ( ). readTree ( json ). get ( "is_organization" ). asBoolean ( ) )
19091	assertEquals ( 5, CalendarUtils. get ( midJune, CalendarUtils. YEAR_IN_DECADE ) )
19092	assertEquals ( query, result )
19093	assertThat ( request. getStatus ( ), equalTo ( chargePointStatus ) )
19094	assertThat ( target. delLink ( link ), is ( false ) )
19095	Assert. assertTrue (! CompareUtil. compareArraysAndNull ( instance, copy ) )
19096	assertTrue ( fired [ 0 ] )
19097	assertTrue ( alice. out ( "friend" ). toList ( ). isEmpty ( ) )
19098	assertEquals ( key, pathElement. getKey ( ) )
19099	assertThat ( ( Float ) converter. convert ( formattedValue, float. class, bundle ), is ( equalTo ( theValue ) ) )
19100	assertSame ( error, stream. getError ( ) )
19101	assertEquals ( ( double ) 8, result. getDoubleValue ( ), 0.0 )
19102	assertNotNull ( dynamicProperties )
19103	assertPagination ( ( page, pageSize ) -> caseClient. getCaseInstancesByData ( dataEntryName, String. valueOf ( dataEntryValue ), statusFilter, page, pageSize ), 2 )
19104	assertTrue ( response!= null && CollectionUtils. isEmpty ( response. getSensors ( ) ) )
19105	assertSame ( descriptor, content )
19106	assertEquals ( 2, list. size ( ) )
19107	assertEquals ( pp. getValue ( ), new Payload < > ( "error 4 test error" ). getValue ( ) )
19108	assertScore ( serviceDocumentRenderer, AbstractRenderer. MAXIMUM_FORMAT_SCORE )
19109	assertThat ( analysis. isError ( ), is ( true ) )
19110	assertThat ( getBranchInstrumentor ( ). getLinePosition ( gtNode ), equalTo ( 8 ) )
19111	assertThat ( root, not ( exists ( ) ) )
19112	Assert. assertEquals ( 0, list. size ( ) )
19113	assertEquals ( expected, actual )
19114	assertThat ( serverSocket. isBound ( ), is ( true ) )
19115	assertSame ( expectedOutput, result )
19116	assertEquals ( generatedJavascript, expectedJavascript )
19117	TestUtil. assertEquals ( exp, spans, true )
19118	Assert. assertSame ( component, table. getHeader ( ) )
19119	assertEquals ( new ModelId ( "Test", "com", "1.0.0" ), ModelId. fromPrettyFormat ( modelId ) )
19120	Assert. assertTrue ( statement. execute ( "show grant user admin on table words" ) )
19121	assertTrue ( skills. containsSkill ( "skill1" ) )
19122	Assert. assertTrue ( "The file" + fileName + "doesn't contain expected content.", checkFileContains ( path, "foo" ) )
19123	Assert. assertFalse ( factory. isProxy ( food ) )
19124	assertStatementCanBeDeparsedAs ( select, statement )
19125	assertEquals ( relative, da. getDocType ( ) )
19126	assertNotNull ( rs )
19127	Assert. assertEquals ( "FROM Person T0 WHERE (T0.birthday IS NULL) ORDER BY T0.lastName", query. toQuery ( ) )
19128	arrays. assertStartsWith ( description, null, sequence )
19129	Assert. assertTrue ( verifyTest ( builder, certsSrc + "signCertRsaWithExpiredChain.p12", caCert. getNotBefore ( ) ) )
19130	assertEquals ( Available7Provider. class, ServiceProviders. load ( ServiceProvidersTestAbstractProvider. class, NO_HARDCODED, cl, ACCESSOR ). getClass ( ) )
19131	assertEquals ( 10, impl. getNumSamples ( ) )
19132	assertThat ( target. getData ( ), is ( value ) )
19133	Assert. assertEquals ( expected. trim ( ), output. trim ( ) )
19134	Assert. assertTrue ( Math. abs ( maxAbsDeviation ) < 1E-1 )
19135	assertArrayEquals ( bytes, field. getBytes ( ) )
19136	assertEquals ( "checking serialiser's name", PRETTY_PRINT_SERIALISER_NAME, name )
19137	assertNotNull ( mpd. getMusicDatabase ( ) )
19138	assertFalse ( "equals(null)", a1. equals ( null ) )
19139	assertThat ( target. parse ( ), is ( false ) )
19140	assertFormFieldValue ( "j_username", previousUsername )
19141	Assert. assertEquals ( "foo.Issue1", sc. getName ( ) )
19142	assertEquals ( null, target. referenceField )
19143	assertEquals ( "https://objectstorage.us-phoenix-1.oraclecloud.com", endpoint )
19144	assertThat ( repairedRepositories, is ( equalTo ( ImmutableList. of ( npmHosted ) ) ) )
19145	Assert. assertEquals ( eRequest, dRequest )
19146	assertMaps ( exp, pairs )
19147	assertEquals ( reader, readerResult )
19148	Assert. assertFalse ( allowedCRUDL )
19149	Assert. assertTrue ( errorCode. equals ( fielderror. getCode ( ) ) )
19150	assertEquals ( 2, e. evaluate ( ), 0.0 )
19151	assertNull ( routingResult )
19152	assertTrue ( tt2 == tt )
19153	assertEquals ( "Common exception", ms. getText ( ) )
19154	assertTrue ( isBundle )
19155	assertEquals ( mclass. toString ( ), 0.0, ref3. minus ( m3 ). getRMS ( ), TOLERANCE )
19156	assertEquals ( agentFcd2. sinkConfig, ans2 )
19157	assertFalse ( MethodChecksUtils. hasTestMethodKeyword ( parentNode ) )
19158	assertEquals ( true, result )
19159	Assert. assertNotNull ( entity )
19160	Assert. assertEquals ( "rows in db", 10, outputOperator. getNumOfEventsInStore ( TABLE_POJO_NAME ) )
19161	assertSame ( item, point. getData ( ) )
19162	assertTrue ( "Precedence rules violated", content. getContent ( ). indexOf ( "default1inline2inline3external4" ) > 0 )
19163	Assert. fail ( "Expected WSSecurityException is not thrown" )
19164	assertTrue ( "header height must be > 0", xTable. getTableHeader ( ). getPreferredSize ( ). height > 0 )
19165	assertEquals ( "I帽t毛rn芒ti么n�li啪忙ti酶n.txt", URLDecoder. decode ( objectMetadata. getContentDisposition ( ), "UTF-8" ) )
19166	assertStatus ( queryId, 3, expectedNumRows, expectedNumBytes, expectedReadBytes )
19167	Assert. assertEquals ( "" + "[{type=static, name=Java, url=https://www.java.com}, " + "{type=dynamic, name=Ruby, url=https://www.ruby-lang.org}, " + "{type=dynamic, name=Python, url=https://www.python.org}]", result )
19168	Assert. assertEquals ( 0, resultList. size ( ) )
19169	Assert. assertEquals ( expResult, result )
19170	Assert. assertFalse ( englishTagFound )
19171	Assert. assertEquals ( this. list1Realisation, realised. getRealisation ( ) )
19172	assertThat ( result. eventMethods ( ). size ( ), is ( 0 ) )
19173	assertEquals ( expected, actual )
19174	assertEquals ( "hetke p盲rast", t. format ( new Date ( 6000 ) ) )
19175	assertEquals ( 4 + 16 - 3, x. dot ( y ) )
19176	assertEquals ( "Start console", true, config. startConsole ( ) )
19177	assertEquals ( "AA123", customDecimalFormat. format ( 123L ). toString ( ) )
19178	assertValidEntity ( task )
19179	assertEquals ( "\\"collection@" + pcollectionImpl. hashCode ( ) + "@" + jobPrototype. hashCode ( ) + "\\"", dotfileWriter. formatPCollection ( pcollectionImpl, jobPrototype ) )
19180	assertTrue ( store. confirmToken ( TEST_USERNAME, TEST_TOKEN ) )
19181	assertEquals ( 1, x. size ( ) )
19182	assertTrue ( binary. getName ( ). endsWith ( ".exe" ) )
19183	Assert. assertEquals ( 10, a. getLoc ( ) )
19184	assertEquals ( false, result )
19185	assertThat ( request. equals ( request2 ), is ( false ) )
19186	assertEquals ( 0, tasks. size ( ) )
19187	assertFalse ( connectFuture. isConnected ( ) )
19188	assertEquals ( new BigDecimal ( 90 ), customer. getAvailableFunds ( ) )
19189	assertTrue ( sprinkler1. isOn ( ) )
19190	assertEquals ( 37, termCount )
19191	assertImmutableList ( components )
19192	assertNull ( results. getContinue ( ) )
19193	Assert. assertEquals ( "澶�����璇�锛�", sqltrue, sqlnew )
19194	assertEquals ( "Expected 0 results!", 0, count )
19195	assertEquals ( withoutSH, withSH, 0.000001 )
19196	assertNull ( item. getMap ( ) )
19197	assertTrue ( a. get ( "a" ). getBoolean ( ) )
19198	assertEquals ( "GET&http%3A%2F%2Fexamplemultiple.com%2F&a%255B%255D%3D1%26a%255B%255D%3D2", sbs. generate ( ) )
19199	assertFalse ( "Cache believes cache is up to date when the classpath changed", reloadedCache. isUpToDate ( sourceFile ) )
19200	assertEquals ( "!Proxy!" + servletName + "JSESSIONID=1234;path=" + servletPath, rsp. getHeaderField ( HEADER ) )
19201	Assert. assertEquals ( "TEST", object. content )
19202	assertEquals ( redirectUrl, "redirect:/topics/recent" )
19203	assertFalse ( strategy. isActive ( state, user ) )
19204	assertEqualsIgnoreWhitespace ( expected, drl )
19205	assertNotNull ( move )
19206	assertEquals ( expected, actual )
19207	assertEquals ( "One folder", 1, holder. sourcePath. size ( ) )
19208	assertEquals ( seconds, item. getSeconds ( ) )
19209	assertTrue ( "Cache believes a known, unchanged file is not up to date", cache. isUpToDate ( sourceFile ) )
19210	assertEquals ( Sets. newHashSet ( stepRefId ), result )
19211	assertFalse ( thrown )
19212	assertEquals ( "7974a8062f45ecab27387b763bd39277f3ba5aac", payload. getParentSha ( ) )
19213	assertTrue ( res == true )
19214	assertNull ( generator )
19215	assertTrue ( mapQuerySubQueries. get ( queries. get ( 0 ) ). size ( ) == 3 )
19216	assertArrayEquals ( data, ( long [ ] ) deserialize. readObject ( ) )
19217	assertNull ( Deencapsulation. getField ( deviceRegistrationState, "lastUpdatedDateTimeUtcDate" ) )
19218	assertServiceEquals ( stub, service )
19219	assertThat ( writer. toString ( ), equalTo ( "{\\"queries\\":[{\\"results\\":[{\\"name\\":\\"group1\\",\\"group_by\\":[{\\"name\\":\\"tag\\",\\"tags\\":[\\"foo\\",\\"bar\\"],\\"group\\":{\\"foo\\":\\"fi\\",\\"bar\\":\\"fo\\"}}],\\"tags\\":{\\"tag1\\":[\\"tag1Value\\"],\\"tag2\\":[\\"tag2Value\\"]},\\"values\\":[[1,10],[1,20],[1,3],[2,1],[2,3],[2,5],[3,25]]}]}]}" ) )
19220	assertThat ( bodyWriter. getValue ( ). objectsWriter, instanceOf ( SyncPDFBodyObjectsWriter. class ) )
19221	assertEquals ( mockedProvisioningConnectionString, resultConnectionString )
19222	assertEquals ( "SGVsbG8gV29ybGQ=", new String ( b64. encode ( "Hello World". getBytes ( CHARSET_UTF8 ) ) ) )
19223	assertEquals ( networkView, ev3. getSource ( ) )
19224	Assert. assertEquals ( 1, result. getEntities ( ). size ( ) )
19225	Assert. assertFalse ( result )
19226	assertFalse ( result. passedValidation ( ) )
19227	assertEquals ( "CycleItselfInArr[c={CycleItselfInArr@" + hash + "}]", logAdapter. asString ( value ) )
19228	assertEquals ( 0, method. invoke ( clazz. newInstance ( ) ) )
19229	Assert. assertEquals ( 1, routes. size ( ) )
19230	assertEquals ( one, two )
19231	assertEquals ( "GET / HTTP/1.1", captured. getRequestLine ( ) )
19232	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff46_" ) )
19233	assertEquals ( expected, actualQuery )
19234	assertEquals ( "There is not enough tabs generated!", DynamicTabsPage. NUM_OF_TABS, page. getTabPanel ( ). getNumberOfTabs ( ) )
19235	assertOut ( "this[new QName(new Namespace('ns'), 'knownMember').objectAccessFormat()]" )
19236	descriptor. assertValid ( )
19237	assertThat ( file. readUTF ( ), is ( code ) )
19238	response. then ( ). log ( ). ifValidationFails ( ). assertThat ( )
19239	assertTrue ( ids. isEmpty ( ) )
19240	assertSame ( "base", res )
19241	assertTrue ( target. injectionCompleteCalled ( ) )
19242	assertFalse ( ( Boolean ) result. get ( "successful" ) )
19243	assertEquals ( "Mismatched reported current user", expected, actual )
19244	Assert. assertTrue ( "Should be displaying the dialog", driver. getPageSource ( ). contains ( expectedText ) )
19245	Assert. assertEquals ( getElement ( "MSH.3" ), handler. getSendingApplication ( ) )
19246	Assert. assertNotNull ( schema )
19247	assertSearchYields ( fooIndex, "foo:aaa", "foo" )
19248	assertThat ( sentGetRequest ( "http://127.0.0.1:19000/api/operate/sandbox?appName=foo_app" ), is ( "[{\\"hostname\\":\\"127.0.0.1\\"," + "\\"path\\":\\"/slaves/d8701508-41b7-471e-9b32-61cf824a660d-S0/frameworks/d8701508-41b7-471e-9b32-61cf824a660d-0000/executors/foo_app@-@" + "d8701508-41b7-471e-9b32-61cf824a660d-S0/runs/53fb4af7-aee2-44f6-9e47-6f418d9f27e1\\"}]" ) )
19249	Assert. assertEquals ( expected, component )
19250	assertNotNullOrEmpty ( "Questions should never be null.", questions )
19251	Assert. assertNotNull ( "Parse path without throwing exception", results )
19252	Assert. assertEquals ( "", printCircular. printCircular ( array ) )
19253	Assert. assertTrue ( ( scopePath. findScopeByName ( ClassScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( CodeDefaultScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( DefaultScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( TestScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( UserScopeDescriptor. NAME )!= null ) && ( scopePath. findScopeByName ( ClassScopeDescriptor. NAME ). containsAllProperties ( properties ) ) && ( scopePath. findScopeByName ( UserScopeDescriptor. NAME ). containsAllProperties ( getUserScopeProperties ( ) ) ) && ( scopePath. findScopeByName ( TestScopeDescriptor. NAME ). containsAllProperties ( getTestScopeProperties ( ) ) ) )
19254	assertTrue ( extension. isActive ( ) )
19255	assertEquals ( expectedMap, map )
19256	Assert. assertEquals ( 0, list. size ( ) )
19257	assertFalse ( md. equals ( emptyMetadata ) )
19258	assertEquals ( NOT_DECODED, color, object. getColor ( ) )
19259	assertEquals ( expResult, result )
19260	assertEquals ( minutes + ( ( hours * DateUtils. MILLIS_PER_HOUR ) + ( ( days - 1 ) * DateUtils. MILLIS_PER_DAY ) ) / DateUtils. MILLIS_PER_MINUTE, testResult )
19261	Assert. assertTrue ( highlightPhrase. contains ( "<b>fox</b>" ) )
19262	assertEquals ( 99, config. getMinConnectionsPerPartition ( ) )
19263	Assert. assertNull ( entity )
19264	assertThat ( ifCounterDataIndexable. matchesPojo ( this. counterData ), is ( false ) )
19265	assertThat ( steps. pages ( ), is ( pages ) )
19266	assertEquals ( INVALID_JSONOBJECT, result. get ( RETURN_RESULT ) )
19267	assertObjectEquals ( "{f1:'f1b'}", bs. getClassMeta ( B2. class ). getExample ( bs ) )
19268	Assert. assertEquals ( "someTableName", overriddenTableName )
19269	assertEquals ( expResult, result )
19270	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Stream>" + "<Parameter name=\\"name\\" value=\\"value\\"/>" + "</Stream>", elem. toXml ( ) )
19271	assertTrue ( "multiLineSubstitutionFailure3", "prefix {\\nPI} suffix". equals ( result ) )
19272	assertThat ( entities. getTotalElements ( ), equalTo ( 1L ) )
19273	Assert. assertEquals ( "employ", word. getLemma ( ) )
19274	rule. assertScenarioEnded ( )
19275	Assert. assertEquals ( expected, component )
19276	Assert. assertEquals ( "dummy.package", mainAttributes. get ( new Attributes. Name ( "Import-Package" ) ) )
19277	Assert. assertEquals ( 0, count )
19278	assertFalse ( vs. exists ( ) )
19279	assertEquals ( receivedResp. getBody ( ), resp. getListContextElementResponse ( ). get ( 0 ) )
19280	assertEquals ( expected, stashes. get ( 0 ) )
19281	assertNotNull ( validator )
19282	Assert. assertTrue ( exceptionMatches )
19283	assertSame ( this, theProperty. getOwner ( ) )
19284	assertTrue ( resultMessage ( result, PUT ), result. passedValidation ( ) )
19285	assertEquals ( Lists. newArrayList ( "1", "2", "3", "5", "6" ), getStringsFromElements ( elements ) )
19286	Assert. assertTrue ( firstMessageFound && secondMessageFound )
19287	context. assertIsSatisfied ( )
19288	assertEquals ( expectedOutput, actual )
19289	arraysWithCustomComparisonStrategy. assertDoesNotContainSubsequence ( someInfo ( ), actual, subsequence )
19290	assertThat ( xray. getConstructors ( ), hasSize ( 1 ) )
19291	Assert. assertEquals ( 1, factory. getNumCarvedTestCases ( ) )
19292	assertEquals ( expected, actual )
19293	assertThat ( "getChildCount", node. getChildCount ( ), is ( 0 ) )
19294	assertTrue ( gw. lines. isEmpty ( ) )
19295	Assert. assertEquals ( "PhenoTips.XPhenotypeMapping", result. getPhenotypeMapping ( ) )
19296	assertThat ( prover, notNullValue ( ) )
19297	assertArrayEquals ( key. getPubKey ( ), req. tx. getOutputs ( ). get ( 0 ). getScriptPubKey ( ). getPubKey ( ) )
19298	assertTrue ( true )
19299	Assert. assertNotNull ( client. checkExists ( ). forPath ( zkPath ) )
19300	assertEquals ( result, expecting )
19301	assertEquals ( "Monday is at position 3", 3, forwhile )
19302	assertThat ( System. currentTimeMillis ( ) - start, greaterThanOrEqualTo ( 1000L ) )
19303	Assert. assertTrue ( clusterTbl. isIsXpipeInterested ( ) )
19304	assertEquals ( "It shall return null value", CtxNames. VALUE_NULL, name. getValueAsString ( evalCtx ) )
19305	Assert. assertEquals ( tag. type ( ), TagType. LIST )
19306	assertEquals ( 190 + 1900, sum )
19307	assertTrue ( "Same cost solution (2.0 == 2.0) should not be accepted", schrimpfAcceptance. acceptSolution ( memory, createSolutionWithCost ( 2.0 ) ) )
19308	assertEquals ( 13, value )
19309	assertEquals ( "34 abc\\n", found )
19310	Assert. assertEquals ( sizeBefore + 1, dico. size ( ) )
19311	Assert. assertEquals ( Collections. emptyList ( ), versionProperty. getPropertyNames ( ) )
19312	Assert. assertEquals ( "type=" + type, extected, actual )
19313	assertEquals ( JobStatus. ACCEPTED, jobResultArgumentCaptor. getValue ( ). getStatus ( ) )
19314	assertTrue ( ste. isEmpty ( ) )
19315	assertEquals ( "ninety-nine", actual )
19316	Assert. assertTrue ( equals ( request, result ) )
19317	assertThat ( resource, is ( equalTo ( method ) ) )
19318	assertSame ( MyClock. class, ClockFactory. getClock ( ). getClass ( ) )
19319	assertEquals ( expected, actual )
19320	assertOut ( "'\\\\\\\\'" )
19321	assertEquals ( "http://example.com/", con. request ( ). url ( ). toExternalForm ( ) )
19322	Assert. assertEquals ( "SELECT DAYOFMONTH('2001-11-00'), MONTH('2005-00-00');", text )
19323	assertTrue ( "name read from hibernate session is MADHUMITA", "MADHUMITA". equals ( st. getFirstName ( ) ) )
19324	Assert. assertNotEquals ( "Paths must be different!", mapOut. getParent ( ), mapOutIdx. getParent ( ) )
19325	assertMetric ( "mmv.v2.metric.that.is.longer.than.63.characters.v2.metric.that.is.longer.than.63.characters", is ( "10.000" ) )
19326	assertThat ( metrics. toString ( ), is ( "Global[sentBytes=0, sentCount=0, receivedBytes=0, " + "receivedCount=0, lastLatency=0 ms, totalLatency=0 ms]\\n\\n\\n" ) )
19327	assertEquals ( expectedTouchzs, attributes. getTouchzs ( ) )
19328	assertEquals ( expResult, result )
19329	assertEquals ( "hello % world", s )
19330	Assert. assertEquals ( inet2, inet3 )
19331	Assert. assertTrue ( check. equals ( o ) )
19332	assertTrue ( "No in attachment interceptor found", found )
19333	assertTrue ( type. equals ( type2 ) )
19334	Assert. assertNotNull ( tokens )
19335	this. assertOneMatcher ( is ( instanceOf ( HeaderRequestMatcher. class ) ) )
19336	assertThat ( getHandlerFieldValue ( ), nullValue ( ) )
19337	assertThat ( ByteBuffer. wrap ( newSyncPoint. toBytes ( ) ). equals ( ByteBuffer. wrap ( loadSyncPoint. toBytes ( ) ) ), is ( true ) )
19338	assertThat ( commands. get ( asList ( "test" ) ). getHelpHint ( PLAIN ), is ( "help" ) )
19339	assertEquals ( ValidateGBIDsEnum. INVALID, GcdUtilities. validateGbids ( invalidGbids, gcdGbId, validGbids ) )
19340	assertEquals ( "text", textField. getValue ( ) )
19341	assertEquals ( actualAfterProcess, expectedAfterProcess )
19342	assertThat ( FullHalfPair1. equals ( FullHalfPair2 ), is ( false ) )
19343	assertHaveSamePersistentFields ( this. existingItem, foundItem, "supplier" )
19344	assertNull ( containerRequest. evaluatePreconditions ( now ) )
19345	assertThat ( mockLogger. isLogpCalled ( ), is ( false ) )
19346	assertThat ( actual, containsInAnyOrder ( expected. toArray ( ) ) )
19347	assertEquals ( s_expected_1, Hex. toHexString ( item1. getData ( ) ). toUpperCase ( ) )
19348	assertEquals ( d, result )
19349	assertEquals ( 0, records. size ( ) )
19350	assertExpectedMeanStd ( )
19351	assertTrue ( actual )
19352	Assert. assertThat ( i, is ( 22 ) )
19353	assertEquals ( 15, atAct1. get ( 0 ) )
19354	Assert. assertEquals ( config. hosts. size ( ), 4 )
19355	assertEquals ( "java.util.Collection<de.test.Company>", tp. toString ( ) )
19356	assertFalse ( currentData. isPresent ( ) )
19357	Helpers. assertJson ( querySpecification. toJson ( ), "{\\"query\\":\\"select * from enrollments where validWhere group by validGroupBy\\"}" )
19358	assertEquals ( 204, response. statusCode ( ) )
19359	assertSame ( "OutoutStream is not set correctly.", outputStream, entrancePi. getOutputStream ( ) )
19360	assertEquals ( 0xffeeddccbbaa0099L, result )
19361	assertEquals ( "bcd", new String ( out. toByteArray ( ) ) )
19362	assertTrue ( commiters. isEmpty ( ) )
19363	assertEquals ( 1305, result )
19364	assertTrue ( isEqual ( distance, expected ) )
19365	Assert. assertTrue ( "The re-generated and the read record do not match.", k1. equals ( k2 ) && v1. equals ( v2 ) )
19366	assertEquals ( "file:/foo/bar/", moduleDir )
19367	assertEquals ( "PONG", response )
19368	new ProductStorageExpectation ( ). qtyCapacity ( Quantity. QTY_INFINITE ). qty ( ppOrderBOMLine. getQtyDelivered ( ) ). qtyFree ( Quantity. QTY_INFINITE ). assertExpected ( storage )
19369	assertEquals ( false, sut. isMale ( ) )
19370	Assert. assertEquals ( "Restrictions needs to be saved!", 2, restrictions. length )
19371	Assert. assertEquals ( "Session Application-Id should be the same as indicated.", SLh_APPID, sessionAppId )
19372	runner. assertAllFlowFilesTransferred ( QueryRecord. REL_FAILURE, 1 )
19373	Assert. assertTrue ( "Empty String field should not have a validation error", diags. isEmpty ( ) )
19374	assertThat ( newStart, equalTo ( IntraDayDate. startOfDay ( new LocalDate ( 2009, 1, 18 ) ) ) )
19375	assertFalse ( fileExists )
19376	assertEquals ( Rect. centeredRect ( 210, 320, 30, 40 ), g. getBounds ( ) )
19377	assertThat ( isValid, is ( true ) )
19378	assertEquals ( UriStatus. VALID_UNVERSIONED, manager. validateRenderingUri ( uri ) )
19379	assertEquals ( expResult, result )
19380	assertNull ( tuple. getSet ( "field" ) )
19381	Assert. assertEquals ( ResponseCode. BAD_OPTION, exchange. getResponse ( ). getCode ( ) )
19382	assertEquals ( "it works", runner. getDescription ( ). getChildren ( ). get ( 0 ). getMethodName ( ) )
19383	assertEquals ( "Response components should match the mocked components", mockedComponents, responseComponents )
19384	assertEquals ( expected, elements )
19385	assertNotNull ( mqttAsyncClient )
19386	assertEquals ( expected, actual )
19387	assertWindowUpdateFrame ( frame, streamId, windowSizeIncrement )
19388	Assert. assertEquals ( expectedNode. toString ( ), pdoc. toString ( ) )
19389	Assert. assertFalse ( new LogAdapter ( "logger.name.here", mockConfigCaller ( ) ). isDebugEnabled ( ) )
19390	assertNotNull ( factory. newAsyncClient ( new TestAsyncClientListener ( ) ) )
19391	assertEquals ( body. toString ( ), "error 4 test error" )
19392	assertEquals ( 1, queue. poison ( ). size ( ) )
19393	assertTrue ( writtenCount == TEST_SIZE )
19394	assertEquals ( MatchType. MATCH_FAILURE, pattern ( "{}" ). matches ( request ). getMatchType ( ) )
19395	assertEquals ( Status. WARN, jxm. getStatus ( ) )
19396	assertThat ( map. size ( ), is ( 0 ) )
19397	assertThat ( this. rbenvRubyRuntimeLocatorService. isInstalled ( ), equalTo ( true ) )
19398	TestUtils. assertPropertyChangeEvent ( report, "draggedDistance", 0, 10 )
19399	assertOut ( "a = '' + 2 + '' + '' * 4" )
19400	Assert. assertThat ( message, containsString ( "contained" ) )
19401	assertThat ( f. getAbsolutePath ( ), startsWith ( filter. getAbsolutePath ( ) ) )
19402	assertEquals ( State. PARTIAL, result )
19403	assertEquals ( 0, result )
19404	assertEquals ( "unexpected mapping", KERMIT_UID_PRINCIPAL, mapped )
19405	assertTrue ( Tools. getFile ( testFile ). indexOf ( "#!" ) == 0 )
19406	assertOut ( "var /** @type {string} */ a = escape('http://whatever.com')" )
19407	assertArrayEquals ( NOT_ENCODED, binary, encode ( object ) )
19408	assertEquals ( - 1234f, ConfigUtils. getFloat ( config, 0, "some-number" ), 0.1f )
19409	assertThat ( optionsByType. get ( Timeout. class ), is ( otherTimeout ) )
19410	assertEquals ( expectedOpts, javaOpts )
19411	assertEquals ( 0, historicIncidents )
19412	assertTrue ( result, result. contains ( "\\nfieldName=id\\nid=true\\n" ) )
19413	assertThat ( Arrays. asList ( actual ), contains ( "Databases NoSQL/MarkLogic", "Big Data/MarkLogic" ) )
19414	assertEquals ( 2, ( int ) personName. getId ( ) )
19415	assertEquals ( "Expected 1 result!", 1, n )
19416	assertSeen ( visible, s9 )
19417	assertTrue ( matched )
19418	assertEquals ( 0, state. getExcludedScopes ( ). size ( ) )
19419	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 10" ) )
19420	assertTrue (! isTouched )
19421	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC, ScopePathType. ACTIVITIES_UPDATE, ScopePathType. ORCID_WORKS_UPDATE, ScopePathType. ORCID_WORKS_CREATE, ScopePathType. FUNDING_UPDATE, ScopePathType. FUNDING_CREATE, ScopePathType. AFFILIATIONS_UPDATE, ScopePathType. AFFILIATIONS_CREATE, ScopePathType. ORCID_PATENTS_CREATE, ScopePathType. ORCID_PATENTS_UPDATE, ScopePathType. PEER_REVIEW_UPDATE, ScopePathType. PEER_REVIEW_CREATE, ScopePathType. ACTIVITIES_UPDATE )
19422	assertLess ( sbWidthEnd, sbWidthStart, "Sidebar width schould be increased!" )
19423	assertEquals ( 4, ( ( Callable <? > ) result ). call ( ) )
19424	assertEquals ( np. getNetworkLayerDefault ( ), upperLayer )
19425	assertEquals ( "Mismatched data at iteration #" + i, expected, res )
19426	assertNotNull ( DnsNameResolver. maybeChooseServiceConfig ( choice, new Random ( ), "localhost" ) )
19427	assertTrue ( TextFileUtils. fileEndsWithNewlineChar ( file0 ) )
19428	assertTrue ( "package not build", new File ( "target/test-classes/test.deb" ). exists ( ) )
19429	Assert. assertFalse ( res. isPresent ( ) )
19430	assertEquals ( expResult, result )
19431	assertEqualsIgnoreWhitespace ( expected, drl )
19432	assertThat ( count, is ( equalTo ( 2L ) ) )
19433	assertThat ( duration. dividedBy ( 3 ), equalTo ( TimeDuration. ofSeconds ( 0.4 ) ) )
19434	assertNotEquals ( ref, oid )
19435	assertEquals ( TargetType. PILLAR_PCRE, target. getType ( ) )
19436	Assert. assertEquals ( "Permuting by 0 changed the alignment!", afpChain, afpChain2 )
19437	assertFalse ( validator. validate ( "student", ids ). containsAll ( ids ) )
19438	assertEquals ( conf. getRest ( ). get ( 0 ). getResource ( ). get ( 0 ). getType ( ). toString ( ), "Patient" )
19439	Assert. assertEquals ( expectedResult, result )
19440	assertSnake ( "       \\n" + "       \\n" + "    ��  \\n" + "   ����  \\n" + "       \\n" + "       \\n" + "       \\n" )
19441	assertEquals ( expected, arguments. profilers )
19442	Assert. assertEquals ( expected, testIndex. findConc ( "(c:'NOTININDEX')? a:[] 'aap' b:[] :: c -> a.word = b.word", sortBy ) )
19443	assertEquals ( "10", zorkaAgent. query ( "zorka.jmx(\\"test\\", \\"test:name=bean1,type=TestJmx\\", \\"Nom\\")" ) )
19444	assertDurationEquals ( 2, TimeUnit. WEEKS, task. getDuration ( ) )
19445	assertDtos ( expected, actual )
19446	assertResultsEqual ( node, 0.0 )
19447	assertTrue ( output. contains ( "'TIMEZONE'='GMT+1'" ) )
19448	Assert. assertEquals ( csvString, "\\"col1\\",\\"col2\\"\\n\\"val1\\",\\"val2\\"\\n\\"val3\\",\\"val4\\"\\n" )
19449	assertTrue ( "The count of open popups should be one", count == 1 )
19450	Assert. assertNotNull ( mat )
19451	assertTrue ( entity. getId ( ) > 0L && Boolean. FALSE. equals ( entity. getAwesome ( ) ) )
19452	Assert. assertEquals ( b, a. rotate ( ) )
19453	assertFalse ( validator. isValid ( integer ( min, max ) + "", null ) )
19454	Assert. assertEquals ( "/base/12345/pages/5/en?format=json&q=URI%20Templates", uri )
19455	assertThat ( s, is ( "// This file starts with a UTF-8 BOM." + nl + "alert(\\"Hello BOM\\");" + nl ) )
19456	Assert. assertNull ( actualNode )
19457	assertEquals ( inputString, x12. toString ( ) )
19458	assertEquals ( "Results were not in the order of the provided keys", keys. get ( index ), bytes )
19459	assertEquals ( expected, bos. toString ( ) )
19460	assertTrue ( sw. toString ( ). contains ( needleToFind ) )
19461	assertFalse ( c. remove ( "sadsdf", null ) )
19462	assertThat ( method. invoke ( obj, ( Object ) new String [ ] { "a", "b", "c" } ), is ( ( Object ) new String [ ] { "a", "b", "c" } ) )
19463	assertEquals ( new String ( Base64. decodeBase64 ( ANDROID_CONFIG_CONTENT ), Charsets. UTF_8 ), content )
19464	assertEquals ( "provides X.Y with Z1.Z2, Z3.Z4;\\n", modelWriter. toString ( ) )
19465	assertEquals ( 1, availableProperties. size ( ) )
19466	GwtAssertions. assertThat ( a )
19467	assertEquals ( "Person2[name=FRED, score=21]", s )
19468	assertEquals ( violation. getMessage ( ), "Message is {escaped}" )
19469	assertTrue ( XMLUnit. compareXML ( result ( "xquery/string.xml" ), zapResult ). similar ( ) )
19470	assertEquals ( field. getSqlName ( ), "Table.field" )
19471	assertThat ( result, is ( Arrays. asList ( msg1, msg2 ) ) )
19472	assertTrue ( permissionEvaluator. hasAnyProjectPermission ( authentication, Permission. EDIT_PAGE ) )
19473	assertThat ( receiver. message, is ( data ) )
19474	assertEquals ( 50, cap. get ( 0 ) )
19475	Assert. assertEquals ( 3L, ( long ) sut. execute ( new UsageMetricDailyStreamInfoRequest ( new Date ( apri8th2011 ), streamScopeId ) ) )
19476	assertEquals ( expectedPlan, actualPlan )
19477	assertNotEquals ( test1. toHexString ( ), test2. toHexString ( ) )
19478	assertXMLIdentical ( new Diff ( result, combineWithKey ( "", recessive, dominant ) ), true )
19479	assertNotNull ( assertionDocument )
19480	assertTrue ( actual. isEmpty ( ) )
19481	assertArrayEquals ( expShape, expOut. shape ( ) )
19482	assertEquals ( v21Educations1, v21Educations2 )
19483	assertArrayEquals ( expectedFamilies, actualFamilies )
19484	assertNotNull ( modelNominalLabelDTO )
19485	assertEquals ( 200, status. getStatusLine ( ). getStatusCode ( ) )
19486	assertTrue ( matches )
19487	assertEquals ( 200, response. code ( ) )
19488	assertEquals ( message, 1, invalidValues. length )
19489	logSpy. assertInfoWithExceptionWasLogged ( Exception. class )
19490	assertFalse ( TracingHandlerInterceptor. isTraced ( request ) )
19491	assertThat ( violations. size ( ), is ( 1 ) )
19492	assertEquals ( this. tlv, builder. getOfList ( ) )
19493	assertEquals ( "string 1", summaryString )
19494	assertThat ( found, equalTo ( new MockObject ( found. _id, "twenty", 20 ) ) )
19495	assertAllGoodAfterRemovePauses ( )
19496	assertTrue ( Cells. isEmpty ( cell ) )
19497	assertEquals ( expResult, result, 0.1 )
19498	assertEquals ( expected, actual )
19499	Assert. assertTrue ( annots. get ( 0 ) instanceof Pdf3DAnnotation )
19500	assertThat ( output. readKeyValuesToMap ( ), equalTo ( expectedOutput ) )
19501	Assert. assertTrue ( processor. getSupportedAnnotationTypes ( ). contains ( AlexaIntentListener. class. getTypeName ( ) ) )
19502	assertThat ( errors, not ( hasFieldErrors ( "familyName" ) ) )
19503	assertEquals ( 0x00FFFF, result. getVoxel ( 5, 15, 5 ),.01 )
19504	assertTrue ( ml. isEmpty ( ) )
19505	assertEquals ( JreVersion. Unsupported, version )
19506	assertThat ( ( Long ) dest. get ( "aaa" ), is ( 1000L ) )
19507	assertEquals ( expected, actual )
19508	assertSame ( INITIATIVE_PUBLIC, result )
19509	assertTrue ( recordListener. invoked ( ) )
19510	assertEquals ( 3, service. getHttpClient ( ). getNumberOfCallsToExecuteMethod ( ) )
19511	assertFalse ( solution. equals ( newSolution ) )
19512	assertFalse ( infoValidator. validate ( info ) )
19513	assertNonLLStar ( g, altsWithRecursion )
19514	assertEquals ( "Correct command count", 1, catalog. getCommands ( ). size ( ) )
19515	assertEquals ( "[* foo.*]", m. toString ( ) )
19516	Assert. assertNull ( queue. removeHead ( 0L ) )
19517	Assert. assertTrue ( written. contains ( "ref=\\"rulesets/dummy/basic.xml/DummyBasicMockRule\\"" ) )
19518	assertScoreAndParse ( content, null, 2 )
19519	assertFalse ( "Unable to update non existing user", success )
19520	Assert. assertEquals ( "GET", s )
19521	assertThat ( WorkflowStatus. statusType ( stageInProgress ), is ( StatusType. NOT_BUILT ) )
19522	assertTrue ( BufferedImageComparer. isRGBSimilar ( sourceImage, img ) )
19523	assertTrue ( equals )
19524	assertEquals ( blogObject. getHandle ( ), handle )
19525	assertThat ( config. getUserAgent ( ), equalTo ( userAgent ) )
19526	assertThat ( result, is ( "GRS import started" ) )
19527	assertCallTree ( callTree, callStack. getStackEvents ( ), true )
19528	assertThat ( uri, equalTo ( url + "?media=json" ) )
19529	Assert. assertEquals ( icmsSetado, icms. getIcmsst ( ) )
19530	Assert. assertEquals ( millis, tracker. getOpened ( ) )
19531	assertEquals ( "Hello ^^^ there", ResponseBodyInterpolator. interpolate ( "Hello ^^^ there", req ) )
19532	assertTrue ( ThrottlingTestUtils. isThrottled ( throttler, BUCKET_1, request, clock ) )
19533	arrays. assertIsSorted ( description, null )
19534	assertTrue ( checker. isFormat ( handle ) )
19535	assertThat ( lines. size ( ), is ( 2 ) )
19536	assertEquals ( expected, result )
19537	assertEquals ( 0, constraintViolations. size ( ) )
19538	assertEquals ( "[1, 2, null, [...], foo]", Arrays. deepToString ( array ) )
19539	assertEquals ( checkList, CheckAttributeFactory. getCheckList ( ) )
19540	assertLogContains ( "Tests summary: 1 suite" )
19541	assertTrue ( reference instanceof SoftReference )
19542	assertEquals ( asList ( "crap", "blah", "kingo", "kingo" ), mp. getParameters ( ) )
19543	assertEquals ( sessionInfo. getIdentity ( ). getIdentifier ( ), username )
19544	assertEquals ( "Y-NaN-02-01", dateSortString )
19545	assertNotNull ( result )
19546	assertEquals ( hashCode, "253ac1b8" )
19547	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, n ) + ", rmse = " + rmse, 0.0, rmse, EPS )
19548	assertE ( " 24 " + "    " + "    " + "    " )
19549	assertEquals ( assertion, base )
19550	assertThat ( cb, notNullValue ( ) )
19551	assertNull ( event. get ( ) )
19552	assertEquals ( - 11, testApp. executeApplication ( args ) )
19553	assertTrue ( result. hasErrors ( ) )
19554	assertEquals ( expected, new String ( actual ) )
19555	assertSame ( root, transform ( root ) )
19556	assertEquals ( ImmutableVariantScore. of ( ReadType. ALT, 47 ), SamRecordScoring. getVariantScore ( alt, SNV ) )
19557	Assert. assertArrayEquals ( surveyDatumList. toArray ( ), new Object [ ] { b, e, q, r, s, w } )
19558	assertEquals ( "true is true", aviatorBoolean. add ( aviatorString, null ). getValue ( null ) )
19559	assertTrue ( "Path for added property is wrong: actual=" + listener. getEvents ( ). get ( 0 ). getPath ( ) + ", expected=" + propPath, containsPath ( listener, propPath ) )
19560	Assert. assertEquals ( numeroControleFCI, produto. getNumeroControleFCI ( ) )
19561	Assert. assertEquals ( Object. class, t. getType ( ) )
19562	assertEquals ( "null", formatWithNullString. getNullString ( ) )
19563	assertTrue ( propertiesManager. getPropertyChangeListeners ( ). isEmpty ( ) )
19564	Assert. assertEquals ( entity. getFieldValues ( COMPANY ). get ( 0 ), getEntity. getFieldValues ( COMPANY ). get ( 0 ) )
19565	assertEquals ( "abc", subject. getCurrentState ( ). getID ( ) )
19566	assertThat ( result, equalTo ( SUN. ordinal ( ) ) )
19567	assertPlanMatches ( expected )
19568	assertThatSql ( query, is ( "SELECT t1.c1, t2.c2 FROM table1 AS t1 INNER JOIN table2 AS t2 ON t1.c0 = t2.c0" ) )
19569	assertNull ( value )
19570	Assert. assertNull ( reconnectCohort )
19571	assertThat ( readElements, containsInAnyOrder ( new User ( "alex", "soto" ), new User ( "ALEX", "SOTO" ) ) )
19572	assertEquals ( "Input " + v + " does not match output " + o, v, o )
19573	assertEquals ( command1. hashCode ( ), command2. hashCode ( ) )
19574	assertMockEndpointsSatisfied ( )
19575	Assert. assertEquals ( 5, products. size ( ) )
19576	Assert. assertEquals ( expectedJsonString, actualJsonString )
19577	assertEquals ( other, file. getLastModified ( ) )
19578	assertEquals ( 2, s. getRequiredSkills ( ). values ( ). size ( ) )
19579	assertEquals ( "/calvalus/eodata/MER_RR__1P/r03/2006/07/18", archivePath )
19580	assertTrue ( expectedString1. equals ( statistic. toString ( ) ) || expectedString2. equals ( statistic. toString ( ) ) )
19581	assertThat ( step. getResult ( ), is ( TestResult. PENDING ) )
19582	assertThat ( result. toBase64Encode ( ), is ( "d2FzYWJpX2FkbWluOmFkbWluX3dhc2FiaQ==" ) )
19583	assertThat ( result, is ( true ) )
19584	Assert. assertEquals ( "{\\"a\\":[1,{\\"b\\":[2]}]}", p )
19585	assertTrue ( "Name missing for untyped statistic " + statistic, GlowStatistic. getName ( statistic )!= null )
19586	assertTrue ( downloader. waitForReportReady ( ) )
19587	assertNull ( adapter. receive ( null ) )
19588	runner. assertAllFlowFilesTransferred ( PutSolrContentStream. REL_SUCCESS, 1 )
19589	assertEquals ( expected, this. output. toString ( ) )
19590	assertThat ( "Some elements were not added.", index. getSize ( ), equalTo ( 2 ) )
19591	assertFalse ( messageSent )
19592	assertReferenceable ( hybrid )
19593	Assert. assertNotNull ( builderFactory. createArrayBuilder ( ) )
19594	assertEquals ( expected, actual )
19595	Assert. assertFalse ( artifactFilter. match ( getArtifact ( ) ) )
19596	assertEquals ( timeFrameEditor. isFirstMonthAvailable ( ), false )
19597	assertNotNull ( result )
19598	assertThat ( returned, is ( result ) )
19599	assertTrue ( peerAcceptanceUtil. isPeerInterestedOnRemoteClient ( clientID. getServiceID ( ) ) )
19600	assertEquals ( "Failed Matching", VersionMatchResult. REJECTED, p. matches ( info ) )
19601	assertEquals ( "MOD13A2", typeString )
19602	assertEquals ( 2, solution. getRoutes ( ). iterator ( ). next ( ). getActivities ( ). size ( ) )
19603	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
19604	Assert. assertEquals ( actualDependencies, expectedDependencies, "Unexpected dependencies for process: " + outputFeedToTest )
19605	assertEquals ( R. drawable. ic_dialog, shadowDialog. getShadowAlertController ( ). getIconId ( ) )
19606	assertThat ( routingRuleCache. getRoutingRuleId ( repository ), is ( new DetachedEntityId ( "rule-a" ) ) )
19607	Assert. assertEquals ( "http://example.com/{?foo*}", template. getTemplate ( ) )
19608	assertThat ( gtx. get ( meta, hoge. getKey ( ), 1 ), is ( notNullValue ( ) ) )
19609	assertThat ( regionalBreweries, hasItems ( "Capital Brewery", "City Brewing Company ", "Jacob Leinenkugel Brewing Company", "Lakefront Brewery, Inc.", "New Glarus Brewing Company", "Stevens Point Brewery" ) )
19610	assertTrue ( isPropertyValueSet )
19611	assertEquals ( 4, ksession. fireAllRules ( ) )
19612	assertNotNull ( informe. getId ( ) )
19613	assertEquals ( "Expected 1 results!", 1, count )
19614	assertTrue ( vRoute. getStart ( ). getLocation ( ). getId ( ). equals ( "start" ) )
19615	assertEcssEquals ( ".menu{left:\\"#{notemptyrichSkin.menu1?'10px':''}\\";}", convertFragment ( xcss ) )
19616	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
19617	assertEquals ( expected, elements )
19618	assertEquals ( 2 * Constants. KB, info. getLength ( ) )
19619	assertEquals ( "Java", orElseFramework. name )
19620	assertThat ( result, is ( "http://localhost:9999/test" ) )
19621	assertEquals ( result, one )
19622	assertEquals ( 0, v. getSize ( ) )
19623	assertEquals ( "5_qb56G0OJDw-lb5mkDaWS4MwuY0fatkn9LkNqUHqMk", thumbprint )
19624	assertThat ( pattern. matchAsInclusive ( "Test.class", "method" ), is ( true ) )
19625	assertThat ( domain. getValidationFailures ( resourceLookup ), contains ( stringContainsInOrder ( "variables", "ADMIN_NAME", "INTROSPECT_HOME", "spec.serverPod.env", "are" ) ) )
19626	assertTrue ( sf. getSocketWrapped ( ) || sf. getSocketCreated ( ) )
19627	statusChecker. assertContainsMatch ( Status. ERROR, "File property must be set before any triggeringPolicy " )
19628	assertNotNull ( Country. reader ( ). read ( ) )
19629	assertEquals ( SUPER_USER_INSTANCE, session. getUserInformation ( ) )
19630	Assert. assertNotNull ( object )
19631	assertEquals ( "--index", expr. getParameterValue ( ) )
19632	Assert. assertEquals ( 2, m2Fields. get ( "xx" ). intValue ( ) )
19633	assertEquals ( true, extensionsConfigurationDao. validate ( validExtensionConfiguration ) )
19634	assertEquals ( country, request. getVisitorCountry ( ) )
19635	assertTrue ( cleanExit )
19636	assertTrue ( page. asXml ( ). contains ( "Do you see me?" ) )
19637	assertEquals ( 5.2, mo. mean ( X [ 3 ] ), epsilon )
19638	assertEquals ( expected, actual )
19639	assertThat ( BondBasedConfiguration. configurationOf ( g, 0, 1, 2, 3 ), is ( Configuration. DoubleBond. TOGETHER ) )
19640	assertNull ( deserializedDate )
19641	assertThat ( resultedQuery, is ( expectedQuery ) )
19642	assertThat ( encryptor. checkPassword ( singleCharacterPwd, encryptedPasswordPass1 ), is ( true ) )
19643	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFInfoEventoCartaCorrecao ( ). toString ( ) )
19644	assertEquals ( "test1", getOnlyElement ( testQueue ) )
19645	assertEquals ( map, map2 )
19646	assertThat ( this. resolver. resolveArgument ( mockMethodParameter ( Type. class ), this. mavContainer, this. webRequest, this. binderFactory ), is ( sameInstance ( ( Object ) resolved ) ) )
19647	assertThat ( g. atom ( g. order ( ) - 1 ). label ( ), is ( "a holo-[acyl-carrier protein]" ) )
19648	assertEquals ( A, bite )
19649	assertTrue ( entities. size ( ) > 0 )
19650	Assert. assertNotNull ( geocodingServlet )
19651	assertEquals ( expected, d_ratioA. getError ( ), 0.001 )
19652	assertThat ( this. start. plus ( period ), is ( this. end ) )
19653	assertTrue ( hasReset )
19654	assertEquals ( TestUtil. HTTP_TEST_PROXY, result. get ( 0 ) )
19655	assertSame ( shouldFind, selection. fileSelects ( By. id ( "test" ) ) )
19656	context. assertIsSatisfied ( )
19657	Assert. assertEquals ( "test message action1", harness1. getValue ( "message" ) )
19658	assertEquals ( Integer. valueOf ( 67 ), resultMap. get ( "Age" ) )
19659	assertEquals ( Integer. valueOf ( 3000 ), res. < Integer > get ( "port" ) )
19660	assertEquals ( "text/html; charset=UTF-8", headers. get ( "Content-Type" ). iterator ( ). next ( ) )
19661	assertEquals ( "user_id userId,user_name userName,pwd pwd", t. getColumnsSql ( ) )
19662	assertEquals ( 5, sum, 1e-1 )
19663	assertEquals ( buildValue ( i ), new String ( value. getBytes ( ), 0, value. getLength ( ) ) )
19664	assertTrue ( listMultipartFormDataMessageBodyReader. isReadable ( type, genericType, new Annotation [ 0 ], null ) )
19665	assertEquals ( UNAUTHORIZED_401, response. getStatus ( ) )
19666	Assert. assertEquals ( value, writeTest ( kernelServices, "max-heap-size", value ) )
19667	assertEquals ( "failed with seed: " + seed, expected, actual )
19668	assertEquals ( "1 second", value )
19669	assertEquals ( "${one}, ${three}, ${two}", template. evaluate ( ) )
19670	assertNull ( new TaskSpecification ( "", "", inputBlock, outputBlock, null ). getSabotageCheck ( ) )
19671	assertFalse ( new BytecodeAnnotationBuilder ( true ). sanityCheckInline ( instrAaload ) )
19672	assertEquals ( 0.5, comp. compare ( "41.5,27.2", "1231,123123" ) )
19673	assertActive ( player1, player2, player3, player4, player5 )
19674	Assert. assertTrue ( "The list is not ordered ascending", sortedAges. equals ( ages ) )
19675	Assert. assertEquals ( "byte count not sent", 10, status. getByteCount ( ) )
19676	Assert. assertNull ( retinaCookieValue )
19677	Assert. assertEquals ( a. encode ( 9876543210123L ), "Y8r7W1kNN" )
19678	assertThat ( result. isEmpty ( ), is ( true ) )
19679	assertEquals ( expResult, result, 0.0 )
19680	Assert. assertTrue ( list. size ( ) == 2 )
19681	assertions. isLessThan ( actual )
19682	assertTrue ( result )
19683	assertCollection ( collection )
19684	Assert. assertTrue ( result == null )
19685	assertThat ( valueModel. size ( ), is ( 0 ) )
19686	assertTrue ( "Repository should contain newly added statement", testCon. hasStatement ( bob, name, nameBob, false ) )
19687	assertNull ( writer )
19688	assertNull ( loaded )
19689	assertTrue ( result. length == 0 )
19690	assertEquals ( E * E * Math. cos ( Math. E ), e. evaluate ( ), 0d )
19691	assertThat ( RpslObjectFilter. diff ( original, updated ), is ( "@@ -1,3 +1,4 @@\\n" + " mntner:         UPD-MNT\\n" + "-mnt-by:         UPD-MNT\\n" + "+description:    updated\\n" + "+mnt-by:         UPD-MNT2\\n" + " source:         TEST\\n" ) )
19692	assertTrue ( filter. allow ( event, listener ) )
19693	Assert. assertEquals ( "SELECT MID(YEARWEEK('2000-01-01'), 5, 2);", text )
19694	assertEquals ( expResult, result )
19695	assertEquals ( expected, stats )
19696	assertEquals ( ValidationResult. Result. OK, vr. getStatus ( ) )
19697	assertSame ( expected, result )
19698	Assert. assertEquals ( 2, result. size ( ) )
19699	compiler. assertErrorsOnLines ( "example/Test.java", diagnostics, 8 )
19700	assertNotNull ( "Sendout is null", entity )
19701	assertEquals ( ProductData. UTC. parse ( "20030101:0000", "yyyyMMdd:HHmm" ). getAsDate ( ). getTime ( ), startTime. getAsDate ( ). getTime ( ) )
19702	assertTrue ( context. captureSpans ( ). isEmpty ( ) )
19703	assertThat ( results. subList ( 0, 5 ), is ( Arrays. asList ( ProcessHadoopScriptHandler. CLEANUP_STAGE_CLASS, "tbatch", "tflow", "texec", context. getArgumentsAsString ( ) ) ) )
19704	Assert. assertEquals ( THIRTEEN_DOUBLE, pi. getThirteenDouble ( ) )
19705	assertEqualsQR ( Ar, qr. factor ( new DenseMatrix ( Ar ) ) )
19706	assertThat ( definition. getTenantId ( ), is ( TENANT_ONE ) )
19707	assertEquals ( getLoggingEvent ( ). getFormattedMessage ( ), "test; " + uuid. toString ( ) )
19708	assertNotNull ( oAuth2AccessToken )
19709	Assert. assertEquals ( expectedXML, actualXML )
19710	assertEquals ( 1, map. size ( ) )
19711	assertNull ( deleteFirst )
19712	assertThat ( fromType, is ( equalTo ( new QName ( "java:byte[]" ) ) ) )
19713	assertNotNull ( waitOn ( browser, 6000 ). untilRemoved ( By. id ( "wait-if" ) ) )
19714	assertPermanentCount ( playerA, "Harvest Mage", 1 )
19715	assertRelativeEffectEqual ( expected, actual )
19716	assertEquals ( "foo=bar", capt. getAllValues ( ). get ( 0 ). getFirstHeader ( "Cookie" ). getValue ( ) )
19717	assertTrue ( violations. hasNext ( ) )
19718	assertTrue ( Arrays. equals ( getPacketData ( "02 00 02 01 04 01 00 00 00 03 03 00 00 01 00 06 00 00 00 01 00 06 00" ), request. serialize ( ) ) )
19719	Assert. assertNull ( foo )
19720	assertThat ( processors, equalTo ( null ) )
19721	assertEquals ( "000000000000000000000000000000000000ffff7f000001208d", Utils. HEX. encode ( pa. bitcoinSerialize ( ) ) )
19722	Assert. assertEquals ( "http://tfs2013:8080/tfs/jenkins-tfs-plugin", actual )
19723	assertTrue ( ex. isPrime ( 29 ) )
19724	Assert. assertEquals ( expected, sw. toString ( ) )
19725	assertEquals ( 30, points )
19726	assertThat ( provider, instanceOf ( KerberosSchemeFactory. class ) )
19727	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5 ) ) )
19728	Assert. assertTrue ( isValid ( resp, FORMAT_STRING, true, 1 ), "Response is not valid" )
19729	assertNotNull ( pn )
19730	Assert. fail ( "Expected validation failure on: " + c. getName ( ) )
19731	assertEquals ( expectedSchema, AvroTypeConverter. convertToAvro ( TalendType. DOUBLE, null ) )
19732	Assert. assertEquals ( 1, size )
19733	assertTrue ( ticklerHandler. getTicklerManager ( ). validateTicklerIsValid ( tickler ) )
19734	Assert. assertNotEquals ( asDTO. getAnalyzedCount ( ), 500 )
19735	MatcherAssert. assertThat ( new SpBasic ( dude ). string ( ), CoreMatchers. equalTo ( dude ) )
19736	Assert. assertEquals ( expectedHash, computedHash )
19737	Assert. assertEquals ( "SELECT CHARSET('abc');", text )
19738	Assert. assertEquals ( TestHelper. getPoint ( 30, 10 ), result. getValue ( ) )
19739	assertFalse ( "makeRand failed - hash of all zeros", Arrays. equals ( r, Digest. digest ( new byte [ Digest. HASH_SIZE_BYTES ] ) ) )
19740	assertEquals ( "Incorrect string returned", fileString, new String ( rbytes, 0, fileString. length ( ) ) )
19741	assertEquals ( "ABC101DEF", lambda. apply ( 101 ) )
19742	assertEquals ( "one two", facets. get ( 1 ) )
19743	assertEquals ( new Values ( null, false, null, true, false, null, false, false, false ), v )
19744	assertTrue ( "Expected " + expectedQuery1 + " or " + expectedQuery2 + " but was " + newQuery, ( expectedQuery1. equals ( newQuery ) || expectedQuery2. equalsIgnoreCase ( newQuery ) ) )
19745	assertNotNull ( result )
19746	assertEquals ( "field.asSet()", p. toString ( ) )
19747	Assert. assertEquals ( beforeNumTasks, getDefaultQueue ( ). fetchStatistics ( ). getNumTasks ( ) )
19748	assertTrue ( d1 instanceof PublicCloneable )
19749	assertThat ( ByteUtil. toPrimitiveByte ( i ), is ( ( byte ) 1 ) )
19750	Assert. assertTrue ( Math. abs ( vega - vegaAnalytic ) < 5E-02 )
19751	assertNotNull ( project )
19752	assertEquals ( "", result )
19753	assertThat ( parents, hasItems ( "field", "TwiceNested", "Nested", "Outer" ) )
19754	assertTrue ( exceptionThrown )
19755	assertNotNull ( entity. getId ( ) )
19756	assertTrue ( isValid )
19757	assertNull ( found )
19758	assertTrue ( EXPECTED_DS_INDEX_MSG + " instead got " + e. toString ( ), e instanceof DatastoreNeedIndexException )
19759	assertTrue ( cygnusGroupingRules. getRules ( ). isEmpty ( ) )
19760	Assert. assertEquals ( 0, a. hubba )
19761	assertThat ( result, equalTo ( v + "." + s ) )
19762	assertArrayEquals ( ordered, result. toArray ( new String [ 0 ] ) )
19763	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"record\\":{\\"url\\":\\"http://sendme.com/tropo\\",\\"beep\\":true,\\"allowSignals\\":[\\"exit\\",\\"stopHold\\"]}}]}" )
19764	Assert. assertEquals ( "password/change", view )
19765	assertIs ( 4, count )
19766	assertTrue ( latch. await ( 2, SECONDS ) )
19767	assertThat ( "Count of customer", res, is ( 0 ) )
19768	Assert. assertFalse ( this. manager. disconnectAll ( this. family1 ) )
19769	assertEquals ( "mysecret", accClientConf. get ( Property. INSTANCE_SECRET ) )
19770	assertMockEndpointsSatisfied ( )
19771	Assert. assertTrue ( result. getUserID ( ). isEmpty ( ) )
19772	assertThat ( tokens, equalTo ( Arrays. < Object > asList ( "One \\nTwo\\nThree" ) ) )
19773	assertTrue ( kb. hasErrors ( ) )
19774	Assert. assertEquals ( redirectUrl, finalRedirectUrl )
19775	assertThat ( authorities. stream ( ). map ( a -> a. getAuthority ( ) ). collect ( Collectors. toList ( ) ), containsInAnyOrder ( WebSecurityConfiguration. AUTHENTICATED_GRANT ) )
19776	assertTrue ( CardAPI. getAllCards ( filter ). contains ( testCard ) )
19777	assertEquals ( "Latitude is not properly parsed", 5d, mapper. readLatitude ( columns ), 0 )
19778	assertThat ( foo. isMogoSlaveOk ( ), equalTo ( true ) )
19779	Assert. assertFalse ( types. isEmpty ( ) )
19780	assertThatClassExpressionIsTranslatedAs ( classExpression, initialStateAsserted, expectedPropertyValue )
19781	assertEquals ( null, result )
19782	Assert. assertEquals ( projectorForward. getTranscriptStartingAtCDS ( ), resultTranscript )
19783	assertEquals ( "POINT (8.07013599546795 44.76924401481436)", g1. toText ( ) )
19784	MatcherAssert. assertThat ( new BasicTemplate ( ImmutableList. of ( ), ImmutableList. of ( one, two ) ). fillUp ( ImmutableList. of ( Mockito. mock ( Lexeme. class ) ), new BasicVocabulary ( ImmutableMap. of ( ) ) ), CoreMatchers. equalTo ( "Hey dude" ) )
19785	assertAllTargetsCount ( 0 )
19786	assertEquals ( "brie", declaration. getValue ( null, brie ) )
19787	assertThat ( httpGetRoot, isAllowed ( ) )
19788	assertFalse ( property. toStringValues ( ). isEmpty ( ) )
19789	assertEquals ( 0, array. size ( ) )
19790	assertTrue ( "MyApp.app folder is missing in AppstoreUploadFile.", files. length == 1 && files [ 0 ]. getName ( ). equals ( "MyApp.app" ) )
19791	assertFalse ( obs. isDirty ( ) )
19792	assertEquals ( "[1080:0:0:0:8:800:200c:417a]:80", StringUtils. formatSocket ( socket ) )
19793	assertThat ( log, instanceOf ( JakartaCommonsLoggingImpl. class ) )
19794	assertNotNull ( "Title Photos is empty for " + imdbId, result )
19795	assertEquals ( 2, found. size ( ) )
19796	Assert. assertTrue ( kernelServices. isSuccessfulBoot ( ) )
19797	assertEquals ( "This tests things.", out )
19798	assertEquals ( EXPECTED_JSON_PINS_CODE, actualJsonCode )
19799	assertEquals ( ChargingCapability. V_240V_3_PHASE_32A, ChargingCapability. fromConnector ( connector ) )
19800	assertOut ( "a.setSeconds(10)" )
19801	assertEquals ( register, newRegister )
19802	assertEquals ( "<ex://s> <ex://x> \\"o\\".", result. trim ( ) )
19803	Assert. assertEquals ( new PdfString ( string ), textArray. get ( 0 ) )
19804	assertEquals ( "{" + newLine ( ) + "    with ($p) { name = \\"Luca\\" };" + newLine ( ) + "}", printConstraint ( expression ) )
19805	Assert. assertEquals ( record. get ( "name" ). toString ( ), decoded. getName ( ). toString ( ) )
19806	assertEquals ( "test", echo. echo ( "test" ) )
19807	assertEquals ( res, "" )
19808	Assert. assertArrayEquals ( cmpAlignAndMeet, outAlignAndMeet )
19809	assertEquals ( "Buffer[size=16 data=a1b2c3d4e5f61a2b3c4d5e6f10203040]", buffer. toString ( ) )
19810	Assert. assertEquals ( 18, count )
19811	assertThat ( mustache. render ( Arrays. EMPTY_OBJECT_ARRAY ), is ( "Hello" ) )
19812	assertThat ( damageComponent. getDamage ( ), IsEqual. equalTo ( 5f ) )
19813	assertRecord ( record )
19814	editor. assertCompletionLabels ( "groups", "jobs", "resource_types", "�� type", "- Resource Snippet", "- name" )
19815	Assert. assertEquals ( "Drop what?!?!", responseResult. getText ( ) )
19816	assertThat ( changeListBuilder. isEmpty ( ), is ( false ) )
19817	Assert. assertTrue ( "gpiano3.wav". equals ( ( ( JsonObject ) ( ( JsonArray ) result ). get ( 0 ) ). get ( "name" ). getAsString ( ) ) )
19818	assertEquals ( expected, actual )
19819	assertNotEquals ( originalEdgeValue. hashCode ( ), decodedEdgeValue. hashCode ( ) )
19820	assertThat ( xmlResult, CompareMatcher. isSimilarTo ( out. toString ( ) ). ignoreWhitespace ( ). withNodeMatcher ( new DefaultNodeMatcher ( ElementSelectors. byNameAndText ) ) )
19821	assertNotNull ( result )
19822	assertTrue ( rootNode. exists ( ) )
19823	runner. assertValid ( )
19824	assertArrayEquals ( new Object [ ] { 1 }, ArrayUtils. substract ( items, "id" ) )
19825	assertThat ( inputsJson, contains ( expectedJson ) )
19826	assertEquals ( expected, actual )
19827	assertEquals ( 1, search. getSize ( ) )
19828	assertViewName ( mav, "redirect:/topics/1" )
19829	Assert. assertNotEquals ( 0, first. compareTo ( second ) )
19830	assertThat ( "The validation of the password should fail when iteration count has been altered",! validateStrongPasswordHash ( passwd, manipulatedIterationsHash ) )
19831	Assert. fail ( "Test encountered an unexpected exception." )
19832	assertTokenSurfacesEquals ( Arrays. asList ( "iPhone4 S" ), tokenizer. tokenize ( input ) )
19833	assertThat ( configuration. getThreads ( ), equalTo ( 7 ) )
19834	assertThat ( ListNumbers. binarySearchValueOrLower ( values, 2 ), equalTo ( 1 ) )
19835	Assert. assertNotNull ( "Deployment URL should not be null", deploymentUrl )
19836	assertNotNull ( "Drilldown configuration link was null after serialization", outputDrilldown. getConfiguration ( ) )
19837	assertTrue ( resultMessage ( result, PUT ), result. passedValidation ( ) )
19838	assertSame ( expr. accept ( visitor ), visitResult )
19839	assertNull ( d )
19840	Assert. assertNotNull ( info )
19841	Assert. assertEquals ( "Invalid HUs retrieved", Collections. emptyList ( ), huSelectModel. createHUQueryBuilder ( ). setErrorIfNoHUs ( false, null ). list ( ) )
19842	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( 5L ), mapper. readBitemporalDate ( columns, "vtTo" ) )
19843	assertNotNull ( result )
19844	Assert. assertEquals ( 1, events. size ( ) )
19845	assertThat ( d. getFamilies ( ), arrayContainingInAnyOrder ( "Business/Salesforce", "Cloud/Salesforce" ) )
19846	assertThat ( control. matches ( "/clientsWhatever" ), is ( equalTo ( true ) ) )
19847	MatcherAssert. assertThat ( deps, Matchers. not ( Matchers. empty ( ) ) )
19848	assertEquals ( 1, index. estimateTotalCount ( ) )
19849	assertSame ( os, XenqttUtil. validateNotEmpty ( "os", os ) )
19850	assertOverflow ( new BigDecimal ( x ). divide ( new BigDecimal ( y ) ), result, x / y )
19851	assertResponse ( DataMockery. createOPTIONSRequest ( ), request )
19852	assertEquals ( "scoreHolder.addSoftConstraintMatch(kcontext, -1)", marshaledAction )
19853	assertEquals ( result. size ( ), 1 )
19854	Assert. assertEquals ( "Wrong toString()", "msgVersion: 1 objectType: org.opendaylight.yang.gen.v1.urn" + ".opendaylight.openflow.common.action.rev150203.actions.grouping.Action msgType2:" + " org.opendaylight.yang.gen.v1.urn.opendaylight.openflow.common.action.rev150203.action" + ".grouping.action.choice.OutputActionCase", key1. toString ( ) )
19855	assertEquals ( "street", model. getObject ( ). getPerson ( ). getAdresses ( ). get ( 0 ). getStreet ( ) )
19856	assertEquals ( "blue", proxy. getColor ( ) )
19857	assertThat ( resolved, contains ( "a:A", "b:B", "c:C" ) )
19858	assertSame ( "Attribute", Greeting. howdy, howdy )
19859	assertNotNull ( ui. getErrorFrame ( new JPanel ( ) ) )
19860	assertEquals ( "34 + 2\\n", found )
19861	assertFalse ( f ( "other1", "ab", false, true ). passesFilter ( null, item ) )
19862	assertEquals ( resultOfGetTopics, actualCountOfPosts )
19863	Assert. assertNull ( result )
19864	assertEquals ( 10, ZippelGCD ( aL, bL ). size ( ) )
19865	assertEquals ( "abrakadabra", aspect. aroundFlippableMethods ( pjp, flipAnnotation ) )
19866	Assert. assertNull ( nullURL )
19867	assertResult ( query ( query. toString ( ) ), binds ( "p", URI. class ) )
19868	assertNotNull ( User. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
19869	assertEqualObjects ( cpuOut. get ( 0 ), gpuOut. get ( 0 ) )
19870	assertEquals ( "-12.388889", formatter. format ( - 12.3888888 ) )
19871	assertArrayEquals ( writeBytes, readBytes )
19872	assertEquals ( Response. Status. OK. getStatusCode ( ), target. request ( MediaType. APPLICATION_XML ). get ( ). getStatus ( ) )
19873	assertNull ( cookieStore )
19874	assertTaskEvents ( task, 2, TaskListener. EVENTNAME_ASSIGNMENT, TaskListener. EVENTNAME_CREATE )
19875	assertEquals ( meta1, meta2 )
19876	assertEquals ( "{" + newLine ( ) + "    delete($person);" + newLine ( ) + "}", printConstraint ( expression ) )
19877	Assert. assertTrue ( false )
19878	assertNotNull ( "AO1 not found", adminObject1 )
19879	Assert. assertEquals ( "a =b%2C+", KeyValueFormatter. format ( params, true ) )
19880	assertEquals ( SUCCESS_FACTORY_RESPONSE, handleResponse )
19881	AvroAssertTestUtil. assertEqualsWithJsonIgnoreOrder ( outputDirPath, jsonOutputFile, DocumentMetadata. class )
19882	assertEquals ( 1, result. size ( ) )
19883	assertTrue ( "Deltas have different effects:\\n" + diff. debugDump ( ), diff. isEmpty ( ) )
19884	assertFalse ( command. equals ( new String ( ) ) )
19885	Assert. assertEquals ( 2, terms. size ( ) )
19886	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
19887	assertEquals ( 0, result. size ( ) )
19888	assertEquals ( "Option value", "false", commandLine. getOption ( "simpleOption" ) )
19889	assertArrayEquals ( new int [ ] { 3, 4 }, out. read ( queue, e ). next ( ). validElements ( 2 ). getInts ( ) )
19890	assertEquals ( expected, drugList )
19891	authRule. assertScenario ( scenario )
19892	assertThat ( subject. getAgeOfExactOrNextExistingSerial ( 10 ), is ( nullValue ( ) ) )
19893	assertEquals ( "To is not properly parsed", new Date ( 5 ), mapper. readTo ( columns ) )
19894	Assert. assertEquals ( 6., analyser. getDistanceAtActivity ( route. getActivities ( ). get ( 0 ), route ), 0.01 )
19895	assertEquals ( Lists. newArrayList ( 1 ), listBad )
19896	assertTrue ( e instanceof E_StrEncodeForURI )
19897	assertSuccess ( validationResult )
19898	assertThat ( validationList, is ( Collections. < String > emptyList ( ) ) )
19899	Assert. assertEquals ( "xml", r. get ( String. class ) )
19900	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><alice xmlns=\\"http://some-namespace\\">bob</alice>", result. toString ( ) )
19901	Assert. assertTrue ( result. isEmpty ( ) )
19902	assertArrayEquals ( new double [ ] { 160338212.294 }, StatisticUtils. determineStandardDeviationDoubles ( subSingleBenchmarkResultList, averageScore, subSingleBenchmarkResultList. size ( ) ), DELTA )
19903	assertEquals ( expected, result )
19904	assertEquals ( expectedOffset, offset )
19905	Assert. assertEquals ( "<semData><tpPer>0</tpPer></semData>", entregaSemDataDefinida. toString ( ) )
19906	assertions. containsSequence ( sequence )
19907	assertDateEquals ( new DateTime ( 2013, 1, 1, 0, 0, 0, 0 ), date )
19908	assertAxisEquals ( - 10.0, - 1.0, new double [ ] { - 10.0, - 9.0, - 8.0, - 7.0, - 6.0, - 5.0, - 4.0, - 3.0, - 2.0, - 1.0 }, new String [ ] { "-10", "-9", "-8", "-7", "-6", "-5", "-4", "-3", "-2", "-1" }, axis )
19909	assertStatus ( 2, expectedNumRows, expectedNumBytes, expectedReadBytes )
19910	assertEquals ( OTHER_GRAPHITE_URL, backendAlarm. getGraphiteBaseUrl ( ) )
19911	assertEquals ( childProject1. getCustomWorkspace ( ), childWorkspace )
19912	assertEquals ( "3 millennia ago", "3000骞村��", t. format ( new Date ( 0 ) ) )
19913	assertEquals ( ComponentElementGetValue. FIELD_VALUES [ 0 ], labelChangeValue. getText ( ) )
19914	assertThat ( testOutcome. getTestFailureMessage ( ), is ( "Test failed" ) )
19915	assertThat ( tile. getRequestBody ( ), isValidXml ( ) )
19916	Assert. assertTrue ( component. isValid ( ) )
19917	assertTrue ( loadIO. showSavedFiles ( args ). startsWith ( LoadIO. NO_SAVED_FILE ) )
19918	Assert. assertNotNull ( "URL not null", resurl )
19919	assertEquals ( b1. hashCode ( ), b2. hashCode ( ) )
19920	assertEquals ( AuthenticationMechanismOutcome. AUTHENTICATED, outcome )
19921	assertEquals ( "a/b(@a!= 123.0)/c", SelectorStepBuilder. toString ( steps ) )
19922	assertEquals ( "[foo] did not satisfy [" + StringDescription. toString ( startsWith ( "d" ) ) + ']', expected. getMessage ( ) )
19923	assertEquals ( user. getUserName ( ), "admin" )
19924	assertNotNull ( "HousingComplex is null", entity )
19925	assertEquals ( ref, tokens )
19926	assertEquals ( e1. evaluate ( new Object ( ) ), e2. evaluate ( new Object ( ) ) )
19927	assertEquals ( 0.0f, entry. getEffectiveDurationHours ( ), Float. MIN_NORMAL )
19928	assertThat ( context, is ( notNullValue ( ) ) )
19929	assertEquals ( "invalid ttl", 1000 * ttlInSeconds, actualTtl )
19930	assertEquals ( 0, Iterables. size ( s ) )
19931	assertPowerToughness ( playerA, "Gaea's Revenge", 12, 9 )
19932	assertTrue ( value1. equals ( value2 ) )
19933	assertEquals ( "text/html", newRequest ( url ). get ( ). response ( ). contentType ( ) )
19934	assertEquals ( "Artifact repository is missing extra properties", Collections. emptyMap ( ), extraArtifactRepositoryProperties )
19935	assertTrue ( Arrays. equals ( new int [ ] { 0, 0 }, coordinate ) )
19936	assertEquals ( ( - 2762 ), int0 )
19937	assertEquals ( "http://gitlab.example.com/api/v1/builds/13.json", url. toString ( ) )
19938	assertEquals ( expectedQuery, actualQuery )
19939	Assert. assertEquals ( 1060.0, balance, 0.0 )
19940	assertEquals ( "Hello World!", sample. helloWorld ( ) )
19941	assertTrue ( "Exp. the capability to be supported when the annotation key exists", capability. isSupported ( ) )
19942	assertFalse ( result. passedValidation ( ) )
19943	assertXpathExists ( "//html:hr", horizontalRule )
19944	assertThat ( codes, containsInAnyOrder ( "43343-4", "47239-9" ) )
19945	assertThat ( exclusions, containsInAnyOrder ( "this key", "that key" ) )
19946	Assert. assertEquals ( newContent, retrievedContent )
19947	assertEquals ( "CN=server-bad,O=OPS4J,C=PL", server. getName ( ) )
19948	assertEquals ( "aTestString", classUnderTest. getClientVersion ( ) )
19949	assertFalse ( new File ( "target/excludedClasses/com/querydsl/apt/domain/QArrayTest_ArrayTestEntity.java" ). exists ( ) )
19950	assertEquals ( BOLD. foreground ( RED ), style )
19951	Assert. assertEquals ( "Belarus", lineToBeReplaced. toString ( ) )
19952	assertTrue ( analyser. getBlobs ( ). entrySet ( ). isEmpty ( ) )
19953	assertEquals ( "41", cf. getSegmentQuals ( ) [ 0 ] )
19954	org. junit. Assert. assertEquals ( "2000-01-01 12:30:00", format )
19955	assertEquals ( "Check GO prefix", "http://purl.obolibrary.org/obo/GO_", context. getPrefixes ( false ). get ( "GO" ) )
19956	Assert. assertEquals ( 1, issues. length )
19957	Assert. assertEquals ( user, result )
19958	assertTrue ( poll ( o -> "Hello". equals ( message. get ( ) ) ) )
19959	assertTrue ( builder. getErrors ( ). getErrors ( ). length == 0 )
19960	Assert. assertEquals ( "x = " + x, FastMath. sin ( x ), actual [ i ], 0.0 )
19961	Assert. fail ( "Person should be invalid and exception should be thrown" )
19962	assertEquals ( Collections. EMPTY_SET, nullFieldProblems )
19963	assertEquals ( times, victim. getTotalResources ( ) )
19964	assertFalse ( profile. isExpired ( ) )
19965	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 2, warnings. size ( ) )
19966	assertEquals ( Color. blue. getRGB ( ), thumbnail. getRGB ( 49, 99 ) )
19967	assertTrue ( true )
19968	assertEquals ( tft, expected )
19969	assertEquals ( "zero", actual )
19970	Assert. assertNull ( table )
19971	Assert. assertEquals ( expected, actual )
19972	assertSame ( context. unwrap ( HibernateMessageInterpolatorContext. class ). getPropertyPath ( ), pathMock )
19973	Assert. assertThat ( x. size ( ), is ( 0 ) )
19974	assertEquals ( numLines, lines. size ( ) )
19975	assertEquals ( "A1", cache. get ( "a" ) )
19976	assertEquals ( 77, result )
19977	assertEquals ( 2, executor. run ( adultUnit ) )
19978	assertFalse ( "Should have failed to create a GroupBy command without a query.", built )
19979	Assert. assertNull ( serviceTags )
19980	assertThat ( leftMost, equalTo ( asList ( statefulRegion2, statefulRegion5 ) ) )
19981	assertArrayEquals ( splitString, testString6ExpectedSplit )
19982	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<resources>\\n" + "    \\n" + "</resources>", result )
19983	assertEquals ( 8, stringTokenizer. countTokens ( ) )
19984	assertThat ( newCode, is ( equalTo ( code ) ) )
19985	assertEquals ( expected, actual )
19986	assertEquals ( DISABLED, status )
19987	assertTrue ( "canWrite returned false", f. canWrite ( ) )
19988	assertNotNull ( entryRelationship )
19989	assertEqualsIgnoreWhitespace ( expected, drl )
19990	runner. assertNotValid ( )
19991	assertEquals ( expectedXml, actualXml )
19992	assertTrue ( a1 instanceof PublicCloneable )
19993	assertThat ( event. isCancelled ( ), equalTo ( true ) )
19994	assertThat ( algorithm. computeDigest ( ), is ( emptyDigest ) )
19995	assertEquals ( mockEnc, uit. getEncoder ( ) )
19996	assertArrayEquals ( after, Elements. slice ( before, 1, 3 ) )
19997	assertEquals ( "1 test case should fail", 1, runTestsResults. getFailedTests ( ). size ( ) )
19998	Assert. assertEquals ( "userName1", userName )
19999	Assert. assertThat ( rec, Matchers. allOf ( LogMatchers. hasMatchingExtraThrowable ( Matchers. hasProperty ( "message", Matchers. equalTo ( "My exception" ) ) ), LogMatchers. hasMatchingExtraArguments ( Matchers. arrayContaining ( ( Matcher ) Matchers. equalTo ( "b" ), ( Matcher ) Matchers. allOf ( Matchers. greaterThan ( 1L ), Matchers. lessThan ( 7L ) ) ) ) ) )
20000	assertEquals ( expected, elements )
20001	assertTrue ( in. markSupported ( ) )
20002	assertVariable ( "character_set_client", "utf8" )
20003	assertNotNull ( entity. getId ( ) )
20004	assertThat ( rendering, is ( "AB" ) )
20005	assertThat ( isMismatch, description ( theDescription ) )
20006	assertEquals ( 0, app. executeApplication ( args ) )
20007	assertNotNull ( response )
20008	assertTrue ( passwordEncoder. checkpw ( plaintext, encoded ) )
20009	Assert. assertNull ( RequestObjectHelper. getReturnKeys ( json ) )
20010	assertThatStepsInstancesAre ( builderAnnotated. buildCandidateSteps ( configuration ), FooSteps. class )
20011	assertEquals ( 425, chargeCount )
20012	assertEquals ( "hi", instance. formatMessage ( record ) )
20013	assertEquals ( expected, test. adjustInto ( base ) )
20014	assertEquals ( SimpleDosingInstructions. class, drugOrder. getDosingType ( ) )
20015	Assert. assertTrue ( fi1. sameFormatAs ( fi2 ) )
20016	assertThat ( co. getCachedSize ( ), is ( actualCachedSize ) )
20017	assertNotNull ( latestRelease )
20018	assertSame ( conf, table. getConfiguration ( ) )
20019	assertEquals ( "logo11w.png", fileName. getFileName ( ). toString ( ) )
20020	Assert. assertFalse ( errors. hasFieldErrors ( ) )
20021	Assert. assertEquals ( STRING, nextHop. getString ( ) )
20022	assertThat ( issues. toString ( ), containsString ( "None of the codes provided are in the value set http://phr.kanta.fi/ValueSet/fiphr-vs-medicationcontext" ) )
20023	assertEquals ( 0, defaultList. size ( ) )
20024	assertEquals ( res [ i ], v )
20025	assertRowsEqual ( expected, primaryData )
20026	assertEquals ( 61750L, m. getLastMillisecond ( ) )
20027	assertTrue ( instance. getTotalNetworkError ( ) < maxError )
20028	assertSame ( "bus must be retrievable after set", mockManagedConnection, handler. getData ( ). getManagedConnection ( ) )
20029	assertEquals ( copy ( value ), ra. get ( ). get ( ) )
20030	assertThat ( proxyRecipe. isFeatureEnabled ( ), is ( equalTo ( true ) ) )
20031	assertTrue ( p. apply ( createWithProperty ( name, value ) ) )
20032	assertThat ( chargingProfile. getStackLevel ( ), equalTo ( zero ) )
20033	Assert. assertTrue ( "File should exist: " + PATH + SEPARATOR + k. getKey ( ), Files. exists ( Paths. get ( PATH + SEPARATOR + k. getKey ( ) ) ) )
20034	assertEquals ( 0, hits. totalHits )
20035	assertEquals ( 0, coverage, deltaFloatEquality )
20036	assertNotNull ( entity. getId ( ) )
20037	assertNoViolations ( violations, "Validation should have passed for " + value )
20038	AssertAnnotations. assertPOS ( posMapped, posOriginal, select ( jcas, POS. class ) )
20039	assertNull ( i. getParent ( ) )
20040	assertTrue ( "Got lookups", interpolator. getLookups ( ). isEmpty ( ) )
20041	Assert. assertEquals ( getMessage ( message, cause ), ex1. getMessage ( ) )
20042	assertEquals ( expResult, result )
20043	Assert. assertEquals ( pis, imposto. getPis ( ) )
20044	assertEquals ( graduate, result )
20045	assertEquals ( toString ( byteBuffer0 ), toString ( byteBuffer1 ) )
20046	assertEquals ( 71, pathMap. size ( ) )
20047	assertFalse ( mailbox. isSuspended ( ) )
20048	assertEquals ( "msg", sut. getMessage ( ) )
20049	assertSequence ( visitor. getNodes ( ), "a", "b", "c", "d", "e" )
20050	Assert. assertEquals ( "Hello world", example. evaluate ( new Text ( "world" ) ). toString ( ) )
20051	assertEquals ( asList ( "/root[1]/node[1]", "/root[1]/node[1]/node[1]", "/root[1]/node[1]/ns:node[1]", "/root[1]/ns:node[1]", "/root[1]/nested1[1]", "/root[1]/nested1[1]/node[1]", "/root[1]/nested1[1]/node[1]/node[1]", "/root[1]/nested1[1]/node[1]/ns:node[1]", "/root[1]/nested1[1]/ns:node[1]", "/root[1]/nested2[1]", "/root[1]/nested2[1]/node[1]", "/root[1]/nested2[1]/node[1]/node[1]", "/root[1]/nested2[1]/node[1]/xx:node[1]", "/root[1]/nested2[1]/xx:node[1]" ), xpaths )
20052	assertEquals ( source, builder. getPropertyState ( ) )
20053	assertThat ( actual. getText ( ). getDiv ( ). getValueAsString ( ), containsString ( "<td>Identifier</td><td>testSearchByResourceChain01</td>" ) )
20054	assertThat ( editor. getValue ( ), is ( ( Object ) ReadPreference. preferSecondary ( ) ) )
20055	assertTrue ( CalledExceptionHandler. PROTECTED_HANDLER_CALLED )
20056	assertEquals ( strList, StringArrayUtils. toSet ( "1", "1" ) )
20057	assertEquals ( getJson ( downloadDetails ), writer. toString ( ) )
20058	assertEquals ( "{\\"store\\":{\\"book\\":[{\\"category\\":\\"reference\\",\\"author\\":\\"Nigel Rees\\",\\"title\\":" + "\\"Sayings of the Century\\",\\"price\\":8.95},{\\"category\\":\\"fiction\\",\\"author\\":\\"Evelyn Waugh\\"," + "\\"title\\":\\"Sword of Honour\\",\\"price\\":12.99}],\\"bicycle\\":{\\"color\\":\\"red\\",\\"price\\":19.95}," + "\\"new Author\\":\\"new Author value\\"},\\"arrayTest\\":[1,2,3]}", result. get ( RETURN_RESULT ) )
20059	Assert. assertEquals ( sp. getClass ( ), sp2. getClass ( ) )
20060	assertThat ( bic1. hashCode ( ), is ( not ( equalTo ( bic2. hashCode ( ) ) ) ) )
20061	Assert. assertTrue ( got. contains ( "Created device: {" ) )
20062	assertThat ( repository. findOne ( id ), is ( notNullValue ( ) ) )
20063	assertEquals ( expected, contentSummary. toString ( true ) )
20064	assertResultSet ( res )
20065	assertEquals ( 1234, config. getTimeout ( ) )
20066	assertTrue ( tx instanceof FatMonoGammaTxn )
20067	assertExpectedUri ( link )
20068	Assert. assertTrue ( errors. hasFieldErrors ( "concept" ) )
20069	Assert. assertEquals ( "QueueInfo children weren't properly converted", returned. getQueueChildren ( ). size ( ), 1 )
20070	assertEquals ( "testdc", dc. name ( ) )
20071	Assert. assertEquals ( "\\"SELECT \\n  \\\\\\"mydatabase\\\\\\".\\\\\\"mydbschema\\\\\\".\\\\\\"mytable\\\\\\".\\\\\\"ID1\\\\\\", \\n  \\\\\\"mydatabase\\\\\\".\\\\\\"mydbschema\\\\\\".\\\\\\"mytable\\\\\\".\\\\\\"NAME1\\\\\\"\\nFROM \\\\\\"mydatabase\\\\\\".\\\\\\"mydbschema\\\\\\".\\\\\\"mytable\\\\\\"\\"", result )
20072	assertTrue ( resMap. getResReader ( )!= null )
20073	assertEquals ( expResult, result )
20074	assertEquals ( "00FF", Hex. toHexString ( outputStream. toByteArray ( ) ). toUpperCase ( ) )
20075	assertEquals ( "Main Page", siteInfoData. getMainpage ( ) )
20076	assertFalse ( cs. isAccepted ( ) )
20077	assertEquals ( 3, nbResult ( gg ) )
20078	assertThat ( PathUtil. getRelativePath ( root, child ), is ( "/a" ) )
20079	assertEquals ( "IDX1", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
20080	assertTrue ( isEqual ( d1, d2 ) )
20081	Assert. assertEquals ( deltaFiniteDifference, deltaAAD, 0.005 )
20082	Assert. assertEquals ( "(aa_change_frameshift (aa_point_location (aa_char Ala) 124) (aa_char Thr) fs * 23)", aa_change_extension. toStringTree ( parser ) )
20083	Assert. assertEquals ( expected, actual )
20084	assertEquals ( expect, actual )
20085	assertTrue ( String. format ( "Expected error to contain string [%s]. Actual error: %s", expected, ex. getMessage ( ) ), ex. getMessage ( ). contains ( expected ) )
20086	assertThat ( "Failed to list resources: " + result, Operations. isSuccessfulOutcome ( result ), is ( true ) )
20087	Assert. assertTrue ( edOrgRights. isEmpty ( ) )
20088	assertEquals ( "Hello World", page. getContent ( ) )
20089	assertEquals ( JobConfigHistoryConsts. ICONFILENAME, action. getIconFileName ( ) )
20090	assertEquals ( "authId1", target. getAuthId ( ) )
20091	assertEquals ( "Date parsing is wrong", new BitemporalDateTime ( date ), mapper. readBitemporalDate ( columns, "vtFrom" ) )
20092	assertEquals ( "Response Processor " + ( i + 1 ) + " received wrong message content", "This is the status of service " + ( i + 1 ), coapResponse. getContent ( ). toString ( Charset. forName ( "UTF-8" ) ) )
20093	assertFalse ( ret )
20094	assertTrue ( processor. getDispatchStack ( ). getLayers ( ). size ( ) > 0 )
20095	assertTrue ( a == b )
20096	assertTrue ( sets. contains ( message1 ) )
20097	assertFalse ( branchFilterByRemote. isLinkedTo ( branch ) )
20098	assertFalse ( definedInContext )
20099	assertEquals ( 0, artworkList. size ( ) )
20100	assertEquals ( want, doc. body ( ). html ( ) )
20101	assertEquals ( 42, impl. getQuantile ( 1, 2 ) )
20102	assertThat ( createdPlayer == defensivePlayerWithDjAndJavaDevSkills, is ( true ) )
20103	assertEquals ( "SyntaxError: Invalid or unexpected token", e. getJSMessage ( ) )
20104	assertEquals ( expected, real )
20105	Assert. assertArrayEquals ( expected, actual )
20106	Assert. assertTrue ( Arrays. deepEquals ( new String [ ] { "FRA-AWS", "UAT", "FWS" }, result ) )
20107	assertThat ( editingContext. ignoredObjects. isEmpty ( ), is ( true ) )
20108	assertEquals ( expectedQuery, actualQuery )
20109	assertEquals ( BAD_REQUEST. getStatusCode ( ), response. getStatus ( ) )
20110	assertEquals ( expected, reference. get ( ) )
20111	assertEquals ( "myresource", this. parser. getResourceName ( ) )
20112	assertEquals ( expectedScriptNode, actualScriptNode )
20113	assertFalse ( groupService. isMember ( parentGroup, childGroup ) )
20114	assertEquals ( 0L, result )
20115	assertEqualsIgnoreWhitespace ( expected, real )
20116	assertTrue ( syncClient instanceof ZooKeeperSyncClientImpl )
20117	assertObject ( args )
20118	Assert. assertEquals ( o, ZipUtil. uncompress ( ZipUtil. compress ( o ) ) )
20119	assertTrue ( cache. size ( ) > 0 )
20120	assertEquals ( "ISODate('1970-01-01T00:16:50.101+0000')", element. getValueAsString ( ) )
20121	Assert. assertEquals ( 0, errors. size ( ) )
20122	assertEquals ( 0, results. size ( ) )
20123	assertEquals ( expected, actualQuery )
20124	assertEquals ( 1, res. join ( ) )
20125	assertEquals ( 0, result )
20126	Assert. assertFalse ( mPos. has ( e ) )
20127	assertEquals ( 100, vrp. getJobs ( ). values ( ). size ( ) )
20128	Assert. assertEquals ( filterName, victim. getName ( ) )
20129	assertThat ( b. getConsole ( ), Matchers. containsString ( "test -d.svn" ) )
20130	assertEquals ( "<event>\\r\\n" + "  <sequence-id>1</sequence-id>\\r\\n" + "  <status>\\r\\n" + "    <sla-id>si</sla-id>\\r\\n" + "    <status-timestamp>1970-01-01T00:00Z</status-timestamp>\\r\\n" + "    <job-status>STARTED</job-status>\\r\\n" + "    <job-data>jd</job-data>\\r\\n" + "    <user>u</user>\\r\\n" + "    <group>gn</group>\\r\\n" + "    <app-name>an</app-name>\\r\\n" + "  </status>\\r\\n" + "</event>", actualXml )
20131	assertThat ( byKey, is ( rpslObject ) )
20132	assertThat ( ByteTypeValidator. INSTANCE. validate ( parameters, "aaa" ), is ( nullValue ( ) ) )
20133	assertEquals ( "{\\"errorMessage\\":\\"Password must have at least 8 characters.\\"}", output )
20134	assertOut ( "<Group id=\\"myGrp\\"><Label></Label></Group>" )
20135	assertMockEndpointsSatisfied ( )
20136	assertEquals ( 3, processorsFactory. getPostProcessors ( ). size ( ) )
20137	assertEqualsWithoutWhiteSpaces ( "translate([0, 25, 0]) (empty)", ts )
20138	assertTrue ( pos. index == calc. altIndex ( altIndex, pos. tag ) )
20139	assertThat ( output, containsString ( "DICOM store deleted." ) )
20140	Assert. assertEquals ( 140 + 4 * winScore - loosePenalty, scores. getScore ( ) )
20141	Assert. assertEquals ( Integer. valueOf ( 1 ), result )
20142	assertNull ( Evaluator. evaluate ( ex ) )
20143	assertThat ( testValue. orderedKeywords ( ), Matchers. < TypedKeyword < TestValueType,? > > contains ( TestValueType. AGE, TestValueType. NAME ) )
20144	assertEquals ( "6.10351563e+003", victim. readNumber ( ) )
20145	assertEquals ( Joiner. on ( "\\n" ). join ( expected ), result )
20146	assertThat ( classes. size ( ), Matchers. greaterThan ( 0 ) )
20147	assertEquals ( ChatState. composing, stateHandler. getLastChatState ( ) )
20148	assertEquals ( expResult, result )
20149	assertThat ( result. getViewOriginalText ( ), is ( VIEW_EXPANDED_TEXT_TRANSFORMED ) )
20150	assertNull ( "Result value is not null", resultValue )
20151	Assert. assertEquals ( BitTag. SERVICENET_LB. tagValue ( ), mappedUsage. getTagsBitmask ( ) )
20152	assertTrue ( lines. stream ( ). anyMatch ( l -> l. contains ( "\\"level\\":\\"INFO\\"" ) && l. contains ( "\\"logger\\":\\"my.logger\\"" ) && l. contains ( "\\"message\\":\\"Hello\\"" ) && l. contains ( "\\"country\\":\\"Equestria\\"" ) ) )
20153	Assert. assertTrue ( getSettings ( ). getSocketSettings ( ). getReadTimeout ( TimeUnit. MILLISECONDS ) == 1100 )
20154	testPinpointServerAcceptor. assertAwaitClientConnected ( 2, 3000 )
20155	assertThat ( underTest. createRestoreData ( restoreBlobData ), is ( pyPiRestoreBlobData ) )
20156	Assert. assertEquals ( jobParams, retrievedParams )
20157	Assert. assertEquals ( "Link: <http://example.com/things>; rel=\\"next thing\\"", affordance. toString ( ) )
20158	Assert. assertThat ( rendered, is ( expected ) )
20159	assertNotNull ( text )
20160	assertThat ( result. isEmpty ( ), is ( true ) )
20161	assertEquals ( testneuron3, lst. get ( 1 ) )
20162	assertNotNull ( "Title plot is empty for " + imdbId, result )
20163	assertEquals ( "CAP END", cmd. asString ( ) )
20164	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
20165	Assert. assertTrue ( permissions. toString ( ), permissions. size ( ) == 1 )
20166	assertNotNull ( percentage )
20167	assertEquals ( source, result. toString ( ) )
20168	assertThat ( serialize, is ( new byte [ ] { 93, - 120, 10, 40, 16, - 64, - 37, - 106, - 74, - 13, 44, 34, 12, 10, 5, 116, 97, 103, 45, 97, 18, 3, 102, 111, 111, 42, 17, 10, 10, 114, 101, 115, 111, 117, 114, 99, 101, 1, 19, 52, 98, 97, 114, 10, 49, 16, - 80, - 118, - 105, - 74, - 13, 44, 25, 0, 5, 1, 4, - 16, 63, - 126, 51, 0 } ) )
20169	assertNull ( result )
20170	assertInterval ( 2, 3, 5, 8, 13, 21, 7, 11, 17, bounds )
20171	assertNotNull ( socket )
20172	assertEquals ( expectedQuery, actualQuery )
20173	assertEquals ( "http://localhost:8080/events/" + "topic/cg/cid?filter=filter", url )
20174	assertFalse ( result )
20175	Assert. assertEquals ( 5, totalSchemas )
20176	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 03" ) )
20177	assertEquals ( "the artifact must be downloaded", true, new File ( localRepo, "ant/ant/1.5.1/ant-1.5.1.jar" ). exists ( ) )
20178	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( textField ) instanceof WTextFieldRenderer )
20179	assertThat ( iterationState. hasNext ( ), is ( false ) )
20180	assertNotNull ( parser )
20181	authRule. assertScenario ( scenario )
20182	assertNotNull ( smsd1. getFirstAtomMapping ( ) )
20183	assertEquals ( 3, Nd4j. getBlasWrapper ( ). iamax ( linspace ) )
20184	assertEquals ( expResult, result )
20185	Assert. assertNotNull ( c )
20186	assertEquals ( 2, titles. size ( ) )
20187	assertThat ( MomentInterval. parseISO ( "2012092T1415Z/2012096T1600" ), is ( expected ) )
20188	Assert. assertTrue ( product. getId ( ) == loaded. getId ( ) )
20189	assertTrue ( skuWarehouseDTO. getSkuWarehouseId ( ) > 0 )
20190	BeanAssert. assertBeanEquals ( bean, array )
20191	assertEquals ( anonymousID, authInfo. getUserID ( ) )
20192	assertNotNull ( jsonNode )
20193	Assert. assertEquals ( 1l, handler. convertIdentifier ( v ) )
20194	assertEquals ( "param=value", response. getBody ( ) )
20195	assertThat ( anyTS. isValid ( NANO_OF_SECOND, null ), is ( false ) )
20196	assertEquals ( "ABC", buf. getPrefixedString ( decoder ) )
20197	assertTrue ( resultComparator. compare ( dc1, dc2 ) < 0 )
20198	assertEquals ( NO_PARENS_STREET_NAME, step. streetNameNoParens ( ) )
20199	assertThat ( "system-input-def-objects.xml", systemInputDef, matches ( new SystemInputDefMatcher ( expected ) ) )
20200	assertThat ( underTest. execute ( underTest, null, null, new Object [ ] { assetDocument, "jexlexpression", "*", repoToContainedGroupMap }, null ), is ( true ) )
20201	assertSame ( inputPortBinding, scufl2Tools. processorPortBindingForPort ( port, profile ) )
20202	assertEquals ( expectedQuery, actualQuery )
20203	assertEquals ( java. util. Calendar. MONDAY, calendar. getInternalCalendar ( ). getFirstDayOfWeek ( ) )
20204	assertThat ( getterMethod. getReturnType ( ). getName ( ), is ( "java.lang.Object" ) )
20205	assertTrue ( collector. isFitting ( frag ) )
20206	assertThat ( specification. getUnits ( ), is ( MILLI ( SECOND ) ) )
20207	assertThat ( coverArt. getBackImage ( ), is ( nullValue ( ) ) )
20208	Assert. assertNotNull ( addressResultsDto )
20209	Assert. assertTrue ( application. tenantLinks. size ( ) == 2 )
20210	assertTrue ( "Failed on " + test [ 0 ] + ": Got " + staticResult + " and " + dynamicResult, dynamicResult. equals ( staticResult ) )
20211	assertEqualsWithoutWhiteSpaces ( "(model11)", testSubject. subModel ( new ScadGenerationContextFactory ( ). include ( 1 ). exclude ( 12 ). create ( ) ) )
20212	assertEquals ( RvmFixtures. RAKE_PATH, commandsIterator. next ( ) )
20213	given ( ). body ( delegate. toString ( ) ). put ( delegate1 ). then ( ). assertThat ( )
20214	assertTrue ( plot. getRangeMarkers ( 99, Layer. FOREGROUND ). contains ( yMarker1 ) )
20215	assertThat ( anyTS. isValid ( MICRO_OF_SECOND, 1000000 ), is ( false ) )
20216	Assert. assertArrayEquals ( p, VP8Util. predictDC ( above, left ) )
20217	assertEquals ( "_all/_search", search. getURI ( ElasticsearchVersion. UNKNOWN ) )
20218	assertThat ( entity, is ( notNullValue ( ) ) )
20219	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
20220	assertTrue ( Arrays. equals ( result, expectedOutput ) )
20221	assertThat ( "getValue", node. getValue ( ), is ( false ) )
20222	assertEquals ( script, observedScript )
20223	assertNotNull ( process )
20224	assertNoSpans ( )
20225	assertEquals ( result, 200 )
20226	assertEquals ( "please ******** plugin", client. getStringStack ( ) [ client. getStringStackSize ( ) - 1 ] )
20227	assertThatResultContainsCorrectClassesExactlyInOrder ( result, this. getClass ( ) )
20228	ReaderAssert. assertThat ( NegraExportReader. class, NegraExportReader. PARAM_SOURCE_LOCATION, "src/test/resources/tuebadz/corpus-sample.export", NegraExportReader. PARAM_LANGUAGE, "de", NegraExportReader. PARAM_SOURCE_ENCODING, "UTF-8" )
20229	assertMessage ( "<type>EXITED</type>", 2 )
20230	assertThat ( binaries. getBinaries ( ). size ( ), is ( 2 ) )
20231	assertEquals ( actualPage, expectedPage, "Service returned incorrect data for one page of posts" )
20232	Assert. assertFalse ( protocol. isDefaultProtocol ( ) )
20233	assertThat ( content, is ( "This is the Document Title and this is the document body." ) )
20234	Assert. assertEquals ( expResult, result, 0.006 )
20235	assertEquals ( false, result )
20236	Assert. isTrue (! response )
20237	assertEquals ( 2, groupsView. getGroups ( ). size ( ) )
20238	assertTrue ( items. size ( ) > 0 )
20239	assertEquals ( expectedPath, actualPath )
20240	assertEquals ( "2", result. getXdmValue ( ). itemAt ( 0 ). getStringValue ( ) )
20241	assertOut ( "a(org.apache.royale.utils.Language.string(b.child('child')))" )
20242	Assert. assertEquals ( 0, builder. akibanInformationSchema ( ). validate ( AISValidations. BASIC_VALIDATIONS ). failures ( ). size ( ) )
20243	Assert. assertNotEquals ( 0, updates. size ( ) )
20244	assertThat ( impl. isPermitted ( "repoName", "repoFormat", BreadActions. READ, variableSource ), is ( false ) )
20245	assertThat ( mdcValueStr, is ( userName ) )
20246	Assert. assertEquals ( HttpStatus. SC_ACCEPTED, hubResponseCode )
20247	assertFalse ( glass. accept ( figure, WIDTH / 2, 2 ) )
20248	assertEquals ( ActionSupport. SUCCESS, action. register ( ) )
20249	assertEquals ( validationLogic, resourceEditProperty. getValidationLogic ( ) )
20250	Assert. assertEquals ( "Gen.1.1-Gen.1.2", map ( "Gen.1.1" ) )
20251	assertThat ( result, is ( new String [ ] [ ] { { "c" } } ) )
20252	assertTrue ( comparator instanceof UnsignedByteBuffer. LexicographicalComparatorHolder. PureJavaComparator )
20253	Assert. assertEquals ( 4, coveredGoals. size ( ) )
20254	assertThat ( distributionDetector. getDistString ( "Support" ), is ( distString ) )
20255	assertEquals ( result, ENCODED_PASSWORD )
20256	assertEquals ( "/workflow", wf. toString ( ) )
20257	assertEquals ( 1, count )
20258	assertEquals ( "1. Command: /Selection listener(false)", getLogRow ( 0 ) )
20259	assertTrue ( delete. isSuccess ( ) )
20260	assertThat ( ( Integer ) ms. get ( "aaa" ), is ( 1 ) )
20261	assertEquals ( "%d{ISO8601} [%t][%c] %-5p %properties %ndc: %m%n", layout. getConversionPattern ( ) )
20262	assertEqualsIgnoreWhitespace ( expected, real )
20263	Assert. assertEquals ( value, 1 )
20264	Assert. assertThat ( result, IsEqual. equalTo ( input ) )
20265	assertFalse ( shutdown. get ( ) )
20266	assertEquals ( expResult, result )
20267	assertEquals ( "Join_Column_Name", colName )
20268	assertJsonEqualsWithLinkResolving ( entityHelper. getEntity ( entityType, result. getActionResult ( ) ), result. getMessages ( ). values ( ). iterator ( ). next ( ), mqttHelper. getTopic ( entityType ) )
20269	assertEquals ( "_cat/shards", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
20270	assertTrue ( "unexpected value", value )
20271	Assert. assertEquals ( "2017-09-20", dateStr )
20272	router. assertRoutes ( Arrays. asList ( a, b ), "/a" )
20273	assertEquals ( 207, testResult. getError ( ). getCode ( ) )
20274	assertEquals ( CALCULATED_LENGTH, binary. length, prepare ( object ) )
20275	Assert. assertTrue ( this. manager. connectFromAll ( Arrays. asList ( this. person1, this. person2, this. person3 ), this. family1 ) )
20276	assertThereIsAFieldBindingFor ( "$f" )
20277	assertTrue ( geoserverCatalog. getCatalogMode ( ) == HIDE )
20278	Assert. assertEquals ( PseudoAuthenticationHandler. class, filter. getAuthenticationHandler ( ). getClass ( ) )
20279	assertTrue ( "", types!= null && types. size ( ) == 1 && types. contains ( ProfileType. INDUSTRY ) )
20280	Assert. assertEquals ( expected, errorCode. getMessage ( aParameter ) )
20281	context. assertIsSatisfied ( )
20282	assertEquals ( 0.0, diff. getValue ( METERS ), 860 )
20283	assertEqualsJFiglet ( asciiArt )
20284	assertEquals ( expectedParsedResult, actualParsedResult )
20285	assertTrue ( "Group empty", constraintViolations. size ( ) == 1 )
20286	assertEquals ( "00010010001101000101011001111000", value. getDataAsBinaryStr ( ) )
20287	assertThat ( irsApplicable, equalTo ( true ) )
20288	assertEquals ( "b", eval ( "['a']", m ) )
20289	assertThat ( ( ( AtomicInteger ) packet. get ( ProcessingConstants. REMAINING_SERVERS_HEALTH_TO_READ ) ). get ( ), is ( 0 ) )
20290	Assert. assertEquals ( "Result is wrong", new Integer ( 10 ), o )
20291	assertEquals ( NOT_ACCEPTABLE. getStatusCode ( ), getStatus ( get ) )
20292	Assert. assertEquals ( IsolationLevels. READ_COMMITTED, connection. getIsolationLevel ( ) )
20293	Assert. assertNull ( this. component. requestTerm ( QUERY_STRING, null ) )
20294	assertSameFileContents ( reference, fileResult )
20295	assertThat ( reactor, is ( notNullValue ( ) ) )
20296	assertEquals ( expected, sb. toString ( ) )
20297	assertEquals ( expected, this. testee. classNames ( ) )
20298	assertThat ( result. getId ( ), is ( notNullValue ( ) ) )
20299	assertNotNull ( importSession )
20300	Assert. assertEquals ( Sets. newHashSet ( 1, 5 ), parser. getSecureBindIndices ( ) )
20301	Assert. assertNotNull ( result )
20302	assertFalse ( matchResult )
20303	Assert. assertEquals ( expected, HtmlSanitizerUtil. sanitize ( input ) )
20304	assertEquals ( "select entity_0.code, subEntity_1.name from Entity entity_0 inner join entity_0.subEntities subEntity_1", select. getQuery ( ) )
20305	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
20306	assertThat ( "generator-set-0.xml", generatorSet, is ( expected ) )
20307	assertThat ( dur. with ( PlainTimestamp. of ( 2012, 2, 29, 14, 25 ) ), is ( Duration. ofPositive ( ). years ( 3 ). months ( 2 ). days ( 4 ). hours ( 2 ). minutes ( 12 ). build ( ) ) )
20308	assertNotNull ( uriInfo. getCustomQueryOptions ( ). get ( "count" ) )
20309	assertEquals ( javaTimestamp, DateTimeUtil. getMonth ( TEST_DATETIME ) )
20310	Assert. assertEquals ( infoManifestacaoDestinatario, infoEventoManifestacaoDestinatario. getManifestacaoDestinatario ( ) )
20311	Assert. assertNull ( getMetric ( ). calculate ( getSession ( ) ) )
20312	assertEqualHQL ( "allen  love dandan ", sb. toString ( ) )
20313	assertResultSet ( res )
20314	Assert. assertEquals ( "", link. getDescription ( ) )
20315	assertEquals ( 2, dbHandler. getDataElementCount ( ) )
20316	assertEquals ( isValid, organisationSupport. validate ( action, organisation ) )
20317	Assert. assertEquals ( new BigDecimal ( "12.3456" ), value )
20318	Assert. assertNotNull ( asientoRecibido )
20319	assertNotNull ( test. entry. getDatabaseName ( ) )
20320	assertThat ( clientBackend. get ( HelloWorldTestService. TEST_KEY ), is ( "accepted" ) )
20321	assertTrue ( r. isResourceType ( DefaultResourceTypeDefinition. NODE ) )
20322	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
20323	assertNull ( new RequestImpl ( m ). selectVariant ( list ) )
20324	assertTrue ( aNumber == result )
20325	assertSame ( supply1, supply2 )
20326	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC, ScopePathType. ORCID_PATENTS_CREATE )
20327	assertEquals ( expected, actual )
20328	assertEquals ( author, result. getCommit ( ). getAuthorIdent ( ) )
20329	assertEquals ( maxCandidates, runner. getResults ( ). size ( ) )
20330	assertEquals ( "qwe", collector. getMessage ( ) )
20331	assertEquals ( "SELECT a FROM db.g1 INNER JOIN /*+ MAKEIND(MAX:300 NO JOIN) */ db.g2 ON a = b", QueryParser. getQueryParser ( ). parseCommand ( sql, new ParseInfo ( ) ). toString ( ) )
20332	assertThat ( target. matchExactly ( action ), is ( true ) )
20333	assertEquals ( RvmFixtures. RAKE_PATH, commandsIterator. next ( ) )
20334	arrays. assertDoesNotContain ( description, actual, value, Index. atIndex ( - 1 ) )
20335	assertThatTestCaseObeysOracle ( 0 )
20336	assertEquals ( results1. size ( ), results2. size ( ) )
20337	Assert. fail ( "Should have thrown exception" )
20338	assertThat ( baseCalendars. baseCalendars. size ( ), equalTo ( previous ) )
20339	assertFalse ( hasReset )
20340	assertEquals ( wsos, wsis. getOutputPeer ( ) )
20341	assertThat ( renderer. getShortForm ( entity ), is ( "rdf:PlainLiteral" ) )
20342	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
20343	assertEquals ( padded ( OBJECT_OVERHEAD ), ThreadTrackingContext. getBytes ( ) )
20344	assertEquals ( expected, elements )
20345	assertEquals ( "OK", rc. put ( "/a02", "OK" ). run ( ). getBody ( ). as ( String. class ) )
20346	assertEquals ( "Wikipedia:Village_pump_(technical)", output. get ( 0 ) )
20347	assertEquals ( "12����", t. format ( new Date ( 0 ) ) )
20348	Assert. assertTrue ( jsonEqual ( expResult, EntityFormatter. writeEntity ( entity ) ) )
20349	assertThat ( taskService. createTaskQuery ( ). taskAssignee ( "demo" ). count ( ), is ( 1L ) )
20350	assertEquals ( e1, e2 )
20351	Assert. assertArrayEquals ( expected, processed )
20352	assertFalse ( timeouts. getTimeout ( "timeout1" ). isPresent ( ) )
20353	assertEquals ( expected, actual )
20354	Assert. assertTrue ( byteArrayStream1. size ( ) == byteArrayStream2. size ( ) )
20355	assertNull ( result )
20356	assertEquals ( 1, i )
20357	assertTrue ( r1 instanceof PublicCloneable )
20358	Assert. assertTrue ( result. isValid ( ) )
20359	assertThat ( exitStatus, is ( 42 ) )
20360	assertThat ( outcome. getStartTime ( ), isBetween ( beforeDate, afterDate ) )
20361	Assert. assertFalse ( deal. isAccepted ( ) )
20362	Assert. assertFalse ( result )
20363	assertTrue ( actual. isEmpty ( ) )
20364	assertEquals ( 5000, Sleeper. timeSlept )
20365	Assert. assertEquals ( diffusioncoefficient, result [ 0 ], 0.1 )
20366	assertEquals ( expected, result )
20367	Assert. assertTrue ( maxAbsDeviation < 1E-3 )
20368	assertEquals ( expectedMessage, result )
20369	assertTrue ( saveFile. exists ( ) )
20370	assertEquals ( interactive, interactive1 )
20371	assertOut ( "var /** @type {RegExp} */ a = /test-\\\\d/i" )
20372	assertEquals ( "1492", configSource. getValue ( "something.random" ) )
20373	Assert. assertEquals ( linkList. getLinkList ( ). size ( ), 0 )
20374	assertNullOrEmpty ( MultiTainter. getTaint ( y ) )
20375	Assert. assertEquals ( 1, sut. getWeekdayCountBetweenDates ( start, end ) )
20376	assertEquals ( 3, result. getTotalCount ( ) )
20377	Assert. assertNotNull ( cdf )
20378	Assert. assertEquals ( 1, result )
20379	assertThat ( frontController. processTimeZone ( request ), is ( TimeZone. getDefault ( ) ) )
20380	assertOutputResult ( "testDump2.result", new String ( bos. toByteArray ( ) ), new String [ ] { "${table.timezone}" }, new String [ ] { testingCluster. getConfiguration ( ). getSystemTimezone ( ). getID ( ) } )
20381	Assert. assertEquals ( json, writer. toString ( ) )
20382	assertEquals ( 8, hyperLogLog. cardinality ( ) )
20383	assertThat ( target. equals ( obj ), is ( false ) )
20384	assertTrue ( ss. contains ( "'123-abc'" ) )
20385	assertSame ( actualResource, actualResource2 )
20386	Assert. assertEquals ( false, retval )
20387	assertNotNull ( in )
20388	Assert. fail ( ex. getMessage ( ) )
20389	assertNull ( col. getChild ( "foo.txt" ) )
20390	assertTrue ( result. isPresent ( ) )
20391	assertThat ( domain. isLogHomeEnabled ( ), is ( false ) )
20392	assertThat ( fieldError, is ( nullValue ( ) ) )
20393	assertTrue ( xml. startsWith ( "<?xml version=" ) )
20394	Assert. assertArrayEquals ( "THIS IS PARTA!!!", new byte [ ] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02 }, z. data. array ( ) )
20395	assertThat ( errors, hasFieldErrors ( "givenName", "Patient.names.required.given.family" ) )
20396	assertEquals ( "___DRI", properties. getRepositoryLocation ( ) )
20397	Assert. assertEquals ( configuration, RobeHibernateBundle. getInstance ( ). getConfiguration ( ) )
20398	assertEquals ( "The sequence number of the recoverd.edits and the current edit seq should be same", lastestSeqNumber, editCount )
20399	assertFalse ( products. isEmpty ( ) )
20400	assertTrue ( expectedOrder. isOrdered ( toSort ) )
20401	assertEquals ( 11, rs. get ( 0 ) )
20402	assertEquals ( expectedQuery, actualQuery )
20403	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "xfdfAnnotationReplaceText.pdf", sourceFolder + "cmp_xfdfAnnotationReplaceText.pdf", destinationFolder, "diff_" ) )
20404	assertEquals ( s, sb. toString ( ) )
20405	assertBeanValidation ( json, "query.metric[0].start_time relative or absolute time must be set" )
20406	assertTrue ( ci1. getValue ( series. getEndIndex ( ) ). doubleValue ( ) < LOW_CHOPPINESS_VALUE )
20407	assertEquals ( "Expected 0 results!", 0, count )
20408	assertEquals ( 2, Double. parseDouble ( builder. toString ( ) ), 0 )
20409	assertNotNull ( "Task is null", entity )
20410	context. assertIsSatisfied ( )
20411	assertThat ( predicate. test ( Integer. class ), is ( true ) )
20412	Assert. assertEquals ( "test1, test2, test3", string )
20413	assertDelivered ( q, 0 )
20414	assertThatNothingHappened ( jobExecution, lastCreatedJobId, 1 )
20415	Assert. assertEquals ( "bac", html. trim ( ). replace ( "\\n", "" ) )
20416	assertTrue ( Float. isNaN ( value [ 0 ] ) )
20417	Assert. assertFalse ( run1. equals ( run2 ) )
20418	assertThat ( gitClient. getRemoteSymbolicReferences ( repoRoot. getAbsolutePath ( ), "non-matching-pattern" ). keySet ( ), hasSize ( 0 ) )
20419	assertEquals ( Color. BLUE, m. getPaint ( 99 ) )
20420	assertEquals ( HttpStatusCode. NOT_ACCEPTABLE. getStatusCode ( ), response. getStatusCode ( ) )
20421	assertEquals ( wayLessInEuros, actualValue )
20422	assertEquals ( guid, new GuidTypeNode ( testBinaryReaderBuilder. putGuid ( guid ). build ( ), chunkHeader, parent, - 1 ). getValue ( ) )
20423	assertTrue ( a1. compareTo ( a2 ) > 0 )
20424	assertEquals ( new NormalVersion ( 1, 0, 0 ), version )
20425	assertEquals ( updatedRevs, cloneRevisions )
20426	assertEquals ( allMethods, allMethods1 )
20427	assertEquals ( ZippelGCD ( a, b ). monic ( ), EZGCD ( a, b ). monic ( ) )
20428	assertNotNull ( context. getBean ( "snsOutboundGateway.snsExecutor", SnsExecutor. class ) )
20429	assertIsNotIdentity ( transform )
20430	assertTrue ( "returned object should be a OrderedMap", map instanceof OrderedMap )
20431	assertFalse ( success )
20432	Assert. assertEquals ( expectedURL, attr. get ( "xlink:href" ) )
20433	assertNull ( clazz )
20434	assertAllGenerated ( outputDirectory. getRoot ( ) )
20435	assertArrayEquals ( new int [ ] { 4, 6, 0, 0, 0 }, difference )
20436	assertEquals ( "Samsung Galaxy", galaxy. getPrefLabel ( ) )
20437	assertEquals ( fileName, volume. readLink ( userCredentials, linkName ) )
20438	assertNotEquals ( object1. getItemName ( ), object2. getItemName ( ) )
20439	Assert. assertEquals ( solrResponseDto, actual )
20440	assertEquals ( expected, actual )
20441	assertEquals ( "folder1/folder2/resource-b598c484.css", result )
20442	Assert. assertEquals ( 2, operation. operations. size )
20443	Assert. assertTrue ( violations. isEmpty ( ) )
20444	Assert. assertFalse ( "The handler should not have been initialized", TestHandler. INITIALIZED )
20445	assertEquals ( expecetedTableName, builtTableName )
20446	assertEquals ( "<p>Hello <em>there</em> <em>now</em></p>", doc. body ( ). html ( ) )
20447	Assert. assertEquals ( expected, MustacheTemplatePrefixExpander. expand ( input ) )
20448	Assert. assertEquals ( "0", result. getReturnCode ( ) )
20449	assertNoCause ( "value of: myObject.child\\nmessage" )
20450	Assert. assertNull ( ec )
20451	assertNotNull ( output )
20452	assertThat ( s. getValue ( ), is ( minValue ) )
20453	assertEquals ( 1, $ ( MyCustomLabelElement. class ). all ( ). size ( ) )
20454	context. assertIsSatisfied ( )
20455	assertEquals ( pp. getValue ( ), new Payload < > ( "2 final" ). getValue ( ) )
20456	assertTrue ( got. contains ( "Deleted service account:" ) )
20457	assertThat ( actual, is ( existingContent ) )
20458	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoFormaPagamento ( ). toString ( ) )
20459	context. assertTrue ( Arrays. equals ( new byte [ ] { 63 }, buf. getBytes ( ) ) )
20460	assertThat ( cut. apply ( select ), is ( false ) )
20461	assertEquals ( "<!-- � � -->", doc. body ( ). html ( ) )
20462	assertTrue ( "the artifact must be downloaded", new File ( localRepo, "ant/ant/1.5.1/ant-1.5.1.jar" ). exists ( ) )
20463	assertTrue ( p. isWriteable ( AegisTestBean. class, null, null, null ) )
20464	assertEquals ( list, result )
20465	assertEquals ( 0, alarmReceived. getCount ( ) )
20466	assertContains ( e. getMessage ( ), "'id'" )
20467	assertThat ( cut. apply ( pageObject ), is ( true ) )
20468	assertNull ( actualObj ( ). opt ( "mykey" ) )
20469	assertNotNull ( "Valid class must be returned", factory. getSerializer ( LongWritable. class ) )
20470	assertEquals ( BASE_URL_USER, user )
20471	assertNotNull ( result. getOpenAPI ( ) )
20472	assertEquals ( specificDataCommunicator, grid. getDataCommunicator ( ) )
20473	assertEquals ( expected, uri. getRawPath ( ) )
20474	Assert. assertEquals ( "P4ssW0rD", obj. getPassword ( ) )
20475	assertStreamEquals ( expectedBackoffs, backoffs )
20476	assertNotNull ( doc )
20477	Assert. assertEquals ( server, result. getFirstHeader ( "Server" ). getValue ( ) )
20478	assertNotNull ( loadingTypes )
20479	assertTrue (! result )
20480	assertEquals ( sensorType, header. getSensorType ( ) )
20481	assertEquals ( 0, result. numFindings ( ) )
20482	Assert. assertTrue ( signDocVer ( result ) )
20483	assertTrue ( "no exception was thrown", exception )
20484	assertThat ( arbitraryObject, should ( matcher ). inCase ( itemToMatchCondition, condition ) )
20485	assertNull ( n1. getNetworkPointer ( ) )
20486	assertEquals ( 2, orgUnits. size ( ) )
20487	Assert. assertTrue ( s. startsWith ( "No message will be sent to " ) )
20488	assertThat ( definition. dataTableType ( ). transform ( emptyTable. asLists ( ) ), is ( asList ( asList ( "converts_table_cell_to_string=a", "converts_table_cell_to_string=[empty]" ), asList ( "converts_table_cell_to_string=[empty]", "converts_table_cell_to_string=d" ) ) ) )
20489	assertEquals ( expResult, result )
20490	assertEquals ( expected, actual )
20491	assertTrue ( result instanceof List )
20492	assertNotNull ( getRealm ( ) )
20493	Assert. assertEquals ( "<!--james-->", stringWriter. toString ( ) )
20494	assertEquals ( frameData. hashCode ( ), frameDataAgain. hashCode ( ) )
20495	assertHelpLines ( "Option   Description", "------   -----------", "--apple             ", EMPTY )
20496	assertTrue (! result )
20497	assertEquals ( false, result )
20498	assertEquals ( 0, coverage. getHashLength ( ) )
20499	Assert. assertEquals ( "test-path-include", value )
20500	assertEquals ( "token 1\\n", found )
20501	assertEquals ( value, actualValue )
20502	assertTrue ( "Incorrect mapping of variable property", actual. indexOf ( "variable: var1=value1\\r\\nvariable: var2=value2\\r\\n" ) >= 0 )
20503	assertEquals ( Arrays. asList ( "com.module1", "com.module1." ), complete ( "com.module1" ) )
20504	assertEquals ( expected, members )
20505	assertSuccess ( result )
20506	Assert. assertTrue ( response. contains ( "Call reached IMPL as schemaValidation went thru fine.siteid - 0clientid - abclang - 1" ) )
20507	assertEquals ( "{ \\"field name\\" : { \\"$bitsAllSet\\" : \\"?\\" } }", filterParameters. toString ( ) )
20508	Assert. assertNotNull ( addressResultsDto )
20509	assertEquals ( expResult, result, 0.000001 )
20510	assertEquals ( "Alien", lastName )
20511	Assert. assertArrayEquals ( encodedValue, byteOutputStream. toByteArray ( ) )
20512	dataLoader. assertDataToJsonEqualsExpectedFileContent ( "shouldInPriceDescOrder.json", result )
20513	assertTrue ( page. asText ( ). contains ( "[ConstructorComponent constructor called]" ) )
20514	assertFalse ( valid )
20515	assertEquals ( "1", o )
20516	assertTrue ( plot. getDomainMarkers ( 99, Layer. FOREGROUND ). contains ( xMarker1 ) )
20517	assertThat ( result. replaceAll ( "\\\\s+", "" ), equalTo ( expectedOutput. replaceAll ( "\\\\s+", "" ) ) )
20518	assertEquals ( new RetrieveImagingDocumentSet ( ), result )
20519	Assert. assertTrue ( urlResponse. status == 401 )
20520	assertEquals ( future, underTest. collect ( futures, collector ) )
20521	assertEquals ( expResult, result )
20522	assertEquals ( "Columns size is wrong", 2, columnList. size ( ) )
20523	Assert. assertEquals ( 1, MapValueCountFunction. valueCount ( BOOLEAN, equalsMethod, mapBlock, false ) )
20524	assertAllCommandsUsed ( )
20525	assertEquals ( 9, author. getId ( ) )
20526	assertMockEndpointsSatisfied ( )
20527	assertEquals ( "Expected 3 results!", 3, n )
20528	Assert. assertNotNull ( jis. getManifest ( ) )
20529	assertEquals ( "um mil e trinta e um reais", actual )
20530	assertTrue ( called. compareAndSet ( false, true ) )
20531	assertEquals ( "{a:'xa1x',b:'xb1x',c:'xc1x',e:'xx',g:'xtruex',h:'x123x'}", r )
20532	Assert. assertTrue ( propsMap. size ( ) == 0 )
20533	assertNull ( value. getValue ( 99L ) )
20534	assertTrue ( "syntax should still be in the registry after delete failure", schemaManager. getLdapSyntaxRegistry ( ). contains ( OID ) )
20535	assertEquals ( selector1. hashCode ( ), selector2. hashCode ( ) )
20536	assertEquals ( NFLDR, docs ( ) )
20537	assertEquals ( ( ( DirectBuffer ) bb ). address ( ), address )
20538	assertEquals ( "", result )
20539	assertThat ( array2, equalTo ( new long [ ] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 } ) )
20540	assertNotNull ( td )
20541	assertEquals ( resultScanner, rowsRead. execute ( ) )
20542	assertEquals ( OTHER_GRAPHITE_URL, backendAlarm. getGraphiteBaseUrl ( ) )
20543	assertEquals ( expected, exts )
20544	assertEquals ( Integer. valueOf ( i + 1 ), f. evaluate ( null ) )
20545	assertNull ( mongoStore. get ( name, sessionId, String. class ) )
20546	assertEquals ( "String not written properly", "is", sw. toString ( ) )
20547	assertEquals ( "failed to generate abstract class with abstract method", ABSTRACT_CLASS_WITH_ABSTRACT_METHODS, cls )
20548	Assert. assertNull ( "Result is not null", o )
20549	assertTrue ( "Must have a writable ledgerDir", writeDirs. size ( ) > 0 )
20550	assertThat ( result, equalTo ( pattern [ 1 ] ) )
20551	assertEquals ( "om 3 veckor", t. format ( new Date ( 1000 * 60 * 60 * 24 * 7 * 3 ) ) )
20552	assertEquals ( expected, array. toString ( ) )
20553	assertEquals ( sumLabel. getText ( ), String. valueOf ( number ) )
20554	assertThat ( value. getRight ( ), is ( "\\"1800\\"" ) )
20555	assertEquals ( "3 jam yang lalu", t. format ( new Date ( 0 ) ) )
20556	assertEquals ( "Incorrect number of mappings found", 1, userMappings. size ( ) )
20557	assertNotNull ( result )
20558	assertEquals ( 3, results. size ( ) )
20559	assertEquals ( 13, t. indexOfUnquoted ( str, ">" ) )
20560	arrays. assertContains ( description, actual, other )
20561	assertEquals ( "text", componentState. getFieldValue ( ) )
20562	assertTrue ( verifier. verify ( input ) )
20563	assertEquals ( r1, r2 )
20564	assertEquals ( reorderSet, origWriteSet )
20565	assertEquals ( "'Hello'", Strings. quote ( o ) )
20566	maps. assertContainsValues ( someInfo ( ), actual )
20567	Assert. assertEquals ( expect_sql, sql )
20568	Assert. assertEquals ( setupCalendar ( ). getTime ( ), parsed )
20569	assertThat ( ids, contains ( locId ) )
20570	assertEquals ( expected, actual )
20571	Assert. assertNotSame ( preClusterUuid, afterClusterUuid )
20572	assertEquals ( emptyList ( ), clusters )
20573	assertThat ( toUnqualifiedVersionlessIdValues ( result ), containsInAnyOrder ( pt0id. getValue ( ) ) )
20574	assertEquals ( "{\\"foo\\":\\"bar\\",\\"child\\":{\\"grandchild\\":{}}}", result. toString ( ) )
20575	Assert. assertEquals ( uuid, uuid2 )
20576	assertTrue ( aNumber == Double. POSITIVE_INFINITY )
20577	assertEquals ( "java.lang.", t. getASTCompilationUnitPackage ( ) )
20578	assertEquals ( "True has to be returned in this case", replication, inf. getFileReplication ( ) )
20579	assertEquals ( seaCloudsApplicationData, seaCloudsApplicationDataById )
20580	assertEquals ( 1, ksession. fireAllRules ( ) )
20581	assertEquals ( expectedText, testText )
20582	Assert. assertEquals ( object ( ). getIdentifier ( ), clientSnapshot. getIdentifier ( ). getHistoryId ( ) )
20583	assertThat ( answer, allOf ( containsString ( "Michail" ), endsWith ( "invocationId was 123" ) ) )
20584	assertEquals ( first, ( ( BasicMonthViewUI ) monthView. getUI ( ) ). getFirstDisplayedMonth ( ) )
20585	assertThat ( selectionModel. getSelectedClass ( ), is ( Optional. empty ( ) ) )
20586	assertResourceHasConsistentValueMapRepresentation ( )
20587	Assert. assertArrayEquals ( doubleArray, decompressedArray. array ( ), 0.0000001 )
20588	assertEquals ( exp, zF )
20589	assertTrue ( authorizer. isAuthorized ( context, profiles ) )
20590	Assert. assertEquals ( Double. toString ( x ), expected, actual, tol )
20591	assertTrue ( configurationDeserialized )
20592	assertEquals ( 404, response. getStatus ( ) )
20593	Assert. assertEquals ( "password", codec. decode ( "password" ) )
20594	assertNotNull ( Reservation. reader ( "WSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "WTXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
20595	assertEquals ( 0, deleter. deletedVersions. size ( ) )
20596	Assert. assertEquals ( 1, model. getId ( ). intValue ( ) )
20597	assertEquals ( TimeValue. ofSeconds ( 10 ), impl. getFreshnessLifetime ( entry ) )
20598	arrays. assertStartsWith ( description, actual, newArray ( true, false, false, true ) )
20599	assertThat ( os, instanceOf ( Slf4jErrorOutputStream. class ) )
20600	Assert. isTrue ( parent. getChildrens ( ). size ( ) > 0 )
20601	assertThat ( violations. size ( ), is ( 1 ) )
20602	Assert. assertTrue ( item. matches ( divNode ) )
20603	Assert. assertTrue ( "no users returned", users. size ( ) > 0 )
20604	Assert. assertEquals ( retirada, notaInfo. getRetirada ( ) )
20605	assertEquals ( assertion, prepend )
20606	assertTrue ( wordLineCounts. get ( "." ). firstObject ( ) == 12 )
20607	assertEquals ( singletonList ( SimpleClass. class ), actual )
20608	assertEquals ( "[Object released]", v8Object. toString ( ) )
20609	assertEquals ( ace, parsed )
20610	assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<html>\\n" + " <head></head>\\n" + " <body></body>\\n" + "</html>", document. outerHtml ( ) )
20611	assertEquals ( mapper. getTableInfo ( ). toString ( ), tableInfo. toString ( ) )
20612	assertEquals ( "", data. getData ( ) )
20613	assertNull ( contextResult )
20614	assertEquals ( "42", method. invoke ( foo ) )
20615	assertEquals ( 55, ( int ) memo. get ( 10 ) )
20616	assertNoViolations ( constraintViolations )
20617	assertEquals ( value, testee. resolveExpressions ( value ) )
20618	assertTrue ( writeLatch. await ( 5, TimeUnit. SECONDS ) )
20619	assertThat ( result, is ( "0" ) )
20620	assertEquals ( "zzzzzz", function. execute ( "ZZZZZZ" ) )
20621	assertThat ( sut. getTotalPrice ( ), is ( 4500 ) )
20622	assertThat ( HiveObjectUtils. getParameter ( table, AVRO_SCHEMA_URL_PARAMETER ), is ( "test" ) )
20623	assertEquals ( newHashSet ( "hello", "world" ), result )
20624	Assert. assertEquals ( 15, result )
20625	assertIdentical ( "/simple_elk.owl", reasoned )
20626	assertEquals ( "0", getStringFromInputStream ( in ) )
20627	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 8, warnings. size ( ) )
20628	assertEquals ( 579, Integer. parseInt ( response ) )
20629	assertThat ( IntegerUtil. toPrimitiveInt ( i ), is ( 1 ) )
20630	assertIsSatisfied ( 2L, TimeUnit. SECONDS, firstOutbound )
20631	assertEquals ( 10, i )
20632	TestCase. assertFalse ( result )
20633	assertEquals ( "The value is not correct.", DecimalUtils. toDecimal ( date. toEpochSecond ( ), date. getNano ( ) ), value )
20634	assertProcessInstanceFinished ( processInstance, ksession )
20635	assertEquals ( new Sequence ( 2015, 0, 20 ), sequence )
20636	assertFalse ( err. isPresent ( ) )
20637	assertEvent ( "org/osgi/framework/ServiceEvent/REGISTERED", FilterUtils. eq ( "service.objectClass", "org.knowhowlab.osgi.testing.it.testbundle.service.Echo" ), 2, TimeUnit. SECONDS )
20638	assertThat ( appl, is ( JavaSignatureComparator. MATCH_BOXING ) )
20639	assertFalse ( descriptor. hasConstrainedParameters ( ) )
20640	assertThat ( new AllBranchesFilter ( ). isBranchAllowed ( null, randomBranchName ), is ( true ) )
20641	assertTrue ( isHoliday )
20642	assertEquals ( args, ImmutableList. of ( "-y", "-v", "debug", "-user_agent", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.82 Safari/537.36", "-ss", "00:00:01.5", "-i", "input", "-f", "mp4", "-ss", "00:00:00.5", "-vcodec", "libx264", "-s", "320x240", "-r", "30/1", "-qscale:v", "2", "-bsf:v", "foo", "-acodec", "aac", "-ac", "1", "-ar", "48000", "-qscale:a", "1", "-bsf:a", "bar", "output" ) )
20643	Assert. assertEquals ( "Preface", text )
20644	assertThat ( javaDocComment, not ( containsString ( "(Required)" ) ) )
20645	Assert. assertFalse ( isValid )
20646	assertEquals ( HardActivityConstraint. ConstraintsStatus. FULFILLED, status )
20647	Assert. assertEquals ( expected, actual )
20648	Assert. assertEquals ( "stuff\\"more\\";stuff", result )
20649	assertEquals ( expected, result )
20650	Assert. assertEquals ( Permission. NO, providerPermission )
20651	assertTrue ( found )
20652	assertEquals ( OptionalLong. empty ( ), queue. checkTimeout ( ticker. read ( ) ) )
20653	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
20654	assertEquals ( "((hello =='stringgoodbye') and (key1 == 'boolean1'))", jexl )
20655	assertEquals ( 2, classes. size ( ) )
20656	assertEquals ( PHRASE_REVERSE, reversedString )
20657	assertEquals ( 6.1, mhu. getAbsoluteHumidity ( ), 0.1 )
20658	spliterators. assertHasCharacteristics ( INFO, actual, DISTINCT )
20659	assertEquals ( 0, lintresult. getIssues ( ). size ( ) )
20660	assertEquals ( listCountPostsToTopicsInFBranch, actualCountPostsToTopicsInFBranch )
20661	assertEquals ( savedModel. getState ( ), ModelState. DRAFT. getName ( ) )
20662	assertFalse ( frameData. equals ( "8" ) )
20663	assertEquals ( "wrong tree", expected, parser. getParseTree ( ) )
20664	assertEquals ( "notNull()", buffer. toString ( ) )
20665	assertEquals ( "stream: input", IOUtils. toString ( result ) )
20666	Assert. assertEquals ( i, obj )
20667	assertEquals ( "JSON serialization is wrong", json1, json2 )
20668	assertEquals ( "IDX", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
20669	assertEquals ( "[Test] expecting elements:\\n<['Leia']>\\n of \\n<['Yoda', 'Luke', 'Leia']>\\n not to have <jedi power>", message )
20670	assertTrue ( filter. allow ( event, listener ) )
20671	assertSingleNotificationType ( EventType. FAILED_AUTHENTICATION )
20672	Assert. assertEquals ( 0., analyser. getTimeWindowViolation ( route ), 0.01 )
20673	Assert. assertTrue ( content. contains ( "imports-cleaner" ) && content. contains ( "src" ) )
20674	assertTrue ( g1 instanceof PublicCloneable )
20675	assertThat ( unmarshal ( sb ), allOf ( hasEntry ( "retained mdc key", "retained mdc value" ), not ( hasEntry ( "excluded mdc key", "excluded mdc value" ) ), hasEntry ( "retained explicit key", "retained explicit value" ), not ( hasEntry ( "excluded explicit key", "excluded explicit value" ) ) ) )
20676	AssertionUtils. multiAssertEquals ( createAsDocument9, response5. getResponseObject ( ) )
20677	assertEquals ( expected, actual )
20678	assertEquals ( VisitStatus. RESERVE_TREE, visit ( node ) )
20679	Assert. fail ( "Exception should be Thrown" )
20680	assertFalse ( connection. isConnected ( ) )
20681	assertTrue ( kv1. equals ( kv2 ) )
20682	assertEquals ( 1, m. magic ( ) )
20683	Assert. assertTrue ( true )
20684	assertEquals ( after. toString ( ), result. toString ( ) )
20685	Assert. assertSame ( "request should have been returned", request, request2 )
20686	assertTrue ( err. contains ( "BAD_CREDENTIALS for user NoSuchUser" ) )
20687	assertEquals ( "doc", result. get ( RETURN_RESULT ) )
20688	assertEquals ( 0, timestamps. size ( ) )
20689	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 09" ) )
20690	Assert. assertEquals ( "Unexpected result: " + result, expectedResult, result )
20691	assertNull ( result )
20692	assertTrue ( LivingDoc. isAnInterpreter ( "Calculate" ) )
20693	responseObserver. assertThatNoErrors ( )
20694	assertEquals ( 0, a. deltaBytes ( ) )
20695	assertEquals ( null, job. getNextRun ( ) )
20696	Assert. assertTrue ( downlodedFile. exists ( ) )
20697	assertCustomerWithLinksSample ( )
20698	assertSqlCanBeParsedAndDeparsed ( stmt )
20699	assertThat ( threads, hasItem ( thread ) )
20700	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"yes\\"?>" + LF + "<fields templateEngineKind=\\"Velocity\\" >" + LF + "\\t<description><![CDATA[A description...]]></description>" + LF + "\\t<field name=\\"developers.Name\\" list=\\"true\\" imageName=\\"\\" syntaxKind=\\"\\">" + LF + "\\t\\t<description><![CDATA[A field description...]]></description>" + LF + "\\t</field>" + LF + "\\t<field name=\\"project.Name\\" list=\\"false\\" imageName=\\"\\" syntaxKind=\\"\\">" + LF + "\\t\\t<description><![CDATA[An other field description...]]></description>" + LF + "\\t</field>" + LF + "</fields>", writer. toString ( ) )
20701	assertTrue ( result instanceof RawRequestSourcePreProcessor )
20702	assertTrue ( "Expected number of watchers to be contained in (" + MIN + ", " + MAX + "), but actually was " + total, total > MIN && total < MAX )
20703	assertEquals ( "Wrong class", CLS_NAME, ConfigurationUtils. loadClass ( CLS_NAME ). getName ( ) )
20704	assertEquals ( expectedTokens. get ( i ), token )
20705	assertThat ( systemOutRule. getLog ( ), containsString ( "test help" ) )
20706	assertEquals ( 16, buf. capacity ( ) )
20707	assertTrue ( "The content-type is not correct", contentType. getValue ( ). contains ( expectedformat. getContentType ( ) ) )
20708	assertEquals ( "bestuser", username )
20709	assertOrder ( false, query ( ). sortAscending ( "one" ) )
20710	assertEquals ( "3 uur geleden", t. format ( new Date ( 0 ) ) )
20711	assertThat ( unmarshal ( sb ), hasEntry ( HACK_ATTEMPT, "some value" ) )
20712	assertFalse ( data. isExceptionAtThisTime ( ) )
20713	Assert. assertEquals ( "PK2222", order. getDescription ( ) )
20714	assertThat ( dialect, instanceOf ( PostgresqlDialect. class ) )
20715	assertEquals ( expectedDateTime, parsedTime )
20716	assertEquals ( 0, objectNode. size ( ) )
20717	Assert. assertEquals ( "/3/300", result )
20718	Assert. assertTrue ( "Should be on search results page", result. contains ( "Details" ) )
20719	assertEquals ( ( byte ) 1, result )
20720	assertEquals ( expResult, result, 0.0 )
20721	assertEquals ( "This     has some $搂掳茅莽 name.txt", new PrefixTypesChain ( prefix ). process ( prefix, nameRequest ( "txt" ). originalName ( "name.pdf" ). bookmark ( "  This \\n   has\\tsome $搂掳茅莽 " ) ) )
20722	assertEquals ( "test", echo. echo ( "test" ) )
20723	assertArrayEquals ( packet, Handshake. loadFromPacket ( packet ). toPacket ( ) )
20724	Assert. assertEquals ( "correctreplacement.appendix", result )
20725	assertEquals ( "GBP 0.93", test. toString ( ) )
20726	assertEquals ( "transaction TX:sessionId:99 sessionId BEGIN unique-qualifier 100\\r\\n", new String ( buf. array ( ) ) )
20727	assertEquals ( players. get ( 0 ), game. getPlayerInBTN ( ) )
20728	assertEquals ( 3, trueCount )
20729	Assert. assertEquals ( 1, actionService. list ( ). size ( ) )
20730	assertEquals ( 5l, d. asInt8 ( ) )
20731	assertEquals ( expResult, result )
20732	assertEquals ( JulianDate. of ( 2012, 6, 23 ), test )
20733	assertEquals ( NOT_FOUND. getStatusCode ( ), result. getCode ( ) )
20734	assertNotNull ( test )
20735	assertEquals ( WebDriverTargets. window ( "test" ), targetLocator. getCurrentTarget ( ) )
20736	assertThat ( HtmlFormEntryUtil. getFullNameWithFamilyNameFirst ( name ), is ( "de Cameroon Smith Jr., Mr. Mark Brutus Esq." ) )
20737	assertTrue ( v1. compareTo ( v2 ) > 0 )
20738	assertEquals ( "http://example.com/fhir/Patient?name%3Aexact=james", capt. getValue ( ). getURI ( ). toString ( ) )
20739	assertResultSetOrderAgnostic ( resultSet, expectedRows )
20740	Assert. assertEquals ( expected, s, 1e-14 )
20741	assertEquals ( "Unexpected primary style name", "v-formlayout", state. primaryStyleName )
20742	assertFalse ( conv. canConvert ( TriggerContextSub. class ) )
20743	assertArrayEquals ( expected, encoder. getEncoded ( ) )
20744	assertEquals ( expected, actual )
20745	assertFalse ( service. publish ( "message" ) )
20746	assertEquals ( Math. sqrt ( 18 ), FrontUtils. distanceToClosestPoint ( point3, front ), EPSILON )
20747	assertEquals ( object. booleans, result. booleans )
20748	assertProcessInstanceFinished ( processInstance, ksession )
20749	assertTrue ( true )
20750	Assert. assertEquals ( "Go to <a href=\\"web:http://www.company.com/\\">http://www.company.com/</a> <br>\\nEnjoy!", value )
20751	Assert. assertEquals ( expectedMul, multiplied )
20752	assertTrue ( comparePomFiles ( reactorProjects ) )
20753	assertEquals ( 2, result. getSize ( ) )
20754	Assert. assertEquals ( "name", field. getName ( ) )
20755	assertEquals ( expResult, result )
20756	assertThat ( runtimeInfo. getRuntimeClassName ( ), is ( "org.talend.components.localio.runtime.fixed.FixedDatastoreRuntime" ) )
20757	assertThat ( responseWithPath, is ( EXPECTED_RETURN_FOLDER ) )
20758	assertEquals ( snapshot, lastEscalation. getSnapshot ( ) )
20759	assertEquals ( "repoName", op. name )
20760	assertEquals ( "monthView must protect its calendar", tz, monthView. getTimeZone ( ) )
20761	assertEquals ( Sets. newHashSet ( "com.textocat.textokit.commons.DocumentMetadata", "ru.kfu.itis.issst.evex.Person", "ru.kfu.itis.issst.evex.Organization", "ru.kfu.itis.issst.evex.Artifact", "ru.kfu.itis.issst.evex.Weapon", "ru.kfu.itis.issst.evex.Job", "ru.kfu.itis.issst.evex.Time", "ru.kfu.itis.issst.evex.Event", "ru.kfu.itis.issst.evex.Die", "ru.kfu.itis.issst.evex.StartPosition" ), typeNames )
20762	assertEquals ( "Removing a null style should be ignored", "first", cb. getLabelElement ( ). getStyleName ( ) )
20763	assertDataFrame ( frame, streamId, false, data )
20764	assertTrue ( graphElementMock. getGraphIds ( ). isEmpty ( ) )
20765	assertEquals ( y, pradf. getNextLineOffset ( x ) )
20766	assertFalse ( instance. validate ( file ) )
20767	Assert. assertEquals ( mockA, a1 )
20768	assertEquals ( 1, jpegPixelRepresentation ( "test16signed-J2KI.dcm" ) )
20769	assertTrue ( outFile. toFile ( ). length ( ) >= 40 )
20770	Assert. assertNotNull ( "null result from rule execution", result )
20771	assertThat ( rendering, is ( "2 days ago" ) )
20772	assertEquals ( "{\\"store\\":{\\"book\\":[{\\"category\\":\\"reference\\",\\"author\\":\\"Nigel Rees\\",\\"title\\":" + "\\"Sayings of the Century\\",\\"price\\":8.95},{\\"category\\":\\"fiction\\",\\"author\\":\\"Evelyn Waugh\\"," + "\\"title\\":\\"Sword of Honour\\",\\"price\\":12.99},{\\"category\\":\\"fiction\\",\\"author\\":\\"test1\\"," + "\\"title\\":\\"title1\\",\\"price\\":13}],\\"bicycle\\":{\\"color\\":\\"red\\",\\"price\\":19.95}}," + "\\"arrayTest\\":[1,2,3]}", result. get ( RETURN_RESULT ) )
20773	assertThat ( formatter. parse ( "104, Heisei 29" ), is ( expected ) )
20774	assertStoppedEventOnValidValue ( table, 0, throwOnEmpty, false )
20775	assertTrue ( failure. cause ( ) instanceof LeadershipTransferFailedException )
20776	assertEquals ( post. getUnsubscribeLinkForSubscribersOf ( TopicSubClass. class ), "/topics/1/unsubscribe" )
20777	Assert. assertTrue ( copyFrom. equals ( builder. offset ( 11, 10 ). build ( ), EqualCondition. COLUMN_WIDTH_ONLY ) )
20778	assertEquals ( new BigDecimal ( "19.00" ), maximum )
20779	assertBeanValidation ( json, "query.metric[0].aggregators[0].percentile may not be zero" )
20780	assertEquals ( CellImgFactory. class, imgFactory. getClass ( ) )
20781	assertEquals ( Arrays. asList ( mockSourcePath, mockNonSourcePath ), modulePathIds )
20782	assertNotNull ( s )
20783	Assert. assertFalse ( ipList. isEmpty ( ) )
20784	assertEquals ( 4, dt. intValue ( ) )
20785	Assert. assertEquals ( 200, response. getStatusLine ( ). getStatusCode ( ) )
20786	assertTrue ( two == 2 )
20787	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), hasEnvVar ( "STARTUP_MODE", ADMIN_STATE ) )
20788	assertThat ( dialect. addOptimizerHints ( sql, hints ). toString ( ), is ( "SELECT /* SQL_ID */" + System. lineSeparator ( ) + " * FROM PUBLIC.TEST_1 USE INDEX (test1_ix, test2_ix)" + System. lineSeparator ( ) ) )
20789	Assert. assertThat ( list. size ( ), greaterThan ( 0 ) )
20790	assertFalse ( cs. communicationAllowed ( ) )
20791	assertThat ( orders, hasItem ( equalTo ( expected ) ) )
20792	assertSame ( attr, forward. getAttributes ( ) )
20793	Assert. assertTrue ( true )
20794	assertTrue ( "audit should contain change of institutionsCountries", msgs. get ( 0 ). getMessage ( ). contains ( "friendlyName=<institutionsCountries>" ) )
20795	assertEquals ( "Outer class instance variable is 779", 779, ret )
20796	assertSame ( expected, result )
20797	assertEqualsIgnoreWhitespace ( expected, drl )
20798	assertEquals ( expResult, result )
20799	assertThat ( query. tenantIdIn ( TENANT_ONE ). count ( ), is ( 1L ) )
20800	arrays. assertDoesNotContain ( description, actual, other )
20801	assertThat ( anyTS. getMinimum ( MILLI_OF_SECOND ), is ( 0 ) )
20802	Assert. assertEquals ( msg, expected, actual, delta )
20803	assertEquals ( source, result )
20804	assertEquals ( "predicate names not recorded properly in grammar", expectedPreds, preds )
20805	assertTrue ( matcher. matches ( ) )
20806	assertThat ( runner. getVarsMap ( ). get ( "a" ). toString ( ), equalTo ( "x" ) )
20807	assertEditorClosed ( )
20808	assertFalse ( branch. getSubscribers ( ). contains ( user ) )
20809	assertEquals ( 1, executeSolrQuery ( "firstname_s:John lastname_s:Doe" ). size ( ) )
20810	assertFalse ( validator. validate ( Meta, POST ). passedValidation ( ) )
20811	assertEquals ( 0, esperEventProcessor. getStatements ( ). size ( ) )
20812	Assert. assertNotNull ( result )
20813	assertEquals ( true, deadClient. getClient ( ). isBroken ( ) )
20814	assertEquals ( String. valueOf ( i ), slaveJedis. get ( key ) )
20815	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
20816	assertThat ( captor. getValue ( ). verify ( "fakehostna.me", mock ( SSLSession. class ) ), is ( true ) )
20817	assertEquals ( 128, highest & 0x80 )
20818	assertEquals ( pbs, pbs2 )
20819	assertEquals ( "Junit error", expectedString, p. toURLParameterString ( ) )
20820	assertEquals ( "2012-08-09 00:00:00", runtime )
20821	assertTrue ( getNoErrorMsg ( ), result )
20822	Assert. assertTrue ( errors. hasGlobalErrors ( ) && errors. getGlobalError ( ). getCode ( ). equals ( PermissionsValidator. ERROR_CODE_EMPTY_SELECTED_IDS ) )
20823	Assert. assertNotNull ( addressResultsDto )
20824	assertEquals ( 3456.098F, r )
20825	Assert. assertNotNull ( dbRangerServiceList )
20826	Assert. assertNotNull ( "Missing activator did not trigger SwitchYardException!", exception )
20827	Assert. assertNull ( imports )
20828	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPath, cmpPath, destinationFolder, diff ) )
20829	assertThat ( notifier. notify ( notice ), is ( 200 ) )
20830	assertEquals ( Sets. newHashSet ( role1, role2 ), sentryStore. getRolesByGroups ( SEARCH, twoGroups ) )
20831	assertThat ( issues, is ( empty ( ) ) )
20832	assertEquals ( "hello", filterResult. getValue ( ) )
20833	assertEquals ( FilterReply. DENY, filter. decide ( event ) )
20834	assertTrue ( "Handler wasn't run", ran. get ( ) )
20835	assertThat ( references. size ( ), equalTo ( 0 ) )
20836	assertTrue ( true )
20837	assertThat ( envVars. size ( ), is ( 0 ) )
20838	assertThat ( table. toString ( ), is ( String. format ( "[[%s, %s], [%s, %s]]", e, e, e, e ) ) )
20839	assertTrue ( classLoaderContextStr. toString ( ). contains ( "empty" ) )
20840	assertExec ( "Can get name of superinterface?", Classes. class, "superInterface__Ljava_lang_String_2", exp )
20841	assertEquals ( 1L, result )
20842	Assert. assertEquals ( 100, EJBInvocationHandler. forProxy ( proxy ). getInvocationTimeout ( ) )
20843	assertThat ( goModFromProject, is ( equalTo ( goModAsString ) ) )
20844	assertEquals ( C_150, targetHours, 0.0 )
20845	assertEquals ( Arrays. asList ( testWriters. toArray ( ) ). toString ( ), Arrays. asList ( Arrays. copyOf ( movie. getWriters ( ). toArray ( ), 1 ) ). toString ( ) )
20846	assertEquals ( alpha, res, 0.01 )
20847	Assert. assertTrue ( "did not find expected error in output", false )
20848	assertNotNull ( response )
20849	assertEquals ( map1, map2 )
20850	assertNotNull ( javaxSchema )
20851	assertThat ( result, is ( "def" ) )
20852	Assert. assertFalse ( "Match - Compare with invalid pattern should be false", compare. execute ( ) )
20853	assertMatchAnyMethodsCalled ( sffName )
20854	assertEquals ( firstWord, futureWord. get ( ) )
20855	assertEquals ( expected, actual )
20856	Assert. assertEquals ( ValidationResult. Result. ERROR, tableProperties. beforeTableName ( ). getStatus ( ) )
20857	assertThat ( response. getStatus ( ), is ( 404 ) )
20858	assertFalse ( h == 0 )
20859	assertTrue ( keyValueTableView. getItems ( ). size ( ) == 3 )
20860	context. assertIsSatisfied ( )
20861	assertThat ( result. validate ( ), is ( true ) )
20862	assertTrue ( result. contains ( expected ) )
20863	assertEquals ( page2, wizard. navigateToFirst ( ) )
20864	assertEquals ( expected, actual )
20865	assertFalse ( subscriptions. deleteSubscription ( unsubscribeContext ) )
20866	assertMockEndpointsSatisfied ( )
20867	assertThat ( querys, is ( contains ( Arrays. asList ( "SELECT /* sqlid_test/select_product_custom */", "\\t*", "FROM", "\\tPRODUCT", "WHERE 1 = 1", "ORDER BY PRODUCT_ID" ) ) ) )
20868	assertEquals ( "////%21%20%22%23%24%25%26%27%28%29%2A%2B%2C-./0123456789%3A%3B%3C%3D%3E%3F%40ABCDEFGHIJKLMNOPQRSTUVWXYZ%5B%5C%5D%5E_%60abcdefghijklmnopqrstuvwxyz%7B%7C%7D~", encodeStr )
20869	assertThat ( routing. route ( request, "/abc/part1/part2/partN" ), is ( "/abc?path=" + URLEncoder. encode ( "part1/part2/partN", "UTF-8" ) ) )
20870	assertEquals ( 200, response. getStatus ( ) )
20871	Assert. assertEquals ( 3, artifact. getComment ( ). size ( ) )
20872	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 01" ) )
20873	mockery. assertIsSatisfied ( )
20874	assertNotNull ( Sim. reader ( ). read ( ) )
20875	assertEquals ( expectatedMessage. trim ( ), e. getMessage ( ). trim ( ) )
20876	assertEquals ( "prefix_hello_suffix", template. format ( getResolver ( ) ) )
20877	assertThat ( page2, is ( not ( page1 ) ) )
20878	Assert. assertTrue ( pss. toString ( ). contains ( "12.3" ) )
20879	assertThat ( base. thenApplyCaughtFailed ( failedFn, cause ), is ( ee ) )
20880	Assert. assertEquals ( "Expected HTTP 404 to be returned as process instance doesn't exist.", Response. Status. NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
20881	assertFalse ( isMappingModelExists ( ) )
20882	assertEquals ( expResult, result )
20883	assertEquals ( 10, cacheManager. getMaximumSizeMB ( ), 1e-9 )
20884	Assert. assertFalse ( json. has ( DATA_NAME ) )
20885	assertFalse ( constraintValidator. isValid ( Money. of ( 0, "EUR" ), null ) )
20886	assertEquals ( exp, act )
20887	assertFalse ( lhs. equals ( rhs ) )
20888	assertNull ( graph )
20889	assertTrue ( classes. length > 0 )
20890	assertResult ( "checking multiple root branches with no skip" )
20891	assertNull ( result )
20892	Assert. assertThat ( t, matchesKey ( "(" ) )
20893	assertEquals ( token. serialise ( ), result. serialise ( ) )
20894	assertEquals ( true, result )
20895	assertNotNull ( dataURL )
20896	UnitTestUtils. assertEquals ( "preMultiply(Vector) returns wrong result", diagResult, denseResult, 0d )
20897	assertThat ( e. hasMoreElements ( ), is ( false ) )
20898	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
20899	assertSame ( expected, result )
20900	assertNull ( getClient ( ). getService ( serv. getId ( ) ) )
20901	assertThat ( jsonOutputStreamParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/jsonmarshallertest/testTags.json" ) ) )
20902	assertTrue ( join. getWindowing ( ) instanceof Time )
20903	assertEquals ( val. getDiscountRate ( ), Rate. of ( 0.01 ) )
20904	Assert. assertEquals ( expected, actual )
20905	assertEquals ( tempFileName, appender. getFileName ( ) )
20906	assertEquals ( Constants. CT_FHIR_XML_NEW, ourContentTypes. get ( 0 ) )
20907	assertEquals ( expected, actual )
20908	assertEquals ( String. format ( "DateParser(%s).parse(%s) wrong parsed.", pattern, dateLong ), dateToCompare, date )
20909	assertEquals ( dataQuality. get ( p2 ), params. get ( p1 ), 0.05 )
20910	assertListTEquals ( listT, 24, 42 )
20911	assertNotNull ( tf )
20912	assertThat ( encoded, stringContainsInOrder ( "{", "\\"resourceType\\": \\"Patient\\",", "\\"contained\\": [", "{", "\\"resourceType\\": \\"Condition\\",", "\\"id\\": \\"1\\"", "}", "],", "\\"extension\\": [", "{", "\\"url\\": \\"test\\",", "\\"valueReference\\": {", "\\"reference\\": \\"#1\\"", "}", "}", "],", "\\"birthDate\\": \\"2016-04-05\\"", "}" ) )
20913	assertMockEndpointsSatisfied ( )
20914	assertNotNull ( expected )
20915	assertEquals ( null, def )
20916	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5, 6 ) ) )
20917	assertEquals ( 5, tuple. len ( ) )
20918	editor. assertCompletions ( )
20919	assertEquals ( _2012_11_10, toml. getDate ( "d", _2012_11_10 ) )
20920	Assert. assertEquals ( ImmutableList. of ( ThresholdFilterHeaderExtender. FILTER_GT_MIN_GQ ), annotator. getFiltersFor ( gt ) )
20921	assertNotNull ( "Messages are not null", messages )
20922	assertEquals ( 500, page. getWebResponse ( ). getStatusCode ( ) )
20923	assertThat ( request, is ( request2 ) )
20924	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
20925	assertEquals ( "http://util.common.cxf.apache.org/", packageName )
20926	assertFalse ( next )
20927	assertEquals ( "BAR-SYNTAX", options. syntaxModule ( files ) )
20928	assertUpdatedVasyaAndPetya ( all )
20929	assertTrue ( domain, domain. contains ( "World" ) )
20930	Assert. assertTrue ( resources. getResourceNames ( ). isEmpty ( ) )
20931	assertEquals ( CreateMode. values ( ). length, listing. get ( ). getResult ( ). size ( ) )
20932	assertEquals ( "a composer", id3v2Tag. getComposer ( ) )
20933	assertEquals ( true, PolyElement. hasCommonNode ( secondPolyElement ) )
20934	assertFalse ( HttpMessageUtils. isJson ( message ) )
20935	assertTrue ( simpleTable. isPersistingPreferencesOnChange ( ) )
20936	assertEquals ( bill, ( ( List ) session. getGlobal ( "list" ) ). get ( 0 ) )
20937	Assert. assertEquals ( expectedInstanceTypes, instanceTypes )
20938	assertTrue ( h == null )
20939	assertEquals ( 201, responseEntity. getStatusCode ( ) )
20940	Assert. assertEquals ( "MDC is wrong", "bar", mdc. get ( "foo" ) )
20941	assertTrue ( response. isSuccess ( ) )
20942	Assert. assertEquals ( "�ㄨ��楂���", games. getProperty ( "500006.name" ) )
20943	scope. assertMetrics ( )
20944	assertEquals ( InterpreterResult. Code. SUCCESS, ret. code ( ) )
20945	Assert. fail ( )
20946	assertEquals ( Sets. newHashSet ( ), backend. getPrivileges ( Sets. newHashSet ( "not-a-group" ), ActiveRoleSet. ALL ) )
20947	Assert. assertEquals ( PersistenceState. NOT_PERSISTED. toString ( ), fileInfo. getPersistenceState ( ) )
20948	assertNotNull ( authorModel )
20949	assertFalse ( sf. getCache ( ). containsEntity ( AnnotatedEntity. class, 0L ) )
20950	assertNull ( myDtoClass )
20951	assertSame ( "handleMessage result", follower, newBehavior )
20952	assertNotNull ( result )
20953	Assert. assertThat ( sparkRestClient. killJob ( ). withSubmissionId ( submissionId ), is ( true ) )
20954	assertThat ( provided ( "a.b.c" ). isAlsoImmutable ( ), not ( allows ( reason ) ) )
20955	assertThat ( result, is ( jsonArrayOfStrings ( "home", "office", "mobile" ) ) )
20956	assertEquals ( "?p1=v1&p2=v2", query. toString ( ) )
20957	assertEquals ( expected, new String ( output. toByteArray ( ) ) )
20958	assertEquals ( Result. PASS, ok. apply ( item ) )
20959	assertEquals ( "REALLY_labelled", mm. get ( m. expandPrefix ( "p:thing" ) ) )
20960	TestUtils. assertEquals ( new Array2DRowFieldMatrix < > ( testDataPlus2 ), m. scalarAdd ( Dfp25. of ( 2 ) ) )
20961	assertArrayEquals ( new String [ ] { "root" }, treeContent )
20962	assertFalse ( "RM never turned active", - 1 == cluster. getActiveRMIndex ( ) )
20963	assertEquals ( 2, Iterables. sizeOf ( list ) )
20964	assertNull ( x. getValue ( ) )
20965	assertThat ( estimator. getCardinality ( ), is ( 3L ) )
20966	assertEquals ( ( Byte ) Byte. MAX_VALUE, extractedByte )
20967	Assert. assertEquals ( "An 11.", output )
20968	assertEquals ( "<p><strong>123</strong></p>", result )
20969	assertEquals ( insets, classUnderTest. getBorderInsets ( mockComponent ) )
20970	rule. assertScenarioEnded ( )
20971	assertEquals ( V8_ARRAY, v8Object. getType ( "key" ) )
20972	assertThat ( queriesString, is ( "type=BasicFlow" ) )
20973	assertThat ( rasterNames, equalTo ( expected ) )
20974	assertThat ( fieldError, is ( nullValue ( ) ) )
20975	assertEquals ( expected, actual )
20976	assertSignalEventDefinition ( "end", "signal" )
20977	assertThat ( g. topologyOf ( 5 ), is ( t ) )
20978	Assert. assertEquals ( "2013-01-29 04:00:00", CalendarUtils. calendarToString ( hourToRollup ) )
20979	AssertAnnotations. assertToken ( tokens, select ( jcas, Token. class ) )
20980	assertEquals ( 1, result. getFailures ( ). size ( ) )
20981	Assert. assertTrue ( BufferUtils. equalIncreasingByteBuffer ( 0, ( int ) TEST_BLOCK_SIZE, buf. nioBuffer ( ) ) )
20982	assertEquals ( "/topic", m_callback. getTopic ( ) )
20983	assertTrue ( resultFuture. get ( 10, TimeUnit. SECONDS ) )
20984	assertEquals ( "Stratio Decision", name )
20985	Assert. assertEquals ( 2, numUdocs )
20986	assertTrue ( "page doesn't contain iframe with the file", containsFileIframe )
20987	assertTrue ( log. contains ( logMessage ) )
20988	assertEquals ( "streams aborted in " + streamStatistics, 0, streamStatistics. aborted )
20989	assertContentEquals ( style, Arrays. asList ( "Mes", "sag", "ePr", "ese", "nte", "r" ) )
20990	Assert. assertTrue ( "Expected: 'Hello null' Actual: '" + hi. getName ( ) + "'", "Hello null". equals ( hi. getName ( ) ) )
20991	assertOut ( "var /** @type {string} */ a" )
20992	Assert. assertTrue ( servlet. isDebugMode ( ) )
20993	assertThat ( actionProgress. getActionName ( ), nullValue ( ) )
20994	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
20995	assertNotNull ( issueTrackerService. getIssueTrackerTasks ( project ) )
20996	assertEquals ( suggestedName, hive2DatabaseMeta. generateColumnAlias ( columnIndex, suggestedName ) )
20997	assertEquals ( 238, fields. size ( ) )
20998	assertTrue ( detail )
20999	assertEquals ( true, cluster. getDataNodes ( ). get ( 0 ). isBPServiceAlive ( cluster. getNamesystem ( ). getBlockPoolId ( ) ) )
21000	assertIsSatisfied ( 2L, TimeUnit. SECONDS, secondOutbound )
21001	assertEquals ( "## Changes from version w2-wip1 to w2-wip2\\n" + "\\n" + "### Changed\\n" + "- id\\n" + "  changed from \\"ServiceTemplateWithTwoNodeTemplates_w2-wip1\\" to \\"ServiceTemplateWithTwoNodeTemplates_w2-wip2\\"\\n" + "- name\\n" + "  changed from \\"ServiceTemplateWithTwoNodeTemplates_w2-wip1\\" to \\"ServiceTemplateWithTwoNodeTemplates_w2-wip2\\"\\n" + "- topologyTemplate/nodeTemplates/NodeTypeWithTwoKVProperties/properties/KVProperties/{key1}\\n" + "  changed from \\"\\" to \\"MyKeyElement\\"", toscaDiff. getChangeLog ( ) )
21002	assertTrue ( validScrollRange. contains ( getGridVerticalScrollPos ( ) ) )
21003	Assert. assertEquals ( 15, takenEvents. size ( ) )
21004	assertEquals ( 1, branch_conditions. size ( ) )
21005	Assert. assertEquals ( expected, actual )
21006	Assert. assertTrue ( result. getEntity ( ) == null || result. getEntity ( ). getContentLength ( ) == 0 )
21007	assertSame ( myContextActivity, resolvedContextActivity )
21008	assertNonAccessibleDefaultAccessControl ( result )
21009	assertTrue ( testFailed. isEmpty ( ) )
21010	Assert. assertEquals ( expected, actual )
21011	assertEquals ( "/", r. matches ( Collections. < String, String > emptyMap ( ) ). render ( ) )
21012	assertNotNull ( result )
21013	assertTrue ( result )
21014	assertEquals ( 4., pickup. getArrTime ( ), 0.01 )
21015	assertEquals ( ( ( ObjectWithOptions ) options. optOp ). required, 10101 )
21016	Assert. assertEquals ( createEmbedding ( v0, e0, v1, e1, v2, e2, v3, v4, e3, e4, e5, v5 ), result. get ( 0 ) )
21017	assertEquals ( 2.33f, w. getValue ( ), 0.01 )
21018	assertEquals ( tstName, rel. getName ( ) )
21019	Assert. assertEquals ( numOutputs, cdme2. getCount ( ) )
21020	Assert. assertTrue ( true )
21021	assertTrue ( "Expected less time to be taken with immediate readahead (" + millisWithNoWait + ") than without immediate readahead (" + millisWithWait + ")", millisWithNoWait < millisWithWait )
21022	assertServiceResource ( resource )
21023	assertThat ( component. execute ( ), is ( expected ) )
21024	assertions. contains ( 'c', index )
21025	assertEquals ( DataTable. create ( singletonList ( singletonList ( null ) ) ), arguments. get ( 0 ). getValue ( ) )
21026	assertEquals ( expResult, result )
21027	assertNotNull ( vlr )
21028	Assert. assertEquals ( "First Tab\\nSecond Tab\\nThird Tab", resultPage. getText ( ) )
21029	assertTrue ( "Timeout cause is expected", cause instanceof java. net. SocketTimeoutException )
21030	assertTrue ( Futures. getUnchecked ( collector ) )
21031	assertEquals ( jaasConfigService, inputMeta. getJaasConfigService ( ). get ( ) )
21032	assertEquals ( t, new HttpURL ( s ). toString ( ) )
21033	assertEquals ( "1true", mustache. render ( new JsonParser ( ). parse ( "[\\"1\\",true,null]" ) ) )
21034	assertEquals ( "a", object. getStringValue ( ) )
21035	Assert. assertEquals ( hmacExpected, hmac )
21036	assertThat ( other, LocalDateTimeMatchers. sameSecondOfMinute ( date ) )
21037	Helpers. assertDateWithError ( startTime, ( String ) Deencapsulation. getField ( jobsParser, "startTime" ) )
21038	assertFalse ( this. reconnectManager. isValidTask ( task ) )
21039	assertEquals ( asList ( 21, 34 ), list )
21040	assertThat ( server1, not ( equalTo ( server2 ) ) )
21041	assertEquals ( "public static void main(String[] args) {}", actualContent )
21042	assertEquals ( "b", occ. getImage ( ) )
21043	assertTrue ( messageLatch. await ( 1, TimeUnit. SECONDS ) )
21044	assertTrue ( input. isHidden ( ) )
21045	assertEquals ( Integer. valueOf ( 1 ), parseResults. get ( FILE_PATH ). getCoveredConditionsByLine ( ). get ( BRANCH_LINE ) )
21046	Assert. assertEquals ( "true", "true" )
21047	assertNull ( e. getRenderingEngine ( ) )
21048	assertEquals ( expected, actual )
21049	Assert. assertEquals ( "[1, 2, 3, 4, 6, 7, 5]", result. toString ( ) )
21050	assertEquals ( targetDirectory, stitchedProductFileParentDirectory. getParentFile ( ) )
21051	assertEquals ( fileBackedApolloLocationServiceCache. getGeoJsonFromLocationCode ( "1169" ), newFileBackedCache. getGeoJsonFromLocationCode ( "1169" ) )
21052	assertEquals ( "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}", regExp )
21053	assertEquals ( fileUrl, "default://master@dashbuilder/datasets/tmp/test.csv" )
21054	assertEquals ( true, lineArgs. isHelpRequested ( ) )
21055	Assert. assertEquals ( "stale data still in metadata mapping, should have overridden", key3, actual )
21056	assertEquals ( "D", nbr1. getNbrStatus ( ) )
21057	assertEquals ( Boolean. TRUE, result )
21058	assertFalse ( filter. isDetected ( ) )
21059	Assert. assertThat ( result, not ( instanceOf ( Failed. class ) ) )
21060	assertEquals ( "Incorrect chars returned", testString, new String ( buf, 0, buf. length ) )
21061	assertLife ( playerA, ANY_LIFE_TOTAL - 1 )
21062	assertThat ( decodedValue, is ( actualValue ) )
21063	assertTrue ( logger. isInfoEnabled ( ) )
21064	assertThat ( this. appRegistryService. find ( "foo", ApplicationType. sink ). getUri ( ). toString ( ), is ( "maven://org.springframework.cloud.stream.app:log-sink-rabbit:1.2.0.RELEASE" ) )
21065	assertEquals ( true, result )
21066	assertEquals ( expected, result, 0.000001 )
21067	assertThat ( list, ( Matcher ) contains ( "1", "1", "1", "1" ) )
21068	assertEquals ( "bar", result )
21069	assertEquals ( extractedYAML, expectedYAML )
21070	assertArrayEquals ( new String [ ] { "value1", "value2" }, strings )
21071	assertEquals ( "[[Sarah]]", results. toString ( ) )
21072	assertEquals ( Tuple3. of ( 17, "abc", 3.4f ), xtriple ( sf, xint ( ), xstring ( ), xfloat ( ) ). extract ( "foo17;abc;3.4" ) )
21073	assertNode ( "/", "mode:root" )
21074	assertEquals ( expectValue, actualValue )
21075	assertEquals ( "BEGIN\\n" + "UPDATE table1 SET a = 'xx' WHERE b = 'condition1';\\n" + "UPDATE table1 SET a = 'xx' WHERE b = 'condition2';\\n" + "END;\\n" + "", stmts. toString ( ) )
21076	assertEquals ( "&", unescaped )
21077	Assert. fail ( "DC not started, domain.cached-remote.xml does not exist but " + "slave host controller was started " )
21078	assertEquals ( "New Test room", room. getName ( ) )
21079	Assert. assertEquals ( new JWGmeligMeylingException ( ). trustButVerify ( ), response. body )
21080	assertEquals ( expr, printConstraint ( expression ) )
21081	Assert. assertEquals ( Status. OK. getStatusCode ( ), resp. getStatus ( ) )
21082	Assert. assertEquals ( result_backward_with_cats_and_prefix, result )
21083	Assert. assertEquals ( result, true )
21084	assertSelection ( 0, 4 )
21085	assertThat ( axioms. isEmpty ( ), is ( true ) )
21086	assertNotNull ( arbitratorField. get ( subject ) )
21087	Assert. assertNotNull ( role )
21088	assertThat ( Util. intValue ( "foo", scope ), is ( 42 ) )
21089	assertEquals ( TEST_2007_07_15_PONE, t )
21090	Assert. assertEquals ( expected, filterResult )
21091	assertThat ( target, is ( instanceOf ( PathCalculator. class ) ) )
21092	assertEquals ( 0, consumerPrefetch. retriesAttempted )
21093	assertThat ( keyspace. getCqlStatement ( ), is ( equalTo ( "CREATE KEYSPACE IF NOT EXISTS test WITH REPLICATION = {'class':'SimpleStrategy','replication_factor':1} " + "AND DURABLE_WRITES = false" ) ) )
21094	assertThat ( results, is ( Arrays. asList ( "Hello, world!" ) ) )
21095	assertEquals ( arr, dup )
21096	assertNull ( filterable. getFilter ( ) )
21097	assertThat ( "generator-set-2.xml", generatorSet, is ( expected ) )
21098	assertEquals ( 4, numberOfTicks. calculate ( series, t ), TATestsUtils. TA_OFFSET )
21099	Assert. assertTrue ( version1. compareTo ( version2 ) < 0 )
21100	assertEquals ( false, result )
21101	assertThat ( scoping, is ( Scoping. EAGER_SINGLETON ) )
21102	assertEquals ( "baz/\\n" + "  foo/\\n" + "    bar/\\n" + "      wooz 0 (S_IFREG)\\n" + "    rooz -> bar/wooz\\n", sw. toString ( ) )
21103	assertEquals ( NodeValue. FALSE, r )
21104	Assert. assertEquals ( NATIVE_APP, driver ( ). getContext ( ) )
21105	assertTrue ( executor instanceof SequentialTaskExecutor )
21106	assertThat ( properties. getPropertyNames ( ), hasSize ( 0 ) )
21107	assertEquals ( "Expected 0 results!", 0, n )
21108	assertEquals ( "Registered alias should be found.", "/testAlias", OSGiCleanMapper. map ( "/testAlias", false ) )
21109	assertEquals ( - 10., c, 0.01 )
21110	assertArrayEquals ( new String [ ] { "Amnicon Falls State Park", "Big Foot Beach State Park", "Mill Bluff State Park", "Roche-A-Cri State Park", "Willow River State Park", "Wyalusing State Park" }, wiStateParks )
21111	Assert. assertEquals ( expected, actual )
21112	assertEquals ( BAD_REQUEST. getStatusCode ( ), response. getStatus ( ) )
21113	Assert. assertNotNull ( "could not create a new instance", t )
21114	assertThat ( fe, notNullValue ( ) )
21115	assertThat ( "String schema", combined, matches ( new SchemaMatcher ( expected ) ) )
21116	assertEquals ( playlist1, playlist2 )
21117	assertEquals ( 1, pagedResult. getTotalPages ( ) )
21118	assertEquals ( 2, tasks. size ( ) )
21119	assertFalse ( Initialize. checkInit ( fs, sconf, conf ) )
21120	assertFalse ( interfaceType. isPrimitive ( ) )
21121	assertEquals ( "SELECT Parent.Id, Account.Id FROM Account WHERE Parent.Name = 'x'", visitor. getQuery ( ). toString ( ). trim ( ) )
21122	assertEquals ( "getSkipLines() did not return SKIP_LINES_DEFAULT", VariablesFromCSV. SKIP_LINES_DEFAULT, element. getSkipLines ( ) )
21123	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoItemProduto ( ). toString ( ) )
21124	TestCase. assertFalse ( attribute. match ( t ) )
21125	Assert. assertNotNull ( appStatsCenter )
21126	assertEquals ( "Expected response not seen.", "GET", response )
21127	Assert. assertNull ( "Value should not be found.", value )
21128	assertThat ( merge ( intervals ). size ( ), is ( 3 ) )
21129	assertThat ( read ( format, written ), contains ( new BigDecimal ( "3.14" ) ) )
21130	Assert. assertEquals ( IOrchestratorPluginFactory. class, clazz )
21131	assertThat ( "should register problem", monitor. isProblemWith ( REPO ), is ( true ) )
21132	assertThat ( allDbs. size ( ), is ( not ( 0 ) ) )
21133	assertTrue ( true )
21134	assertTrue ( "No Exception reported for wrong header 1", checkPoint )
21135	Assert. assertEquals ( StatusCodes. OK, result. getStatusLine ( ). getStatusCode ( ) )
21136	assertEquals ( "with SURVEY (ID, NAME) as (select survey2.ID, survey2.NAME\\n" + "from SURVEY survey2)\\n\\n" + "from dual", q. toString ( ) )
21137	assertThat ( other, DateMatchers. sameSecondOfMinute ( date ) )
21138	assertEquals ( expResult, result )
21139	assertNotNull ( User. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
21140	assertEquals ( 50.0, wnd. rate ( ), 0.0001 )
21141	assertThat ( target. matchExactly ( match ), is ( false ) )
21142	assertThat ( loader. reload ( 1, 1 ), is ( 1 ) )
21143	assertEquals ( "test-index-pattern", defaultPattern )
21144	assertRequest ( "POST", "Subaccount/" )
21145	assertTrue ( a. length == 0 )
21146	Assert. assertEquals ( "Invalid conditions returned", Arrays. asList ( condTrue1, condTrue2 ), orTest. getConditions ( ) )
21147	assertArrayEquals ( aSub. toArray ( ), bSub. toArray ( ), DELTA )
21148	assertThat ( allKeysIn ( result ). size ( ), is ( 0 ) )
21149	assertEquals ( results. size ( ), 2 )
21150	assertEquals ( expectedResult, tomcatReinforcement. invoke ( audit ) )
21151	assertThatObjectsAreWritten ( root )
21152	assertEquals ( "Should return FAILURE with Internal Server Error", "failure", jsonObj. get ( "status" ). getAsString ( ) )
21153	assertEquals ( tag, true )
21154	testContext. assertNull ( returnedExpireValue )
21155	assertFalse ( result. getParameters ( ). containsKey ( "date" ) )
21156	assertCorrectVariableInitialisation ( new long [ ] { length }, array )
21157	Assert. assertEquals ( a * FastMath. cos ( w * v + p ), f. value ( v ), 0 )
21158	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. REPLACE, v, TERM_FACTORY. getConstantLiteral ( "^Ste(v|ph)en$" ), TERM_FACTORY. getConstantLiteral ( "" ), TERM_FACTORY. getConstantLiteral ( "" ) ), translation )
21159	assertEquals ( "T", plan. getTableRef ( ). getTable ( ). getTableName ( ). getString ( ) )
21160	assertEquals ( "Command completed successfully", executeSqlCommand )
21161	Assert. assertEquals ( "Internal value in copy has changed!", initialId, value. get ( 0 ). getId ( ) )
21162	assertThat ( this. url, is ( equalTo ( "/context/dispatcher/method" ) ) )
21163	assertEquals ( IOTester. VALUE_OUT_PAYLOAD, buf. toString ( ) )
21164	assertEquals ( expected, result )
21165	assertEquals ( s3, unassigned. iterator ( ). next ( ) )
21166	Assert. assertEquals ( Constants. GENERIC_SERIALIZATION_BEAN, url. getParameter ( Constants. GENERIC_KEY ) )
21167	Assert. assertEquals ( Sets. newHashSet ( 1, 2 ), parser. getSecureBindIndices ( ) )
21168	Assert. assertFalse ( empty )
21169	assertThat ( view. url ( ), is ( expectedUrl ) )
21170	assertSqlCanBeParsedAndDeparsed ( stmt )
21171	assertEquals ( 200, response. getStatusLine ( ). getStatusCode ( ) )
21172	Assert. assertNotNull ( object )
21173	assertEquals ( "Result", 2, map. size ( ) )
21174	assertTrue ( "No gzipped files found", hasGzippedFile. matches ( files ) )
21175	assertEquals ( actual, "Hello, World!!!" )
21176	assertTrue ( builder == newBuilder )
21177	assertEquals ( obj. toString ( ), "PolicyDomainInfo{domainName: \\"Test\\", domainSID: S-1-5-32}" )
21178	Assert. assertEquals ( expected, actual )
21179	assertEquals ( "Status code should be OK", Response. Status. OK. getStatusCode ( ), response. getStatus ( ) )
21180	assertEquals ( "the return should be 204", HttpStatusCode. NO_CONTENT. code, response. getStatus ( ) )
21181	DelegationTestUtil. assertDelegationToSpy ( queueSender )
21182	assertHeader ( header, name, value )
21183	assertEquals ( ChrisProductReaderPlugIn. class, plugIn. getClass ( ) )
21184	assertEquals ( 2, context. getTableCount ( ) )
21185	Assert. assertEquals ( 1, resultsSize ( rc ) )
21186	assertTrue ( processInstance. isEnded ( ) )
21187	assertEquals ( markerName, value )
21188	assertEquals ( expectedExecutionTime, actual )
21189	assertEquals ( string, ConvertKit. inputStream2String ( ConvertKit. string2InputStream ( string, "UTF-8" ), "UTF-8" ) )
21190	assertEquals ( searchSupportRest, searchSupportResource. getContent ( ) )
21191	assertNull ( activity. getParent ( ) )
21192	assertEquals ( "sekrit", c. get ( Property. INSTANCE_SECRET ) )
21193	assertThat ( result, equalTo ( false ) )
21194	assertTrue ( elementsEqual ( aEdges, expected ) )
21195	assertThat ( generator, instanceOf ( expected. getClass ( ) ) )
21196	assertThat ( resp. statusCode, is ( Response. BAD_REQUEST ) )
21197	assertThat ( description. getTestMethod ( ), is ( nullValue ( ) ) )
21198	assertEquals ( "Wrong mapper found for RuntimeException2", RuntimeExceptionMapper2. class, exceptionMapper. getClass ( ) )
21199	assertFalse ( iter. hasTop ( ) )
21200	assertThat ( result, nullValue ( ) )
21201	Assert. assertNotNull ( app )
21202	assertEquals ( 3, MmtfUtils. getNumGroups ( structure ) )
21203	assertNull ( result )
21204	Assert. assertEquals ( null, p. getValue ( ) )
21205	Assert. assertEquals ( "�肩��|灏辫�|��|浜�", words )
21206	assertEquals ( "$${test}", p. getCurrentValue ( ) )
21207	assertEquals ( NeedsCustomInstantiation. class, targetType )
21208	assertEquals ( "000102030000000000000000", Hex. toHexString ( outputStream. toByteArray ( ) ). toUpperCase ( ) )
21209	assertEquals ( "Base value is not properly parsed", Long. valueOf ( 3 ), parsed )
21210	assertEquals ( expectedParsedResult, actualParsedResult )
21211	assertNotNull ( "JobSubmission is null", entity )
21212	assertEquals ( original, ArrayUtils. nullToEmpty ( original ) )
21213	assertResponse ( DataMockery. createREQMODWithGetRequestResponse ( ), response )
21214	Assert. assertTrue ( originalId. equals ( packetExternal. getID ( ) ) )
21215	assertTrue ( BitsInt. test ( v, false, 31 ) )
21216	Assert. areEqual ( "2", hs. get ( "count" ). toString ( ), "select count(*) as count from test1 where (test1.colu2 not in('DB_D','DB_E')) limit 0,1 " )
21217	assertTrue ( getNoErrorMsg ( ), result )
21218	Assert. assertEquals ( "a {\\n" + "  width: 2px;\\n" + "}\\n", compilation. getValue ( ) )
21219	assertTrue ( AcceptanceTestUtil. isInterested ( component, remoteWorkerStub. getDeploymentID ( ). getServiceID ( ), rmwOD. getDeploymentID ( ) ) )
21220	Assert. assertEquals ( "(nt_change_substitution (nt_point_location (nt_base_location (nt_number 123))) C > A)", nt_change_substitution. toStringTree ( parser ) )
21221	assertEquals ( vr. getValidity ( ), Validity. VALID )
21222	assertArrayEquals ( new long [ ] { }, result )
21223	assertEquals ( "myTestId", history. getIdElement ( ). getIdPart ( ) )
21224	assertTrue ( latch. await ( 4, SECONDS ) )
21225	assertEquals ( "Wrong class", MATCH_CLASS, provider. determineConfigurationClass ( decl, Collections. singleton ( params ) ) )
21226	assertEquals ( name. getName ( ), request. getLogName ( ). getName ( ) )
21227	Assert. assertEquals ( 1, ( int ) person. getPersonAttributeId ( ) )
21228	assertMockEndpointsSatisfied ( )
21229	assertEquals ( assertion, viewTest )
21230	assertEquals ( "</r/t/6>,</r/t/6/0>,</r/t/6/0/0>,</r/t/6/0/1>,</r/t/6/0/2>,</r/t/6/0/3>,</r/t/6/0/4>,</r/t/6/0/5>,</r/t/6/0/6>", strLinks )
21231	assertThat ( Util. booleanValue ( "ok", scope ), is ( true ) )
21232	assertPowerToughness ( playerA, woodlandChangeling, 3, 3 )
21233	assertTrue ( UrlUtils. isMatch ( consumerUrl, providerUrl ) )
21234	assertEquals ( 2, accounts. size ( ) )
21235	assertNotNull ( builder )
21236	assertArrayEquals ( splitString, testString3ExpectedSplit )
21237	assertThat ( PrettyTime. of ( Locale. GERMANY ). withReferenceClock ( clock ). printRelative ( PlainTimestamp. of ( 2014, 9, 3, 14, 30 ). atUTC ( ). toTemporalAccessor ( ), ZoneOffset. UTC ), is ( "gestern" ) )
21238	assertEquals ( 30, age )
21239	assertNull ( next )
21240	assertEquals ( "1", e. eval ( ). toPlainString ( ) )
21241	Assert. assertEquals ( 2, lc. getLoginIPHeadLikeOr ( ). length )
21242	assertNotNull ( result. getNodes ( ) )
21243	assertTrue ( r1 instanceof PublicCloneable )
21244	Assert. assertEquals ( 0.0, error, 1.0e-6 )
21245	assertEscalationEventDefinition ( "subProcessStart", "myEscalationCode" )
21246	assertSame ( GBP_2_34, test )
21247	assertEquals ( totalRPCCount, rowsCount )
21248	assertEquals ( ( byte ) 8, ( byte ) result. getByteWrapperValue ( ) )
21249	Assert. fail ( "Did not throw expected exception for value of type " + o. getClass ( ). getName ( ) )
21250	assertEquals ( "HTTP/1.1 200 OK", conn2. getHeaderField ( 0 ) )
21251	assertNotNull ( module )
21252	assertThat ( test1. hashCode ( ), is ( test2. hashCode ( ) ) )
21253	assertCollectionSerialization ( expected, collection )
21254	assertTrue ( Files. isSameFile ( p1, p2 ) )
21255	assertTrue ( page. asXml ( ). contains ( "true" ) )
21256	RestTest. assertErrorMessage ( response, 0, "Error", "Authorisation for [%s] %s failed\\nusing \\"%s:\\"\\nnot authenticated by: %s", "mntner", "OWNER-MNT", "mnt-by", "OWNER-MNT, OWNER-MNT" )
21257	assertEquals ( "8", result )
21258	assertEquals ( aMessage, res )
21259	assertEquals ( 1, postDTOs. size ( ) )
21260	assertAuthenticationResult ( getCurrentTestName ( ), s. auth ( ), false )
21261	assertThat ( GlobalTransaction. getActiveTransactions ( ). size ( ), is ( 0 ) )
21262	assertEquals ( "testValue", config. testKey ( ) )
21263	assertEquals ( GROUPS [ 0 ], getSubject ( ). getEnabledGroup ( ) )
21264	assertArrayEquals ( "Invalid change affected alignments", defaultAlignments, t. getColumnAlignments ( ) )
21265	Assert. assertEquals ( versao, protocolo. getVersao ( ) )
21266	assertEquals ( expectedNode, actualNode )
21267	assertEquals ( 0, hits. totalHits )
21268	assertNull ( output )
21269	assertEquals ( "Privacy policy generated not equal to the original policy", "<?xmlversion=\\"1.0\\"encoding=\\"UTF-8\\"?>" + cisPolicy. toXMLString ( ). replaceAll ( "[ \\n\\t]", "" ), privacyPolicy. replaceAll ( "[ \\n\\t]", "" ) )
21270	assertNotNull ( provider )
21271	assertThat ( host, is ( equalTo ( "2001:638:700:20d6::1:3a" ) ) )
21272	assertEquals ( node, IteratorUtil. singleOrNull ( db. findNodesByLabelAndProperty ( DynamicLabel. label ( "user" ), "name", "value" ) ) )
21273	Assert. assertEquals ( exception, exceptionArgumentCaptor. getValue ( ) )
21274	assertThat ( eqler. queryCnt ( ), is ( - 33 ) )
21275	Assert. assertEquals ( expected, s, 1e-15 )
21276	Assert. assertSame ( managerFactory, AbstractDecorator. getOriginalDecoratedObject ( victim. getManagerFactory ( ) ) )
21277	assertMeasure ( measure, CommitsPerClockHourMeasure. class, 26 )
21278	assertEquals ( testSesameTripleSubjectObjectBNode, tripleAsStatement )
21279	assertTrue ( template + " must match", i. matches ( template ) )
21280	assertEquals ( expResult, result )
21281	assertEquals ( "h2", actual )
21282	assertEquals ( HttpStatusCodes. INTERNAL_SERVER_ERROR. getStatusCode ( ), response. getStatusLine ( ). getStatusCode ( ) )
21283	assertEquals ( 1024, cli. getOptionValue ( "block size" ) )
21284	assertEquals ( "0: General use CPU\\n" + "1: Thread[engine,5,main] alive=true\\n" + "2: General use CPU\\n" + "3: Thread[main,5,main] alive=false\\n", actual )
21285	assertEquals ( "Incorrect qualifyFreq", 6000, ( int ) response. getQualifyFreq ( ) )
21286	assertNotNull ( graph. getVertex ( vid. get ( ). getId ( ) ) )
21287	assertEquals ( presenter. getLastSearch ( ), "a" )
21288	Assert. assertEquals ( 2, retireable. getRetiredBy ( ). getId ( ). intValue ( ) )
21289	assertEquals ( "From Server 30", client. testPrimitiveTypes ( request ). getOut ( ) )
21290	assertFalse ( "adapter does not support method", result )
21291	assertSame ( a1, a2 )
21292	files. assertHasDigest ( INFO, actual, digest, expected )
21293	assertEquals ( DecodeQualification. SUITABLE, decodeQualification )
21294	assertEquals ( message. toString ( ), sb. toString ( ) )
21295	assertThat ( result, instanceOf ( type ) )
21296	assertNotNull ( crs )
21297	assertThat ( path. isFile ( ), is ( true ) )
21298	assertThat ( response, is ( String. format ( "" + "{\\n" + "  \\"link\\" : {\\n" + "    \\"type\\" : \\"locator\\",\\n" + "    \\"href\\" : \\"http://localhost:%s/test/mntner/OWNER-MNT\\"\\n" + "  },\\n" + "  \\"objects\\" : {\\n" + "    \\"object\\" : [ {\\n" + "      \\"type\\" : \\"mntner\\",\\n" + "      \\"link\\" : {\\n" + "        \\"type\\" : \\"locator\\",\\n" + "        \\"href\\" : \\"http://rest-test.db.ripe.net/test/mntner/OWNER-MNT\\"\\n" + "      },\\n" + "      \\"source\\" : {\\n" + "        \\"id\\" : \\"test\\"\\n" + "      },\\n" + "      \\"primary-key\\" : {\\n" + "        \\"attribute\\" : [ {\\n
21299	assertEquals ( 2L, count )
21300	assertTrue ( result. isNewObject ( ) )
21301	assertEquals ( i, num )
21302	assertThat ( view. elementIsDisplayed ( By. id ( "some-element" ) ), is ( false ) )
21303	assertTrue ( true )
21304	assertEquals ( new BigDecimal ( "30.0" ), ticket. getDiscountPrice ( ) )
21305	Assert. assertEquals ( ValidationResult. Result. ERROR, sink. validate ( null ). getStatus ( ) )
21306	assertArrayEquals ( new byte [ ] { ( byte ) 0xF1, 0x10, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, ( byte ) 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46 }, asn1. getOctets ( ) )
21307	assertEqualsIgnoreWhitespace ( expected, real )
21308	Assert. assertEquals ( 1, result. getEntities ( ). size ( ) )
21309	assertEquals ( "one", fixture. getHeaders ( ). get ( "header1" ) )
21310	assertEquals ( webSocketHandler. calculateHeaderSize ( WebSocketHeader. PAYLOAD_SHORT_MAX ), WebSocketHeader. MIN_HEADER_LENGTH_MASKED )
21311	assertEquals ( WashingMachineState. ENABLED, washingMachine. getWashingMachineState ( ) )
21312	Assert. fail ( )
21313	assertNotNull ( XmlW3CHelper. getDomFromString ( xml ) )
21314	assertTrue ( params. isEmpty ( ) )
21315	assertEquals ( expResult, result, 0.000001 )
21316	assertNotNull ( result )
21317	assertResultsEqual ( renderChild ( net, add1 ), 101.0, 102.0, 103.0 )
21318	assertThat ( b, is ( true ) )
21319	assertThat ( supported, is ( false ) )
21320	assertThat ( cursor. proceedTo ( 'a' ), is ( true ) )
21321	assertTrue ( capabilities. hasLayer ( "cite:NamedPlaces" ) )
21322	assertEquals ( 3d, item. getDouble ( ), 0 )
21323	assertTrue ( result. size ( ) == 2 )
21324	Assert. assertEquals ( "[6, 2, 8, 1, 4, 3, 5]", values. toString ( ) )
21325	assertNull ( out )
21326	assertSame ( jv1, jv2 )
21327	assertEquals ( "Expected 0 results!", 0, n )
21328	assertRequestOk ( "/test13", "test13_ok_request.json", "test13_ok_response.json" )
21329	assertEquals ( "rf-dg-body", ( ( HtmlElement ) dataGrid. getFirstByXPath ( "tbody[@id='dataGrid2:dgb']" ) ). getAttribute ( "class" ) )
21330	assertThat ( objectMessages. hasErrors ( ), is ( false ) )
21331	assertNotNull ( path )
21332	assertEquals ( "world", result. getString ( "hello" ) )
21333	assertErrorEventDefinition ( "end", "myErrorCode", null )
21334	assertEquals ( expected, actual )
21335	assertElementPresent ( By. className ( "v-datefield-popup" ) )
21336	assertEquals ( "OK", result. getResult ( ) )
21337	assertSame ( p3, result )
21338	assertSame ( stringMessageBodyWriter, applicationProviders. getMessageBodyWriter ( String. class, null, null, TEXT_PLAIN_TYPE ) )
21339	assertEquals ( true, uploadResult. isValid ( ) )
21340	assertThat ( students, not ( empty ( ) ) )
21341	assertThat ( underTest. mapArray ( parser, context ), nullValue ( ) )
21342	assertThat ( axioms, hasItem ( axiom ) )
21343	assertArrayEquals ( "Arguments", new String [ ] { "-xargs", m_platformContext. getFilePathStrategy ( ). normalizeAsUrl ( new File ( m_workDir, "knopflerfish/config.ini" ) ) }, new KnopflerfishPlatformBuilderF200T233 ( m_bundleContext, "version" ). getArguments ( m_platformContext ) )
21344	Assert. assertNotNull ( addressResultsDto )
21345	Assert. assertEquals ( "SELECT something\\nFROM tbl_name\\nWHERE DATE_SUB(CURDATE(), INTERVAL 30 DAY) <= date_col;", text )
21346	assertEquals ( current. < String > getAs ( field. name ( ) ), format. format ( new Date ( currentTimeMillis ) ) )
21347	assertEquals ( "void dest1()", toString ( dest ) )
21348	assertEquals ( typeMapping. get ( Types. NUMERIC, 19, 0 ), BigInteger. class )
21349	assertArrayEquals ( new String [ ] { "a", "t" }, commandInvocation. args ( ) )
21350	assertThat ( errors. getAllErrors ( ), hasSize ( 0 ) )
21351	assertEquals ( 6.0, metrics. metrics ( ). get ( new MetricName ( "test1.total", "grp1" ) ). value ( ), EPS )
21352	assertEquals ( before, after )
21353	assertTrue ( "Byte arrays should be equal", Arrays. equals ( stringBytes, outputStream. toByteArray ( ) ) )
21354	assertEquals ( "[]", errors. toString ( ) )
21355	Assert. assertTrue ( row. matches ( guess ) )
21356	assertThat ( actual, is ( equalTo ( expected ) ) )
21357	assertEquals ( file, expected, html. trim ( ) )
21358	Assert. assertNotNull ( customerprofileId )
21359	assertEquals ( expected, asmResult )
21360	assertEquals ( 1, processorsFactory. getPreProcessors ( ). size ( ) )
21361	assertTrue ( page. asXml ( ). contains ( "Great! You are now in the correct destination view." ) )
21362	assertFuzzy ( min, result, createFromGiven ( 20.0, 10 ) )
21363	assertEquals ( connMock, connection )
21364	assertTrue ( className. equalsIgnoreCase ( Number. class. getSimpleName ( ) ) )
21365	Assert. assertNotNull ( testSession )
21366	assertNull ( fileInfo )
21367	assertFalse ( "unexpected value", value )
21368	assertTrue ( job. isSuccessful ( ) )
21369	assertEquals ( logLine, "log line" )
21370	assertNotNull ( "Class " + NAME + " not found!", c )
21371	assertEquals ( 0, flag [ 0 ] )
21372	assertProcessInstanceAborted ( processInstance. getId ( ), ksession )
21373	Assert. assertNotNull ( tested. prepareESBulkRequestBuilder ( ) )
21374	assertEquals ( player. getMinions ( ). get ( 1 ). getSourceCard ( ). getCardId ( ), "minion_neutral_test_1" )
21375	assertEquals ( expected, links )
21376	Assert. assertTrue ( success )
21377	assertThat ( option. isNull ( ), is ( true ) )
21378	Assert. assertNull ( identifierType )
21379	Assert. assertEquals ( ste. toString ( ), frame. toString ( ) )
21380	assertEquals ( expected, actual )
21381	Assert. assertEquals ( "THE REASON", retireable. getRetireReason ( ) )
21382	assertEquals ( "From is not properly parsed", ssdf. parse ( "2015-02-28" ), mapper. readFrom ( columns ) )
21383	Assert. assertTrue ( maxError < 0.001 )
21384	Assert. assertNotNull ( hostname )
21385	assertThat ( main. getMarkdownFile ( ), nullValue ( ) )
21386	assertEquals ( expecting, result )
21387	assertSame ( 0, ids. size ( ) )
21388	assertNull ( p2 )
21389	assertThat ( InterfaceWrapperHelper. getModelTableNameOrNull ( testModelRef ), is ( I_Test. Table_Name ) )
21390	assertTrue ( ns. isNameOp ( ) )
21391	assertThat ( e. hasMoreElements ( ), is ( false ) )
21392	Assert. assertEquals ( "The newly created test run should have the same description as the one we created", testRunCreator. getDescription ( ), actualTestRun. getDescription ( ) )
21393	Assert. assertEquals ( "Incorrect Compare Type", AbstractCompare. CompareType. EQUAL, compare. getCompareType ( ) )
21394	assertEquals ( 5L, count )
21395	assertEquals ( expected, result )
21396	Assert. assertTrue ( docIn == docOut )
21397	assertThat ( boundSql. getSql ( ), Matchers. equalTo ( "select " ) )
21398	assertEquals ( "the_value", obj )
21399	Assert. assertFalse ( result. isEmpty ( ) )
21400	Assert. assertEquals ( 0, resourceList. size ( ) )
21401	assertTrue (! result )
21402	assertEquals ( "llvalue1", result )
21403	assertEquals ( 1, rulesFired )
21404	assertFalse ( prefs. matches ( t ) )
21405	assertOut ( "var /** @type {URIError} */ a = new URIError()" )
21406	assertTrue ( history. isStepBackAllowed ( ) )
21407	assertThat ( this. shop. getProducts ( ). get ( 0 ), is ( bread ) )
21408	assertTrue ( ns. size ( ) == 0 )
21409	assertEquals ( ( ( ObjectWithOptions ) options. optOp ). required, 10101 )
21410	assertThat ( response. getBody ( ), containsString ( "Hello World, Buddy" ) )
21411	assertThat ( description. toString ( ), is ( "got <2> row(s) in sheet \\"Sheet1\\" expected <3>" ) )
21412	assertNotNull ( "getpwuid failed", pwd )
21413	assertThat ( built. getId ( ), is ( "John Smith" ) )
21414	assertEquals ( expected, sb. toString ( ) )
21415	AssertionUtils. multiAssertEquals ( createAsDocument10, response5. getResponseObject ( ) )
21416	assertThat ( response. getStatus ( ), equalTo ( 200 ) )
21417	assertEquals ( result, "John,Jane,Adam,Tom" )
21418	assertFalse ( TestService. LIFECYCLE. contains ( "serverStatusChange" ) )
21419	assertThat ( list. size ( ), is ( 2 ) )
21420	assertEquals ( "V2 Comment", wrapper. getComment ( ) )
21421	assertThat ( encodedURL, equalTo ( ENCODED_URL_VALUE ) )
21422	assertEquals ( "bar", cl. getOptionValue ( "foo" ) )
21423	assertEquals ( padded ( OBJECT_OVERHEAD + OBJECT_REF ) + padded ( ARRAY_OVERHEAD + 7 * CHAR ), ThreadTrackingContext. getBytes ( ) )
21424	assertEquals ( expecting, found )
21425	assertThat ( response. getBody ( ), equalTo ( "Hello World" ) )
21426	Assert. assertNull ( devBean )
21427	assertEquals ( value, spreadSheet. getCellAt ( "B1" ). getCssValue ( "background-color" ) )
21428	assertEquals ( "dois inteiros", actual )
21429	assertOut ( "<Button></Button>" )
21430	assertEquals ( "submission was not properly returned", 15.0f, percentageComplete, DELTA )
21431	Assert. assertNull ( service. getRoleById ( 1000L ) )
21432	assertFalse ( "result cannot be true", result )
21433	assertEquals ( "LIMIT 5", statement. toString ( ) )
21434	assertEquals ( Result. FAIL, group. apply ( item ) )
21435	assertEquals ( "<p>This is a paragraph</p> \\n" + "<hr> \\n" + "<p>This is a paragraph after a horizontal rule</p>", result )
21436	Assert. assertEquals ( 400, statusCode )
21437	Assert. assertEquals ( "failed for " + testClass, expectedInstructions, visitedInstructions )
21438	assertTrue ( grid. getSelectedRows ( ). isEmpty ( ) )
21439	assertEquals ( "unexpected phase", "user-protocol", pi. getPhase ( ) )
21440	Assert. assertEquals ( 3, nics. size ( ) )
21441	Assert. assertThat ( version, is ( nullValue ( ) ) )
21442	assertEquals ( toPercentage ( scale + ZOOM_INCREMENT ), zoomUI. getPercentageZoom ( ) )
21443	Assert. assertNull ( this. manager. get ( this. person1 ) )
21444	assertEquals ( renderGroupIdArtifactIdVersionOptionalResult ( ), result )
21445	assertNotNull ( result )
21446	Assert. assertEquals ( 0, containerResource. getContainerContents ( ). size ( ) )
21447	assertJustDelta ( alpha )
21448	Assert. assertEquals ( "�驻�� 41 �拽�转", prettyTime. format ( prettyTime. calculatePreciseDuration ( new Date ( new Date ( ). getTime ( ) - 40 * 60 * 1000 - 40 * 1000 ) ) ) )
21449	assertNotNull ( dataCollectionState )
21450	assertEquals ( 5, vowelCount )
21451	Assert. assertEquals ( 4, decomposition. size ( ) )
21452	assertNull ( ref. get ( ) )
21453	assertThat ( actual, is ( equalTo ( expected ) ) )
21454	assertThat ( books, hasItems ( new Book ( "New Book #151", 151 ), new Book ( "New Book #152", 152 ), new Book ( "New Book #153", 153 ), new Book ( "New Book #154", 154 ) ) )
21455	assertThat ( actual, equalTo ( expected ) )
21456	assertEquals ( expecting, found )
21457	assertEquals ( 40, new AcceptsLambda < Integer > ( ). accept ( l ). intValue ( ) )
21458	assertEquals ( RIB_NOT_FOUND, this. output. toString ( ) )
21459	assertTrue ( result >= 33f && result <= 42f )
21460	assertFalse ( event. isPresent ( ) )
21461	assertTrue ( entity. getId ( ) > 0 && entity. getBirthDate ( ) == null )
21462	assertEqualsIgnoreLineEnding ( Json. pretty ( rep ), "{\\n" + "  \\"int64\\" : 4321\\n" + "}" )
21463	assertThat ( result, isFailedCommand ( ) )
21464	Assert. assertThat ( i, is ( 19 ) )
21465	assertTrue ( aNumber == result )
21466	assertEquals ( new Float ( 0 ), minPreference )
21467	assertOut ( "var /** @type {number} */ a = parseInt(\\"666\\", 10)" )
21468	Assert. assertEquals ( configNew, configOld )
21469	assertEquals ( HttpStatusCode. NO_CONTENT. code, response. getStatus ( ) )
21470	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
21471	given ( ). port ( jettyPort ). log ( ). all ( ). when ( ). get ( "/openapi.json" ). then ( ). log ( ). all ( ). assertThat ( )
21472	assertEquals ( "<a>One</a> Two Three <i>Four</i> Fix <i>Six</i>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
21473	assertEquals ( r. size ( ), 0 )
21474	assertEquals ( LockMode. WRITE, mComposite. getLockMode ( ) )
21475	assertEquals ( "no-cache,no-transform", cc. toString ( ) )
21476	assertEquals ( choice1, choice2 )
21477	assertEquals ( ConcreteSubclass. class, fr2. getSource ( ). getVariableClass ( ) )
21478	assertThat ( page. element ( page. firstName ). getValue ( ), is ( "<enter first name>" ) )
21479	assertFailure ( scanner, "1", 1, 1 )
21480	assertEquals ( "hdfs://uri1:8200/blah", uri. getName ( ) )
21481	assertEquals ( "california street, ca", real )
21482	assertEquals ( originalFetchCount, timeline. getFetchCount ( ) )
21483	assertTrue ( true )
21484	assertSame ( platformTransactionManager, configuration. getTransactionManager ( ) )
21485	assertEquals ( pp. getValue ( ), new Payload < > ( "error 4 test error" ). getValue ( ) )
21486	assertEquals ( NAME_NODE, action. getNameNode ( ) )
21487	Assert. assertFalse ( policy. isResponseCacheable ( "GET", response ) )
21488	assertTrue ( "Incorrect chars returned", new String ( buf, 0, buf. length ). equals ( testString ) )
21489	assertDirectoryNotEmpty ( CSS_LOCATION )
21490	assertEquals ( 10000, allRecordNum )
21491	assertEquals ( "[x=10.0][y=0.0]", s. getDeliveryLocation ( ). getId ( ) )
21492	FactorDecompositionTest. assertFactorization ( lPoly, decomposition )
21493	assertCursor ( meta. pofClassAttribute, 1, 1, 10, 17 )
21494	Assert. assertEquals ( expectedLoginId, loginId )
21495	assertEquals ( "Must return self", sut, result )
21496	assertEquals ( f, p. getRelationshipTo ( p2, Friendship. class, "knows" ) )
21497	assertE ( "         " + "         " + "         " + "         " + "         " + "    x    " + "   xxx   " + "  oxoox  " + "oxooooox " )
21498	assertEquals ( "bar", result )
21499	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
21500	Assert. assertNotNull ( personStructure )
21501	assertEquals ( "test", beanWrapper. getPropertyValue ( "hiddenProperty" ) )
21502	assertEquals ( "[{\\"groupName\\":\\"SomeCounterGroupName1\\",\\"counters\\":[{\\"counterN" + "ame\\":\\"SomeCounterName1\\",\\"value\\":3},{\\"counterName\\":\\"SomeCount" + "erName2\\",\\"value\\":4},{\\"counterName\\":\\"SomeCounterName3\\",\\"value" + "\\":5},{\\"counterName\\":\\"SomeCounterName1\\",\\"value\\":6},{\\"counterN" + "ame\\":\\"SomeCounterName2\\",\\"value\\":7},{\\"counterName\\":\\"SomeCount" + "erName3\\",\\"value\\":8},{\\"counterName\\":\\"SomeCounterName1\\",\\"value" + "\\":9},{\\"counterName\\":\\"SomeCounterName2\\",\\"value\\":10},{\\"counter" + "Name\\":\\"SomeCounterName3\\",\\"value\\":11}]},{\\"groupName\\":\\"SomeCou" + "nterGroupName2\\",\\"counters\\":[{\\"counterName\\":\\"SomeCounterName1\\""
21503	assertExec ( "Loading a precompiled resource:", Resources. class, "loadClazz__Ljava_lang_String_2", exp )
21504	Assert. assertTrue ( readable )
21505	assertThat ( messageIdLocalPart, containsString ( "No-Message-Id." ) )
21506	assertEquals ( BROKER_1, broker. get ( ) )
21507	assertEquals ( 404, response. getStatus ( ) )
21508	assertEquals ( "(SOURCEFIELD1 =='sourceValue' AND TARGETFIELD1 == 'targetValue' AND ENRICHFIELD1 == 'enrichValue1') OR (SOURCEFIELD2 =='sourceValue' AND TARGETFIELD2 == 'targetValue')", transformed )
21509	assertTrue ( false )
21510	assertFalse ( ca. isStrokeEnabled ( ) )
21511	assertEquals ( 0, bpt. getOutputError ( ). getTotalNetworkError ( ), 0.1 )
21512	assertTrue ( processesList!= null && processesList. size ( ) > 0 )
21513	context. assertIsSatisfied ( )
21514	assertSuccessOrCancelled ( response )
21515	assertThat ( editor. getValue ( ), is ( ( Object ) ReadPreference. preferSecondary ( BuilderFactory. start ( ). add ( "a", 1 ) ) ) )
21516	assertOut ( "var /** @type {number} */ a = 0, /** @type {number} */ b = 0, /** @type {number} */ c = 0" )
21517	assertArrayEquals ( expected, set. toArray ( ) )
21518	assertEquals ( 6, services. size ( ) )
21519	Assert. assertFalse ( verifyTest ( builder ) )
21520	assertPlanMatches ( sort )
21521	assertEquals ( ImmutableList. of ( $ ( "foot", 4 ), $ ( "ball", 4 ), $ ( "bazzar", 6 ) ), Lists. newArrayList ( out. materialize ( ) ) )
21522	Assert. fail ( "build listing failure" )
21523	Assert. assertEquals ( testDN, actual. getUserDN ( ) )
21524	assertEquals ( "ORACLE", rootNode. getProperty ( StandardDdlLexicon. PARSER_ID ) )
21525	assertNull ( count )
21526	Assert. assertTrue ( marshalled. contains ( Namespace. CURRENT. getUriString ( ) ) )
21527	assertArrayEquals ( getEncoded ( expectedCsr ), csr. getEncoded ( ) )
21528	assertFalse ( alive )
21529	Assert. assertEquals ( content, result )
21530	assertEquals ( "Should get a 404 response", HttpStatus. NOT_FOUND, mongodbFeedSource. getFeed ( getFeedRequest ). getResponseStatus ( ) )
21531	Assert. assertTrue ( salBulkFlowService. flowRpcAddMultiple ( flowRpcAddMultipleInput ). get ( ). isSuccessful ( ) )
21532	assertEquals ( format ( "%s should have been reserved=%s but was reserved=%s", name, expectedResult, result ), expectedResult, result )
21533	Assert. fail ( "ProtocolException should have been thrown" )
21534	Assert. assertNull ( "Should be null, as it is also null in the original execution on the server.", returnedProcessInstanceId )
21535	assertEquals ( "Expected 0 results!", 0, n )
21536	assertions. isNotLessThan ( expected )
21537	assertThat ( result, is ( jsonBoolean ( true ) ) )
21538	assertThat ( subject. toFilterExpression ( ), is ( "(& (osgi.os=macosx) (osgi.arch=ppc) )" ) )
21539	assertNotNull ( "Configuration for todo REST must not be null.", configuration )
21540	assertEquals ( "JBAS014370: EJB 3.1 PFD2 4.8.5.1.1 upgrading from read to write lock is not allowed", cause. getMessage ( ) )
21541	Assert. assertEquals ( expected, actual )
21542	Assert. assertTrue ( list. size ( ) == 10 )
21543	rule. assertScenarioEnded ( )
21544	Assert. assertFalse ( ldap. authenticate ( "user", "password" ) )
21545	assertEquals ( expected, actual )
21546	assertThat ( NamespaceManager. get ( ), is ( nullValue ( ) ) )
21547	assertEquals ( "13 mins", microdata. getFirstProperty ( "cookTimeValue" ) )
21548	assertEquals ( expected, producer. dump ( testSet ) )
21549	assertEquals ( ONT2, shortForm )
21550	assertEquals ( "Successfully registered 2 applications from 'test://example'", result )
21551	Assert. assertEquals ( "unexpected xml protocol values", expected, copy. getParsedTags ( ) )
21552	Assert. assertEquals ( DistCpUtils. getRelativePath ( root, child ), "/a" )
21553	assertTrue ( now. getValue ( ). before ( then. getValue ( ) ) )
21554	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Leave/>", elem. toXml ( ) )
21555	assertPotentialOwnerIsNotPresent ( )
21556	assertThat ( actionUrl, is ( equalTo ( "/rc/sp/si" ) ) )
21557	assertThat ( actual, is ( equalTo ( expected ) ) )
21558	assertEquals ( 1, r )
21559	assertThat ( request, instanceOf ( VaadinLiferayRequest. class ) )
21560	Assert. assertThat ( "examples is reachable", examples. exists ( ), is ( true ) )
21561	assertEquals ( documento, documentoModificado )
21562	assertEquals ( Integer. parseInt ( EVSE_ID. getId ( ) ), unlockConnectorArgument. getValue ( ). getConnectorId ( ) )
21563	assertEquals ( 2, user. getRoles ( "playground" ). size ( ) )
21564	assertEquals ( 5, resources. size ( ) )
21565	assertEquals ( " ", getLogRow ( 0 ) )
21566	assertSqlCanBeParsedAndDeparsed ( stmt )
21567	Assert. assertEquals ( "answer=42", actual )
21568	assertEquals ( 90, ( ( Service ) vrp. getJobs ( ). get ( "2" ) ). getServiceDuration ( ), 0.1 )
21569	assertEquals ( ImmutableMap. of ( "foo", newArrayList ( "bar" ) ), response. getStringHeaders ( ) )
21570	assertEquals ( expected, actual )
21571	Assert. assertEquals ( elements. size ( ), dto. getElements ( ). size ( ) )
21572	assertEquals ( Integer. valueOf ( HttpServletResponse. SC_OK ), status. get ( ) )
21573	assertThat ( newerBundleInfo. isNewerVersionThan ( olderBundleInfo ), is ( true ) )
21574	Assert. assertEquals ( 1, lines. length )
21575	Assert. assertTrue ( response. getStatus ( ) == NO_CONTENT. getStatusCode ( ) )
21576	Assert. assertNull ( new CompareTool ( ). compareByContent ( filename, sourceFolder + "cmp_" + file, destinationFolder, "diff_" ) )
21577	Assert. assertEquals ( 2, list. size ( ) )
21578	Assert. assertEquals ( "", result )
21579	assertEquals ( 1, testMap. keySet ( ). size ( ) )
21580	assertThat ( result, is ( location. getString ( context. getNamespaceRegistry ( ) ) ) )
21581	assertEquals ( HttpStatus. SC_OK, response. getStatusLine ( ). getStatusCode ( ) )
21582	assertThat ( CircusTrainCopyListing. getRootPath ( conf ), is ( path ) )
21583	assertEquals ( "[{\\"name\\":\\"table 1\\",\\"pkPolicy\\":\\"user_generated_value\\",\\"fields\\":[{\\"name\\":\\"id\\",\\"type\\":\\"string\\",\\"isPrimaryKey\\":true},{\\"name\\":\\"column 1\\",\\"type\\":\\"tableNameTarget\\",\\"nullable\\":true,\\"defaultValue\\":\\"default\\",\\"minOccurs\\":0,\\"maxOccurs\\":\\"*\\"}]}]", content )
21584	assertTrue ( "Unexpected message content", newMessage. contains ( announcementMessage ) )
21585	assertEquals ( " 0 ", getPopupMessage ( ) )
21586	assertThat ( "shall have a provider", sut. getProvider ( ), is ( not ( nullValue ( ) ) ) )
21587	assertTrue ( isExist ( wsdls, "//xsd:element[@name='Notify']", getNamespaces ( ) ) )
21588	assertEquals ( DropdownField. FIELD_TYPE, f. getFieldType ( ) )
21589	assertEquals ( expected, actual )
21590	assertFalse ( "Reloading state not reset", strategy. isReloadingRequired ( ) )
21591	assertTrue ( pages. contains ( gwtCommandPagePresenter ) )
21592	assertThat ( parliamentDataWithURL ( invalidUrl ). getParliamentURL ( ), is ( "http://" + invalidUrl ) )
21593	assertEquals ( "UPDATE person SET first_name =?, favourite_number =? WHERE last_name =? AND first_name!=? AND first_name LIKE?", sql. trim ( ) )
21594	assertEquals ( 100, frame. getLong ( ) )
21595	Assert. assertEquals ( input, HtmlSanitizerUtil. sanitize ( input ) )
21596	assertNotNull ( result )
21597	assertThat ( renderer. getShortForm ( entity ), is ( "rdfs:isDefinedBy" ) )
21598	assertNotNull ( keys )
21599	ModelTestBase. assertIsoModels ( expected, y )
21600	a. assertStringNode ( "urn:ogc:object:Sensor:latlon:foobarnator", "//om:procedure/@xlink:href" )
21601	assertTrue ( fieldDefinitionName. isUnique ( ) )
21602	assertDateEquals ( new DateTime ( 2013, 5, 20, 15, 30, 20, 999 ), date )
21603	assertOut ( "/**\\n * @interface\\n * @extends {IB}\\n * @extends {IC}\\n * @extends {ID}\\n */\\nIA = function() {\\n};" )
21604	assertEquals ( "", found )
21605	assertSame ( "The manager should be the same.", manager, oldManager )
21606	$ ( "#sq" ). assertThat ( )
21607	assertTrue ( comparePomFiles ( reactorProjects ) )
21608	rule. assertScenarioEnded ( )
21609	assertEquals ( 2, Solutions. bestOf ( solutions ). getRoutes ( ). size ( ) )
21610	Assert. assertTrue ( "should have gotten fileNotFoundException", gotError )
21611	assertEquals ( 0, runtimeService. createEventSubscriptionQuery ( ). count ( ) )
21612	assertEquals ( "1,1", decoder. encode ( BigDecimal. valueOf ( 11, 1 ), COMMA_DEC_DELIMITERS ) )
21613	assertEquals ( "_cat/allocation/testNode", cat. getURI ( ElasticsearchVersion. UNKNOWN ) )
21614	assertThat ( output. getValue ( ), equalTo ( "This is a test!\\n" ) )
21615	TestHelpers. assertJSONEqual ( stringFromStdout, toJSON ( STANDARD_REQUEST. getInputs ( ) ) )
21616	Assert. assertArrayEquals ( expectedMasterSecret, calculatedMasterSecret )
21617	assertEquals ( 1, result )
21618	assertTrue ( bytesString. equals ( bodyString ) )
21619	Assert. assertNotEquals ( firstConfig, secondConfig )
21620	Assert. assertNotNull ( "translated query not created", translatedQuery )
21621	Assert. assertTrue ( "We should have a complete header", bufPos!= - 1 )
21622	Assert. assertEquals ( - 1L, ( long ) response. getBodySize ( ) )
21623	assertEquals ( witness, node )
21624	Assert. assertEquals ( expectedPath, normalizedPath )
21625	child. executeTest ( ). assertTestSuiteResults ( 1, 0, 0, 0 )
21626	assertEquals ( "xxxx", snapshot. utf8 ( ) )
21627	assertThat ( condition. isSatisfied ( ), is ( true ) )
21628	assertEquals ( mockHexBinaryValue, result )
21629	assertNotNull ( "Must not be null", testResult )
21630	assertEquals ( 14, metrics. size ( ) )
21631	assertThat ( value, equalTo ( "set_VALUE_get" ) )
21632	assertThat ( $. url ( ), endsWith ( "WithoutJSTest_2.html?aName=aValue" ) )
21633	assertThat ( data. getMessage ( ), is ( "Processing log failed" ) )
21634	assertEquals ( hsr1, hsr2 )
21635	arrays. assertDoesNotContain ( description, actual, values )
21636	assertEquals ( "select length(trim(entity_0.code)) from Entity entity_0", select. getQuery ( ) )
21637	assertEquals ( fieldDefinition, res )
21638	Assert. assertEquals ( 0.0, StatUtils. mean ( sample ), 0.3 )
21639	assertEquals ( projectName, newName )
21640	Assert. assertEquals ( generatedStrPath, expectedStrPath )
21641	assertTrue ( impl. getIsApiToken ( ) )
21642	assertEquals ( "test", echo. echo ( "test" ) )
21643	assertNull ( array )
21644	assertTrue ( rt. getEventType ( ). equals ( EventType. M_ZK_ENTITYGROUP_CLOSING ) )
21645	assertTrue ( nullCap == null )
21646	assertTestDeleteDataStore ( )
21647	assertThat ( PlainTime. axis ( ). getBaseUnit ( DIGITAL_HOUR_OF_DAY ), is ( unit ) )
21648	assertEquals ( expected, this. fsParser. extractFlowspec ( entry. build ( ) ) )
21649	assertSum ( imageA, imageB, sum )
21650	assertNotNull ( loop )
21651	assertThat ( command. accept ( state ), is ( true ) )
21652	assertTrue ( actual. isEmpty ( ) )
21653	assertLog ( Log. DEBUG, "test debug" )
21654	assertFalse ( "Data was not removed", appDataTestInstanceRemoved. getValues ( ). containsKey ( "viewcount" ) )
21655	assertThat ( ints. length, is ( 3 ) )
21656	assertThat ( parameters, is ( "?searchView=own&offset=5&limit=10&orderBy=leastTimeLeft&show=running&minSupportCount=50" ) )
21657	assertEquals ( sa, result )
21658	assertEquals ( Lists. newArrayList ( v4, v3, v2, v1 ), path )
21659	Assert. assertTrue ( intersect instanceof CompositeRange )
21660	Assert. assertTrue ( "Timed out waiting for timer task completion", schedulerLatch. await ( 2 * DELAY_MS, TimeUnit. MILLISECONDS ) )
21661	assertTrue ( Pattern. matches ( "(?s).*START.*Amsterdam.*821702.*Rotterdam.*624799.*Den Haag.*514782.*END.*", page. asXml ( ) ) )
21662	assertThat ( ctrl. createMock ( ToMock. class ), is ( ToMock. class ) )
21663	assertTrue ( incrementalReasoner. shutdown ( ) )
21664	assertThat ( properties. size ( ), is ( 0 ) )
21665	assertEquals ( 0.02943873, m, 1e-4 )
21666	assertTrue ( httpStack!= null )
21667	assertTrue ( i1. contains ( new DiscreteInterval ( 3, 6 ) ) )
21668	Assert. assertEquals ( new URI ( "http://absolute-url.fr/folder/readme.txt" ), UriUtils. buildNewURI ( new URI ( url ), suffix ) )
21669	assertEquals ( result, range. exclude ( other ) )
21670	assertEquals ( 4, BufferTools. indexOfTerminator ( buffer, 0, 1 ) )
21671	assertEquals ( expectedReference, summary. getReference ( ) )
21672	assertNotNull ( result )
21673	assertTrue ( p. matcher ( tags ). matches ( ) )
21674	assertNotNull ( jobResult )
21675	assertTrue ( result. getDescription ( ). startsWith ( "The ParametersInterceptor in Apache Struts" ) )
21676	assertThat ( tupleComparator. compare ( new Tuple ( 1, - 1, 1 ), new Tuple ( - 1, 1, - 1 ) ), is ( - 1 ) )
21677	assertEquals ( BuilderFactory. start ( ). addMinKey ( "a" ). build ( ), doc )
21678	assertObjectEquals ( "[null,{f:'a'},{f:'b'},{f:'c'}]", p. run ( bs, in, sa ) )
21679	assertThat ( caughtException ( ), instanceOf ( TaxServiceUnavailableException. class ) )
21680	assertTrue ( provided instanceof HTableFactory. HTableFactoryImpl )
21681	assertEquals ( expected, built )
21682	runner. assertNotValid ( serviceImpl )
21683	assertNotNull ( op )
21684	assertNotNull ( injector )
21685	Assert. assertEquals ( "URI don't match and Hnadshake  exception is not thrown", true, exThrown )
21686	assertEquals ( Code. INTERNAL, statusCaptor. getValue ( ). getCode ( ) )
21687	assertInState ( STATE. STOPPED, services )
21688	assertEquals ( expResult, result )
21689	assertTrue ( lastRefLog. getComment ( ). startsWith ( "branch: Created from branch" ) )
21690	Assert. isTrue ( orders. get ( 0 ). getOrderId ( ). equals ( 50000280834672L ) )
21691	assertEquals ( "(1,2,3,4,5)", asSequenceStr ( result ) )
21692	Assert. assertEquals ( false, dataModelLoadBalancer. getHalfClosed ( ) )
21693	assertTrue ( satisfiesPrecondition ( cu ) )
21694	assertThat ( domain. getValidationFailures ( resourceLookup ), empty ( ) )
21695	assertTrue ( i + ", " + file. getAbsolutePath ( ), file. delete ( ) )
21696	Assert. assertEquals ( 1, count )
21697	assertFalse ( mdxBaseComponent. prepareQuery ( "select * from table" ) )
21698	Assert. fail ( "Failed to detect out of bounds" )
21699	quote. assertIsSatisfied ( )
21700	assertResult ( target )
21701	Assert. assertTrue ( "Queue name not encoded correctly into job history file", jobHistoryFile. contains ( QUEUE_NAME_WITH_DELIMITER_ESCAPE ) )
21702	assertThat ( builderAnnotated. picoContainer ( ), sameInstance ( picoContainer ) )
21703	Assert. assertEquals ( expected, actual )
21704	assertNotNull ( result )
21705	assertThat ( info. getServerService ( SERVER ), nullValue ( ) )
21706	assertEquals ( 0, findings. size ( ) )
21707	assertEquals ( "Option value", "-Dhttp.port=80 -Dhttp.port.secure=443", commandLine. getOption ( "simpleOption" ) )
21708	Assert. assertEquals ( expectedCarIds, actualCarIds )
21709	assertEquals ( "user", dataSet. applyCaseInsensitivity ( "uSeR" ) )
21710	assertOut ( "var /** @type {Object} */ a = function(foo, bar) {\\n\\tbar = typeof bar!== 'undefined'? bar : 'goo';\\n\\treturn -1;\\n}" )
21711	Assert. assertEquals ( parentFirstStepPosition, runEnv. removeNextStepPosition ( ) )
21712	assertTrue ( indels. isEmpty ( ) )
21713	assertFalse ( problem )
21714	assertEquals ( sayHi, dr. getName ( ) )
21715	Assert. assertNotNull ( is )
21716	Assert. assertEquals ( "[3, 4]", intersection. toString ( ) )
21717	Assert. assertArrayEquals ( expected, AnnotationUtils. getAnnotatedAnnotations ( getClass ( ). getDeclaredField ( "fieldWithNotMarked" ), Marker. class ) )
21718	assertEquals ( Set2Answers. EXERCISE_10, set2. decryptMultipleTimePadInECB ( EX_10_CIPHERTEXT, EX_10_KEY, EX_10_IV ) )
21719	assertThat ( afterStartAction, instanceOf ( CustomAfterStartActionInstantiator. class ) )
21720	assertArrayEquals ( expectedFileModes, fileModesFromString )
21721	assertEquals ( "test", model. getObject ( ). getAdresses ( ). get ( 0 ). getStreet ( ) )
21722	assertVersionAndValue ( ref, initialVersion, initialValue )
21723	assertDefaultDirectories ( "foo", "bar" )
21724	assertNull ( fieldName )
21725	assertFalse ( proxyHttpHeader. isValid ( ) )
21726	assertTrue ( e. getMessage ( ). contains ( "cannot be null" ) )
21727	Assert. assertEquals ( xmlEsperado, medicamento. toString ( ) )
21728	assertThat ( le. getMessage ( ), startsWith ( "Detected multiple containers sharing local" ) )
21729	assertThat ( result, is ( lines ( new String [ ] [ ] { { "\\\\t" } } ) ) )
21730	Assert. assertEquals ( 200, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
21731	assertTrue ( defaultEditorAdapter. getUndoRedo ( ) instanceof DummyHandlesUndoRedo )
21732	assertEquals ( EXPECT. getAbsolutePath ( ), value )
21733	Assert. assertEquals ( 1, subscriptions. get ( ) )
21734	assertEquals ( "-6", result )
21735	assertEquals ( object, result )
21736	assertArrayEquals ( new float [ ] { 4, 5 }, destination. get ( ), DELTA )
21737	resp. assertContentContains ( "涓���" )
21738	assertEquals ( TransportType. OTHER, epp. getTransport ( ) )
21739	assertNotNull ( "Messages are not null", messages )
21740	Assert. assertEquals ( size, deerletRedisClient. dbsize ( ) )
21741	assertNotNull ( projectId )
21742	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Refer>" + "<genericTag key=\\"value\\">" + "someText" + "</genericTag>" + "</Refer>", elem. toXml ( ) )
21743	assertThat ( renderer. getFocusValueIndex ( ), equalTo ( 3 ) )
21744	assertEquals ( "SQL query does not match", result, test )
21745	Assert. assertTrue ( sky instanceof LocationExtended )
21746	assertNotNull ( firstTask )
21747	assertThrows ( IndexOutOfBoundsException. class, ( ) -> strings. set ( 3, "out of bounds" ) )
21748	Assert. assertEquals ( copy, anHourFromNow )
21749	assertEquals ( 1, rules )
21750	assertTrue ( "Grid cell (0, 0) should be focused", getGridElement ( ). getCell ( 0, 0 ). isFocused ( ) )
21751	assertEquals ( "亘毓丿 12 丿�丕卅�", t. format ( new Date ( 1000 * 60 * 12 ) ) )
21752	assertThat ( Functions. blobstoreUrl ( url ), is ( notNullValue ( ) ) )
21753	assertTrue ( wc. get ( boolean. class ) )
21754	assertEquals ( 2, ksession. fireAllRules ( ) )
21755	assertNotNull ( "No configuration", config. getConfiguration ( CHILD1 ) )
21756	assertEquals ( "a comment", testSet. getPlan ( ). getComment ( ). getText ( ) )
21757	assertEquals ( "HZG-1042", group20. getId ( ) )
21758	Assert. assertEquals ( resultNotes. getList ( ). size ( ), notes. size ( ) )
21759	assertEquals ( "(/)", expr. toString ( ) )
21760	assertEquals ( "a", peek. peek ( ) )
21761	assertSame ( testResult, result )
21762	assertEquals ( expectedSplits, new TreeSet < > ( createdSplits ) )
21763	assertEquals ( expecteds, actuals )
21764	assertSame ( exIn, exOut )
21765	Assert. assertEquals ( "Double decode brackets not correct", out, WebUtilities. doubleDecodeBrackets ( in ) )
21766	assertSame ( results, uriTools. resolveUri ( HELLOWORLD_URI. resolve ( "out/results" ), wfBundle ) )
21767	assertTrue ( m. nextShort ( ) > - 1 )
21768	assertEquals ( "SQL query does not match", result, test )
21769	assertEquals ( out. get ( ), LARGE_NUM - 1 )
21770	assertEquals ( "ec2.cn-north-1.amazonaws.com.cn", awsClient. getEndpoint ( ) )
21771	Assert. assertFalse ( errors. hasErrors ( ) )
21772	assertThat ( doc. getContentFieldAsString ( "out" ), equalTo ( "content string" ) )
21773	assertThat ( equal, equalTo ( true ) )
21774	assertArrayEquals ( expected, actual )
21775	assertFalse ( result )
21776	assertEquals ( "http://java.example.com:8080/foo/bar/qux/quux", got. toString ( ) )
21777	assertThat ( columns, is ( expected ) )
21778	assertEquals ( newName, instrument. getFriendlyName ( ) )
21779	assertEquals ( "Wrong IMDB ID", test. getImdb ( ), result. getImdbId ( ) )
21780	Assert. assertEquals ( 1, factory. getNumCarvedTestCases ( ) )
21781	assertEquals ( CollectionUtils. list ( "LOCK-true", "QE_CREATE", "SETUP", "CONSUME", "CLOSE", "UNLOCK" ), s. history )
21782	assertEquals ( foo1. id, foo2. id )
21783	assertEquals ( "OK", reply )
21784	assertTrue ( converter. canConvert ( IndexQuote. class ) )
21785	assertEquals ( result, one )
21786	assertEquals ( "SELECT Contact.ContactName FROM Contact WHERE Contact.ContactName IN('x','y')", visitor. getQuery ( ). toString ( ). trim ( ) )
21787	assertEquals ( 2, instance. getFeatures ( ). size ( ) )
21788	Assert. assertNotNull ( str )
21789	assertArrayEquals ( expectedCreateSchemaStmts, statements. getLockCreateSchemaStatements ( 2 ) )
21790	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE LOCALNAME(nodes) LIKE $literal" ) )
21791	assertThat ( ff. parse ( "20160504" ), is ( PlainDate. of ( 2016, 5, 4 ) ) )
21792	Assert. assertFalse ( exclusion1. equals ( exclusion2 ) )
21793	Assert. assertEquals ( expected, actual )
21794	Assert. assertEquals ( "Test that getCssValue returns the correct attribute", "hidden", element. getCssValue ( "visibility" ) )
21795	assertions. isEqualTo ( expected )
21796	assertEquals ( CloseReason. NO_ACCEPTABLE_VERSION, pair. clientRecorder. q. take ( ) )
21797	assertEquals ( 6. * 3600. + 12. * 3600., sec, 0.01 )
21798	assertEquals ( nameOfCustomer1, CUSTOMER_NAME )
21799	TestVerification. assertJVMMetrics ( metrics )
21800	Assert. assertTrue ( readable )
21801	assertEquals ( out, frame2 )
21802	assertEquals ( 0, runtimeService. createProcessInstanceQuery ( ). processInstanceId ( processInstance. getId ( ) ). count ( ) )
21803	assertEquals ( "C", letterGrade )
21804	assertTrue ( attributeDesc. isVersion ( ) )
21805	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5 ) ) )
21806	assertEqualsIgnoreWhitespace ( expectedRuleModelDrl, actualRuleModelDrl )
21807	Assert. assertEquals ( sql, "CREATE TABLE SETTAB (ID INTEGER PRIMARY KEY, PAR_ID INTEGER, RNK INTEGER )" )
21808	assertEquals ( expResult, result )
21809	assertEquals ( newValue, wrapped. get ( key ) )
21810	assertEquals ( paths. size ( ), 0 )
21811	assertThat ( mt. minus ( 4, SI. NANOSECONDS ), is ( MachineTime. ofSIUnits ( 2, 999999997 ) ) )
21812	Assert. assertEquals ( 0, mapper. updateByPrimaryKey ( new Country ( ) ) )
21813	assertEquals ( "id", filter. getIdResultName ( ) )
21814	Assert. assertTrue ( "Adaptive regularization should achieve lower loss", loss > loss_adareg )
21815	assertFalse ( selected )
21816	assertEquals ( parse ( "1694989 + 336131*a + 4996260*a^2 + 91*a^3 + a^4", domain, LEX, vars ), r )
21817	assertThat ( this. state. getSortColumn ( ), is ( equalTo ( sortColumn ) ) )
21818	Assert. assertEquals ( result, expected )
21819	assertFalse ( evaluator. shouldProxyHost ( "::1" ) )
21820	assertThat ( restored. get ( ), is ( option. get ( ) ) )
21821	Assert. assertEquals ( 20_000, gt. count ( ). next ( ). intValue ( ) )
21822	assertThat ( PlainDate. of ( 2000, 12, 2 ). with ( model. weekOfMonth ( ). incremented ( ) ), is ( PlainDate. of ( 2000, 12, 9 ) ) )
21823	assertEquals ( "{\\"data\\":{\\"1\\":\\"121212\\"}}", strategy. write ( new FunctionData7 ( ) ) )
21824	assertEquals ( "Conversion did not match", value, to )
21825	assertComparisonFailure ( "Fichier produit en erreur : " + toFilePath ( "FileAssertWithMergeRegion_expected.xls" ) )
21826	assertEquals ( Arrays. asList ( "CREATE FUNCTION FLOOR AS 'com.hortonworks.streamline.Floor'" ), stormSqlExpression. createFunctions ( ) )
21827	Assert. assertTrue ( RequesterContextHolder. getContext ( ) instanceof AnonymousIdentityContext )
21828	Assert. assertEquals ( "��浜�甯�", result. toStringUtf8 ( ) )
21829	assertEquals ( 2, post. getComments ( ). size ( ) )
21830	assertTrue ( comparePomFiles ( reactorProjects ) )
21831	assertThrows ( ( ) -> instance. matcherFor ( matcher ) )
21832	assertEquals ( expected, actual )
21833	Assert. assertTrue ( true )
21834	assertEquals ( tropo. text ( ), "{\\"tropo\\":[{\\"ask\\":{\\"choices\\":{\\"value\\":\\"[1 DIGIT]\\"},\\"say\\":[{\\"value\\":\\"Please say a digit\\"}],\\"bargein\\":true,\\"timeout\\":30.0,\\"required\\":true}}]}" )
21835	Assert. assertEquals ( 2, orders. size ( ) )
21836	assertSame ( val, ConfigUtils. getMap ( config, val, "no-value" ) )
21837	assertTrue ( rule. getCondition ( ). matches ( event ) )
21838	assertEquals ( expected, ColumnRanges. rangeAtNode ( compare ) )
21839	assertThat ( byValue. getSingleResult ( ). getF ( ), equalTo ( f1 ) )
21840	assertNotEquals ( 0, id )
21841	assertEquals ( "(| [= foo] [= bar] [= baz])", m. toString ( ) )
21842	editor. assertNoHover ( "@PutMapping(\\"/greetings\\")" )
21843	assertNotNull ( classUnderTest. get ( 0 ) )
21844	Assert. assertEquals ( "Injection points are equal", dronePoint, dronePoint1 )
21845	assertEquals ( CambriaConstants. kBasePath + "topic/cg/cid?limit=100", url )
21846	assertEquals ( Syntax. html, doc. outputSettings ( ). syntax ( ) )
21847	assertThat ( comment, equalTo ( "Parameter comment on class C" ) )
21848	assertThat ( modified, is ( expectedResult ) )
21849	assertNull ( cursor. next ( ) )
21850	Assert. assertEquals ( C, message. getContent ( ) )
21851	Assert. assertEquals ( sort. getOrder ( ), "asc" )
21852	child. forkNever ( ). executeTest ( ). assertTestSuiteResults ( 1, 0, 0, 0 )
21853	assertThat ( lines, contains ( "this is the first line", "this is the second line" ) )
21854	Assert. assertEquals ( jsonString, JsonUtil. toJsonString ( aclStatusBuilder. build ( ) ) )
21855	assertEquals ( false, result )
21856	assertEquals ( "calcSampleVariance() failed!", 0.0, FunctionUtil. calcSampleVariance ( x ), 0.0001 )
21857	assertEquals ( expectedResult, entityParser. parseThing ( json ) )
21858	assertEquals ( count, insert ( survey ). columns ( survey. id, survey. name ). select ( sq. select ( survey2. id. add ( param ), survey2. name ) ). execute ( ) )
21859	assertEquals ( scheduleDeleteRequest. getRequestHeaders ( ), headers )
21860	Assert. assertEquals ( - 1.0, correlation. correlation ( xArray, yArray ), Double. MIN_VALUE )
21861	Assert. assertEquals ( "a,...(2)", result )
21862	Assert. assertEquals ( "patch_make", "@@ -1,11 +1,12 @@\\n Th\\n-e\\n+at\\n  quick b\\n@@ -21,18 +22,17 @@\\n jump\\n-s\\n+ed\\n  over \\n-the\\n+a\\n  laz\\n", p. toText ( ) )
21863	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
21864	assertEquals ( OK. getStatusCode ( ), updateResponse. getStatusCode ( ) )
21865	assertSame ( copied, obj )
21866	Assert. assertTrue ( exportedFile. exists ( ) )
21867	Assert. assertEquals ( option1, option2 )
21868	Assert. assertEquals ( "3 未蔚魏伪蔚�委蔚� ��喂谓 伪��", t. format ( new Date ( 0 ) ) )
21869	Assert. assertEquals ( result, cohort )
21870	assertTrue ( String. format ( "[%s] should be valid.", coord ), validator. isValid ( coord, null ) )
21871	Assert. assertEquals ( endereco, retorno. getEndereco ( ) )
21872	assertEquals ( 17, context. getTableCount ( ) )
21873	Assert. assertEquals ( id, builder. getMessageId ( ) )
21874	assertTrue ( page. asText ( ). contains ( "MyConverter.getAsString Called: MESSAGE 1 MyConverter.getAsString Called: MESSAGE 2 MYPARAM MESSAGE 3 MESSAGE 4 MYPARAM" ) )
21875	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 07" ) )
21876	assertEquals ( res. getStatus ( ), Response. Status. CONFLICT. getStatusCode ( ) )
21877	assertEquals ( "hello world", mockHttpRequestBuilder. get ( resource ). execute ( ). getContentWithEncoding ( ) )
21878	assertThat ( readBytes ( testee, 4 ), is ( "Hello|World|!" ) )
21879	assertEquals ( 0, count )
21880	Assert. assertSame ( managerFactory, AbstractDecorator. getOriginalDecoratedObject ( victim. getManagerFactory ( ) ) )
21881	Assert. assertEquals ( 40., analyser. getServiceTime ( route ), 0.01 )
21882	Assert. assertTrue ( dao. insert ( person ) )
21883	assertTrue ( diff. similar ( ) )
21884	assertEquals ( 5, resolvedClassPaths. size ( ) )
21885	assertThat ( counter. get ( ), anyOf ( is ( 1L ), is ( 2L ) ) )
21886	assertFalse ( result. passedValidation ( ) )
21887	assertEquals ( masterRoot, rootDir )
21888	assertTriggered ( messageCountAlertCondition, result )
21889	Assert. fail ( "should have thrown SQLFeatureNotSupportedException" )
21890	assertAnnotations ( 1, Quantity. class, new TestQuantity ( 0, "4.3 million tonnes", 4300000, "tonne", 4300000000L, "kg", WEIGHT ) )
21891	assertEquals ( 57, tokens. size ( ) )
21892	Assert. assertEquals ( expResult, result )
21893	assertEquals ( "Un-assigned field _staticAssVal equals 3.", 3, unAssVar )
21894	assertions. isLessThan ( actual )
21895	assertTrue ( Arrays. equals ( chaincodeCollectionConfiguration. getAsBytes ( ), chaincodeCollectionConfigurationFromProto. getAsBytes ( ) ) )
21896	assertEquals ( "``I'll didn't (A-H-B C's D) E'' F!", LGLibEn. getForms ( head, true, " " ) )
21897	Assert. assertEquals ( "Write_rows_event_old", actual )
21898	Assert. assertEquals ( expected, rows. next ( ). toString ( ) )
21899	editor. assertProblems ( "sts4|Duplicate resource name", "sts4|Unused", "utils|Unused", "sts4|Duplicate resource name", "sts4|Unused" )
21900	Assert. assertFalse ( this. mocker. getComponentUnderTest ( ). hasAccess ( this. user, this. right, this. documentReference ) )
21901	Assert. assertEquals ( found. size ( ), 4 )
21902	assertEquals ( 0, cli. scan ( "usertable", "user5947069136552588163", 7, null, results ) )
21903	Assert. assertEquals ( "Test this string", stringConstant. evaluate ( null ) )
21904	Assert. assertFalse ( json. has ( DATA_NAME ) )
21905	longs. assertNotGreaterThan ( description, actual, expected )
21906	assertEquals ( 0x77777777, frame. getInt ( ) )
21907	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( dropdown ) instanceof WMultiDropdownRenderer )
21908	assertThat ( sut. getIndexOfCode ( 30 ), is ( 1 ) )
21909	Assert. assertTrue ( ShareUserSearchPage. checkSearchResultsWithRetry ( drone, ADV_FOLDER_SEARCH, searchText, "House 1", true ) )
21910	assertEquals ( 5, content. split ( "\\n" ). length )
21911	Assert. assertEquals ( 0, i )
21912	Assert. assertEquals ( scorer. scoreSplit ( a, b ), 1.0, 1E-7 )
21913	assertFalse ( d. isUsingStatisticsManager ( ) )
21914	assertEquals ( commit, gfs. getStatusProvider ( ). commit ( ) )
21915	assertTrue ( hv > 0.65 )
21916	assertThat ( xoManager. find ( D. class, "1" ). iterator ( ). next ( ), equalTo ( a1 ) )
21917	assertOut ( "public final class A extends B implements IA, IB, IC {\\n}" )
21918	Assert. assertFalse ( req_015_Util. isPeerInterestedOnRemoteWorker ( consumer1ID. getServiceID ( ) ) )
21919	assertTrue ( componentSet. size ( ) == componentList. size ( ) )
21920	assertEquals ( encoded1, encoded2 )
21921	assertEquals ( "{\\"number\\":null,\\"string\\":null,\\"raw\\":null}", writer. toString ( ) )
21922	assertEquals ( "Failed to generate for do while loop with simple expression (no operator and rhs) and chained lhs", DOWHILE_SIMPLE_EXPRESSION_NO_OP, s )
21923	assertEquals ( "Base value is not properly parsed", "f1a2b3", parsed )
21924	Assert. assertEquals ( 1, violations. size ( ) )
21925	assertThat ( tags, contains ( TAG1, TAG2 ) )
21926	assertTrue ( testv. equals ( v ) )
21927	assertEquals ( true, bm. isBitSet ( bitNumber ) )
21928	assertEquals ( "{\\"foo\\" : {}, \\"xyz\\" : [1,3,{\\"sub1\\" : {}, \\"sub1a\\" : \\"avalue\\"}], \\"abc\\" : \\"xyx\\"}", toJsonString ( node, true ) )
21929	assertTrue ( params. hasValue ( "a" ) )
21930	assertTrue ( String. format ( "[%s] should be valid.", coord ), validator. isValid ( coord, null ) )
21931	assertEquals ( 3, file. getReplicasList ( ). size ( ) )
21932	Assert. fail ( "Connection succeeded, but impersonation should be denied." )
21933	assertNotNull ( child )
21934	assertEquals ( "{message=Hello Spring MVC}", response. getContent ( ) )
21935	Assert. assertEquals ( sorted, sortedRules )
21936	assertOut ( "width=\\"1.5\\"" )
21937	assertInvocations ( invocations, "prepare", "commit" )
21938	assertEquals ( expectForbid, newForbid )
21939	assertTrue ( "Time difference with repeated exec should be >= 1s", time2 - time1 >= 1 )
21940	Assert. assertEquals ( "SHOW GLOBAL STATUS LIKE 'Key%';", text )
21941	assertSame ( camundaDatasourceMock, getDataSourceFromConfiguration ( ) )
21942	assertEquals ( policy, dest. getServer ( ) )
21943	assertEquals ( "message", messageOut. getType ( ) )
21944	assertThat ( vi. getValue ( ), is ( "xyz" ) )
21945	assertEquals ( sanitized, rewrite ( gadget, markup, set ( "img" ), set ( "src" ) ) )
21946	assertTrue ( findElement ( By. id ( "radioButton" ) ). findElements ( By. className ( "v-select-option-selected" ) ). isEmpty ( ) )
21947	assertThat ( values, containsInAnyOrder ( "example.test1", "example.test2" ) )
21948	Assert. assertEquals ( 250 + 2 * bonusScore * NUMBER / MOVE_COUNT, scores. getScore ( ) )
21949	runner. assertValid ( service )
21950	assertEquals ( button. getText ( ), "ComputeSumButton" )
21951	assertEquals ( "<TimePosition frame=\\"http://my.big.org/TRS/calendars/japanese\\" calendarEraName=\\"Meiji\\" indeterminatePosition=\\"before\\">0025-03</TimePosition>", xmlWriter. getOutput ( ) )
21952	Assert. assertNull ( reified )
21953	assertThat ( conversionService. convert ( this. source, this. sourceType, targetType ), is ( equalTo ( this. converted ) ) )
21954	assertMsg ( )
21955	assertTrue ( "Expected the DependencyCheck report to be generated", report. exists ( ) )
21956	assertEquals ( "exception message", "Unsupported PEM object: X509CertificateHolder", cause. getMessage ( ) )
21957	assertEquals ( "aTestString", classUnderTest. getVersion ( ) )
21958	assertEquals ( expected, buf )
21959	assertEquals ( VALUE, secondVictim. getValue ( KEY ) )
21960	assertEquals ( value, maxByColumns [ 0 ], LARGEST_MIN_MAX_ERROR )
21961	Assert. assertEquals ( content. get ( "instructions" ), service. getOrderByUuid ( getUuid ( ) ). getInstructions ( ) )
21962	Assert. assertFalse ( ValidationUtils. isNullOrEmpty ( message ) )
21963	assertEquals ( "Wrong name of root element", "element2", checkConfig. getRootElementName ( ) )
21964	assertEquals ( 15, atAct1. get ( 0 ) )
21965	assertEquals ( 0, distincted. size ( ) )
21966	assertNotNull ( user )
21967	Assert. assertEquals ( 0, trimmed. size ( ) )
21968	assertEquals ( hashCode1, hashCode2 )
21969	assertEquals ( Metadata. DEFAULT_DATE, metadata. getPatientBirthDate ( ) )
21970	assertNotEquals ( 0, tokenLists. size ( ) )
21971	assertXMLEqual ( expected, xml )
21972	AssertAnnotations. assertLemma ( lemmas, select ( jcas, Lemma. class ) )
21973	assertTrue ( metaChild. isAssignableTo ( metaUncle ) )
21974	assertThat ( description. toString ( ), is ( "SomeClass {\\n" + "  foo(): was <42>\\n" + "  baz(): SomeClass {\\n" + "    foo(): was <42>\\n" + "  }\\n" + "  getBar(): was \\"bar\\"\\n" + "}" ) )
21975	assertEquals ( entry. getValue ( ), DBValue )
21976	assertions. startsWith ( sequence )
21977	assertEquals ( testPlatform. getPlatformValue ( ), pValue )
21978	assertEquals ( test. getMessage ( ), "Error in bean: " + FILE. toString ( ) + ", Line: 123, Message: rubbish" )
21979	Assert. assertEquals ( sampleSize, result. size ( ) )
21980	Assert. assertEquals ( "first 0a1b last 2c", html )
21981	assertTrue ( ns. isAnyUpdate ( ) )
21982	assertThat ( target, is ( instanceOf ( FlowAction. class ) ) )
21983	assertEquals ( renderWithConflictShowingVersionResult ( ), result )
21984	assertTrue ( detector. isKnsEnabled ( ) )
21985	assertNotNull ( taskTO )
21986	assertEquals ( "Line1 Line2 Line3", stringBuilder. toString ( ) )
21987	assertEquals ( "onTargetsChanged should have updated targets list", createUrlFromTargetName ( healthInfoInstances. get ( 0 ). Node. Address ), targetProvider. provideTarget ( ) )
21988	Assert. assertEquals ( Response. Status. NO_CONTENT. getStatusCode ( ), status )
21989	assertEquals ( "A1=, A2=", selectionValue )
21990	assertEquals ( exp, res. getDouble ( i ), 1e-5 )
21991	Assert. assertEquals ( new URI ( "http://localhost:80/stuff?param=stuff#fragment" ), result )
21992	assertNotNull ( order )
21993	assertArrayEquals ( array ( 'a', 'b', 'c' ), results )
21994	assertEquals ( "Hello", ( ( BizExceptionNoDefaultConstructor ) read ). getMessage ( ) )
21995	assertEquals ( "text/plain", contentType ( resp ) )
21996	assertThat ( options. getStorageClass ( ), is ( storageClass. toString ( ) ) )
21997	assertEquals ( headers, newHeaders )
21998	assertXpathExists ( "Absent BinarySecurityToken element", "/SOAP-ENV:Envelope/SOAP-ENV:Header/wsse:Security/wsse:BinarySecurityToken", document )
21999	assertEquals ( result, false )
22000	assertEquals ( 0, tasks. size ( ) )
22001	Assert. assertNull ( "Distinct name was expected to be null", ejbJarMetaData. getDistinctName ( ) )
22002	assertNotNull ( runTest ( true ) )
22003	assertNotNull ( "Missing test resource file.", in )
22004	assertFalse ( easyCriteria. getResultList ( ). isEmpty ( ) )
22005	Assert. assertNull ( "No se deber�a haber encontrado la aplicaci�n", aplicacion )
22006	assertThat ( subjectOf ( axiom ), isOptionalOf ( individual ) )
22007	Assert. assertEquals ( "xxx", name )
22008	Assert. assertEquals ( "Date " + date + " was not correctly truncated to hours", dateTruncExpected, dateTruncActual )
22009	Assert. assertNull ( job )
22010	assertOut ( "a(true)" )
22011	assertEquals ( Status. UNAVAILABLE. getCode ( ), listener. status. getCode ( ) )
22012	Assert. assertSame ( cfg, newCfg )
22013	assertThat ( parsers, not ( empty ( ) ) )
22014	Assert. assertEquals ( "text;stuff\\n", writer. toString ( ) )
22015	assertEquals ( o1, o2 )
22016	Assert. assertFalse ( provider. isKeyword ( "test" ) )
22017	assertEquals ( 1311, result )
22018	assertTrue ( result1 == result2 )
22019	assertTrue ( expectedDirection. equals ( reflectedDirection ) )
22020	assertNotNull ( actual )
22021	assertEquals ( 31, videoCapture. getiExceptionCount ( ) )
22022	assertThat ( content, not ( containsString ( "1 + 1 = 2" ) ) )
22023	assertEquals ( Boolean. TRUE. toString ( ), actual )
22024	assertEquals ( Order. sellAt ( 1 ), newTrade. getExit ( ) )
22025	Assert. assertTrue ( testConfig. getDefaultPartitionWeightMap ( ). equals ( Collections. emptyMap ( ) ) )
22026	assertNotNull ( "ontology should not be null", manager. getOntologyDocumentIRI ( ontology ) )
22027	assertEquals ( writeOperation, writer. getWriteOperation ( ) )
22028	assertThat ( testUriStr, is ( expectedUriStr ) )
22029	assertTrue ( rec_cnt == 1 )
22030	org. junit. Assert. assertEquals ( expected, actual )
22031	assertThat ( model. get ( "k" ), is ( equalTo ( ( Object ) "v" ) ) )
22032	assertEquals ( "Wrong # of users found", 1, users. size ( ) )
22033	assertNotNull ( "dataObject2 should have been loaded", dataObject. getDataObject2 ( ) )
22034	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
22035	assertEquals ( lintresult. getIssues ( ). values ( ). toString ( ), 0, result. size ( ) )
22036	Assert. assertEquals ( stepType, actualType )
22037	Assert. assertNull ( to )
22038	assertEquals ( 400, clientResponse. getStatus ( ) )
22039	assertEquals ( "Making a new constructor wiht null value so LinuxAdeExtProperties is made. It sets the timezone", DateTimeZone. forOffsetMillis ( tz. getRawOffset ( ) ), pid. getInputTimeZone ( ) )
22040	assertFalse ( SpriteUtils. isAliasSprite ( sprite1, sprite2 ) )
22041	assertThat ( builder. getPatches ( ), hasItemsInOrder ( "REMOVE /status/conditions/1", "ADD /status/conditions/- {'message':'Almost','reason':'trying','type':'Progressing'}" ) )
22042	assertTrue ( Arrays. equals ( s, multiEntry ) )
22043	Assert. assertEquals ( content, str )
22044	softly. assertAll ( )
22045	assertThat ( driver. findElement ( By. id ( "item1" ) ). getText ( ), is ( "" ) )
22046	assertEquals ( iteratedMap, expectedMap )
22047	assertEquals ( stems. size ( ), 0 )
22048	BufferedImageAssert. assertMatches ( result, new float [ ] { 1, 1, 1, 1, 1, 1, 1, 0, 0 } )
22049	assertEquals ( "dist job res is not 0:", 0, res )
22050	assertThat ( optionsByType. get ( Timeout. class ), is ( oneSecond ) )
22051	assertFalse ( result )
22052	assertEquals ( ids. getExternalIdentifier ( ). get ( 0 ). getNormalized ( ). getValue ( ), "normalized-value" )
22053	assertBeanBinding ( camelctx )
22054	assertEquals ( true, outcome. isFound ( ) )
22055	assertEquals ( expectedQuery, actualQuery )
22056	assertFalse ( property. toStringValues ( ). isEmpty ( ) )
22057	assertEquals ( 3, result. intValue ( ) )
22058	assertEquals ( result, "John,Jane,Adam,Tom" )
22059	assertEquals ( "Expected another stopwords", TurkishAnalyzer. getDefaultStopSet ( ), stopwords )
22060	assertEquals ( "Junk", row. getItemProperty ( "TEXT" ). getValue ( ) )
22061	assertThat ( ex, not ( nullValue ( ) ) )
22062	Assert. assertEquals ( account1. toString ( ), account2. toString ( ) )
22063	assertEquals ( "image/png", contentType )
22064	Assert. assertEquals ( "Previous_gtids", actual )
22065	assertEquals ( 3.5F, strategy. getMedian ( evenNumberOfFloatBandValues ), 0.0001 )
22066	Assert. assertFalse ( result )
22067	assertThat ( status. getStoragePolicy ( ), is ( LAZY_PERSIST_POLICY_ID ) )
22068	Assert. assertThat ( i, is ( - 15 ) )
22069	assertEquals ( 2, attemptRulesByActionName. size ( ) )
22070	mini. assertReadFile ( mini. getLocalFs ( ), fileSpec, "1;one", "2;two" )
22071	assertions. doesNotHaveDuplicates ( )
22072	assertSkipped ( myTasks, 2, 3 )
22073	Assert. assertEquals ( "Not null string", expectedBinaryString, bitmaskInBinaryString )
22074	assertFalse ( results. getMessages ( ). isEmpty ( ) )
22075	assertThat ( info. getServerService ( SERVER ), sameInstance ( currentService ) )
22076	assertEquals ( Str. of ( "two" ), result )
22077	assertNotNull ( response. getAccessToken ( ) )
22078	assertTokens ( new IdentifierToken ( "x" ), Tokens. LP_CALL, Tokens. RP, comment ( "test" ) )
22079	assertEquals ( "test", removeSentenceDecorator. toDisplay ( ) )
22080	assertEquals ( false, result )
22081	assertFalse ( isEnabled )
22082	assertEquals ( 60, exp )
22083	Assert. assertFalse ( Arrays. equals ( cmpAlignAndMeet, outAlignAndMeet ) )
22084	assertFalse ( subject. getForcedFlagState ( ). isPresent ( ) )
22085	assertThat ( new String ( baos. toByteArray ( ) ), equalTo ( data ) )
22086	assertThat ( tuple. getCollection ( "field" ), equalTo ( value ) )
22087	assertThat ( "Returned value is sum of defaults, not sum of values defined in deactivated code.", response, containsString ( expected ) )
22088	assertTrue ( "Identity realm should be created", ops. exists ( TEST_IDENTITY_REALM_ADDRESS ) )
22089	Assert. assertFalse ( "Ids should not be the same: ", deterministicId. equals ( deterministicId2 ) )
22090	assertEquals ( expected, baseString )
22091	assertThat ( EmailValidator. getInstance ( ). isValid ( emailAddress ), is ( true ) )
22092	Assert. fail ( "Missing required input" )
22093	Assert. assertEquals ( "full_name,creation_date,last_modified_date,encrypted_password", ctx. getSqlStatement ( ) )
22094	assertThat ( "1.2.3", equalTo ( ( r ) ) )
22095	assertNotNull ( target )
22096	assertEquals ( state, actualState )
22097	assertEquals ( "8 骞� ��", t. format ( new Date ( 0 ) ) )
22098	assertThat ( client. getScope ( ). contains ( SystemScopeService. OFFLINE_ACCESS ), is ( equalTo ( true ) ) )
22099	Assert. assertEquals ( String. class, TestUtils. getPropertyValue ( router, "resultType", Class. class ) )
22100	assertEquals ( "c", CollectionUtils. getByPath ( input, "-1" ) )
22101	assertTrue ( isPersistent )
22102	Assert. fail ( )
22103	assertTrue ( closed. await ( 2, SECONDS ) )
22104	Assert. assertTrue ( service. canConvert ( Date. class, String. class ) )
22105	assertEquals ( Type. High, filterResult. getValue ( ) )
22106	assertEquals ( AbstractPanel. class, renderer. getComponentClass ( ) )
22107	assertEquals ( 0, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
22108	assertEquals ( LocalDate. of ( 1971, Month. DECEMBER, 31 ), firstDayOfMonth )
22109	assertNotNull ( result )
22110	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4 ) ) )
22111	log. assertContent ( "execute()" )
22112	assertEquals ( 2L, query ( ). from ( employee ). where ( where ). fetchCount ( ) )
22113	assertTrue ( op. quiet )
22114	Assertion. assertEquals ( loadedDataSet, actualDataSet )
22115	assertFalse ( v1. equals ( v2 ) )
22116	assertThat ( cls, is ( nullValue ( ) ) )
22117	assertTrue ( startsWithHttp )
22118	assertEquals ( "(& [* fo.*] [*.*oo] [= foo])", m. toString ( ) )
22119	assertEquals ( 0L, volumeStates. documentCount. longValue ( ) )
22120	assertTrue ( connection. toString ( ) + " is not transaction aware", connection. toString ( ). startsWith ( "Transaction-aware proxy" ) )
22121	Assert. assertEquals ( revisions. size ( ), 2 )
22122	assertFalse ( "Wrong result", builder. removeEventListener ( ConfigurationBuilderEvent. CONFIGURATION_REQUEST, listener ) )
22123	Assert. assertTrue ( accept )
22124	Assert. assertEquals ( message, 0.0, error, 1E-10 )
22125	assertEquals ( 0, sizeWithUnfilteredQuery ( ) )
22126	assertThat ( client. getHost ( ), equalTo ( "localhost" ) )
22127	assertThat ( client. getBasePath ( ), is ( "http://localhost" ) )
22128	assertEquals ( 265463 & 342, executeTestMethod ( test, Integer. class, null, 265463 ). intValue ( ) )
22129	assertEquals ( 1, deleteCount )
22130	Assert. assertEquals ( "\\"v\\"\\n\\"<p />\\n<p />\\"\\n", writer. toString ( ) )
22131	assertScoreAndParse ( content, null, 1 )
22132	assertFalse ( squaresCache. containsKey ( 5 ) )
22133	assertEquals ( 0, list. size ( ) )
22134	assertThat ( f. apply ( good_uris ), equalTo ( asList ( new URL ( "http://example.com/example_a" ), new URL ( "http://example.com/example_b" ), new URL ( "http://example.com/example_c" ) ) ) )
22135	comparator. assertLinesMatch ( )
22136	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
22137	Assert. assertEquals ( want, sql )
22138	assertEquals ( "ext", sub. getExtension ( ) )
22139	assertThat ( result, is ( iterableWithSize ( 1 ) ) )
22140	assertEquals ( ImmutableList. of ( category1, category2 ), categories. getCategories ( ) )
22141	assertEquals ( 10, results. length )
22142	assertEquals ( 1, tasks. size ( ) )
22143	assertTrue ( dtoProductTypeAttr. getProductTypeAttrId ( ) > 0 )
22144	Assert. assertEquals ( "Some Privilege", privilege. getPrivilege ( ) )
22145	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 03" ) )
22146	assertEquals ( "tunnin p盲盲st盲", t. format ( new Date ( 1000 * 60 * 60 * 1 ) ) )
22147	assertThat ( headlineOf ( view ), is ( "3 builds have failed since Daniel committed their changes" ) )
22148	assertEquals ( read ( pom ), "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<project>\\n" + "    <!-- Repositories --> \\n" + "    <repositories>\\n" + "        <repository>\\n" + "            <id>other-id</id>\\n" + "            <name>other-name</name>\\n" + "            <url>http://other-url.com</url>\\n" + "            <layout>other layout</layout>\\n" + "            <snapshots>\\n" + "                <enabled>false</enabled>\\n" + "                <checksumPolicy>fail</checksumPolicy>\\n" + "                <updatePolicy>monthly</updatePolicy>\\n" + "            </snapshots>\\n" + "            <releases>\\n" + "                <enabled>false</enabled>\\n" + "                <checksumPolicy>fail</checksumPolicy>\\n" + "                <updatePolicy>monthly</updatePolicy>\\n" + "            </releases>\\n" + "
22149	Assert. assertNull ( value )
22150	editor. assertProblems ( "name|Duplicate", "name|Duplicate" )
22151	assertEquals ( 17, context. getTableCount ( ) )
22152	assertThat ( commercialFeaturesArgument, is ( not ( nullValue ( ) ) ) )
22153	Assert. assertEquals ( 65., tdCosts. getBackwardTransportTime ( loc ( "from" ), loc ( "to" ), 100., null, null ), 0.01 )
22154	assertEquals ( "Unexpected server selection timeout", expectedTimeout, clientOptions. getServerSelectionTimeout ( ) )
22155	assertFalse ( valid )
22156	assertEquals ( BuildState. SUCCESS, state )
22157	assertThat ( result. toString ( ), is ( equalTo ( "HELLO" ) ) )
22158	Assert. assertEquals ( 500, resp. getStatus ( ) )
22159	assertEquals ( result, expecting )
22160	assertTrue ( "permission was not granted.", updateUserPermission. isAllowed ( auth, 1L ) )
22161	assertEquals ( 1, m. keySet ( ). size ( ) )
22162	assertTrue ( mainServices. isSuccessfulBoot ( ) )
22163	assertTrue ( "Hash is invalid", Arrays. equals ( SHA256_DIGEST. getBytes ( ), result. getBytes ( ) ) )
22164	assertEquals ( "[(test:1>5 --group=test)>(AppNode:file:21>25)]", sn. stringify ( true ) )
22165	assertEquals ( 12.5664, perims [ 0 ],.01 )
22166	assertEquals ( 204, response. getStatus ( ) )
22167	assertEquals ( 1, results. length )
22168	Assert. assertEquals ( "did not get spec col in objStat", SpecColType. MOUNTED_COLL, objStat. getSpecColType ( ) )
22169	assertEquals ( parent. models. size ( ), 1 )
22170	Assert. assertEquals ( validator. validate ( EntityNames. STUDENT, studentIds ). size ( ), studentIds. size ( ) )
22171	assertTrue ( map. size ( ) > 0 )
22172	assertEquals ( BKException. Code. NoSuchLedgerExistsException, arc. rc )
22173	Assert. assertEquals ( 4, network. getInputsCount ( ) )
22174	assertDegenerate ( scan )
22175	assertEquals ( exp, array1 )
22176	Assert. assertEquals ( "{}", result )
22177	assertEquals ( expectedQuery, actualQuery )
22178	assertEquals ( "Unexpected size observed", 0, fail. value )
22179	assertTrue ( TEST_DATETIME. equals ( DateTimeUtil. getUTCDateTime ( datum ) ) )
22180	assertEquals ( expectedValue, value. getValue ( 101L ) )
22181	assertEquals ( 100., calc. getInsertionData ( route, job, nVehicle, 0.0, null, Double. MAX_VALUE ). getInsertionCost ( ), 0.01 )
22182	assertThat ( nameCollection. toString ( ), is ( "[Patrick, Chris]" ) )
22183	assertFalse ( aNumber. equals ( bNumber ) )
22184	assertTrue ( proxy. isClosed ( ) )
22185	Assert. assertTrue ( fullyQualifiedName. contains ( city. getZipCodes ( ). iterator ( ). next ( ). getCode ( ) ) )
22186	Assert. assertEquals ( reply, receivedReply )
22187	assertEquals ( nodeName, node. getName ( ) )
22188	assertNull ( val )
22189	Assert. assertEquals ( "CsvConfiguration [hasHeader=false, separator=,, quotechar=\\", escape=\\\\, skipSpaces=true]", configuration. toString ( ) )
22190	assertEquals ( "\\t\\t// e.g. : given(mocked.called()).willReturn(1);\\r\\n", buf. toString ( ) )
22191	assertEquals ( service. getSize ( new String [ ] { "", "", "" } ), 3 )
22192	Assert. assertEquals ( 2, index )
22193	assertEquals ( "Unexpected locale from component", COMPONENT_LOCALE, locale )
22194	assertThat ( banco. getAgenciaECodigoBeneficiario ( beneficiario ), is ( "1234-3/12345678-9" ) )
22195	assertEquals ( "http://www.foo.com/x/bar/y/baz", Browser. getCurentUrl ( ) )
22196	assertEquals ( expected, actual )
22197	assertEquals ( SortHelper. ENTRY_SIZE, size )
22198	assertEquals ( ( String ) result. get ( 0 ), "Application info is not available for processor:unknown" )
22199	assertEquals ( 5, paragraphElement. getElementCount ( ) )
22200	assertThat ( cursor. asListRemaining ( ), hasItems ( "actors/Keanu" ) )
22201	assertEquals ( "Value not set", VALUE, config. getString ( testKey ) )
22202	Assert. fail ( )
22203	assertThat ( Datastore. stringToKey ( encodedKey ), is ( key ) )
22204	Assert. assertEquals ( TcpRenderEngine. class. getName ( ), renderEngine. getClass ( ). getName ( ) )
22205	assertTrue ( "marker is replaceable when it when timestamp after expiry", marker. isReplaceableBy ( 101L, null, null ) )
22206	assertEquals ( HttpStatus. BAD_REQUEST, result. getStatusCode ( ) )
22207	assertThat ( sumOfLeftLeaves ( root ), Matchers. is ( 6 ) )
22208	Assert. assertNotNull ( "no user returned", actualUser )
22209	assertHandCount ( playerA, 3 )
22210	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC, ScopePathType. PEER_REVIEW_READ_LIMITED )
22211	assertArrayEquals ( data, value. getData ( ) )
22212	assertEquals ( 0, AtlasUtil. find ( file, "." ). size ( ) )
22213	assertEquals ( count. longValue ( ), 1 )
22214	assertEquals ( cfProvider. getConfiguredProperties ( ), ImmutableMap. of ( "brokerURL", MULTIPLE_ACTIVEMQ_BROKERS ) )
22215	Assert. assertEquals ( defaultIsolationLevel, connection. getIsolationLevel ( ) )
22216	Assert. assertEquals ( BarcodeDataMatrix. DM_NO_ERROR, result )
22217	assertOut ( "var a:* = (a + b)" )
22218	assertEquals ( accessCount. get ( ), 5 )
22219	assertEquals ( "1", id )
22220	assertEquals ( new ExtendedPanId ( "123456789abcdef" ), dongle. getZigBeeExtendedPanId ( ) )
22221	assertTrue ( result instanceof V8Function )
22222	assertNotNull ( account )
22223	assertIntersect ( ranges, "b", "l", "j" )
22224	assertEquals ( "[true,1.0,1.0,1,1234567890,\\"hi\\",{\\"abc\\":123},[1,null],[1,2,3],{\\"a\\":null}]", JsonWriter. string ( a ) )
22225	assertTrue ( list instanceof ArrayList )
22226	Assert. assertNotNull ( att )
22227	assertEquals ( "test", empty. getMessageType ( ) )
22228	Assert. assertEquals ( 0, a. getCbo ( ) )
22229	assertEquals ( "1", idCaptor. getValue ( ). getIdPart ( ) )
22230	assertTrue ( validation. isSuccessful ( ) )
22231	assertEquals ( geo, expResult )
22232	Assert. assertEquals ( monitor1, monitor2 )
22233	assertEquals ( "First Value After Reset Is T", 'T', ( char ) _textReader. read ( ) )
22234	assertTrue ( runtimeTestComparator. compare ( runtimeTest1, runtimeTest2 ) < 0 )
22235	assertEquals ( expected, actual )
22236	AssertionUtils. multiAssertEquals ( createAsDocument10, response6. getResponseObject ( ) )
22237	Assert. assertFalse ( matcher. acceptAll ( ) )
22238	assertEquals ( "id", portResult. getComponent ( ). getId ( ) )
22239	Assert. assertEquals ( "password/change/expired", view )
22240	assertThat ( table. asString ( ), equalTo ( "|one|two|\\n|11|12|\\n|21|22|\\n" ) )
22241	assertThat ( future. get ( 1, TimeUnit. NANOSECONDS ), is ( true ) )
22242	assertEquals ( o, mockUser )
22243	assertThat ( numbers, arrayContaining ( 10, 15, 20 ) )
22244	assertEquals ( toString ( expected ), toString ( actual ) )
22245	Assert. assertTrue ( runner. contains ( task ) )
22246	assertThat ( renderedProjectName, startsWith ( "master" ) )
22247	Assert. assertEquals ( result. size ( ), str. length ( ) )
22248	assertPaths ( executionPaths, executionPath ( JCSwitch. class, JCCase. class, JCExpressionStatement. class, JCReturn. class ), executionPath ( JCSwitch. class, JCCase. class, JCExpressionStatement. class, JCBreak. class, JCExpressionStatement. class, JCReturn. class ), executionPath ( JCSwitch. class, JCCase. class, JCExpressionStatement. class, JCBreak. class, JCExpressionStatement. class, JCReturn. class ), executionPath ( JCSwitch. class, JCCase. class, JCTry. class, JCBlock. class, JCExpressionStatement. class, JCBlock. class, JCExpressionStatement. class, JCReturn. class ), executionPath ( JCSwitch. class, JCCase. class, JCTry. class, JCBlock. class, JCExpressionStatement. class, JCBreak. class, JCExpressionStatement. class, JCReturn. class ) )
22249	paths. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE )
22250	assertEquals ( "slaveName_1", helper. nextFreeIdentifierForResourceEditRelations ( relations, 21, StringUtils. EMPTY ) )
22251	assertFalse ( service. publish ( "message" ) )
22252	assertNotFound ( client. executePost ( "/foo", "{\\"key_a\\":\\"value_a\\", \\"key_b\\":\\"value_b\\"}", ContentType. APPLICATION_JSON ) )
22253	assertEquals ( "table name without schema is correctly escaped as simply tableName", "tableName", database. escapeTableName ( null, null, "tableName" ) )
22254	context. assertTrue ( result. isEmpty ( ) )
22255	Assert. assertEquals ( Connection. TRANSACTION_NONE, connection. getTransactionIsolation ( ) )
22256	Assert. assertEquals ( value, Integer. valueOf ( 10 ) )
22257	runner. assertAllFlowFilesTransferred ( SplitText. REL_FAILURE, 1 )
22258	assertOut ( "var a:String = escape('http://whatever.com')" )
22259	assertThat ( option, is ( new IntOption ( 100 ) ) )
22260	assertEquals ( 98.8, empty. getHeadingToDestionation ( ), 0.1 )
22261	assertThat ( errors, not ( hasFieldErrors ( "middleName" ) ) )
22262	assertEquals ( version + 1, jobExecution. getVersion ( ). intValue ( ) )
22263	assertEquals ( 2, Solutions. bestOf ( solutions ). getRoutes ( ). size ( ) )
22264	assertEquals ( 1, result )
22265	assertThat ( cb. getForwardCallback ( ), nullValue ( ) )
22266	assertNull ( context )
22267	Assert. assertEquals ( "The response status to a reqeuest with 'if-non-match=*' header and 'range' header should be NOT_MODIFIED(304)," + " if the file exists, because 'if-non-match' header should be given priority", 304, response. getStatusLine ( ). getStatusCode ( ) )
22268	Assert. assertSame ( this. edit, this. mocker. getComponentUnderTest ( ). resolveAccessLevel ( "edit" ) )
22269	assertThat ( method. propertyName ( ), is ( "aTestMethod" ) )
22270	Assert. assertEquals ( 0.0d, singletest, 0 )
22271	assertEquals ( "Hawk error=\\"expired\\"", h. toString ( ) )
22272	assertThat ( falsePositiveCount, is ( notStored. size ( ) ) )
22273	assertEquals ( 90, rotation )
22274	assertEquals ( al. toString ( ), ft. toString ( ) )
22275	assertEquals ( "modify\\n\\nstream", output )
22276	assertEquals ( true, out. firstElement ( ). get ( ) )
22277	assertNotNull ( entity. getId ( ) )
22278	assertEquals ( expected, elements )
22279	assertTrue ( ARQ. isTrueOrUndef ( ARQ. optTopNSorting ) )
22280	assertEquals ( expectedUsernamePasswordString, HeaderUtils. getUsernamePasswordDomainString ( username, password, domain ) )
22281	Assert. assertNotNull ( TreeFlatteningRebuildingVisitor. flattenAll ( new Parser ( new StringReader ( ";" ) ). parse ( new StringReader ( new LuceneToJexlQueryParser ( ). parse ( sb. toString ( ) ). toString ( ) ), null ) ) )
22282	assertThat ( NF. booleanNode ( false ), is ( sut ) )
22283	assertThat ( results. hasNext ( ), equalTo ( false ) )
22284	assertSuccess ( errors, wait, TimeUnit. SECONDS )
22285	assertNull ( sut. execute ( new SharedResourceRequest ( - 1L, null ) ) )
22286	assertFalse ( rf. supportsMultiSpop ( ) )
22287	Assert. assertEquals ( "{\\"@context\\":\\"../$metadata#ESAllPrim(4242)/PropertyString\\"," + "\\"@metadataEtag\\":\\"W/\\\\\\"metadataETag\\\\\\"\\",\\"value\\":null}", resultString )
22288	assertTrue ( p. isReadable ( AegisTestBean. class, null, null, null ) )
22289	assertSame ( tree. getNode ( 30 ). getParent ( ), tree. getRoot ( ) )
22290	assertEquals ( LazyInitRegistration. APPLICATION_CONTEXT, applicationContextMock )
22291	Assert. assertTrue ( new JSONObject ( PEDIGREE_2_MIGRATED_DATA ). similar ( new JSONObject ( captured ) ) )
22292	assertEquals ( entry. getValue ( ), entry. getKey ( ). get ( ) )
22293	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
22294	assertEquals ( 2, list. size ( ) )
22295	assertEquals ( 1, client. getIntStack ( ) [ 0 ] )
22296	assertEquals ( "123451234512345", entity. getId ( ) )
22297	Assert. assertEquals ( "SELECT pet.id, pet.num, pet.name, pet.age, pet.cate, pet.master_id, pet.user_id FROM t_pet pet WHERE id" + fieldAdd + " < 5 ORDER BY id" + fieldAdd + " DESC LIMIT 1;", sql )
22298	assertEquals ( now, server. bounce_long_long ( now ) )
22299	assertNotNull ( notebook )
22300	assertEquals ( 0.0, y. get ( InsideOutsideDepParse. ROOT_IDX, 0, 0 ), 1e-13 )
22301	assertContains ( utf8, new String ( bos. toByteArray ( ), StandardCharsets. UTF_8 ) )
22302	assertNotNull ( foundVarArgsMethod )
22303	assertThat ( writer. get ( ), is ( 2d ) )
22304	assertTrue ( output. startsWith ( "<!DOCTYPE html>" ) )
22305	assertEquals ( expected, actual )
22306	assertTrue ( "Challenges not equal", challenge1. equals ( challenge2 ) )
22307	assertEquals ( 4, result. size ( ) )
22308	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 51, results. size ( ) )
22309	Assert. assertEquals ( driver ( ). getTitle ( ), "We Arrive Here" )
22310	Assert. assertEquals ( id, infoEventoManifestacaoDestinatario. getId ( ) )
22311	assertEquals ( "Hello [there] Tim", ResponseBodyInterpolator. interpolate ( "Hello [there] [request.body]", req ) )
22312	assertM ( "�尖�尖�尖�尖�尖�尖�尖�尖�尖�尖�尖�尖��" + "��???��???��?? ��" + "��???��???��???��" + "��???��???��???��" + "�尖�尖�尖�尖�尖�尖�尖�尖�尖�尖�尖��
22313	Assert. assertTrue ( false )
22314	assertEquals ( DATE_VAL_b, p. getDate ( ) )
22315	Assert. assertSame ( type, DatabaseType. OTHER )
22316	assertResultSet ( res, "testDistinctAggregation_case3.result" )
22317	assertThat ( converter. toJavaObject ( new IntWritable ( 1 ) ), is ( ( Object ) 1 ) )
22318	assertEquals ( dto, dto2 )
22319	assertEquals ( "Base for strings is wrong", Integer. valueOf ( 3 ), parsed )
22320	assertStoreDoesNotContain ( keys )
22321	assertEquals ( expectedStringRepresentation, ind. toString ( ) )
22322	arrays. assertIsSubsetOf ( someInfo ( ), actual, newArrayList ( "Yoda" ) )
22323	Assert. assertTrue ( matcher. match ( rule, null, testNode ) )
22324	assertEquals ( "HelloWorldPortTypeImpl not properly saying hi", "Hello Sam", response )
22325	assertEquals ( expResult, result )
22326	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3 ) ) )
22327	assertEquals ( value, propertiesConfigurationProperties. get ( key ) )
22328	assertAnalyzesTo ( analyzer, html, new String [ ] { "#test_run" } )
22329	assertFalse ( dss. hasJs ( ) )
22330	Assert. assertEquals ( "true", result )
22331	assertSamples ( )
22332	assertObjectEquals ( "{f1:'x1'}", p. run ( bs, in, sa ) )
22333	Assert. assertEquals ( 2, result. size ( ) )
22334	assertEquals ( expected, actual )
22335	assertThat ( className, is ( "org.adrianwalker.multilinestring.EcjMultilineProcessor" ) )
22336	assertEquals ( expected, actual )
22337	assertThat ( unix ( instance, strategy ), equalTo ( "0.0.0.0" ) )
22338	Assert. fail ( "an exception should have been thrown" )
22339	assertEquals ( "one&nbsp;&mdash; two --- three&nbsp;&mdash; four-- five --six --", actualResult )
22340	assertEquals ( messagePage. getTotalPages ( ), pageCount, "Incorrect count of pages." )
22341	assertEquals ( value, client. get ( KEY1 ). toCompletableFuture ( ). get ( ) )
22342	assertEquals ( "1/m", u. toString ( ) )
22343	Assert. assertEquals ( "https://sentilo.domain.org/sentilo-catalog-web/mockResource?id=1", finalRedirectUrl )
22344	assertEquals ( "{\\"field\\":{\\"some\\":\\"data\\"}," + "\\"levelProgress\\":{\\"total\\":3,\\"current\\":3,\\"lastPassed\\":2}}", playerGames. get ( "player" ). getGame ( ). getSave ( ). toString ( ) )
22345	Assert. assertSame ( EnumBehindAnInterface. A, n. foo )
22346	assertEquals ( BatchStatus. FAILED, jobExecution. getBatchStatus ( ) )
22347	assertNotEquals ( partitioner. getPartition ( key1, null, numPartitions ), partitioner. getPartition ( key2, null, numPartitions ) )
22348	assertTrue ( isWindowCreated ( "OpenFinHelloWorld", conn ) )
22349	assertEquals ( "." + testValue, actual )
22350	Assert. assertEquals ( expected, actual )
22351	assertThat ( vdl, is ( nullValue ( ) ) )
22352	assertTrue ( sm. all ( all ) )
22353	assertThat ( result, hasSize ( 0 ) )
22354	assertThat ( user. getPassword ( ), is ( "encrypted" ) )
22355	assertEquals ( expectedBody, consulResponse. getResponse ( ) )
22356	assertNull ( MultiParts. getContentType ( param ) )
22357	assertTrue ( "check empty visit is empty", info. isEmpty ( ) )
22358	assertEquals ( Arrays. asList ( new Category ( ) ), mockResult. included ( "categories" ) )
22359	assertPageFooterText ( page, "This is a bad #character 1" )
22360	Assert. assertEquals ( widgetSize + 1, jq ( ".zswidget" ). length ( ) )
22361	assertEquals ( expected, actualQuery )
22362	assertEquals ( gfs. getPath ( "/some_file.txt" ), path )
22363	assertEquals ( 200, response. getStatus ( ) )
22364	assertEquals ( expected, actual )
22365	assertEquals ( 2 * DOUBLED_PAWN_HANDICAP - 3 * PASSED_PAWN_BOOST, score )
22366	assertEquals ( Type. Char ( 1 ), d. type ( ) )
22367	assertNotEquals ( insertAction, retractAction )
22368	Assert. assertTrue ( response. contains ( "Invalid content was found starting with element 'invalid-element'. No child element is expected at this point." ) )
22369	assertNotNull ( solver )
22370	assertTrue ( resultMessage ( result, POST ), result. passedValidation ( ) )
22371	assertThat ( target. parse ( ), is ( false ) )
22372	assertEquals ( VerifyFailType. SORT, pluginParameters. verifyFailType )
22373	assertThat ( jsonGeneratorParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/StackTraceBlacklist.json" ) ) )
22374	assertTrue ( simulation. getPercentiles ( ). size ( ) > 4 )
22375	assertTrue ( Pattern. matches ( "(?s).*START.*0.*1.*2.*END.*", page. asXml ( ) ) )
22376	assertNotNull ( resolved )
22377	Assert. assertEquals ( 16, es. size ( ) )
22378	assertEquals ( "{0'}' hi", instance. formatMessage ( record ) )
22379	assertEquals ( 0.5, result. getOccurrenceRatio ( ), 0.0 )
22380	assertTrue ( mockManager. getColdSyncCallCount ( ) >= 2 )
22381	assertEquals ( ShardConsumerState. INITIALIZING. consumerState ( ). state ( ), consumer. currentState ( ). state ( ) )
22382	Assert. assertEquals ( "some [b]bold[b] text", formatter. format ( "some [b]bold[b] text", defaultOptions ( ) ) )
22383	assertThat ( target. addLink ( link ), is ( true ) )
22384	assertEquals ( "�伪谓慰�维�喂慰�", translation )
22385	assertSynchAll ( picker, date )
22386	Assert. assertFalse ( validator. isValid ( "as", context ) )
22387	assertEquals ( expect, pred )
22388	assertEquals ( expectedRestriction, restriction )
22389	assertEquals ( "XML Equals", jdkXml, javolutionXml )
22390	assertEquals ( "toImage.png", image )
22391	assertEquals ( expected, ld. getContentField ( "date" ) )
22392	Assert. assertEquals ( "SELECT " + fixedColumns + ",`foo.bar` FROM v WHERE _user_ ='me' GROUP BY `foo.bar`", sql )
22393	assertTrue ( niciraActionDeserializerKey. equals ( obj ) )
22394	assertEquals ( "Created memento with Memento-Datetime!", BAD_REQUEST. getStatusCode ( ), getStatus ( post ) )
22395	assertEquals ( 0, registry. storage. size ( ) )
22396	assertEquals ( "3063c39d3cf8ab69bcabbbc5d7187dc9", computeTMTextUnitMD5 )
22397	assertEquals ( expected, actual )
22398	assertEquals ( expectedResult, result )
22399	assertFalse ( parsed. hasQuery ( ) )
22400	Assert. assertEquals ( count, negatives. length )
22401	assertEquals ( "((key!='stringhello' and key!='stringgoodbye'))", jexl )
22402	Assert. assertTrue ( scriptFile. delete ( ) )
22403	assertThat ( subject. supports ( update ), is ( true ) )
22404	assertThat ( job. getDuedate ( ), is ( removalTime ) )
22405	assertNotNull ( response )
22406	assertEquals ( getMessage ( MessageKeys. E_TR_FW_0002 ), driver. findElement ( By. cssSelector ( "p" ) ). getText ( ) )
22407	Assert. assertEquals ( THIRTEEN_INTEGER, pi. getThirteenInt ( ) )
22408	assertThat ( backend. copyToMap ( ), hasKey ( TraceeConstants. INVOCATION_ID_KEY ) )
22409	assertThat ( address2. equalsContent ( address1 ), is ( false ) )
22410	assertTrue ( Sha2Crypt. sha512Crypt ( "secret". getBytes ( ), null, threadLocalRandom ). matches ( "^\\\\$6\\\\$[a-zA-Z0-9./]{0,16}\\\\$.{1,}$" ) )
22411	Assert. assertTrue ( matches )
22412	assertEquals ( expected, actual )
22413	Assert. assertTrue ( "Failure - expected to be not found", status == 406 )
22414	Assert. assertTrue ( service. getUserInfo ( ). equals ( userInfo ) )
22415	XmlAssert. assertEquals ( EXPECTED_XML_RESPONSE, xmlResponse )
22416	assertEquals ( 2, builder. getErrors ( ). size ( ) )
22417	Assert. assertEquals ( "Deserialized tuples match", tuple, deserializedTuple )
22418	assertEquals ( "1 & 2 & 3", generate )
22419	Assert. assertNotEquals ( date, entity. getLastModified ( ) )
22420	assertFalse ( lock. lock ( ) )
22421	assertEquals ( hasNextField. get ( reader ), true, "hasNext field should be set to TRUE" )
22422	Assert. assertEquals ( result, "my-very-first-param and second_param_123 or ${something}" )
22423	assertRequest ( "DELETE", "Conference/" )
22424	Assert. assertEquals ( 1, t1. compareTo ( null ) )
22425	assertEquals ( "Cancelled default service com.alibaba.dubbo.rpc.protocol.dubbo.support.DemoService.", result )
22426	assertThat ( restored. get ( ), is ( option. get ( ) ) )
22427	assertThat ( axioms. isEmpty ( ), is ( true ) )
22428	assertTrue ( result. isSuccess ( ) )
22429	assertIsSemver ( semver, version, 1, 2, null, new String [ ] { "beta", "11" }, "sha.0nsfgkjkjsdf" )
22430	Assert. assertFalse ( offsetwaiter. tryWaitfor ( new HostPort ( host, port ), masterInfo, executionLog ) )
22431	assertEquals ( multicron. replaceAll ( "MON", "2" ), cron. asString ( ) )
22432	Assert. assertEquals ( 1, result. getEntities ( ). size ( ) )
22433	assertEquals ( 86399., Time. parseTimeToSeconds ( time ), 0.01 )
22434	assertHaveNoDifferences ( a, b, fieldComparators, defaultTypeComparators ( ) )
22435	Assert. assertEquals ( config. getHashAlgorithm ( ), newVal )
22436	Assert. assertEquals ( new DoubleMatrix ( SOL_33_EXPECTED_ABS ), SOL_33_ACTUAL_ABS )
22437	assertFalse ( result )
22438	assertEquals ( childCombinationFilter, childProject1. getCombinationFilter ( ) )
22439	Assert. assertNull ( pojo. testManager )
22440	Assert. assertSame ( TableTestUtils. ACTUAL_2, actual )
22441	assertEquals ( "Hello ^^^there", ResponseBodyInterpolator. interpolate ( "Hello ^^^there", req ) )
22442	assertEquals ( true, selector. isCountable ( ) )
22443	assertEquals ( "bar - baz", spec. getView ( "default" ). getContent ( ) )
22444	assertEquals ( "", encryption )
22445	Assert. assertEquals ( "Incorrect group heading", heading, group. getHeadingText ( ) )
22446	assertEquals ( "Expected 2 results!", 2, n )
22447	assertEquals ( "1/kg", u. toString ( ) )
22448	assertEquals ( 1, impl. getArgumentIndex ( ) )
22449	assertEquals ( 1, result. size ( ) )
22450	assertEquals ( 0, empty. getCategoryCount ( ) )
22451	assertFalse ( result )
22452	assertEquals ( 5, hitCount )
22453	assertEquals ( "x CONTAINSKEY 'name'", c. toString ( ) )
22454	assertArrayEquals ( plaintext, result )
22455	assertTrue ( result. isLeft ( ) )
22456	assertFalse ( tQuery. containsRowWithKey ( 1337 ) )
22457	assertEquals ( wrappedTemplate + " LIKE?", test. build ( ) )
22458	Assert. assertEquals ( actualMav, null )
22459	assertEquals ( 5, list. size ( ) )
22460	assertEquals ( LOGIN_URL, response. getRedirectedUrl ( ) )
22461	assertEquals ( 10, reportsCount. get ( ) )
22462	assertEqCodes ( new int [ ] { 0b010 }, figure )
22463	assertEquals ( EntityNameCharType. BOUNDARY, type )
22464	Assert. assertEquals ( "{\\"custom_field_num\\":1,\\"custom_field_string\\":\\"string\\",\\"custom_field_boolean\\":true,\\"custom_field1\\":\\"field1\\",\\"custom_field3\\":\\"field3\\",\\"custom_field2\\":\\"field2\\"}", an. toJSON ( ). toString ( ) )
22465	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4 ) ) )
22466	assertEquals ( "a,b,c", ExpressionFieldAction. process ( action, Arrays. asList ( ",", "a", "b", "c" ) ) )
22467	Assert. assertEquals ( new BigDecimal ( 2 ). setScale ( 2 ), capturaReturn. getCap ( ) )
22468	assertEquals ( "0017880100DC880B", address. toString ( ) )
22469	assertResultSet ( res )
22470	assertEquals ( "thumbnail.filename.middle.jpg", filename )
22471	assertTrue ( report. getReportLines ( ). isEmpty ( ) )
22472	Assert. assertEquals ( xmlEsperado, icmsst. toString ( ) )
22473	assertThat ( returnedStatement, is ( base ) )
22474	assertEquals ( "Wrong content", CONTENT, content. getContent ( ) )
22475	Assert. assertNotNull ( jis. getManifest ( ) )
22476	assertSame ( expr. accept ( visitor ), visitResult )
22477	assertEquals ( asList ( new File ( "/opt" ), new File ( "/var" ) ), nonOptions. values ( options ) )
22478	assertThat ( Visitors. readable ( query ), is ( "SELECT selector1.* FROM [nt:unstructured] WHERE selector1.[jcr:uuid] IS NOT NULL ORDER BY NAME(selector1) ASC NULLS LAST" ) )
22479	assertEquals ( 200.0, g. getLength ( ) )
22480	Assert. assertEquals ( "interface Person {\\n" + "    name: string;\\n" + "    email?: string;\\n" + "    age?: number;\\n" + "}", output. trim ( ) )
22481	Assert. assertEquals ( path, ".." + File. separatorChar + ".." )
22482	assertEquals ( "Hash is invalid", PWHASH_DIGEST_EMPTY_STRING, result )
22483	assertFalse ( "No Longer Contains Test2", _fastTable. contains ( "Test2" ) )
22484	assertEquals ( conditions, join. conditions )
22485	assertTrue ( got. contains ( "Enabled service account:" ) )
22486	Assert. assertTrue ( instantiatorResource. meetsQuantitativeRequirements ( request ) )
22487	assertEquals ( "presenter name: Encountered a reference to unknown element 'test'", e. getMessage ( ) )
22488	assertEquals ( 404, responseGet. getStatus ( ) )
22489	assertThatEditorHasValue ( comboBox, "20" )
22490	Assert. assertTrue ( json. contains ( "\\"gauges\\":{},\\"counters\\":{},\\"histograms\\":{},\\"meters\\":{},\\"timers\\":{}" ) )
22491	assertEquals ( 41, p. getAge ( ) )
22492	assertThat ( project. property ( "asakusafw.version" ), is ( "TESTING" ) )
22493	assertThat ( seleniumQueryObject. toString ( ), is ( format ( "$(\\"%s\\").filter(\\"%s\\")", selector, selector ) ) )
22494	assertValidReplaceKind ( repositoryRoot, revision, SVNNodeKind. DIR )
22495	assertEquals ( 1, Context. getPatientService ( ). getPatients ( "1234-4" ). size ( ) )
22496	Assert. assertEquals ( str, str2 )
22497	assertEquals ( "Locations should be the same even though they were expressed differently", l, r )
22498	assertContains ( "<p>Now</p>\\n" + "<p>2011-12-19 10:20:04 AM</p>\\n", result. xml )
22499	mock. assertIsSatisfied ( )
22500	assertEquals ( "https://go.airship.eu", asyncClient. getBaseUri ( ). toString ( ) )
22501	Assert. assertEquals ( numeroNFInicial, dados. getNumeroNFInicial ( ) )
22502	Assert. assertEquals ( 201, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
22503	assertThat ( new JSONObject ( actual ), sameJsonAs ( LOADER. readObj ( "custom-schema.json" ) ) )
22504	Assert. assertFalse ( iStack. push ( 129 ) )
22505	assertNull ( "The appender should be null.", appender )
22506	ConcurrentTestUtil. assertConcurrent ( "", runnables, TEST_TIMEOUT )
22507	assertEquals ( money ( "10.00", USD ), accountBalance. getBalance ( ) )
22508	assertTrue ( results. getMessages ( ). size ( ) > 0 )
22509	assertArrayEquals ( expected, actual )
22510	assertEquals ( original, ArrayUtils. nullToEmpty ( original ) )
22511	assertEquals ( dto. getUserContacts ( ). size ( ), 0 )
22512	assertEquals ( Arrays. asList ( parent1, parent2 ), instance. getParents ( ) )
22513	Assert. assertEquals ( "handle = MethodHandles.foldArguments(handle, " + Fold. FOLD_FUNCTION_JAVA + ");", toJava )
22514	assertNull ( provider. getConverter ( Date. class, null, null ) )
22515	assertEquals ( - 1, ret )
22516	assertFalse ( "We should be out of sync when he havent finished initial scans", lsManager. isInSync ( milestoneTracker ) )
22517	assertEquals ( sv. getString ( context. getValue ( ) ), provider. getString ( context. getValue ( ) ) )
22518	assertEquals ( exp, matrix. getColumn ( 0 ) )
22519	assertFalse ( action. shouldHandle ( flaggable ) )
22520	Assert. assertTrue ( "Failed to read ObservationCodes", list. size ( ) > 0 )
22521	assertEquals ( expResult, result )
22522	assertEquals ( expectedQuery, actualQuery )
22523	assertTrue ( orginalCollection. equals ( Arrays. asList ( set. toArray ( ) ) ) )
22524	Assert. assertTrue ( evictor instanceof LRUEvictor )
22525	assertEquals ( expectedMap, map )
22526	Assert. fail ( "Shouldn't have been able to create a bucket" )
22527	lineage. assertLink ( "nifi_flow", "SimplestFlowPath", "SimplestFlowPath@example", "nifi_flow_path", "GenerateFlowFile, LogAttribute", "d270e6f0-c5e0-38b9" )
22528	assertRowCount ( results, 1 )
22529	PSLTest. assertRule ( dataStore, rule, "" )
22530	assertNotNull ( object )
22531	assertEquals ( 1, rpt. size ( ) )
22532	assertEquals ( "<p><a rel=\\"nofollow\\">Dodgy</a> <a href=\\"http://nice.com\\" rel=\\"nofollow\\">Nice</a></p><blockquote>Hello</blockquote>", TextUtil. stripNewlines ( cleanHtml ) )
22533	assertNotNull ( streamable )
22534	assertEquals ( Arrays. asList ( "A", "C", "D", "BA", "BB" ), result )
22535	Assert. assertEquals ( varName, expectedArray [ i ], resultArray [ i ] )
22536	Assert. assertEquals ( optionsGiven, optionsComputed )
22537	assertEquals ( "", Deencapsulation. getField ( actual, "extra" ) )
22538	assertEquals ( "Nummisuutarit", document. get ( "title" ) )
22539	assertEquals ( stage, c. completable. whenFailed ( consumer ) )
22540	Assert. assertTrue ( false )
22541	assertThat ( options. getCredentialsProvider ( ), is ( DEFAULT_CREDS_PROVIDER ) )
22542	Assert. assertEquals ( jobs, _workflowMap. get ( CLUSTER_NAME ). get ( WORKFLOW_NAME ). getWorkflowConfig ( ). getJobDag ( ). getAllNodes ( ) )
22543	assertThat ( mock. initialDelay, is ( 24L ) )
22544	assertEquals ( "00000001", result )
22545	assertOut ( "/**\\n * @constructor\\n */\\norg.apache.royale.B = function() {\\n};\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('org.apache.royale.B', org.apache.royale.B);\\n\\n\\n/**\\n * @export\\n * @return {Object}\\n */\\norg.apache.royale.B.prototype.foo1 = function() {\\n  var self = this;\\n  function bar1() {\\n    return null;\\n  };\\n  return bar1();\\n};\\n\\n\\n/**\\n * @export\\n * @return {Object}\\n */\\norg.apache.royale.B.prototype.foo2 = function() {\\n  var self = this;\\n  function bar2(param1) {\\n    return null;\\n  };\\n  return bar2('foo');\\n};" )
22546	assertThat ( alertStatusStrip. getBackgroundColor ( ), Is. is ( Robolectric. application. getResources ( ). getColor ( R. color. standby_color ) ) )
22547	assertEquals ( new Integer ( "2147483647" ), result )
22548	assertMockEndpointsSatisfied ( )
22549	assertSame ( logger1, logger2 )
22550	Assert. assertTrue ( LifecycleFilter. initCalled )
22551	assertTrue ( STRATEGY. shouldTerminate ( context ) )
22552	assertSame ( TestEnum. A, copy. getEnumProperty ( ) )
22553	assertEquals ( hll. cardinality ( ), hll2. cardinality ( ) )
22554	Assert. assertEquals ( expectedId, dbms. getId ( ) )
22555	assertEquals ( response, actualResponse )
22556	assertTrue ( failedAsExpected )
22557	assertNull ( id )
22558	objects. assertHasAllNullFieldsOrPropertiesExcept ( someInfo ( ), jedi )
22559	assertThat ( location, is ( nullValue ( ) ) )
22560	assertEquals ( "IdentifierLabel", resource. getIdentifier ( ). get ( 0 ). getValue ( ) )
22561	assertThat ( read ( format, written ), contains ( true ) )
22562	Assert. assertEquals ( expected. toString ( ), new TreeSet < String > ( policy. getAllPrivileges ( set ( "other_group" ), ActiveRoleSet. ALL ) ). toString ( ) )
22563	assertDefaults ( targetProduct, false )
22564	assertChildrenInclude ( branches, expectedRemoteBranchNames ( ) )
22565	Assert. assertEquals ( 1, result. size ( ) )
22566	assertTrue ( "BeanFactory was not used correctly", classesPassedToFactory. contains ( config. getClass ( ) ) )
22567	Assert. assertFalse ( "Invalid result [" + result + "]", result )
22568	assertEquals ( MockHttpServletResponse. SC_OK, response. getStatus ( ) )
22569	assertEquals ( "", "" + swct )
22570	Assert. assertThat ( test. getStdOut ( ), CoreMatchers. containsString ( "Did you mean this?" ) )
22571	assertEquals ( Boolean. FALSE, e. getEnableCounting ( ) )
22572	Assert. assertTrue ( this. manager. delete ( new Person ( this. doc ) ) )
22573	assertThat ( kryo, is ( CorcInputFormat. toKryo ( searchArgument ) ) )
22574	assertTrue ( res. equals ( result. toString ( ) ) )
22575	assertThat ( nonFailingSubscriber. received. size ( ), equalTo ( 2 ) )
22576	assertEquals ( expected, request. getRequestBody ( ) )
22577	assertEquals ( BuilderFactory. start ( ). add ( "a", 123456789L ). build ( ), doc )
22578	assertThat ( confirmation. getConfigurationKey ( ), equalTo ( keyValueType ) )
22579	assertEquals ( childProject1. getTouchStoneCombinationFilter ( ), childCombinationFilter )
22580	assertArrayEquals ( expResult, result )
22581	assertEquals ( "Simple Content", metadata. get ( TikaCoreProperties. TITLE ) )
22582	assertEquals ( jobTrackerPort, namedClusterBridge. getJobTrackerPort ( ) )
22583	assertEquals ( 400, response. getStatusLine ( ). getStatusCode ( ) )
22584	Assert. assertEquals ( eDate, cDate )
22585	Assert. assertTrue ( "Best point not reported", f. value ( sol ) <= f. value ( expected ) )
22586	rule. assertScenarioEnded ( )
22587	assertFalse ( order. hasSameOrderableAs ( otherOrder ) )
22588	Assert. assertTrue ( true )
22589	assertTrue ( resultMessage ( result, POST ), result. passedValidation ( ) )
22590	Assert. assertEquals ( 2, set. size ( ) )
22591	assertions. isGreaterThan ( new Long ( 10l ) )
22592	assertTrue ( fetchCommand. isAValidDefinition ( createPerspectiveDefinition ( ) ) )
22593	Assert. assertEquals ( "Table_map", actual )
22594	assertEqualsIgnoreWhitespace ( drl, actualDrl )
22595	assertEquals ( "Editable Owner ACE for UID1 should be equal to expectedOwnerAccessControlEntry", expectedOwnerAccessControlEntry, store. getEditableOwnerAccessControlEntries ( UID1 ). get ( 0 ) )
22596	assertEquals ( "The job has been failed", LauncherStatus. COMPLETED, AddVectorET. runAddVector ( args ) )
22597	Assert. assertEquals ( reqTotal + 1, ratisMetricRegistry. counter ( RATIS_GRPC_METRICS_REQUESTS_TOTAL + GrpcServerMetrics. getHeartbeatSuffix ( heartbeat ) ). getCount ( ) )
22598	assertThat ( CompUInt128. extractValue ( actual ), Is. is ( expected ) )
22599	assertEquals ( 400, status. getStatusLine ( ). getStatusCode ( ) )
22600	assertEquals ( "Did not fail with expected QueryPlannerException", expected, msg )
22601	assertTrue ( list. equals ( plist ) )
22602	assertFieldValues ( new String [ ] { " ", "0", "0", "0", "0", "No" }, showView. getFieldValuesExcludingId ( ) )
22603	assertTrue ( dependentService. getValue ( )!= null )
22604	assertThat ( results. getTotalElements ( ), is ( greaterThanOrEqualTo ( 1L ) ) )
22605	assertThat ( matcher. matches ( list ), is ( true ) )
22606	assertEquals ( g1, g2 )
22607	assertTrue ( i > 1 )
22608	assertFalse ( matches )
22609	assertIsSatisfied ( 2L, TimeUnit. SECONDS, out )
22610	assertEquals ( PostStatus. PENDING, post. getStatus ( ) )
22611	assertEquals ( 84.0, r. getUpperBound ( ), 0.00001 )
22612	arrays. assertDoesNotContain ( description, actual, value, index )
22613	assertTrue ( sqsConnection. getSessions ( ). isEmpty ( ) )
22614	assertEquals ( 1, messages. size ( ) )
22615	assertNotEquals ( set1, set2 )
22616	assertNotNull ( nacionalidad. getId ( ) )
22617	assertEquals ( "a<V>\\n", found )
22618	assertNotEqualsBothWays ( one, two )
22619	assertThat ( catalogue. readOnlyAttributes ( ). keySet ( ), hasItems ( "readOnlyField", "readOnlyProperty", "writableField", "encapsulatedField", "hashCode", "class", "toString" ) )
22620	assertThat ( PrettyTime. of ( Locale. US ). withDefaultListSeparator ( " | " ). print ( duration, TextWidth. WIDE ), is ( "1 year | 2 months | 3 days" ) )
22621	assertTrue ( "The subject should have retained the fetched values", result1 )
22622	assertTrue ( process. getExitOnStandardFault ( ) )
22623	assertEquals ( ExpressionFactory. dbPathExp ( "artistExhibitArray.toArtist.paintingArray.toGallery" ), translatedExpression )
22624	assertOut ( "var /** @type {XML} */ a = XML('@')" )
22625	assertThat ( getCreatedPodSpecContainer ( ). getEnv ( ), allOf ( hasItem ( configMapKeyRefEnvVar ), hasItem ( secretKeyRefEnvVar ), hasItem ( fieldRefEnvVar ) ) )
22626	assertTrue ( bugs. toString ( ), bugs. isEmpty ( ) )
22627	assertEquals ( "Only one @Singleton instance was supposed to be used, ", report. beanId1, report. beanId2 )
22628	Assert. assertEquals ( expected, widgetFromService )
22629	assertEquals ( asList ( "4" ), b. getStrings ( ) )
22630	assertTrue ( eq. interpret ( Version. valueOf ( "1.0.0" ) ) )
22631	Assert. assertEquals ( "Secure Hello World!", proxy. sayHello ( ) )
22632	assertEquals ( TrueSchema. builder ( ). build ( ), actual. getAllItemSchema ( ) )
22633	assertEquals ( expResult, result )
22634	assertEquals ( NOT_DECODED, 1, object. getIdentifier ( ) )
22635	assertEquals ( 15, atAct2. get ( 0 ) )
22636	TestUtil. assertEquals ( exp, spans )
22637	assertTrue ( width == 400 )
22638	assertEquals ( HttpStatus. FORBIDDEN, responseImpl. status ( ) )
22639	assertEquals ( actual, expected )
22640	Assert. assertTrue ( savedRow > 0 )
22641	assertNull ( deliverer )
22642	Assert. assertTrue ( cover. getBoundaries ( ). getX ( ). getMax ( ) > TEST_MODEL. getBoundaries ( ). getX ( ). getMax ( ) )
22643	assertTrue ( OperationalMessage. messageFrom ( text ). isJoin ( ) )
22644	Assert. assertNotNull ( product )
22645	assertFalse ( "Rules with different priority levels cannot be equal", r1. equals ( r2 ) )
22646	assertEquals ( expected, result )
22647	assertArrayEquals ( BufferUtils. getIncreasingByteArray ( ( int ) BLOCK_LENGTH, ( int ) BLOCK_LENGTH ), b )
22648	assertEquals ( "Incorrect age", age, patient. getAge ( ) )
22649	assertTrue ( latch. await ( 5_000, TimeUnit. MILLISECONDS ) )
22650	Assert. assertEquals ( resourceContent, writer. toString ( ) )
22651	assertThat ( invokedTimes. get ( ), is ( 3 + 1 ) )
22652	Assert. assertTrue ( queryResult. getSize ( ) >= 1 )
22653	assertThat ( NF. textNode ( "foo" ), is ( sut ) )
22654	assertEquals ( "GBP 1.11", test. toString ( ) )
22655	arrays. assertIsSubsetOf ( someInfo ( ), actual, newArrayList ( "Luke", "Yoda" ) )
22656	assertEquals ( 0, bpt. getOutputError ( ). getTotalNetworkError ( ), 0.1 )
22657	assertMessages ( "read", 3, "readCbuf" )
22658	assertEquals ( "every 4 seconds starting at second 03, every 6 minutes starting at minute 05, every 8 hours starting at 07am, " + "every 2 days startint on the 9th, every 2 months starting in October, in 2017", descriptor. describe ( cron ) )
22659	assertEquals ( SchemaFromInd2AndSubfield2. class, field. getDefinition ( ). getFieldIndexer ( ). getClass ( ) )
22660	assertThat ( crawlRules. getWaitAfterReloadUrl ( ), is ( 123L ) )
22661	Assert. assertEquals ( 1, response. getTotalHits ( ). value )
22662	assertEquals ( "Expected 1 result!", 1, count )
22663	assertResult ( testSubject. findAnnotatedModel ( "one" ), ONE, "asd" )
22664	assertEquals ( expected, replaceAclEntries ( existing, aclSpec ) )
22665	assertEquals ( OP_PROP_VALUE, parsed. getOperationName ( ) )
22666	assertEquals ( expected, actual )
22667	Assert. assertEquals ( 4., analyser. getWaitingTime ( route ), 0.01 )
22668	assertEquals ( p1, p2 )
22669	Assert. assertTrue ( Math. abs ( daycountFractionICMA - daycountFractionISDA ) < 1.0E-8 )
22670	assertEquals ( "0", profileProperties. getProperty ( "defaultThrottle" ) )
22671	assertFalse ( alive )
22672	assertEquals ( 1, commission, 0 )
22673	assertInstanceOf ( SwapMoveSelector. class, moveSelector )
22674	assertEquals ( asList ( error ( mdcValues, marker, throwable, message ) ), testLogger. getLoggingEvents ( ) )
22675	assertTrue ( content. hasField ( FieldType. shortUrl ) )
22676	Assert. assertNotNull ( controllerResponse )
22677	Assert. assertEquals ( state, updates. getLastSyncState ( userName, folderId ) )
22678	assertThat ( backtrace, hasItem ( "at airbrake.Exceptions.newException(Exceptions.java:16)" ) )
22679	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
22680	Assert. assertEquals ( true, agent. detectIpod ( ) )
22681	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
22682	assertEquals ( count, ctr. getCount ( ) )
22683	assertTrue ( output. contains ( uuid ) )
22684	assertEquals ( expected, ex. getMessage ( ) )
22685	assertEquals ( new org. apache. http. client. utils. URIBuilder ( SERVICE_ROOT + "/Products(5)" ). addParameter ( "$expand", "ProductDetails($expand=ProductInfo;$select=Price),Orders,Customers" ). build ( ), uri )
22686	Assert. assertEquals ( 1, ( int ) reporter. getProblemCounters ( ). get ( Code. FIELD_NO_LONGER_STATIC. code ( ) ) )
22687	assertEquals ( 2, events. size ( ) )
22688	throwables. assertHasMessageMatching ( info, actual, REGEX )
22689	Assert. assertEquals ( 5089, concept. getId ( ). intValue ( ) )
22690	assertEquals ( 41, tdefsRes. getBody ( ). length )
22691	assertTrue ( page. asText ( ). contains ( "No Description" ) )
22692	assertEquals ( expResult, result )
22693	assertSame ( value, result )
22694	Assert. assertTrue ( true )
22695	assertEquals ( expectedAst, ast. dump ( "" ) + "\\n" )
22696	assertEquals ( "Find by UoM label not returning a list with one reading", 1, readings. size ( ) )
22697	assertOut ( "/**\\n * @export\\n * @override\\n */\\nRoyaleTest_A.prototype.foo = function() {\\n  RoyaleTest_A.superClass_.foo.apply(this, [a, b, c]);\\n}" )
22698	assertNotNull ( stream )
22699	assertEquals ( coverageMeasure, qualityResult. getMeasure ( "coverage" ) )
22700	assertEquals ( "fail", thrown. getMessage ( ) )
22701	assertEquals ( propMatch, properties )
22702	assertSame ( resp, httpResponse )
22703	Assert. assertEquals ( "subsystem=test/resource=name", s )
22704	Assert. assertTrue ( tree. getRoot ( ). forceObject. equals ( expectedForceObject ) )
22705	Assert. assertEquals ( 4, fromDependencies. size ( ) )
22706	assertEquals ( 19, result. size ( ) )
22707	assertEquals ( METHOD_COUNT, functionImportList. size ( ) )
22708	assertEquals ( ansi ( ). a ( INTENSITY_BOLD ). a ( "Hello" ). reset ( ). toString ( ), str )
22709	assertTrue ( s. isSentToRawPubKey ( ) )
22710	assertNotNull ( Deencapsulation. getField ( jobsResponseParser, "updateTwin" ) )
22711	assertThat ( ( TraceeBackend ) FieldAccessUtil. getFieldVal ( interceptor, "backend" ), is ( Tracee. getBackend ( ) ) )
22712	assertEquals ( expected, actual )
22713	Assert. assertTrue ( handle )
22714	assertNotNull ( tableDesc. getPrimaryKeyDesc ( ) )
22715	assertTrue ( voter. voteMatch ( affiliation, organization ) )
22716	Assert. assertEquals ( 51d, activityState, 0.01 )
22717	Assert. assertEquals ( expectedString, resultString )
22718	Assert. assertEquals ( "drugorder", created. get ( "type" ) )
22719	assertNotNull ( reportExecTO )
22720	Assert. assertEquals ( "Non-optimal coverage: ", 1d, best. getCoverage ( ), 0.001 )
22721	assertLinkWithPoolgroupsOk ( poolgroups )
22722	assertEquals ( id3v1Tag, wrapper. getId3v1Tag ( ) )
22723	assertNull ( classUnderTest. getStatusBarFontInfo ( ) )
22724	assertNotNull ( bar )
22725	assertThat ( issue. toString ( ), is ( "foo.js:1:1:you broke it" ) )
22726	assertThat ( result, is ( nullValue ( ) ) )
22727	assertEquals ( "喔�喔编�喔о�喔�喔班�喙�喔�喔�", t. format ( new Date ( 0 ) ) )
22728	assertEqualsSet ( "DataOneOf.rdf", ax, Declaration ( DP ) )
22729	assertFalse ( result )
22730	assertEquals ( "!x\\n", sWriter. toString ( ) )
22731	Assert. assertNotNull ( factory. create ( ) )
22732	assertEquals ( Status. DEADLINE_EXCEEDED. getCode ( ), status. getCode ( ) )
22733	assertNotNull ( result )
22734	assertNotNull ( "WorkersCompensationRate is null", entity )
22735	assertNotNull ( Mobile. reader ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
22736	assertTrue ( d_pm. getCriterionEnabledModel ( ExampleData. buildEndpointHamd ( ) ). getValue ( ) )
22737	assertThat ( result, is ( nullValue ( ) ) )
22738	assertEquals ( expecteds, actuals )
22739	assertEquals ( AuthorizationResult. Decision. PERMIT, result. getDecision ( ) )
22740	assertions. isEqualTo ( expected )
22741	assertEquals ( 0, tasks. size ( ) )
22742	assertSerializedEquals ( c )
22743	assertEquals ( "亘毓丿 3 丕�丕�", t. format ( new Date ( 1000 * 60 * 60 * 24 * 3 ) ) )
22744	Assert. assertEquals ( "", result )
22745	assertEquals ( s_expected_1, Hex. toHexString ( item1. getData ( ) ). toUpperCase ( ) )
22746	Assert. assertEquals ( "allfine", testBean. someFineMethodFromParent ( ) )
22747	assertEquals ( exp, act )
22748	assertions. isLessThan ( actual. byteValue ( ) )
22749	assertNotNull ( AvailableAddOnExtension. reader ( "XBXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
22750	assertEquals ( componentName, "${componentNameClass}Output" )
22751	assertTrue ( e. getMessage ( ). contains ( badCell ) )
22752	assertThat ( isValid, is ( equalTo ( true ) ) )
22753	assertTrue ( mutationsOccurred. get ( ) )
22754	Assert. assertTrue ( convert ( path, namespace, files ). isEmpty ( ) )
22755	assertEquals ( expected, result )
22756	assertEquals ( HttpStatusCode. NOT_FOUND_404, response. getStatusLine ( ). getStatusCode ( ) )
22757	assertEquals ( expected, actual )
22758	assertEquals ( Status. ERROR, status )
22759	assertEquals ( subsection, section. getConfigurationSection ( key ) )
22760	assertTrue ( result. size ( ) >= 1 )
22761	assertEquals ( 1, statisticsController. getPlayer1Wins ( ) )
22762	assertEquals ( "", result )
22763	assertEquals ( out. readableBytes ( ), 0 )
22764	assertEquals ( 174, readValue )
22765	assertThat ( sampleEntity1, is ( notNullValue ( ) ) )
22766	assertCharsets ( JodaBeanSer. PRETTY, json, bean, Address. class )
22767	assertEquals ( "Good Morning!", hello. sayHello ( ) )
22768	assertEquals ( - 12, testApp. executeApplication ( args ) )
22769	assertTrue ( places. hasNext ( ) )
22770	assertEquals ( 0, errors. size ( ) )
22771	Assert. assertEquals ( conf. getInt ( DFS_REPLICATION_KEY, DFS_REPLICATION_DEFAULT ), number )
22772	assertEquals ( v8. hashCode ( ), global. hashCode ( ) )
22773	assertThat ( executeCommand ( "cassandra-admin:stop" ), containsString ( "No runnung embedded Cassandra service found" ) )
22774	assertEquals ( "璁＄����璇�", 27, rs )
22775	assertEquals ( 255, buffer. getShort ( 0 ) )
22776	assertEquals ( 2, instance. getFeatures ( ). size ( ) )
22777	assertEquals ( expResults, results )
22778	assertEquals ( expected, test )
22779	assertEquals ( expected, actual )
22780	assertEquals ( "L2_of_" + input, name )
22781	Assert. assertTrue ( errors. hasFieldErrors ( "name" ) )
22782	SqlScriptDescriptorAssert. assertThat ( scriptDescriptors )
22783	assertFalse ( "Cannot remove DOI from item metadata.", foundDOI )
22784	assertEquals ( propertyValue, resultMap. get ( "Name" ) )
22785	Assert. assertEquals ( 1, encounters. size ( ) )
22786	assertEquals ( expecting, found )
22787	assertThat ( references. size ( ), is ( 0 ) )
22788	assertEquals ( "13978AEE95F38490E9769C39B2773ED763D9CD5F", Hex. toHexString ( addr ). toUpperCase ( ) )
22789	visitor. assertSatisfied ( "checking state contains two branches", _rootComposite )
22790	assertEquals ( numMessagesFirstPass, numMessagesSecondPass )
22791	assertTrue ( "size must be more than 0, but it is - " + queryModel. size ( ), queryModel. size ( ) > 0 )
22792	Assert. assertTrue ( normalized <= 1 && normalized >= 0, String. format ( "input: %s, output: %s", i, normalized ) )
22793	assertEquals ( null, lijst. getLast ( ) )
22794	Assert. assertNotEquals ( first, second )
22795	assertFileContentIsMatching ( result )
22796	assertEquals ( "x", x )
22797	assertThat ( resultSet, hasSize ( 1 ) )
22798	assertArrayEquals ( new char [ ] { 'n', 'e', 'u' }, pj. getAxisDirections ( ) )
22799	assertModelWasInjectedWithListOf ( )
22800	assertEquals ( ( limit + 1 ) * ( limit / 2 ), total. sum ( ) )
22801	assertParseTree ( rootNode ( "12", node ( "digits", Arrays. asList ( "1", "2" ), "12", stringNode ( "d", "1" ), stringNode ( "d", "2" ) ) ), tree )
22802	assertEquals ( expResult, result, 0.0001 )
22803	assertMessage ( ":1 You haven't specified the command output.", response )
22804	assertEquals ( 1, findings. size ( ) )
22805	assertNull ( reader. overflowAtoms ( ) )
22806	assertEquals ( "Hash is invalid", SHA256_DIGEST_EMPTY_STRING, result )
22807	assertEquals ( 404, cr. getStatus ( ) )
22808	assertEquals ( simpleDbUsers. get ( simpleDbUsers. size ( ) - 1 ). getItemName ( ), findAll. iterator ( ). next ( ). getItemName ( ) )
22809	assertMockEndpointsSatisfied ( )
22810	assertFalse ( result )
22811	assertThat ( result, is ( "OrderServiceImpl: function(): null: staticFunction" ) )
22812	assertTrue ( pg. getId ( )!= null )
22813	Assert. assertEquals ( "echo $ \\' echo \\"hello\\"\\'", commands [ 0 ] )
22814	assertEquals ( "(void foo ;)\\n", found )
22815	Assert. assertEquals ( "CsvConfiguration [hasHeader=true, separator=S, quotechar=Q, escape=E, skipSpaces=true]", configuration. toString ( ) )
22816	assertEquals ( wsos, wsis. getOutputPeer ( ) )
22817	assertThat ( factory. getInstance ( ), instanceOf ( MockMailer. class ) )
22818	assertThat ( patientResource. getProfile ( ), containsString ( PATIENT_SUB ) )
22819	Assert. assertThat ( actual, CoreMatchers. is ( expected ) )
22820	assertNotNull ( "invalid workflow", iridaWorkflowLoaderService. loadIridaWorkflow ( workflowDescriptionPath, workflowStructurePath ) )
22821	assertThat ( contentTypeString, is ( contentType. toString ( ) ) )
22822	Assert. assertNotNull ( "Expected to be able to get MeteredInterface by interface and not by class.", mi )
22823	assertEquals ( "Message not found", "Please enter a value", driver. findElement ( By. cssSelector ( ".error" ) ). getText ( ) )
22824	assertThat ( result, is ( false ) )
22825	assertEquals ( expectedSplits, new TreeSet < > ( createdSplits ) )
22826	assertEquals ( MinaTransporter. class, ExtensionLoader. getExtensionLoader ( Transporter. class ). getExtension ( name ). getClass ( ) )
22827	assertThat ( result. size ( ), is ( 0 ) )
22828	assertEquals ( false, rm. incomingServerRequestMatchesMethod ( withResourceAndParams ( "Patient", RequestTypeEnum. GET, inputParams ) ) )
22829	assertThat ( imageName, is ( defaultImages. getBaseImage ( Application. class ) ) )
22830	assertThat ( underTest. isSatisfied ( ), is ( true ) )
22831	assertEquals ( "h-na-alice-wa-suki-desu-ka-do-you-like-alice-when_321609", ripper. getGID ( url ) )
22832	assertEquals ( ( short ) 8, ( short ) result. getShortWrapperValue ( ) )
22833	assertEquals ( "nine hundred and ninety-nine trillion, " + "nine hundred and ninety-nine billion, " + "nine hundred and ninety-nine million, " + "nine hundred and ninety-nine thousand and " + "nine hundred and ninety-nine dollars", words )
22834	mock. assertIsNotSatisfied ( )
22835	assertThat ( found, equalTo ( expected ) )
22836	assertEquals ( "members should be the same", member, returnedMember )
22837	context. assertIsSatisfied ( )
22838	assertIsErrorWithoutStacktrace ( "Method 'notTheMethod' was not found in class 'com.fnproject.fn.runtime.testfns.ErrorMessages.OneMethodClass'. Available functions were: [theMethod]" )
22839	assertCity ( docs, "Erlangen" )
22840	assertTrue ( "http://foo.bar.com/fubar?e=f". equals ( newEu ) )
22841	Assert. assertTrue ( "Expected aKRB5 cipher suites, got null", resolved!= null && resolved. size ( )!= 0 )
22842	assertThat ( integerProperty, is ( equalTo ( 42 ) ) )
22843	assertEquals ( "V2 GenreDescription", wrapper. getGenreDescription ( ) )
22844	assertEquals ( response. getStatus ( ), HttpServletResponse. SC_NOT_MODIFIED )
22845	assertThat ( screenshotDirectory, endsWith ( "webdriverextensions" + separator + "screenshots" + separator + anyFileName + ".png" ) )
22846	assertEquals ( "Encoding a null string should return null", null, encoded )
22847	assertEquals ( "Destriction", entity. getDescription ( ) )
22848	assertMockEndpointsSatisfied ( )
22849	assertTrue ( skillConstraint. fulfilled ( insertionContext ) )
22850	Assert. assertEquals ( "Timer ticks should register some ++!", 1, this. bean. getTimerTicks ( ) )
22851	assertTrue ( WIOPFactories. isTransportInUse ( ) )
22852	assertEquals ( expected, TypeDefinition. getInstance ( Qux. class ). getAllGetters ( ) )
22853	Assert. assertEquals ( numero, importacaoAdicao. getNumero ( ) )
22854	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, testName + "_diff" ) )
22855	assertEquals ( result, one )
22856	assertTrue ( true )
22857	assertEquals ( count, service. prepare ( query ). countEntities ( fetchOption ) )
22858	assertEquals ( expResult, result )
22859	assertNull ( RenderKitUtils. decodeBehaviors ( facesContext, component ) )
22860	Assert. assertTrue ( notify. matches ( 30, TimeUnit. SECONDS ) )
22861	Assert. assertTrue ( read. contains ( str ) )
22862	assertEquals ( HttpStatusCodes. OK. getStatusCode ( ), response. getStatusLine ( ). getStatusCode ( ) )
22863	Assert. assertEquals ( 1, instance. list. size ( ) )
22864	assertEquals ( MD5HashStrategy. class, actual. getClass ( ) )
22865	assertEquals ( "Incorrect Short Reason", "Platform Down leela.local Baseline (baseline threshold) ", alertManager. getShortReason ( testPlatformAlert ) )
22866	Assert. assertEquals ( numeroPedidoItemCliente, produto. getNumeroPedidoItemCliente ( ) )
22867	Assert. assertEquals ( "apk.appVersionCode", "1", apk. getAppVersionCode ( ) )
22868	assertSame ( s, StringDistances. create ( s ) )
22869	assertEquals ( poly, parsed )
22870	assertFalse ( containsAll )
22871	assertEquals ( c1, c2 )
22872	assertThat ( mergedExplicitSchema, is ( expectedMergedSchema ) )
22873	assertNotNull ( array )
22874	assertEquals ( "3 viikon p盲盲st盲", t. format ( new Date ( 1000 * 60 * 60 * 24 * 7 * 3 ) ) )
22875	assertEquals ( "default-url", configuration. evaluateToString ( "datasources.customer.url" ) )
22876	assertThat ( highAvailabilitySupportChecker. isSupported ( FORMAT_NAME ), is ( true ) )
22877	assertTrue ( ( brokenSchemaEx. getMessage ( )!= null ) && ( brokenSchemaEx. getCause ( )!= null ) )
22878	assertThat ( probe. values, CoreMatchers. equalTo ( ( Set ) new HashSet < > ( asList ( 1, 2, 3, 4 ) ) ) )
22879	assertNotNull ( request. getSession ( ). getAttribute ( Constants. PREFERRED_LOCALE_KEY ) )
22880	assertEquals ( "Wrong ID URL", expResult, result. toString ( ) )
22881	assertEquals ( false, bm. isBitSet ( bitNumber ) )
22882	assertNotNull ( cert )
22883	Assert. assertEquals ( AccessDeniedExceptionHandler. ERROR_MESSAGE, message )
22884	assertNotNull ( result )
22885	Assert. assertEquals ( false, actual )
22886	assertEquals ( "11223344556677889900AABBCCDDEEFF", key. toString ( ) )
22887	assertTrue ( user. getValue ( ). getName ( ). equals ( "test" ) )
22888	assertThat ( errors, is ( empty ( ) ) )
22889	assertThat ( actual, is ( object ) )
22890	assertNotNull ( portal. getPage ( new PageId ( "get-page", "bar" ) ) )
22891	assertSententences ( expected, service. predict ( text, suggestions ), text, suggestions )
22892	Assert. assertEquals ( IOUtil. toString ( new FileInputStream ( new File ( "src/test/resources/versionInfoFileRewritten-alpha-20.xml" ). getAbsoluteFile ( ) ), "UTF-8" ), IOUtil. toString ( os. toByteArray ( ), "UTF-8" ) )
22893	assertEquals ( layout. getRows ( ), readLayout. getRows ( ) )
22894	Assert. assertEquals ( "license1=This is mine!", licenseContent. trim ( ) )
22895	assertNotNull ( "User cannot be null.", user )
22896	assertPermission ( perms )
22897	Assert. fail ( "Test should fail, user shouldn't be allowed to invoke that method" )
22898	assertTrue ( result >= 2000 )
22899	assertThat ( feature. getName ( ), Is. is ( "test.feature" ) )
22900	assertSame ( tt2, tt )
22901	assertOngoingMappingDataIsAccurate ( )
22902	assertEquals ( future. get ( ), TestHandler. ECHO_PREFIX + "Bob" )
22903	assertEquals ( model, RdfTestHelpers. parseRdf ( RdfTestHelpers. getResourceFromFile ( "QuantityValue.rdf" ) ) )
22904	Assert. assertEquals ( 3, bitmap. size ( ) )
22905	assertSame ( ret, projectItem )
22906	Assert. assertEquals ( p4, p3 )
22907	assertNotEquals ( null, iotHubServiceClient )
22908	assertEquals ( UNESCAPED, encoder. encode ( UNESCAPED, context, CsvPreference. STANDARD_PREFERENCE ) )
22909	Assert. assertEquals ( "{\\"email\\":\\"test@email.com\\",\\"birthday\\":\\"2012-11-23 00:00:00\\"}", json )
22910	assertFalse ( "Values should not be equal", equals )
22911	assertThat ( actual, is ( expected ) )
22912	assertEquals ( control, key )
22913	assertNull ( result )
22914	Assert. assertEquals ( out, HexUtil. toHexString ( builder. buildArray ( ) ) )
22915	assertTrue ( "Should match", query1. equals ( query ) )
22916	assertEquals ( "testOperationIdResolver", serviceId )
22917	assertThat ( list, hasItems ( "a", "b", "c" ) )
22918	assertEquals ( "Conversion did not match", value, to )
22919	assertEquals ( "<order><id>123/id><customerId>4444/customerId><date>20170810</date>" + "<item><id>222</id><amount>1</amount></itemn></order>", xml )
22920	assertEquals ( 0, dbHandler. getGPSTrackCount ( ) )
22921	Assert. assertTrue ( check. equals ( o ) )
22922	assertThat ( factory. getObjectInstance ( ref, null, null, null ), instanceOf ( DataSource. class ) )
22923	assertThat ( comparator. compare ( projectChange1, projectChange2 ), is ( lessThan ( 0 ) ) )
22924	Assert. assertEquals ( result. getHits ( ). get ( 0 ). getExplanation ( ). getDetails ( ). get ( 0 ). getDetails ( ). get ( 0 ). getDescription ( ), result. getHits ( ). get ( 1 ). getExplanation ( ). getDetails ( ). get ( 0 ). getDetails ( ). get ( 0 ). getDescription ( ) )
22925	assertEquals ( expectedArg, parsedArg )
22926	assertTrue ( getExpectedErrorMsg ( ), result )
22927	assertEquals ( "GBP 2.34", test. toString ( ) )
22928	assertEquals ( expected, result )
22929	assertOnResponseAttachment ( f3gbServer, MAX_SIZE2 )
22930	Assert. assertNotNull ( obj )
22931	Assert. assertFalse ( dsDao. getDSInfo ( remoteDSAddress ). isUp ( ) )
22932	assertNotNull ( UserChannel. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "USXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
22933	assertTrue ( sWriter. toString ( ). startsWith ( "!xspy4j.Py4JException: " ) )
22934	assertFrameHex ( "Lax Text Frame with RSV3", expected, actual )
22935	assertTrue ( "Behavior should not switch to IsolatedLeader because elections are disabled", newBehavior instanceof Leader )
22936	assertThat ( expectedQueryFilterSpec, new ReflectionEquals ( unmarshalledQFS ) )
22937	assertThat ( results, samePaths ( new File ( b, "f.txt" ) ) )
22938	assertEquals ( 1, ksession1. fireAllRules ( ) )
22939	assertEquals ( 0, events. size ( ) )
22940	Assert. assertFalse ( duplicateWorkComparator. isDuplicate ( doc1, doc2, null ) )
22941	assertEquals ( "Wrong property value (path=" + path + ")", "Assignment 1", property. getRealValue ( ) )
22942	assertEquals ( "SELECT * WHERE {?user?_c2?_c3 ;?_c4?user_name }" )
22943	assertNull ( "Found non-existant file: " + filenameNonExistent, in )
22944	assertTestRunFails ( testPlan )
22945	Assert. assertEquals ( expectedSize, event. size ( ) )
22946	assertTrue ( httpResponse. getStatusCode ( ) == 200, httpResponse. getResponse ( ) )
22947	assertObjectEquals ( "{f1:'f1',f3:'f3'}", e )
22948	assertOut ( "/**\\n * @export\\n * @param {string=} bar\\n * @return {number}\\n */\\nRoyaleTest_A.prototype.foo = function(bar) {\\n  bar = typeof bar!== 'undefined'? bar : \\"baz\\";\\n  return -1;\\n}" )
22949	assertThat ( formatter. isStrict ( ), is ( true ) )
22950	assertEquals ( expResult, result )
22951	assertEquals ( "https://sun9-41.userapi.com/c857520/v857520962/10e24a/EsDDQA36qKI.jpg", ripper. getBestSourceUrl ( new JSONObject ( json ) ) )
22952	assertNotNull ( ldapServer )
22953	assertTrue ( instanceConstraintViolationsList. toString ( ), instanceConstraintViolationsList. size ( ) == 1 )
22954	assertThat ( result, is ( new String [ ] [ ] { { "this" }, { "is" }, { "a" }, { "test" } } ) )
22955	assertEquals ( "EUR", accountMap. get ( "currency" ) )
22956	assertThat ( toJson, is ( "[]" ) )
22957	AssertionUtils. multiAssertEquals ( createAsDocument9, response5. getResponseObject ( ) )
22958	assertObjectEquals ( "{type:'object',properties:{f1:{type:'string'}},'x-example':{f1:'foobar'}}", s. getSchema ( SimpleBean. class ) )
22959	assertEquals ( activeThreadCount, JsonValue. NULL )
22960	assertExpectedPreprocessingResult ( expectedResultLocation, includeReader )
22961	assertTrue ( smileys. isEmpty ( ) )
22962	assertEquals ( "from config pojo", mojo. getParsedStringValue ( ) )
22963	assertTrue ( response. getNumberOfFeatures ( ). intValue ( ) == 1 )
22964	assertTrue ( hasImage ( IMAGE_TAG ) )
22965	assertEquals ( NEW_ENCODING, request. getCharacterEncoding ( ) )
22966	assertEquals ( DOMAIN, bareJID )
22967	Assert. assertEquals ( "70617373776F7264", codec. encode ( "password" ) )
22968	assertThat ( jsonAsMap. get ( "enum_Property" ), is ( "4! 1" ) )
22969	assertThat ( impl. getOntologyIds ( ). count ( ), is ( 0L ) )
22970	assertNotNull ( "converter must not be null", s )
22971	assertEquals ( "TestUpdate", gbpNetworkServicePolicy. getName ( ) )
22972	assertTrue ( suffix1. equals ( suffix2 ) )
22973	assertArrayEquals ( expected, fileArray )
22974	assertThat ( result, is ( CodePoints. NOT_FOUND ) )
22975	assertTrue ( isEqual ( mockStopPoint, actualStopPoint ) )
22976	assertEquals ( uploadLocation + FileUtils. toDir ( stateToken ) + filename + "." + subExt + pngExtension, absFile )
22977	assertEquals ( ( float ) 8, result. getFloatValue ( ), 0.0 )
22978	Assert. assertEquals ( ".", actual )
22979	assertEquals ( expResult, result )
22980	assertEquals ( "conte", s )
22981	assertThat ( roundtrippedRecord, equalTo ( record ) )
22982	assertEquals ( "hello", result )
22983	assertEquals ( HttpStatus. OK_200, resp. getStatus ( ) )
22984	assertEquals ( "Invalid version extracted", expVersion, result. getParentVersion ( ) )
22985	excelApplicationManager. assertContent ( new File ( getClass ( ). getResource ( "expected_ok.xls" ). toURI ( ) ), EMPTY_LIST, "border,font-size" )
22986	Assert. assertNotNull ( artifact )
22987	Assert. assertTrue ( os. toString ( "UTF-8" ). contains ( "Unknown target" ) )
22988	assertEquals ( expResult, result )
22989	assertThat ( extractMonitorables ( adapter ). get ( MEAN ). get ( ), Matchers. < Object > is ( newMean ) )
22990	assertThat ( runs, iterableWithSize ( 0 ) )
22991	assertNotNull ( mapper. mapCompleteBalanceResultForCurrency ( currencyType, completeBalanceResults ) )
22992	Assert. assertTrue ( dbf2. membershipTest ( key ) )
22993	assertThat ( representation. getInteger ( "size" ), is ( 284569 ) )
22994	assertEquals ( null, avg )
22995	assertTrue ( "Should have connected to the server.", ourServer. waitForClient ( TimeUnit. SECONDS. toMillis ( 10 ) ) )
22996	assertEquals ( "<p><img src=\\"/url\\" test=\\"hey\\" /></p>\\n", rendered )
22997	Assert. assertNotNull ( result )
22998	assertEquals ( "Check principal fqan in string form", TEST_FQAN_STRING, principal. getName ( ) )
22999	Assert. assertEquals ( "Wrong toString()", "msgVersion: 1 objectClass: org.opendaylight.yang.gen.v1.urn.opendaylight" + ".openflow.common.instruction.rev130731.instructions.grouping.Instruction msgType: 11" + " experimenterID: null", key1. toString ( ) )
23000	Assert. assertEquals ( expected, this. donutShop. getTopDonuts ( 2 ) )
23001	assertEquals ( 1, listener. getNumberOfTimesInvoked ( ) )
23002	assertThat ( caughtException ( ), instanceOf ( CustomException. class ) )
23003	Assert. assertEquals ( actual, expected, "Returned an invalid property value." )
23004	assertEquals ( unused, h. getUnused ( ) )
23005	assertEquals ( "(* (* (a 34) b 9) c)\\n", found )
23006	assertServerAncestry ( trace )
23007	assertFalse ( "The getChanges() method reported a change", hasChange )
23008	Assert. assertEquals ( 2, tools. size ( ) )
23009	assertFalse ( authorizer. isAuthorized ( context, profiles ) )
23010	assertEquals ( expected, new WritablesToNDArrayFunction ( ). call ( l ) )
23011	assertNumEquals ( 1d, profit. calculate ( series, new BaseTradingRecord ( ) ) )
23012	assertEquals ( new ArrayList < PostReport > ( ), mockResult. included ( "reports" ) )
23013	Assert. assertTrue ( result. isEmpty ( ) )
23014	Assert. assertEquals ( 2, count )
23015	assertTrue ( "configuration is not cleared", config. isEmpty ( ) )
23016	assertEquals ( 1, ksession. fireAllRules ( ) )
23017	assertEquals ( actual, expected, "Method with zero parameters does not match expected" )
23018	Assert. fail ( "Should have thrown SQLFeatureNotSupportedException" )
23019	Assert. assertTrue ( "Wrong canonicalization using external mapping file", TestFileUtils. compareFileToResource ( out, base ) )
23020	assertEquals ( 60000, testLong )
23021	assertEquals ( expected, ColumnRanges. rangeAtNode ( isNull ) )
23022	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoItemImpostoPISOutrasOperacoes ( ). toString ( ) )
23023	Assert. assertEquals ( extractor. generateKey ( host, req1 ), extractor. generateKey ( host, req2 ) )
23024	assertTrue ( Arrays. equals ( string. getBytes ( "UTF-8" ), ConvertKit. inputStream2Bytes ( ConvertKit. bytes2InputStream ( string. getBytes ( "UTF-8" ) ) ) ) )
23025	Assert. assertEquals ( zero. getReal ( ), 0, 3.0e-16 )
23026	assertEquals ( "CLIENT PARALLEL 1-WAY RANGE SCAN OVER _IDX_T [-9223372036854775808,'me','a'] - [-9223372036854775808,'me',*]", QueryUtil. getExplainPlan ( rs ) )
23027	assertTrue ( "1". equals ( episode. getAbsoluteNumber ( ) ) )
23028	assertEquals ( "Wrong result", "simple_trans,Hello\\\\,world!_trans," + "\\\\\\\\\\\\,\\\\\\\\_trans,end_trans", handler. escapeList ( data, trans ) )
23029	assertThat ( result ( ), is ( equalTo ( expectedResult ) ) )
23030	assertEquals ( "{\\"resourceType\\":\\"Parameters\\",\\"parameter\\":[{\\"name\\":\\"someString\\",\\"valueString\\":\\"someStringValue\\"},{\\"name\\":\\"someDate\\",\\"valueDate\\":\\"2019\\"}]}", encoded )
23031	Assert. fail ( "Expecting MathIllegalStateException" )
23032	assertJsonIs ( "{\\"helloWorld\\":\\"Hello, world\\",\\"lazy\\":\\"Lazy value\\",\\"resource\\":\\"/some/resource/path\\",\\"subModelProperty\\":\\"sub model property\\"}" )
23033	assertEquals ( parseCalendar ( "20131028-00:00:00", TimeZone. getTimeZone ( "Europe/Amsterdam" ) ), dh. getCalendarAfter ( testingClock. getCurrentCalendar ( ) ) )
23034	assertArrayEquals ( completeExtension, serializer. serialize ( ) )
23035	responseAsserter. assertRegisterResponse ( )
23036	assertEquals ( null, parameters. get ( "a" ) )
23037	Assert. assertThat ( keys, hasItem ( "load.node_by_id" ) )
23038	assertNotNull ( "precondition was supposed to fail", result )
23039	assertTrue ( survey. isStarted ( ) )
23040	assertNull ( s )
23041	Assert. assertNull ( "should have returned null when no collection found", actualDescription )
23042	assertEquals ( 6, wlsDomainConfig. getServerConfigs ( ). size ( ) )
23043	assertEquals ( g1, g2 )
23044	assertEquals ( "--MULTIPART_BYTERANGES" + "Content-Type: text/plain" + "Content-Range: bytes 1-2/10" + "12" + "--MULTIPART_BYTERANGES" + "Content-Type: text/plain" + "Content-Range: bytes 3-4/10" + "34" + "--MULTIPART_BYTERANGES" + "Content-Type: text/plain" + "Content-Range: bytes 5-9/10" + "56789" + "--MULTIPART_BYTERANGES--". replace ( "\\n", "" ). replace ( "\\r", "" ), content. replace ( "\\n", "" ). replace ( "\\r", "" ) )
23045	assertEquals ( getLoggingEvent ( ). getFormattedMessage ( ), expected )
23046	assertThat ( result, is ( "hello world" ) )
23047	Assert. fail ( "NullPointerException should have been thrown" )
23048	assertThat ( values. getWeblogicOperatorImage ( ), equalTo ( stringValue ) )
23049	assertNull ( found )
23050	assertTrue ( Arrays. equals ( new int [ ] { 0, 4, 8, 0, 86, 76, 85 }, command. serialize ( ) ) )
23051	assertEquals ( null, result )
23052	assertTrue ( String. format ( "Expected [%s] or [%s] but got [%s]", expected1, expected2, mapping ), Arrays. asList ( expected1, expected2 ). contains ( mapping ) )
23053	assertThat ( target. getEthType ( ), is ( new Integer ( OFPFlowActionPopMpls. MPLS_MULTICAST ) ) )
23054	assertThat ( createdOrUpdated. getStatusInfo ( ). getFamily ( ), is ( Response. Status. Family. SUCCESSFUL ) )
23055	assertThat ( reply ( ), is ( anAppendReply ( ). withResult ( true ) ) )
23056	assertThat ( text ( contents ), is ( "1-^a\\t2-^a\\n" ) )
23057	assertEquals ( FEEDBACK_MESSAGE, feedbackMessage )
23058	Assert. assertEquals ( "Movement line shall have the activity of the product", productActivity, movementLine. getC_Activity ( ) )
23059	assertThat ( availablePackages, hasItem ( "java.nio.file" ) )
23060	assertSpecialServletWasInvokedWith ( entity )
23061	assertMockEndpointsSatisfied ( )
23062	assertEquals ( expResult, result )
23063	assertEquals ( OffsetDate. of ( LocalDate. of ( 2010, 2, 15 ), OFFSET_PONE ), t )
23064	assertEquals ( "$120.90", df. format ( blackFridayTVDeal ) )
23065	assertNotNull ( "No parsed common schema", commonSchema )
23066	Assert. fail ( "deployment should be successful, i.e. bean for timer start event should get resolved" )
23067	Assert. assertEquals ( stId. compareTo ( otherStId ), serviceTemplate. compareTo ( otherServiceTemplate ) )
23068	assertResultSet ( res )
23069	assertEquals ( "foo", returnData )
23070	assertNotNull ( r )
23071	assertEquals ( Proxy. NO_PROXY, result. get ( 0 ) )
23072	Assert. assertFalse ( iterator. hasNext ( ) )
23073	assertEquals ( "00:00:00", v. getStringValue ( ) )
23074	Assert. assertFalse ( tt. isPrematureBreak ( null ) )
23075	assertEquals ( "Main class name", "org.knopflerfish.framework.Main", new KnopflerfishPlatformBuilderF200T233 ( m_bundleContext, "version" ). getMainClassName ( ) )
23076	assertThat ( sampledValue. getMeasurand ( ), equalTo ( measurand ) )
23077	assertTrue ( tbce. compareScreen ( "foo" ) )
23078	assertThat ( result, is ( "\\"" + THE_USER_NAME + "\\"" ) )
23079	assertTrue ( game3. isGameOver ( ) )
23080	assertTrue ( true )
23081	assertTrue ( log. getClass ( ). getName ( ). startsWith ( "org.ops4j.pax.logging.jbosslogging" ) )
23082	assertEquals ( 1, unit. getNumLoads ( ) )
23083	assertEquals ( 18, result )
23084	Assert. assertEquals ( DataTypes. TYPE_STRING, changed. getDataType ( ) )
23085	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
23086	assertThat ( result, equalTo ( v + "." + ns ) )
23087	assertTrue ( exceptionCaught )
23088	assertEquals ( a1, a2 )
23089	assertEquals ( 28, term. evalI ( env ) )
23090	assertEquals ( "Herbert", vcard. getName ( ) )
23091	assertThat ( tags, hasItems ( "abc" ) )
23092	assertTrue ( glass. isEmpty ( ) )
23093	assertEquals ( 2, servers. size ( ) )
23094	assertFalse ( fileDescriptorChecker. isDetected ( ) )
23095	Assert. assertTrue ( time < randomQueryTimeLimitInMillis )
23096	assertEqualsIgnoreWhitespace ( original, result )
23097	assertDROOLS2286 ( context )
23098	assertThat ( secondPage. getUrl ( ). toString ( ), endsWith ( "/view-hardcoded-params?extraParam=extraValue" ) )
23099	assertEquals ( 201, status. getStatusLine ( ). getStatusCode ( ) )
23100	Assert. assertNotNull ( queriedEntities )
23101	assertRowsEqual ( expected, primaryData )
23102	assertNull ( v. get ( ) )
23103	Assert. fail ( "Should have thrown SQLFeatureNotSupportedException" )
23104	assertFalse ( Pattern. matches ( Re. number ( ), s ) )
23105	Assert. assertEquals ( DOCUMENT_BEGINING + "#foreach($item_row in $row)" + ROW_BEGINING + "$dateFormatter.format('d-MM-yyyy',${item_row.creationDate})" + ROW_ENDING + "#{end}" + DOCUMENT_ENDING, writer. toString ( ) )
23106	assertException ( "FEEL-01017", "false", "12", "< 12", "'Hello'" )
23107	assertEquals ( arr, arr2 )
23108	assertEquals ( expectedJson, actualJson )
23109	assertEquals ( "Base value is not properly parsed", "true", parsed )
23110	assertEquals ( "HTTP/1.1 417 Expectation Failed", sb. toString ( ). trim ( ) )
23111	assertEquals ( "Insert_Returning(INTO c)\\n" + "  Project_Default(NULL, NULL, _SEQ_NEXT(test, c___row_id_seq))\\n" + "    ValuesScan_Default([])", getExplain ( insert, table. getSchemaName ( ) ) )
23112	assertArrayEquals ( new Class [ ] { long. class }, c. getParameterTypes ( ) )
23113	assertThat ( result. getQueryId ( ), is ( not ( result2. getQueryId ( ) ) ) )
23114	assertTrue ( ws. isClosed ( ) )
23115	assertEquals ( 42, tf. getConvertedValue ( ) )
23116	Assert. assertEquals ( sp. getClass ( ), sp2. getClass ( ) )
23117	assertMockEndpointsSatisfied ( )
23118	assertNotNull ( bidService. getBid ( 1L ) )
23119	assertEquals ( SUPPRESSABLE, strategyName )
23120	assertTrue ( headings. get ( 1 ). text ( ). equals ( "H1" ) )
23121	assertEquals ( "void dest8(@A @B @C int, @B @C @D int, int, @C @D @E int)", toString ( dest ) )
23122	assertThat ( c. compute ( ), is ( 2 ) )
23123	assertNotNull ( readUrlContents )
23124	assertEquals ( 1001, PartitionUtils. getRecommendedPartitions ( pcollection ) )
23125	assertTrue ( failListener. isFailed ( ) )
23126	assertEquals ( 1, regionInfoList. size ( ) )
23127	assertFalse ( peerAcceptanceUtil. isPeerInterestedOnRemoteWorker ( clientID. getServiceID ( ) ) )
23128	Assert. assertArrayEquals ( tag_orig, tag )
23129	assertNotNull ( op )
23130	Assert. assertEquals ( expectedProjectionBean, computedProjectionBean )
23131	Assert. assertEquals ( currentYear - birthYear, AgeUtils. getFullAge ( birthDate. getTime ( ) ) )
23132	assertEquals ( prettyPrintXml ( readContent ( EXPECTED_ABSTRACT_COMPLEX_TYPE_LIST_PATH ) ), prettyPrintXml ( xml ) )
23133	assertListTEquals ( listT, 12, 13, 14 )
23134	assertThat ( currentBuildsOf ( view ). get ( 0 ). url ( ), is ( "job/project-name/22/" ) )
23135	assertEquals ( "^/protected/([^/]*)/content$", pattern )
23136	Assert. assertEquals ( "todo", json. getAsString ( "getType" ) )
23137	assertEquals ( expectedHashCode, is. readInt ( ) )
23138	assertEquals ( "Wrong propert value", " [test@cmd ~]$ ", config. getString ( "CmdPrompt" ) )
23139	assertEquals ( range1, range2 )
23140	assertEquals ( Rational. valueOf ( 1, 343 ), result )
23141	assertEquals ( "Check that task ran", 1, ran )
23142	assertEquals ( id, embedding. getId ( 0 ) )
23143	assertEquals ( expecting, found )
23144	assertEquals ( expResult, result )
23145	assertTrue ( reporterFactory instanceof LoggingScheduledReporterFactory )
23146	assertThat ( result, equalTo ( false ) )
23147	assertThat ( result, is ( expected ) )
23148	assertEquals ( gatewayInternetAddress, h. getGatewayInternetAddress ( ) )
23149	assertThat ( rowsModified, is ( 0 ) )
23150	assertEquals ( "a", mock. get ( 1 ) )
23151	assertNotNull ( foo. field )
23152	assertEquals ( testKeySize, tlsToolkitStandaloneCommandLine. createConfig ( ). getKeySize ( ) )
23153	assertArrayEquals ( d. asDouble ( ), d2. asDouble ( ), 0.0001f )
23154	assertThat ( result, is ( true ) )
23155	assertThat ( ontology, is ( equalTo ( ontologyA ) ) )
23156	assertTrue ( true )
23157	Assert. assertEquals ( DefaultJobPriorityProvider. DEFAULT_PRIORITY_ON_RESOLUTION_FAILURE, job. getPriority ( ) )
23158	assertThat ( result, is ( nullValue ( ) ) )
23159	Assert. assertEquals ( expected, testIndex. findConc ( "[pos='PD.*']+ '(?i)getal'" ) )
23160	assertEquals ( model, actual )
23161	assertThat ( callBacks, contains ( addEvent ( object1 ), modifyEvent ( object2 ) ) )
23162	assertTrue ( definedInContext )
23163	assertExec ( "Loading a precompiled resource:", Resources. class, "loadKO__Ljava_lang_String_2", exp )
23164	assertEquals ( "Parameters changed", params, builder. getParameters ( ) )
23165	assertThat ( thrown, instanceOf ( ShardConfigStaleException. class ) )
23166	assertNotNull ( UserChannel. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "USXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
23167	Assert. assertEquals ( "Assert.assertFalse(\\"link=my_link\\",selenium.isElementPresent(\\"link=my_link\\"));", result )
23168	assertTrue ( t1. equals ( t2 ) )
23169	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4, 5, 6 ) ) )
23170	assertEquals ( DistCpCopier. class, copier. getClass ( ) )
23171	expect. assertObservation ( )
23172	assertResult ( 15 )
23173	assertThat ( config. get ( ), is ( equalTo ( TypesafeConfigurator. from ( ConfigFactory. load ( ), "test-cache" ). get ( ) ) ) )
23174	assertSame ( Integer. class, value. getValue ( ) )
23175	assertEquals ( this. multipleExtCom, result. getAttributes ( ) )
23176	assertEquals ( "package org.kissmda.test.junit;\\n" + "import java.util.LinkedList;\\n" + "import java.util.List;\\n" + "public class ClazzName {\\n" + "  public void doSomething(  Name values){\\n" + "    Integer count=null;\\n" + "    List<String> list=new LinkedList<>();\\n" + "  }\\n" + "}", cu. toString ( ). trim ( ) )
23177	assertEquals ( "ABN is required.", violations. iterator ( ). next ( ). getMessage ( ) )
23178	Assert. assertEquals ( "[1, 3]", s. toString ( ) )
23179	db. call ( "call zero()" ). once ( ). test ( ). awaitDone ( TIMEOUT_SECONDS, TimeUnit. SECONDS ). assertComplete ( )
23180	assertNotNull ( df. getIdentifier ( ) )
23181	assertThat ( formatter. parse ( "AD 1698/1700 (312)" ), is ( PlainDate. of ( 1700, 1, 30 ) ) )
23182	assertEquals ( expected, actual )
23183	assertIdentical ( "/simple.owl", filtered )
23184	assertThat ( twice. apply ( x -> x + 3 ). apply ( 7 ), is ( 13 ) )
23185	assertTrue ( connectFuture. isConnected ( ) )
23186	Assert. assertEquals ( 1, result. getFailedJobs ( ) )
23187	assertEquals ( origWriteSet, reorderSet )
23188	assertThatStepsInstancesAre ( builderAnnotated. buildCandidateSteps ( configuration ), WeldStepBean. class, FooSteps. class )
23189	assertEquals ( expected, actual )
23190	assertTrue ( "incorrect value", aNumber. hashCode ( )!= bNumber. hashCode ( ) )
23191	assertTrue ( "Root Dir cant be empty", list. size ( ) > 0 )
23192	assertTrue ( "installed jar should exist", destinationJar. exists ( ) )
23193	assertNotNull ( permissionService. getPermissionsMapFor ( component ) )
23194	SelendroidAssert. assertResponseIsResourceNotFound ( response )
23195	assertEquals ( serializedYaml, yaml )
23196	assertSame ( result, this. logger )
23197	assertFalse ( user1. equals ( user2 ) )
23198	assertEquals ( "(DUH a (DUH 1)) (DUH b (DUH 2))\\n", found )
23199	assertEquals ( 0, count )
23200	assertTrue ( am. calculateAllocations ( ) > prevValue )
23201	assertTrue ( rootNode. getPrimaryNodeType ( ). isNodeType ( JcrMixLexicon. REFERENCEABLE. getString ( context. getNamespaceRegistry ( ) ) ) )
23202	assertArrayEquals ( new byte [ ] { 42 }, Files. readAllBytes ( withDot ) )
23203	AssertAnnotations. assertPOS ( posMapped, posOriginal, select ( jcas, POS. class ) )
23204	assertNodeGetsCorrectPriority ( compoundWrite, EmptyNode. Empty ( ), PriorityUtilities. NullPriority ( ) )
23205	assertNodesIn ( expected, y1Fun, Optional. of ( y1Fun ) )
23206	assertThat ( hijri. with ( CommonElements. weekOfMonth ( HijriCalendar. family ( ), model ). incremented ( ) ), is ( hijri. with ( HijriCalendar. DAY_OF_MONTH, 18 ) ) )
23207	assertEquals ( true, bm. isBitSet ( bitNumber ) )
23208	assertEquals ( TestModel. class, field. getType ( ) )
23209	assertEquals ( "0: General use CPU\\n" + "1: Thread[engine,5,main] alive=true\\n", actual )
23210	assertEquals ( 5, searchEngineMarketShareArray. length )
23211	assertions. containsValue ( "two" )
23212	assertEquals ( expected, actual )
23213	assertThat ( scc, is ( toPartition ( expect ) ) )
23214	assertNotEquals ( result. get ( RETURN_RESULT ), SUCCESS_RESULT )
23215	assertThat ( quantity, is ( existingItem. getQuantity ( ) ) )
23216	assertFalse ( r. isPresent ( ) )
23217	assertEquals ( this. networkElementList, this. neListCaptor. getValue ( ) )
23218	assertEquals ( 1000000, tokens )
23219	assertFooStepsFound ( steps )
23220	assertNotNull ( create. getId ( ) )
23221	assertFalse ( mdxBaseComponent. runQuery ( conn, null ) )
23222	assertEquals ( Collections. < Action > emptyList ( ), result )
23223	assertTrue ( of ( "aaaaA" ). toString ( ). equals ( "AAAAA" ) )
23224	context. assertIsSatisfied ( )
23225	assertTrue ( sorted. isEmpty ( ) )
23226	assertNotNull ( result )
23227	Assert. assertNotSame ( "Same event bus instances", eventBus, eventBus2 )
23228	assertEquals ( CREATED. getStatusCode ( ), response. getStatus ( ) )
23229	Assert. fail ( "exception expected" )
23230	assertOut ( "<script><![CDATA[]]></script>" )
23231	Assert. assertEquals ( "-1", connectionString )
23232	Assert. assertTrue ( TestUtils. attributeEquals ( expectedResults, exactResults, attributeNames ) )
23233	assertEquals ( 1234.56, empty. getRPM ( ), 0.01 )
23234	assertEquals ( expected, json )
23235	Assert. assertEquals ( cnpj, dados. getCnpj ( ) )
23236	assertNoDebugMessage ( Level. SEVERE )
23237	Assert. assertThat ( result. getBean ( WithoutTypeParam. class ). getProperties ( ). get ( 0 ). tsType, CoreMatchers. instanceOf ( TsType. UnionType. class ) )
23238	assertTrue ( new Matcher ( ). match ( kmfSamples. getProviderA ( ), actual ) )
23239	Assert. assertEquals ( 2, tools. size ( ) )
23240	assertEquals ( expectedTypes, actionTypeDAO. getTypes ( TENANT_ID ) )
23241	Assert. assertNull ( noBean )
23242	Assert. assertEquals ( "Property values not dereferenced when overriding bean list property", expected, testComponent. getListOverride1 ( ) )
23243	assertThrows ( InvalidMethodSignatureException. class, ( ) -> new JavaDataTableTypeDefinition ( method, lookup, new String [ 0 ] ) )
23244	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
23245	assertEquals ( "test/me", provider. getRelativePath ( projectBasedir, repoRoot ) )
23246	XMLAssert. assertXMLEqual ( new InputStreamReader ( getClass ( ). getResourceAsStream ( "v12/csv-config-03.xml" ) ), new StringReader ( modelWriter. toString ( ) ) )
23247	assertEquals ( "The ttl should be 50", 50, iSpec. getTTL ( ) )
23248	Assert. assertEquals ( "bob", token. getUserName ( ) )
23249	assertThat ( match, is ( BestTypeMatch. T2 ) )
23250	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPath, cmpPath, destinationFolder, diff ) )
23251	assertThat ( dest. bbb, is ( nullValue ( ) ) )
23252	assertThat ( manager. getRandomStrategy ( ), is ( mockedStrat1 ) )
23253	assertEquals ( IBoardInspector. SpriteType. FOOD, foodTile. topSprite ( ). getSpriteType ( ) )
23254	assertEquals ( "Expected 2 results!", 2, n )
23255	assertEquals ( matrix. getRow ( 0 ), matrix. getRow ( 1 ) )
23256	assertEquals ( "192.168.0.123/24", ip )
23257	Assert. assertFalse ( reader. hasNext ( ) )
23258	assertPermanentCount ( playerA, bear1G, 1 )
23259	assertEquals ( "constant ok?", 1, ( int ) query. get ( 0 ). get ( "constant" ). toInt ( ) )
23260	assertArrayEquals ( expected, actual )
23261	Assert. assertTrue ( bean. getMap ( )!= null &&! bean. getMap ( ). isEmpty ( ) )
23262	assertFalse ( iter. hasNext ( ) )
23263	Assert. assertEquals ( slice. toString ( ), 1, SlicerUtil. countAllocations ( slice ) )
23264	Assert. assertEquals ( 40, analyser. getLoadAtBeginning ( route ). get ( 0 ), 0.01 )
23265	assertEquals ( expecteds, actuals )
23266	assertEquals ( Version. valueOf ( "1.0.0-alpha" ), builder. build ( ) )
23267	Assert. assertEquals ( 200, response. getStatus ( ) )
23268	assertValuesEqualsResultSet ( rs, expectedResults )
23269	assertEquals ( "5", stringWriter. toString ( ) )
23270	TestUtils. assertContainsPlot ( 0, 0, PlotColor. BLUE, plots )
23271	assertEquals ( "resultaaa", aspect. aroundFlippableMethods ( pjp, flipAnnotation ) )
23272	assertResult ( 0 )
23273	Assert. assertEquals ( 2, fs. getResolvedNNAddr ( ). length )
23274	Assert. fail ( "expected exception for bad query string." )
23275	assertUpdateRecord ( "*.c1.addresses.second.number", objId, obj, updateObj, PATCH, expected )
23276	Assert. assertTrue ( "Capabilities should match as node is not dynamic", matcher. matches ( nodeCapability, testCapability ) )
23277	assertEquals ( qp. value ( ). serialize ( ). toString ( ), "OK" )
23278	Assert. assertEquals ( "Get what?!?!", responseResult. getText ( ) )
23279	assertEquals ( "bar", event. getField ( "$.foo" ) )
23280	Assert. assertEquals ( expectedEventTypesInOrder, actualEventTypesInOrder )
23281	assertFalse ( captured. hasCaptured ( ) )
23282	assertTrue ( session. hasResponder ( ) )
23283	Assert. assertNotNull ( component. getRemoveButton ( dropdown ) )
23284	assertThat ( mapper, notNullValue ( ) )
23285	assertOrder ( true, query ( ). sortFarthest ( "one", new Location ( 0, 0 ) ) )
23286	Assert. assertArrayEquals ( jceResult, utilsResult )
23287	assertTrue ( helper. shouldBeStored ( new HTTPResponse ( Status. OK, headers ) ) )
23288	assertThat ( operatorValues. createMap ( ), hasEntry ( "internalDebugHttpPort", intValue ) )
23289	assertTrue ( criteria. equals ( criteria2 ) )
23290	assertEquals ( ShortName. get ( "FOO~1.TXT" ), sng. generateShortName ( "foo.txt" ) )
23291	assertEquals ( 1, this. chartChangeEvents. size ( ) )
23292	assertEquals ( expected, actual )
23293	assertThat ( bindings. get ( Key. get ( Configuration. class ) ), sameInstance ( ( Object ) module. getConfiguration ( ) ) )
23294	assertInvocations ( client. getBusinessActivityInvocations ( ) )
23295	assertEquals ( "<chart><background-color><radial-gradient cx=\\"0.5\\" cy=\\"0.3\\" r=\\"0.7\\"></radial-gradient>" + "<stops position=\\"0\\" color=\\"black\\"></stops>" + "<stops position=\\"1\\" color=\\"white\\"></stops>" + "</background-color></chart>", removeWhitespacesBetweenTags ( parent. child ( 0 ). toString ( ) ) )
23296	assertEquals ( new Integer ( 7 ), config. daysInWeek ( ) )
23297	assertEquals ( components. size ( ), 4 )
23298	Assert. assertEquals ( unidadeFederativa, servicoConsulta. getUf ( ) )
23299	Assert. assertEquals ( 100, v )
23300	assertEquals ( 385.5432894295314, value, 0 )
23301	assertEquals ( LIST_VAL_a, p. getList ( ) )
23302	Assert. assertTrue ( license. getLanguage ( ). equalsIgnoreCase ( "ENG" ) )
23303	assertEquals ( response. getStatus ( ), STATUS200 )
23304	assertEquals ( true, out. firstElement ( ). get ( ) )
23305	Assert. assertEquals ( "--- a/" + projectSourcePath + "/Bar.java\\n" + "+++ b/" + projectSourcePath + "/Bar.java\\n" + "@@ -15,3 +15,5 @@\\n" + " \\n" + "-\\t\\tSystem.out.println(\\"test\\");\\n" + "+\\t\\tif (false) {\\n" + "+\\t\\t\\tSystem.out.println(\\"test\\");\\n" + "+\\t\\t}\\n" + " \\n", test. getPatch ( ) )
23306	assertEquals ( 200, action. getCode ( ) )
23307	Assert. assertEquals ( s1Nanos, acq. permitAvailableEstimateInNanos ( ) )
23308	assertTrue ( Iterables. all ( evenNumbers, Predicates. not ( acceptOddNumber ) ) )
23309	testRunner. assertAllFlowFilesTransferred ( PutCassandraQL. REL_SUCCESS, 1 )
23310	assertOut ( "/**\\n * @constructor\\n */\\norg.apache.royale.A = function() {\\n};\\n\\n\\n/**\\n * Prevent renaming of class. Needed for reflection.\\n */\\ngoog.exportSymbol('org.apache.royale.A', org.apache.royale.A);\\n\\n\\n" + "org.apache.royale.A.prototype.get__foo1 = function() {\\n  return null;\\n};\\n\\n\\n" + "org.apache.royale.A.prototype.set__foo1 = function(value) {\\n};\\n\\n\\n" + "org.apache.royale.A.prototype.get__foo2 = function() {\\n  return null;\\n};\\n\\n\\n" + "org.apache.royale.A.prototype.set__foo2 = function(value) {\\n};\\n\\n\\n" + "org.apache.royale.A.prototype.get__foo3 = function() {\\n  return null;\\n
23311	assertSame ( expected, actual )
23312	assertThat ( PlainDate. of ( 2000, 12, 2 ). with ( model. weekOfYear ( ). minimized ( ) ), is ( PlainDate. of ( 2000, 1, 1 ) ) )
23313	assertCollectionCanNotBeSerialised ( collection, TreSource. ExtendedHeaderData )
23314	Assert. assertEquals ( 5, analyser. getLoadRightAfterActivity ( route. getEnd ( ), route ). get ( 0 ) )
23315	assertEqualHQL ( "allen  dandan", sb. toString ( ) )
23316	VertxAssert. assertEquals ( "The graph operation resulted in an error: " + response. getString ( "message" ), "ok", response. getString ( "status" ) )
23317	assertNotNull ( extractElementDataModifier. getElementId ( ) )
23318	assertXmlEquals ( "<srv:SV_Parameter xmlns:srv=\\"" + Namespaces. SRV + '"' + " xmlns:gco=\\"" + Namespaces. GCO + "\\">\\n" + "  <srv:optionality>\\n" + "    <gco:Boolean>false</gco:Boolean>\\n" + "  </srv:optionality>\\n" + "  <srv:repeatability>\\n" + "    <gco:Boolean>false</gco:Boolean>\\n" + "  </srv:repeatability>\\n" + "</srv:SV_Parameter>\\n", xml, "xmlns:*" )
23319	assertFalse ( got. contains ( "(I, picked it up at, noon)" ) )
23320	assertTrue ( Files. isRegularFile ( dest. resolve ( "file" ) ) )
23321	Assert. assertNotNull ( connection )
23322	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED, status )
23323	assertThat ( terminalStep. wasRun ( ), is ( true ) )
23324	assertEquals ( VALUE, victim. getValue ( KEY ) )
23325	assertNotNull ( s )
23326	AssertEx. assertEqualsWithoutWhiteSpaces ( "linear_extrude(height=10, center=true, convexity=10, twist=20, scale=2) (model)", testSubject )
23327	assertEquals ( required, iterateBFS )
23328	assertEquals ( x, id ( 23 ) )
23329	assertEquals ( "Focus should remain in the menu", "menu", focused. getAttribute ( "id" ) )
23330	assertTrue ( results. toString ( ), results. indexOf ( "Responses invalid: 0 out of " + ( cycles * tracks ) ) >= 0 )
23331	assertEquals ( "CLOSED", Deencapsulation. getField ( deviceIO, "state" ). toString ( ) )
23332	Assert. assertEquals ( new JTypeVariable < > ( P12. class, "V" ), type )
23333	assertTokensEqual ( of ( LP, integer ( 10 ), RP, MUL, integer ( 5 ), FACTORIAL, PLUS, ID, DOT, value ( ), INCREMENT, PLUS, singleQtd ( "\\"text 1\\"" ), PLUS, doubleQtd ( "text 2" ) ), tokens )
23334	assertEquals ( html, sanitized )
23335	assertNumberOfViolations ( constraintViolations, 0 )
23336	assertEquals ( TimeUtil. parseTime ( time ), "2014-11-11 10:11:11" )
23337	assertEquals ( averageDegree, 1.0 )
23338	assertThat ( client, notNullValue ( ) )
23339	Assert. assertEquals ( set. iterator ( ). next ( ), "c" )
23340	Assert. assertEquals ( "example.com", uri. getHost ( ) )
23341	Assert. assertEquals ( "didn't get mime type from tika", "text/plain", actual )
23342	assertThat ( ret. length ( ) > 0, is ( true ) )
23343	assertEquals ( "<div id=\\"1\\"></div><div id=\\"2\\"><img /><img /></div><a id=\\"3\\"></a><i></i><foo /><foo>One</foo> <hr /> hr text <hr /> hr text two", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
23344	assertEquals ( "min fina text komemr h�陇r. Den har en l�陇nk i ocks�楼", doc. getContentField ( "extracted_text" ). toString ( ) )
23345	assertEquals ( expected, actual )
23346	assertParams ( captured. getValue ( ), X_PARAM_NAMES, true, true )
23347	assertEquals ( expected, actual. materializeToMap ( ) )
23348	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
23349	assertEquals ( Collections. singletonMap ( "x.A", Collections. singletonList ( "y.C{b=true, c=x, i=3, other=@x.Other{v=1}, others=[@x.Other{v=2}]}" ) ), TestUtils. findMetadata ( clz ) )
23350	assertTrue ( PropUtil. getBooleanProperty ( props, "test", false ) )
23351	assertEquals ( "12:07", dateTime. toString ( dateTimeFormatter ) )
23352	assertTrue ( "Better cost solution (1.9 < 2.0) should not be accepted since the better cost is still below the threshold", schrimpfAcceptance. acceptSolution ( memory, createSolutionWithCost ( 1.9 ) ) )
23353	assertEquals ( new Long ( 2 ), response )
23354	assertEquals ( "mes|Throwable", result )
23355	Assert. assertEquals ( ( Short ) ( short ) 11, res )
23356	assertThat ( params. isMonochrome ( ), equalTo ( true ) )
23357	assertThat ( operations. find ( query ( byExample ( example ) ), Person. class ), hasItems ( flynn, walter ) )
23358	assertNullOrEquals ( "remark", "1986 realisation", crs. getRemarks ( ) )
23359	assertEquals ( "Should display the correct linker for entire project", "ngsArchiveLinker.pl -p 1", page. getLinkerText ( ) )
23360	assertThat ( runtimeClassName, equalTo ( "org.talend.components.marklogic.runtime.input.MarkLogicSource" ) )
23361	assertThat ( target. getDifferenceOfGaussians ( ), JUnitMatchers. hasItems ( TestUtils. equalTo ( new Image ( new float [ ] [ ] { { 5 } } ), 1E-4f ), TestUtils. equalTo ( new Image ( new float [ ] [ ] { { 6 } } ), 1E-4f ), TestUtils. equalTo ( new Image ( new float [ ] [ ] { { 7 } } ), 1E-4f ) ) )
23362	assertTrue ( book. getIsbn ( ). startsWith ( "13" ) )
23363	assertEquals ( 21, c. size ( ) )
23364	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
23365	assertNotNull ( dataBinding )
23366	assertTrue ( getNoErrorMsg ( ), result )
23367	assertEquals ( "GitHub", ghlogout. getGitHubText ( ) )
23368	assertTrue ( ExpressionUtil. evalCondition ( context, cachedAnnoConfig ) )
23369	arrays. assertContainsOnly ( someInfo ( ), actual, emptyArray ( ) )
23370	Assert. assertEquals ( "4:17�PM", getCell ( 0, 10 ). getPureText ( ) )
23371	assertTrue ( nameIdData. get ( "Value" ). isEmpty ( ) )
23372	assertDegenerate ( scan )
23373	Assert. assertEquals ( expect_sql, sql )
23374	Assert. assertEquals ( "", readS )
23375	assertThat ( d. doCheckScript ( "@Grab(group='foo', module='bar', version='1.0')\\ndef foo\\n" ). toString ( ), containsString ( "Annotation Grab cannot be used in the sandbox" ) )
23376	assertEquals ( "No exception thrown!", true, result )
23377	assertThat ( RequestUtil. getPath ( request ), is ( "/aaa" ) )
23378	assertEquals ( "Wrong number of violations.", 2, violations. size ( ) )
23379	assertEquals ( "Field-Name:\\n value1\\n value2\\n.\\n value3\\n", field. format ( "value1\\nvalue2\\n\\nvalue3" ) )
23380	assertEquals ( expectedText. replace ( "\\n", "" ). replace ( "\\r", "" ), writer. toString ( ). replace ( "\\n", "" ). replace ( "\\r", "" ) )
23381	assertEquals ( "锌�械写懈 3 写薪懈 15 �邪�邪 38 屑懈薪��懈", t. format ( durations ) )
23382	assertEquals ( "abc", output. toString ( ) )
23383	assertEquals ( expected, actual )
23384	Assert. assertEquals ( "me", who )
23385	assertEquals ( 18, instance. evaluations )
23386	assertEquals ( arr, resultArr )
23387	assertEquals ( dataflowInputPort, edit. getSubject ( ) )
23388	assertEquals ( expectedQuery, actualQuery )
23389	assertSpanChunk ( spanChunkBo )
23390	assertImage ( srcImg, destImg, e )
23391	assertThat ( subject. supports ( update ), is ( false ) )
23392	assertEquals ( expected, actual )
23393	assertSame ( node, transform ( node ) )
23394	Assert. assertEquals ( "Wrong toString()", "msgVersion: 1 objectClass: org.opendaylight.yang.gen.v1.urn.opendaylight" + ".openflow.protocol.rev130731.BarrierInput msgType: 4 msgType2: 8", key1. toString ( ) )
23395	assertThat ( TestLoggerFactory. getLoggingEvents ( ), is ( empty ( ) ) )
23396	assertEquals ( 2, queries. size ( ) )
23397	assertEquals ( testClass, expectedResult, actualResult )
23398	assertEquals ( expected, cluster )
23399	assertEquals ( expected, actual )
23400	assertNull ( result )
23401	assertSorted ( )
23402	assertNotNull ( pageEntity. getContent ( ) )
23403	Assert. assertEquals ( childConfig. getUserID ( ), result. getUserID ( ) )
23404	assertEquals ( 1, process. getCounter ( LoggingFlowProcess. LoggingLevels. INFO ) )
23405	assertArrayEquals ( gbids, newGbids )
23406	Assert. assertEquals ( 7, ( ( VersionMessageWrapper ) list. get ( 0 ) ). getMessageBuffer ( ). readableBytes ( ) )
23407	assertEquals ( 2000, Sleeper. timeSlept )
23408	assertEquals ( expectedMap, map )
23409	assertThat ( dao. getLongMoney ( id ), equalTo ( user. getMoney ( ) ) )
23410	assertions. startsWith ( sequence )
23411	assertTrue ( vRoute. getStart ( ). getLocation ( ). getId ( ). equals ( "start" ) )
23412	assertThat ( output, containsString ( "FHIR store deleted." ) )
23413	assertTrue ( s!= null && s. length ( ) > 0 )
23414	assertSame ( expected, actual )
23415	assertNotNull ( xacmlStatement )
23416	assertTrue ( solrCounter > 0 )
23417	assertEquals ( ValidationResult. OK. getStatus ( ), validationResult. getStatus ( ) )
23418	assertEquals ( name, ship. getName ( ) )
23419	assertTrue (! types. isEmpty ( ) )
23420	Assert. assertEquals ( 0, mainTag. size ( ) )
23421	Assert. assertEquals ( newThirdSetMember, thirdConceptSet. getConcept ( ) )
23422	assertTrue ( localFileSys. mkdirs ( dir ) )
23423	assertEquals ( createdTopic. getBodyText ( ), "[code=java]" + ANSWER_BODY + "[/code]" )
23424	assertEquals ( String. format ( "[%d,\\"%s\\",\\"%s\\"]", WampMessage. CALL_RESULT, callId, payload ), jsonMessage )
23425	assertEquals ( Lists. newArrayList ( "-o", projectPath. append ( outputPath ). append ( "org" ). append ( "package" ). toOSString ( ), "-listener", "-no-visitor", "-package", "org.package", "-encoding", "UTF-8" ), options. command ( file ) )
23426	Assert. assertTrue ( "canonicalizing the test file " + filename + " into " + out + " is different from " + baseline, TestFileUtils. compareFileToResource ( out, baseline ) )
23427	assertEquals ( 3, lists. size ( ) )
23428	assertTrue ( new File ( folder. getRoot ( ), "test/QDateTest.java" ). exists ( ) )
23429	assertEquals ( "{\\"b\\": 2}", dbr. query ( "SELECT * FROM CC_TEST WHERE ID = 2" ). at ( 0 ). get ( "js", Json. class ). json )
23430	assertTrue ( testMojo. shouldSkip ( ) )
23431	assertFalse ( new RolePrefixSecurityContextImpl ( s, "" ). isUserInRole ( "friend" ) )
23432	assertEquals ( 1, measure. getErrorCode ( ) )
23433	Assert. assertTrue ( "The memory increases more than 50%. The percentage memory was " + percentageMemory, percentageMemory < 50.0 )
23434	org. junit. Assert. assertEquals ( 0, fxForm. getElements ( ). size ( ) )
23435	assertEquals ( Response. Status. NO_CONTENT. getStatusCode ( ), response. getStatus ( ) )
23436	assertThrows ( ( ) -> instance. matcherFor ( matcher ) )
23437	Assert. assertEquals ( expected, actual )
23438	assertThat ( productResultUrls. size ( ), equalTo ( 0 ) )
23439	assertEquals ( "Wrong list property", list, conf2. getProperty ( prop ) )
23440	assertEquals ( 401, r. getStatus ( ) )
23441	assertEquals ( x, v )
23442	assertFalse ( db. collectionExists ( methodName ) )
23443	assertSame ( Writables. records ( TestWritable. class ), wt )
23444	this. assertGet ( "artifacttemplates/http%253A%252F%252Fopentosca.org%252Fartifacttemplates/MyTinyTest/files/zip", "entitytemplates/artifacttemplates/MyTinyTest_src.zip" )
23445	assertEquals ( "20060725225010201442000000", d. getId ( ) )
23446	assertEquals ( kv ( "two", "3" ), redis. brpop ( 1, "one", "two" ) )
23447	assertTrue ( "No message should be present.", page. getMessages ( ). getItems ( MessageType. ERROR ). isEmpty ( ) )
23448	assertEquals ( 1, map. size ( ) )
23449	assertNotNull ( strategy )
23450	assertGraveyardCount ( playerA, "Bladewing's Thrall", 1 )
23451	assertThat ( jsonOutputStreamParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/jsonmarshallertest/testMessage.json" ) ) )
23452	Assert. assertTrue ( new LogAdapter ( "logger.name.here", mockConfigLong ( ) ). isDebugEnabled ( ) )
23453	assertFalse ( "No result was expected.", query. more ( ) )
23454	assertEquals ( "GBP -0.94", test. toString ( ) )
23455	assertThat ( getConfiguredDomainSpec ( ). getAdminServer ( ). getEnv ( ), hasEnvVar ( "item1", itemRawValue ) )
23456	Assert. assertEquals ( expected, resultOut )
23457	assertThat ( result. getKey ( ). toString ( ), is ( "DEV-IRT" ) )
23458	assertMedium ( buf )
23459	assertNotNull ( "��杩���甯�id��璧�婧���绉拌�峰��璧�婧�娴�澶辫触", result )
23460	assertThat ( testPath, is ( expectedPath ) )
23461	Assert. fail ( "an exception should have been thrown" )
23462	assertEquals ( "The user name was incorrect", "_MCLWEB", changeset. getUser ( ) )
23463	assertEquals ( false, modifiedAction. isPropagatingConfiguration ( ) )
23464	assertThat ( info. getClusterService ( CLUSTER ), sameInstance ( newService ) )
23465	assertEquals ( service. getPresentableDistance ( distances ), "approaching" )
23466	assertThat ( collect, not ( hasItem ( IS_CLEAN_HANDLER. getValue ( ) ) ) )
23467	assertEquals ( "GBP 2.34", test. toString ( ) )
23468	assertTrue ( originalMap. isEmpty ( ) )
23469	assertTrue ( "Agent-based allocation should have failed", plan. getAllReservations ( ). size ( ) == numJobsInScenario )
23470	assertArrayEquals ( data, Files. readAllBytes ( file ) )
23471	assertEqualsJson ( expected, json )
23472	Assert. assertTrue ( contentAsString. contains ( "CLI-GUIDE.md" ) )
23473	assertEquals ( HttpServletResponse. SC_UNAUTHORIZED, response. getStatus ( ) )
23474	assertOutput ( hbs. benchmark ( ) )
23475	Assert. assertEquals ( "012", single. get ( ). getCoveredText ( ) )
23476	assertEquals ( Arrays. asList ( properties ), fr. getRightsProperties ( ) )
23477	Assert. assertTrue ( FileUtils. readFileToString ( testApiVerticleFile ). contains ( "List<String> updateModel = Json.mapper.readValue(message.body().getJsonArray(\\"updateModel\\").encode(), new TypeReference<List<String>>(){});" ) )
23478	assertThat ( hBaseConfiguration. getConfiguration ( ), is ( configuration ) )
23479	assertThat ( testUriStr, is ( expectedUriStr ) )
23480	assertTrue ( session. has ( SESSION_TOKEN_LABEL ) )
23481	assertThat ( PlainTime. of ( 4, 26, 59, 987654321 ). plus ( duration ), is ( PlainTime. of ( 6, 27, 2, 987654321 ) ) )
23482	assertNull ( stringStringMap )
23483	Assert. assertEquals ( AccessMode. GROUPED, sr. getSerializableAccess ( ) )
23484	assertObjectEquals ( "{type:'array',items:{type:'array',items:{type:'array',items:{type:'object',properties:{f1:{type:'string'}}}}},'x-example':[[[{f1:'foobar'}]]]}", s. getSchema ( BeanList [ ] [ ]. class ) )
23485	assertEquals ( rendered, secondPass )
23486	assertEquals ( expected3, actual3 )
23487	Assert. assertTrue ( result. length == 10 )
23488	assertEquals ( amendedCommit, getHeadCommit ( TEST_BRANCH, repo ) )
23489	assertTrue ( Script. matchNamed ( MatchType. EQUALS, "res", null, "[1, 2, 3]", ctx ). pass )
23490	assertSseResponse ( sseResponse, "" )
23491	assertTrue ( ex. isPrime ( 31 ) )
23492	Assert. assertNotEquals ( "there were 0 dependencies!", 0, files. length )
23493	assertEquals ( "collection1", coll. getName ( ) )
23494	assertEquals ( con. getConnectTimeout ( ), 1000 )
23495	assertEquals ( 200, response. getStatus ( ) )
23496	assertEquals ( expectedBill, bill. doubleValue ( ), 0.01 )
23497	assertOut ( "this.b = 10 + 'px'" )
23498	assertValues ( presentFieldList, actual )
23499	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Pay/>", elem. toXml ( ) )
23500	authRule. assertScenario ( scenario )
23501	assertEquals ( expected, result. eval ( ) )
23502	assertTrue ( "bar". equals ( c. getValue ( ) ) && "foo". equals ( c. getName ( ) ) && 1 == c. getVersion ( ) && "path". equals ( c. getPath ( ) ) && "domain". equals ( c. getDomain ( ) ) && "comment". equals ( c. getComment ( ) ) && 10 == c. getMaxAge ( ) )
23503	assertParser ( twig )
23504	assertEquals ( expectedVersionString, versionData1. toString ( ) )
23505	assertThat ( time, equalTo ( dataPoint. getTimestamp ( ) ) )
23506	assertEquals ( expected, actual )
23507	assertEquals ( expecting, found )
23508	assertTrue ( resultComparator. compare ( cucc1, cucc2 ) > 0 )
23509	assertEquals ( "The value is not correct.", date, value )
23510	assertTrue ( Arrays. stream ( itia. getValues ( ) ). allMatch ( v -> key == v / 2 ) )
23511	assertTrue ( "Uncloseable Window should remain open after esc is pressed.", isWindowOpen ( ) )
23512	assertThat ( result. statusCode, is ( Response. OK ) )
23513	assertEquals ( Hours. of ( - 15 ), test5. multipliedBy ( - 3 ) )
23514	assertFalse ( validator. validate ( EntityNames. GRADE, grades ). equals ( grades ) )
23515	assertEquals ( "foo:bar", uri. getLabel ( ) )
23516	assertEquals ( "Time to upgrade...", result )
23517	assertEquals ( "org.eclipse.vorto_Location_1_0_0.fbmodel", modelId. getFileName ( ) )
23518	assertNotNull ( importer )
23519	Assert. assertEquals ( IntNode. valueOf ( 1 ), result )
23520	assertThatSelectedValueIs ( "a20" )
23521	Assert. fail ( )
23522	assertNotNull ( queryFactory3. delete ( QAnimal. animal ) )
23523	assertEquals ( expecting, t. toStringTree ( ) )
23524	assertEquals ( id, entity. getId ( ) )
23525	assertEquals ( new BigDecimal ( 123 ), arrayFirst )
23526	assertNotNull ( wflows )
23527	Assert. assertTrue ( providerAInvoked )
23528	assertEquals ( "invoice.toJson('fetchPlan:customer:1 orders:2')", p. toString ( ) )
23529	assertThat ( issues, is ( empty ( ) ) )
23530	Assert. assertTrue ( "Not authenticated", authenticated )
23531	assertEquals ( OK, response. getStatus ( ) )
23532	assertEquals ( 0, scores. getScore ( ) )
23533	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( query, expectedQuery ) )
23534	assertEquals ( sim,! num5. isNotSimilar ( num6 ) )
23535	assertEquals ( DOUBLE, v8Object. getType ( "key" ) )
23536	assertEquals ( EXPECTEDCSV, CSV )
23537	assertEquals ( 1, this. chartChangeEvents. size ( ) )
23538	assertEquals ( calendar. getTime ( ), aiResponse. getTimestamp ( ) )
23539	assertThat ( options. isStrict ( ), is ( false ) )
23540	org. junit. Assert. assertEquals ( expected, actual )
23541	assertHandCount ( playerA, "Silvercoat Lion", 1 )
23542	assertPaths ( instantiatePathFinder ( 6 ). findAllPaths ( a, e ), "a,b,c,e", "a,b,c,e" )
23543	assertEquals ( 3, urls. size ( ) )
23544	Assert. assertEquals ( "queueInfo translation didn't work.", returned. getState ( ). toString ( ), StringUtils. toLowerCase ( queueInfo. getQueueState ( ). toString ( ) ) )
23545	assertThat ( simpleComponent. getMessage ( ), equalTo ( "default message" ) )
23546	assertEquals ( asList ( "x", "fn-rpc-ctx" ), fieldsCaptor. getValue ( ). toList ( ) )
23547	assertEquals ( 92539, acc. get ( ) )
23548	assertEquals ( "1234567", sb. toString ( ) )
23549	assertArrayEquals ( result, CompactEncoder. binToNibbles ( test ) )
23550	assertNotNull ( processInstance. getId ( ) )
23551	assertNull ( "Retrieved privacy policy should be null", retrievedPrivacyPolicy )
23552	assertEquals ( filename, instance. getFilename ( ) )
23553	assertEquals ( USER_EMAIL_ADMIN, securityContext. id )
23554	assertEquals ( "SELECT * FROM Class", q. toString ( ) )
23555	Assert. assertEquals ( driver ( ). getTitle ( ), "We Arrive Here" )
23556	assertNotEquals ( frameData1, frameData2 )
23557	assertEquals ( 1, em. createQuery ( "SELECT a FROM Auction a" ). getResultList ( ). size ( ) )
23558	assertResolved ( new String [ ] [ ] { { "a", "a" }, { "b", "c" } }, resolved )
23559	assertEquals ( HandClassifier. TWO_PAIR, hand. getClassifier ( ) )
23560	assertTrue ( "Example was not valid: " + exampleUrl, model. isValid ( ) )
23561	assertThat ( description. toString ( ), is ( "an array node whose elements is ANYTHING" ) )
23562	assertEquals ( 200, resp. getStatus ( ) )
23563	assertEquals ( expected, actual )
23564	assertTrue ( Pattern. matches ( "(?s).*<html>\\\\s*<head>\\\\s*<title>\\\\s*dtablecolumnclasses.jsp\\\\s*</title>\\\\s*<style\\\\s*type=\\"text/css\\">\\\\s*\\\\.b1.*\\\\.b2.*\\\\.b3.*\\\\.b4.*\\\\.b5.*.b6.*\\\\.b7.*</style>\\\\s*</head>\\\\s*<body>\\\\s*<table>\\\\s*<tbody>\\\\s*<tr>\\\\s*<td\\\\s*class=\\"b1\\">\\\\s*c1\\\\s*</td>\\\\s*<td\\\\s*class=\\"b2\\">\\\\s*c2\\\\s*</td>\\\\s*<td>\\\\s*c3\\\\s*</td>\\\\s*<td>\\\\s*c4\\\\s*</td>\\\\s*<td>\\\\s*c5\\\\s*</td>\\\\s*<td>\\\\s*c6\\\\s*</td>\\\\s*</tr>\\\\
23565	assertThat ( prepare, CoreMatchers. instanceOf ( ProfiledPreparedStatement. class ) )
23566	assertNotNull ( result )
23567	assertTrue ( point. equals ( point ) )
23568	assertEquals ( expResult, result )
23569	assertSame ( toTest, toTest. setType ( ParamType. getDefault ( ) ) )
23570	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
23571	assertThat ( getterMethod. getReturnType ( ). getName ( ), is ( "com.example.ImpliedObjectProperty" ) )
23572	assertThat ( inputStream, notNullValue ( ) )
23573	Assert. assertTrue ( "Signature invalid", signatureValid )
23574	AssertJUnit. assertFalse ( "filter matches object, but it should not", match )
23575	assertEquals ( "one", fixture. getHeaders ( ). get ( "header1" ) )
23576	assertEquals ( expect, pred )
23577	assertEquals ( Color. blue. getRGB ( ), thumbnail. getRGB ( 49, 99 ) )
23578	assertEquals ( 0.0d, mock. doubleReturningMethod ( 12 ), 0.0d )
23579	assertEquals ( "alt2\\n", found )
23580	assertThat ( result, is ( expct ) )
23581	assertEquals ( "The server URL was incorrect", "-server:https://tfs02.codeplex.com", builder. toCommandArray ( ) [ 0 ] )
23582	assertEquals ( EmailRecipientUtils. BCC, analyser. getType ( new InternetAddress ( "mickey@disney.com" ) ) )
23583	assertDurationEquals ( dv3, dv1. minus ( dv2 ) )
23584	assertTrue ( milli1. equals ( milli2 ) )
23585	assertThat ( impl. getReferencingAxioms ( cls, ontologyId ). count ( ), is ( 0L ) )
23586	assertOut ( "/**\\n * @export\\n * @const\\n * @type {*}\\n */\\nRoyaleTest_A.foo" )
23587	Assert. fail ( "Test should not go here - invalid deployment (invalid value of resteasy.scan.resources)!" )
23588	assertThat ( result, nullValue ( ) )
23589	assertEquals ( 3.141592653589793D, config. pi ( ), 0.000000000000001D )
23590	assertNotEquals ( instance, null )
23591	assertNotNull ( wsdl1 )
23592	assertFalse ( lock2. tryLock ( Duration. ofSeconds ( 1 ) ) )
23593	Assert. assertFalse ( sampling )
23594	assertEquals ( imports. size ( ), tree. getModelObject ( ). getChildCount ( tree. getModelObject ( ). getRoot ( ) ) )
23595	assertEquals ( "Unexpected state class", FormLayoutState. class, state. getClass ( ) )
23596	assertEquals ( buf. toString ( ), result )
23597	observer. assertObservations ( "19", PhaseId. APPLY_REQUEST_VALUES, PhaseId. INVOKE_APPLICATION, PhaseId. PROCESS_VALIDATIONS, PhaseId. RENDER_RESPONSE, PhaseId. RESTORE_VIEW, PhaseId. UPDATE_MODEL_VALUES )
23598	assertEquals ( 17, groups. size ( ) )
23599	assertNotNull ( actAa. getId ( ) )
23600	Assert. assertEquals ( pn. getFullName ( ), "Sr. Taylor Bob Mark" )
23601	Assert. assertEquals ( "3 weeks ago", t. format ( new Date ( 0 ) ) )
23602	assertThat ( results, is ( Collections. emptyList ( ) ) )
23603	assertSame ( config, result )
23604	assertEquals ( "Double-It not doubling positive numbers", 20, resp )
23605	assertThat ( uri, is ( new URI ( base + "?port=COM3&name+with+spaces=value+with+spaces" ) ) )
23606	N4CliHelper. assertExpectedOutput ( expectedString, out )
23607	Assert. assertTrue ( lastElementIsSame ( store, new WeightedObservedPoint ( w, x, y ) ) )
23608	assertEquals ( "root.user1group.user1", user1Leaf. getName ( ) )
23609	assertTrue ( gw. lines. isEmpty ( ) )
23610	assertEquals ( 0, fail )
23611	Assert. assertEquals ( 100, EJBInvocationHandler. forProxy ( proxy ). getInvocationTimeout ( ) )
23612	Assert. assertTrue ( "Unwrap should be true", model. isUnwrapped ( ) )
23613	assertEquals ( true, parsedTypes. get ( 0 ) instanceof RedditSubreddit )
23614	assertTrue ( expectedDirection. equals ( reflectedDirection ) )
23615	assertEquals ( expected, value )
23616	assertEquals ( "try", result )
23617	assertEquals ( 3, response. getDistances ( ). size ( ) )
23618	assertEquals ( Year. isLeap ( year ), test. isLeapYear ( ) )
23619	Assert. assertTrue ( Precision. equals ( 7.0, MathArrays. distance1 ( p1, p2 ), 1 ) )
23620	Assert. assertTrue ( "Probable duplicate text", xml. length ( ) < 300 )
23621	assertEquals ( expectedApiVersion, Deencapsulation. getField ( httpHsmSignatureProvider, "apiVersion" ) )
23622	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
23623	assertTrue ( mse. getTotalError ( ) < maxError )
23624	assertEquals ( "{\\"key\\":null,\\"key2\\":\\"value\\"}", writer. toString ( ) )
23625	assertEquals ( "/%C4%8D", encoded. toURL ( ) )
23626	assertNull ( auth. authenticate ( USERNAME, PASSWORD, mockServerSession ) )
23627	assertEquals ( expected, output )
23628	assertEquals ( "Expected 16 results!", 16, n )
23629	Assert. assertTrue ( protectedPage. getTitleText ( ). contains ( "Product Page" ) )
23630	assertEquals ( test. titleToNumber ( "BAC" ), 1381 )
23631	Assert. assertEquals ( TimeHelper. formatDateTime ( date ), TimeHelper. formatDateTime ( scheduling. getStartupTime ( ) ) )
23632	assertAnnotations ( 2, Coordinate. class, new TestCoordinate ( 0, "-0.125, 51.507", "dd", TYPE_POINT_COORDINATES_0_125_51_507 ), new TestCoordinate ( 1, "-3.188,55.953", "dd", TYPE_POINT_COORDINATES_3_188_55_953 ) )
23633	assertEquals ( "<html><head><noscript>&lt;img src=\\"foo\\"&gt;</noscript></head><body><p>Hello</p></body></html>", TextUtil. stripNewlines ( doc. html ( ) ) )
23634	assertEquals ( result, expecting )
23635	assertMissing ( "list", 1L )
23636	assertEquals ( "foo", s )
23637	assertEquals ( 1, patient. getCustomId ( ). getUndeclaredExtensions ( ). size ( ) )
23638	assertEquals ( after, normalizer. normalize ( before ) )
23639	assertThat ( chain, is ( sameInstance ( builder ) ) )
23640	assertEquals ( "ID3v2ChapterTOCFrameData [isRoot=false, isOrdered=false, id=null, children=null, subframes=[]]", frameData. toString ( ) )
23641	assertEquals ( list. get ( i + 1 ), "test" )
23642	assertNotNull ( cfid2 )
23643	assertEquals ( "bcse", e1, e2 )
23644	assertEquals ( "(abc 34)\\n", found )
23645	assertTrue ( runtime instanceof MockIndirectBaseClass )
23646	assertThat ( byValue. getSingleResult ( ). getF ( ), equalTo ( f1 ) )
23647	testRunner. assertAllFlowFilesTransferred ( PutORC. REL_FAILURE, 1 )
23648	assertThat ( this. capistranoCommandBuilder. build ( ), hasItem ( "--verbose" ) )
23649	assertEquals ( "icecream", res. get ( "foo" ) )
23650	Assert. assertFalse ( nodes. isEmpty ( ) )
23651	assertTrue ( Files. isSameFile ( source, link ) )
23652	assertTrue ( desc. size ( ) == 6 )
23653	assertEquals ( expectedQuery, actualQuery )
23654	assertEquals ( expectedResult, result )
23655	assertThat ( result, is ( jsonString ( "Bob" ) ) )
23656	assertEquals ( "om 3 氓r", t. format ( new Date ( 2629743830L * 12L * 3L ) ) )
23657	runner. assertNotValid ( credentialsService )
23658	assertEquals ( mlArray, mlArrayRetrieved )
23659	assertEquals ( 0, courses. size ( ) )
23660	assertFalse ( satisfiesPrecondition ( cu ) )
23661	assertTrue ( transform instanceof Modifier. Defaultr )
23662	assertTrue ( "Should no longer be an MVV",! ex1. isValueLongMVV ( ) )
23663	assertEquals ( R. drawable. ic_dialog, shadowDialog. getShadowAlertController ( ). getIconId ( ) )
23664	assertEquals ( "SELECT a AS A1, b AS A2, c AS A3 FROM test", select. toString ( ) )
23665	assertEquals ( instance, AbstractEntity. load ( MyEntity. class, 3L ) )
23666	assertEquals ( "", result )
23667	assertEquals ( null, task )
23668	assertEquals ( getLabel ( ), 0.0, eye. minus ( m3 ). getEuklideanValue ( ), TOLERANCE )
23669	assertTrue ( results. containsAll ( Arrays. asList ( male, undergraduate, graduate, associate ) ) )
23670	assertEquals ( 0.0, result. getUniquenessRatio ( ), 0.0 )
23671	assertSame ( value, bound. anyOldType ( ) )
23672	Assert. assertEquals ( 1.0, DoubleArrays. sum ( props ), 1e-13 )
23673	Assert. assertNull ( caixa )
23674	assertEquals ( "1.2\\t2.3\\t3.4\\n" + "4.5\\t5.6\\t6.7\\n", out. toString ( ) )
23675	assertEquals ( result, "<a href=\\"?titi=456\\">link</a>" )
23676	assertSame ( "The message is not correct.", message, this. tag. getMessage ( ) )
23677	assertTrue ( ping )
23678	assertEquals ( inc. get ( ). get ( ), outRA. get ( ). get ( ) )
23679	assertArrayEquals ( data, getInputStream ( ). readPackedFloats ( data. length / 3, 3 ), 0 )
23680	assertEquals ( new Double ( 123 ), arrayFirst )
23681	Assert. assertEquals ( nodeName, "浜哄伐浠诲��_3" )
23682	runner. assertAllFlowFilesTransferred ( SelectHiveQL. REL_FAILURE, 1 )
23683	Assert. assertEquals ( "user1", endpoint. getResponses ( ). poll ( 15, TimeUnit. SECONDS ) )
23684	assertEquals ( 1.00503, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
23685	Assert. assertEquals ( "3 hours from now", t. format ( new Date ( 1000 * 60 * 60 * 3 ) ) )
23686	assertEquals ( 1, x. size ( ) )
23687	Assert. assertEquals ( 1, inserted. intValue ( ) )
23688	assertTrue ( ( hasAttachmentType == true ) )
23689	assertEquals ( doc. getContent ( ), "some data\\r\\n" )
23690	assertSQLException ( ( ) -> metadata. getParameterClassName ( 2 ) )
23691	assertThat ( xmlResult, CompareMatcher. isSimilarTo ( out. toString ( ) ). ignoreWhitespace ( ). withNodeMatcher ( new DefaultNodeMatcher ( ElementSelectors. byNameAndText ) ) )
23692	assertEquals ( 0, constraintViolations. size ( ) )
23693	assertNotNull ( method. toString ( ), m )
23694	Assert. assertEquals ( configuration, IOUtils. toString ( result ) )
23695	assertImageEqual ( new File ( copy + "." + "png" ), new File ( TEST_FILE_LOCATION + "out_newCustomElement.png" ), new File ( TEST_FILE_LOCATION + "out_newCustomElement2.png" ), new File ( TEST_FILE_LOCATION + "out_newCustomElement3.png" ) )
23696	assertNotNull ( result )
23697	assertEquals ( "method value", ObjectUtils. getValue ( object, "item" ) )
23698	assertNotNull ( service )
23699	assertRowMetaIsFilledWithFields ( )
23700	assertThat ( isExpectedData, is ( true ) )
23701	assertTrue ( KeyValue. COMPARATOR. compare ( original, newone ) == 0 )
23702	assertEquals ( 5.0, d, 0 )
23703	Assert. assertTrue ( data. getTotalNumberOfClasses ( ) > 0 )
23704	assertEquals ( "Invalid property value.", manager, instance. getManager ( ) )
23705	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Record/>", elem. toXml ( ) )
23706	assertFalse ( incorrect. isValid ( status ) )
23707	assertEquals ( new InetSocketAddress ( "1.2.3.4", 0 ), arguments. getLocalAddress ( ) )
23708	assertEquals ( expected, javaSource. getEscapedSourceCode ( ) )
23709	assertEquals ( radius, 0.0 )
23710	assertThat ( resultsFound, containsInAnyOrder ( MULTIPLE_INPUT_RESULTS ) )
23711	assertTrue ( result instanceof Date )
23712	assertEquals ( "null is 'this-is-null-value'", newText )
23713	assertThat ( results, containsInAnyOrder ( ( Matcher ) hasEntry ( "name", "died term" ), hasEntry ( "name", "married term" ) ) )
23714	assertEquals ( NOT_FOUND. getStatusCode ( ), response. getStatus ( ) )
23715	assertEquals ( MediaType. APPLICATION_XML_TYPE, response. getType ( ) )
23716	Assert. assertTrue ( e. toString ( ). contains ( "Not found: Table measurement-lab:m_lab.2010_01" ) )
23717	assertThat ( greetings, Matchers. < String > hasItems ( is ( "Hello, Peter" ), is ( "Hello, Paul" ), is ( "Hello, Mary" ) ) )
23718	assertTrue ( cygnusGroupingRules. getRules ( ). isEmpty ( ) )
23719	assertTrue ( "The RMS relative error per bucket, " + RMSNormalizedError + ", exceeds our tolerance of " + maximumRelativeError, RMSNormalizedError <= maximumRelativeError )
23720	Assert. assertEquals ( testStr, new String ( result ) )
23721	assertEquals ( "https://api.instagram.com/oauth/access_token", result )
23722	assertNotNull ( jobsResponseParser. getCloudToDeviceMethod ( ) )
23723	assertEquals ( false, start )
23724	context. assertEquals ( 500, res. statusCode ( ) )
23725	Assert. assertEquals ( RoleEntity. class, type )
23726	assertEquals ( "1234.5", result )
23727	Assert. assertEquals ( 0.0, optimizer. getRootMeanSquaredError ( ), 2E-4 )
23728	mockery. assertIsSatisfied ( )
23729	Assert. assertEquals ( "Hello World", outStream. toString ( ) )
23730	assertTrue ( landsatMetadata instanceof Landsat8Metadata )
23731	assertPutBytes ( contentBytes )
23732	assertTrue ( GitFileUtils. isFile ( "/test_file.sh", commit. getName ( ), repo ) )
23733	assertTrue ( appClient. isClosed ( ) )
23734	assertThat ( result, equalTo ( expected ) )
23735	assertEquals ( "<text>", label )
23736	Assert. assertTrue ( "Date should be considered after", AutomationUtils. isCurrentTimeAfterDate ( afterDate, 9, Calendar. SECOND ) )
23737	context. assertEquals ( "Squid", handler. body ( ) )
23738	assertEquals ( "Values should match", "value 1", sel. getValue ( ) )
23739	assertEquals ( "HELLO", buffer. toString ( ) )
23740	assertEquals ( filterView, filterEditor. view )
23741	assertNull ( SourceInfoUtil. getSourceInfo ( null, serverSpan, spanCache ) )
23742	assertTrue ( se. toString ( ). contains ( "abggfecbb" ) )
23743	Assert. assertEquals ( primaryPrin1, primaryPrin2 )
23744	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
23745	Assert. assertEquals ( 5, p. f ( 3 ) )
23746	assertEquals ( 0, result )
23747	assertNotNull ( dataBinding )
23748	assertTrue ( b )
23749	assertThat ( scope, equalTo ( new SciTokenScope ( QUEUE, "/" ) ) )
23750	assertValueEqualsResultSet ( rs, Arrays. < Object > asList ( ROW1, ROW2, ROW3, ROW4 ) )
23751	assertFalse ( replaced )
23752	assertEquals ( "Clusterid should match with the existing one", "currentcid", storage. getClusterID ( ) )
23753	assertTrue ( CertificateUtilExtended. isSelfSignedCertificate ( certPem ) )
23754	assertEquals ( expectedTransportCosts + expectedActivityCosts, iCosts, 0.01 )
23755	assertSame ( ThreadNameCachingStrategy. UNCACHED, tns )
23756	assertTrue ( p. getStatusSimple ( ). toString ( ). equals ( "active" ) )
23757	Assert. assertNull ( reservoir. sweep ( ) )
23758	assertFalse ( ex. canBeDividedby3 ( "" ) )
23759	assertThat ( result, is ( true ) )
23760	assertEquals ( deleteTemplate1, deleteTemplate1Duplicate )
23761	assertNull ( s )
23762	assertXMLSimilar ( "Invalid message", expected, message )
23763	Assert. assertEquals ( 0, compare )
23764	assertThat ( "Wrong type of myTestFactory.", myTestFactory. getDelegate ( ), CoreMatchers. instanceOf ( SocketConnectionFactory. class ) )
23765	assertEquals ( 1, ksession. fireAllRules ( ) )
23766	assertEquals ( "Should return failure", "failure", jsonObj. get ( "status" ). getAsString ( ) )
23767	assertEquals ( JSON_DATE_FORMAT. format ( timestamp ), buttonFunctionblockData. getStatusProperty ( "sensor_value" ). get ( ). getValue ( ) )
23768	assertTrue ( "sin() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP )
23769	assertEquals ( "aTestString", classUnderTest. getFieldLength ( ) )
23770	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 3, warnings. size ( ) )
23771	assertEquals ( lastValue, "EndNode8" )
23772	assertThat ( pageable, is ( not ( instanceOf ( Pageable. class ) ) ) )
23773	assertEquals ( "type1", type. getName ( ). getLocalPart ( ) )
23774	assertArrayEquals ( refar, d. getResult ( ) )
23775	assertSpansAccepted ( lots )
23776	assertEquals ( RequestResult. FAILURE, requestResult )
23777	assertEquals ( 0, Context. countActive ( ) )
23778	assertThat ( formatterOutput, containsString ( "" + "      " + AnsiEscapes. RED + "the stack trace" + AnsiEscapes. RESET + "\\n" ) )
23779	assertEquals ( "val0", args. getArgumentsAsMap ( ). get ( "var1" ) )
23780	assertNonNullTaint ( MultiTainter. getTaint ( connected ) )
23781	login. assertIsDisconnected ( )
23782	assertEquals ( p. format ( new Date ( 1 ) ), "moments from now" )
23783	assertTrue ( filter. matches ( operation, poolInfoMap ) )
23784	assertThat ( dialect. getURL ( conn ), is ( SimbaUrl. URL_IS_CONFIGURED_THROUGH_JNDI ) )
23785	assertThat ( getPodSpec ( jobSpec ). getRuntimeClassName ( ), nullValue ( ) )
23786	testTwo. assertIsSatisfied ( )
23787	Assert. assertNull ( busca )
23788	Assert. assertEquals ( "did not find expected resources", 2, resources. size ( ) )
23789	Assert. assertEquals ( 5, operation. operations. size )
23790	assertThat ( ts, not ( nullValue ( ) ) )
23791	assertEquals ( DATA, new ArrayList < > ( columns ) )
23792	Assert. assertTrue ( Arrays. equals ( data, xdata ) )
23793	assertThat ( jsonViewAnnotation. value ( ) [ 0 ]. getSimpleName ( ), equalTo ( "MyJsonViewClass" ) )
23794	Assert. assertEquals ( IrodsRuleInvocationTypeEnum. IRODS, actual )
23795	AssertionUtils. multiAssertEquals ( createAsDocument11, response6. getResponseObject ( ) )
23796	assertEquals ( mockedContractState, invoke ( testResponseData, "getContractState" ) )
23797	assertLine ( "tasty dessicated dog droppings", b, false )
23798	assertEquals ( 403, r. getStatus ( ) )
23799	assertEquals ( expectedQuery, actualQuery )
23800	assertTrue ( thrown )
23801	assertEquals ( expected, actual )
23802	assertEquals ( - 123456789012L, ConfigUtils. getLong ( config, 0, "some-long" ) )
23803	Assert. assertEquals ( expected, actual )
23804	assertEquals ( result, event )
23805	assertEquals ( 204, r. getStatus ( ) )
23806	assertTemplateEvaluatesTo ( "1, 2, 3" )
23807	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( component ) instanceof WStyledTextRenderer )
23808	Assert. assertNotNull ( file )
23809	Assert. assertEquals ( new DateTime ( "1970-01-01" ), spec. extractTimestamp ( ImmutableMap. < String, Object > of ( "dim", "foo" ) ) )
23810	assertEquals ( insertPerson, insertSamePerson )
23811	assertEquals ( true, classUnderTest. getSQLShareHistory ( ) )
23812	Assert. assertEquals ( "randomUser", UserGroupInformation. getLoginUser ( ). getUserName ( ) )
23813	assertTrue ( "", Arrays. equals ( correctStringSet, randomPurmutationSet ) )
23814	assertTrue ( "1.2.0.0 <= 1.2", ruleEvaluator. evaluateBooleanRule ( rule, values ) )
23815	Assert. assertNotNull ( instance. getOverLaps ( source, target ) )
23816	assertTrue ( BufferedImageComparer. isSame ( originalImage, copyImage ) )
23817	assertNotType ( "Smuggler's Copter", CardType. CREATURE )
23818	assertFalse ( sameElts ( x1, x2 ) )
23819	assertThat ( getCreatedPod ( ). getSpec ( ). getVolumes ( ), allOf ( hasVolume ( "volume1", "/domain-path1" ), hasVolume ( "volume2", "/server-path" ) ) )
23820	Assert. fail ( )
23821	assertEquals ( "[200, Hello world!]", Arrays. toString ( result ) )
23822	Assert. assertEquals ( "moduleA", foundModule )
23823	assertEquals ( 8, m. getItems ( ). size ( ) )
23824	assertThat ( transitioningEncryptor. checkPassword ( testPassword, null ), is ( false ) )
23825	assertSame ( bfi, interceptor. getBindingFaultInfo ( message, ex, boi ) )
23826	Assert. assertTrue ( firstLine. startsWith ( "Metadata" ) )
23827	assertNotNull ( result )
23828	assertArrayEquals ( NOT_DECODED, data, object. getData ( ) )
23829	Assert. assertNull ( this. userManager. getUser ( username ) )
23830	Assert. assertEquals ( "Fail find by firstname", userExist. getFirstName ( ), list. get ( 0 ). getFirstName ( ) )
23831	assertions. isEqualTo ( null )
23832	assertTrue ( theInstance. getClassInformation ( ) instanceof GameObjectInstanceClassInformation )
23833	assertTrue ( foundChars )
23834	assertFalse ( etlKeyA. equals ( etlKeyB ) )
23835	assertEquals ( arrayBuffer. getV8ArrayBuffer ( ). setWeak ( ), v8ArrayBuffer )
23836	assertThat ( generatedReportText, isSimilarTo ( expectedReport, "timestamp" ) )
23837	assertEquals ( expectedDependencies, dependencies )
23838	assertThat ( outputDirectory. getPath ( ), is ( changeSeparatorIfRequired ( "custom-reports-directory/thucydides" ) ) )
23839	assertEquals ( 0, result. size ( ) )
23840	assertEquals ( id, "1" )
23841	assertEquals ( idWithSlash, responseRemove. getId ( ) )
23842	assertThat ( thrown, instanceOf ( MaximumTimeLimitExceededException. class ) )
23843	assertFalse ( skillConstraint. fulfilled ( insertionContext ) )
23844	assertTrue ( processedResponse )
23845	assertEquals ( expected, sql [ 0 ]. toSql ( ) )
23846	assertThat ( newShare. getHours ( ), equalTo ( 3 ) )
23847	Assert. assertEquals ( 1, tree. ret. exportedItems. size ( ) )
23848	assertTrue ( s. isSentToRawPubKey ( ) )
23849	assertNotNull ( "Social Profile (JSON):\\n", profile )
23850	assertMappedFieldValueIs ( this. resourceTargetedByMapping )
23851	assertNumberOfViolations ( constraintViolations, 1 )
23852	assertEquals ( "Multiple simple parameters: Simple: 0 and Simple: 1 and also Simple: 2", f. format ( ) )
23853	assertEquals ( m1, m2 )
23854	assertEquals ( DiscordianDate. of ( 2012, 2, 73 ), test )
23855	assertEquals ( expectedSource, instrumentedSource )
23856	assertEquals ( 4, counter. getSnapshots ( ). size ( ) )
23857	assertFalse ( "disabled row should not be selected", row. isSelected ( ) )
23858	assertThatAcceptorWasNotStarted ( )
23859	Assert. assertEquals ( "port should be set", portError. getDescription ( ) )
23860	assertThat ( CollectionNumbers. doubleArrayCopyOf ( rescaled ), equalTo ( new double [ ] { 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 } ) )
23861	assertSkipped ( myTasks, 2, 3 )
23862	assertTrue ( "Candidates count must be greater than 0", candidates. size ( ) > 0 )
23863	assertEquals ( "</6>,</6/0>,</6/0/0>,</6/0/1>,</6/0/2>,</6/0/3>,</6/0/4>,</6/0/5>,</6/0/6>", strLinks )
23864	assertEquals ( HardActivityConstraint. ConstraintsStatus. NOT_FULFILLED_BREAK, status )
23865	assertEquals ( adminProperties. getRefresh ( ), commandArgumentCaptor. getValue ( ) )
23866	Assert. assertEquals ( Integer. valueOf ( 1 ), result )
23867	Assert. assertEquals ( 1, loggerCount. getErrorCount ( ) )
23868	assertEquals ( 1, conflicts. size ( ) )
23869	assertFalse ( out1 instanceof Cloneable )
23870	context. assertNull ( content, "Resource should not have been correctly loaded" )
23871	assertTarget ( "[['a'], ['  ', 'b'], ['    ', 'c']]" )
23872	assertTrue ( latch. await ( 4, SECONDS ) )
23873	assertNotEquals ( searchScroll1, searchScroll2 )
23874	assertThat ( students. size ( ), is ( 3 ) )
23875	assertEquals ( "123", mockResult. included ( "hash" ) )
23876	assertEquals ( "expected no results", false, result. getXdmValue ( ). iterator ( ). hasNext ( ) )
23877	assertContentSame ( rs, rc, columnParam1 )
23878	Assert. assertFalse ( isAdmin )
23879	Verify. assertSize ( 2, dogLovers )
23880	assertTrue ( "No RuntimeException", ex )
23881	assertEquals ( "[[1, 1, 1, 1, 60], [2, 1, 3, 1, 7200]]", result. toString ( ) )
23882	assertEquals ( 60, max )
23883	assertThat ( result, is ( outbound ) )
23884	assertEquals ( "Invalid type", Schema. Type. NULL, schema. getType ( ) )
23885	Assert. assertTrue ( returnedLevels. isEmpty ( ) )
23886	assertEquals ( "82dd31c5e03f0a94c84dd478f6a5264d0eff9af46af30d1b49ad02e6a17caebc", Hex. encodeHexString ( hashed ) )
23887	Assert. assertEquals ( 1, violations. size ( ) )
23888	assertTrue ( res. isValid ( ) )
23889	ImgLib2Assert. assertIntervalEquals ( expected, result )
23890	assertFalse ( object. isReleased ( ) )
23891	Assert. assertEquals ( e, E. withTag ( "test" ) )
23892	assertEquals ( expected + expected + expected, EmbedHelper. fixContentUrls ( "http://server.example.com/", content + content + content ) )
23893	assertEquals ( 1000, results. size ( ) )
23894	assertTrue ( instance. getLayers ( ). size ( ) == nn1. getLayers ( ). size ( ) )
23895	context. assertIsSatisfied ( )
23896	Assert. assertFalse ( secure )
23897	assertTrue ( CompilationUtil. memberMatchesMethodID ( member, "831", parseDictionary ) )
23898	assertContactPoints ( "contact-points", "hello" )
23899	assertThat ( report, is ( not ( nullValue ( ) ) ) )
23900	assertThat ( Functions. bondBasedDBStereo ( g ). toSmiles ( ), is ( "F/N=N/F" ) )
23901	assertNotNull ( member )
23902	objectsWithCustomComparisonStrategy. assertIsIn ( info, "Luke", values )
23903	Assert. assertEquals ( 1, TestHelpers. getOkCount ( cnx ) )
23904	assertFalse ( logContainsText ( COLUMN_0_BECAME_UNHIDDEN_MSG ) )
23905	assertThat ( actual, is ( equalTo ( expected ) ) )
23906	assertEquals ( argumentCaptor. getValue ( ). getLabels ( ), expectedLabels )
23907	assertArrayEquals ( expectedPq, pq, delta )
23908	assertEquals ( result, registry. getDerivingMeters ( filter ) )
23909	assertThat ( partitionKeyValue. toJson ( ), equalTo ( mapper. writeValueAsString ( Collections. singletonList ( "Seattle" ) ) ) )
23910	assertEquals ( "Column 0 did not obey max width of 30px.", 30, getGridElement ( ). getCell ( 0, 0 ). getSize ( ). getWidth ( ) )
23911	assertSame ( fn. getClass ( ), ClassHelper. getRealClassFromClass ( fn. getClass ( ) ) )
23912	Assert. assertNotNull ( result )
23913	Assert. assertEquals ( driver ( ). getTitle ( ), "We Arrive Here" )
23914	assertEquals ( config. getReceiveBufferSize ( ), acceptedConfig. getReceiveBufferSize ( ) )
23915	assertEquals ( DataTypeManager. DefaultDataClasses. CLOB, xs. getType ( ) )
23916	assertEquals ( 30112, person. get ( "id" ) )
23917	assertNotNull ( action )
23918	Assert. assertEquals ( xmlEsperado, FabricaDeObjetosFake. getNFNotaInfoICMSTotal ( ). toString ( ) )
23919	Assert. assertThat ( "ReponseList.size", responseList. size ( ), lessThanOrEqualTo ( 2 ) )
23920	Assert. fail ( )
23921	Assert. assertTrue ( fastqBuilder. sequenceAndQualityLengthsMatch ( ) )
23922	Asserts. check ( headerKeySize >= 2 && headerKeySize <= 3, " Fail to extract http header subset" )
23923	assertTrue ( g. SRID ( ) < 1 )
23924	assertTrue ( ferp. isReadable ( Form. class, null, null, null ) )
23925	assertEquals ( "Only two sets of metrics should be visible.", 1, httpOutput. getResults ( ). size ( ) )
23926	assertNoSpans ( )
23927	assertNotNull ( accounts )
23928	assertEquals ( expResult, result )
23929	assertEquals ( "(a = 1) and (b = 2) and (c = \\"C\\")", e. toString ( ) )
23930	assertEquals ( NOT_DECODED, DATA, object. getMetaData ( ) )
23931	assertTrue ( ExceptionTestUtility. sameMembers ( expectedRep, Collections. EMPTY_SET, unitAnalysis. mightThrow ( s ) ) )
23932	assertEquals ( false, result )
23933	assertEquals ( false, result )
23934	assertEquals ( 0.0009, value, EPSILON )
23935	assertEquals ( DELAY_THRESHOLD_TIME_MS, initSchedulerTime )
23936	assertEquals ( 99.0, series. getY ( 1 ) )
23937	assertEquals ( "hello" + lineSeparator, new String ( data ) )
23938	assertEquals ( 2, names. size ( ) )
23939	assertFeatureValues ( expected, testQuery, testText, getChain ( ) )
23940	assertSame ( test, base )
23941	assertThat ( result. toString ( ), is ( "test.ripe.net" ) )
23942	arrays. assertContainsSequence ( info, actual, sequence )
23943	assertTrue ( called [ 0 ] )
23944	Assert. assertEquals ( "Content-Type: multipart/form-data; boundary=\\"simple-boundary\\"\\r\\n" + "\\r\\n" + "\\r\\n" + "--simple-boundary\\r\\n" + "\\r\\n" + "It does NOT end with a linebreak." + "\\r\\n" + "--simple-boundary\\r\\n" + "\\r\\n" + "It does end with a \\\\r linebreak.\\r" + "\\r\\n" + "--simple-boundary\\r\\n" + "\\r\\n" + "It does end with a \\\\n linebreak.\\n" + "\\r\\n" + "--simple-boundary\\r\\n" + "\\r\\n" + "It does end with a \\\\r\\\\n linebreak.\\r\\n" + "\\r\\n" + "--simple-boundary\\r\\n" + "\\r\\n" + "the last one" + "\\r\\n" + "--simple-boundary--\\r\\n", sb. toString ( ) )
23945	assertEquals ( 1L, result )
23946	assertThat ( result, is ( true ) )
23947	assertThat ( result. getResultCode ( ), is ( ResetPasswordResultCode. INVALID_EMAIL_ADDRESS ) )
23948	assertThatXmlIsReadable ( writeIn )
23949	this. assertVerification ( )
23950	Assert. assertEquals ( "einganzlangeswort", result )
23951	assertEquals ( result, Boolean. FALSE )
23952	assertEquals ( target1. toString ( ). replaceAll ( "_:genid[0-9]+", "_:genid" ), target2. toString ( ). replaceAll ( "_:genid[0-9]+", "_:genid" ) )
23953	assertThat ( selectRandomly. selectSolution ( Arrays. asList ( sol1, sol2 ) ), is ( sol1 ) )
23954	Assert. assertTrue ( actual. isEmpty ( ) )
23955	assertEquals ( 2, cnt )
23956	assertFalse ( consumerPrefetch. running )
23957	assertNotNull ( Transcription. fetcher ( "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "REXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "TRXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
23958	assertEquals ( true, isGood )
23959	assertArrayEquals ( new byte [ ] { 0x00, 0x01, ( byte ) 0xFE, ( byte ) 0xFF }, HexDump. readCompact ( "0001FEFF" ) )
23960	assertNotNull ( authRequest )
23961	assertEquals ( HttpURLConnection. HTTP_OK, connection. getResponseCode ( ) )
23962	Assert. assertTrue ( HasTopLevelNegationVisitor. hasTopLevelNegation ( script ) )
23963	assertSame ( result, this. logger )
23964	Assert. assertEquals ( expectedIds, actual )
23965	assertFalse ( volume. equivalentFileSystems ( other ) )
23966	assertEquals ( "Unexpected primary style name", "v-table", state. primaryStyleName )
23967	assertSame ( child, container. child. get ( ) )
23968	assertEquals ( outputFile, sink. getSink ( ) )
23969	assertThat ( g. toSmiles ( ), is ( "C(C)=[C@@]=CC" ) )
23970	Assert. assertEquals ( "did not get expected xml", expected, collInp. getParsedTags ( ) )
23971	assertEquals ( expectedMap, map )
23972	assertEquals ( HttpStatus. UNAUTHORIZED_401, resp. getStatus ( ) )
23973	assertEquals ( workflowBundle. getWorkflows ( ). size ( ), 2 )
23974	assertEquals ( expectedValue, result )
23975	assertEquals ( expected, uri )
23976	Assert. assertTrue ( valid )
23977	assertTrue ( result. endsWith ( wikiPage ) || java. awt. Desktop. isDesktopSupported ( ) )
23978	Assert. assertEquals ( statusCode, 302 )
23979	assertThat ( result, is ( page ) )
23980	Assert. assertTrue ( publications. size ( ) == 3 )
23981	assertThat ( outputDirectory. getPath ( ), is ( "thucydides-reports" ) )
23982	assertEquals ( "12345678901234567890123456789012", request. getAuthToken ( ) )
23983	assertCheckScopesFailForOtherScopes ( ScopePathType. READ_PUBLIC, ScopePathType. AFFILIATIONS_UPDATE )
23984	assertTrue ( "Oh no! No object retrieved from test data!", store. valuesOfType ( Study. class ). size ( ) > 0 )
23985	Assert. assertEquals ( participant2, currentLeader )
23986	assertEquals ( STATIC, CorrectEquals. staticValue )
23987	Assert. assertEquals ( "SELECT 'A' LIKE CONVERT(blob_col USING latin1)\\nFROM tbl_name;", text )
23988	Assert. assertTrue ( errors. hasGlobalErrors ( ) && errors. getGlobalError ( ). getCode ( ). equals ( TenantPermissionValidator. ERROR_CODE_EMPTY_SELECTED_IDS ) )
23989	assertThat ( responseHandler. getResponseObjects ( ), contains ( ( ResponseObject ) new MessageObject ( QueryMessages. noResults ( "RIPE" ). toString ( ) ) ) )
23990	assertEquals ( key. getTenantIdField ( ). toString ( ), "meta.data.tenantId" )
23991	assertArrayEquals ( new byte [ ] { 0, 1, 2, 4, 5, 6, 7 }, id )
23992	Assert. assertTrue ( resultado )
23993	assertThat ( mfp. getProperty ( ), equalTo ( "production" ) )
23994	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
23995	Assert. assertEquals ( "[\\"a\\",\\"b\\",\\"c\\",\\"d\\"]", jsonArray2. toString ( ) )
23996	assertEquals ( 11, jobExecutor. getJobsAdded ( ) )
23997	assertThat ( parameters, is ( "?searchView=own&orderBy=createdNewest&show=omAll&minSupportCount=0" ) )
23998	assertTrue ( theSelectedPoolsWere ( allAvailablePools ( ) ) )
23999	JSONAssert. assertEquals ( "Message", "{id:12345}", actual, LENIENT )
24000	assertEquals ( Integer. of ( 2 ), result )
24001	assertEquals ( "tiled", actual. require ( "description" ). requireString ( ) )
24002	assertThat ( interval, is ( ser ) )
24003	assertEquals ( expected, json )
24004	Assert. assertEquals ( expected [ key ], actual. get ( key, 0 ) )
24005	assertThat ( service. fetchArtifact ( "latest-dev" ), is ( not ( nullValue ( ) ) ) )
24006	Assert. assertEquals ( 2, counter. get ( ) )
24007	assertEquals ( "Index = " + i, ModisDaacUtils. extractProductType ( toTest ), type )
24008	assertFalse ( obs. isDirty ( ) )
24009	assertViewName ( mav, "editProfile" )
24010	Assert. assertEquals ( Response. Status. INTERNAL_SERVER_ERROR. getStatusCode ( ), response. getStatus ( ) )
24011	assertNull ( result )
24012	assertThat ( runtime. exitStatus ( ), is ( equalTo ( ( byte ) 0x1 ) ) )
24013	assertEquals ( ByteString. decodeHex ( "0000007400000259000002c800000072000000610000006e00000259" + "000002cc00000073000000f400000072" ), data. readByteString ( ) )
24014	assertThat ( definition. tableEntryByTypeTransformer ( ). transform ( fromValue, String. class, cellTransformer ), is ( "key=value" ) )
24015	assertThat ( result, is ( false ) )
24016	Assert. assertFalse ( policy. canRetry ( context ) )
24017	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 02" ) )
24018	Assert. assertEquals ( expResult, result )
24019	assertEquals ( 0, lines. size ( ) )
24020	Assert. assertEquals ( "Hello world!", output )
24021	Assert. assertNotNull ( a )
24022	assertEqualToResource ( file, resultReport )
24023	assertThat ( file, not ( containsString ( ".jar=/" ) ) )
24024	assertNull ( result )
24025	assertOut ( "/**\\n * @interface\\n */\\nIA = function() {\\n};\\nIA.prototype.foo1;\\nIA.prototype.baz1 = function() {\\n};\\nIA.prototype.baz2 = function(value) {\\n};" )
24026	assertThat ( result, equalTo ( 1 ) )
24027	Assert. assertTrue ( isSuccess )
24028	assertMockEndpointsSatisfied ( )
24029	assertEquals ( "Heroes Collection", heroesCollectionNode. getProperty ( "type" ) )
24030	Assert. fail ( "Previous request should have failed" )
24031	assertNotEquals ( currentDateTime. getDayOfWeek ( ), userDateTime. getDayOfWeek ( ) )
24032	assertTrue ( "Listener didn't exit", proxy. isStopped ( ) )
24033	assertEquals ( 0, elements. size ( ) )
24034	assertTrue ( result. getErrors ( ). size ( ) > 0 )
24035	assertCheckClientAccessAndScopesFailForOtherScopes ( ORCID_1, ScopePathType. READ_PUBLIC, ScopePathType. PEER_REVIEW_READ_LIMITED )
24036	assertEquals ( "Inocrrectly decoded message", "hööö?", event. getDecodedMessage ( ) )
24037	assertEquals ( 4, BufferTools. indexOfTerminator ( buffer, 0, 2 ) )
24038	assertEquals ( "Got wrong answer for supports", false, actual )
24039	assertObjectEquals ( "[{}]", p. run ( bs, in, sa ) )
24040	assertEquals ( expectedReadConcern, parsedReadConcern )
24041	Assert. assertNotNull ( blogEntry )
24042	Assert. assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, expectedQuery ) )
24043	assertFalse ( ret )
24044	assertEquals ( ComponentElementGetValue. FIELD_VALUES [ 2 ], labelChangeValue. getText ( ) )
24045	assertOut ( "/**\\n * @private\\n * @const\\n * @type {number}\\n */\\nRoyaleTest_A.foo = 420" )
24046	context. assertTrue ( storage. getMockData ( ). containsKey ( resourceURI ) )
24047	Assert. assertTrue ( item. matches ( divNode ) )
24048	assertArrayEquals ( encodeASCII ( "18 chars test data" ), channel. getBytes ( ) )
24049	assertNull ( type )
24050	assertThat ( Tinify. client ( ), isA ( Client. class ) )
24051	assertTrue ( "Can't find statement", m. contains ( expectedStatement ( SSH_BASE ) ) )
24052	assertTrue ( Files. exists ( p ) )
24053	assertFalse ( correlatedExecutions. isEmpty ( ) )
24054	Assert. assertEquals ( expected, actual )
24055	assertThat ( result, is ( false ) )
24056	assertEquals ( "bc\\n", found )
24057	assertNull ( presenter. getValue ( ) )
24058	assertThat ( source. getName ( ), is ( nullValue ( ) ) )
24059	assertThat ( converter, instanceOf ( MySecondConverter. class ) )
24060	Assert. assertEquals ( min, recs2. iterator ( ). next ( ) )
24061	assertEquals ( page. getCOSObject ( ), victim. get ( 1 ) )
24062	assertEquals ( "{\\"ie\\":\\"9031525087\\"}", writer. toString ( ) )
24063	assertEquals ( Response. Status. OK. getStatusCode ( ), target. request ( MediaType. APPLICATION_XML ). get ( ). getStatus ( ) )
24064	assertTrue ( page1. getElementById ( "metadata" ). asText ( ). contains ( "some-predicate" ) )
24065	Assert. assertEquals ( "3 days from now", t. format ( new Date ( 1000 * 60 * 60 * 24 * 3 ) ) )
24066	assertNotNull ( reporter )
24067	assertThat ( classLoader. toString ( ), containsString ( "urls=" + classLoader. asShortPaths ( new File ( "one.jar" ). toURI ( ). toURL ( ), new File ( "/target/classes" ). toURI ( ). toURL ( ) ) ) )
24068	assertTrue ( r. isMatch ( request ) )
24069	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff55_" ) )
24070	assertNumEquals ( 0d, mdd. calculate ( series, new BaseTradingRecord ( ) ) )
24071	assertEquals ( expResult, result )
24072	assertEquals ( "Aeneas^Ruediger", b. getString ( Tag. PatientName ) )
24073	assertThat ( result. size ( ), is ( 0 ) )
24074	assertNull ( target. getEthType ( ) )
24075	assertThat ( estimator. estimate ( renderingContext ), equalTo ( 40f ) )
24076	Assert. assertEquals ( FastMath. PI, x, accuracy )
24077	Assert. assertEquals ( "Failure expected the name to be the same", "ChatroomUpdateDTO", MHRDTO. getDTOName ( ) )
24078	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
24079	Assert. assertNull ( identifierType )
24080	Assert. assertArrayEquals ( evaluation. getResiduals ( ). toArray ( ), new double [ ] { 2, - 3 }, Precision. EPSILON )
24081	Assert. assertEquals ( "Queues missing", MicroPipelineValidationResult. MISSING_QUEUES, new MicroPipelineValidator ( ). validate ( mockCfg ) )
24082	assertEquals ( "scm", value )
24083	assertEquals ( expectedQuery, actualQuery )
24084	assertTrue ( literals. get ( 0 ). isIntLiteral ( ) )
24085	assertEquals ( "Subject - Log message for Test", msg. toString ( ) )
24086	Assert. assertEquals ( 1, violations. size ( ) )
24087	assertNonNullTaint ( arr [ 0 ] )
24088	assertEquals ( 10 * Constants. HOUR, mConfiguration. getMs ( PropertyKey. PROXY_STREAM_CACHE_TIMEOUT_MS ) )
24089	Verify. assertSortedBagsEqual ( expectedPrices, orderedPrices )
24090	Assert. assertEquals ( "john.doe@smartsheet.com", sheets. getData ( ). get ( 0 ). getOwner ( ) )
24091	Assert. assertTrue ( validator. isValid ( array, context ) )
24092	assertEquals ( "Expected 100 results!", 100, n )
24093	assertEquals ( 0, atlasModuleInfoRegistry. size ( ) )
24094	Assert. assertThat ( "ID_1!= ID_2", ID_1, not ( ID_2 ) )
24095	assertTrue ( enabled )
24096	assertThat ( result, is ( equalTo ( expected ) ) )
24097	assertEquals ( HIERARCHICAL_METADATA_SERVICE_URI, conf. getMetadataServiceUri ( ) )
24098	assertEquals ( "Person(age < 42 && age < 43 && age < 44)", builder. getResult ( ) )
24099	assertEquals ( 0, list. size ( ) )
24100	assertEdge ( v1, v2, e, true )
24101	assertEquals ( result, 1 )
24102	assertEquals ( 0, returnedVariables. size ( ) )
24103	assertEquals ( s, v. stringValue ( ) )
24104	assertPattern ( info, "/list-endpoint-api-controller/getList" )
24105	Assert. assertEquals ( awsId1, awsId2 )
24106	assertFalse ( target. channelExist ( "tokyo" ) )
24107	assertTrue ( new File ( nodeInstallationDir, "/node_modules/lodash" ). isDirectory ( ) )
24108	assertEquals ( LocalDateTime. of ( 2012, 6, 23, 0, 0 ), test )
24109	Assert. assertEquals ( "Rick", mv. getValue ( ) )
24110	assertEquals ( LARGE_COLLECTION_COUNT, cb. count ( ) )
24111	Assert. assertNull ( policy. getWorker ( options ) )
24112	assertNull ( info )
24113	assertAllocationFailsForMissingDir ( workDir, DirType. INTERNAL_DIR )
24114	Assert. assertTrue ( ModuleUtil. matchRequiredVersions ( openmrsVersion, requiredVersion ) )
24115	assertEquals ( ( numValues ) * numFields + numPartitions, result. size ( ) )
24116	assertUpdateRecord ( "*.c1.missing", objId, obj, updateObj, PATCH, expected )
24117	assertEquals ( "com.alibaba.dubbo.rpc.protocol.dubbo.support.DemoService -> dubbo://127.0.0.1:" + port + "/demo", result )
24118	assertTrue ( members. findBy ( "s1" ). isPresent ( ) )
24119	assertEquals ( "myTestId", history. getIdElement ( ). getIdPart ( ) )
24120	Assert. assertEquals ( expectedResult, resultString )
24121	assertTrue ( result == null )
24122	assertEqualsWithoutWhiteSpaces ( "(model11)", testSubject. subModel ( new ScadGenerationContextFactory ( ). include ( 1 ). exclude ( 12 ). create ( ) ) )
24123	Assert. assertTrue ( "second rule should be removed.",! it. hasNext ( ) )
24124	assertNull ( actual )
24125	assertEquals ( expected, result )
24126	assertEquals ( HAServiceState. ACTIVE, svc1. state )
24127	assertEquals ( ans [ i ], val )
24128	assertEquals ( "new org.jboss.errai.codegen.test.model.MyTestAnnotation() { " + "public Class annotationType() { " + "    return org.jboss.errai.codegen.test.model.MyTestAnnotation.class; " + "} " + "public String foo() { " + "    return \\"barfoo\\"; " + "} " + "public org.jboss.errai.codegen.test.model.TEnum testEum() { " + "    return org.jboss.errai.codegen.test.model.TEnum.FOURTH; " + "} " + "public String toString() { " + "    return \\"@org.jboss.errai.codegen.test.model.MyTestAnnotation(foo=barfoo, testEum=FOURTH)\\"; " + "} " + "}", enc )
24129	assertThat ( timer. elapsedTime ( ), is ( equalTo ( millis ( 5 ) ) ) )
24130	Assert. assertEquals ( "{\\"alice\\":{\\"bob\\":[\\"edgar\\",\\"charlie\\"]}}", writer. toString ( ) )
24131	assertThat ( "Cloned builder changed after creating new one", builder. build ( ). toString ( ), not ( clonedBuilder. build ( ). toString ( ) ) )
24132	assertThat ( interceptor, accepts ( method ) )
24133	Assert. assertEquals ( "Model should contain only added RDF type", rdfTypes. size ( ), 1 )
24134	assertNotNull ( getProxy ( ). addAgreement ( ObjectMapperHelpers. JsonToObject ( json, Agreement. class ) ) )
24135	assertEquals ( "Henri", item. getFirstname ( ) )
24136	approver. assertApproved ( "Deliberate failure - Jackdaws peck my big sphincter of quartz" )
24137	Assert. assertEquals ( "4", entregaIntervalo. getTipoPrazoHoraEntrega ( ). getCodigo ( ) )
24138	assertEquals ( contentExpected, contentReturned )
24139	assertTrue ( String. format ( "Expected error to contain string [%s]. Actual error: %s", expected, ex. getMessage ( ) ), ex. getMessage ( ). contains ( expected ) )
24140	assertTrue ( entity2. getVersion ( ) == 1 && entity3. getVersion ( ) == 1 && entity4. getVersion ( ) == 2 && entity5. getVersion ( ) == 2 )
24141	assertEquals ( "htmlWithMacros", Functions. getPageHtml ( PROJECT, BRANCH, PAGE ) )
24142	assertSame ( Object. class, ClassHelper. getRealClassFromClass ( cglibProxyObject. getClass ( ) ) )
24143	assertNull ( value )
24144	assertArrayEquals ( new Item [ ] { SECOND_ITEM, FIRST_ITEM }, actual. toArray ( new Item [ 2 ] ) )
24145	assertNotNull ( imagePreviewDashlet )
24146	assertThat ( array, Matchers. is ( ArrayHelper. getContinuousArray ( 20 ) ) )
24147	assertEquals ( "132", content )
24148	assertEquals ( "provided", node. getEffectiveScope ( ) )
24149	assertThat ( columnCombination. getClearedBits ( fixture. getMaxNumberOfColumns ( ) ), IsIterableContainingInAnyOrder. containsInAnyOrder ( fixture. getExpectedClearedBits1 ( ) ) )
24150	assertEquals ( expected, actual )
24151	assertEquals ( MediaType. APPLICATION_JSON_TYPE, response. getType ( ) )
24152	Assert. assertEquals ( xmlEsperado, icmsst. toString ( ) )
24153	assertEquals ( Byte. valueOf ( "3" ). intValue ( ), result. getValue ( ). intValue ( ) )
24154	assertEquals ( count ( statusToAdd, EncodingStatus. Status. ENCODING_REQUESTED ), ( int ) ( Integer ) countReq. handle ( ) )
24155	assertTrue ( true )
24156	Assert. assertThat ( result. get ( "success" ). size ( ), is ( 0 ) )
24157	assertEquals ( 0, numberOfDocumentsIn ( index ) )
24158	Assert. assertFalse ( isValid, "PollItems has names length, that more than min possible size, so they must be invalid" )
24159	assertEquals ( "aa", Futures. transformAsync ( future, s -> Futures. immediateFuture ( s + s ), MoreExecutors. directExecutor ( ) ). get ( ) )
24160	assertEquals ( "foo", o )
24161	assertEquals ( false, result )
24162	assertEquals ( events. size ( ), size ( stream ) )
24163	assertEquals ( 1, observation. getStatusElement ( ). getExtension ( ). size ( ) )
24164	assertEquals ( ecodIds. length, successful )
24165	assertEquals ( 1.0, result. getLeft ( ), EPSILON )
24166	Assert. assertEquals ( SERVER_ROLE. MASTER, role. getServerRole ( ) )
24167	Assert. assertEquals ( 1, resources )
24168	Assert. assertEquals ( 3, myActivities. size ( ) )
24169	assertTrue ( done )
24170	assertNull ( token. getRefreshToken ( ) )
24171	assertFalse ( startsWithHttpsOrFTP )
24172	assertEquals ( "Source value copied", ( Integer ) 10, copy. deref ( ) )
24173	assertResponseContains ( httpResponse, "com.qmetric.spark.metrics.MetricSetupTest$1.timer", "com.qmetric.spark.metrics.RouteTimerWrapper.meter" )
24174	assertEquals ( exampleFixture, example )
24175	assertEquals ( "Could not retrieve the value we inserted", entry, cache. getDNSEntry ( entry ) )
24176	getStream ( streamId ). statusCode ( 200 ). assertThat ( )
24177	assertThat ( drawingMotion. isPoint ( ), is ( true ) )
24178	assertTrue ( features. noneMatch ( f -> f. getId ( ). equals ( "spring/2.5.6.SEC02" ) &&! f. isBlacklisted ( ) ) )
24179	assertGroups ( ldapUserInfo, true, false, false, false )
24180	this. assertEquals ( this. getRoot ( expected ), this. getRoot ( actual ) )
24181	assertTrue (! suspendables. contains ( method ) )
24182	assertFalse ( appender. isStarted ( ) )
24183	assertTrue ( date!= null )
24184	Assert. assertEquals ( 4, getAddressDao ( ). getAll ( ). size ( ) )
24185	assertEquals ( MESSAGE, ex. getMessage ( ) )
24186	assertThat ( built. getName ( ), is ( "John Smith" ) )
24187	assertEquals ( expected, ax )
24188	assertEquals ( generatedJavascript, expectedJavascript )
24189	Assert. assertNull ( systemJavaxPersistenceOverrides )
24190	assertNotNull ( handler1 )
24191	Assert. assertTrue ( "Resulting query should throw IOException.", exception )
24192	Assert. assertTrue ( "This should overflow to negative", unprocessedSize + hugeLength < 4 )
24193	assertThat ( updateSuccessful, equalTo ( true ) )
24194	assertEquals ( "jackrabbit/log/jackrabbit.log", r )
24195	Assert. assertEquals ( CatalogResponseMessage. OK, response. getCode ( ) )
24196	assertThat ( g, not ( instanceOf ( CompositeGenerator. class ) ) )
24197	Assert. assertTrue ( contains )
24198	assertEquals ( 3, map. size ( ) )
24199	assertEquals ( ( double ) 8, result. getDoubleValue ( ), 0.0 )
24200	assertThat ( joined, containsInAnyOrder ( "a c", "a d", "b c", "b d" ) )
24201	arrays. assertContainsOnly ( description, actual, other )
24202	assertThat ( new String ( buffer. toByteArray ( ) ), is ( "{" + "\\"self\\":\\"/db/data/relationship/0\\"," + "\\"type\\":\\"LOVES\\"," + "\\"start\\":\\"/db/data/node/0\\"," + "\\"end\\":\\"/db/data/node/1\\"," + "\\"data\\":{" + "\\"name\\":\\"bob\\"," + "\\"age\\":12," + "\\"favorite_numbers\\":[1,2,3]" + "}," + "\\"extensions\\":{}" + "}" ) )
24203	assertEquals ( N, readSome ( client, tableNames [ 0 ] ) )
24204	assertNull ( "expect auto-created rowsorter nulled?", table. getRowSorter ( ) )
24205	assertEquals ( expected, sw. toString ( ) )
24206	Assert. assertTrue ( etagHeaderValue. matches ( "\\".*?\\"" ) )
24207	assertTrue ( diff > 0.0 )
24208	assertEquals ( MICRO ( METRE ), u )
24209	assertThat ( javaDocComment, containsString ( "A title for this enum" ) )
24210	assertSame ( conn1, conn2 )
24211	runner. assertAllFlowFilesTransferred ( PublishKafkaRecord_2_0. REL_FAILURE, 1 )
24212	assertEquals ( result1, result2 )
24213	assertThat ( result, is ( nullValue ( ) ) )
24214	assertEquals ( 30, s. getBoundingBox ( ). getWidth ( ), 0.0 )
24215	Assert. assertTrue ( arrangeTaskExecutor. getTaskThread ( ). isAlive ( ) )
24216	Assert. assertTrue ( files. get ( 0 ). contains ( "filesample.txt" ) )
24217	assertEquals ( AuthorizationStatus. BLOCKED, response. getIdTagInfo ( ). getStatus ( ) )
24218	assertEquals ( "The metadata key should be the summary made up of top scoring sentences", expectedSummary, metadata. find ( METADATA_KEY ). get ( ) )
24219	assertEquals ( "should return begin, trace", 0, results. size ( ) )
24220	assertEquals ( expectedJson, actualJson )
24221	Assert. assertEquals ( expected, actual )
24222	assertThat ( req. getBodyAsBytes ( ), is ( BINARY_BODY ) )
24223	assertTrue ( broker. removeCollection ( transaction, thingCollection ) )
24224	assertEquals ( String. class, r. resolve ( "String" ) )
24225	assertNotNull ( response )
24226	assertTrue ( resultFromJPQL. size ( ) > 2 )
24227	assertOut ( "this.a.child('child').child('grandchild').removeChildAt(0)" )
24228	assertTrue ( "Logger should not be removed", ops. exists ( TEST_LOGGER_ADDRESS ) )
24229	assertFalse ( config. isAutoRefreshOAuth2TokenEnabled ( ) )
24230	assertDecorate ( serviceProps, expected, RES_SD )
24231	assertEquals ( inputString, outputString )
24232	Assert. assertEquals ( 1, result. getEntities ( ). size ( ) )
24233	Assert. assertArrayEquals ( coh_EXPECTED. toArray ( ), coh_ACTUAL. toFloat ( ). toArray ( ), ( float ) DELTA_04 )
24234	assertBufferMatches ( A, B )
24235	Assert. assertEquals ( Collections. binarySearch ( check, needle ), test. binarySearch ( 0, test. size ( ), needle ) )
24236	Assert. assertFalse ( "Method supported", adapter. supportsInternal ( new MethodEndpoint ( this, unsupported ) ) )
24237	Assert. assertEquals ( "Method: doTestGetPrinterJMakiTree \\nMessage: Root of the returned " + "jMakiTree doesn't match the expected value", "printers", treeModel. root. label )
24238	assertSame ( "Value was changed", value, interpolator. interpolate ( value ) )
24239	surefireLauncher. executeTest ( ). assertTestSuiteResults ( 2, 1, 0, 0 )
24240	assertEquals ( asList ( MapUtil. map ( "person.type", "hero", "person.name", "Thomas Anderson" ), MapUtil. map ( "person.type", "hero", "person.name", "Trinity" ) ), result )
24241	assertErrorEventDefinition ( "boundary", "myErrorCode", null )
24242	Assert. assertTrue ( expected. compareTo ( buf ) == 0 )
24243	assertCompareToOrder ( comparator, a, b )
24244	assertTrue ( featuresService. isInstalled ( featuresService. getFeature ( "pax-http-tomcat" ) ) )
24245	Assert. assertEquals ( "涓�瑗�|浼�|��|浜�", words )
24246	assertThat ( id, greaterThan ( 0 ) )
24247	Assert. assertEquals ( expectedDPIDs [ i ], datapathId. longValue ( ) )
24248	assertEquals ( "case when (cat.toes =?1) then?1 when (cat.toes =?2) then?2 else 4 end", serializer. toString ( ) )
24249	assertEquals ( emf. format ( new Object [ ] { "there", 3, "great" } ), "Hi there, got 3, GREAT!" )
24250	assertThat ( listener. toString ( ), allOf ( containsString ( "step1" ), containsString ( "step2" ), containsString ( "step3" ) ) )
24251	assertThat ( future, completesTo ( "abc" ) )
24252	assertTrue ( "configuration is not cleared", config. isEmpty ( ) )
24253	TestUtil. assertEquals ( exp, spans )
24254	assertThat ( output, containsString ( "Studies found:" ) )
24255	assertEquals ( 1, iData. getDeliveryInsertionIndex ( ) )
24256	Assert. assertEquals ( "Test-29", list. get ( 0 ). getTitle ( ) )
24257	Assert. assertThat ( result. size ( ), is ( 0 ) )
24258	assertThat ( configuration. getECMAVersion ( ), equalTo ( Config. LanguageMode. ECMASCRIPT7 ) )
24259	Assert. assertEquals ( 200, action. getResponse ( ). getStatusLine ( ). getStatusCode ( ) )
24260	TestCase. assertTrue ( result )
24261	assertEquals ( 0, ds. size ( ) )
24262	assertEquals ( "<html><head><title>Test茅 莽a</title></head><body>Test茅 莽a</body></html>", responseBody )
24263	Assert. assertNotNull ( addressResultsDto )
24264	Assert. assertEquals ( coapRequest1, coapRequest2 )
24265	assertEquals ( 1, t. foo ( ) )
24266	assertThat ( result, equalTo ( URL_WITH_ARCHETYPE_CATALOG ) )
24267	AssertiveInstance. init ( )
24268	Assert. assertTrue ( ExpectedConditions. textToBePresentInElement ( By. id ( "customErrorPage" ), "This is a custom error page" ). apply ( driver ) )
24269	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff_" ) )
24270	assertSame ( binding, uriTools. resolveUri ( PROFILE_URI. resolve ( "processorbinding/Hello/out/greeting" ), wfBundle ) )
24271	assertFalse ( fs. unlink ( "foo" ) )
24272	assertTrue ( workers. size ( ) == 0 )
24273	assertThat ( output. format ( "narrative", "", "narrative" ), Matchers. is ( "\\033[34mnarrative\\033[0m" ) )
24274	assertEquals ( "20887", result )
24275	assertThat ( result, contains ( new URI ( uris. get ( 0 ) ), new URI ( uris. get ( 1 ) ) ) )
24276	assertEquals ( "[]", CollectionUtils. trim ( list, 2 ). toString ( ) )
24277	assertThat ( url, is ( "http://www.google.com" ) )
24278	assertEquals ( experimentDeleteRequest. getResponseParser ( ). parse ( null ), responseParser. parse ( null ) )
24279	assertArrayEquals ( expected, actual, 1E-8 )
24280	assertTrue ( "Exception raised", exceptionRaised )
24281	assertTrue ( "No maximum length reached exception was thrown!", exception )
24282	assertEquals ( 1, changedModel. getGroups ( ). size ( ) )
24283	assertThat ( processor, instanceOf ( UnexpectedMessageProcessor. class ) )
24284	Assert. assertEquals ( "i am a block of content\\n\\n\\ni am another block of content", html. trim ( ) )
24285	assertEquals ( "{successRecordCount=0, rejectRecordCount=0, totalRecordCount=0}", wop. finalize ( wr, null ). toString ( ) )
24286	assertThat ( module. getPrivileges ( ), is ( equalTo ( Collections. EMPTY_LIST ) ) )
24287	assertEquals ( diff, obj. toString ( ) )
24288	assertTrue ( expiryTimeBaseInSecs <= expiryTimeInSecs && expiryTimeInSecs <= ( expiryTimeBaseInSecs + expiryTimeTestErrorRange ) )
24289	assertEquals ( constraintViolations. size ( ), 1 )
24290	assertTrue ( result. getErrors ( ). size ( ) > 0 )
24291	assertThat ( upload. getFileSizeMax ( ), is ( fileSizeMax ) )
24292	assertThat ( actual, containsString ( "[13/07/2019:13:11:34Z]" ) )
24293	assertEquals ( expected, reference. get ( ) )
24294	assertEquals ( "OK", response. getTitle ( ) )
24295	assertEquals ( DROP_STATEMENT_FALLBACK, statement )
24296	assertNotNull ( SyncList. fetcher ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "ESXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). fetch ( ) )
24297	assertEquals ( ret, true )
24298	assertThat ( datastore. getCount ( UserActivityRecord. class ), is ( 1L ) )
24299	context. assertIsSatisfied ( )
24300	assertTrue ( Arrays. deepEquals ( new byte [ ] [ ] { BaseEncoding. base64 ( ). decode ( "BaS" ), BaseEncoding. base64 ( ). decode ( "e6" ), BaseEncoding. base64 ( ). decode ( "" ), BaseEncoding. base64 ( ). decode ( "4+" ), BaseEncoding. base64 ( ). decode ( "padding" ), BaseEncoding. base64 ( ). decode ( "more" ), BaseEncoding. base64 ( ). decode ( "" ) }, values ) )
24301	assertProcessInstanceActive ( instance )
24302	Assert. assertEquals ( ECHO_STRING, outMessage )
24303	assertNotNull ( "MailReport", timer. purge ( ) )
24304	assertThat ( CalendarYear. from ( cy. toProlepticNumber ( ) ), is ( cy ) )
24305	assertEquals ( player. getHero ( ). getArmor ( ), minion. getBaseHp ( ) + 3 )
24306	assertNull ( result )
24307	assertEquals ( aNumber, Float. MAX_VALUE, 1E32 )
24308	assertEquals ( "GS*GS01*GS02*GS03", x12. getSegment ( 1 ). toString ( ) )
24309	assertThat ( cut. apply ( pageObject ), is ( false ) )
24310	assertEquals ( expResult, result )
24311	Assert. assertFalse ( goodTask. isTimeToRun ( notTime ) )
24312	assertEquals ( 0, metadata )
24313	deleteRunner. assertAllFlowFilesTransferred ( AbstractDynamoDBProcessor. REL_FAILURE, 1 )
24314	assertCreatedRight ( client, "iems://test:123/Event" )
24315	Assert. assertEquals ( proxy, deserialized )
24316	Assert. fail ( "expected exception when feature value is not boolean" )
24317	assertSelectResultKeySizeIsZero ( selector )
24318	assertEquals ( expectedSchema, schema )
24319	assertEquals ( "Wrong value of property", "a;b;c", config. getString ( "keyMulti" ) )
24320	assertSame ( fastest, kowalsky )
24321	assertEquals ( "{ \\"field name\\" : { \\"$all\\" : [\\"*?\\"] } }", filterParameters. toString ( ) )
24322	assertEquals ( "1", result )
24323	assertTrue ( auth. isAuthenticated ( ) )
24324	assertEquals ( "Expecting different pedigree", - 1, result )
24325	assertEquals ( expected, arguments. profilers )
24326	assertEqual ( Integer. toString ( ++ c ), query. next ( ) )
24327	assertEquals ( "<p id=\\"�\\">Blah
24328	assertThat ( cause, nullValue ( ) )
24329	assertTrue ( "Table has scrolled.", rowLocation == newRowLocation )
24330	assertNotNull ( IndexWriter. getFailurePolicy ( env ) )
24331	assertEquals ( tpv1, tpv2 )
24332	assertEquals ( "\\"NAME\\" LIKE?", QueryBuilder. getWhereStringForFilter ( f, sh ) )
24333	assertEquals ( "response should be '" + basicAuthHeader + "'", basicAuthHeader, response. getResponseBody ( ) )
24334	assertEquals ( "Expected 4 results!", 4, count )
24335	assertThat ( LongTypeValidator. INSTANCE. validate ( parameters, "aaa" ), is ( nullValue ( ) ) )
24336	assertEquals ( MESSAGE, result )
24337	Assert. assertTrue ( byUUID. getState ( ). getEmail ( ) == null )
24338	assertThat ( buffer, is ( equalTo ( f1 ) ) )
24339	assertNotNull ( walletInfo )
24340	assertEquals ( expectedQuery, actualQuery )
24341	assertContains ( "<p>1</p>", content )
24342	assertEquals ( 1, latch. getCount ( ) )
24343	assertEquals ( Integer. valueOf ( 67 ), resultMap. get ( "Age" ) )
24344	assertEquals ( "Wrong number of warnings detected.", 3, warnings. size ( ) )
24345	Truth. assert_ ( )
24346	assertThat ( str, equalTo ( "select count(id) frOm `user` as u" ) )
24347	assertEquals ( 401, post. getStatus ( ) )
24348	assertNull ( message )
24349	Assert. assertEquals ( model, loaded )
24350	assertXMLEqual ( getExpectedString ( ), stringWriter. toString ( ) )
24351	assertThat ( obj. getId ( ), Is. is ( i ) )
24352	assertEquals ( markup, rewrite ( gadget, markup, set ( "b" ), set ( ) ) )
24353	Assert. assertEquals ( 42., analyser. getDistance ( route ), 0.01 )
24354	Assert. assertTrue ( false )
24355	Assert. assertArrayEquals ( new String [ ] { "com", "hostname", "sub", "8000", "user", "password", "path1", "path2", "*" }, toStringArray ( tokens ) )
24356	assertEquals ( expected, fromString )
24357	assertEquals ( t1. getLinkWith ( t2, roadMap ), r )
24358	assertEquals ( "smiling face with open mouth and smiling eyes", emoji. getDescription ( ) )
24359	assertTrue ( "Option 'delete-vault' not found in " + Arrays. deepToString ( optionSet. specs ( ). toArray ( ) ), optionSet. has ( "delete-vault" ) )
24360	Assert. assertEquals ( registrationBC. retrieveAll ( ). size ( ), 2 )
24361	assertEquals ( 1, allObjects. size ( ) )
24362	Helpers. assertDateWithError ( startTime, ( String ) Deencapsulation. getField ( jobsParser, "startTime" ) )
24363	Assert. assertEquals ( result, a. getResult ( ) )
24364	assertEquals ( 0, controller. getRootNode ( ). getConnections ( ). size ( ) )
24365	Assert. assertEquals ( new HashSet < > ( Arrays. asList ( 1, 2, 3, 4 ) ), boundedSet )
24366	assertThat ( this. dataModel. getWrappedData ( ), is ( DataModelRowSet. class ) )
24367	assertEquals ( JSON_CONTENT_RGB, stringWriter. toString ( ) )
24368	Assert. assertTrue ( esperado == resultado )
24369	assertThat ( actualPerMinuteValue, is ( 13 ) )
24370	assertEquals ( result. get ( "book1" ). get ( 0 ), "Gambardella, Matthew" )
24371	Assert. assertNotNull ( addressResultsDto )
24372	Assert. assertEquals ( prefixedJCommander. getParsedCommand ( ), "abc" )
24373	Assert. assertEquals ( Schema. Type. RECORD, subSchema. getType ( ) )
24374	result. assertIsSatisfied ( )
24375	assertEquals ( expected, actual )
24376	Assert. assertArrayEquals ( new Result [ ] { Result. createValueResult ( true ), Result. createValueResult ( 1 ), Result. createExceptionResult ( NoSuchElementException. class ) }, ex. call ( ) )
24377	assertEquals ( data, TestFileUtils. readString ( file ) )
24378	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "xfdfCheckBox.pdf", sourceFolder + "cmp_xfdfCheckBox.pdf", destinationFolder, "diff_" ) )
24379	assertEquals ( expecteds, actuals )
24380	assertThat ( result, is ( 9 ) )
24381	assertTrue ( "Params should be not equal",! params [ 0 ]. equals ( params [ 1 ] ) )
24382	assertThat ( remoteAddress, is ( "1.2.3.4" ) )
24383	assertEquals ( expResult, result )
24384	assertNull ( taskService. createTaskQuery ( ). singleResult ( ) )
24385	assertNotNull ( result )
24386	Assert. assertTrue ( exists )
24387	assertEquals ( 1, out. list ( ). length )
24388	assertEquals ( 2, engineRule. getFormService ( ). getTaskFormVariables ( task. getId ( ) ). size ( ) )
24389	Assert. assertEquals ( expectedResult, result )
24390	assertEquals ( ":str 0", res. join ( ) )
24391	Assert. assertTrue ( ArgumentParser. validateArguments ( argsString. split ( " " ), AllOptionalArguments. class ) )
24392	Assert. notNull ( grade )
24393	assertArrayEquals ( new byte [ ] { 2, 3, 4, ( byte ) 128 }, bos. toByteArray ( ) )
24394	assertTrue ( m. getTimer ( FUNCTION ). getSnapshot ( ). getValues ( ) [ 0 ] > 0 )
24395	Assert. assertTrue ( file. getAbsolutePath ( ). contains ( localRepo. getAbsolutePath ( ) ) )
24396	assertEquals ( expectedFont [ i ], foInline. getAttribute ( "font-family" ) )
24397	assertEquals ( result, 3 * varY, 0.0 )
24398	assertNull ( dsg. getGraph ( gn ) )
24399	assertEquals ( "\\"2005-05-02T00:00:00+02:00\\"^^xsd:dateTime", val )
24400	assertEquals ( Response. Status. NO_CONTENT. getStatusCode ( ), response. getStatus ( ) )
24401	assertSessionVariable ( "a_b_c_d", "1" )
24402	Assert. assertEquals ( 0, vmvo. getVmNics ( ). size ( ) )
24403	assertNull ( valueProvider. getValue ( row ) )
24404	assertEquals ( test. longestPalindrome ( "abccccdd" ), 7 )
24405	assertEquals ( "value", "tag123;tag456", element. getAttribute ( "value" ) )
24406	assertLine ( "tasty dessicated dog droppings", b, false )
24407	assertEquals ( SearchContext. AVOID_DRAW_HANDICAP, sut. computeSearchGoalBonus ( current ) )
24408	assertNull ( log )
24409	assertEquals ( TERM_FACTORY. getImmutableFunctionalTerm ( ExpressionOperation. MULTIPLY, v, TERM_FACTORY. getConstantLiteral ( "2", XSD. LONG ) ), translation )
24410	assertTrue ( match == null )
24411	assertAllCommandsUsed ( )
24412	assertThat ( underTest. databases ( ), containsInAnyOrder ( "component", "config", "security" ) )
24413	Assert. fail ( "Should have failed with MultiException" )
24414	assertThat ( JobWatcher. getFailedReason ( cachedJob ), nullValue ( ) )
24415	assertEquals ( "[(Tom, Fennelly, Ireland, Male, 4), (Mike, Fennelly, Ireland, Male, 2), (Linda, Coughlan, Ireland, Female, 22)]", people. toString ( ) )
24416	assertTrue ( Arrays. equals ( "test". getBytes ( "UTF-8" ), arrayFirst ) )
24417	assertMatch ( e, s )
24418	assertEquals ( SymbolLookup. NOT_FOUND, ret )
24419	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
24420	assertEquals ( "localhost", map. get ( "mail.server.host" ) )
24421	Assert. assertEquals ( json. substring ( 79 ), expectedJson )
24422	files. assertHasDigest ( INFO, actual, algorithm, expected )
24423	assertEquals ( 255, fixture. readUnsignedShort ( ) )
24424	assertEquals ( 100, getInt ( System. getProperties ( ), "demo.count" ) )
24425	iterablesWithCaseInsensitiveComparisonStrategy. assertDoesNotContainNull ( someInfo ( ), actual )
24426	this. context. assertIsSatisfied ( )
24427	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"yes\\"?>" + "<w:document xmlns:wpc=\\"http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas\\" xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\" xmlns:o=\\"urn:schemas-microsoft-com:office:office\\" xmlns:r=\\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\\" xmlns:m=\\"http://schemas.openxmlformats.org/officeDocument/2006/math\\" xmlns:v=\\"urn:schemas-microsoft-com:vml\\" xmlns:wp14=\\"http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing\\" xmlns:wp=\\"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\\" xmlns:w10=\\"urn:schemas-microsoft-com:office:word\\" xmlns:w=\\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\\" xmlns:
24428	assertEquals ( 0, messageLatch. getCount ( ) )
24429	assertEquals ( getUri ( "mockService/23/mockFactory/23" ), creationFactory. getCreation ( ). toString ( ) )
24430	assertThat ( actualExceptionCode, is ( "defaultExceptionCode002" ) )
24431	assertResultIs ( "pathElement/" )
24432	assertPermanentCount ( playerB, "Children of Korlis", 1 )
24433	Assert. assertEquals ( "did not successfully execute hello command", "Hello world  from irods". trim ( ), result. trim ( ) )
24434	assertEquals ( "012345678901234567890123456789", response )
24435	assertEquals ( aplicacionWS, aplicacion )
24436	Assert. fail ( "Missing required input" )
24437	assertEquals ( expected, actualQuery )
24438	assertEquals ( "Hello CXF", s )
24439	assertFalse ( r. equals ( r2 ) )
24440	assertThat ( manager. overrideVote ( "foo" ), is ( false ) )
24441	Assert. assertEquals ( "(nt_point_location (nt_base_location * (nt_number 123)))", loc. toStringTree ( parser ) )
24442	assertThat ( milliseconds, is ( EXPECTED_VALUE ) )
24443	context. assertIsSatisfied ( )
24444	assertEquals ( "n", Util. stripFileExtension ( fullName ) )
24445	assertEquals ( "recoveredResult must be Success(84)", recoveredResult, new Try. Success < > ( 84 ) )
24446	Assert. assertEquals ( chromosome. getFitness ( ), copy. getFitness ( ), 0.0 )
24447	assertEquals ( 0, count ( elements ) )
24448	assertEquals ( average. getValue ( i ), result )
24449	descriptor. assertValid ( )
24450	assertEquals ( ds + bs + cs, target. readUtf8 ( ) )
24451	assertEquals ( true, result )
24452	assertTrue ( memoryLoaded. equals ( readStatus ) )
24453	assertTrue ( exist )
24454	assertEquals ( ValidationResult. Result. OK, SalesforceSourceOrSink. validateConnection ( props ). getStatus ( ) )
24455	assertEquals ( 4, requirements. size ( ) )
24456	assertEquals ( 1, c0. invoke ( ). intValue ( ) )
24457	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + "freeReference.pdf", sourceFolder + "cmp_freeReference.pdf", destinationFolder, "diff_" ) )
24458	assertEquals ( getScrollTop ( ), 950 )
24459	assertFalse ( shutdown. get ( ) )
24460	assertTrue ( computer. needsProcessing ( context ) )
24461	assertThat ( config. getSequencing ( ), is ( notNullValue ( ) ) )
24462	assertThat ( component. execute ( ), is ( expected ) )
24463	assertTrue ( identifier + " is supported", result )
24464	assertEquals ( mqttAddressString, addressString )
24465	assertEquals ( "<input type='hidden' name='ACCEPTURL' value='http://mydomain.com/result?hint=ok'>\\n" + "<input type='hidden' name='AMOUNT' value='1000'>\\n" + "<input type='hidden' name='CANCELURL' value='http://mydomain.com/result?hint=ca'>\\n" + "<input type='hidden' name='CATALOGURL' value='http://mydomain.com/result'>\\n" + "<input type='hidden' name='CN' value='holder  name'>\\n" + "<input type='hidden' name='COM' value='code2x2, ship2, bob@doe.com, 1234'>\\n" + "<input type='hidden' name='CURRENCY' value='USD'>\\n" + "<input type='hidden' name='DECLINEURL' value='http://mydomain.com/result?hint=de'>\\n" + "<input type='hidden' name='ECOM_BILLTO_POSTAL_CITY' value='Nowhere'>\\n" + "<input type='hidden' name='E
24466	assertEquals ( "1.543", serializer. toString ( ) )
24467	assertEquals ( null, result )
24468	assertFalse ( sut. purgeCalled )
24469	assertEquals ( n, s )
24470	assertEquals ( 1, rowCount )
24471	assertExec ( "0 to 4", StaticMethod. class, "toStringArr__Ljava_lang_String_2", exp )
24472	assertEquals ( value, evaluated )
24473	assertFalse ( "Accepted value outside range of int", accepted )
24474	Assert. assertNotNull ( cmdBase. getStatus ( ) )
24475	Assert. assertTrue ( ( ( BasicDecider ) instance ). isToRunContained ( metadata. getWorkflowRun ( workflowRunAcc ). getInputFileAccessions ( ), filesToRun ) )
24476	assertEquals ( "foo", expression. getValue ( elContext ) )
24477	assertAllGuardsExists ( )
24478	Assert. assertEquals ( "test", var. toString ( ) )
24479	assertReference ( reference, "referent", "attachment", null )
24480	assertThat ( description. toString ( ), is ( "to have global errors" ) )
24481	assertNull ( data )
24482	assertEquals ( "foo.org", context. getHost ( ) )
24483	assertEquals ( input, txt )
24484	assertTrue ( "permission should be granted to admin.", readProjectPermission. isAllowed ( auth, 1L ) )
24485	assertFalse ( result )
24486	Assert. fail ( "We should have thrown an exception as the file has been re-created." )
24487	Assert. assertEquals ( testString, HtmlToXMLUtil. unescapeToXML ( testString ) )
24488	assertThat ( actual, is ( notNullValue ( ) ) )
24489	assertEvidence ( evidence, 1, 1, 0, 15, 1 )
24490	assertEquals ( expResult, result, Constants. DOUBLE_ACCURACY_HIGH )
24491	Assert. assertEquals ( expectedWkt, result )
24492	assertTrue ( ext instanceof HasAdaptiveExt_ManualAdaptive )
24493	assertGenerators ( result, AnInt. class, ZilchGenerator. class )
24494	assertThat ( response, containsString ( "Abuse contact for 'AS103' is 'abuse@ripe.net'" ) )
24495	assertThat ( converter. toJavaObject ( new DoubleWritable ( 1.0D ) ), is ( ( Object ) 1.0D ) )
24496	assertFalse ( leaseRefresher. renewLease ( leaseCopy ) )
24497	assertEquals ( expected, bytesUsed )
24498	assertFalse ( sta. validateStroke ( new GraphicStroke ( ) ) )
24499	assertEquals ( testUrlTransformed, namedClusterBridge. processURLsubstitution ( testUrl, null, null ) )
24500	assertTrue ( "The recreated syntax-tree did not match the input syntax-tree.", pennOriginal. equals ( pennFromRecreatedTree ) )
24501	assertAllCommandsUsed ( )
24502	assertEquals ( "[message: hello0, message: hello1]", broadcasts. toString ( ) )
24503	assertEquals ( "value", store. get ( "key" ) )
24504	assertEquals ( 71, table. getCounter ( ) )
24505	assertSqlCanBeParsedAndDeparsed ( stmt )
24506	assertTrue ( "incorrect value", aNumber. longValue ( ) == result )
24507	assertThat ( description. toString ( ), containsString ( "equality on all rows in \\"Sheet1\\"" ) )
24508	assertEquals ( Paths. get ( "/some/folder/file.txt" ), result )
24509	assertEquals ( "TagMediaFeed [data=[], meta=Meta [code=0, errorMessage=null, errorType=null], pagination=Pagination [depreciationWarning=null, minTagId=null, nextMaxId=null, nextMaxTagId=null, nextMinId=null, nextUrl=null]]", result )
24510	assertThat ( originalSession, not ( equalTo ( newSession ) ) )
24511	assertTrue ( res )
24512	Assert. assertEquals ( DFUnidadeFederativa. SC, retornoConsultaCadastroDados. getUf ( ) )
24513	Assert. assertEquals ( 36, psRes. length ( ) )
24514	assertTrue ( updates. isEmpty ( ) )
24515	assertNotNull ( consumable )
24516	assertEquals ( "{\\"test\\":[{\\"OK\\":\\"200\\"},{\\"REDIREDT\\":[{\\"CREATED\\":\\"201\\"}" + ",{\\"ACCEPTED\\":\\"202\\"}]}]}", result. toString ( ) )
24517	assertEquals ( 10, success [ 0 ] )
24518	assertEquals ( "%d{ISO8601} [%t][%c] %-5p: %m%n", layout. getConversionPattern ( ) )
24519	Assert. assertEquals ( "-0.1-1.1-2.1-3.1", result )
24520	assertFalse ( resultMessage ( result, POST ), result. passedValidation ( ) )
24521	assertEquals ( ConnectionSchema. DEFAULT_MAX_QUEUE_DATA_SIZE, createSchema ( map, 0 ). convert ( ). getMaxWorkQueueDataSize ( ) )
24522	assertThat ( any. contains ( SECOND_OF_MINUTE ), is ( true ) )
24523	assertEquals ( "bsq", header. getInterleave ( ) )
24524	assertEquals ( htmlCharsetUTF8, doc. toString ( ) )
24525	assertEquals ( 10., stateManager. getRouteState ( route, vehicle, id, Double. class ), 0.01 )
24526	Assert. assertEquals ( "consumerKey", consumer. getConsumerKey ( ) )
24527	assertThat ( "without trigger in project", triggerFrom ( ( Item ) prj, GitHubPushTrigger. class ), nullValue ( ) )
24528	assertShapeCoordinates ( boundaryEventBounds, 343, 200 )
24529	assertTrue ( found )
24530	Assert. assertTrue ( s )
24531	assertEquals ( "[inflectedform121, inflectedform122]", Arrays. toString ( state. toFinalString ( null ) ) )
24532	assertLife ( playerA, 20 )
24533	assertEquals ( json, JsonUtil. toJson ( domain ) )
24534	assertNotEquals ( insertPerson, insertDifferentPerson )
24535	assertEquals ( 1 * 2 * 3 * 4, IntStream. range ( 1, 5 ). reduce ( lambda ). getAsInt ( ) )
24536	assertEquals ( 0, attr. size ( ) )
24537	assertEquals ( "[9223372036854775804, 9223372036854775805, 9223372036854775806]", IteratorToGeneratorAdapter. adapt ( range ). toCollection ( ). toString ( ) )
24538	assertThat ( result, is ( false ) )
24539	assertEquals ( 0, contextResolver. getTags ( ). size ( ) )
24540	assertEquals ( "public static final ListProperty<TargetEntity> LIST_REL = PropertyFactory.createList(\\"list_rel\\", TargetEntity.class);", definition )
24541	Assert. assertEquals ( infoForward. getSequence ( ), resultTranscript )
24542	assertEquals ( BaseAction. INPUT, action. doDefault ( ) )
24543	assertThat ( $. url ( ), endsWith ( "WithoutJSTest_3.html?bName=bValue" ) )
24544	assertNull ( testResult )
24545	Assert. assertEquals ( Score. POSITIVE, score )
24546	Assert. assertEquals ( localDate. toString ( ddMMMyyyy, Locale. ENGLISH ), "12-Mar-2013" )
24547	assertEquals ( 123.5, hdt. getHeading ( ), 0.1 )
24548	assertTrue (! nnList. isEmpty ( ) )
24549	assertThat ( driver. findElement ( By. cssSelector ( "h2" ) ). getText ( ), is ( "Transaction Token Error" ) )
24550	assertFalse ( "Header on exchange should indicate success", exchange. getIn ( ). getBody ( WorkNote. class ). hasErrors ( ) )
24551	assertEquals ( "Exp. the AuthCredentials to match", exp, act )
24552	assertEquals ( "start_range=[5.87,47.27,1000]", query. toString ( ) )
24553	assertEquals ( 401, response. getStatus ( ) )
24554	assertEquals ( e, ae )
24555	assertFalse ( printer. toString ( ). isEmpty ( ) )
24556	assertThat ( service. getUnrestricted ( ), equalTo ( unrestricted ) )
24557	Assert. assertEquals ( expResult, result )
24558	assertEquals ( 100, i )
24559	assertEquals ( mockResponse, testResponse )
24560	assertEquals ( "Incorrect value", map ( DATE_STRING, "test" ), value )
24561	assertThat ( codes, containsInAnyOrder ( "43343-3", "43343-4", "47239-9" ) )
24562	Assert. assertNotNull ( cu )
24563	assertThat ( keys. size ( ), is ( 1 ) )
24564	assertOutWithMetadata ( "/**\\n" + " * com.example.components.TestInterface\\n" + " *\\n" + " * @fileoverview\\n" + " *\\n" + " * @suppress {checkTypes|accessControls}\\n" + " */\\n" + "\\n" + "goog.provide('com.example.components.TestInterface');\\n" + "\\n" + "\\n" + "\\n" + "/**\\n" + " * @interface\\n" + " */\\ncom.example.components.TestInterface = function() {\\n" + "};\\n" + "\\n" + "\\n" + "/**\\n" + " * Prevent renaming of class. Needed for reflection.\\n" + " */\\n" + "goog.exportSymbol('com.example.components.TestInterface', com.example.components.TestInterface);\\n" + "\\n" + "\\n" + "/**\\n" + " * Metadata\\n" + " *\\n" + " * @type {Object.<string, Array.<Object>>}\\n" + " */
24565	assertThatNothingHappened ( jobExecution, lastCreatedJobId, 1 )
24566	Assert. assertEquals ( 40. + 1000., solution. getCost ( ) )
24567	Assert. assertEquals ( 0, issues. length )
24568	assertEquals ( "hello world", list. get ( 0 ) )
24569	TestCase. assertTrue ( matcher. match ( "Hello, World" ) )
24570	assertThat ( response, is ( HttpStatus. SC_INTERNAL_SERVER_ERROR ) )
24571	assertEquals ( new BigInteger ( 1, input ), Base58. decodeToBigInteger ( "129" ) )
24572	assertThat ( rendered, is ( test [ 1 ] ) )
24573	assertThat ( testOutcome. get ( ). isManual ( ), is ( true ) )
24574	assertEquals ( 10, rangeA. getRow ( ) )
24575	Assert. assertEquals ( newSubscription. getInvitedBy ( ), membership. getInvitedBy ( ) )
24576	assertEquals ( "", sw. toString ( ) )
24577	Assert. assertEquals ( "Link: <http://example.com/things>; rel=\\"next\\"; hreflang=\\"en-us\\"; hreflang=\\"de\\"", affordance. toString ( ) )
24578	assertEquals ( packed, new String ( baos. toByteArray ( ) ) )
24579	assertEquals ( 12345, settings. getOwnColor ( ) )
24580	Assert. assertEquals ( 1, count. size ( ) )
24581	Assert. assertEquals ( 0L, actualResult )
24582	TestCase. assertEquals ( 200, response. getStatusLine ( ). getStatusCode ( ) )
24583	assertTrue ( "Parameter was " + result + " instead of username", "username". equals ( result ) )
24584	assertEquals ( HttpStatus. SC_OK, returnResponse. getStatusLine ( ). getStatusCode ( ) )
24585	assertEquals ( HttpStatusCodes. NOT_ACCEPTABLE. getStatusCode ( ), response. getStatusLine ( ). getStatusCode ( ) )
24586	validator. assertValid ( value )
24587	assertEquals ( expected, e. evaluate ( ), 0.0 )
24588	assertTrue ( result. equals ( Arrays. asList ( "c", "b", "a" ) ) || result. equals ( Arrays. asList ( "b", "c", "a" ) ) )
24589	assertEquals ( ( short ) 8, result. getShortValue ( ) )
24590	Assert. assertEquals ( "Clicked", ( new Element ( "//div[@id='content']" ) ). getText ( ) )
24591	Assert. assertTrue ( JexlASTHelper. equals ( one, two ) )
24592	assertTrue ( acl. hasPermission ( authenticationToken, Item. CREATE ) )
24593	Assert. assertEquals ( hash, murmur3F. getValueHexString ( ) )
24594	assertEquals ( "<a><b><c>1</c><c>2</c><c>3</c></b></a>", projector. asString ( emptyProjection ) )
24595	assertEquals ( FALSE_RULE, access. getRule ( ) )
24596	assertEquals (.91, mdd. calculate ( series, tradingRecord ), TATestsUtils. TA_OFFSET )
24597	assertEquals ( result, null )
24598	assertEquals ( "{\\"d\\":{\\"__metadata\\":{\\"id\\":\\"" + getEndpoint ( ) + "Employees('3')\\"," + "\\"uri\\":\\"" + getEndpoint ( ) + "Employees('3')\\",\\"type\\":\\"RefScenario.Employee\\"," + "\\"content_type\\":\\"image/jpeg\\",\\"media_src\\":\\"" + getEndpoint ( ) + "Employees('3')/$value\\"," + "\\"edit_media\\":\\"" + getEndpoint ( ) + "Employees('3')/$value\\"}," + "\\"Age\\":56,\\"EntryDate\\":null," + "\\"ne_Team\\":{\\"__deferred\\":{\\"uri\\":\\"" + getEndpoint ( ) + "Employees('3')/ne_Team\\"}}}}", getBody ( response ) )
24599	assertThat ( Tracee. getBackend ( ). copyToMap ( ), hasEntry ( "testId", "TestValueFromRemoteEndpoint" ) )
24600	assertEquals ( getFormatter ( ). toString ( ), "Pad('Y',5)" )
24601	this. assertGet ( "policytemplates/allvisualappearancedata", "entitytemplates/policytemplates/allvisualappearance.json" )
24602	assertTrue ( anc. size ( ) == 1 )
24603	assertMatchIs ( matcher, false )
24604	assertThat ( result, is ( Optional. empty ( ) ) )
24605	assertTrue ( page. getBody ( ). asText ( ). indexOf ( "This is coming from a composite component" )!= - 1 )
24606	assertEquals ( Character. valueOf ( '"' ), formatWithQuoteChar. getQuoteChar ( ) )
24607	Assert. assertEquals ( UNKNOWN_USER, result. get ( AUTHOR ) )
24608	assertions. isNotGreaterThan ( new Integer ( 2 ) )
24609	assertThat ( text ( contents ), is ( "\\"a\\",\\"b\\"\\r\\n\\"A\\",\\"B\\"\\r\\n" ) )
24610	assertEquals ( filterClause, " AND \\"fieldName\\" IN ('fieldValue1','fieldValue2','fieldValue3')" )
24611	assertEquals ( Json. createArrayBuilder ( ). add ( jsonObject ). build ( ), BsonCodec. bsonArrayToJsonArray ( new BsonArray ( ). add ( bsonObject ) ) )
24612	assertNotNull ( entity. getId ( ) )
24613	Assert. assertEquals ( "SELECT year, SUM(profit)\\nFROM sales\\nGROUP BY year WITH ROLLUP;", text )
24614	assertFalse ( cli. isConnected ( ) )
24615	assertNotNull ( registry. createConsumer ( i ) )
24616	Assert. assertEquals ( subject, service. getAuthenticationFromToken ( privateKeyJWT. getClientAssertion ( ). serialize ( ) ) )
24617	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, testName + "_diff" ) )
24618	Assert. assertEquals ( rLB. getStatus ( ), mLB. getStatus ( ) )
24619	assertEquals ( new FilterCoefficients ( pythonB, pythonA ), coeffs, 1e-4 )
24620	assertThat ( conn. getAutoCommit ( ), is ( false ) )
24621	assertEquals ( "(TYPE int a) (TYPE int b 3)\\n", found )
24622	assertEquals ( expected, x )
24623	assertEqualsWithoutWhiteSpaces ( "difference() {translate([10,20,30]) difference() {(model1) (model2)} (model3)}", difference )
24624	Assert. assertEquals ( 1, f. getFlippingStrategy ( ). getInitParams ( ). size ( ) )
24625	assertEquals ( Collections. < Person > emptySet ( ), group. getPersons ( ) )
24626	Assert. assertEquals ( 2, size )
24627	assertEquals ( 0.0, c. getFitness ( ), 0.001 )
24628	assertNotNull ( response )
24629	assertEquals ( 0, bytes. readRemaining ( ) )
24630	Assert. assertEquals ( "", readProperties ( basedir ). get ( "custom" ) )
24631	assertEquals ( "void f(void* target, void* p0) {\\n" + "    typedef struct {int m0;} f_0001_0001;\\n" + "    typedef struct {int m0;} f_0001_0000;\\n" + "    typedef struct {f_0001_0000 m0;f_0001_0001 m1;} f_0001;\\n" + "    ((void (*)(f_0001)) target)(*((f_0001*)p0));\\n" + "}\\n", BridgeMethodCompiler. createBridgeCWrapper ( functionType. getReturnType ( ), functionType. getParameterTypes ( ), functionType. getParameterTypes ( ), "f" ) )
24632	assertFalse ( file. containsGroup ( "some-other-group" ) )
24633	assertEquals ( 100, dependents. size ( ) )
24634	assertTrue ( Arrays. equals ( s, singleEntry ) )
24635	assertThat ( pgpSignedMessage. getKeyId ( ), is ( "5763950D" ) )
24636	assertEquals ( "read_string ", null, stream. read_string ( ) )
24637	assertEquals ( "Processed: " + message, out )
24638	assertThat ( result, is ( nullValue ( ) ) )
24639	assertThat ( serverHelper. establishedServerSession. getCipherSuite ( ), is ( CipherSuite. TLS_ECDHE_ECDSA_WITH_AES_128_CCM ) )
24640	assertEquals ( "[{\\"name\\":\\"table 1\\",\\"pkPolicy\\":\\"user_generated_value\\",\\"fields\\":[{\\"name\\":\\"id\\",\\"type\\":\\"string\\",\\"isPrimaryKey\\":true},{\\"name\\":\\"column 1\\",\\"type\\":\\"tableNameTarget\\",\\"nullable\\":true,\\"minOccurs\\":0,\\"maxOccurs\\":\\"*\\"}]}]", content )
24641	assertNotNull ( request. getSession ( ). getAttribute ( Constants. PREFERRED_LOCALE_KEY ) )
24642	Assert. assertEquals ( "Charset " + entry. getKey ( ) + " impl broken", "T" + expectedString, sb. toString ( ) )
24643	assertEquals ( expectedMessage, actualMessage )
24644	assertTrue ( pointSymbolizer. getGraphic ( )!= null )
24645	assertArrayEquals ( new int [ 0 ], ArraysUtil. quickSortP ( target ) )
24646	assertTrue ( isValid )
24647	assertNotNull ( result )
24648	paths. assertIsDirectoryNotContaining ( INFO, actual, JAVA_SOURCE_PATTERN )
24649	assertThat ( total, is ( 24 ) )
24650	assertThat ( axioms. isEmpty ( ), is ( true ) )
24651	assertThat ( connection. getConnectTimeout ( ), is ( 456 ) )
24652	Assert. assertThat ( decorated, Matchers. is ( object ) )
24653	assertNotNull ( c )
24654	Assert. assertNull ( cookie. getExpiryDate ( ) )
24655	assertEquals ( expected, query. n1ql ( ) )
24656	assertEquals ( "Bar", decl. getTypeImage ( ) )
24657	assertTrue ( connection. getOutputBuffer ( ). endsWith ( "DUUUUDE, where is your command?" + Config. getLineSeparator ( ) ) )
24658	assertEquals ( "Gosh! The validator should return WARNING", GUIInvokerResult. WARNING, validator. validate ( ) )
24659	assertTrue ( capacity. allowsWorking ( ) )
24660	Assert. assertEquals ( d2, d, 0 )
24661	assertEquals ( expectedValue, expression. evaluate ( record ) )
24662	assertEquals ( lastValue, "EndNode3" )
24663	assertNotNull ( connection. createChannel ( 3 ) )
24664	assertTrue ( crateTemplate. delete ( entity. id, SimpleEntityWithId. class ) )
24665	assertThat ( frankResponse, is ( equalTo ( endpointResponseBody ) ) )
24666	assertEquals ( Collections. emptyMap ( ), gaz. getAdditionalData ( HELLO ) )
24667	assertEquals ( "", x )
24668	assertEquals ( TranspositionTableStatus. sufficientRefutation, eval. status )
24669	assertEquals ( 10, money. getAmount ( ) )
24670	assertThat ( eventTriggered [ 0 ], is ( true ) )
24671	assertTrue ( "Cassandra ordering is not preserved", compare < 0 )
24672	assertGallery ( gallery )
24673	assertEquals ( ImportConfirmAction. SUCCESS, action. execute ( ) )
24674	assertTrue ( IQSyntacticEquivalenceChecker. areEquivalent ( optimizedQuery, expectedQuery ) )
24675	assertThat ( caveat, is ( equalTo ( "2;3,4;paul" ) ) )
24676	assertThat ( "response contains a non-empty fullName", StringUtils. isNotBlank ( response. getFullName ( ) ) )
24677	assertThat ( matchingIndexes, is ( 1L ) )
24678	assertThat ( target. parse ( ), is ( false ) )
24679	assertThatSql ( query, is ( "SELECT nodes.col1,nodes.col2 FROM table1 AS nodes INTERSECT ALL SELECT edges.col3,edges.col4 FROM table2 AS edges" ) )
24680	Assert. assertEquals ( value, 0.0002 )
24681	assertEquals ( "3.0.0", sw3. getStringProperty ( "openapi" ) )
24682	Assert. assertEquals ( new Long ( Long. MIN_VALUE ), _c. convert ( "-9223372036854775808" ) )
24683	assertEquals ( expected, actual )
24684	assertThat ( fetchedUuid, is ( equalTo ( uuid ) ) )
24685	assertNotNull ( handler. getSchemaLocation ( "http://cxf.apache.org/blueprint/simple" ) )
24686	assertOut ( "do\\n\\ta++;\\nwhile (a > b);" )
24687	assertFalse ( valid )
24688	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 08" ) )
24689	assertNull ( userServiceLink )
24690	assertErrors ( "Incorrect number of arguments.  Expected no more than 1" )
24691	Assert. assertEquals ( "did not count the two files", 2, fileCtr )
24692	assertEquals ( expected, sendAndCaptureBatch ( batch ). getPoints ( ). get ( 0 ) )
24693	Assert. assertEquals ( "SELECT CEILING(1.23);", text )
24694	assertEquals ( expected, actual )
24695	Assert. assertTrue ( "Incorrect renderer supplied", getWebXmlRenderer ( component ) instanceof WAjaxControlRenderer )
24696	assertEquals ( "Hello [Tim]", ResponseBodyInterpolator. interpolate ( "Hello [request.body]", req ) )
24697	Assert. assertEquals ( protocolo, consultaRetorno. getProtocolo ( ) )
24698	assertTrue ( project. equals ( new ProjectCouch ( "1", "1-234", "bla" ) ) )
24699	assertTrue ( result. length ( ) > 0 )
24700	assertEquals ( "k1|v1##k2|v2", repr )
24701	assertEquals ( "Generated inclusion term should match 'term'", inclusionTerms. get ( 0 ), "term" )
24702	assertNotNull ( node )
24703	Assert. assertTrue ( validator. validSequence ( 2, inputSequence, outcomesSequence, outcome ) )
24704	assertEquals ( "f912ff98a93419", KeyPairUtil. hexEncodeHashData ( data ) )
24705	assertRoundtrip ( document, false )
24706	assertThat ( subStr. contains ( testString, testSubString ), is ( true ) )
24707	assertFalse ( equal )
24708	assertTrue ( subject. isExportForcedSubtitlesOnly ( ). get ( ) )
24709	assertEquals ( 1, rules )
24710	assertThat ( "cron is not null", cron!= null )
24711	assertThat ( result, contains ( v_131, v_132, v_133, v_121, v_122, v_11 ) )
24712	arrays. assertEndsWith ( description, actual, null )
24713	scope. assertMetrics ( TestHelper. constructDatum ( "summaryDataName", StandardUnit. COUNT, 10.0, 2.0, 12.0, 2.0 ) )
24714	assertEquals ( NoProcessorsWroManagerFactory. class, actual. getClass ( ) )
24715	assertThat ( ioUtils. toStringNoClose ( new ByteArrayInputStream ( bytes ), bytes. length ), equalTo ( data ) )
24716	assertEquals ( 204, response. getStatus ( ) )
24717	assertTrue ( isEqual )
24718	assertEquals ( "Hello", ( ( BizExceptionNoDefaultConstructor ) read ). getMessage ( ) )
24719	assertEquals ( 3.14, result, 0.00001 )
24720	assertThat ( b. getValue ( ), equalTo ( "Value" ) )
24721	Assert. assertEquals ( 0, analyser. getTimeWindowViolationAtActivity ( route. getStart ( ), route ), 0.01 )
24722	assertThat ( cache. drainStatus, is ( end ) )
24723	assertPorts ( "port-offset", DEFAULT_COMMAND_API_PORT + offset, DEFAULT_INTERNAL_API_PORT + offset, DEFAULT_MONITORING_API_PORT + offset )
24724	Assert. assertFalse ( ret. isEmpty ( ) )
24725	Assert. assertFalse ( "Authenticated", authenticated )
24726	Assert. assertEquals ( message, request. getToken ( ), receivedMessage. getToken ( ) )
24727	Assert. assertEquals ( CustomTestEvent. class, eventClass )
24728	assertEquals ( 4, count )
24729	assertThat ( errors. toString ( ), equalTo ( "not null, not empty" ) )
24730	assertSame ( expected, toTest. merge ( map ) )
24731	assertDirectories ( fsRootPath, new File ( fsRootPath, "remoting" ), new File ( fsRootPath, "remoting/logs" ), new File ( fsRootPath, "remoting/jarCache" ) )
24732	assertEqualHQL ( "allen AND MARRIED", sb. toString ( ) )
24733	assertEquals ( 1, entriesBeforeRemove. size ( ) )
24734	assertNotNull ( result )
24735	Assert. assertTrue ( Arrays. equals ( entry. getBytes ( ), fmt. toBytes ( e ) ) )
24736	assertEquals ( displayer. isRefreshOn ( ), true )
24737	assertEquals ( "Translation failed", ProtocolException. class, pelopsException. getClass ( ) )
24738	assertEquals ( 500, page. getWebResponse ( ). getStatusCode ( ) )
24739	assertTrue ( voter. voteMatch ( affiliation, organization ) )
24740	assertThat ( secretKeySpec, is ( secretKey ) )
24741	assertEquals ( "two decillion", actual )
24742	assertIsOnlyOneElementWithDetails ( elements, "div", "d11", "clz1" )
24743	assertThat ( actual, is ( equalTo ( expected ) ) )
24744	Assert. assertEquals ( "success", commandFuture. getNow ( ) )
24745	assertEquals ( internalResultSet. getInt ( 2 ), internalResultSet. getInt ( 1 ) )
24746	context. assertEquals ( ERROR, replyBody. getString ( STATUS ) )
24747	Assert. assertEquals ( actionConf. get ( MRJobConfig. JOB_NAMENODES ), jobNameNodes )
24748	assertEquals ( true, service. processMessage ( null, message. getBytes ( ) ) )
24749	assertEquals ( "Hello World!", copy. toString ( ) )
24750	assertNonNullTaint ( taintedInt )
24751	assertEquals ( 15, booster. size ( ) )
24752	assertEquals ( "hostname", getLoggingContextHostnameProperty ( ) )
24753	assertEquals ( "Hello Camel Rocks", response )
24754	assertFalse ( fixture. hasSubscriptionId ( ) )
24755	assertFalse ( matcher. match ( msg, rule ) )
24756	assertEquals ( expecting, found )
24757	assertEquals ( "geo point mapper serialization is wrong", expected, actual )
24758	assertArrayEquals ( in, out )
24759	assertTrue ( v instanceof PactInteger )
24760	Assert. assertEquals ( 6, doc. get ( new Path ( "arr" ) ). size ( ) )
24761	assertNotNull ( object )
24762	assertThat ( filled, is ( "/clients/my/path/to/file" ) )
24763	Assert. assertEquals ( word, d_transCardDict. sequence ( i ) )
24764	assertResultNotLess ( 20 )
24765	assertThat ( markdown, containsString ( tableEntry ( "`myList`", "array of string", "" ) ) )
24766	assertThat ( cut. apply ( pageObject ), is ( false ) )
24767	assertEquals ( Status. PASSED, result. getStatus ( ) )
24768	assertThat ( "null should be replaced", result, is ( false ) )
24769	assertTrue ( FileUtils. isSymbolicLink ( target ) )
24770	Assert. assertEquals ( CheckResult. TIMEOUT, checkResult )
24771	assertEquals ( "limit=10", query. toQueryString ( ) )
24772	Assert. assertEquals ( expectedPeriod, period )
24773	Assert. assertTrue ( expirationSec - relExp < 5 )
24774	assertEquals ( expected, inferred )
24775	assertTrue ( cl instanceof URLClassLoader && ( ( URLClassLoader ) cl ). getURLs ( ). length == 0 )
24776	assertEquals ( "[inflectedform121, inflectedform122]", Arrays. toString ( state. toFinalString ( null ) ) )
24777	assertThat ( calvalusProcessor. getName ( ), equalTo ( "Idepix.Water" ) )
24778	assertFalse ( hasPermission )
24779	Assert. assertNotNull ( result )
24780	context. assertNotNull ( ip )
24781	assertFalse ( loader. load ( "scrypt", true ) )
24782	assertEquals ( 200, response. getStatusLine ( ). getStatusCode ( ) )
24783	assertEquals ( bytes, f. length ( ) )
24784	assertEquals ( "Deltas do not match", deltaBefore, deltaAfter )
24785	Assert. assertFalse ( dataVersion. equals ( other ) )
24786	assertAnnotationCompletions ( "@Value(\\"#{${data.prop2}<*>}\\")", "@Value(\\"#{${else.prop3}<*>}\\")", "@Value(\\"#{${spring.prop1}<*>}\\")" )
24787	assertThat ( testClass. wasPostConstructCalled ( ), equalTo ( true ) )
24788	assertEquals ( expResult, result )
24789	assertEquals ( 3, filteredTables. size ( ) )
24790	assertThat ( digits, matchesRegularExpression ( "[0-9]{5}" ) )
24791	assertNull ( result )
24792	assertEquals ( "tcp", acceptor. getTransportMetadata ( ). getName ( ) )
24793	assertEquals ( "Test template 2\\n\\n", drl )
24794	assertThat ( arguments. getResources ( ), contains ( FIRST_RESOURCE_URI ) )
24795	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
24796	Assert. assertEquals ( 0, this. sqlgGraph. traversal ( ). E ( ). count ( ). next ( ). intValue ( ) )
24797	assertThat ( userId, is ( 501 ) )
24798	Assert. assertEquals ( "Pull Request: ", Iterables. get ( branches, 0 ) )
24799	assertThat ( errors, hasFieldErrors ( "givenName", "Patient.names.required.given.family" ) )
24800	Assert. assertSame ( translation, result )
24801	assertTrue ( StoreParams. sameValues ( p, pLoc ) )
24802	assertEquals ( Arrays. asList ( "ok" ), list )
24803	assertTrue ( response. getGeneratedKeys ( ). size ( ) == 5 )
24804	assertEquals ( 5, saga. getState ( ) )
24805	assertFalse ( server. isAlive ( ) )
24806	assertNotNull ( cf )
24807	arrays. assertStartsWith ( description, actual, sequence )
24808	assertThat ( "pattern=" + pattern + " matches string=" + string, pattern. matches ( string ), is ( false ) )
24809	assertEquals ( jq ( "div.z-error" ). exists ( ), false )
24810	assertions. doesNotContain ( false, index )
24811	assertEquals ( combinationsExpected, result )
24812	Assert. assertEquals ( SubBaseBean2. class. getName ( ), testBean. getClass ( ). getName ( ) )
24813	assertEquals ( VALID_URI_STRING, ( ( URI ) Deencapsulation. getField ( fileUploadTask, "blobURI" ) ). toString ( ) )
24814	Assert. assertTrue ( Math. abs ( now. getTime ( ) - n. getTime ( ) ) < 500 * 1000 )
24815	assertEquals ( "��", male. getText ( ) )
24816	Assert. assertNotNull ( list )
24817	assertTest1 ( )
24818	TestUtils. assertEquals ( anexo, anexoModificado )
24819	Assert. assertEquals ( Integer. class, clazz )
24820	assertEquals ( WRONG_NUMBER_OF_WARNINGS_DETECTED, 3, warnings. size ( ) )
24821	assertEquals ( 0, tasks. size ( ) )
24822	assertThat ( findBackupFiles ( DB_NAME, "1.1" ), is ( arrayWithSize ( 1 ) ) )
24823	assertThat ( "event with unknown event header", event, nullValue ( ) )
24824	Assert. assertFalse ( errors. hasErrors ( ) )
24825	assertThat ( transformed, equalTo ( formattedTableAsString ) )
24826	assertEquals ( expected, actual )
24827	assertOutput ( "a" )
24828	assertEquals ( value, returned )
24829	assertTrue ( matcher. matches ( context ) )
24830	assertEquals ( "slow", object. parsedTo ( ResourceParsers. string ( ) ). asIs ( ) )
24831	compiler. assertErrorsOnLines ( "example/Test.java", diagnostics, 6, 7 )
24832	assertEquals ( expected, actual )
24833	assertNotNull ( setCommands. pop ( NAMESPACE1, key1 ) )
24834	Assert. assertTrue ( responses. size ( ) == 20 )
24835	Assert. assertNull ( "transient field should be serialized as null but was '" + bean. getValue ( ). getShouldBeNilAfterUnmarshalling ( ) + "'", bean. getValue ( ). getShouldBeNilAfterUnmarshalling ( ) )
24836	assertEquals ( input, output )
24837	assertEquals ( "浣�濂�", firstStatus. getText ( ) )
24838	assertTrue ( drl. contains ( "Integer( this > 10, this > 11; this > 12, this > 13 )" ) )
24839	assertThat ( xmlResult, CompareMatcher. isSimilarTo ( out. toString ( ) ). ignoreWhitespace ( ). withNodeMatcher ( new DefaultNodeMatcher ( ElementSelectors. byNameAndText ) ) )
24840	assertTrue ( "Failed to match compatible IPv6 addresses.", match )
24841	assertEquals ( Collections. singletonList ( author3 ), submissionSet. getAuthors ( ) )
24842	assertNotNull ( info )
24843	assertEquals ( "MediaInfo M42", withLabel. findLabel ( "fr" ) )
24844	assertNotNull ( Files. readAttributes ( path, BasicFileAttributes. class, LinkOption. NOFOLLOW_LINKS ) )
24845	assertEquals ( expected, result )
24846	assertThat ( duration. toNanos ( ), is ( 1L ) )
24847	Assert. assertEquals ( "Incorrect focus", driver. findElement ( byWComponentPath ( path ) ). getActiveId ( ), driver. switchTo ( true ). activeElement ( ). getAttribute ( "id" ) )
24848	assertNotEquals ( b3a, b3b )
24849	assertTrue ( tags. isEmpty ( ) )
24850	assertEquals ( brandsIterative, brands )
24851	assertEquals ( DataStatus. VOID, empty. getSternGroundSpeedStatus ( ) )
24852	assertTrue ( visitor. matching )
24853	context. assertIsSatisfied ( )
24854	assertEquals ( buff, binary. extractionBuffer ( ) )
24855	assertTrue ( hrip. compareTo ( hric ) > 0 )
24856	assertEquals ( PHRASE_REVERSE, reversedString )
24857	assertNotNull ( "First transcript exists and it must be returned", transcript )
24858	assertThat ( result, is ( "123" ) )
24859	assertSame ( row, rowSet. getRowWait ( 1, TimeUnit. SECONDS ) )
24860	assertEquals ( 3, runtimeService. createProcessInstanceQuery ( ). count ( ) )
24861	assertSame ( url2, url1 )
24862	assertEquals ( "5", this. banco. geraCodigoDeBarrasPara ( this. boleto ). substring ( 4, 5 ) )
24863	runner. assertValid ( service )
24864	assertEquals ( "0001", formatted )
24865	assertTrue ( cmd. apply ( serverConf, cliFlags ) )
24866	assertNotNull ( containerDetail )
24867	assertEquals ( factor * index * - 1, sum )
24868	assertObjectEquals ( "{type:'array',items:{type:'array',items:{type:'object',properties:{f1:{type:'string'}}}}}", s. getSchema ( BeanList2d. class ) )
24869	assertSame ( fieldVar, result )
24870	assertEquals ( true, result )
24871	assertEquals ( "6 谐芯写懈薪 �芯屑�", t. format ( new Date ( 0 ) ) )
24872	Assert. assertNotNull ( asiento )
24873	Assert. assertEquals ( 1, products. size ( ) )
24874	assertTrue ( tasks. size ( ) == 1 && tasks. get ( 0 ). getId ( ) == 13 )
24875	Assert. assertEquals ( "did not get back the int I wrote", writtenInt, readBackInt )
24876	Assert. assertEquals ( "hello", result )
24877	assertEquals ( mockedIotHubListener, listener )
24878	assertTrue ( defaultInstance == ValidationBatchSummaryImpl. defaultInstance ( ) )
24879	assertTrue ( model. getGroups ( ). isEmpty ( ) )
24880	assertFalse ( PojomatorFactory. makePojomator ( Simple1. class ). doEquals ( new Simple1 ( ), new Simple2 ( ) ) )
24881	Assert. assertEquals ( match. getToken ( ), expected, computed, 0.000000000000001 )
24882	assertEquals ( path, "/Users/anyang/Desktop/jacoco/sum/jboss-5.0.1.GA\\\\rasp\\\\..\\\\bin\\\\run.bat" )
24883	assertNotNull ( solver )
24884	Assert. assertEquals ( i + 1, p. getNSamples ( ) )
24885	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Parameter name=\\"name\\" value=\\"value\\"/>", elem. toXml ( ) )
24886	assertTrue ( response. getPersonInformationStructure ( ). isEmpty ( ) )
24887	Assert. assertEquals ( sum, 1 )
24888	assertEquals ( InternalErrorException. STATUS_CODE, result. getStatus ( ) )
24889	Assert. assertEquals ( "Assert.assertTrue(\\"xpath=//div[@id='header-login']\\",Pattern.compile(\\".*SARL TOTO \\\\\\\\[ Mr Integration Test \\\\\\\\].*\\").matcher(selenium.getText(\\"xpath=//div[@id='header-login']\\")).find());", result )
24890	assertEquals ( Collections. emptyList ( ), numbers )
24891	assertEquals ( base64_md5, hash )
24892	assertThat ( testOutcome. getResult ( ), is ( PENDING ) )
24893	assertNotNull ( actual. getPropertyNameSchema ( ) )
24894	assertEquals ( svgImage, defaultEditorAdapter. decorateIcon ( inputSvgImage ) )
24895	assertEquals ( false, getMoveObjectDownAction ( ). isEnabled ( ) )
24896	assertEquals ( pc, chip8. getPC ( ) )
24897	assertEquals ( uri. toString ( ), expected )
24898	assertTrue ( repo. isBare ( ) )
24899	assertions. isEqualTo ( expected )
24900	assertEquals ( expectedScript, observedScript )
24901	assertNotNull ( taskService. createTaskQuery ( ). taskDefinitionKey ( "userTask2" ). singleResult ( ) )
24902	assertThat ( share. getHours ( ), equalTo ( 4 ) )
24903	assertThat ( testee. getBeanValue ( ), is ( "testing with stress : 09" ) )
24904	assertEquals ( 24, cal. get ( Calendar. DATE ) )
24905	assertEquals ( user. getUsername ( ), "name" )
24906	assertEquals ( 1000.0, vRoute. getDepartureTime ( ), 0.01 )
24907	assertThat ( violations. size ( ), is ( 0 ) )
24908	Assert. assertEquals ( mysqlAffectRow, andorAffectRow )
24909	Assert. assertEquals ( Boolean. TRUE, JsfUtils. isNewMessage ( existingFacesMessage, messageToCheck ) )
24910	Assert. assertEquals ( "[SimpleCity [city=Istanbul, country=Turkey], SimpleCity [city=London, country=United Kingdom], SimpleCity [city=New York, country=United States of America]]", resultList. toString ( ) )
24911	assertEquals ( goldenResponse, responseObserver. firstValue ( ). get ( ) )
24912	assertEquals ( "someTarget", actual. getDisplayName ( ) )
24913	assertEquals ( "true", r )
24914	context. assertIsSatisfied ( )
24915	Assert. assertTrue ( FastMath. abs ( error ) > 0.1 )
24916	assertEquals ( NOT_DECODED, object, new CoordTransform ( decoder ) )
24917	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numSlices, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
24918	assertEquals ( expected, actual )
24919	assertEquals ( expected, key. toString ( ) )
24920	assertInRange ( b, BigInteger. ZERO, limit )
24921	assertEquals ( 0, aNumber. bitLength ( ) )
24922	assertThat ( restService. getSearchHandler ( "v1/concept", parameters ), is ( nullValue ( ) ) )
24923	assertMessages ( "println", 1, "print_printf_locale" )
24924	assertTrue ( key. isValid ( ) )
24925	assertThat ( f. exists ( ), is ( true ) )
24926	assertEquals ( RemoteAPIController. PARENT_FRAME_RELOAD_PAGE, connectToAPI )
24927	Assert. assertNotNull ( savedSearchDashlet )
24928	assertNull ( qei. next ( ) )
24929	assertDatasetOk ( ds )
24930	assertEquals ( string, ex2. why )
24931	assertTrue ( "basicInterval1 should be larger than basicInterval2.", bstc. compare ( basicInterval1, basicInterval2 ) > 0 )
24932	assertEquals ( 200, response. getStatus ( ) )
24933	Assert. assertEquals ( ECHO_STRING, outMessage )
24934	assertArrayEquals ( objects, recordList. toArray ( ) )
24935	assertEquals ( expected, result,.000001 )
24936	assertTrue ( requestOk )
24937	assertTrue ( v8. getBoolean ( "caught" ) )
24938	assertThat ( sentGetRequest ( "http://127.0.0.1:19000/api/job/events/statusTraces" ), is ( GsonFactory. getGson ( ). toJson ( new JobEventRdbSearch. Result < > ( 0, Collections. < JobExecutionEvent > emptyList ( ) ) ) ) )
24939	assertNull ( dw. getAndTag ( mongoQuery ) )
24940	Assert. assertEquals ( "Value is incorrect", map ( TIME_1_STRING, "test" ), value )
24941	Assert. assertEquals ( "SELECT ACOS(1.0001);", text )
24942	assertions. isNotEqualTo ( actual )
24943	assertEquals ( 0, findings. size ( ) )
24944	assertEquals ( "Different locators", locator, locator2 )
24945	assertEquals ( "Select with join on where clause", ImmutableList. of ( expectedSql ), testDialect. convertStatementToSQL ( insert, metadata, SqlDialect. IdTable. withDeterministicName ( "idvalues" ) ) )
24946	assertEquals ( original, copy )
24947	assertEquals ( expectedJavaCommand, actualJavaCommand )
24948	assertOneSpan ( )
24949	assertEquals ( tail. getMissing ( 3 ), Collections. < Long > emptySet ( ) )
24950	assertEquals ( 0, app. executeApplication ( args ) )
24951	assertEquals ( jointPointRetureValue, actualReturnValue )
24952	assertEquals ( 10, obj. getNumber ( "numberDefault" ) )
24953	assertEquals ( msg. getDeviceOperationType ( ), DeviceOperations. DEVICE_OPERATION_TWIN_UPDATE_REPORTED_PROPERTIES_RESPONSE )
24954	assertEquals ( "select cat\\nfrom Cat cat\\n  inner join cat.mate with cat.mate.alive", serializer. toString ( ) )
24955	assertNotEquals ( getSettings1, getSettings2 )
24956	assertNotNull ( "found class " + getClass ( ), locator. resolveClassName ( ClassInspectUtils. toSlashName ( getClass ( ) ) ) )
24957	Assert. assertEquals ( resultExpected, result )
24958	Assert. assertEquals ( 2, result. size ( ) )
24959	arrays. assertContainsExactlyInAnyOrder ( info, actual, IntArrays. arrayOf ( 6, 10, 8 ) )
24960	assertResultSet ( res )
24961	assertSame ( expected, actual )
24962	assertThat ( representation. getString ( "content-type" ), is ( "application/pdf" ) )
24963	Assert. assertEquals ( "select STUDENT.ID,STUDENT.NAME,STUDENT.SCHOOL from student order by STUDENT.NAME asc,STUDENT.ID asc,STUDENT.SCHOOL asc ", getSql0 ( node ) )
24964	assertEquals ( "", result )
24965	assertThat ( PrettyTime. of ( Locale. US ). print ( dur, TextWidth. WIDE, true, 6 ), is ( "3 years, 0 months, 0 weeks, 1 day, 0 hours, and 4 minutes" ) )
24966	assertEquals ( p. parse ( "1/2*3" ), new Rational < > ( Z, Z. valueOf ( 3 ), Z. valueOf ( 2 ) ) )
24967	assertEquals ( "\\"\\\\t\\\\r value \\\\\\\\\\\\foo\\\\b￿벭\\\\n\\\\u0083\\"", builder. toString ( ) )
24968	assertTrue ( UrlUtils. isMatch ( consumerUrl, providerUrl ) )
24969	Assert. assertEquals ( 3, i )
24970	assertThat ( result, is ( jsonBoolean ( true ) ) )
24971	assertEquals ( DummyDrawHandler. drawCircleToString ( 1, 2, 3, null, null, null, null ), drawHandler. getLastDrawCall ( ) )
24972	assertFalse ( fileResource. usersOrRolesExist ( acl ) )
24973	assertTrue ( storedEvents. isEmpty ( ) )
24974	assertEquals ( 1, externalTasks. size ( ) )
24975	assertEquals ( "at 16:00:00pm, on the 15th day in March, May and December", descriptor. describe ( cron ) )
24976	assertEquals ( "", settings. getBaseDirectory ( ) )
24977	assertThat ( retrieveSize, is ( numberOfPipelines ) )
24978	Assert. assertEquals ( "stuff and  some more  stuff  ;", result )
24979	assertTrue ( actual. isEmpty ( ) )
24980	assertEquals ( "Failed to generate if-else-if-block using no rhs", IF_ELSEIF_BLOCK_NO_RHS_NESTED, s )
24981	AssertJUnit. assertTrue ( exceptionCaught )
24982	Assert. assertNull ( sliName )
24983	assertEquals ( expected, actual )
24984	assertMockEndpointsSatisfied ( )
24985	assertEquals ( "secret", evaluatedPassword )
24986	assertEquals ( expectedResult, result )
24987	mock. assertIsNotSatisfied ( )
24988	assertEquals ( "Test if only one array was red", 1, content. size ( ) )
24989	assertEquals ( val, "catched" )
24990	assertEquals ( 2, bundle. getEntries ( ). size ( ) )
24991	Assert. assertTrue ( isEqual ( d1, d2 ) )
24992	assertNotNull ( object )
24993	assertEquals ( FilterReply. ACCEPT, house. getFilterReply ( ) )
24994	assertEquals ( o. toString ( ), testCase. mExpected )
24995	assertOut ( "/**\\n * @param {number} p1\\n * @param {number} p2\\n * @param {number=} p3\\n * @param {number=} p4\\n * @return {number}\\n */\\n" + "foo.bar.RoyaleTest_A.prototype.method1 = function(p1, p2, p3, p4) {\\n" + "\\tvar self = this;\\n" + "\\tp3 = typeof p3!== 'undefined'? p3 : 3;\\n" + "\\tp4 = typeof p4!== 'undefined'? p4 : 4;\\n" + "\\treturn p1 + p2 + p3 + p4;\\n}" )
24996	assertThat ( db1, is ( not ( sameInstance ( db2 ) ) ) )
24997	assertTrue ( res. isEmpty ( ) )
24998	assertions. containsSequence ( sequence )
24999	assertPresent ( session, label )
25000	assertEquals ( "", encodedParams )
25001	assertEquals ( Boolean. TRUE, result )
25002	Assert. assertEquals ( "2008|骞�|搴�|��|浜�|璧���|��", words )
25003	Assert. assertTrue ( rule. ruleMatches ( null ) )
25004	assertThat ( found, equalTo ( expected ) )
25005	assertEquals ( "http://foo.com/Patient/123/_history/2333", response. getIdElement ( ). getValue ( ) )
25006	assertEquals ( 0, Owner. count ( ) )
25007	assertEquals ( 1, balancer. getNodes ( ). size ( ) )
25008	assertThat ( ( Long ) ms. get ( "aaa" ), is ( 1L ) )
25009	Assert. assertTrue ( lastElementIsSame ( store, new WeightedObservedPoint ( w, x, y ) ) )
25010	assertNotNull ( password )
25011	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Enqueue>" + "<Task priority=\\"1\\" timeout=\\"1\\">body</Task>" + "</Enqueue>", elem. toXml ( ) )
25012	assertEquals ( db. build ( ), e )
25013	Assert. assertEquals ( "The spanish ${hiveconf:animal}", shell. expandVariableSubstitutes ( "The ${hiveconf:origin} ${hiveconf:animal}" ) )
25014	JSONAssert. assertEquals ( expected, result. getResponse ( ). getContentAsString ( ), false )
25015	Assert. assertEquals ( expected, udf. evaluate ( args ) )
25016	Assert. assertEquals ( gen. generateInchi ( ac ). getInChI ( ), "InChI=1S/Li/q+1" )
25017	Assert. assertTrue ( returnT. getCode ( ) == ReturnT. SUCCESS_CODE )
25018	Assert. assertNotNull ( trainer. train ( eventStream ) )
25019	assertThat ( book, equalTo ( otherBook ) )
25020	Assert. assertNotNull ( registerResponse )
25021	Assert. assertEquals ( defaultProducts. length - 1, selector. getProductCount ( ) )
25022	assertPathMatchForExpected ( expected )
25023	assertNotNull ( resultMap )
25024	Assert. fail ( "GMException should have been thrown." )
25025	assertAccessorsCorrect ( collapsible, "headingLevel", null, HeadingLevel. H1, HeadingLevel. H2 )
25026	assertThat ( defaultName, is ( "Zuid-Holland (region, Netherlands)" ) )
25027	assertEditorClosed ( )
25028	assertTrue ( Arrays. equals ( protocols, configurable. getEnabledProtocols ( ) ) )
25029	assertEqualDoubleArrays ( pyplus, plus, epsilon )
25030	assertEquals ( "诰����丕", t. format ( date ) )
25031	assertThat ( bucketContent. isEmpty ( ) )
25032	assertThat ( output, containsString ( "Template created: " ) )
25033	assertEquals ( CodeableConcept. class, roleField. getClass ( ) )
25034	Assert. assertEquals ( job, RandomUtils. nextItem ( jobs, RandomNumberGeneration. getRandom ( ) ) )
25035	assertEquals ( "", result )
25036	assertEquals ( 3, books. size ( ) )
25037	assertTrue ( true )
25038	assertMediaFolderEquals ( mediaFolder, newMediaFolder )
25039	assertEqualsWithoutWhiteSpaces ( "difference() {(model11) (model2)}", testSubject. subModel ( new ScadGenerationContextFactory ( ). exclude ( 12 ). create ( ) ) )
25040	assertThat ( converter. toWritableObject ( "x" ), is ( ( Object ) new Text ( "x" ) ) )
25041	Assert. assertEquals ( assignedClientId, client. getId ( ) )
25042	assertSame ( GBP_2_34, test )
25043	assertEquals ( "filterDisplayName", parameterName )
25044	assertEquals ( "annotation:hello", hello )
25045	assertTrue ( ep. getBinding ( ) instanceof SOAPBinding )
25046	assertTrue ( onCloseLatch. await ( 5, TimeUnit. SECONDS ) )
25047	assertNotNull ( colegio )
25048	assertOut ( "return true" )
25049	assertEquals ( "HTTP @ /127.0.0.1:9996", httpRequestMethod. getProxy ( ). toString ( ) )
25050	assertIsAborted ( tx )
25051	assertResultsEqual ( results, 6L )
25052	assertXMLEqual ( new ResourceUtil ( UNSTAR ). getContent ( ), sw. getBuffer ( ). toString ( ) )
25053	Assert. assertNull ( result )
25054	assertEquals ( before + 1, countRowsInTable ( "PERSON" ) )
25055	assertEquals ( 255, mask [ indY ] [ indX ] )
25056	assertThat ( sut. getImage ( ), equalTo ( "registry:4711/foo/bar@sha256:12345" ) )
25057	assertEquals ( 0, indexEntries. size ( ) )
25058	assertThat ( lastEntry. isAlarm ( ), is ( true ) )
25059	assertNull ( principal )
25060	Assert. assertEquals ( "�戒�灞�", words )
25061	assertThat ( testContext, id, isIn ( ids ) )
25062	assertEquals ( WRONG_NUMBER_OF_ANNOTATIONS_PARSED, computeTotalNumberOfWarnings ( createJavaParsers ( ) ) - 15, annotations. size ( ) )
25063	assertThat ( qualifier, is ( "Joe" ) )
25064	assertThat ( time. getTimeRelativeTo ( timeRelativeTo ), equalTo ( dateFormat. parse ( "2013-Jan-18 4:55:12.17" ). getTime ( ) ) )
25065	Assert. assertEquals ( SIMPLE_RETURN_CODE. SUCCESS, check. getErrorType ( ) )
25066	assertDateEquals ( r, t. plus ( d ) )
25067	assertThat ( result, contains ( "Hel", "lo ", "wor", "ld" ) )
25068	assertFalse ( underTest. validate ( "student", idsToValidate ). containsAll ( idsToValidate ) )
25069	assertEquals ( belongsToEntity, returnedEntity )
25070	assertEquals ( "�诲�璐���", model. tryGetProperty ( "loginName" ). getTitle ( ) )
25071	assertTrue ( "Included attached native artifacts, but shouldn't", nativeDependencies. isEmpty ( ) )
25072	Assert. isTrue ( true )
25073	assertOut ( "/**\\n * @export\\n */\\nB.prototype.http_$$ns_apache_org$2017$custom$namespace__b = function() {\\n  var self = this;\\n  function c(f) {\\n  };\\n  var /** @type {Function} */ f = org.apache.royale.utils.Language.closure(this[new QName(custom.custom_namespace, 'b').objectAccessFormat()], this, 'http://ns.apache.org/2017/custom/namespace::b');\\n  c(f);\\n}" )
25074	Assert. assertEquals ( 12. * 2., analyser. getVariableTransportCostsAtActivity ( route. getActivities ( ). get ( 1 ), route ), 0.01 )
25075	assertEquals ( 401, resGetAll. getStatus ( ) )
25076	assertEquals ( expected, result )
25077	assertEquals ( 1, testParseJsonObject. getValue ( context ) )
25078	Assert. assertTrue ( m. matches ( ) )
25079	MatcherAssert. assertThat ( values, Matchers. contains ( "VALUE1", "VALUE2" ) )
25080	assertEquals ( 1, results. length )
25081	assertTrue ( true )
25082	assertThat ( slider. getValue ( ), is ( 1.23 ) )
25083	assertTrue ( "The first component of the split panel should be a button labeled \\"Button\\"." + " Actual label: " + buttonText, "Button". equals ( buttonText ) )
25084	Assert. assertEquals ( "[{\\"name\\":\\"name1\\",\\"age\\":1},{\\"name\\":\\"name2\\",\\"age\\":2}]", str )
25085	assertArrayEquals ( expected, encoder. getEncoded ( ) )
25086	assertEquals ( expResult, result )
25087	assertTrue ( "subtree-root child is visitable", _guide. isVisitable ( child ) )
25088	assertNull ( underTest. validateGroupDoesNotContainItself ( "repositoryUnderTest", config ) )
25089	assertTrue ( "Entries found: " + entries, entries. isEmpty ( ) )
25090	assertThat ( toUnqualifiedVersionlessIds ( myAppointmentDao. search ( params ) ), containsInAnyOrder ( patId, apptId ) )
25091	assertEquals ( "doc", result. get ( RETURN_RESULT ) )
25092	assertRequest ( "POST", "Conference/%s/Member/%s/Play/", confId, memberId )
25093	assertExcludedImplicitly ( node )
25094	assertEquals ( mailboxSize, testResults. highest. get ( ) )
25095	assertThat ( PrettyTime. of ( Locale. US ). print ( dur, TextWidth. WIDE ), is ( "102 years" ) )
25096	Assert. assertEquals ( 401, con. getResponseCode ( ) )
25097	assertTrue ( voter. voteMatch ( affiliation, organization ) )
25098	assertThat ( actual, is ( "ONE" ) )
25099	assertFalse ( SpriteUtils. isAliasSprite ( sprite1, sprite2 ) )
25100	assertThat ( cell. body ( ), is ( equalTo ( "<a href='http://localhost'>linked</a>" ) ) )
25101	assertEquals ( position, 3 )
25102	Assert. assertTrue ( pss. toString ( ). contains ( "<http://example>" ) )
25103	assertEquals ( 20, dt. intValue ( ) )
25104	assertEquals ( "newValue", result. getAttributes ( ). get ( "name" ) )
25105	runner. assertAllFlowFilesTransferred ( PutHBaseCell. REL_FAILURE, 1 )
25106	Assert. assertEquals ( dim. getNumDimensions ( ), 2 )
25107	Assert. assertEquals ( OBJECT, clone )
25108	assertThat ( sampledValue. getMeasurand ( ), equalTo ( measurand ) )
25109	assertEquals ( true, actual )
25110	assertThat ( patch. getDeltas ( ), is ( empty ( ) ) )
25111	assertEquals ( testData, result )
25112	assertFalse ( violation )
25113	assertTrue ( message!= null )
25114	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + fileName, sourceFolder + "cmp_" + fileName, destinationFolder, "diff_" ) )
25115	assertEquals ( "Jelly file [template-does-not-exist] was not found in $JENKINS_HOME/email-templates.", output )
25116	assertNotNull ( result )
25117	assertOut ( "var /** @type {boolean} */ a = false" )
25118	assertThat ( target. matchExactly ( flow ), is ( true ) )
25119	assertEquals ( 10, pageService. findMaxApiPageOrderByApi ( API_ID ) )
25120	assertNull ( MultiParts. getFileName ( param ) )
25121	assertNotNull ( result )
25122	assertEquals ( 1.0, Capacity. divide ( cap1, cap2 ), 0.001 )
25123	testRunner. assertAllFlowFilesTransferred ( PutParquet. REL_RETRY, 1 )
25124	assertEquals ( 1, ksession. fireAllRules ( ) )
25125	assertThat ( response. toString ( ), is ( "" + "inet6num:       ::0\\n" + "abuse-mailbox:  abuse@me.now\\n" ) )
25126	Assert. assertEquals ( 0.5, p, 0.001 )
25127	assertTrue ( result. getErrorMessage ( ), result. isSucceeded ( ) )
25128	assertSame ( authenticated, helperSpy. getAuthObj ( ) )
25129	assertEquals ( "ATS03F=0:PassWord\\r\\n", intArrayToString ( command. serialize ( ) ) )
25130	assertHandCount ( playerA, 2 )
25131	assertEquals ( Arrays. asList ( "A", "B", "C", "D" ), results )
25132	assertEquals ( "http://pac4j.com/cas/login", result )
25133	assertNotNull ( result )
25134	assertTrue ( Arrays. equals ( expected, actual ) )
25135	assertEquals ( Map. of ( "priority", "9" ), actualConfig. getExecutionHints ( ) )
25136	Assert. fail ( "Xfdf files are not equal" )
25137	assertEquals ( "bar", bar. get ( ) )
25138	assertNotFired ( watch )
25139	Assert. assertTrue ( "canonicalizing the test file " + filename + " gives a different result than canonicalizing the tmxml export: " + out + " " + baseline, TestFileUtils. compareFileToResource ( out, baseline ) )
25140	assertThat ( query. filters. get ( 0 ), is ( filter ) )
25141	assertThat ( match, is ( nullValue ( ) ) )
25142	Assert. assertNotNull ( chf1 )
25143	assertArrayEquals ( expected, new ARC4Engine ( ). encryptBytes ( "ChuckNorris". getBytes ( StandardCharsets. UTF_8 ), "ABCDE". getBytes ( StandardCharsets. UTF_8 ) ) )
25144	assertObjects ( RoleType. class, NUMBER_OF_GENERATED_EMPTY_ROLES + NUMBER_OF_ORDINARY_ROLES )
25145	assertNotNull ( result )
25146	assertNotNull ( result )
25147	Helpers. assertJson ( json. toString ( ), "{\\"key1\\":\\"value1\\",\\"key2\\":null,\\"key3\\":\\"value3\\"}" )
25148	assertEquals ( "3.5.0.6404", libraryversion )
25149	Assert. assertTrue ( "XML are similar " + myDetailedDiff, myDetailedDiff. similar ( ) )
25150	assertFalse ( user. isPresent ( ) )
25151	assertEquals ( "Xindex", output )
25152	assertEquals ( tenantsForPreloading, tenantDA. getPreloadFiles ( "ingestion_server_host" ) )
25153	assertDtoAndMapConstructorAreSame ( 0 )
25154	assertSame ( t. toLocalTime ( ), LocalTime. NOON )
25155	assertEquals ( "https://api.test.com/myapi/customer;issue_id=1337;location=LUND%2FB;enterprise=false", expanded. toString ( ) )
25156	assertEquals ( "test", echo. echo ( "test" ) )
25157	Assert. assertEquals ( CatalogResponseMessage. OK, response. getCode ( ) )
25158	Assert. assertEquals ( String. format ( DEFAULT_MESSAGE, numThreads, numRows, numCols ) + ", rmse = " + rmse, 0.0, rmse, EPS )
25159	assertNull ( result )
25160	assertTrue ( SystemTime. asTimestamp ( ). equals ( consent. getConsentRevokedOn ( ) ) )
25161	assertTrue ( "There should be more than one class but there was only " + classes. size ( ), classes. size ( ) > 1 )
25162	assertEquals ( 12, jpegBitsPerSample ( "MR2_UNC-J2KR.dcm" ) )
25163	assertThat ( new PullRequestApproval ( Config. builder ( ). requiredReviewers ( newArrayList ( "user1", "user2" ) ). requiredReviews ( 2 ). build ( ), utils ). isPullRequestApproved ( pr ), is ( false ) )
25164	assertEquals ( "Agents Rebooted", result )
25165	assertThat ( domain. endsWithDomain ( ciString ( "n.s.100.200.193.193.in-addr.arpa" ) ), is ( false ) )
25166	assertThat ( converter, instanceOf ( EnumConverter. class ) )
25167	assertTrue ( ex. isOddNumber ( - 1 ) )
25168	assertEquals ( MenuItem. PRODUCTS, menuStore. getSelected ( ) )
25169	assertEquals ( CALLS, names. size ( ) )
25170	Assert. assertNotNull ( antennae )
25171	assertEquals ( expecting, found )
25172	assertEquals ( prettyPrintJson ( readContent ( EXPECTED_ERROR_RESPONSE_PATH ) ), prettyPrintJson ( json ) )
25173	assertEquals ( "Names didn't match.", organizationResponse. object. getName ( ), name )
25174	Assert. assertEquals ( 2, dashboardHistories. size ( ) )
25175	assertNotNull ( "Failed to obtain a valid connection!", connection )
25176	assertFalse ( userCanBuildProject )
25177	assertThat ( randomProxy, instanceOf ( ProxyObject. class ) )
25178	assertEquals ( false, bm. isBitSet ( bitNumber ) )
25179	assertTrue ( PropertyUtils. isWriteable ( tchh, "tch2.collection" ) )
25180	Assert. assertTrue ( "Failed to stop run with pcClient", pcClient. stopRun ( Integer. parseInt ( PcTestBase. RUN_ID ) ) )
25181	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFileName, cmpFileName, destinationFolder, "diff" ) )
25182	assertEquals ( assertion, test )
25183	assertThat ( subject. shouldProcess ( message ), is ( false ) )
25184	assertEquals ( "(12 (abc 34))\\n", found )
25185	assertEquals ( "Test component was not detached on DataProvider change.", null, testComponent. getParent ( ) )
25186	assertFalse ( filter. shouldInclude ( source, "some.property" ) )
25187	assertEquals ( expected, mergeAclEntries ( existing, aclSpec ) )
25188	ctx. assertEquals ( "database \\"blah_db\\" does not exist", conn. getMessage ( ) )
25189	assertNull ( descriptor. getConstraintsForMethod ( "zap" ) )
25190	assertNotNullOrEmpty ( "Questions should never be null.", questions )
25191	assertEquals ( Response. Status. NOT_MODIFIED. getStatusCode ( ), resource. deleteConnection ( "Name" ). getStatus ( ) )
25192	assertEquals ( onOffScreenPage, iface. getURL ( ) )
25193	assertEquals ( "{\\"resourceType\\":\\"Patient\\",\\"meta\\":{\\"tag\\":[{\\"system\\":\\"scheme\\",\\"code\\":\\"term\\",\\"display\\":\\"display\\"}]},\\"identifier\\":[{\\"system\\":\\"sys\\",\\"value\\":\\"val\\"}]}", enc )
25194	Assert. assertThat ( nbrOfStores, is ( NBR_OF_ALL_GRIDS ) )
25195	Assert. assertThat ( "response.statusCode", response. getStatusCode ( ), is ( 200 ) )
25196	assertEquals ( "ball-of-yarn", something )
25197	assertFalse ( topic. getSubscribers ( ). contains ( user ) )
25198	assertTrue ( existentFile. exists ( ) )
25199	assertFalse ( filter. getExpr ( ) instanceof ExprInfo )
25200	assertEquals ( Types. INTEGER, cInfo. getType ( ) )
25201	assertThat ( cut. getItems ( ), contains ( item1, item2 ) )
25202	assertThat ( instance. matches ( message, matchers ), is ( false ) )
25203	assertThat ( other, LocalTimeMatchers. sameMinuteOfHour ( date ) )
25204	Truth. assert_ ( )
25205	assertTrue ( polygonSymbolizer. getFill ( )!= null )
25206	assertThat ( output ( outputDirectory, outputPath ), equalTo ( resource ( outputPath ) ) )
25207	assertEquals ( 4, size )
25208	Assert. assertEquals ( 0L, actual )
25209	assertEquals ( expected, actual )
25210	assertThat ( getterMethod. getReturnType ( ). getName ( ), is ( "java.lang.Integer" ) )
25211	assertEquals ( 98, dataCharacter. getValue ( ) )
25212	assertSame ( name, expected, actual )
25213	assertEquals ( "(table (vars) (row) )", x )
25214	assertEquals ( direct. length ( ), proxied. length ( ) )
25215	Assert. assertTrue ( person. getPersonVoided ( ) )
25216	assertTrue ( httpStack!= null )
25217	assertThat ( webServer. getAddress ( ). getHostName ( ), equalTo ( "localhost" ) )
25218	assertFalse ( capabilityMatcher. matches ( nodeCapabilities, requestedCapabilities ) )
25219	assertEquals ( text, reply )
25220	assertEquals ( privileges. listOfSupported ( ). length, permissions. length )
25221	assertEquals ( "<h1>Head</h1><table><tbody><tr><td>One</td><td>Two</td></tr></tbody></table>", TextUtil. stripNewlines ( cleanHtml ) )
25222	assertEmptyLinksOk ( linkNames )
25223	assertTrue ( "Not same integer: " + v1 + " & " + v2, v1. getInteger ( ). equals ( v2. getInteger ( ) ) )
25224	assertEquals ( node, r. get ( "node" ) )
25225	assertEquals ( "Novy|Nova|home,mobile|home", mustache. render ( loadJsonData ( ) ) )
25226	assertEquals ( OutputChangeEvent. OUTPUT_EVENT. OUTPUT_CHANGED, outputEvent [ 0 ]. getEvent ( ) )
25227	ctx. assertTrue ( ex instanceof InvalidGroupIdException )
25228	assertThat ( ( ( SpringRenderKit ) renderKitCaptor. getValue ( ) ). getWrapped ( ), is ( sameInstance ( this. renderKit ) ) )
25229	assertCorrectness ( rowDataset, transformer )
25230	Assert. assertNull ( testSubject. subModel ( new ScadGenerationContextFactory ( ). exclude ( 12 ). create ( ) ) )
25231	assertThat ( "should get interested event", subscriber. lastEvent ( ), equalTo ( GHEvent. ISSUES ) )
25232	assertFalse ( "Project name wasn't supposed to be valid.", jiraTracker. hasValidProjectName ( ) )
25233	assertNotNull ( MessagingConfiguration. fetcher ( "VAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "country" ). fetch ( ) )
25234	assertEquals ( response. getStatus ( ), STATUS200 )
25235	assertSame ( element, node. getElement ( ) )
25236	assertEquals ( "Expected 0 results!", 0, count )
25237	Assert. assertNull ( new CompareTool ( ). compareByContent ( destFilename, sourceFolder + "cmp_copyFields06.pdf", destinationFolder, "diff_" ) )
25238	assertSingleGruxAlbum ( spec )
25239	assertNotNull ( PhoneNumber. reader ( "TRXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
25240	Assert. assertTrue ( response. getAttachments ( ). hasNext ( ) )
25241	Assert. assertTrue ( isElementConsented )
25242	Assert. assertEquals ( Either. right ( Optional. of ( new BigDecimal ( "1.2" ) ) ), res )
25243	assertNotNull ( result )
25244	assertEquals ( Integer. toString ( 1 ), id. toString ( ) )
25245	Assert. fail ( )
25246	assertThat ( fetchCount ( ), is ( 1L ) )
25247	assertThat ( StringUtils. trimToEmpty ( response. getPayloadAsString ( ) ), is ( "FILE TEST PAYLOAD" ) )
25248	assertThat ( rendered, is ( "a..\\r\\n..b\\r\\n..c" ) )
25249	assertEquals ( "the combination of --diffTypes=data and diffChangeLog must not be accepted.", 1, errMsgs. size ( ) )
25250	assertNotNull ( route )
25251	assertThat ( plugin. arg, is ( equalTo ( "hello" ) ) )
25252	assertFalse ( "Reloading required", detector. isReloadingRequired ( ) )
25253	Assert. assertFalse ( InstanceValidationUtil. hasValidConfig ( mock. dataAccessor, TEST_CLUSTER, TEST_INSTANCE ) )
25254	assertTrue ( diskInfo. isPresent ( ) )
25255	assertEquals ( Status. OK, result )
25256	inputStreams. assertSameContentAs ( someInfo ( ), actual, expected )
25257	assertEquals ( "Testing rho: ", expectedRhoTwoStep, rho, 1E-3 )
25258	assertThat ( pickupTruck1, samePropertyValuesAs ( pickupTruck2 ) )
25259	assertTrue ( toTest. extract ( null, UTF8, stream ). isEmpty ( ) )
25260	assertThat ( actual, is ( expected ) )
25261	assertEquals ( "Type is wrong", CarType. AUDI, carType )
25262	assertEquals ( "test/repo", metadatas. get ( "/test/repo.metadata" ). getName ( ) )
25263	assertFalse ( isModifiable )
25264	assertNull ( schemaManager. getPropertyDefinition ( ElementType. VERTEX, "property" ) )
25265	assertEquals ( "Output order: " + outputOrder, exp, out )
25266	assertEquals ( expectedAddress, gotAddress )
25267	assertTrue ( Bytes. compareTo ( bytes1, bytes2 ) > 0 )
25268	assertEquals ( Location. UNKNOWN, cargo. getDelivery ( ). getLastKnownLocation ( ) )
25269	assertThat ( actual. get ( "latest" ), containsString ( "1.0.1" ) )
25270	assertTrue ( 5.0f == d. asFloat4 ( ) )
25271	assertEquals ( "", result )
25272	assertEquals ( "SQL92", rootNode. getProperty ( StandardDdlLexicon. PARSER_ID ) )
25273	assertFalse ( validator. validate ( certificateMapping, POST ). passedValidation ( ) )
25274	assertEquals ( "Wrong attribute key", "node/@attr", engine. attributeKey ( "node", "attr" ) )
25275	assertResultSet ( res )
25276	assertEquals ( template, test. build ( ) )
25277	assertThat ( persons, equalTo ( expectedPersons ) )
25278	Assert. assertTrue ( "not all objects in set(3) iterated to", set. containsAll ( otherSet ) && otherSet. containsAll ( set ) )
25279	assertTrue ( job. waitForCompletion ( true ) )
25280	assertThat ( examplesTable. asString ( ), equalTo ( TABLE_AS_STRING ) )
25281	assertEquals ( klass, ObjectNode. class )
25282	assertFalse ( UrlUtils. isMatch ( consumerUrl, providerUrl ) )
25283	Assert. assertSame ( foo, fact. getValidators ( fooset ). get ( 0 ) )
25284	Assert. assertEquals ( 123, maxSize )
25285	Assert. assertNotNull ( jdbcStore2 )
25286	assertThat ( result. replaceAll ( "\\\\s+", "" ), equalTo ( expectedOutput. replaceAll ( "\\\\s+", "" ) ) )
25287	assertEquals ( "Parsing of double option does not match expected result.", PROPERTY_DOUBLE_EXPECTED, parseResult, 0.0 )
25288	ReaderAssert. assertThat ( Conll2006Reader. class )
25289	assertEquals ( 3, distinct. solution ( array ) )
25290	assertEquals ( expected, actual )
25291	assertThat ( auth. clone ( ), not ( sameInstance ( auth ) ) )
25292	assertThat ( whoisObject. getAttributes ( ), hasItems ( new Attribute ( "auth", "MD5-PW $1$d9fKeTr2$Si7YudNf4rUGmR71n/cqk/", "test", null, null, null ), new Attribute ( "auth", "SSO person@net.net", null, null, null, null ), new Attribute ( "source", "TEST", "Filtered", null, null, null ) ) )
25293	assertFalse ( processor. process ( entry ) )
25294	assertThat ( activity. isFinishing ( ), equalTo ( true ) )
25295	assertEquals ( nativeToAscii ( UNENCODED ), nativeToAscii ( nvDecoded ) )
25296	assertEquals ( documentId, options. documentId ( ) )
25297	assertEquals ( expectedFeatures, tokens. get ( 0 ). getAllFeatures ( ) )
25298	Assert. assertTrue ( hash == - 792688181L )
25299	assertTrue ( handler. isCalledOnce ( ) )
25300	assertThat ( testCallback, is ( expectedCallback ) )
25301	assertEquals ( "x goo y", result )
25302	Assert. assertEquals ( "{\\"PropertyInt16\\":111,\\"PropertyString\\":\\"TEST A\\"}", resultString )
25303	assertEquals ( 14, test. sum ( 5, 9 ) )
25304	Assert. fail ( "Cannot create metablocks with the same name." )
25305	assertEquals ( "Wrong number of values", 3, values. size ( ) )
25306	Assert. assertEquals ( count + 1, conectores. size ( ) )
25307	assertTrue ( kbuilder. hasErrors ( ) )
25308	assertEquals ( query1, query2 )
25309	arrays. assertDoesNotContain ( description, null, array ( "Yoda" ) )
25310	Assert. assertArrayEquals ( new int [ ] { 4, 3, 6 }, result )
25311	assertEquals ( "Wrong Person instance count.", 2L, graphRepositoryFactory. createGraphRepository ( Person. class ). count ( ) )
25312	assertEquals ( columnInfoActualValue. toString ( ), columnInfo. toString ( ) )
25313	assertThat ( Visitors. readable ( query ), is ( "SELECT * FROM A EXCEPT ALL SELECT * FROM B" ) )
25314	assertEquals ( "Base value is not properly parsed", new DateParser ( null ). parse ( "2014/03/19 00:00:00.000 GMT" ). getTime ( ), parsed )
25315	Assert. fail ( "Invalid entity type was accepted by the system" )
25316	assertStatus ( queryId, 4, expectedNumRows, expectedNumBytes, expectedReadBytes )
25317	assertFalse ( rule. isVersionValid ( null ) )
25318	assertEquals ( entry, result )
25319	assertThat ( rs, equalTo ( expected ) )
25320	assertOkAndNotNullResult ( resp )
25321	assertTrue ( b )
25322	assertRefinedObjectClass ( objectClass, RESOURCE_DUMMY_PRIVILEGE_OBJECTCLASS_QNAME, ShadowKindType. ENTITLEMENT, "privilege" )
25323	assertEquals ( ReportFormat. PDF, result. format )
25324	assertFalse ( androidImpl. isSDCardEnoughSpace ( device, 5120L ) )
25325	validator. assertTestSuiteResults ( 30, 8, 4, 17 )
25326	assertThat ( CountingJob. ourCount, lessThan ( 5 ) )
25327	assertHelpLines ( "Option       Description", "------       -----------", "-a <String>             ", EMPTY )
25328	assertResultIs ( 1L )
25329	assertTrue ( "Path for removed property is wrong: actual=" + listener. getEvents ( ). get ( 0 ). getPath ( ) + ", expected=" + propPath, containsPath ( listener, propPath ) )
25330	assertEquals ( "blah(count, t)", signature )
25331	assertThat ( clause. toString ( ), is ( "(person)<-[:members]-(group)" ) )
25332	Assert. assertTrue ( "Stub exception was not forwarded.", stubFailed )
25333	Assert. assertTrue ( result. next ( ) )
25334	Assert. assertEquals ( 1, count )
25335	assertThat ( found. size ( ), is ( 0 ) )
25336	assertEquals ( factIdentifier. getPackageWithoutClassName ( ), "" )
25337	assertThat ( path. getString ( NO_OP_ENCODER ), is ( "/{http://www.modeshape.org/1.0}a/{}b/{http://www.modeshape.org/1.0}c/../{}d/./{http://www.modeshape.org/1.0}e/../.." ) )
25338	assertEquals ( count + 2, session. from ( restriction ). list ( restriction ). size ( ) )
25339	assertThat ( tokens, equalTo ( Arrays. < Object > asList ( 1.0, 2.0, 3.0, 4.0 ) ) )
25340	assertArrayEquals ( data, bb )
25341	Assert. assertEquals ( Thread. currentThread ( ), ref. get ( ) )
25342	assertContainsText ( TestUtils. toString ( t ), "------End remote and begin local stracktrace ------" )
25343	assertOut ( "var /** @type {Object} */ a = org.apache.royale.utils.Language.resolveUncertain(Object(\\"1\\"))" )
25344	assertTrue ( serializedDevice. contains ( symmetricKeySecuredDeviceAuthenticationJson ) )
25345	assertTrue ( widget instanceof Button )
25346	Assert. assertEquals ( r, Serializers. serializerFor ( BasicRollup. class ). fromByteBuffer ( bb ) )
25347	assertThat ( NullNode. getInstance ( ), is ( sut ) )
25348	assertEquals ( BUNDLE_URI + "profile/tavernaWorkbench/" + "configuration/Hello/", uri. toASCIIString ( ) )
25349	assertEquals ( 5, resolvedAlerts. size ( ) )
25350	Assert. assertEquals ( 1, lambda. testCatchingException ( ) )
25351	assertEquals ( "the update request body is different", expected, requestBody )
25352	assertEquals ( "Check if stuff are equal if template.createNodeAs: ", 1, template. count ( Stuff. class ) )
25353	assertEquals ( "YamlSource: " + testUrl, yamlSource. toString ( ) )
25354	Assert. assertEquals ( count, countStructure. get ( ) )
25355	assertResult ( session )
25356	assertFalse ( returnedValue )
25357	assertTrue ( container. children. isEmpty ( ) )
25358	assertTrue ( pa. getId ( )!= null )
25359	assertEquals ( assertion, log )
25360	assertEquals ( 190 + 1900, sum )
25361	assertFalse ( iterator. hasNext ( ) )
25362	Assert. assertNotNull ( contentString )
25363	Assert. assertEquals ( configMap, result )
25364	assertThat ( underTest. passwordsMatch ( password, shiro1Hash ), is ( true ) )
25365	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
25366	assertEquals ( expected, actual )
25367	assertSame ( dataSource, factory. getDataSource ( descriptor ) )
25368	assertEquals ( "1.23", rp. toNumberParam ( ourCtx ). getValue ( ). toPlainString ( ) )
25369	assertTrue ( p. getContent ( ). size ( ) > 0 )
25370	assertTrue ( getNoErrorMsg ( ), result )
25371	assertEquals ( service. postProcess ( "<pre>int good=2;[-code][-code][-code]</pre>" ), "<pre>int good=2;[/code][-code][/code]</pre>" )
25372	assertEquals ( multiKVFilter ( columnComparison ( CompareOp. EQUAL, A_STRING, B_STRING ) ), filter )
25373	Assert. assertEquals ( alertCount, 1 )
25374	Assert. assertTrue ( "time val was missing", timeVal > 0 )
25375	assertThat ( "Background color", nodeData. getValue ( TermColor. class, "background-color" ), is ( tf. createColor ( 0, 128, 0 ) ) )
25376	Assert. assertArrayEquals ( address, cleanedOffset )
25377	assertIndexedRecord ( typeDesc, indexedRecord )
25378	assertThat ( paragraphs, is ( "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\\n\\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet." ) )
25379	Assert. assertTrue ( clientBoList. size ( ) > 0 )
25380	Assert. assertTrue ( childRenderer instanceof DummySvgNodeRenderer )
25381	assertNull ( ManualTriggerFactory. getManualTrigger ( projectB, projectA ) )
25382	assertThat ( verifyModelVersionsSaved ( ), is ( ImmutableMap. of ( "foo", "1.2", "bar", "1.1", "wibble", "2.0" ) ) )
25383	assertTrue ( NumberUtils. isCreatable ( result ) )
25384	assertEquals ( expected, e. evaluate ( ), 0.0 )
25385	assertThat ( out. toString ( ), equalTo ( tableAsString ) )
25386	assertEquals ( inputString, outputString )
25387	assertEquals ( code, clone )
25388	assertEquals ( expResults, results )
25389	assertTrue ( result. isEmpty ( ) )
25390	Assert. assertEquals ( 0, norm, 1.0e-15 )
25391	assertEquals ( 10, content. split ( "\\n" ). length )
25392	Assert. assertNotNull ( addressResultsDto )
25393	Assert. assertEquals ( LargeInteger. valueOf ( - 12 ), res. get ( 0 ) )
25394	assertNotEquals ( "The string should be converted to diacritics", "English Sentence", diacriticsString )
25395	Assert. assertEquals ( 1.2D, res )
25396	assertEquals ( 0, byteBufResultCaptor. getResult ( ). refCnt ( ) )
25397	assertThat ( runs, contains ( asList ( 1, 1 ), asList ( 2, 2 ), Collections. singletonList ( 3 ), Collections. singletonList ( 4 ), Collections. singletonList ( 5 ) ) )
25398	assertThat ( objectMapper. fromJson ( objectMapper. toJson ( map ) ), is ( objectMapper. fromJson ( "{\\"typeName\\":\\"Processes\\",\\"fields\\":[{\\"name\\":\\"process\\",\\"type\\":\\"ConversionRateProcess[]\\",\\"properties\\":[\\"REQUIRED\\"]}]}" ) ) )
25399	assertEquals ( 1, commandLine. getArgs ( ). length )
25400	assertThat ( result, equalTo ( false ) )
25401	assertEquals ( "./spo/", buffer. toString ( ) )
25402	assertEquals ( controllerName, "io.swagger.oas.sample.controllers.My_tag" )
25403	Assert. assertEquals ( 204, res. getStatus ( ) )
25404	assertEquals ( timeInstant. getIntervalType ( ), DateIntervalType. MINUTE )
25405	Assert. assertEquals ( message, receivedEvent )
25406	assertTrue ( resource + " is not valid", result. isValid ( ) )
25407	assertThat ( person, hasToString ( "Person {}" ) )
25408	assertTrue ( jarRuntimeInfo. isClassLoaderReusable ( ) )
25409	assertEquals ( TestEnum. B, property. get ( ) )
25410	assertEquals ( "<script>\\n" + "  <!--\\n" + "    document.write('</scr' + 'ipt>');\\n" + "  // -->\\n" + "</script>", node. body ( ). html ( ) )
25411	assertEquals ( Permission. Type. MENU, entity. getType ( ) )
25412	Assert. assertFalse ( matcher. match ( rule, testNode2, parent ) )
25413	assertTrue ( appNodes. get ( 0 ). isUnboundStreamApp ( ) )
25414	FixtureAsserts. assertStringMatchesJsonFixture ( "DeleteUser by admin response render to HAL+JSON", actualResponse, "/fixtures/hal/user/expected-admin-delete-user.json" )
25415	assertFalse ( "BloomFilter#not should have inverted all bits", bf. bits. intersects ( origBitSet ) )
25416	assertEquals ( 9, betweenTwoSets. solution ( A, B ) )
25417	assertTrue ( start. isSuccessful ( ) )
25418	assertIAEWhenAccessingResult ( service. prepare ( query ) )
25419	assertEquals ( 200, response. getStatus ( ) )
25420	assertEquals ( sut, stringLine )
25421	assertVersions ( ctx, "9" )
25422	assertEquals ( 69, result )
25423	assertEquals ( "Conversion did not match", value, to )
25424	assertThat ( underTest. lastBlobUpdated ( emptyList ( ) ). isPresent ( ), is ( false ) )
25425	Assert. assertNotNull ( outStream )
25426	bytes. assertNotEqualTo ( description, null, ( byte ) 6 )
25427	assertEquals ( "", result )
25428	assertEquals ( o. annotationAssertionAxioms ( i ). iterator ( ). next ( ), AnnotationAssertion ( RDFSComment ( ), i, Literal ( TEST, OWL2Datatype. RDF_PLAIN_LITERAL ) ) )
25429	assertEquals ( testneuron2, lst. get ( 1 ) )
25430	Assert. assertEquals ( rtpPacket. getTimestamp ( ), 0xFFFFFFFF, "Timestamp should be 0xFFFFFFFF." )
25431	assertThat ( iconCaptor. getValue ( ), is ( ":ghost:" ) )
25432	assertArrayEquals ( new double [ ] { 2, 3, 4, 1 }, result,.01 )
25433	assertThat ( limboService. hasLimboPlayer ( "John" ), equalTo ( false ) )
25434	assertEquals ( "", a. getId ( ) )
25435	assertThat ( uris, is ( asList ( new URI ( "http://baseurl/static/rapture/baseapp-debug.js" ), new URI ( "http://baseurl/static/rapture/extdirect-debug.js" ), new URI ( "http://baseurl/static/rapture/bootstrap.js" ), new URI ( "http://baseurl/static/rapture/d3.v4.min.js" ), new URI ( "http://baseurl/extjs-script-1-test-1.js" ), new URI ( "http://baseurl/extjs-script-2-test-1.js" ), new URI ( "http://baseurl/extjs-script-1-test-2.js" ), new URI ( "http://baseurl/extjs-script-2-test-2.js" ), new URI ( "http://baseurl/static/rapture/app.js" ) ) ) )
25436	Assert. assertNotNull ( addressResultsDto )
25437	assertEquals ( expected, actual )
25438	assertThat ( period, equalTo ( new TimePeriod ( MINUTE, 61.0 / 60.0 ) ) )
25439	assertions. containsValue ( value )
25440	assertEquals ( Nd4j. ones ( 1, 10 ), aDeserialized )
25441	assertEquals ( "", html )
25442	assertArrayEquals ( A. toArray ( ), a. toArray ( ), 0.1 )
25443	assertEquals ( tables. getString ( "TABLE_NAME" ), tableName )
25444	assertThat ( supported, is ( false ) )
25445	assertEquals ( forumObject. getForumUuid ( ), forumUuid )
25446	assertEquals ( expectedURI, optOutRequest. getUri ( baseURI ) )
25447	assertThat ( Certificates. getOperatorInternalCertificateData ( ), nullValue ( ) )
25448	assertEquals ( fakeContent, content )
25449	assertNull ( props. toString ( ), props. get ( "old" ) )
25450	assertTrue ( "Unexpected data", buffer. readableBytes ( ) == 0 )
25451	Assert. assertTrue ( _c. canConvertTo ( Float. class ) )
25452	assertTrue ( references. isEmpty ( ) )
25453	Assert. assertNotNull ( classUnderTest. getTitle ( ) )
25454	assertEquals ( 2, retDepartments. size ( ) )
25455	assertThat ( zhong, not ( hasKey ( city ) ) )
25456	assertEquals ( TestClass1. class. getName ( ), service. injectedLogger. getName ( ) )
25457	assertCombine ( test, testexpect, testparam )
25458	assertThat ( clock. now ( ). getTime ( ), is ( date. getTime ( ) ) )
25459	assertThat ( match, is ( "0.9.1" ) )
25460	assertTrue ( isEqual ( mockStopPoint, actualStopPoint ) )
25461	assertThat ( address, hasKey ( countryCode ) )
25462	assertEquals ( Status. NOT_FOUND, response. getClientResponseStatus ( ) )
25463	Asserts. check ( targetHosts. size ( ) == 1, "fail test" )
25464	Assert. assertEquals ( 2, map. size ( ) )
25465	Assert. fail ( "createDNASequenceWithQualityScores(null) expected IllegalArgumentException" )
25466	Assert. assertNotNull ( "No se ha generado el CSV", infoDocumento )
25467	assertEquals ( frameData1, frameData2 )
25468	assertEquals ( R. style. Theme_Default_Dialog, themeResId )
25469	Assert. assertEquals ( "SELECT INTERVAL '123-2' YEAR(3) TO MONTH\\nFROM DUAL;\\n", text )
25470	assertEquals ( depth, truncated. size ( ) )
25471	assertEquals ( 5, simpleArraySum. addArrayElements ( array ) )
25472	assertTrue ( expectedFilteredRecommendedItems. containsAll ( actualFilteredRecommendedItems ) )
25473	assertEquals ( asList ( trace ( mdcValues, message, args ) ), testLogger. getLoggingEvents ( ) )
25474	assertEquals ( 1, parameters. get ( "integerField_1" ) )
25475	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Parameter/>", elem. toXml ( ) )
25476	assertFalse ( SUT. isQuiescent ( ) )
25477	assertEquals ( Result. FAIL, type. apply ( item ) )
25478	assertTrue ( params == null )
25479	assertSame ( value, bound. anyOldType ( ) )
25480	assertThat ( jsonGeneratorParser. value ( ), is ( jsonResource ( "/io/sentry/marshaller/json/Exception3.json" ) ) )
25481	assertEquals ( RdfTestHelpers. parseRdf ( "\\n<http://www.wikidata.org/Q100> <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/Q10> ;\\n" + "<http://www.wikidata.org/prop/direct/P279> <http://www.wikidata.org/Q11>.\\n" ), model )
25482	this. assertTokenizesTo ( _t, json, jsonGen. images. toArray ( new String [ jsonGen. images. size ( ) ] ), jsonGen. types. toArray ( new String [ jsonGen. types. size ( ) ] ), jsonGen. datatypes. toArray ( new String [ jsonGen. datatypes. size ( ) ] ), incr, jsonGen. nodes. toArray ( new IntsRef [ jsonGen. nodes. size ( ) ] ) )
25483	assertEquals ( response. getContentAsByteArray ( ), validImage )
25484	assertArrayEquals ( new Item [ ] { FOURTH_ITEM, THIRD_ITEM }, actual. toArray ( new Item [ 2 ] ) )
25485	assertCentroid ( polyline, new Point2D ( 153, 28 ) )
25486	Assert. assertEquals ( "file is not in new resource", testingProperties. getProperty ( TestingPropertiesHelper. IRODS_SECONDARY_RESOURCE_KEY ), actual. getResourceName ( ) )
25487	assertThat ( ids, containsInAnyOrder ( patId, medId, moId ) )
25488	this. assertAnalyzesTo ( _a, "<http://dbpedia.org/resource/The_Kingston_Trio>", new String [ ] { "kingston", "trio", "the_kingston_trio", "http://dbpedia.org/resource/the_kingston_trio" }, new String [ ] { "word", "word", "word", "word" }, new int [ ] { 2, 1, 0, 0 } )
25489	assertNull ( selector. getProxy ( repo ) )
25490	assertThat ( driver. findElement ( By. id ( "item8.errors" ) ). getText ( ), is ( "This message comes from extended codelist notifying that value doesn't exist in sample codelist" ) )
25491	assertArrayEquals ( getPixels ( expected, 0, 0, expected. getWidth ( ), expected. getHeight ( ), null ), getPixels ( actual, 0, 0, actual. getWidth ( ), actual. getHeight ( ), null ) )
25492	assertThat ( status, equalTo ( 204 ) )
25493	assertThat ( XMLAdapter. XML_TIME. translate ( cal ), is ( expected ) )
25494	assertTrue ( stack2 == stack )
25495	assertEquals ( MinaTransporter. class, ExtensionLoader. getExtensionLoader ( Transporter. class ). getExtension ( name ). getClass ( ) )
25496	assertEquals ( notifier, result )
25497	assertSame ( copy. getEntityAProperty ( ), anotherEntity )
25498	assertNotNull ( result )
25499	assertEquals ( playerProperties. getNext ( ), stringArgumentCaptor. getValue ( ) )
25500	Assert. fail ( "The request to allocate application master should have failed" )
25501	assertEquals ( np. getNumberOfRoutes ( ), 5 )
25502	assertThat ( "Forgotten test?", providers, hasSize ( ItemStackTest. COMPOUND_MATERIALS. length - 2 ) )
25503	Assert. assertEquals ( newMaster. getId ( ), currentMaster. getId ( ) )
25504	assertEquals ( PROJECT_ID, options. projectId ( ) )
25505	assertEquals ( solutionsToBeReturned, result. size ( ) )
25506	assertTrue ( f. set )
25507	assertEquals ( noException, 1 )
25508	assertThat ( name. getSegments ( ), contains ( "lower" ) )
25509	assertThat ( javaDocComment, not ( containsString ( "(Required)" ) ) )
25510	Assert. assertEquals ( 2, result. size ( ) )
25511	assertThatThrownBy ( ( ) -> graphQlSchemaBuilder. postConstruct ( ) )
25512	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPdf, cmpPdf, destinationFolder, "diff_" ) )
25513	assertTrue ( "getMetric should return the metric value passed in.", Objects. equal ( basicMetric, victim. getMetric ( ) ) )
25514	assertTrue ( organizationalUnitController. canDeleteOrgUnit ( mock ( OrganizationalUnit. class ) ) )
25515	Assert. assertEquals ( 1, sync ( cache. size ( ) ). intValue ( ) )
25516	Assert. assertEquals ( ColorConstants. RED, p. getRenderer ( ). < TransparentColor > getProperty ( Property. FONT_COLOR ). getColor ( ) )
25517	assertEquals ( "Wrong # of triggers in incompleteActivationRule", 2, incompleteActivationRule. getTriggers ( ). size ( ) )
25518	Assert. assertTrue ( fsView. getFileStatus ( new Path ( "/" ) ). isDirectory ( ) )
25519	assertEquals ( "http://www.example.com", uriRecord. getUri ( ) )
25520	assertEquals ( 1, countValue )
25521	assertions. doesNotContainNull ( )
25522	assertThat ( text, is ( "label" ) )
25523	assertOut ( "x=\\"100\\"" )
25524	assertParseTree ( rootNode ( "", node ( "digits", Arrays. < String > asList ( ), "" ) ), tree )
25525	assertEquals ( nParquetRecords, nAvroRecord )
25526	assertThat ( "when allowed", withUserRestriction ( tlRule. getListener ( ), uRestr ). apply ( new GHPullRequest ( ) ), is ( true ) )
25527	Assert. assertNotNull ( doc )
25528	assertEquals ( expResult, result )
25529	assertSame ( locale, response. getLanguage ( ) )
25530	assertLookup ( breaks, values, srcImg, DataBuffer. TYPE_DOUBLE )
25531	assertEquals ( Integer. valueOf ( 84 ), wi. get ( ) )
25532	assertEquals ( 10.78f, doc. field ( "firstNumber" ) )
25533	outputValidator. getSurefireReportsXmlFile ( "TEST-EncodingInReportTest.xml" ). assertContainsText ( convertUnicodeToUTF8 ( "кириллице" ) )
25534	assertPersonProfile ( person )
25535	assertThat ( changeScript. getContent ( ), is ( "Hello\\nThere!\\n" ) )
25536	assertEquals ( expectedFiles, files )
25537	assertFalse ( tuple. delete ( "field" ) )
25538	Assert. fail ( "Did not find Service1 in the set of descriptors, the default file was not properly generated" )
25539	assertTrue ( query. getIndexConstraints ( SPATIAL_TEMPORAL_INDEX ). isEmpty ( ) )
25540	assertThat ( results, contains ( ( Matcher ) hasEntry ( "code", "WGT234" ) ) )
25541	assertTrue ( stmt instanceof DropTableNode )
25542	assertTrue ( rewrittenXml. contains ( "<Address>http://localhost:" + port + "/decoupled_endpoint</Address>" ) )
25543	assertAplicacion ( aplicacion )
25544	assertEquals ( ONE_ARG_TO_STRING, sink. result ( ) )
25545	assertXmlEquals ( getGreenwichXml ( Namespaces. GML ), marshal ( pm ), "xmlns:*" )
25546	assertThat ( target. parse ( ), is ( false ) )
25547	assertEquals ( "Hi test1", result )
25548	assertThat ( result, is ( "123" ) )
25549	assertThat ( the ( name, be ( equalTo ( "Soto" ) ). or ( be ( startsWith ( "B" ) ) ) ), is ( false ) )
25550	assertThat ( partition, is ( newPartition ( ) ) )
25551	assertTrue ( map. isEmpty ( ) )
25552	assertTrue ( response. succeeded ( ) )
25553	Assert. assertEquals ( 1, s, Math. ulp ( 1d ) )
25554	assertThrows ( ( ) -> instance. matcherFor ( matcher ) )
25555	assertThat ( ( double ) stopwatch. getMinimumDuration ( ). getDuration ( TimeUnit. MILLISECONDS ), is ( closeTo ( 50, 20 ) ) )
25556	Assert. assertTrue ( tempFontFile. exists ( ) )
25557	assertTrue ( Modifier. isPrivate ( constructor. getModifiers ( ) ) )
25558	Assert. assertEquals ( "0123456789", text )
25559	Assert. assertEquals ( "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>" + "<Enqueue>" + "<genericTag>" + "Some text" + "</genericTag>" + "</Enqueue>", elem. toXml ( ) )
25560	assertEquals ( 2, throughputStatistics. getUpdatesCount ( ) )
25561	assertEquals ( 2, list. size ( ) )
25562	assertNotNull ( "STATE is null", entity )
25563	assertTrue ( "there are scenario failures", results. getFailCount ( ) == 0 )
25564	assertEquals ( "org.supercsv.cellprocessor.CellProcessorAdaptor$NullObjectPattern", processor. next. getClass ( ). getName ( ) )
25565	assertOut ( "var /** @type {Array} */ a = ['Hello', 'World'].slice()" )
25566	assertEquals ( BigDecimal. valueOf ( ( 5 + 1 ) * 3 + ( 4 + 1 ) * 2 ), client. getValueOfAllFunds ( ) )
25567	assertEquals ( 0, map. size ( ) )
25568	assertEquals ( false, result )
25569	assertArrayEquals ( TestVectors. REGISTRATION_RESPONSE_DATA, encodedBytes )
25570	assertThat ( isExpectedData, is ( true ) )
25571	assertEquals ( io. motown. domain. api. chargingstation. ReservationStatus. UNAVAILABLE, reservationStatus )
25572	assertFalse ( stringBuffer. toString ( ). equals ( "" ) )
25573	assertEquals ( 65, executeTestMethod ( test, Integer. class, null, - 65 ). intValue ( ) )
25574	assertTrue ( copy. getAreNodeLabelsAcceptedByRM ( ) )
25575	assertEquals ( results. size ( ), count_addresses )
25576	assertNotNull ( connection. createChannel ( 1 ) )
25577	assertTrue ( "Expected new instance from reflected constructor to have its field set.", instance. bool )
25578	assertEquals ( "Expected 2 results!", 2, n )
25579	assertEquals ( PROBE, SegmentRegistry. read ( ID, Buffer. from ( new byte [ ] { } ) ) )
25580	assertEquals ( 2, post. getComments ( ). size ( ) )
25581	Assert. assertEquals ( 7.0, a. manhattanNorm ( ), Matrices. EPS )
25582	assertTrue ( future. isDone ( ) )
25583	Assert. assertTrue ( Arrays. equals ( configuration. getIntField ( ), result. getIntField ( ) ) )
25584	assertArrayEquals ( data. getBytes ( "UTF-8" ), decryptedBytes. getBytesDirect ( ) )
25585	assertNotNull ( results )
25586	assertNull ( resolved )
25587	assertEquals ( Response. SERVER_INTERNAL_ERROR, sipPhoneSender. getReturnCode ( ) )
25588	assertArrayEquals ( data, ( double [ ] ) deserialize. readObject ( double [ ]. class ), 0.0001 )
25589	assertThat ( MDC. getCopyOfContextMap ( ). keySet ( ), hasItems ( keys ) )
25590	assertions. isGreaterThan ( expected )
25591	assertNotNull ( result )
25592	Assert. assertTrue ( myRecordList. size ( ) == 1 )
25593	Assert. assertTrue ( subscriber. checkUpdates ( expectUpdates ) )
25594	assertEquals ( 13, buffer. position ( ) )
25595	Assert. assertFalse ( ModuleUtil. matchRequiredVersions ( openmrsVersion, requiredOpenmrsVersion ) )
25596	assertEquals ( 0, eventRealPaths. size ( ) )
25597	assertEquals ( expectedName, generated )
25598	assertEquals ( TaxonomyPrinter. getHashString ( taxonomy1 ), TaxonomyPrinter. getHashString ( taxonomy2 ) )
25599	assertThat ( repository, notNullValue ( ) )
25600	assertThat ( query ( "*test", "mnt-by" ), hasSize ( 0 ) )
25601	assertEquals ( "value", value )
25602	assertThat ( eventCaptor. getValue ( ). getConfiguration ( ), is ( config ) )
25603	assertEquals ( accountFromDatastoreList. size ( ), accountListToPersist. size ( ) )
25604	Assert. assertEquals ( 1, statementList. size ( ) )
25605	assertEquals ( PartitionedTableReplication. class, replication. getClass ( ) )
25606	assertNull ( options. objectFactory ( ) )
25607	assertEquals ( 5, value. asInt ( 10 ) )
25608	assertEquals ( body. toString ( ), "operation _timeout" )
25609	Assert. assertTrue ( readPoint. getGroupId ( ). longValue ( ) == 7999L )
25610	assertTrue ( observer. waitForCancelCalls ( 1, 1000, TimeUnit. MILLISECONDS ) )
25611	assertEquals ( response. getContentAsString ( ), 200, response. getStatus ( ) )
25612	assertNotNull ( personDemographics )
25613	assertFalse ( "Did not create DatagramSocket", socket == null || socket instanceof MulticastSocket )
25614	assertEquals ( 2, postComments. size ( ) )
25615	assertEquals ( NB_ROWS, results. length )
25616	assertEquals ( String. valueOf ( ReturnCode. NO_DIGITS. code ( ) ), eventCaptor. getValue ( ). getParameter ( "rc" ) )
25617	assertThat ( errors. toString ( ), containsString ( "No issues" ) )
25618	assertions. isEmpty ( )
25619	assertTrue ( inputStream. read ( )!= - 1 )
25620	assertTrue ( ca. getFallbackParameters ( ). equals ( ap2 ) )
25621	assertEquals ( 1, branch_conditions. size ( ) )
25622	assertNotNull ( "Pending access queue was not recreated after deserialization", session. getPendingAccessQueue ( ) )
25623	assertThat ( info. getServerPod ( SERVER ), sameInstance ( pod ) )
25624	Assert. assertTrue ( "world,peace". equals ( join ) )
25625	Assert. assertEquals ( JSONNegativeInfinity, result )
25626	assertTrue ( d1 instanceof PublicCloneable )
25627	assertionErrorCreator. multipleAssertionsError ( description, errors )
25628	assertEquals ( "{\\"version\\": \\"3.0.0\\", \\"gauges\\": {}, \\"counters\\": {}, \\"histograms\\": {}, \\"meters\\": {\\"foobar\\": {\\"count\\": 1, \\"m15_rate\\": 0.0, \\"m1_rate\\": 0.0, \\"m5_rate\\": 0.0, \\"mean_rate\\": 1, \\"units\\": \\"calls/second\\"}}, \\"timers\\": {}}", bson. toJson ( writerSettings ). replaceAll ( "\\"mean_rate\\": [0-9.]+", "\\"mean_rate\\": 1" ) )
25629	assertEquals ( "void f(void* target, void* p0) {\\n" + "    struct f_0001 {int m1;};\\n" + "    ((void (*)(struct f_0001)) target)(*((struct f_0001*)p0));\\n" + "}\\n", BridgeMethodCompiler. createBridgeCWrapper ( functionType. getReturnType ( ), functionType. getParameterTypes ( ), functionType. getParameterTypes ( ), "f" ) )
25630	assertThat ( "Output model created", outFile. exists ( ), is ( true ) )
25631	assertEquals ( 2, encounters. size ( ) )
25632	Assert. assertEquals ( json, writer. toString ( ) )
25633	assertTrue ( "Expect fault detail : " + expectedDetail, e. getMessage ( ). indexOf ( expectedDetail ) > - 1 )
25634	assertFalse ( question. canMarkAsSolution ( author ) )
25635	assertFalse ( c. isValidForSqlQuery ( ) )
25636	Assert. fail ( "unexpected fall through" )
25637	assertTrue ( entity. isPrivate ( ) )
25638	Assert. assertNull ( exception )
25639	Assert. assertEquals ( "OK", result )
25640	assertThat ( testStatus, is ( expectedStatus ) )
25641	assertNotNull ( jmxServer )
25642	assertFalse ( cnpjValidator. isEligible ( null ) )
25643	assertNotNull ( Aws. reader ( ). read ( ) )
25644	Assert. assertNull ( actual )
25645	assertEquals ( Arrays. asList ( "A", "B", "C", "D" ), results )
25646	assertNotNull ( entity. getId ( ) )
25647	Assert. assertEquals ( ServerParse. ROLLBACK, sqlType )
25648	Assert. assertTrue ( "Could not obtain read lock when write lock was held by the same thread!", readLockAcquired )
25649	assertEquals ( object1, actualObjects. get ( 0 ) )
25650	assertEquals ( expected, actualQuery )
25651	assertThat ( module. getModuleId ( ), is ( "reporting" ) )
25652	Assert. assertEquals ( "Hello Kermit!", response. getOut ( ). getBody ( String. class ) )
25653	assertEquals ( System. currentTimeMillis ( ) / 1000 + 500, subscription. getExpirationTime ( ), 10.0 )
25654	assertThat ( formatter. format ( PlainDate. of ( 1700, 1, 30 ) ), is ( "AD 1698/1700 (312)" ) )
25655	assertEquals ( 4, response. getBody ( ). getEntities ( ). size ( ) )
25656	assertThat ( flights, hasSize ( 0 ) )
25657	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPath, cmpPath, destinationFolder, diff ) )
25658	assertTrue ( nextState instanceof UpdateUser )
25659	Assert. assertEquals ( expected, actual )
25660	Assert. assertEquals ( expectedNode. toString ( ), pdoc. toString ( ) )
25661	assertEquals ( "{\\"name\\":\\"test\\",\\"data\\":{}}", gson. toJson ( aiEvent ) )
25662	assertEquals ( valorTest, valor )
25663	assertTrue ( "Trust manager should be created", ops. exists ( TRUST_MNGR_ADDRESS ) )
25664	assertResultSet ( res )
25665	assertEquals ( "unexpected number of expected problems", 0, equeue. size ( ) )
25666	assertResult ( session )
25667	assertEquals ( "99646257", orderId )
25668	Assert. assertEquals ( TestUtil. toArrayList ( p1, p3, p2, p4 ), list )
25669	assertThat ( result. size ( ), is ( 0 ) )
25670	observer. assertObservations ( "@Initialized HttpSession", session )
25671	Assert. assertEquals ( "[xwiki:XWiki.hmccoy, edit]", c. toString ( ) )
25672	assertLQEquals ( A, lq. factor ( new DenseMatrix ( A ) ) )
25673	assertEquals ( expecteds, actuals )
25674	assertEquals ( 8080, toTest )
25675	assertEquals ( 2, allPlanets. size ( ) )
25676	assertEquals ( expResult, result )
25677	assertTrue ( result. isResultOK ( ) )
25678	context. assertTrue ( res. failed ( ) )
25679	assertEquals ( setOf ( "ashlux@gmail.com", "mickeymouse@disney.com" ), internetAddresses )
25680	assertEquals ( required, field. isRequired ( ) )
25681	assertEquals ( NOT_DECODED, map, object. getObjects ( ) )
25682	assertEquals ( "foo", field. getValue ( ) )
25683	assertFailureLogPresent ( instance, "failingTask" )
25684	assertEquals ( expectedPolicy, builtPolicy )
25685	assertNull ( graph. getOWLClassByIdentifier ( "U:24" ) )
25686	assertNull ( primaryKey )
25687	Assert. assertEquals ( 403, response. getStatus ( ) )
25688	testHelper. assertTaskListenerTimerJobCreated ( "userTask" )
25689	assertEquals ( "/component=myComp/version=1.2", dispatchCriteria )
25690	Assert. assertTrue ( "Non-optimal coverage: ", best. getCoverage ( ) < 1.0 )
25691	Assert. assertEquals ( "select babyfish_shared_alias_0, babyfish_not_shared_alias_1 " + "from org.babyfish.hibernate.jpacriteria.Company babyfish_shared_alias_0 " + "inner join babyfish_shared_alias_0.departments babyfish_not_shared_alias_1 " + "on babyfish_not_shared_alias_1.name like :babyfish_literal_0", get ( template, JPQL_FIELD ) )
25692	Assert. assertEquals ( uri. stringValue ( ), "http://apache.org/example" )
25693	assertContentSame ( rs, rc, columnParam1 )
25694	assertThat ( result, is ( nullValue ( ) ) )
25695	assertSame ( expected, actual )
25696	assertEquals ( documento, documentoCreado )
25697	assertNotNull ( result )
25698	assertEquals ( 0, p. getStart ( ) )
25699	assertThat ( future, is ( DisabledFuture. INSTANCE ) )
25700	assertEquals ( expectedQuery, actualQuery )
25701	assertSame ( s, Delegates. getRoot ( s, String. class ) )
25702	assertThat ( FileUtils. readFileToString ( new File ( tempCopyFile ) ), CoreMatchers. is ( cp_file. asText ( ) ) )
25703	assertNotNull ( id )
25704	assertEquals ( "zz:abs", stringForRDFNode ( rdfNod, getContext ( ) ) )
25705	Assert. assertEquals ( ScoreLangConstants. SUCCESS_RESULT, result )
25706	Assert. assertEquals ( 6, forest. getRoots ( ). size ( ) )
25707	assertEquals ( "abc, 34\\n", found )
25708	Assert. assertEquals ( "Invalid HUs retrieved", Collections. emptyList ( ), huSelectModel. createHUQueryBuilder ( ). setErrorIfNoHUs ( false, null ). list ( ) )
25709	assertThat ( longestIncreasingPath ( matrix ), Matchers. is ( 4 ) )
25710	assertEquals ( 4326, rs. getInt ( 1 ) )
25711	assertThat ( build, is ( notNullValue ( ) ) )
25712	assertEqualsIgnoreLineEnding ( output, "{\\n" + "  \\"obj\\" : {\\n" + "    \\"b\\" : \\"ho\\",\\n" + "    \\"a\\" : \\"hey\\"\\n" + "  },\\n" + "  \\"arr\\" : [ \\"hey\\", \\"ho\\" ],\\n" + "  \\"double\\" : 1.2,\\n" + "  \\"int\\" : 42,\\n" + "  \\"biginteger\\" : 118059162071741130342442,\\n" + "  \\"long\\" : 1099511627776,\\n" + "  \\"boolean\\" : true,\\n" + "  \\"string\\" : \\"Arthur Dent\\"\\n" + "}" )
25713	assertEquals ( "void ;\\n", found )
25714	assertEquals ( "The status code of the response is not the expected value.", Status. OK. getStatusCode ( ), response. getStatusCode ( ) )
25715	Assert. assertTrue ( results. isEmpty ( ) )
25716	assertTrue ( isSuccess )
25717	assertUFTFields ( fields )
25718	assertNotEquals ( 0, iri. compareTo ( null ) )
25719	assertThat ( dispatcher. dispatchQueues. keySet ( ), is ( empty ( ) ) )
25720	assertEquals ( "LOCAL:    \\nGR Frau\\nUserFN UserLN\\naddr2\\naddr1\\n121212 City1\\nGermany", bpartnerBL. mkFullAddress ( bPartner, bpLocation, user, null ) )
25721	Assert. assertEquals ( 43, a. getCalculatedAge ( ) )
25722	assertEquals ( 111, sink. getTotalUsers ( ) )
25723	mockEndpoint. assertIsSatisfied ( )
25724	assertEquals ( "urn:cxf", action )
25725	assertEquals ( 2, urls. length )
25726	assertNotNull ( netrc )
25727	Assert. assertEquals ( StatusCodes. BAD_REQUEST, result. getStatusLine ( ). getStatusCode ( ) )
25728	assertEquals ( webSocketHandler. calculateHeaderSize ( 0 ), 0 )
25729	assertNotNull ( geomConverter )
25730	assertFalse ( s instanceof Cloneable )
25731	assertEquals ( "Strategy decision not expected", NodeProvisioner. StrategyDecision. PROVISIONING_COMPLETED, decision )
25732	assertThat ( t1. getO ( ), is ( object ) )
25733	assertArg ( date -> date. equals ( LocalDate. of ( 2015, 9, 26 ) ) )
25734	Assert. assertEquals ( false, handler. getAcceptAnonymous ( ) )
25735	assertThat ( actual, is ( equalTo ( expectation ) ) )
25736	Assert. assertEquals ( "C7 (indexPath = 1, namePath = C7)\\n" + "    O1 (indexPath = 1.1, namePath = C7->O1)\\n" + "    O2 (indexPath = 1.2, namePath = C7->O2)\\n" + "        Na1 (indexPath = 1.2.2, namePath = C7->O2->Na1)\\n" + "    C6 (indexPath = 1.3, namePath = C7->C6)\\n" + "        C5 (indexPath = 1.3.1, namePath = C7->C6->C5)\\n" + "            C4 (indexPath = 1.3.1.1, namePath = C7->C6->C5->C4)\\n" + "                C3 (indexPath = 1.3.1.1.1, namePath = C7->C6->C5->C4->C3)\\n" + "                    C2 (indexPath = 1.3.1.1.1.1,
25737	assertTrue ( mapper. exists ( index ) )
25738	Assert. assertEquals ( "value of one", one, value )
25739	assertThat ( DateInterval. parseISO ( "P0D/2012-01-01" ), is ( expected ) )
25740	assertThat ( irsApplicable, equalTo ( true ) )
25741	assertTrue ( payload. needsBuild ( getProject ( ) ) )
25742	assertEquals ( HttpStatus. NO_CONTENT, responseEntity. getStatusCode ( ) )
25743	assertEquals ( 500, status )
25744	assertEquals ( query, query2 )
25745	assertEquals ( "Rendering the document #1 in version 1 of type product from index catalog", new String ( response. content ( ), "UTF-8" ) )
25746	assertBundleState ( Bundle. INSTALLED, bundleA. getState ( ) )
25747	assertThat ( I18nUtil. getLocale ( ), is ( Locale. ENGLISH ) )
25748	Assert. assertNull ( "Message was returned but internal list should have been empty", sqsMessage )
25749	assertEquals ( 2, multiMap. allValues ( ). size ( ) )
25750	assertEquals ( "string[]", param. getRuntimeType ( ) )
25751	assertEquals ( 1, dao. getLocationsHavingAllTags ( list1 ). size ( ) )
25752	assertEquals ( "Length of array is zero", 0, result. length )
25753	assertThat ( infos. length, is ( 0 ) )
25754	arrays. assertDoesNotHaveDuplicates ( description, actual )
25755	assertSqlCanBeParsedAndDeparsed ( stmt )
25756	assertTrue ( output, output. matches ( "(?s).*Ignoring possible recursion.*" ) )
25757	XMLAssert. assertXpathEvaluatesTo ( String. valueOf ( -- childrenCountBefore ), "count(/configuration/*)", result. asXML ( ) )
25758	assertSame ( result1, result )
25759	assertEquals ( 3, results. size ( ) )
25760	assertNull ( primaryKeyDesc )
25761	assertEquals ( "The view paths string is incorrect", "tmp", scm. getViewPaths ( null, null, launcher ) [ 0 ] )
25762	assertTrue ( TypeUtils. shouldCreateNewClass ( property, null ) )
25763	assertEquals ( BPResultType. PASS, testResult. getResultType ( ) )
25764	Assert. assertNotNull ( version )
25765	assertEquals ( expResult, result )
25766	Assert. assertTrue ( handler. disconnectCount > 0 )
25767	assertFalse ( room. containsKey ( "etag" ) )
25768	assertValid ( DocType. XHTML10_STRICT )
25769	assertDefault ( property. getValue ( ) )
25770	assertThat ( actual, is ( expected ) )
25771	assertEquals ( arr, resultArr )
25772	builderUnderTest. recorder. assertInvocation ( "removePropertyFilters", Arrays. asList ( testFilter1, testFilter2 ) )
25773	assertEquals ( "Testing SerializedDocumentForm in SessionDocumentService", "dummy", new String ( dummySessionDocument. getSerializedDocumentForm ( ) ) )
25774	assertNotNull ( m )
25775	assertTrue ( isValid )
25776	assertNotNull ( target )
25777	assertEquals ( NL + "  Pre[1] xmlns=\\"A\\"" + NL + "    Pre[4] xmlns=\\"D\\"" + NL + "    Pre[6] xmlns=\\"F\\"", context. data ( ). nspaces. toString ( ) )
25778	assertTrue ( expectedOutput. compare ( output, TOLERANCE ) )
25779	assertEquals ( "{f1:'a'}", x. getExample ( ) )
25780	Assert. assertEquals ( "A \\nB \\nC \\nD", text )
25781	assertNotNull ( "Obfuscated data should not be null", obfuscatedDataWrapper )
25782	assertParseTree ( rootNode ( "hello", node ( "hi", null, "hello" ) ), tree )
25783	assertEquals ( "ab��猫�����������盲枚眉�cdEf", returnValue )
25784	assertMatch ( e, s )
25785	Assert. assertEquals ( "dXNlcg==", actual )
25786	assertEquals ( "Should be a 400 Bad Request!", BAD_REQUEST. getStatusCode ( ), getStatus ( method ) )
25787	assertEquals ( newLanguage, withLanguage. getLanguage ( ) )
25788	Assert. assertEquals ( ManagedCloudSdk. newManagedSdk ( ). getSdkHome ( ), sdk. getSdkHome ( ) )
25789	Assert. assertTrue ( deleted. isVoided ( ) )
25790	assertEquals ( e, r )
25791	assertThat ( result, hasSize ( 0 ) )
25792	assertEquals ( ( Long ) 0L, ( Long ) cd1. getColumnLength ( ) )
25793	assertEquals ( "ADDED WHEN DISCONNECTED TO MAP1", map1. get ( 11 ) )
25794	assertThat ( this. converter. convert ( this. source, this. sourceType, targetType ), is ( equalTo ( this. converted ) ) )
25795	assertTrue ( result. size ( ) > 0 )
25796	assertEquals ( true, passedWaitForStartCall. await ( 10, TimeUnit. SECONDS ) )
25797	assertTrue ( "Class must contain field with hairy signature", loadedClass. fields ( ). contains ( myField ) )
25798	assertThat ( emptyIntermediate. getSize ( ), is ( 0L ) )
25799	Assert. assertEquals ( definitions, Collections. emptyList ( ) )
25800	assertEquals ( expected, actual )
25801	assertEquals ( pp. getValue ( ), new Payload < > ( "error 4 test error" ). getValue ( ) )
25802	assertThat ( encryptor. checkPassword ( testPassword, null ), is ( false ) )
25803	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE DEPTH(nodes) <= 3" ) )
25804	assertEquals ( true, result )
25805	assertEquals ( getLoggingEvent ( ). getFormattedMessage ( ), "test; key=\\"value\\"; otherKey.Engine.name=\\"V8\\"" )
25806	Assert. assertEquals ( expectedStringLast, resultString )
25807	assertTrue ( underTest. validate ( "student", idsToValidate ). containsAll ( idsToValidate ) )
25808	assertThat ( event. isCancelled ( ), equalTo ( false ) )
25809	assertEquals ( "Invalid argument passed", value, supportedArgument )
25810	assertEquals ( expected, appendable. toString ( ) )
25811	TestCase. assertTrue ( matcher. match ( new C ( 1, 2, 3, 4 ) ) )
25812	assertNotNull ( result )
25813	Assert. fail ( "It succeeded while an Exception is expected: " + msg. getContent ( ) )
25814	Assert. assertEquals ( vXLong. getValue ( ), vXLong1. getValue ( ) )
25815	assertEquals ( - ONE_HOUR_IN_MILLIS, ts. getTime ( ) )
25816	assertEquals ( "Base for strings is wrong", "3", parsed )
25817	Assert. assertFalse ( "DefaultPooledObject.getIdleTimeMillis() returned a negative value", negativeIdleTimeReturned. get ( ) )
25818	assertEquals ( "Base for longs is wrong", "3", parsed )
25819	assertNotSame ( pm, searchField. getFindPopupMenu ( ) )
25820	assertThatSql ( query, is ( "SELECT * FROM table AS nodes " + "WHERE NAME(nodes) > $literal" ) )
25821	assertEquals ( "Select with exists check", expectedSql, testDialect. convertStatementToSQL ( stmt ) )
25822	assertTrue ( true )
25823	Assert. assertEquals ( "SELECT s1\\nFROM t1\\nWHERE s1 > ALL (SELECT s1\\n\\tFROM t2);", text )
25824	assertThat ( instance. getCreationDate ( ), is ( dateTime ) )
25825	classes. assertIsInterface ( someInfo ( ), actual )
25826	assertThat ( entity. ver, equalTo ( 1L ) )
25827	Assert. assertArrayEquals ( new String [ ] { "*", "*" }, toStringArray ( tokens ) )
25828	assertTrue ( rs. next ( ) )
25829	assertThat ( parse ( contents ), contains ( map ( "a", "'HELLO'", "b", "'hello'" ) ) )
25830	Assert. assertEquals ( 1, arrays. size ( ) )
25831	assertEquals ( userDao. getUsernames ( usernamePattern, resultCount ). size ( ), 2 )
25832	assertEquals ( Response. Status. OK. getStatusCode ( ), target. request ( MediaType. TEXT_PLAIN ). get ( ). getStatus ( ) )
25833	Assert. assertTrue ( contains )
25834	assertEquals ( uri, DockerConnectorConfiguration. DEFAULT_DOCKER_MACHINE_URI )
25835	assertTrue ( l. isEmpty ( ) )
25836	assertThat ( value, is ( "value1 value2" ) )
25837	Assert. assertTrue ( foundToCharArray )
25838	Assert. assertEquals ( 412, stringResponse. getStatus ( ) )
25839	assertListTEquals ( listOneTwo, 1, 2, 3, 4, 5 )
25840	assertEquals ( "p�ed 3 dny 15 hodinami 38 minutami", t. format ( durations ) )
25841	assertEquals ( o, result. getValue ( ) )
25842	assertTokensEqual ( of ( integer ( 1 ), PLUS, integer ( 2 ) ), tokens )
25843	assertNotEquals ( eAdded, eRetrieved )
25844	assertThat ( factory. create ( value ), is ( Long. valueOf ( value. getTimeInMillis ( ) ) ) )
25845	assertTrue ( h. getNewURL ( ). equals ( "/NewSimpleUrl" ) )
25846	assertTrue ( cut. getAttributes ( ). isEmpty ( ) )
25847	assertNotNull ( schema )
25848	assertEquals ( bestIndividual. toString ( ), bicf. getChromosome ( ). toString ( ) )
25849	assertEquals ( 0, ebXML. getSlots ( ). size ( ) )
25850	assertTrue ( validAnagram. isAnagram ( s, t ) )
25851	assertEquals ( "[1080:0:0:0:8:800:200c:417a]:80", StringUtils. formatSocketAddress ( inetSocketAddress ) )
25852	assertFalse ( wc. amContainer. isInErrorState ( ) )
25853	assertEquals ( "Series 1", d1. getSeriesKey ( 0 ) )
25854	assertThat ( pauseLength, greaterThanOrEqualTo ( 100L ) )
25855	assertTrue ( "i=" + i + " d=" + d,! nnList. isEmpty ( ) )
25856	assertEquals ( 1, x. size ( ) )
25857	Assert. assertTrue ( pss. toString ( ). contains ( "123" ) )
25858	assertEquals ( expectedBindingString, relativizedVolumeString )
25859	assertThat ( authorizationRequest1, is ( authorizationRequest2 ) )
25860	Assert. assertEquals ( 0.0, correlation. correlation ( xArray, yArray ), Double. MIN_VALUE )
25861	_mock. assertIsSatisfied ( )
25862	Assert. assertEquals ( "Connect to http://localhost [/1.2.3.4] timed out", ctx. getMessage ( ) )
25863	assertEquals ( "unexpected number of expected problems", 0, equeue. size ( ) )
25864	Assert. assertThat ( list, Is. is ( Arrays. asList ( "1", "1_1", "1_2", "1_3", "1_4", "2_1", "2_2", "2_3", "2_4", "3", "4", "5", "6", "7" ) ) )
25865	assertAlias ( sql, columnParam, "nor", param )
25866	Assert. assertEquals ( expectedMap, filtered )
25867	Assert. assertEquals ( TEST. length, objects. size ( ) )
25868	assertThat ( builder, hasToString ( "<script type=\\"text/javascript\\">/* <![CDATA[ */\\n" + "(function() {var s = document.createElement('script')," + "t = document.getElementsByTagName('script')[0];" + "s.type = 'text/javascript';" + "s.async = true;" + "s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';" + "t.parentNode.insertBefore(s, t);})();\\n" + "/* ]]> */</script>" ) )
25869	assertArrayEquals ( expected, coeffs )
25870	assertEquals ( 0.3243, builder. bipartitionThreshold, 0.001 )
25871	this. assertIndices ( im ( - 1, 0 ), im ( 0, 1 ), im ( 1, 2 ), im ( 2, 3 ), im ( 3, 4 ) )
25872	Assert. assertEquals ( 6, result. getTotalHits ( ) )
25873	assertThat ( spec, is ( greaterThan ( 0 ) ) )
25874	assertOut ( "var foreachiter0_target = a;\\nfor (var foreachiter0 in foreachiter0_target.propertyNames()) \\n{\\nvar p = foreachiter0_target.getProperty(foreachiter0);\\n\\n  var /** @type {number} */ i = (p.length) >> 0;}\\n" )
25875	Assert. assertNull ( new CompareTool ( ). compareByContent ( destinationFolder + filename, sourceFolder + "cmp_" + filename, destinationFolder, "diff_" ) )
25876	assertFalse ( connected )
25877	assertEquals ( "Resolved string form was incorrect ", sql, outerQuery. toString ( ) )
25878	assertEquals ( entity. getEntityID ( ), "mmoayyed.example.net" )
25879	assertThat ( event, is ( expected ) )
25880	assertThat ( url1. toFullString ( ), anyOf ( equalTo ( "dubbo://admin:hello1234@10.20.130.230:20880/context/path?version=1.0.0&application=morgan" ), equalTo ( "dubbo://admin:hello1234@10.20.130.230:20880/context/path?application=morgan&version=1.0.0" ) ) )
25881	Assert. assertTrue ( checked. get ( ) )
25882	assertEquals ( "Hello there world", doc. select ( "div > *" ). text ( ) )
25883	assertEquals ( 9.0060123, ceosReader. readFn ( 16 ), 1E-10 )
25884	assertTrue ( start_query. isSuccessful ( ) )
25885	assertEquals ( authorities, seessionAuthoritys )
25886	assertHelpLines ( "Option                    Description        ", "------                    -----------        ", "-a <Integer: numerical>   some value you need", EMPTY )
25887	assertSame ( config, uriTools. resolveUri ( PROFILE_URI. resolve ( "configuration/Hello/" ), wfBundle ) )
25888	assertEquals ( encoded. length, fixture. prepareToEncode ( context ) )
25889	assertTrue ( testExpressionUpdate. hasExpressionBeenCalled ( ) )
25890	assertEquals ( reduce, pipes. getReduce ( ) )
25891	Assert. fail ( "Unterminated value accepted" )
25892	assertProject ( workspaceProject )
25893	assertEquals ( VALUE, jwt2. getJWTClaimsSet ( ). getSubject ( ) )
25894	assertEquals ( "Incorrect hash", hash, token. getHash ( ) )
25895	assertThat ( isValid, is ( false ) )
25896	Assert. assertThat ( existing, CoreMatchers. nullValue ( ) )
25897	assertEquals ( "Test message \\\\ab c", result )
25898	assertEquals ( 0, tasks. size ( ) )
25899	Assert. assertEquals ( Status. NOT_FOUND. getStatusCode ( ), resp. getStatus ( ) )
25900	Assert. assertFalse ( "this should be a file, not a directory", isDir )
25901	Assert. fail ( e. getMessage ( ) )
25902	assertTrue ( EqualsBuilder. reflectionEquals ( config, config2, "keyStore", "ourCertificate" ) )
25903	assertEquals ( 123L, book. getId ( ) )
25904	Assert. assertEquals ( "Setting a null type should default to Vertical", WTree. Type. VERTICAL, tree. getType ( ) )
25905	assertUsers ( ldapUserInfo, false, false, false, false )
25906	assertTrue ( page. asText ( ). contains ( "could not be understood as a percentage" ) )
25907	Assert. assertFalse ( policy. isResponseCacheable ( request, response ) )
25908	assertThat ( building. isPresent ( ), is ( false ) )
25909	Assert. assertEquals ( range. getQualifyingPageNums ( 15 ), Arrays. asList ( 3, 5, 7, 9, 11, 13 ) )
25910	TestUtils. assertInvalidParameters ( victim )
25911	assertEquals ( "datastax driver config", IOContainer. DriverType. DATASTAX, driver )
25912	Assert. assertFalse ( result )
25913	assertEquals ( shexc. getExitCode ( ), 0 )
25914	assertEquals ( "VOID", verifyType )
25915	mock. assertIsNotSatisfied ( )
25916	assertEquals ( "zzzcatzzzdogzzz", mat. replaceFirst ( "cat" ) )
25917	assertArrayEquals ( TEObjectUtil. TE_LSP_BANDWIDTH_2, ByteArray. getAllBytes ( output ) )
25918	assertThat ( new PullRequestApproval ( Config. builder ( ). requiredReviewers ( newArrayList ( "user1", "user2" ) ). requiredReviews ( 2 ). build ( ), utils ). isPullRequestApproved ( pr ), is ( true ) )
25919	assertThat ( "String", object, is ( value ) )
25920	assertNotNull ( Command. reader ( ). read ( ) )
25921	assertTrue ( result. passedValidation ( ) )
25922	assertNotNull ( sessionManager. getValue ( ) )
25923	assertEquals ( "Sol " + i, results [ i ], minesweeper. store. toStringOrderedVars ( ) )
25924	assertEquals ( Preconditions. class, type )
25925	assertEquals ( org. raml. jaxrs. generator. builders. extensions. resources. TrialResourceClassExtension. class, list. iterator ( ). next ( ) )
25926	Assert. assertTrue ( "Incorrect file types returned", CollectionUtils. isEqualCollection ( Arrays. asList ( types1 ), widget. getFileTypes ( ) ) )
25927	assertThat ( keyword, notNullValue ( Keyword. class ) )
25928	assertEquals ( expected, reference. get ( ) )
25929	assertNull ( extr. extract ( attrDetail, null, document ) )
25930	assertEquals ( ( short ) 8, result. getShortValue ( ) )
25931	assertTrue ( "correct vocab not found", test )
25932	assertTrue ( e instanceof E_LangMatches )
25933	assertEquals ( "Only one property is accepted [" + i + "]", 1, ss. get ( 0 ). size ( ) )
25934	assertThat ( results, is ( new String [ ] [ ] { { "a", null }, { "A", "B" } } ) )
25935	assertThat ( JobWatcher. getOrCreateFor ( domain ), not ( sameInstance ( oldWatcher ) ) )
25936	assertEquals ( SyncStatus. SYNCHRONIZED, sample. getRemoteStatus ( ). getSyncStatus ( ) )
25937	assertNotNull ( Service. reader ( ). read ( ) )
25938	assertEquals ( new TypeTag ( List. class, new TypeTag ( String. class ) ), actual )
25939	assertThat ( threadCount, is ( 7 * AVAILABLE_PROCESSORS ) )
25940	assertEquals ( "Hash is invalid", Blake2_DIGEST_EMPTY_STRING, result )
25941	assertEquals ( "Wrong count ones", count, bitseq. countOnes ( ) )
25942	assertEquals ( 1, reportResults. size ( ) )
25943	assertEquals ( 0, taskQuery. list ( ). size ( ) )
25944	assertThatReassembledMessageEqualsOriginalMessage ( result )
25945	Assert. assertEquals ( 3, collector. actualResults. size ( ) )
25946	assertTrue ( mergedConfigurationService. fetchMergedConfiguration ( getWorkerUuid ( ) ). getPausedExecutions ( ). contains ( pausedExecutionId ) )
25947	Assert. assertTrue ( queueResponse. isOk ( ) )
25948	Assert. assertEquals ( employee4. getId ( ), q. getSingleResult ( ) )
25949	assertEquals ( vutUserId, fromBearer. getUserId ( ) )
25950	assertEventLogEquals ( createdState, retrievedState )
25951	assertEquals ( 3, counter. getBeforeFileTreeWalkCount ( ) )
25952	assertEquals ( 0, modifyRef. atomicGet ( ) )
25953	assertEquals ( 2, _offeredTypes. length )
25954	assertEquals ( "sampleLib1Description", functionLibrary. getDescription ( ) )
25955	assertEquals ( var1, "test value" )
25956	assertThat ( roles, contains ( "admin", "another" ) )
25957	Assert. assertEquals ( "4=4(2=2,)", tree. toString ( ) )
25958	assertEquals ( "TokenExpirationDate passed into constructor not returned by getTokenExpirationDate()", expireDate, sut. getTokenExpirationDate ( ) )
25959	Assert. assertEquals ( 0, deviceGroupRegistry. getAllGroupIds ( ). size ( ) )
25960	assertEquals ( "a c 3 c y 2 * [] + [] []", this. codeGenerator. getPostFixExpression ( ) )
25961	Assert. assertTrue ( "duplicate variant names were not removed", bn. getVariants ( ). size ( ) == 1 )
25962	Assert. assertNotNull ( addressResultsDto )
25963	assertEquals ( - 1, decoder. read ( ) )
25964	assertEquals ( 0, values. get ( new MultivectorComponent ( "out", 0 ) ), 10E-3 )
25965	assertEquals ( "Input value json should match output value json", objectMapper. readTree ( inputJson ), objectMapper. readTree ( outputJson ) )
25966	assertNotNull ( processInstance. getId ( ) )
25967	assertEquals ( 9876543211L, x. value )
25968	Assert. assertTrue ( options. shouldDeleteMissing ( ) )
25969	assertTrue ( true )
25970	assertTrue ( issues. size ( ) > 0 )
25971	assertEquals ( expResult, result, 0.001 )
25972	Assert. assertFalse ( facetFactory. install ( faceted, facetFactory. create ( faceted, MockExceptionFacet. class ) ) )
25973	assertThat ( backingMap. size ( ), is ( 2 ) )
25974	Assert. assertArrayEquals ( REDIRECT_IPV6, output. array ( ) )
25975	assertEquals ( "Hello ÿþü\\n" + "H
25976	ITUtils. assertReceivingDifferentRows ( proxy, key, ROW_COUNT + 1 )
25977	assertEquals ( BPResultType. FAIL, testResult. getResultType ( ) )
25978	assertEquals ( "SELECT XMLCAST(XMLQUERY('/a/b' PASSING convert('<a><b>1</b></a>', xml)) AS integer)", TestProcessor. helpParse ( sql ). toString ( ) )
25979	assertEquals ( CambriaConstants. kBasePath + "bar/group/id", result )
25980	assertTrue ( result [ 0 ]!= result [ 1 ] )
25981	assertThat ( eventsFired. size ( ), equalTo ( 3 ) )
25982	assertEquals ( StatusCode. STREAM_NOT_FOUND, response. getCode ( ) )
25983	assertFalse ( indexFilterHook. indexIsApplicable ( indexRecordFilter, Table. RECORD. name, null, newRecord ) )
25984	assertThat ( result. toString ( ), is ( equalTo ( "H W" ) ) )
25985	Assert. fail ( e. getMessage ( ) )
25986	assertSizeIs ( 12 )
25987	assertThat ( context, hasLog ( "1" ) )
25988	assertEquals ( DEFAULT_GRAPHITE_IPPORT, backendAlarm. getGraphiteBaseUrl ( ) )
25989	assertThat ( this. runtimeService. createProcessInstanceQuery ( ). count ( ), is ( 0L ) )
25990	assertEquals ( "none condition serialization is wrong", expected, actual )
25991	assertEquals ( ok, result )
25992	Assert. assertEquals ( 10, E. withGroup ( "a" ). size ( ) )
25993	assertEquals ( annotations, annotationsOnMethod )
25994	assertTrue ( result. isEmpty ( ) )
25995	assertEquals ( results, linkedLists )
25996	assertTrue ( imagePart instanceof ImagePngPart )
25997	assertTrue ( resultComparator. compare ( fd1, fd2 ) < 0 )
25998	Assert. fail ( "create bucket under non-existing mount point should fail" )
25999	bean. assertAllInjectionsDone ( )
26000	Assert. assertEquals ( putMap, newMap )
26001	assertEquals ( "Inputstream to string", fileContent. toString ( ) )
26002	Assert. assertEquals ( obj, o )
26003	Assert. assertTrue ( result. getNumElementsProcessed ( ) == 0 )
26004	assertEquals ( expResult, stringBuilder. toString ( ) )
26005	assertTrue ( PureEvaluator. isUnpureCacheEmpty ( ) )
26006	assertEquals ( feather. instance ( SingletonObj. class ), feather. instance ( SingletonObj. class ) )
26007	assertThat ( ( DefinitionRegistry ) properties. getDefinitionRegistry ( ), equalTo ( registry ) )
26008	Assert. assertEquals ( AuthorizationResult. denied ( ). getResult ( ), result. getResult ( ) )
26009	assertEquals ( new int [ ] { 1, 0, 1 }, res, 4 + 2 )
26010	assertTrue ( getExpectedErrorMsg ( ), result )
26011	Assert. fail ( message )
26012	assertArrayEquals ( resultAddress, address )
26013	assertEquals ( expectedQuery, query )
26014	assertEquals ( "0.5", policy. getRate ( ). toString ( ) )
26015	assertThat ( converted, is ( notNullValue ( ) ) )
26016	assertEquals ( expResult, result )
26017	assertThat ( initiativeInfo. isVotingStarted ( TODAY ), is ( true ) )
26018	Assert. assertFalse ( reader. hasNext ( ) )
26019	assertNotNull ( result )
26020	assertEquals ( "Dreadnought Acoustic", mt. getName ( ) )
26021	assertNotNull ( test )
26022	assertThat ( results. contains ( additional ), is ( true ) )
26023	assertEquals ( "In July, GM said its electric Chevrolet Volt will be sold in the United States at $41,000 -- $8,000 more than its nearest competitor, the Nissan Leaf.", p. text ( ) )
26024	assertThat ( basicDBObject. get ( "creationDate" ), is ( ( Object ) now. getMillis ( ) ) )
26025	arrays. assertContainsOnly ( someInfo ( ), actual, emptyArray ( ) )
26026	assertThat ( html, containsString ( "<script>\\n" + "    if (time < 100) {\\n" + "        greeting = \\"Good morning\\";\\n" + "    } else if (time < 200) {\\n" + "        greeting = \\"Good day\\";\\n" + "    } else {\\n" + "        greeting = \\"Good evening\\";\\n" + "        if (time < 300) {\\n" + "            // more if\\n" + "        } else {\\n" + "            // another embedded else\\n" + "        }\\n" + "    }\\n" + "</script>" ) )
26027	assertThat ( props. get ( propertyKey ), is ( ( Object ) propertyValue ) )
26028	Assert. fail ( "exception expected" )
26029	assertNotNull ( api )
26030	assertNull ( x. f1 )
26031	assertThat ( mentions, hasItem ( mentionedIssue ( 0, 3, 33 ) ) )
26032	assertTrue ( "Result XML does not match expected", monitoring. matches ( "(?s).*<SituationExchangeDelivery><Situations><PtSituationElement><SituationNumber>MTA NYCT_1</SituationNumber><Summary xml:lang=\\"EN\\">summary</Summary><Description xml:lang=\\"EN\\">description</Description><Affects><VehicleJourneys><AffectedVehicleJourney><LineRef>MTA NYCT_B63</LineRef><DirectionRef>0</DirectionRef></AffectedVehicleJourney><AffectedVehicleJourney><LineRef>MTA NYCT_B63</LineRef><DirectionRef>1</DirectionRef></AffectedVehicleJourney><AffectedVehicleJourney><LineRef>MTA NYCT_S55</LineRef><DirectionRef>0</DirectionRef></AffectedVehicleJourney><AffectedVehicleJourney><LineRef>MTA NYCT_S55</LineRef><DirectionRef>1</DirectionRef></AffectedVehicleJourney></VehicleJourn
26033	assertEquals ( true, service. processMessage ( null, message. getBytes ( ) ) )
26034	assertEquals ( "Expected 3 results!", 3, n )
26035	assertNotNull ( e )
26036	assertEquals ( "<span>Hello <div>there</div> <span>now</span></span>", TextUtil. stripNewlines ( doc. body ( ). html ( ) ) )
26037	assertSame ( expectedConnection, actualConnection )
26038	assertNotNull ( SyncStream. reader ( "ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ). read ( ) )
26039	assertThat ( dummyConfigurationConfigLoader. getTestConfig ( ). getSomeDummyAttribute ( ), CoreMatchers. is ( "someValue" ) )
26040	assertTrue ( firstResult. equals ( lastResult ) )
26041	Assert. assertEquals ( cutOff, new Date ( 0 ) )
26042	assertEquals ( expected, cls )
26043	assertFalse ( isOpened )
26044	assertThat ( result. statusCode, is ( Response. OK ) )
26045	assertThat ( cndFactory. getProblems ( ). isEmpty ( ), is ( true ) )
26046	assertNotNull ( FlowRevision. fetcher ( "FWXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "revision" ). fetch ( ) )
26047	assertThat ( called, is ( equalTo ( Arrays. asList ( "ExecuteTestSuite1", "ExecuteTestCase1", "DoCommand1", "DoCommand2", "ExecuteTestCase2", "ExecuteTestSuite2" ) ) ) )
26048	assertThat ( start. until ( end, Duration. in ( MONTHS ) ), is ( Duration. of ( 59, MONTHS ) ) )
26049	Assert. assertNull ( session, "No session should have been created when proxy set is empty" )
26050	Assert. assertTrue ( currentUser. isPermitted ( testPermissionString ) )
26051	assertNull ( dto )
26052	assertEquals ( 0, rs. getInt ( 1 ) )
26053	Assert. assertEquals ( SEX_FEMALE, json. get ( DATA_NAME ) )
26054	assertEquals ( Integer. valueOf ( 2 ), result )
26055	Assert. assertFalse ( ObjectUtils. equals ( endpoint1, endpoint2 ) )
26056	assertEquals ( 23, adapter. classify ( "23" ). intValue ( ) )
26057	assertTrue ( ParsingUtils. fileMatchesExtension ( sampleFile, "java" ) )
26058	Assert. assertEquals ( expected, actual )
26059	Assert. assertEquals ( "OK", r )
26060	assertArrayEquals ( classesToImport, generator. getClassesToImport ( ) )
26061	Assert. assertSame ( elem, mergeElem )
26062	assertThat ( Latin1Conversion. convertString ( control ), is ( "?\\n" ) )
26063	assertTrue ( acl. hasPermission ( ANONYMOUS_USER, Item. READ ) )
26064	assertEquals ( "No errors should be registered", 0, errors. getErrorCount ( ) )
26065	assertEquals ( easyCriteria. getResultList ( ). size ( ), resultList. size ( ) )
26066	Assert. assertEquals ( 2000, duration, 100 )
26067	assertEquals ( ImmutableList. of ( ), found )
26068	Assert. assertEquals ( set, files )
26069	assertNotNull ( annotations )
26070	assertEquals ( "x.artistName in ('a', 'b', 'c')", ejbql )
26071	org. junit. Assert. assertEquals ( 200, response. getStatus ( ) )
26072	assertSame ( custom, container. getLayout ( ) )
26073	assertThat ( tz. isDaylightSaving ( utc ), is ( false ) )
26074	assertEquals ( initialHashCode, pm. getHash ( ) )
26075	assertEquals ( expected, cow. getValue ( ) )
26076	assertNull ( parsedArg )
26077	assertEquals ( "浣�濂�", person. order2 ( "����", 25 ) )
26078	Assert. assertEquals ( "POST\\t/save", saveRoute. toString ( ) )
26079	assertEquals ( 2, accounts. size ( ) )
26080	assertTrue ( s. isRequired ( ) )
26081	Assert. assertEquals ( expResult, result )
26082	assertEquals ( expected, out )
26083	assertEquals ( "\\"NAME\\" LIKE?", QueryBuilder. getWhereStringForFilter ( f, sh ) )
26084	assertArrayEquals ( expected, service. getDomainsForServer ( handle ) )
26085	assertEquals ( DataTypeManager. DefaultDataClasses. INTEGER, command. getProjectedSymbols ( ). get ( 0 ). getType ( ) )
26086	assertEquals ( "Local lookup was not inherited", "(x)", config. getString ( "var", "" ) )
26087	Assert. assertEquals ( 0, count )
26088	assertEquals ( 5., start. getTheoreticalLatestOperationStartTime ( ), 0.01 )
26089	given ( ). when ( ). get ( resourcePrefix + "/getCollectorTest" ). then ( ). statusCode ( 200 ). assertThat ( )
26090	assertFalse ( inverseCheck. getOwners ( ). isEmpty ( ) )
26091	assertSame ( expectedOS, resultingOS )
26092	Assert. assertEquals ( "largest recovery window", 2, testMeta. storageManager. getLargestRecoveryWindow ( ) )
26093	assertEquals ( customNullPointerRepresentation, nameField. getValue ( ) )
26094	assertEquals ( expectedContentRange, uploader. constructContentRangeHeaderValue ( requestLength, true, status ) )
26095	assertNotNull ( info )
26096	assertResultSet ( res )
26097	Assert. assertEquals ( result, record )
26098	assertThat ( result, equalTo ( Result. NEUTRAL ) )
26099	assertTrue ( sink. invalidConfiguration )
26100	assertThat ( "is valid", validation. pass ( Report. WITHOUT_WARNING ) )
26101	assertThat ( saddr, is ( "tcp://google.com:90" ) )
26102	assertTrue ( field. isRequiredIndicatorVisible ( ) )
26103	Assert. assertTrue ( sg. isParentDescendant ( aggRootVertex, child ) )
26104	assertEquals ( "No test cases should fail", 0, runTestsResults. getFailedTests ( ). size ( ) )
26105	assertThat ( actual. matches ( "z" ), is ( true ) )
26106	assertTrue ( revisions. isEmpty ( ) )
26107	assertThat ( TimestampInterval. between ( start, end ). contains ( PlainTimestamp. of ( 2014, 5, 14, 0, 0, 1 ) ), is ( false ) )
26108	assertEquals ( expResult. trim ( ), result. trim ( ) )
26109	assertNotSame ( fixture, copy )
26110	assertEquals ( "a b\\n", found )
26111	assertThat ( cache. size ( ), is ( 0 ) )
26112	assertEquals ( "10", groupId )
26113	assertEquals ( HttpStatusCode. NO_CONTENT. code, response. getStatus ( ) )
26114	assertTrue ( CalledExceptionHandler. PROTECTED_HANDLER_CALLED )
26115	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm:ss", result ) )
26116	assertFalse ( "Does not accept a method that returns an instance of a class that does not implement Page", interceptor. accepts ( resourceMethodThatReturnsObject ) )
26117	assertSame ( "Cloned instance", Shutdown. INSTANCE, cloned )
26118	assertEquals ( actual, expected )
26119	Assert. areEqual ( IllegalArgumentException. class, ex. getClass ( ), "出现异常" )
26120	Assert. assertNotNull ( pi )
26121	assertThat ( read ( format, written ), contains ( "100" ) )
26122	assertEquals ( forumStaticsProvider. getPostsOnForumCount ( ), expectedCount )
26123	assertObjectEquals ( "{}", t )
26124	assertNumEquals ( numOf ( Math. log ( 99d / 100 ) ), varCriterion. calculate ( series, trade ) )
26125	assertEquals ( asList ( new ErrorNotification ( "foo                                               " + "                                                  " ) ), clientEvents. collect ( ) )
26126	Assert. fail ( "Should not have succeeded" )
26127	assertEquals ( expected, gb )
26128	assertEquals ( cut. assign ( 2L, 2L ), afterAssign )
26129	assertEquals ( "felineChannel", new PetRouter ( ). route ( payload ) )
26130	Assert. assertTrue ( reflect. isSuperClass ( genericType ) )
26131	assertEquals ( "�械�械蟹 12 屑懈薪��", t. format ( new Date ( 1000 * 60 * 12 ) ) )
26132	Assert. assertEquals ( 0, deviceFlowRegistry. getAllFlowDescriptors ( ). size ( ) )
26133	assertThat ( provider. getSubject ( axiom ), is ( absent ) )
26134	Assert. assertEquals ( 100, interceptor. getCacheSize ( ). get ( ) )
26135	assertions. isNotLessThan ( expected )
26136	assertEquals ( empList, employees )
26137	assertSame ( listOfTodos, retList )
26138	assertEquals ( numbers, this. model. getNumbers ( ) )
26139	assertEquals ( branching, joining. getBranchingPair ( ) )
26140	assertEquals ( "HTTPMESSAGEOVER", ret )
26141	assertQuery ( true, query )
26142	assertThatWritableIs ( true )
26143	Assert. assertEquals ( expected, compoundWrite. apply ( baseNode ) )
26144	assertEquals ( 1, b. getInt ( ) )
26145	assertEquals ( expected, actual )
26146	assertThat ( responseContent, containsString ( "\\n  " ) )
26147	assertEquals ( true, classUnderTest. getWarnForUnsavedFileEdits ( ) )
26148	assertThat ( helloWorld. helloWorld ( ), is ( "Hello Prototype!" ) )
26149	assertThat ( actual, is ( equalTo ( expected ) ) )
26150	assertTrue ( bucket. timeToRelease ( limit + 1, TimeUnit. MILLISECONDS ) > 0 )
26151	assertThat ( extractedLines. size ( ), equalTo ( 0 ) )
26152	assertThat ( mojo. getLineSeparator ( ), is ( "\\r\\n" ) )
26153	Assert. assertTrue ( HttpStatus. SC_PARTIAL_CONTENT!= result. getCode ( ) )
26154	assertTrue ( stats. getReceivedMessageGaps ( ). isEmpty ( ) )
26155	Assert. assertEquals ( e, e. paraGetterCustom ( "test2" ) )
26156	assertThat ( dialect. getURL ( conn ), is ( "jdbc:hive2://null:10000/default;AuthMech=2;UID=joe" ) )
26157	assertEquals ( expResult, result )
26158	assertThat ( request. getLocalAuthorizationList ( ), equalTo ( list ) )
26159	assertThat ( testColor. name + " on " + serialized, base, is ( deserialized. getColor ( "color" ) ) )
26160	assertionHelper. assertIrodsFileMatchesLocalFileChecksum ( getIRODSFile. getAbsolutePath ( ), getLocalFile. getAbsolutePath ( ), irodsFileSystem. getIRODSAccessObjectFactory ( ), secondaryAccount )
26161	assertThat ( isValid, is ( false ) )
26162	assertEquals ( false, log. hasEvents ( ) )
26163	assertNotNull ( GlobalObjectMappers. PRETTY. writeValueAsString ( rep ) )
26164	Assert. assertTrue ( errors. hasFieldErrors ( "retireReason" ) )
26165	assertNotNull ( "index present", ais ( ). getTable ( SCHEMA, T1_NAME ). getIndex ( "x" ) )
26166	assertEquals ( "void f(void* target) {\\n" + "    ((void (*)(void)) target)();\\n" + "}\\n", BridgeMethodCompiler. createBridgeCWrapper ( functionType. getReturnType ( ), functionType. getParameterTypes ( ), functionType. getParameterTypes ( ), "f" ) )
26167	assertEquals ( "message", exception. getMessage ( ) )
26168	assertThat ( responseStep. callResponse. getResult ( ). getItems ( ), containsInAnyOrder ( s1, s3 ) )
26169	assertXpathExists ( "//h2[not(@id)][text() = 'My Title']", html )
26170	assertThat ( "Integer->Number", converter. convert ( value, Number. class ), sameInstance ( value ) )
26171	assertBatchMixed ( new FailingWorkerListener ( ), WorkerEvent. values ( ) )
26172	assertNotNull ( data. getString ( 0, data. length ( ) ) )
26173	assertNotNull ( request. getSession ( ). getAttribute ( Constants. PREFERRED_LOCALE_KEY ) )
26174	assertNotNull ( read )
26175	assertTrue ( getNoErrorMsg ( ), result )
26176	assertThat ( IntraDayDate. toList ( days ), delimitedBy ( start, end ) )
26177	Assert. assertEquals ( 100., time, 0.01 )
26178	assertEquals ( "The override branch isn't correct", "override-branch", scm. getOverrideBranchName ( ) )
26179	assertEquals ( true, result )
26180	assertEquals ( read ( pom ), "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n" + "<project>\\n" + "    <modelVersion>4.0.0</modelVersion>\\n" + "    <artifactId>artifact-id</artifactId>\\n" + "    <groupId>group-id</groupId>\\n" + "    <version>x.x.x</version>\\n" + "    <dependencyManagement>\\n" + "        <dependencies>\\n" + "            <dependency>\\n" + "                <groupId>artifact-id</groupId>\\n" + "                <artifactId>group-id</artifactId>\\n" + "                <version>version</version>\\n" + "            </dependency>\\n" + "        </dependencies>\\n" + "    </dependencyManagement>\\n" + "</project>" )
26181	assertEquals ( test. convertToBase7 ( 100 ), "202" )
26182	Assert. assertEquals ( FastMath. PI, solver. solve ( 100, f, 3.0, 3.2, 3.1 ), solver. getAbsoluteAccuracy ( ) )
26183	assertTrue ( quota. check ( blobStore ). isViolation ( ) )
26184	assertEquals ( expected, expression. toString ( ) )
26185	Assert. assertEquals ( "{firstName=John, lastName=Doe}", result. toString ( ) )
26186	assertThat ( domain. getServer ( "server1", "cluster1" ). shouldStart ( 0 ), is ( true ) )
26187	assertEquals ( "v37.0", version )
26188	assertEquals ( formatted, "846237.55100 seconds" )
26189	assertNull ( entity )
26190	assertDegenerate ( scan )
26191	assertEquals ( "Expected 10 results!", 10, n )
26192	assertTrue ( txaction. isTransfer ( ) )
26193	Assert. assertEquals ( 9L, this. sqlgGraph. countEdges ( ), 0 )
26194	assertFalse ( strings. hasNext ( ) )
26195	assertThat ( found. size ( ), is ( 0 ) )
26196	assertTrue ( voter. voteMatch ( affiliation, organization ) )
26197	assertTrue ( Double. isNaN ( mjd. evalD ( new RasterDataEvalEnv ( - 1, - 1, - 1, - 1 ) ) ) )
26198	Assert. assertTrue ( pValue <= 0.01 )
26199	assertEquals ( expected, getString ( TestOrderByImpl. example ( ) ) )
26200	assertNull ( object2. getToArtist ( ) )
26201	assertEquals ( "TestGetFilterQueryForKey 0", "value", entityTypeToFilterQueryService. getFilterQueryForKey ( "key" ) )
26202	assertTrue ( urlWithPathAndParam. equals ( urlString ) || urlWithPathAndParam1. equals ( urlString ) )
26203	assertThat ( operatorQueue3. tuplesByPortIndex. get ( destinationPortIndex1 ), equalTo ( singletonList ( tuple ) ) )
26204	assertEquals ( binding ( vars ( "Value" ), "\\"Joseph \\\\\\"Joe\\\\\\" Smith\\"" ), removePseudoVars ( readCSV ( csv, true ). next ( ) ) )
26205	assertTrue ( rank < 2 )
26206	assertMockEndpointsSatisfied ( )
26207	assertEquals ( "Unexpected number of requestable roles", 3, requestableRoles. size ( ) )
26208	assertVisitorSatisfied ( )
26209	assertTrue ( initSuccessful )
26210	assertEquals ( "the date used for selection must be unchanged", copy, today )
26211	assertThat ( exitValue, is ( 0 ) )
26212	Assert. assertNotNull ( addressResultsDto )
26213	assertEquals ( 1, testDescriptor. getChildren ( ). size ( ) )
26214	assertEquals ( "test", wrap. getWrapped ( ) )
26215	assertMockEndpointsSatisfied ( )
26216	Assert. assertEquals ( false, retval )
26217	assertEquals ( expResult, result )
26218	assertThat ( sql, equalTo ( "update UserInfo set name = case id when 77 then '����' when 88 then '�稿��' when 99 then '姊�' else name end,age = case id when 77 then '18' when 88 then age when 99 then '16' else age end where id in(77,88,99)" ) )
26219	Assert. fail ( "NullPointerException should have been thrown" )
26220	assertFalse ( controller. isLoggedOn ( ) )
26221	assertTrue ( response. getStatus ( ). equals ( responseBuilder. buildResponse ( ). getStatus ( ) ) )
26222	maps. assertContains ( description, null, array ( entry ( "name", "Yoda" ) ) )
26223	assertThat ( content. get ( 0 ), containsString ( "No action in agent argument, do nothing!" ) )
26224	assertEquals ( 0, mockResult. included ( "totalPostReports" ) )
26225	assertMockEndpointsSatisfied ( )
26226	context. assertIsSatisfied ( )
26227	assertTrue ( resultMessage ( result, PUT ), result. passedValidation ( ) )
26228	Assert. assertEquals ( expResult, result )
26229	assertEquals ( "(a + b).toLowerCase()", str )
26230	Assert. assertEquals ( compareXMLDocuments ( expectedDoc, modifiedDoc ), true )
26231	assertTrue ( result instanceof ClobImpl )
26232	assertEquals ( 1, rpt. size ( ) )
26233	Assert. fail ( "get metadata of non-existent object should fail" )
26234	assertSame ( cm. INT, cm. _ref ( int. class ) )
26235	assertEquals ( "LIMIT 5 RETURNING foo", statement. toString ( ) )
26236	Assert. assertEquals ( 3, jobs. size ( ) )
26237	Assert. assertArrayEquals ( ENCODED_VALUE, byteOutputStream. toByteArray ( ) )
26238	assertFalse ( Cells. isEmpty ( cell ) )
26239	assertTrue ( repository. getFeatureState ( DummyFeature. TEST ). isEnabled ( ) )
26240	assertThat ( currentTimeString, matchesPattern ( BACKUP_TIMESTAMP_PATTERN ) )
26241	Assert. assertFalse ( context. getResult ( ) )
26242	Assert. assertNotNull ( generator )
26243	assertMockEndpointsSatisfied ( )
26244	assertEquals ( original, restored )
26245	assertNotNull ( underTest. cause ( ) )
26246	assertEquals ( Collections. singleton ( CustomNameBinding. class. getName ( ) ), names )
26247	assertEquals ( expectedDate, formatDate ( "yyyy-MM-dd HH:mm", result ) )
26248	assertEquals ( ( long ) 8, result. getLongValue ( ) )
26249	assertTrue ( cygnusGroupingRules. getRules ( ). isEmpty ( ) )
26250	assertOutMXMLPostProcess ( outTemplate. replaceAll ( "AppName", appName ), true )
26251	assertThat ( calvalusDataInputs. toString ( ), equalTo ( "calvalus.wps.remote.ref : 1738ad7b-534e-4aca-9861-b26fb9c0f983\\n" + "minDate : 2016-01-01T01:00:00+01:00\\n" + "calvalus.output.compression : none\\n" + "processorBundleLocation : null\\n" + "calvalus.wps.remote.user : dummyRemoteUser\\n" + "productionType : L2Plus\\n" + "inputDataSetName : MERIS RR  r03 L1b 2002-2012\\n" + "processorBundleVersion : null\\n" + "inputPath : /calvalus/eodata/MER_RR__1P/r03/${yyyy}/${MM}/${dd}/.*.N1\\n" + "minDateSource : 2016-01-01T01:00:00+01:00\\n" + "quicklooks : true\\n" + "autoStaging : true\\n" + "
26252	Assert. assertEquals ( 0, resultList. size ( ) )
26253	assertFalse ( registryService. doesKeyExist ( "HKLM", "" ) )
26254	assertThat ( fe, notNullValue ( ) )
26255	Assert. assertEquals ( 3, visitor. getBindVarConditions ( ). size ( ) )
26256	Assert. assertTrue ( jsonEqual ( expResult, EntityFormatter. writeEntity ( entity ) ) )
26257	assertEquals ( "TextBuilder String Is 1", _textBuilder. toString ( ), "1" )
26258	assertEquals ( 2, cache. listPrivileges ( null, null, null ). size ( ) )
26259	Assert. assertEquals ( SpringContainer. class, container. context. getBean ( "container" ). getClass ( ) )
26260	assertFalse ( "Doing an operation on the store should throw if not initalized.", passed )
26261	assertThat ( collection. documentExists ( externalDoc. getKey ( ), new DocumentExistsOptions ( ). streamTransactionId ( tx. getId ( ) ) ), is ( false ) )
26262	assertThat ( sentRequest ( "http://127.0.0.1:19000/api/job/trigger", "POST", "test_job" ), is ( 204 ) )
26263	assertToken ( expectedTokens, select ( jcas, Token. class ) )
26264	assertEquals ( "No tests ran.", content )
26265	assertThat ( evaluator. evaluate ( corc ), is ( TruthValue. NO ) )
26266	Assert. assertEquals ( expected, actual )
26267	assertEquals ( 0, maxConsequetiveOnes. findMaxConsecutiveOnes ( numbers ) )
26268	assertEquals ( 16, context. select ( q1 ). size ( ) )
26269	assertEquals ( "190", res. cause ( ). getMessage ( ) )
26270	assertTrue ( possibleFields. containsAll ( Arrays. asList ( "STRING:connection.client.user", "IP:connection.client.host.last", "TIME.STAMP:request.receive.time.last", "TIME.EPOCH:request.receive.time.epoch", "STRING:request.status.last", "STRING:connection.client.user.last", "HTTP.METHOD:request.firstline.original.method", "HTTP.URI:request.firstline.uri", "HTTP.PATH:request.firstline.uri.path", "HTTP.QUERYSTRING:request.firstline.uri.query", "STRING:request.firstline.uri.query.*", "BYTES:response.body.bytesclf", "BYTESCLF:response.body.bytesclf", "IP:connection.client.host" ) ) )
26271	assertEquals ( "Testing " + fqanWithGroup, expectedString, fqanWithGroup. getGroup ( ) )
26272	assertSet ( whenFilteringBy ( IN, Arrays. asList ( "Kate", "Ashley" ) ), queryReturns ( kate, ashley ) )
26273	assertEquals ( t, new LeadActivityRecord ( ). toString ( ) )
26274	assertThat ( isEqual, is ( true ) )
26275	assertNotNull ( response )
26276	assertThat ( "bob[5].fred[2].george", equalTo ( m. m_fieldPath ) )
26277	assertThat ( aggregate. getTotalHours ( ), equalTo ( 15 ) )
26278	assertEquals ( "975X", agencia. toString ( ) )
26279	Assert. assertEquals ( input. canBeAnything, output. canBeAnything )
26280	assertEquals ( "wf/transformers", System. getProperty ( PROPERTY_NAME_SANDBOX_NAME ) )
26281	assertThat ( resultIds, containsInAnyOrder ( "DiagnosticReport/DR", "Observation/parentObs", "Observation/childObs" ) )
26282	Assert. assertEquals ( "Invalid afm or pfm font file.", message )
26283	assertEquals ( 5., Solutions. bestOf ( solutions ). getCost ( ), 0.01 )
26284	assertNoDebugMessage ( Level. SEVERE )
26285	assertNotNull ( cascadingStyleSheet )
26286	assertTrue ( "Logger should be created", ops. exists ( TEST_LOGGER_ADDRESS ) )
26287	assertEquals ( list, actual )
26288	assertEquals ( "{\\"d\\":{\\"EntryDate\\":\\"\\\\/Date(-42)\\\\/\\"}}", StringHelper. inputStreamToString ( ( InputStream ) response. getEntity ( ) ) )
26289	assertEquals ( "5:10000000000:1.5:3.5:zzz:true", res. join ( ) )
26290	assertTrue ( "Oh no! No mapped object! ", store. size ( ) > 0 )
26291	Assert. assertTrue ( isEqual ( distance, 1.0 ) )
26292	assertThat ( chksumChannel. getChecksums ( ), contains ( expectedChecksum ) )
26293	assertThat ( waggleDanceConfiguration. getThriftServerRequestTimeout ( ), is ( timeout ) )
26294	Assert. fail ( )
26295	assertThat ( schema, containsString ( "}\\n\\ntype TypeMutations {\\n" + "  create(uri: String! entity: TypeCreateInput!): Type @createMutation(dataSet: \\"rootType\\" typeUri: \\"" + TYPE_URI + "\\")\\n" + "  edit(uri: String! entity: TypeEditInput!): Type @editMutation(dataSet: \\"rootType\\")\\n" + "  delete(uri: String!): RemovedEntity! @deleteMutation(dataSet: \\"rootType\\")\\n" ) )
26296	assertNotNull ( "Enum class could not be found", clz )
26297	assertThat ( newArrayList ( iterationState ). size ( ), is ( 2 ) )
26298	assertThat ( result. getPayload ( ), is ( equalTo ( JSON_STRINGS_RECORD ) ) )
26299	assertEquals ( 2, list. size ( ) )
26300	assertEquals ( "High", filterResult. getValue ( ) )
26301	Assert. assertEquals ( ecohImpl. dealWithAuthenticationDataEnable ( echoInfo ). getMessage ( ), response. getMessage ( ) )
26302	assertThat ( collect ( userDAO. find ( ). asList ( ), on ( UserMongo. class ). getId ( ) ), contains ( user1. getId ( ) ) )
26303	assertEquals ( "abcdefghijklmnopqrstuvwxyz", wl. record. toString ( ) )
26304	assertEquals ( expected, actual )
26305	assertNotEquals ( firstId, secondId )
26306	assertTrue ( v1. getVehicleTypeIdentifier ( ). equals ( v2. getVehicleTypeIdentifier ( ) ) )
26307	assertEquals ( "<!--?xml encoding='UTF-8'?--> <html> <head></head> <body> One </body> </html>", StringUtil. normaliseWhitespace ( doc. outerHtml ( ) ) )
26308	assertEquals ( "no gain", storage. read ( "no pain" ) )
26309	assertFalse ( problem )
26310	assertNotNull ( retr )
26311	Assert. assertEquals ( "content", result. getBody ( ) )
26312	assertThat ( annotation, notNullValue ( ) )
26313	Assert. assertEquals ( expected, testIndex. findConc ( "\\".*E\\" \\"quick\\"" ) )
26314	assertEquals ( 10, all. size ( ) )
26315	Assert. assertNull ( new CompareTool ( ). compareByContent ( outPath, cmpPath, destinationFolder, diff ) )
26316	assertEquals ( err, "File, 'EasyMock for class java.io.File' cannot be written to." )
26317	assertTrue ( "Failed authentication was not logged", loggedFailedAuth ( AUDIT_LOG_FILE, UNKNOWN_USER ) )
26318	assertThat ( request. doTruncate ( broker, breeder ), is ( true ) )
26319	assertEquals ( "Redo (Ctrl-Y)", shortDescription )
26320	assertContains ( e. getMessage ( ), "'last'" )
26321	assertThat ( kvStore. getCollectionOrDefault ( "field", Collections. emptyList ( ) ), equalTo ( value ) )
26322	assertThat ( dog. name, equalTo ( "Brutus" ) )
26323	assertThat ( termMap. getTermB ( ). getUuid ( ), is ( RestTestConstants1_9. CONCEPT_REFERENCE_TERM2_UUID ) )
26324	assertThat ( isValid, is ( true ) )
26325	assertEquals ( groundTruthRA. get ( ). get ( ), r )
26326	assertThat ( matcherPosition. createPlaceholder ( PayloadPosition. ATTRIBUTE ), is ( "<soapenv:Envelope $$PAYLOADATTR$$>" + "   <soapenv:Header ></soapenv:Header>" + "   <soapenv:Body >" + "      <cxf:celsiusToFarenheit>" + "         <arg0>1</arg0>" + "      </cxf:celsiusToFarenheit>" + "   </soapenv:Body>" + "</soapenv:Envelope>" ) )
26327	assertTrue ( result. equals ( expected ) )
26328	assertEquals ( "Yahya and friends etc. went to the park to play.", this. realiser. realise ( completeSen ). getRealisation ( ) )
26329	assertEqualsWithoutWhiteSpaces ( "circle(r=0.5, center=true);", actual )
26330	assertNotNull ( appInitializer. getServletConfigClasses ( ) )
26331	assertThat ( arguments. resolve ( null, null ), contains ( "1", "3" ) )
26332	assertEquals ( expected, transformed )
26333	assertThat ( chksumChannel. getChecksums ( ), empty ( ) )
26334	assertThat ( PlainDate. of ( 2000, 12, 2 ). with ( model. weekOfMonth ( ). incremented ( ) ), is ( PlainDate. of ( 2000, 12, 9 ) ) )
26335	assertEquals ( "This component is available in TestingWidgetset, but not in DefaultWidgetset", component. getText ( ) )
26336	assertThat ( tester. count ( "Hoge" ), is ( 0 ) )
26337	assertEquals ( "this is bar bar", response )
26338	assertEquals ( "http://bar.org/Profile/PatientWithFullProfile", def. getResourceProfile ( "http://foo.org/fhir" ) )
26339	assertEquals ( "cffunction", parserTag. getName ( ) )
26340	assertThat ( hijri. with ( CommonElements. weekOfMonth ( HijriCalendar. family ( ), model ). decremented ( ) ), is ( hijri. with ( HijriCalendar. DAY_OF_MONTH, 4 ) ) )
26341	assertThat ( userPermissions, hasItem ( equalTo ( permission ) ) )
26342	assertTrue ( a1 < a0 )
26343	this. assertGet ( "servicetemplates/http%253A%252F%252Fwinery.opentosca.org%252Ftest%252Fservicetemplates%252Ffruits/baobab_serviceTemplate/boundarydefinitions/policies/", "entitytypes/servicetemplates/boundarydefinitions/policies/initialPolicy.json" )
26344	Assert. assertNull ( imports )
26345	assertAnnotations ( 1, Quantity. class, new TestQuantity ( 0, "3.8 million litres", 3800000, "l", 3800, "m^3", VOLUME ) )
26346	assertEquals ( 13, classUnderTest. getNumDiagonalSquaresAvailable ( Position. d5 ) )
26347	assertEquals ( PRICE, b. getPrice ( ) )
26348	Assert. assertEquals ( dataset. getName ( ) + ", parameter #" + i, expected [ i ], actual, 1e-6 * expected [ i ] )
26349	assertThat ( readBytes ( testee, 4 ), is ( "" ) )
26350	assertEquals ( "png", sink. preferredOutputFormatName ( ) )
26351	assertFalse ( resolved )
26352	assertEquals ( "12.3", converter. getAsString ( facesContext, new UIPanel ( ), Double. valueOf ( "12.3" ) ) )
26353	Assert. assertNotSame ( "Browser capabilities was not remapped to browser", "mockdrone", configuration. getBrowser ( ) )
26354	Assert. assertFalse ( handler. managementOperation ( null, request, response ) )
26355	Assert. assertEquals ( 2, result. intValue ( ) )
26356	assertErrorEventDefinition ( "boundary", "myErrorCode", null )
26357	Assert. assertEquals ( 0, an. analyze ( new CandidateNode ( new CandidateRule ( "test", rule ), nnode ), results ). size ( ) )
26358	assertFalse ( wouldFire )
26359	assertUnusedTagInSetTaggingRequest ( setTaggingRequest, String. valueOf ( true ) )
26360	assertCardLuhnDigit ( creditCard )
26361	assertNull ( resource )
26362	assertThat ( supplier. authFor ( "gcr.io/foobar/barfoo:latest" ), matchesAccessToken ( accessToken ) )
26363	assertThat ( actual, is ( expected ) )
26364	assertThat ( "should not be allowed", filter. allow ( meta ), is ( false ) )
26365	Assert. assertEquals ( "Failure expected the name to be the same", "ChatroomDeleteDTO", MHRDTO. getDTOName ( ) )
26366	assertArrayEquals ( new String [ ] { "1", "2", "3", "a", "b", "*" }, list. toArray ( new String [ 0 ] ) )
26367	Assert. assertEquals ( pullRequest, parsedPullRequest )
26368	Assert. assertEquals ( "did not get count matching expected files in the transferControlBlock", transferControlBlock. getTotalFilesToTransfer ( ), transferControlBlock. getTotalFilesTransferredSoFar ( ) )
26369	Assert. assertTrue ( getDocument ( ). getDocumentHeader ( ). getWorkflowDocument ( ). isSaved ( ) )
26370	assertThat ( parameters. getProjectId ( ), is ( equalTo ( projectId ) ) )
26371	assertEquals ( "Ids didn't match", organizationResponse. object. getId ( ), teamId )
26372	Assert. assertEquals ( "Images are not similar enough for " + name + ". Request: " + request, 1.0, sim, 0.01 )
26373	assertThat ( result. statusCode, is ( Response. OK ) )
26374	Assert. assertSame ( sqlEx, first )
26375	assertArrayEquals ( intData, getImgAsInts ( array2 ) )
26376	assertEquals ( density, 0.4 )
26377	Assert. assertNull ( new CompareTool ( ). compareByContent ( outFile, cmpFileName, destinationFolder, "diff35_" ) )
26378	assertNotNull ( "rules must not be null", rules )
26379	Assert. assertEquals ( expected, actual )
26380	assertEquals ( value, ( Double ) subject. value ( ), 0.01 )
26381	assertions. contains ( entries )
26382	assertThat ( command. getMaximumTimeMilliseconds ( ), is ( value ) )
26383	assertThat ( component. execute ( ), is ( expected ) )
26384	arrays. assertContains ( description, new double [ 1 ], new double [ 0 ] )
26385	assertEquals ( expectedCsv. get ( 0 ). getSchema ( ), schema )
26386	Assert. fail ( "Xfdf files are not equal" )
26387	assertThat ( CalendarWeek. from ( cw. toProlepticNumber ( ) ), is ( cw ) )
26388	assertEquals ( table, table. getColumn ( "x" ). getTable ( ) )
26389	assertEquals ( ius, st )
26390	assertNotEquals ( circle1, circle2 )
26391	Assert. assertEquals ( expResult, result )
26392	assertEquals ( preEncodedPredictionsUrl, httpUtil. getEncodedUrl ( preEncodedPredictionsUrl ) )
26393	assertTrue ( taxonomy. getNode ( A ). getAllSuperNodes ( ). contains ( taxonomy. getNode ( F ) ) )
26394	Assert. assertSame ( PUBLIC_VISIBILITY, this. component. getVisibility ( this. entity1 ) )
26395	assertTrue ( thrown )
26396	assertEquals ( 999, spanEvent. getSequence ( ) )
26397	assertEquals ( e. getFreeVars ( ), "i", "b" )
26398	assertEquals ( expected, contentSummary. toString ( false, true ) )
26399	Assert. assertNull ( "Entity should be null", result )
26400	assertEquals ( Result. STOP, and. apply ( pathData, - 1 ) )
26401	assertEquals ( 1, userInbox. size ( ) )
26402	assertResultSet ( res )
26403	assertThat ( satisfiesConstraints ( prop, new Value [ ] { value } ), is ( false ) )
26404	assertTrue ( authentication. authenticate ( new TokenCredentials ( info. getToken ( ) ) ) )
26405	Assert. assertEquals ( "-1-2", FreeMarkerUtils. format ( tpl, args ) )
26406	assertNotNull ( resource )
26407	Assert. assertFalse ( result )
26408	assertEquals ( xa, found )
26409	assertNotNull ( exception )
26410	assertThat ( formatter. format ( PlainDate. of ( 2015, 7, 17 ) ), is ( "Freitag, 2015-07-17" ) )
26411	assertArrayEquals ( exp, a )
26412	Assert. assertFalse ( pg1. intersects ( pg2 ) )
26413	Assert. assertEquals ( "Rotate", actual )
26414	assertEquals ( 0, content. refCnt ( ) )
26415	assertMockEndpointsSatisfied ( )
26416	Assert. assertEquals ( "Url not rewritten correctly in css string", expectedCssString, rewriteCssString )
26417	assertTrue ( msg, dynAny. equal ( dynAny2 ) )
26418	Assert. assertEquals ( "SELECT SECOND('10:05:03');", text )
26419	assertEquals ( 0.75, val, 1e-5 )
26420	Assert. assertNull ( concept )
26421	Assert. fail ( "NullPointerException should have been thrown" )
26422	assertEquals ( arr. length, 1 )
26423	assertEquals ( 0, r1. compareTo ( r2 ) )
26424	Assert. isTrue ( true )
26425	assertThat ( getConfigurationOfDmnEngine ( ). getScriptEngineResolver ( ), is ( scriptEngineResolver ) )
26426	assertFalse ( matches )
26427	assertThat ( response, containsString ( "% This query was converted into the ISO-8859-1 (Latin-1) character set." ) )
26428	assertThat ( scope1, is ( not ( equalTo ( "read:/foo" ) ) ) )
26429	Assert. assertEquals ( found. size ( ), 3 )
26430	assertEquals ( g1, g2 )
26431	Assert. assertTrue ( true )
26432	assertNotNull ( result )
26433	Assert. assertEquals ( 4, sb. length ( ) )
26434	assertTrue ( n1. equals ( n2 ) )
26435	Assert. assertEquals ( clazz, orderType. getJavaClass ( ) )
26436	assertEquals ( expectedFeatures, tokens. get ( 0 ). getAllFeatures ( ) )
26437	assertTrue ( response. startsWith ( "Jersey/2.0" ) )
26438	Assert. assertEquals ( "number emitted tuples", numtuples, itemSink. count )
26439	assertEquals ( expected, actual )
26440	assertEquals ( counter. get ( ), verifyRowCount ( ) )
26441	bigDecimals. assertGreaterThan ( description, null, BigDecimal. ONE )
26442	assertNull ( kieModule )
26443	assertPlanMatches ( expected )
26444	assertThat ( result, is ( instanceOf ( Success. class ) ) )
26445	assertEquals ( 2, provider. getFilters ( ). length )
26446	Assert. assertEquals ( action. getContextPath ( ) + "/outbound/three", action. getResponseHeaderValues ( "three" ). get ( 0 ) )
26447	assertThat ( result, is ( nullValue ( ) ) )
26448	Assert. assertEquals ( gen. generateInchi ( ac ). getInChI ( ), "InChI=1S/Cl" )
26449	assertEquals ( expResult, result )
26450	Assert. assertEquals ( "Expected null result", null, value )
26451	assertEquals ( 2, builder. build ( ). getElementValues ( ). size ( ) )
26452	assertFalse ( or. isDefined ( ) )
26453	assertions. containsSequence ( 'a', 'b', 'c', 'a', 'c' )
26454	assertEquals ( Lists. newArrayList ( DefaultDistance. of ( 400, DistanceUnit. METERS ), DefaultDistance. of ( 1D / 2, DistanceUnit. MILES ), DefaultDistance. of ( 1, DistanceUnit. KILOMETERS ) ), Lists. newArrayList ( Distances. distanceIterator ( upto ) ) )
26455	assertThat ( tuple. getIntegerOrDefault ( "field", 2 ), equalTo ( 1 ) )
26456	assertEquals ( NON_ASCII_UTF8_STRING. charAt ( 0 ), result. charAt ( 0 ) )
26457	assertThat ( wrapper. getGraph ( ). traversal ( ). E ( ). has ( "tim_id", rel1Id. toString ( ) ). toList ( ), containsInAnyOrder ( likeEdge ( ). withId ( rel1Id. toString ( ) ). withProperty ( "rev", 1 ). withProperty ( "vrerel_accepted", true ), likeEdge ( ). withId ( rel1Id. toString ( ) ). withProperty ( "rev", 2 ). withProperty ( "vrerel_accepted", false ) ) )
26458	assertTrue ( "Focus should be in the Grid", getFocusedElement ( ). getAttribute ( "class" ). contains ( "v-grid" ) )
26459	assertEquals ( userId, action. getUserId ( ) )
26460	assertThat ( applied, is ( RuntimeContext. DEFAULT ) )
26461	assertThat ( yamlParsers. keySet ( ), hasItems ( "JYaml", "JvYaml", "YamlBeans", "SnakeYAML" ) )
26462	assertNull ( result )
26463	Assert. assertNull ( result )
26464	assertThat ( list. strList, hasSize ( 2 ) )
26465	assertEquals ( "bar1,bar2", response. getHeaderString ( "foo" ) )
26466	Assert. assertFalse ( isOk )
26467	assertEquals ( "hello", service. getProperties ( "test" ). iterator ( ). next ( ). getValue ( ) )
26468	assertThat ( codes, containsInAnyOrder ( "43343-3", "43343-4", "47239-9" ) )
26469	assertThat ( msg. data ( ), is ( new byte [ ] { 11, 12 } ) )
26470	assertFalse ( valid )
26471	Assert. assertEquals ( HttpStatus. SC_UNAUTHORIZED, response. getCode ( ) )
26472	assertThat ( restored. get ( ), is ( option. get ( ) ) )
26473	assertEquals ( "_all/_cache/clear?bloom=true&field_data=false", clearCache. getURI ( ElasticsearchVersion. UNKNOWN ) )
26474	Assert. assertEquals ( state. IDLE, state )
26475	assertThat ( list. size ( ), is ( greaterThan ( sizeBeforeAdding ) ) )
26476	assertTrue ( diff < 10L )
26477	assertEquals ( "The P42 Property", withLabel. findLabel ( "en" ) )
26478	assertEquals ( actionDetailsArray, actionOut. getData ( ) )
26479	assertNull ( x1 )
26480	assertEquals ( "The first state on third page is not correct", FIRST_STATE_THIRD_PAGE, actual )
26481	assertEquals ( expected, result )
26482	assertThat ( rollup. isFreshEnough ( ), is ( false ) )
26483	assertEquals ( p1, p2 )
26484	Assert. assertEquals ( "false", p. getProperty ( PseudoAuthenticationHandler. ANONYMOUS_ALLOWED ) )
26485	assertThat ( mentions, hasItem ( mentionedEntity ( 0, mention. length ( ), EntityType. ANNOTATION_PROPERTY, iri ) ) )
26486	assertObject ( list, gtype )
26487	Assert. assertEquals ( 8, service. getSalt ( ). length ( ) )
26488	assertEquals ( "Junit error", normalize ( expectedString ), normalize ( chart. toURLString ( ) ) )
26489	assertEquals ( 404, response. getStatus ( ) )
26490	assertNull ( parsedArg )
26491	assertTrue ( s. getName ( ). equals ( "cleaning" ) )
26492	assertTrue ( "PointFormats setter is not working correctly", delegate. getPointFormats ( ). equals ( supportedPointFormats ) )
26493	assertTrue ( value. isReplaceableBy ( 99L, 11, ComparableComparator. INSTANCE ) )
26494	assertThat ( runtime. exitStatus ( ), is ( equalTo ( ( byte ) 0x0 ) ) )
26495	assertEquals ( "\\033[48;5;254mHello\\033[0m", sb. toAnsi ( new DumbTerminal ( "dumb", "xterm-256color", new ByteArrayInputStream ( new byte [ 0 ] ), new ByteArrayOutputStream ( ), null ) ) )
26496	assertOut ( "a += b" )
26497	assertThat ( s, is ( "1970-01-01 06:00 Foxtrot" ) )
26498	Assert. assertTrue ( "Incorrect internal data", Arrays. equals ( expected, actual ) )
26499	this. assertScriptUncookable ( "" + "String s = \\"c\\";\\n" + "\\n" + "switch (s) {\\n" + "case \\"a\\": case \\"b\\": case \\"c\\":\\n" + "    return false;\\n" + "case \\"c\\": case \\"d\\": case \\"e\\":\\n" + "    return false;\\n" + "default:\\n" + "    return false;" + "}\\n" )
26500	assertEquals ( expected, actual )
26501	assertTrue ( verifyProps ( a, LIST_A ) )
26502	assertThat ( xPath, is ( "(.//*[@id ='myID']//*[self::input and (translate(@type,'TEXT','text') = 'text' or not(@type))])" ) )
26503	assertTrue ( "Should have thrown exception of MyException class", caughtException ( ) instanceof MyException )
26504	assertEquals ( "Unsupported parameter test for pwd.", result )
26505	assertEquals ( expected, result )
26506	assertEquals ( 0, errors. size ( ) )
26507	assertSessionVar ( tc, SessionVars. ON_ERROR_STOP. keyname ( ), "false" )
26508	assertEquals ( "subName", expr. exec ( new PmExprExecCtxt ( pmConversation ) ) )
26509	Assert. assertEquals ( "Missing component id", MicroPipelineValidationResult. MISSING_COMPONENT_ID, new MicroPipelineValidator ( ). validateComponent ( cfg, queues, Collections. < String > emptySet ( ) ) )
26510	Assert. assertEquals ( result. getResultSize ( ), 1 )
26511	assertThat ( matcher. matches ( "<some xml=\\"true\\" />" ), is ( true ) )
26512	assertFalse ( "No keyword movies found", result. isEmpty ( ) )
26513	Assert. assertEquals ( String. format ( "in %s", testEntry. f0 ), testEntry. f1 == null? null : new Encoding ( testEntry. f1, testEntry. f2 ), encoding )
26514	assertNotNull ( "Actual path should not have been null...", pth )
26515	Assert. assertEquals ( "Heartbeat", actual )
26516	assertEquals ( SwitchingProtocols. MESSAGE, ri. getDescription ( ) )
26517	assertEquals ( "2h2m2.500s", s )
26518	assertEquals ( DOMAIN, bareJID )
26519	Assert. assertFalse ( "Config contains null", sw. toString ( ). contains ( "null" ) )
26520	Assert. assertFalse ( provider. isValidField ( content, field ) )
26521	assertTrue ( line. contains ( "2 live servers, 0 dead servers" ) )
26522	assertThat ( changes. getChanges ( ). size ( ), is ( 0 ) )
26523	assertFalse ( CommitUtils. isMergedInto ( "test_branch", MASTER, repo ) )
26524	assertDestinationFileContentIsMultiPartContent ( )
26525	assertEquals ( 1, callCnt. get ( ) )
26526	assertEquals ( "INSERT INTO mycatalog.mytable (col3) VALUES (\\"myschema\\".\\"my_seq\\".nextval)", theSql )
26527	Assert. assertFalse ( "Metrics should be registered", this. metricRegistry. getTimers ( ). isEmpty ( ) )
26528	Assert. assertEquals ( aString, sut. getInstance ( ) )
26529	Assert. assertNotNull ( tasks )
26530	Assert. assertEquals ( 16 * iterations, lockedCounter. get ( ) )
26531	assertEquals ( new JSON ( ). set ( "value", "bar" ), json. getJSON ( "foo" ) )
26532	assertNull ( factory. getBaseSkin ( facesContext ). getParameter ( facesContext, Skin. GENERAL_BACKGROUND_COLOR ) )
26533	assertEquals ( map1, map2 )
26534	Assert. assertFalse ( fastMergerDecisionMaker. isFastMergePossible ( fileMetadata ) )
26535	assertThat ( e. getStatus ( ), equalTo ( Status. NOT_FOUND ) )
26536	assertTrue ( "Sun implementation took " + sunGap + " millisseconds and default implemetation took " + defaultGap + " millisseconds.", sunGap < defaultGap )
26537	assertThat ( rowsAffected, is ( 1 ) )
26538	Assert. assertTrue ( "Should have 0 event", events. size ( ) == 0 )
26539	assertEquals ( "Expected keyspace not found", "\\"" + STREAMING. STREAMING_KEYSPACE_NAME + "\\"", insert. getKeyspace ( ) )
26540	assertEquals ( "Faire action sur {{champ:variable:string}}", descriptor. regex )
26541	assertEquals ( "{a1:'v1',a2:'123',a4:'',b1:'true',b2:'123',b3:'null',c1:'v1',c2:'123',c4:''}", r )
